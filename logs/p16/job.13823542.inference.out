Starting at Fri Jan 20 20:03:02 CET 2023
Running on hosts: $SLURM_JOB_NODELIST
Running on $SLURM_JOB_NUM_NODES nodes.
Running $SLURM_NTASKS tasks.
CPUs on node: $SLURM_CPUS_ON_NODE.
Account: $SLURM_JOB_ACCOUNT
Job ID: $SLURM_JOB_ID
Job name: $SLURM_JOB_NAME
Node running script: $SLURMD_NODENAME
Submit host: $SLURM_SUBMIT_HOST
GPUS: $CUDA_VISIBLE_DEVICES or $SLURM_STEP_GPUS
Fri Jan 20 20:03:03 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     Off  | 00000000:AF:00.0 Off |                  Off |
| 32%   34C    P0    59W / 260W |      0MiB / 24220MiB |      4%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer/p16
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnUNet
Verifying environment variables:
Installing hidden layer and nnUnet
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-4uqjq1d2/hiddenlayer_4920d15e58ce4cb5a6aefd4b59cfb9ce
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.1-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.7-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0.tar.gz (151 kB)
Collecting scipy
  Using cached scipy-1.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.4 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24.tar.gz (61 kB)
Collecting numpy
  Using cached numpy-1.24.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)
Collecting sklearn
  Using cached sklearn-0.0.post1.tar.gz (3.6 kB)
  Using cached sklearn-0.0.tar.gz (1.1 kB)
Collecting SimpleITK
  Using cached SimpleITK-2.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (52.7 MB)
Collecting pandas
  Downloading pandas-1.5.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
Collecting requests
  Using cached requests-2.28.2-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-5.0.0-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.10.10-py3-none-any.whl (210 kB)
Collecting matplotlib
  Using cached matplotlib-3.6.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.8 MB)
Collecting monai
  Using cached monai-1.1.0-202212191849-py3-none-any.whl (1.2 MB)
Collecting einops
  Using cached einops-0.6.0-py3-none-any.whl (41 kB)
Collecting ipython
  Using cached ipython-8.8.0-py3-none-any.whl (775 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.4.0-py3-none-any.whl (26 kB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.4.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.4 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.5 MB)
Collecting future
  Using cached future-0.18.3.tar.gz (840 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.8 MB)
Collecting packaging>=20.0
  Using cached packaging-23.0-py3-none-any.whl (42 kB)
Collecting networkx>=2.2
  Using cached networkx-3.0-py3-none-any.whl (2.0 MB)
Collecting imageio>=2.4.1
  Using cached imageio-2.24.0-py3-none-any.whl (3.4 MB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.1-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.20-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
Collecting jedi>=0.16
  Using cached jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)
Collecting prompt-toolkit<3.1.0,>=3.0.11
  Using cached prompt_toolkit-3.0.36-py3-none-any.whl (386 kB)
Collecting stack-data
  Using cached stack_data-0.6.2-py3-none-any.whl (24 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.14.0-py3-none-any.whl (1.1 MB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting traitlets>=5
  Using cached traitlets-5.8.1-py3-none-any.whl (116 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting contourpy>=1.0.1
  Using cached contourpy-1.0.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting pyparsing>=2.2.1
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.38.0-py3-none-any.whl (965 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting setuptools
  Downloading setuptools-66.1.0-py3-none-any.whl (1.3 MB)
Collecting pytz>=2020.1
  Using cached pytz-2022.7.1-py2.py3-none-any.whl (499 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.12.7-py3-none-any.whl (155 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.14-py2.py3-none-any.whl (140 kB)
Collecting charset-normalizer<4,>=2
  Using cached charset_normalizer-3.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (198 kB)
Collecting joblib>=1.1.1
  Using cached joblib-1.2.0-py3-none-any.whl (297 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting executing>=1.2.0
  Using cached executing-1.2.0-py2.py3-none-any.whl (24 kB)
Collecting asttokens>=2.1.0
  Using cached asttokens-2.2.1-py2.py3-none-any.whl (26 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Using legacy 'setup.py install' for batchgenerators, since package 'wheel' is not installed.
Using legacy 'setup.py install' for future, since package 'wheel' is not installed.
Using legacy 'setup.py install' for medpy, since package 'wheel' is not installed.
Using legacy 'setup.py install' for sklearn, since package 'wheel' is not installed.
Installing collected packages: six, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pyparsing, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, contourpy, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
    Running setup.py install for future: started
    Running setup.py install for future: finished with status 'done'
    Running setup.py install for sklearn: started
    Running setup.py install for sklearn: finished with status 'done'
    Running setup.py install for medpy: started
    Running setup.py install for medpy: finished with status 'done'
    Running setup.py install for batchgenerators: started
    Running setup.py install for batchgenerators: finished with status 'done'
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.4.1 SimpleITK-2.2.1 argparse-1.4.0 asttokens-2.2.1 backcall-0.2.0 batchgenerators-0.24 certifi-2022.12.7 charset-normalizer-3.0.1 contourpy-1.0.7 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.7 einops-0.6.0 executing-1.2.0 fonttools-4.38.0 future-0.18.3 graphviz-0.20.1 idna-3.4 imageio-2.24.0 ipython-8.8.0 jedi-0.18.2 joblib-1.2.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.6.3 matplotlib-inline-0.1.6 medpy-0.4.0 monai-1.1.0 networkx-3.0 nibabel-5.0.0 nnunet numpy-1.24.1 packaging-23.0 pandas-1.5.3 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.4.0 prompt-toolkit-3.0.36 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.1 pygments-2.14.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.20 pytz-2022.7.1 requests-2.28.2 scikit-image-0.19.3 scikit-learn-1.2.0 scipy-1.10.0 setuptools-66.1.0 six-1.16.0 sklearn-0.0 stack-data-0.6.2 threadpoolctl-3.1.0 tifffile-2022.10.10 torch-1.12.0 tqdm-4.64.1 traceback2-1.4.0 traitlets-5.8.1 typing-extensions-4.4.0 unittest2-1.1.0 urllib3-1.26.14 wcwidth-0.2.6


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 11 unique case ids, here are some examples: ['panc_00020' 'panc_00025' 'panc_00023' 'panc_00020' 'panc_00027'
 'panc_00028' 'panc_00024' 'panc_00023' 'panc_00024' 'panc_00025']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 11
number of cases that still need to be predicted: 11
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2023-01-20 20:06:43.913446: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 1], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 1), stride=(1, 2, 1), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
[Timing] starting preprocessing generator took 2.3126602172851562e-05 seconds
starting prediction...
Preprocessing with 6 multithreads
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.16295671463012695 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.39243292808532715, transposing took 2.6702880859375e-05 and 6.198883056640625e-06, resampling/normalizing took 0.024092674255371094.
[Timing] preprocessing function took 0.42078280448913574 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 0.43031978607177734
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.8166303634643555 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 1.2270677089691162, transposing took 1.1444091796875e-05 and 1.430511474609375e-06, resampling/normalizing took 0.8184881210327148.
[Timing] preprocessing function took 2.0947957038879395 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 56.41835141181946
[Timing] This worker has ended successfully, no errors to report. It took 402.55630111694336 seconds.
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
[Timing] loading took 0.12100791931152344 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
computing Gaussian
done
[Timing prediction] mean of all patch predictions is 0.6166648268699646, std is 1.0302926681623377.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.17953437566757202, std is 0.0008248140170326511 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008527189493179321, std is 0.003171458703528992 
[Timing prediction] Total patch predictions is 6.437874794006348 seconds.
prediction done
[Timing] fold 0 prediction took 7.486936569213867 seconds
[Timing] loading another fold took 0.0445551872253418 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.224882572889328, std is 0.0031466902275901877.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.17939069867134094, std is 0.00039535033337611734 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00852629542350769, std is 0.002748350673141588 
[Timing prediction] Total patch predictions is 3.302455186843872 seconds.
prediction done
[Timing] another fold took 3.380418300628662 seconds
[Timing] loading another fold took 0.04462599754333496 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22518038749694824, std is 0.002053452170063381.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.17996430397033691, std is 0.00025128551960975704 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00849992036819458, std is 0.002761566732242414 
[Timing prediction] Total patch predictions is 3.3092143535614014 seconds.
prediction done
[Timing] another fold took 3.389376163482666 seconds
[Timing] loading another fold took 0.044567108154296875 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2249910831451416, std is 0.00036899328779459303.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1803658902645111, std is 0.00014037033997076973 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006948977708816528, std is 0.00012780872847176715 
[Timing prediction] Total patch predictions is 3.298496723175049 seconds.
prediction done
[Timing] another fold took 3.383775234222412 seconds
[Timing] loading another fold took 0.04477858543395996 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22629451751708984, std is 0.0013723478569939425.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18075031042099, std is 0.00029769253861868406 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007249623537063599, std is 0.00035759014561500825 
[Timing prediction] Total patch predictions is 3.3144099712371826 seconds.
prediction done
[Timing] another fold took 3.400308847427368 seconds
[Timing] normalising with folds took 0.002903461456298828 seconds
[Timing] transposing backwards took 2.8848648071289062e-05 seconds
[Timing] full prediction took 21.892433166503906 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
[Timing] loading took 0.04569411277770996 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2368232011795044, std is 0.0040589680636252635.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18079107999801636, std is 0.0003589413236058119 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007846087217330933, std is 0.00016272139800178905 
[Timing prediction] Total patch predictions is 3.4037766456604004 seconds.
prediction done
[Timing] fold 0 prediction took 3.4966909885406494 seconds
[Timing] loading another fold took 0.04668736457824707 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22956031560897827, std is 0.005315067605415591.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18143653869628906, std is 0.00037052180265568715 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006900817155838013, std is 0.0002718652317299487 
[Timing prediction] Total patch predictions is 3.3432304859161377 seconds.
prediction done
[Timing] another fold took 3.427506685256958 seconds
[Timing] loading another fold took 0.04329252243041992 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22703927755355835, std is 0.0005810410913569114.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1817857325077057, std is 0.00021904903811588753 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007055789232254028, std is 0.0003872779480585409 
[Timing prediction] Total patch predictions is 3.3271031379699707 seconds.
prediction done
[Timing] another fold took 3.40948748588562 seconds
[Timing] loading another fold took 0.042940616607666016 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22692346572875977, std is 0.0006802911942623651.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18202391266822815, std is 0.00018993612540865482 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006824672222137451, std is 0.00010279724353619032 
[Timing prediction] Total patch predictions is 3.3262276649475098 seconds.
prediction done
[Timing] another fold took 3.4078762531280518 seconds
[Timing] loading another fold took 0.04308199882507324 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22737890481948853, std is 0.0005046917240505629.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18253016471862793, std is 0.00010418530453537937 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006872653961181641, std is 0.00010447223560374731 
[Timing prediction] Total patch predictions is 3.334303140640259 seconds.
prediction done
[Timing] another fold took 3.416006565093994 seconds
[Timing] normalising with folds took 0.0027055740356445312 seconds
[Timing] transposing backwards took 2.8848648071289062e-05 seconds
[Timing] full prediction took 39.31664252281189 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
[Timing] loading took 0.045121192932128906 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23732927441596985, std is 0.005350346887952717.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1825087070465088, std is 0.0003077862428387113 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0089169442653656, std is 0.0025776340118741476 
[Timing prediction] Total patch predictions is 3.4301092624664307 seconds.
prediction done
[Timing] fold 0 prediction took 3.5030357837677 seconds
[Timing] loading another fold took 0.043564558029174805 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23590511083602905, std is 0.006143972147373816.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1827159821987152, std is 0.0001876811965317039 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0072113871574401855, std is 0.00040848747754726824 
[Timing prediction] Total patch predictions is 3.4067187309265137 seconds.
prediction done
[Timing] another fold took 3.48836350440979 seconds
[Timing] loading another fold took 0.043207406997680664 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2282072901725769, std is 0.0005913753673424595.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18307870626449585, std is 0.00015936809661167833 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006809443235397339, std is 8.815738034349082e-05 
[Timing prediction] Total patch predictions is 3.3448147773742676 seconds.
prediction done
[Timing] another fold took 3.426194667816162 seconds
[Timing] loading another fold took 0.04438495635986328 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22890648245811462, std is 0.001732979321586115.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1834065318107605, std is 0.00017450818011389697 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006871223449707031, std is 0.00016301372361814898 
[Timing prediction] Total patch predictions is 3.3535282611846924 seconds.
prediction done
[Timing] another fold took 3.4372503757476807 seconds
[Timing] loading another fold took 0.04374074935913086 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22892597317695618, std is 0.000851686382471784.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18387547135353088, std is 0.0005439994940063322 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006835073232650757, std is 0.00010775503926561375 
[Timing prediction] Total patch predictions is 3.3571431636810303 seconds.
prediction done
[Timing] another fold took 3.438513994216919 seconds
[Timing] normalising with folds took 0.0027191638946533203 seconds
[Timing] transposing backwards took 3.0517578125e-05 seconds
[Timing] full prediction took 56.862823486328125 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
[Timing] loading took 0.04501533508300781 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2308708131313324, std is 0.00411908644906524.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1840672492980957, std is 0.00017420421841636698 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006885737180709839, std is 0.00019685209549228855 
[Timing prediction] Total patch predictions is 3.37463641166687 seconds.
prediction done
[Timing] fold 0 prediction took 3.452012062072754 seconds
[Timing] loading another fold took 0.04327678680419922 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2296346127986908, std is 0.0007646611830186464.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18422922492027283, std is 0.00017733835062614967 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0068724751472473145, std is 0.00010214119826092846 
[Timing prediction] Total patch predictions is 3.3659396171569824 seconds.
prediction done
[Timing] another fold took 3.4481377601623535 seconds
[Timing] loading another fold took 0.04345846176147461 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.22980192303657532, std is 0.0007394791821434306.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18443980813026428, std is 0.00019860625183311907 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00688624382019043, std is 9.229139775297467e-05 
[Timing prediction] Total patch predictions is 3.369075059890747 seconds.
prediction done
[Timing] another fold took 3.4512290954589844 seconds
[Timing] loading another fold took 0.04337739944458008 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2298623025417328, std is 0.0008805415369955777.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1844143569469452, std is 0.000185394800581676 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006848394870758057, std is 0.00012297140278007236 
[Timing prediction] Total patch predictions is 3.3690505027770996 seconds.
prediction done
[Timing] another fold took 3.4511423110961914 seconds
[Timing] loading another fold took 0.04371237754821777 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23075070977210999, std is 0.0024542414849896923.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1845431625843048, std is 0.0001514113522174245 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00843629240989685, std is 0.0027573343867884907 
[Timing prediction] Total patch predictions is 3.3899056911468506 seconds.
prediction done
[Timing] another fold took 3.467188835144043 seconds
[Timing] normalising with folds took 0.002707242965698242 seconds
[Timing] transposing backwards took 2.2649765014648438e-05 seconds
[Timing] full prediction took 74.38424348831177 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
[Timing] loading took 0.044895172119140625 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23103830218315125, std is 0.0028393040166652364.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18444573879241943, std is 0.00019446141189591933 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008299499750137329, std is 0.0027483900178923485 
[Timing prediction] Total patch predictions is 3.3903236389160156 seconds.
prediction done
[Timing] fold 0 prediction took 3.461562395095825 seconds
[Timing] loading another fold took 0.04357266426086426 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23072007298469543, std is 0.001329569522339607.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18455401062965393, std is 0.00019789136807615154 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007036268711090088, std is 0.00034513754959960294 
[Timing prediction] Total patch predictions is 3.378533124923706 seconds.
prediction done
[Timing] another fold took 3.460968494415283 seconds
[Timing] loading another fold took 0.04327225685119629 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23028674721717834, std is 0.0008390803676570614.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18466955423355103, std is 0.0001431613611790729 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006960481405258179, std is 0.00027731152902785947 
[Timing prediction] Total patch predictions is 3.3753974437713623 seconds.
prediction done
[Timing] another fold took 3.4575564861297607 seconds
[Timing] loading another fold took 0.04364967346191406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2302902340888977, std is 0.0006795558330442441.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18482932448387146, std is 0.00026322852450008926 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006813853979110718, std is 0.00013399166237244893 
[Timing prediction] Total patch predictions is 3.3755176067352295 seconds.
prediction done
[Timing] another fold took 3.4571709632873535 seconds
[Timing] loading another fold took 0.04299473762512207 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23085886240005493, std is 0.0006277415258800987.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18510913848876953, std is 0.00015832263790734163 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007001727819442749, std is 0.0003521711559682469 
[Timing prediction] Total patch predictions is 3.3838086128234863 seconds.
prediction done
[Timing] another fold took 3.468189239501953 seconds
[Timing] normalising with folds took 0.002719879150390625 seconds
[Timing] transposing backwards took 2.7894973754882812e-05 seconds
[Timing] full prediction took 91.93976640701294 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
[Timing] loading took 0.04620170593261719 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23522716760635376, std is 0.005528484671050315.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18503504991531372, std is 0.00015628486757347503 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007284104824066162, std is 0.00016551138781742804 
[Timing prediction] Total patch predictions is 3.4204235076904297 seconds.
prediction done
[Timing] fold 0 prediction took 3.500478506088257 seconds
[Timing] loading another fold took 0.04317212104797363 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2309688925743103, std is 0.0007707203133088089.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1852777600288391, std is 0.0002644231807905951 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007114291191101074, std is 0.0001580711583382269 
[Timing prediction] Total patch predictions is 3.386941909790039 seconds.
prediction done
[Timing] another fold took 3.4690611362457275 seconds
[Timing] loading another fold took 0.043031930923461914 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2310476303100586, std is 0.0009310199493826862.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1852213740348816, std is 0.00021204446832938405 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00699952244758606, std is 0.0002865554637321836 
[Timing prediction] Total patch predictions is 3.386200428009033 seconds.
prediction done
[Timing] another fold took 3.4681122303009033 seconds
[Timing] loading another fold took 0.04306292533874512 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23094168305397034, std is 0.0009393893591409671.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1853160560131073, std is 0.00010787442445014736 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00681719183921814, std is 0.00010132943443224561 
[Timing prediction] Total patch predictions is 3.384648323059082 seconds.
prediction done
[Timing] another fold took 3.4665799140930176 seconds
[Timing] loading another fold took 0.04332304000854492 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2315961718559265, std is 0.0025058795537023708.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18538618087768555, std is 0.00012968261339640306 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008441954851150513, std is 0.0027515094802345913 
[Timing prediction] Total patch predictions is 3.4034478664398193 seconds.
prediction done
[Timing] another fold took 3.482569932937622 seconds
[Timing] normalising with folds took 0.002768278121948242 seconds
[Timing] transposing backwards took 2.1219253540039062e-05 seconds
[Timing] full prediction took 109.57805800437927 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
[Timing] loading took 0.04444694519042969 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23099243375990125, std is 0.0012849501430492272.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18532428211636012, std is 0.00023974764136459705 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00862014028761122, std is 0.003661133399505216 
[Timing prediction] Total patch predictions is 19.122442722320557 seconds.
prediction done
[Timing] fold 0 prediction took 19.37000870704651 seconds
[Timing] loading another fold took 0.04394173622131348 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23133264117770724, std is 0.001270482416889022.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.185589509540134, std is 0.0001981500066189181 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008636368645562066, std is 0.0035372058362136446 
[Timing prediction] Total patch predictions is 19.150432109832764 seconds.
prediction done
[Timing] another fold took 19.414952754974365 seconds
[Timing] loading another fold took 0.04396414756774902 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2316439045800103, std is 0.0015404386640858782.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1857730918460422, std is 0.00020340626136405174 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008694420920477973, std is 0.003695363272321723 
[Timing prediction] Total patch predictions is 19.175278902053833 seconds.
prediction done
[Timing] another fold took 19.441766262054443 seconds
[Timing] loading another fold took 0.04396200180053711 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23145643340216743, std is 0.0011856296253745845.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18585710525512694, std is 0.0003118373507621343 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008659309811062284, std is 0.0037187866434747387 
[Timing prediction] Total patch predictions is 19.16904854774475 seconds.
prediction done
[Timing] another fold took 19.43464422225952 seconds
[Timing] loading another fold took 0.04405522346496582 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23168847295973036, std is 0.0012111988987548222.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18596878051757812, std is 0.0002799120197131483 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008706914054022895, std is 0.0036866005192125414 
[Timing prediction] Total patch predictions is 19.18664836883545 seconds.
prediction done
[Timing] another fold took 19.45220160484314 seconds
[Timing] normalising with folds took 0.010324954986572266 seconds
[Timing] transposing backwards took 3.170967102050781e-05 seconds
[Timing] full prediction took 206.99328589439392 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
[Timing] loading took 0.04561901092529297 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23298722373114691, std is 0.0035824729519622644.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18613564703199598, std is 0.0002073901650530028 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00884871482849121, std is 0.0036543242503724164 
[Timing prediction] Total patch predictions is 19.259016752243042 seconds.
prediction done
[Timing] fold 0 prediction took 19.50611686706543 seconds
[Timing] loading another fold took 0.0445704460144043 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2319176091088189, std is 0.0010794746757808024.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18617556360032822, std is 0.00020117146191520426 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008766089545355902, std is 0.0036941216322489306 
[Timing prediction] Total patch predictions is 19.208937883377075 seconds.
prediction done
[Timing] another fold took 19.472036123275757 seconds
[Timing] loading another fold took 0.044409990310668945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23204417228698732, std is 0.0010823291599179102.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18615291913350424, std is 0.00023565351751233716 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008845954471164279, std is 0.003687046195412497 
[Timing prediction] Total patch predictions is 19.21721386909485 seconds.
prediction done
[Timing] another fold took 19.481345653533936 seconds
[Timing] loading another fold took 0.044791460037231445 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23222769631279838, std is 0.0011759467699593367.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18619689411587184, std is 0.00027258396734383054 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008824708726671007, std is 0.0036823866243309643 
[Timing prediction] Total patch predictions is 19.226513385772705 seconds.
prediction done
[Timing] another fold took 19.48999571800232 seconds
[Timing] loading another fold took 0.044888973236083984 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.4320528507232666 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.6677346229553223, transposing took 2.3603439331054688e-05 and 6.9141387939453125e-06, resampling/normalizing took 0.8958146572113037.
[Timing] preprocessing function took 1.5676939487457275 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 1.5805861949920654
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.7899312973022461 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 1.0275557041168213, transposing took 1.71661376953125e-05 and 1.430511474609375e-06, resampling/normalizing took 0.6715576648712158.
[Timing] preprocessing function took 1.7613813877105713 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 72.7287266254425
[Timing] This worker has ended successfully, no errors to report. It took 500.29861187934875 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.6107523441314697 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 428, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 428, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 486, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 1.6331167221069336, transposing took 2.5987625122070312e-05 and 6.198883056640625e-06, resampling/normalizing took 3.9948813915252686.
[Timing] preprocessing function took 5.651286840438843 seconds
(1, 51, 486, 582)
[Timing] total time for preprocessing this item is 109.51262736320496
[Timing] This worker has ended successfully, no errors to report. It took 500.39374566078186 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.2054905891418457 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.44014692306518555, transposing took 2.1457672119140625e-05 and 5.9604644775390625e-06, resampling/normalizing took 1.383162260055542.
[Timing] preprocessing function took 1.8286449909210205 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 21.910309553146362
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.4765050411224365 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 384, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 384, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 436, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.9532322883605957, transposing took 1.2636184692382812e-05 and 1.6689300537109375e-06, resampling/normalizing took 3.3887808322906494.
[Timing] preprocessing function took 4.3762526512146 seconds
(1, 51, 436, 582)
[Timing] total time for preprocessing this item is 185.16221356391907
[Timing] This worker has ended successfully, no errors to report. It took 518.2669761180878 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.2052476406097412 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.5889885425567627, transposing took 2.1219253540039062e-05 and 5.9604644775390625e-06, resampling/normalizing took 1.2826862335205078.
[Timing] preprocessing function took 1.8759193420410156 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 39.263195753097534
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.0624165534973145 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 444, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 444, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 505, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 1.5630741119384766, transposing took 1.2159347534179688e-05 and 2.1457672119140625e-06, resampling/normalizing took 3.929326057434082.
[Timing] preprocessing function took 5.5262110233306885 seconds
(1, 51, 505, 582)
[Timing] total time for preprocessing this item is 265.55305576324463
[Timing] This worker has ended successfully, no errors to report. It took 518.231687784195 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1565537452697754 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 434, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 434, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 493, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.6988728046417236, transposing took 1.9788742065429688e-05 and 6.4373016357421875e-06, resampling/normalizing took 4.030508995056152.
[Timing] preprocessing function took 4.753168344497681 seconds
(1, 51, 493, 582)
[Timing] total time for preprocessing this item is 91.90581750869751
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.19456815719604492 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.40027785301208496, transposing took 1.5735626220703125e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.6415355205535889.
[Timing] preprocessing function took 1.090939998626709 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 408.518878698349
[Timing] This worker has ended successfully, no errors to report. It took 518.2541470527649 seconds.
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06758284568786621 seconds
[Timing] - Saving the segmentation took 0.039150238037109375 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.2971217632293701 seconds
[Timing] - Saving the segmentation took 0.02819228172302246 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30605340003967285 seconds
[Timing] - Saving the segmentation took 0.02722764015197754 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.8623509407043457 seconds
[Timing] - Saving the segmentation took 0.052431583404541016 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.65073561668396 seconds
[Timing] - Saving the segmentation took 0.052214860916137695 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.2959575653076172 seconds
[Timing] - Saving the segmentation took 0.026993513107299805 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3134429454803467 seconds
[Timing] - Saving the segmentation took 0.041014671325683594 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.302828311920166 seconds
[Timing] - Saving the segmentation took 0.02750110626220703 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30530238151550293 seconds
[Timing] - Saving the segmentation took 0.028783321380615234 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.846475601196289 seconds
[Timing] - Saving the segmentation took 0.05239558219909668 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.901674509048462 seconds
[Timing] - Saving the segmentation took 0.051962852478027344 seconds
(1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23228282928466798, std is 0.00110286395620487.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18633884323967828, std is 0.00027951030772947245 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008861753675672743, std is 0.0036738415164999662 
[Timing prediction] Total patch predictions is 19.237035036087036 seconds.
prediction done
[Timing] another fold took 19.50021529197693 seconds
[Timing] normalising with folds took 0.010344743728637695 seconds
[Timing] transposing backwards took 3.3855438232421875e-05 seconds
[Timing] full prediction took 304.80033469200134 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
[Timing] loading took 0.04578089714050293 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.233322630988227, std is 0.003768140452586988.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18623414039611816, std is 0.0002694394343407606 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008771583769056531, std is 0.0034393642336759214 
[Timing prediction] Total patch predictions is 19.275091648101807 seconds.
prediction done
[Timing] fold 0 prediction took 19.498441696166992 seconds
[Timing] loading another fold took 0.0444033145904541 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23239599333869088, std is 0.001508449869452773.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18630148039923775, std is 0.0002025972353761441 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008719174067179362, std is 0.003389675214449979 
[Timing prediction] Total patch predictions is 19.23402428627014 seconds.
prediction done
[Timing] another fold took 19.47359848022461 seconds
[Timing] loading another fold took 0.04497194290161133 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23207912974887424, std is 0.0010856023475740108.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18629846572875977, std is 0.0002760741345822338 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008689578374226887, std is 0.0032815347031629654 
[Timing prediction] Total patch predictions is 19.21830177307129 seconds.
prediction done
[Timing] another fold took 19.457814931869507 seconds
[Timing] loading another fold took 0.04467916488647461 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23225309054056803, std is 0.0011463063863396243.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18616583082411026, std is 0.0001819074062457163 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008742719226413303, std is 0.003280476632725903 
[Timing prediction] Total patch predictions is 19.222572326660156 seconds.
prediction done
[Timing] another fold took 19.462814331054688 seconds
[Timing] loading another fold took 0.04490542411804199 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23205527199639214, std is 0.001231308996538236.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1862993081410726, std is 0.0003168653753353274 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00883438852098253, std is 0.0032766996734841583 
[Timing prediction] Total patch predictions is 19.223774909973145 seconds.
prediction done
[Timing] another fold took 19.463042497634888 seconds
[Timing] normalising with folds took 0.009300470352172852 seconds
[Timing] transposing backwards took 3.123283386230469e-05 seconds
[Timing] full prediction took 402.5067789554596 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
[Timing] loading took 0.04551410675048828 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23323679500155978, std is 0.0038843746508499958.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1863192187415229, std is 0.000305289073433748 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008835061391194662, std is 0.003993665870087896 
[Timing prediction] Total patch predictions is 19.27788758277893 seconds.
prediction done
[Timing] fold 0 prediction took 19.533939838409424 seconds
[Timing] loading another fold took 0.0453646183013916 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23218242327372232, std is 0.0011138928626037382.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.1862236499786377, std is 0.00021291373535170294 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008911699718899197, std is 0.003856232831911952 
[Timing prediction] Total patch predictions is 19.22958731651306 seconds.
prediction done
[Timing] another fold took 19.502350568771362 seconds
[Timing] loading another fold took 0.04492831230163574 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23217179510328506, std is 0.0009885686906500259.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18620963096618653, std is 0.0002163295654300625 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008963818020290799, std is 0.003879348682463291 
[Timing prediction] Total patch predictions is 19.23082208633423 seconds.
prediction done
[Timing] another fold took 19.503725290298462 seconds
[Timing] loading another fold took 0.044705867767333984 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23229481909010147, std is 0.0019250050262170468.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18625601132710776, std is 0.00021476490693229228 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008859830432467991, std is 0.0038954051026163132 
[Timing prediction] Total patch predictions is 19.233776330947876 seconds.
prediction done
[Timing] another fold took 19.50862407684326 seconds
[Timing] loading another fold took 0.04480719566345215 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23206032647026908, std is 0.001040193526521652.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18623549673292372, std is 0.0002485193640425587 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008848052554660374, std is 0.0038473383106887088 
[Timing prediction] Total patch predictions is 19.22175431251526 seconds.
prediction done
[Timing] another fold took 19.49493408203125 seconds
[Timing] normalising with folds took 0.010706186294555664 seconds
[Timing] transposing backwards took 3.3855438232421875e-05 seconds
[Timing] full prediction took 500.39944291114807 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
[Timing] loading took 0.04564714431762695 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2400486171245575, std is 0.006711778486488044.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18639767169952393, std is 0.0006358292061099022 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008248120546340942, std is 0.0015405098580283762 
[Timing prediction] Total patch predictions is 3.4776229858398438 seconds.
prediction done
[Timing] fold 0 prediction took 3.5558948516845703 seconds
[Timing] loading another fold took 0.04445815086364746 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23238950967788696, std is 0.0009028704124837985.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18681111931800842, std is 0.0008734408590441928 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007241308689117432, std is 0.00016292734218647823 
[Timing prediction] Total patch predictions is 3.4115939140319824 seconds.
prediction done
[Timing] another fold took 3.49682354927063 seconds
[Timing] loading another fold took 0.04457712173461914 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23257756233215332, std is 0.0007368767929073801.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18651354312896729, std is 0.0002745199445342914 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00699460506439209, std is 0.0002079890222314702 
[Timing prediction] Total patch predictions is 3.408737897872925 seconds.
prediction done
[Timing] another fold took 3.490696668624878 seconds
[Timing] loading another fold took 0.044049739837646484 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.23295682668685913, std is 0.002431078312735941.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18616983294487, std is 0.0002548851405994369 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008332937955856323, std is 0.0024915418930446837 
[Timing prediction] Total patch predictions is 3.4197328090667725 seconds.
prediction done
[Timing] another fold took 3.496415853500366 seconds
[Timing] loading another fold took 0.04462385177612305 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.2329322099685669, std is 0.002370894134297882.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.18655365705490112, std is 0.0005129767124167845 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008365809917449951, std is 0.0024431348152358875 
[Timing prediction] Total patch predictions is 3.4228718280792236 seconds.
prediction done
[Timing] another fold took 3.5016775131225586 seconds
[Timing] normalising with folds took 0.002777099609375 seconds
[Timing] transposing backwards took 2.3365020751953125e-05 seconds
[Timing] full prediction took 518.2883396148682 seconds
[Timing] Another preprocessing process done, it took 518.3213832378387 seconds
[Timing] Another preprocessing process done, it took 518.3214201927185 seconds
[Timing] Another preprocessing process done, it took 518.3465843200684 seconds
[Timing] Another preprocessing process done, it took 518.3466174602509 seconds
[Timing] Another preprocessing process done, it took 518.3466336727142 seconds
[Timing] Another preprocessing process done, it took 518.346649646759 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
[Timing] postprocessing took 0.8134753704071045 seconds
Program finished with exit code 0 at: Fri Jan 20 20:15:26 CET 2023
