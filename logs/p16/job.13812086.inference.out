Starting at Wed Jan 18 12:47:32 CET 2023
Running on hosts: $SLURM_JOB_NODELIST
Running on $SLURM_JOB_NUM_NODES nodes.
Running $SLURM_NTASKS tasks.
CPUs on node: $SLURM_CPUS_ON_NODE.
Account: $SLURM_JOB_ACCOUNT
Job ID: $SLURM_JOB_ID
Job name: $SLURM_JOB_NAME
Node running script: $SLURMD_NODENAME
Submit host: $SLURM_SUBMIT_HOST
GPUS: $CUDA_VISIBLE_DEVICES or $SLURM_STEP_GPUS
Wed Jan 18 12:47:33 2023       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     Off  | 00000000:D8:00.0 Off |                  Off |
| 33%   34C    P0    58W / 260W |      0MiB / 24220MiB |      4%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer/p16
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnUNet
Verifying environment variables:
Installing hidden layer and nnUnet
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-0yf6al73/hiddenlayer_9558ae770cba4cac94b667c455061bae
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.1-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Downloading dicom2nifti-2.4.7-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0.tar.gz (151 kB)
Collecting scipy
  Downloading scipy-1.10.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (34.4 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24.tar.gz (61 kB)
Collecting numpy
  Downloading numpy-1.24.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)
Collecting sklearn
  Using cached sklearn-0.0.post1.tar.gz (3.6 kB)
Collecting SimpleITK
  Using cached SimpleITK-2.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (52.7 MB)
Collecting pandas
  Using cached pandas-1.5.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
Collecting requests
  Downloading requests-2.28.2-py3-none-any.whl (62 kB)
Collecting nibabel
  Downloading nibabel-5.0.0-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.10.10-py3-none-any.whl (210 kB)
Collecting matplotlib
  Downloading matplotlib-3.6.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.8 MB)
Collecting monai
  Using cached monai-1.1.0-202212191849-py3-none-any.whl (1.2 MB)
Collecting einops
  Using cached einops-0.6.0-py3-none-any.whl (41 kB)
Collecting ipython
  Downloading ipython-8.8.0-py3-none-any.whl (775 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.4.0-py3-none-any.whl (26 kB)
Collecting pillow>=7.1.2
  Downloading Pillow-9.4.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.4 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.5 MB)
Collecting future
  Downloading future-0.18.3.tar.gz (840 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting imageio>=2.4.1
  Downloading imageio-2.24.0-py3-none-any.whl (3.4 MB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.8 MB)
Collecting packaging>=20.0
  Downloading packaging-23.0-py3-none-any.whl (42 kB)
Collecting networkx>=2.2
  Downloading networkx-3.0-py3-none-any.whl (2.0 MB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.1-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.20-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
Collecting pygments>=2.4.0
  Downloading Pygments-2.14.0-py3-none-any.whl (1.1 MB)
Collecting stack-data
  Using cached stack_data-0.6.2-py3-none-any.whl (24 kB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting prompt-toolkit<3.1.0,>=3.0.11
  Using cached prompt_toolkit-3.0.36-py3-none-any.whl (386 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)
Collecting traitlets>=5
  Downloading traitlets-5.8.1-py3-none-any.whl (116 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Downloading wcwidth-0.2.6-py2.py3-none-any.whl (29 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting pyparsing>=2.2.1
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.38.0-py3-none-any.whl (965 kB)
Collecting contourpy>=1.0.1
  Downloading contourpy-1.0.7-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (300 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting setuptools
  Downloading setuptools-66.0.0-py3-none-any.whl (1.3 MB)
Collecting pytz>=2020.1
  Downloading pytz-2022.7.1-py2.py3-none-any.whl (499 kB)
Collecting charset-normalizer<4,>=2
  Downloading charset_normalizer-3.0.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (198 kB)
Collecting urllib3<1.27,>=1.21.1
  Downloading urllib3-1.26.14-py2.py3-none-any.whl (140 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.12.7-py3-none-any.whl (155 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Collecting joblib>=1.1.1
  Using cached joblib-1.2.0-py3-none-any.whl (297 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting asttokens>=2.1.0
  Using cached asttokens-2.2.1-py2.py3-none-any.whl (26 kB)
Collecting executing>=1.2.0
  Using cached executing-1.2.0-py2.py3-none-any.whl (24 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Using legacy 'setup.py install' for batchgenerators, since package 'wheel' is not installed.
Using legacy 'setup.py install' for future, since package 'wheel' is not installed.
Using legacy 'setup.py install' for medpy, since package 'wheel' is not installed.
Using legacy 'setup.py install' for sklearn, since package 'wheel' is not installed.
Installing collected packages: six, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pyparsing, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, contourpy, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
    Running setup.py install for future: started
    Running setup.py install for future: finished with status 'done'
    Running setup.py install for sklearn: started
    Running setup.py install for sklearn: finished with status 'done'
    Running setup.py install for medpy: started
    Running setup.py install for medpy: finished with status 'done'
    Running setup.py install for batchgenerators: started
    Running setup.py install for batchgenerators: finished with status 'done'
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.4.1 SimpleITK-2.2.1 argparse-1.4.0 asttokens-2.2.1 backcall-0.2.0 batchgenerators-0.24 certifi-2022.12.7 charset-normalizer-3.0.1 contourpy-1.0.7 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.7 einops-0.6.0 executing-1.2.0 fonttools-4.38.0 future-0.18.3 graphviz-0.20.1 idna-3.4 imageio-2.24.0 ipython-8.8.0 jedi-0.18.2 joblib-1.2.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.6.3 matplotlib-inline-0.1.6 medpy-0.4.0 monai-1.1.0 networkx-3.0 nibabel-5.0.0 nnunet numpy-1.24.1 packaging-23.0 pandas-1.5.2 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.4.0 prompt-toolkit-3.0.36 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.1 pygments-2.14.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.20 pytz-2022.7.1 requests-2.28.2 scikit-image-0.19.3 scikit-learn-1.2.0 scipy-1.10.0 setuptools-66.0.0 six-1.16.0 sklearn-0.0.post1 stack-data-0.6.2 threadpoolctl-3.1.0 tifffile-2022.10.10 torch-1.12.0 tqdm-4.64.1 traceback2-1.4.0 traitlets-5.8.1 typing-extensions-4.4.0 unittest2-1.1.0 urllib3-1.26.14 wcwidth-0.2.6


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 12 unique case ids, here are some examples: ['panc_00022' 'panc_00023' 'panc_00027' 'panc_00027' 'panc_00018'
 'panc_00026' 'panc_00028' 'panc_00021' 'panc_00029' 'panc_00018']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 12
number of cases that still need to be predicted: 12
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2023-01-18 12:52:01.261349: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 1], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 1), stride=(1, 2, 1), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
[Timing] starting preprocessing generator took 2.384185791015625e-05 seconds
starting prediction...
Preprocessing with 6 multithreads
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
[Timing] loading took 0.1282055377960205 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
computing Gaussian
done
[Timing prediction] mean of all patch predictions is 9.19318038225174, std is 23.53865981603923.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.23040500283241272, std is 0.017673577197647037 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008490830659866333, std is 0.0027958151741380535 
[Timing prediction] Total patch predictions is 75.45665884017944 seconds.
prediction done
[Timing] fold 0 prediction took 76.44456195831299 seconds
[Timing] loading another fold took 0.04434704780578613 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3002041280269623, std is 0.002597325374775056.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2387847900390625, std is 0.0011815080340848542 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008547157049179077, std is 0.0028337916519469413 
[Timing prediction] Total patch predictions is 4.380340814590454 seconds.
prediction done
[Timing] another fold took 4.458548545837402 seconds
[Timing] loading another fold took 0.04448676109313965 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3010273873806, std is 0.0009085297447474212.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24005398154258728, std is 0.000756652096293984 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0077928900718688965, std is 0.0007952868574591771 
[Timing prediction] Total patch predictions is 4.391046047210693 seconds.
prediction done
[Timing] another fold took 4.476979970932007 seconds
[Timing] loading another fold took 0.04397177696228027 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3028082251548767, std is 0.0008321180952682957.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24104031920433044, std is 0.0007970316333869726 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007777601480484009, std is 0.0010663030192644871 
[Timing prediction] Total patch predictions is 4.413060903549194 seconds.
prediction done
[Timing] another fold took 4.498032093048096 seconds
[Timing] loading another fold took 0.04417300224304199 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3045819401741028, std is 0.0009688241767707479.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2428203523159027, std is 0.0006529302053202147 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008059948682785034, std is 0.0013064384884537848 
[Timing prediction] Total patch predictions is 4.443748950958252 seconds.
prediction done
[Timing] another fold took 4.528113603591919 seconds
[Timing] normalising with folds took 0.0029489994049072266 seconds
[Timing] transposing backwards took 3.218650817871094e-05 seconds
[Timing] full prediction took 96.37487363815308 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
[Timing] loading took 0.04600715637207031 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31586894392967224, std is 0.004742932435561005.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2437056601047516, std is 0.0008437638056541429 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00871458649635315, std is 0.0021185010061588044 
[Timing prediction] Total patch predictions is 4.5463972091674805 seconds.
prediction done
[Timing] fold 0 prediction took 4.624969959259033 seconds
[Timing] loading another fold took 0.0439915657043457 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3075324296951294, std is 0.0020497904262959327.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2450445592403412, std is 0.0005403747356812798 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008496731519699097, std is 0.0029383738339602877 
[Timing prediction] Total patch predictions is 4.4886415004730225 seconds.
prediction done
[Timing] another fold took 4.569757461547852 seconds
[Timing] loading another fold took 0.04434657096862793 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3079555630683899, std is 0.0008841372944872065.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24571281671524048, std is 0.0011071062012511133 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00790780782699585, std is 0.0015204717187743133 
[Timing prediction] Total patch predictions is 4.492659091949463 seconds.
prediction done
[Timing] another fold took 4.577911138534546 seconds
[Timing] loading another fold took 0.04385709762573242 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30979207158088684, std is 0.0013143876385981312.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24819517135620117, std is 0.0015738055057993958 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007832705974578857, std is 0.001589510729876584 
[Timing prediction] Total patch predictions is 4.526611328125 seconds.
prediction done
[Timing] another fold took 4.61185884475708 seconds
[Timing] loading another fold took 0.043955326080322266 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 8], [0, 64], [0, 96]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3108995258808136, std is 0.0008879481114901435.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2500920593738556, std is 0.0011811215346957385 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00778689980506897, std is 0.0015813962514957638 
[Timing prediction] Total patch predictions is 4.550279140472412 seconds.
prediction done
[Timing] another fold took 4.63543176651001 seconds
[Timing] normalising with folds took 0.002924203872680664 seconds
[Timing] transposing backwards took 2.765655517578125e-05 seconds
[Timing] full prediction took 119.66245865821838 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
[Timing] loading took 0.04510235786437988 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3131883144378662, std is 0.0019514346966304145.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24973547458648682, std is 0.0028072912588269212 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008091956377029419, std is 0.0019519170118762995 
[Timing prediction] Total patch predictions is 4.568174600601196 seconds.
prediction done
[Timing] fold 0 prediction took 4.642881870269775 seconds
[Timing] loading another fold took 0.04387068748474121 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3133589029312134, std is 0.0026793704430382393.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2509390115737915, std is 0.004399741851799838 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006916850805282593, std is 0.00012741582388884075 
[Timing prediction] Total patch predictions is 4.56976580619812 seconds.
prediction done
[Timing] another fold took 4.6517181396484375 seconds
[Timing] loading another fold took 0.04379677772521973 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31454968452453613, std is 0.001975194482132056.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25237998366355896, std is 0.0021466649149172574 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007116973400115967, std is 0.00027842933532631653 
[Timing prediction] Total patch predictions is 4.592421293258667 seconds.
prediction done
[Timing] another fold took 4.675492525100708 seconds
[Timing] loading another fold took 0.043904781341552734 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3136403262615204, std is 0.004963470505784183.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2519948482513428, std is 0.004497777668435812 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006894171237945557, std is 0.00012803503636337884 
[Timing prediction] Total patch predictions is 4.580281496047974 seconds.
prediction done
[Timing] another fold took 4.6620378494262695 seconds
[Timing] loading another fold took 0.04386639595031738 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3145046532154083, std is 0.003956224280977119.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2530537247657776, std is 0.0060516467786904445 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006894350051879883, std is 0.00012035109158940026 
[Timing prediction] Total patch predictions is 4.595669269561768 seconds.
prediction done
[Timing] another fold took 4.677368879318237 seconds
[Timing] normalising with folds took 0.002744436264038086 seconds
[Timing] transposing backwards took 2.5510787963867188e-05 seconds
[Timing] full prediction took 143.23185443878174 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
[Timing] loading took 0.045218467712402344 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3200730085372925, std is 0.005344855684588397.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2531779110431671, std is 0.002219954485213746 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007662057876586914, std is 0.0004014505351951053 
[Timing prediction] Total patch predictions is 4.6473708152771 seconds.
prediction done
[Timing] fold 0 prediction took 4.725964784622192 seconds
[Timing] loading another fold took 0.04462289810180664 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3210696578025818, std is 0.0053649505321136165.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25115811824798584, std is 0.0038226929237833713 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00861772894859314, std is 0.0030383220337358665 
[Timing prediction] Total patch predictions is 4.646827220916748 seconds.
prediction done
[Timing] another fold took 4.725245237350464 seconds
[Timing] loading another fold took 0.044721364974975586 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31735679507255554, std is 0.0019718733736854236.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25234219431877136, std is 0.0032293558899565106 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007938921451568604, std is 0.0012948742774637483 
[Timing prediction] Total patch predictions is 4.621164083480835 seconds.
prediction done
[Timing] another fold took 4.701953172683716 seconds
[Timing] loading another fold took 0.04459786415100098 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31591102480888367, std is 0.00175579617849986.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2532424330711365, std is 0.003248805581996493 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007670074701309204, std is 0.0013682116154288592 
[Timing prediction] Total patch predictions is 4.61464524269104 seconds.
prediction done
[Timing] another fold took 4.697096109390259 seconds
[Timing] loading another fold took 0.04480457305908203 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31673404574394226, std is 0.003065180527399897.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25235527753829956, std is 0.0017925574270479172 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007815361022949219, std is 0.001562296387977143 
[Timing prediction] Total patch predictions is 4.615297794342041 seconds.
prediction done
[Timing] another fold took 4.697616100311279 seconds
[Timing] normalising with folds took 0.002764463424682617 seconds
[Timing] transposing backwards took 2.574920654296875e-05 seconds
[Timing] full prediction took 167.0367567539215 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
[Timing] loading took 0.04596209526062012 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3153192102909088, std is 0.002662690662897853.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.252160906791687, std is 0.002163935470217364 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008144110441207886, std is 0.001851622719038362 
[Timing prediction] Total patch predictions is 4.60505223274231 seconds.
prediction done
[Timing] fold 0 prediction took 4.680402517318726 seconds
[Timing] loading another fold took 0.04466414451599121 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3158181309700012, std is 0.0034088524524604007.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2524775564670563, std is 0.004012284838456904 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007667899131774902, std is 0.0013072617879983167 
[Timing prediction] Total patch predictions is 4.60776424407959 seconds.
prediction done
[Timing] another fold took 4.691246509552002 seconds
[Timing] loading another fold took 0.04537010192871094 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3160942494869232, std is 0.0030201556955211533.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25271841883659363, std is 0.003178212893576642 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006965458393096924, std is 0.00016873184316692791 
[Timing prediction] Total patch predictions is 4.606287717819214 seconds.
prediction done
[Timing] another fold took 4.688940763473511 seconds
[Timing] loading another fold took 0.044423580169677734 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31690099835395813, std is 0.003976279879081137.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2527036964893341, std is 0.0034915811460247775 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006971210241317749, std is 0.00021666064344858763 
[Timing prediction] Total patch predictions is 4.612663984298706 seconds.
prediction done
[Timing] another fold took 4.694622039794922 seconds
[Timing] loading another fold took 0.0442807674407959 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3163359463214874, std is 0.0023500686154038154.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2512287199497223, std is 0.0024903099376051866 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0069083571434021, std is 0.00013922561836486285 
[Timing prediction] Total patch predictions is 4.5958335399627686 seconds.
prediction done
[Timing] another fold took 4.67784309387207 seconds
[Timing] normalising with folds took 0.002791881561279297 seconds
[Timing] transposing backwards took 2.8133392333984375e-05 seconds
[Timing] full prediction took 190.72557950019836 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
[Timing] loading took 0.04720044136047363 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31691834330558777, std is 0.00440404996755823.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25051239132881165, std is 0.0026172731828912 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0071814656257629395, std is 0.0005481845336824332 
[Timing prediction] Total patch predictions is 4.596947193145752 seconds.
prediction done
[Timing] fold 0 prediction took 4.675199747085571 seconds
[Timing] loading another fold took 0.044336557388305664 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3158542811870575, std is 0.004988663164080653.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25085675716400146, std is 0.0028433562993377508 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.006855219602584839, std is 0.00012382508466709914 
[Timing prediction] Total patch predictions is 4.588578462600708 seconds.
prediction done
[Timing] another fold took 4.671687841415405 seconds
[Timing] loading another fold took 0.04425525665283203 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3144437074661255, std is 0.0023536884966164446.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2518100142478943, std is 0.0024735934870787775 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007726788520812988, std is 0.0012500366192582397 
[Timing prediction] Total patch predictions is 4.5919013023376465 seconds.
prediction done
[Timing] another fold took 4.673512935638428 seconds
[Timing] loading another fold took 0.04465651512145996 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31485745310783386, std is 0.002212543841486543.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25101545453071594, std is 0.003034380565580355 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007685989141464233, std is 0.0012318959932318607 
[Timing prediction] Total patch predictions is 4.5885279178619385 seconds.
prediction done
[Timing] another fold took 4.6696741580963135 seconds
[Timing] loading another fold took 0.044866085052490234 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31381797790527344, std is 0.004017826462410199.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.25007548928260803, std is 0.0039317748242480325 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007854998111724854, std is 0.001287627715635878 
[Timing prediction] Total patch predictions is 4.574044466018677 seconds.
prediction done
[Timing] another fold took 4.65546989440918 seconds
[Timing] normalising with folds took 0.002774477005004883 seconds
[Timing] transposing backwards took 2.193450927734375e-05 seconds
[Timing] full prediction took 214.32915496826172 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
[Timing] loading took 0.04525446891784668 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3139519532521566, std is 0.0024689178258267166.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24947892294989693, std is 0.0022880271175086523 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008748128679063586, std is 0.0037728340638969304 
[Timing prediction] Total patch predictions is 25.748377323150635 seconds.
prediction done
[Timing] fold 0 prediction took 25.99800753593445 seconds
[Timing] loading another fold took 0.045084238052368164 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31166846487257216, std is 0.0015942165300828722.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24783263206481934, std is 0.0014767446009513342 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008734883202446832, std is 0.003737916115257224 
[Timing prediction] Total patch predictions is 25.57090473175049 seconds.
prediction done
[Timing] another fold took 25.83849000930786 seconds
[Timing] loading another fold took 0.04521346092224121 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.31020763715108235, std is 0.001066915316822383.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24705448150634765, std is 0.0012463263101197503 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008812099032931857, std is 0.003783789141188827 
[Timing prediction] Total patch predictions is 25.47364592552185 seconds.
prediction done
[Timing] another fold took 25.740266799926758 seconds
[Timing] loading another fold took 0.044660329818725586 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30988070170084636, std is 0.0012433527936007822.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24670420222812228, std is 0.0009797932979213365 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008684349060058594, std is 0.0036903234468254583 
[Timing prediction] Total patch predictions is 25.437416315078735 seconds.
prediction done
[Timing] another fold took 25.704736948013306 seconds
[Timing] loading another fold took 0.04519176483154297 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 493, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 118, 237], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30988123681810165, std is 0.0010817798723861808.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24658034642537435, std is 0.0010203857579968215 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008826918072170682, std is 0.0037677242390268925 
[Timing prediction] Total patch predictions is 25.438307762145996 seconds.
prediction done
[Timing] another fold took 25.706039667129517 seconds
[Timing] normalising with folds took 0.010442972183227539 seconds
[Timing] transposing backwards took 3.147125244140625e-05 seconds
[Timing] full prediction took 343.6381325721741 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
[Timing] loading took 0.04623818397521973 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.310389338599311, std is 0.0036590630543451306.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.2467416180504693, std is 0.0008916980047185168 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00880020989312066, std is 0.0033644253035235777 
[Timing prediction] Total patch predictions is 25.467150688171387 seconds.
prediction done
[Timing] fold 0 prediction took 25.68948006629944 seconds
[Timing] loading another fold took 0.04426431655883789 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3092527124616835, std is 0.001080638770510284.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24684062004089355, std is 0.0008406953249210264 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008831744723849826, std is 0.003277132999451241 
[Timing prediction] Total patch predictions is 25.42190384864807 seconds.
prediction done
[Timing] another fold took 25.660428762435913 seconds
[Timing] loading another fold took 0.04551863670349121 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.309566518995497, std is 0.0013240705930512141.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24635472297668456, std is 0.0007371233999879476 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008824290169609918, std is 0.003293279360648043 
[Timing prediction] Total patch predictions is 25.41383123397827 seconds.
prediction done
[Timing] another fold took 25.6529860496521 seconds
[Timing] loading another fold took 0.045110464096069336 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3093059009975857, std is 0.0010011044116602181.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24608245955573188, std is 0.0006977300826214556 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008876042895846897, std is 0.0033385567192834686 
[Timing prediction] Total patch predictions is 25.39220118522644 seconds.
prediction done
[Timing] another fold took 25.632200956344604 seconds
[Timing] loading another fold took 0.045163869857788086 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.2027122974395752 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 1.4280521869659424, transposing took 1.9073486328125e-05 and 6.67572021484375e-06, resampling/normalizing took 0.08609747886657715.
[Timing] preprocessing function took 1.518310785293579 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 1.5289990901947021
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.9040389060974121 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 1.1642358303070068, transposing took 1.0013580322265625e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.6666958332061768.
[Timing] preprocessing function took 1.8989906311035156 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 165.483891248703
[Timing] This worker has ended successfully, no errors to report. It took 624.2059993743896 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.2077717781066895 seconds
before crop: (1, 40, 288, 288) after crop: (1, 40, 288, 288) spacing: [3.        0.7638889 0.7638889] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.       , 0.7638889, 0.7638889]), 'spacing_transposed': array([3.       , 0.7638889, 0.7638889]), 'data.shape (data is transposed)': (1, 40, 288, 288)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 1.3911364078521729, transposing took 1.9311904907226562e-05 and 7.62939453125e-06, resampling/normalizing took 0.721107006072998.
[Timing] preprocessing function took 2.1237142086029053 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 2.124060869216919
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.887601613998413 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 384, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 384, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 436, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 2.3818142414093018, transposing took 1.2159347534179688e-05 and 1.430511474609375e-06, resampling/normalizing took 3.4271812438964844.
[Timing] preprocessing function took 5.871419906616211 seconds
(1, 51, 436, 582)
[Timing] total time for preprocessing this item is 212.23329973220825
[Timing] This worker has ended successfully, no errors to report. It took 752.873587846756 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.499992847442627 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 1.7345902919769287, transposing took 1.8596649169921875e-05 and 6.67572021484375e-06, resampling/normalizing took 0.855731725692749.
[Timing] preprocessing function took 2.6169185638427734 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 96.39485216140747
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.16563129425048828 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 428, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 428, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 486, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.6442649364471436, transposing took 1.1920928955078125e-05 and 1.430511474609375e-06, resampling/normalizing took 3.7348148822784424.
[Timing] preprocessing function took 4.409931182861328 seconds
(1, 51, 486, 582)
[Timing] total time for preprocessing this item is 247.32274436950684
[Timing] This worker has ended successfully, no errors to report. It took 776.0741498470306 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.486875295639038 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 1.9328291416168213, transposing took 1.7404556274414062e-05 and 7.152557373046875e-06, resampling/normalizing took 0.6617898941040039.
[Timing] preprocessing function took 2.598909378051758 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 119.6028323173523
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00029.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.21531224250793457 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4049367904663086, transposing took 1.1920928955078125e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.6397185325622559.
[Timing] preprocessing function took 1.0664398670196533 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 352.66040229797363
[Timing] This worker has ended successfully, no errors to report. It took 776.0236687660217 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.5139310359954834 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 1.9656507968902588, transposing took 1.71661376953125e-05 and 6.4373016357421875e-06, resampling/normalizing took 0.6818826198577881.
[Timing] preprocessing function took 2.651735305786133 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 143.18062090873718
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.8941693305969238 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 444, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 444, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 505, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 2.387845516204834, transposing took 1.2159347534179688e-05 and 1.9073486328125e-06, resampling/normalizing took 3.896380662918091.
[Timing] preprocessing function took 6.33177638053894 seconds
(1, 51, 505, 582)
[Timing] total time for preprocessing this item is 457.75272703170776
[Timing] This worker has ended successfully, no errors to report. It took 776.0404019355774 seconds.
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.1807384490966797 seconds
[Timing] - Saving the segmentation took 0.6041436195373535 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30524659156799316 seconds
[Timing] - Saving the segmentation took 0.026558399200439453 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30295348167419434 seconds
[Timing] - Saving the segmentation took 0.02677178382873535 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.8775129318237305 seconds
[Timing] - Saving the segmentation took 0.05321216583251953 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.8479681015014648 seconds
[Timing] - Saving the segmentation took 0.05296039581298828 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.9085955619812012 seconds
[Timing] - Saving the segmentation took 0.052933454513549805 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.26836085319519043 seconds
[Timing] - Saving the segmentation took 0.03401637077331543 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30555081367492676 seconds
[Timing] - Saving the segmentation took 0.028195619583129883 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30382418632507324 seconds
[Timing] - Saving the segmentation took 0.029626846313476562 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.6425135135650635 seconds
[Timing] - Saving the segmentation took 0.05458259582519531 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00029.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.29718446731567383 seconds
[Timing] - Saving the segmentation took 0.027045011520385742 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30092525482177734 seconds
[Timing] - Saving the segmentation took 0.027306318283081055 seconds
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3094797558254666, std is 0.0009172386442872048.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24603541692097983, std is 0.0005493049543123023 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008862797419230144, std is 0.003369893204057493 
[Timing prediction] Total patch predictions is 25.397294998168945 seconds.
prediction done
[Timing] another fold took 25.636282205581665 seconds
[Timing] normalising with folds took 0.009275436401367188 seconds
[Timing] transposing backwards took 3.457069396972656e-05 seconds
[Timing] full prediction took 472.26235365867615 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
[Timing] loading took 0.04437088966369629 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3099466323852539, std is 0.003648234039536306.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24629930920071072, std is 0.0006368234647946963 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008976226382785373, std is 0.0038985292130353376 
[Timing prediction] Total patch predictions is 25.435272932052612 seconds.
prediction done
[Timing] fold 0 prediction took 25.681622743606567 seconds
[Timing] loading another fold took 0.0443727970123291 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30905400382147896, std is 0.001094768076136422.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24641356468200684, std is 0.0006309082764987445 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008933130900065105, std is 0.003699724785362774 
[Timing prediction] Total patch predictions is 25.398301362991333 seconds.
prediction done
[Timing] another fold took 25.663261890411377 seconds
[Timing] loading another fold took 0.04437994956970215 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3092923376295302, std is 0.0019690919236454853.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24653409322102865, std is 0.0006945752266030678 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008826753828260633, std is 0.003738500551936884 
[Timing prediction] Total patch predictions is 25.409676551818848 seconds.
prediction done
[Timing] another fold took 25.674373626708984 seconds
[Timing] loading another fold took 0.04400205612182617 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3089900705549452, std is 0.0010215743761900942.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24645162158542208, std is 0.0007578397264168858 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008770842022365994, std is 0.0037598064033656895 
[Timing prediction] Total patch predictions is 25.38982605934143 seconds.
prediction done
[Timing] another fold took 25.654304027557373 seconds
[Timing] loading another fold took 0.043715476989746094 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30901138517591686, std is 0.0010548301351965446.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24650760756598578, std is 0.0007291256281607616 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008754290474785698, std is 0.00373713917249756 
[Timing prediction] Total patch predictions is 25.392579078674316 seconds.
prediction done
[Timing] another fold took 25.657416582107544 seconds
[Timing] normalising with folds took 0.010284900665283203 seconds
[Timing] transposing backwards took 3.075599670410156e-05 seconds
[Timing] full prediction took 600.9286415576935 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00029.nii.gz
[Timing] loading took 0.04501605033874512 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3147369623184204, std is 0.006657443739217575.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24563732743263245, std is 0.0004217943218296864 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0072609782218933105, std is 0.0004019570331272891 
[Timing prediction] Total patch predictions is 4.541132688522339 seconds.
prediction done
[Timing] fold 0 prediction took 4.622641324996948 seconds
[Timing] loading another fold took 0.04336237907409668 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30823516845703125, std is 0.0007859179246118272.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24623140692710876, std is 0.0003691545224665747 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.007097572088241577, std is 6.230164624881909e-05 
[Timing prediction] Total patch predictions is 4.4925620555877686 seconds.
prediction done
[Timing] another fold took 4.578348159790039 seconds
[Timing] loading another fold took 0.043553829193115234 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3093375265598297, std is 0.0024691898155666425.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24608612060546875, std is 0.0004419571348726123 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008317649364471436, std is 0.002511486498047501 
[Timing prediction] Total patch predictions is 4.50998067855835 seconds.
prediction done
[Timing] another fold took 4.58730411529541 seconds
[Timing] loading another fold took 0.04370927810668945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3091338276863098, std is 0.0022973659124314724.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24620434641838074, std is 0.0004509761229739122 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008282870054244995, std is 0.002405265054455773 
[Timing prediction] Total patch predictions is 4.509018898010254 seconds.
prediction done
[Timing] another fold took 4.586456537246704 seconds
[Timing] loading another fold took 0.04325556755065918 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30927297472953796, std is 0.0023787245442703497.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24609652161598206, std is 0.00029250206648052935 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008217662572860718, std is 0.0023931386251887033 
[Timing prediction] Total patch predictions is 4.508745193481445 seconds.
prediction done
[Timing] another fold took 4.58661675453186 seconds
[Timing] normalising with folds took 0.002757549285888672 seconds
[Timing] transposing backwards took 2.09808349609375e-05 seconds
[Timing] full prediction took 624.1995823383331 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
[Timing] loading took 0.04440617561340332 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3096241580115424, std is 0.0022652792410141013.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24597699377271864, std is 0.0006329775203751071 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00897542635599772, std is 0.003874630430264125 
[Timing prediction] Total patch predictions is 25.406248092651367 seconds.
prediction done
[Timing] fold 0 prediction took 25.66186237335205 seconds
[Timing] loading another fold took 0.044957876205444336 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3093850294748942, std is 0.0019224691406964458.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24611696667141383, std is 0.0007604634457897077 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008935817082722982, std is 0.0038306996924568856 
[Timing prediction] Total patch predictions is 25.399996042251587 seconds.
prediction done
[Timing] another fold took 25.672693729400635 seconds
[Timing] loading another fold took 0.04459500312805176 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30874045160081653, std is 0.0009318375918768513.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24622539944118924, std is 0.0006519730259878599 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.009008667204115126, std is 0.003729651666307508 
[Timing prediction] Total patch predictions is 25.37912940979004 seconds.
prediction done
[Timing] another fold took 25.652456760406494 seconds
[Timing] loading another fold took 0.04457569122314453 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.30921888881259496, std is 0.0010245760657080923.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24570355945163302, std is 0.0005170278910960627 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008814997143215604, std is 0.003784914970975367 
[Timing prediction] Total patch predictions is 25.368473768234253 seconds.
prediction done
[Timing] another fold took 25.64233899116516 seconds
[Timing] loading another fold took 0.0450282096862793 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3092288653055827, std is 0.000911186224564663.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24573376443650988, std is 0.0005778671465503516 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00892997317843967, std is 0.003854395132261535 
[Timing prediction] Total patch predictions is 25.375462293624878 seconds.
prediction done
[Timing] another fold took 25.650218963623047 seconds
[Timing] normalising with folds took 0.010767459869384766 seconds
[Timing] transposing backwards took 3.2901763916015625e-05 seconds
[Timing] full prediction took 752.7926778793335 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
[Timing] loading took 0.047411203384399414 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3138595223426819, std is 0.005864557854397356.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24580886960029602, std is 0.000888355171762779 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.0084228515625, std is 0.002255579361793903 
[Timing prediction] Total patch predictions is 4.544793367385864 seconds.
prediction done
[Timing] fold 0 prediction took 4.620190858840942 seconds
[Timing] loading another fold took 0.044635772705078125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3091035485267639, std is 0.0006903461498059208.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24543192982673645, std is 0.00024082903782113925 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00703015923500061, std is 0.00022097794645409847 
[Timing prediction] Total patch predictions is 4.4925782680511475 seconds.
prediction done
[Timing] another fold took 4.578667402267456 seconds
[Timing] loading another fold took 0.04491829872131348 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.309100866317749, std is 0.0004219902772701699.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24558982253074646, std is 0.0002894915297104976 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.00691986083984375, std is 0.00012554775789955745 
[Timing prediction] Total patch predictions is 4.492936849594116 seconds.
prediction done
[Timing] another fold took 4.581905841827393 seconds
[Timing] loading another fold took 0.0451202392578125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3095795512199402, std is 0.0022755005454528432.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24538502097129822, std is 0.0003018240304336499 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008335918188095093, std is 0.002589617579392794 
[Timing prediction] Total patch predictions is 4.506460666656494 seconds.
prediction done
[Timing] another fold took 4.585065126419067 seconds
[Timing] loading another fold took 0.04479837417602539 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.3095734715461731, std is 0.002696724684312013.
[Timing prediction] mean of stuff after each patch pred part 1 is 0.24555635452270508, std is 0.0003643280462348811 
[Timing prediction] mean of stuff after each patch pred part 2 is 0.008389949798583984, std is 0.0025977988955586517 
[Timing prediction] Total patch predictions is 4.5082175731658936 seconds.
prediction done
[Timing] another fold took 4.586848497390747 seconds
[Timing] normalising with folds took 0.0028219223022460938 seconds
[Timing] transposing backwards took 3.0517578125e-05 seconds
[Timing] full prediction took 776.093414068222 seconds
[Timing] Another preprocessing process done, it took 776.13170337677 seconds
[Timing] Another preprocessing process done, it took 776.1317286491394 seconds
[Timing] Another preprocessing process done, it took 776.1317453384399 seconds
[Timing] Another preprocessing process done, it took 776.1623754501343 seconds
[Timing] Another preprocessing process done, it took 776.162398815155 seconds
[Timing] Another preprocessing process done, it took 776.1624135971069 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
[Timing] postprocessing took 0.999631404876709 seconds
Program finished with exit code 0 at: Wed Jan 18 13:08:29 CET 2023
