Starting at Mon Nov  7 17:15:07 CET 2022
Running on hosts: $SLURM_JOB_NODELIST
Running on $SLURM_JOB_NUM_NODES nodes.
Running $SLURM_NTASKS tasks.
CPUs on node: $SLURM_CPUS_ON_NODE.
Account: $SLURM_JOB_ACCOUNT
Job ID: $SLURM_JOB_ID
Job name: $SLURM_JOB_NAME
Node running script: $SLURMD_NODENAME
Submit host: $SLURM_SUBMIT_HOST
GPUS: $CUDA_VISIBLE_DEVICES or $SLURM_STEP_GPUS
Mon Nov  7 17:15:09 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A6000    Off  | 00000000:3B:00.0 Off |                  Off |
| 30%   50C    P0    86W / 300W |      0MiB / 48685MiB |      1%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer/scripts/p16
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet
Verifying environment variables:
Installing hidden layer and nnUnet
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-d1o09nmk/hiddenlayer_dcd7795bd31c4c429406e58883aab70d
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.1-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.5-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0.tar.gz (151 kB)
Collecting scipy
  Using cached scipy-1.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (33.7 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24.tar.gz (61 kB)
Collecting numpy
  Using cached numpy-1.23.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)
Collecting sklearn
  Downloading sklearn-0.0.post1.tar.gz (3.6 kB)
Collecting SimpleITK
  Using cached SimpleITK-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (52.8 MB)
Collecting pandas
  Using cached pandas-1.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.2-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.10.10-py3-none-any.whl (210 kB)
Collecting matplotlib
  Using cached matplotlib-3.6.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.8 MB)
Collecting monai
  Using cached monai-1.0.1-202210241233-py3-none-any.whl (1.1 MB)
Collecting einops
  Using cached einops-0.5.0-py3-none-any.whl (36 kB)
Collecting ipython
  Using cached ipython-8.6.0-py3-none-any.whl (761 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.4.0-py3-none-any.whl (26 kB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.3.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.3 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.5 MB)
Collecting future
  Using cached future-0.18.2.tar.gz (829 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.8 MB)
Collecting networkx>=2.2
  Using cached networkx-2.8.8-py3-none-any.whl (2.0 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting imageio>=2.4.1
  Using cached imageio-2.22.4-py3-none-any.whl (3.4 MB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.19-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.13.0-py3-none-any.whl (1.1 MB)
Collecting traitlets>=5
  Using cached traitlets-5.5.0-py3-none-any.whl (107 kB)
Collecting stack-data
  Using cached stack_data-0.6.0-py3-none-any.whl (24 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)
Collecting prompt-toolkit<3.1.0,>3.0.1
  Using cached prompt_toolkit-3.0.32-py3-none-any.whl (382 kB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.38.0-py3-none-any.whl (965 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting contourpy>=1.0.1
  Using cached contourpy-1.0.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (296 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting setuptools
  Using cached setuptools-65.5.1-py3-none-any.whl (1.2 MB)
Collecting pytz>=2020.1
  Using cached pytz-2022.6-py2.py3-none-any.whl (498 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.1-py3-none-any.whl (39 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.9.24-py3-none-any.whl (161 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.12-py2.py3-none-any.whl (140 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.2.0-py3-none-any.whl (297 kB)
Collecting executing>=1.2.0
  Using cached executing-1.2.0-py2.py3-none-any.whl (24 kB)
Collecting asttokens>=2.1.0
  Using cached asttokens-2.1.0-py2.py3-none-any.whl (26 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Using legacy 'setup.py install' for batchgenerators, since package 'wheel' is not installed.
Using legacy 'setup.py install' for future, since package 'wheel' is not installed.
Using legacy 'setup.py install' for medpy, since package 'wheel' is not installed.
Using legacy 'setup.py install' for sklearn, since package 'wheel' is not installed.
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, contourpy, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
    Running setup.py install for future: started
    Running setup.py install for future: finished with status 'done'
    Running setup.py install for sklearn: started
    Running setup.py install for sklearn: finished with status 'done'
    Running setup.py install for medpy: started
    Running setup.py install for medpy: finished with status 'done'
    Running setup.py install for batchgenerators: started
    Running setup.py install for batchgenerators: finished with status 'done'
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.4.1 SimpleITK-2.2.0 argparse-1.4.0 asttokens-2.1.0 backcall-0.2.0 batchgenerators-0.24 certifi-2022.9.24 charset-normalizer-2.1.1 contourpy-1.0.6 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.5 einops-0.5.0 executing-1.2.0 fonttools-4.38.0 future-0.18.2 graphviz-0.20.1 idna-3.4 imageio-2.22.4 ipython-8.6.0 jedi-0.18.1 joblib-1.2.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.6.2 matplotlib-inline-0.1.6 medpy-0.4.0 monai-1.0.1 networkx-2.8.8 nibabel-4.0.2 nnunet numpy-1.23.4 packaging-21.3 pandas-1.5.1 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.3.0 prompt-toolkit-3.0.32 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.13.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.19 pytz-2022.6 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.3 scipy-1.9.3 setuptools-65.5.1 six-1.16.0 sklearn-0.0.post1 stack-data-0.6.0 threadpoolctl-3.1.0 tifffile-2022.10.10 torch-1.12.0 tqdm-4.64.1 traceback2-1.4.0 traitlets-5.5.0 typing-extensions-4.4.0 unittest2-1.1.0 urllib3-1.26.12 wcwidth-0.2.5


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 10 unique case ids, here are some examples: ['panc_00016' 'panc_00014' 'panc_00012' 'panc_00015' 'panc_00017'
 'panc_00011' 'panc_00013' 'panc_00010' 'panc_00010' 'panc_00011']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 10
number of cases that still need to be predicted: 10
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-11-07 17:17:08.101585: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
[Timing] starting preprocessing generator took 1.6450881958007812e-05 seconds
starting prediction...
Preprocessing with 6 multithreads
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00012.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1368873119354248 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4932229518890381, transposing took 3.409385681152344e-05 and 5.9604644775390625e-06, resampling/normalizing took 0.045772552490234375.
[Timing] preprocessing function took 0.5445690155029297 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 0.5452189445495605
[Timing] This worker has ended successfully, no errors to report. It took 17.640925645828247 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00013.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.21716976165771484 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.5881631374359131, transposing took 2.3126602172851562e-05 and 3.814697265625e-06, resampling/normalizing took 0.028516292572021484.
[Timing] preprocessing function took 0.6215081214904785 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 30.410144805908203
[Timing] This worker has ended successfully, no errors to report. It took 82.24094867706299 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00008.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1865377426147461 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.5256469249725342, transposing took 2.5987625122070312e-05 and 5.9604644775390625e-06, resampling/normalizing took 0.027849674224853516.
[Timing] preprocessing function took 0.5599267482757568 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 0.5604960918426514
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00014.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 2.4293205738067627 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 444, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 444, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 505, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 3.0821492671966553, transposing took 1.4066696166992188e-05 and 1.6689300537109375e-06, resampling/normalizing took 5.061577081680298.
[Timing] preprocessing function took 8.19425892829895 seconds
(1, 51, 505, 582)
[Timing] total time for preprocessing this item is 68.78148198127747
[Timing] This worker has ended successfully, no errors to report. It took 185.28998732566833 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00010.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.4077911376953125 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.8057878017425537, transposing took 2.5272369384765625e-05 and 4.291534423828125e-06, resampling/normalizing took 0.027039766311645508.
[Timing] preprocessing function took 0.837052583694458 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 30.529717206954956
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00016.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.13618874549865723 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.39836812019348145, transposing took 1.1205673217773438e-05 and 1.9073486328125e-06, resampling/normalizing took 0.019431591033935547.
[Timing] preprocessing function took 0.45050930976867676 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 128.37199878692627
[Timing] This worker has ended successfully, no errors to report. It took 198.43953943252563 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00009.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.45440077781677246 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [2.98382854 0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.98382854, 0.68493152, 0.68493152]), 'spacing_transposed': array([2.98382854, 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.8812718391418457, transposing took 2.288818359375e-05 and 3.814697265625e-06, resampling/normalizing took 0.6163334846496582.
[Timing] preprocessing function took 1.5024049282073975 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 43.417561531066895
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00015.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.24237489700317383 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 300, 320) spacing: [3.         0.66666669 0.66666669] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66666669, 0.66666669]), 'spacing_transposed': array([3.        , 0.66666669, 0.66666669]), 'data.shape (data is transposed)': (1, 42, 300, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 310)} 

[Timing] Preprocessing specifics: loading&cropping took 0.5028018951416016, transposing took 1.0728836059570312e-05 and 1.1920928955078125e-06, resampling/normalizing took 0.6072120666503906.
[Timing] preprocessing function took 1.1462030410766602 seconds
(1, 42, 291, 310)
[Timing] total time for preprocessing this item is 115.53471302986145
[Timing] This worker has ended successfully, no errors to report. It took 198.46747279167175 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00011.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.4035325050354004 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.00000024 0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.00000024, 0.68493152, 0.68493152]), 'spacing_transposed': array([3.00000024, 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.8312766551971436, transposing took 2.002716064453125e-05 and 4.0531158447265625e-06, resampling/normalizing took 0.719832181930542.
[Timing] preprocessing function took 1.555757761001587 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 56.303499698638916
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00017.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.19669675827026367 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4471774101257324, transposing took 1.2874603271484375e-05 and 1.1920928955078125e-06, resampling/normalizing took 0.020813703536987305.
[Timing] preprocessing function took 0.5008118152618408 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 115.79542469978333
[Timing] This worker has ended successfully, no errors to report. It took 198.42001056671143 seconds.
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00012.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.07976531982421875 seconds
[Timing] - Saving the segmentation took 0.04313826560974121 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00010.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.0943453311920166 seconds
[Timing] - Saving the segmentation took 0.04037976264953613 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00011.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3209726810455322 seconds
[Timing] - Saving the segmentation took 0.02633070945739746 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00016.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.07599663734436035 seconds
[Timing] - Saving the segmentation took 0.02580094337463379 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00017.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.066497802734375 seconds
[Timing] - Saving the segmentation took 0.026065826416015625 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00008.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.07369875907897949 seconds
[Timing] - Saving the segmentation took 0.04154038429260254 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00013.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.07306075096130371 seconds
[Timing] - Saving the segmentation took 0.027451038360595703 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00009.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.35190725326538086 seconds
[Timing] - Saving the segmentation took 0.03068995475769043 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00014.nii.gz
[Timing] - Resampling the segmentation to original shape took 2.4589691162109375 seconds
[Timing] - Saving the segmentation took 0.05196881294250488 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00015.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3473813533782959 seconds
[Timing] - Saving the segmentation took 0.02653360366821289 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00008.nii.gz
[Timing] loading took 0.0921938419342041 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
computing Gaussian
done
prediction done
[Timing] fold 0 prediction took 6.673348426818848 seconds
[Timing] loading another fold took 0.04733157157897949 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.6061975955963135 seconds
[Timing] loading another fold took 0.04630470275878906 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.505432605743408 seconds
[Timing] loading another fold took 0.04625439643859863 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.506683349609375 seconds
[Timing] loading another fold took 0.04614138603210449 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.502490997314453 seconds
[Timing] normalising with folds took 0.00299835205078125 seconds
[Timing] transposing backwards took 3.504753112792969e-05 seconds
[Timing] full prediction took 17.71154475212097 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00012.nii.gz
[Timing] loading took 0.05483508110046387 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.4896254539489746 seconds
[Timing] loading another fold took 0.045497894287109375 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.501438856124878 seconds
[Timing] loading another fold took 0.04567837715148926 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.517003059387207 seconds
[Timing] loading another fold took 0.04580116271972656 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.498384714126587 seconds
[Timing] loading another fold took 0.04608607292175293 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.504986047744751 seconds
[Timing] normalising with folds took 0.0030231475830078125 seconds
[Timing] transposing backwards took 3.647804260253906e-05 seconds
[Timing] full prediction took 30.52751851081848 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00013.nii.gz
[Timing] loading took 0.04714655876159668 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.5235514640808105 seconds
[Timing] loading another fold took 0.04579472541809082 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5110867023468018 seconds
[Timing] loading another fold took 0.04572916030883789 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5090200901031494 seconds
[Timing] loading another fold took 0.04560661315917969 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5142526626586914 seconds
[Timing] loading another fold took 0.04581928253173828 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5169475078582764 seconds
[Timing] normalising with folds took 0.003032684326171875 seconds
[Timing] transposing backwards took 2.574920654296875e-05 seconds
[Timing] full prediction took 43.420525312423706 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00010.nii.gz
[Timing] loading took 0.050113677978515625 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.5553536415100098 seconds
[Timing] loading another fold took 0.045952558517456055 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5213561058044434 seconds
[Timing] loading another fold took 0.045828819274902344 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.523387908935547 seconds
[Timing] loading another fold took 0.045990705490112305 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.527160406112671 seconds
[Timing] loading another fold took 0.046126604080200195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.527594566345215 seconds
[Timing] normalising with folds took 0.0029735565185546875 seconds
[Timing] transposing backwards took 9.560585021972656e-05 seconds
[Timing] full prediction took 56.366204023361206 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00009.nii.gz
[Timing] loading took 0.056183815002441406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.5645198822021484 seconds
[Timing] loading another fold took 0.045778751373291016 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5294270515441895 seconds
[Timing] loading another fold took 0.04735708236694336 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5276265144348145 seconds
[Timing] loading another fold took 0.04558849334716797 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.526933193206787 seconds
[Timing] loading another fold took 0.04546713829040527 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5286736488342285 seconds
[Timing] normalising with folds took 0.0028128623962402344 seconds
[Timing] transposing backwards took 3.743171691894531e-05 seconds
[Timing] full prediction took 69.3315098285675 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00011.nii.gz
[Timing] loading took 0.07243824005126953 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.5493202209472656 seconds
[Timing] loading another fold took 0.04573822021484375 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.532294988632202 seconds
[Timing] loading another fold took 0.04653477668762207 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5351738929748535 seconds
[Timing] loading another fold took 0.04591846466064453 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5349996089935303 seconds
[Timing] loading another fold took 0.04581093788146973 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.53269100189209 seconds
[Timing] normalising with folds took 0.0027778148651123047 seconds
[Timing] transposing backwards took 2.6226043701171875e-05 seconds
[Timing] full prediction took 82.31736874580383 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00014.nii.gz
[Timing] loading took 0.04613232612609863 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 15.209956407546997 seconds
[Timing] loading another fold took 0.045725107192993164 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 15.210880994796753 seconds
[Timing] loading another fold took 0.04617786407470703 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 15.22231936454773 seconds
[Timing] loading another fold took 0.04608154296875 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 15.304485321044922 seconds
[Timing] loading another fold took 0.04639887809753418 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 15.27044129371643 seconds
[Timing] normalising with folds took 0.01099085807800293 seconds
[Timing] transposing backwards took 4.57763671875e-05 seconds
[Timing] full prediction took 158.8746407032013 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00016.nii.gz
[Timing] loading took 0.0590977668762207 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.6615281105041504 seconds
[Timing] loading another fold took 0.04602503776550293 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5633656978607178 seconds
[Timing] loading another fold took 0.046126604080200195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.557234764099121 seconds
[Timing] loading another fold took 0.04536795616149902 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5658679008483887 seconds
[Timing] loading another fold took 0.04594898223876953 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5588724613189697 seconds
[Timing] normalising with folds took 0.002981424331665039 seconds
[Timing] transposing backwards took 2.6702880859375e-05 seconds
[Timing] full prediction took 172.16253280639648 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00015.nii.gz
[Timing] loading took 0.06329035758972168 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.577841281890869 seconds
[Timing] loading another fold took 0.04561638832092285 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5599374771118164 seconds
[Timing] loading another fold took 0.04543924331665039 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.560529947280884 seconds
[Timing] loading another fold took 0.04541516304016113 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.558181047439575 seconds
[Timing] loading another fold took 0.04571795463562012 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.573551654815674 seconds
[Timing] normalising with folds took 0.0027213096618652344 seconds
[Timing] transposing backwards took 2.9325485229492188e-05 seconds
[Timing] full prediction took 185.2854552268982 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch1/segmentations/Task611/panc_00017.nii.gz
[Timing] loading took 0.07250332832336426 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 2.5853967666625977 seconds
[Timing] loading another fold took 0.04664015769958496 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5845768451690674 seconds
[Timing] loading another fold took 0.04564237594604492 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5832326412200928 seconds
[Timing] loading another fold took 0.045642852783203125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.5816400051116943 seconds
[Timing] loading another fold took 0.046051740646362305 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 2.564939260482788 seconds
[Timing] normalising with folds took 0.003028392791748047 seconds
[Timing] transposing backwards took 3.0994415283203125e-05 seconds
[Timing] full prediction took 198.48090291023254 seconds
[Timing] Another preprocessing process done, it took 198.527845621109 seconds
[Timing] Another preprocessing process done, it took 198.56586599349976 seconds
[Timing] Another preprocessing process done, it took 198.56590723991394 seconds
[Timing] Another preprocessing process done, it took 198.5659203529358 seconds
[Timing] Another preprocessing process done, it took 198.5659339427948 seconds
[Timing] Another preprocessing process done, it took 198.5659465789795 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
[Timing] postprocessing took 0.923607587814331 seconds
Program finished with exit code 0 at: Mon Nov  7 17:22:27 CET 2022
