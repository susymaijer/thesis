Starting at Tue Dec 13 19:42:05 CET 2022
Running on hosts: $SLURM_JOB_NODELIST
Running on $SLURM_JOB_NUM_NODES nodes.
Running $SLURM_NTASKS tasks.
CPUs on node: $SLURM_CPUS_ON_NODE.
Account: $SLURM_JOB_ACCOUNT
Job ID: $SLURM_JOB_ID
Job name: $SLURM_JOB_NAME
Node running script: $SLURMD_NODENAME
Submit host: $SLURM_SUBMIT_HOST
GPUS: $CUDA_VISIBLE_DEVICES or $SLURM_STEP_GPUS
Tue Dec 13 19:42:05 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A6000    On   | 00000000:D8:00.0 Off |                  Off |
| 30%   30C    P8    16W / 300W |      0MiB / 48685MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer/p16
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnUNet
Verifying environment variables:
Installing hidden layer and nnUnet
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-24uhf2n_/hiddenlayer_6f254220d7ad41e7bf6cfd8f2609bde5
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.1-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.6-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0.tar.gz (151 kB)
Collecting scipy
  Using cached scipy-1.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (33.7 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24.tar.gz (61 kB)
Collecting numpy
  Using cached numpy-1.23.5-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)
Collecting sklearn
  Using cached sklearn-0.0.post1.tar.gz (3.6 kB)
Collecting SimpleITK
  Using cached SimpleITK-2.2.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (52.7 MB)
Collecting pandas
  Using cached pandas-1.5.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.2-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.10.10-py3-none-any.whl (210 kB)
Collecting matplotlib
  Using cached matplotlib-3.6.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.8 MB)
Collecting monai
  Using cached monai-1.0.1-202210241233-py3-none-any.whl (1.1 MB)
Collecting einops
  Using cached einops-0.6.0-py3-none-any.whl (41 kB)
Collecting ipython
  Using cached ipython-8.7.0-py3-none-any.whl (761 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.4.0-py3-none-any.whl (26 kB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.3.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.3 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (9.5 MB)
Collecting future
  Using cached future-0.18.2.tar.gz (829 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting packaging>=20.0
  Using cached packaging-22.0-py3-none-any.whl (42 kB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.8 MB)
Collecting imageio>=2.4.1
  Using cached imageio-2.22.4-py3-none-any.whl (3.4 MB)
Collecting networkx>=2.2
  Using cached networkx-2.8.8-py3-none-any.whl (2.0 MB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.1-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.20-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
Collecting prompt-toolkit<3.1.0,>=3.0.11
  Using cached prompt_toolkit-3.0.36-py3-none-any.whl (386 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.13.0-py3-none-any.whl (1.1 MB)
Collecting traitlets>=5
  Downloading traitlets-5.7.1-py3-none-any.whl (109 kB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting stack-data
  Using cached stack_data-0.6.2-py3-none-any.whl (24 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.2-py2.py3-none-any.whl (1.6 MB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting contourpy>=1.0.1
  Using cached contourpy-1.0.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (296 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.38.0-py3-none-any.whl (965 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting pyparsing>=2.2.1
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting setuptools
  Using cached setuptools-65.6.3-py3-none-any.whl (1.2 MB)
Collecting pytz>=2020.1
  Using cached pytz-2022.6-py2.py3-none-any.whl (498 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.12.7-py3-none-any.whl (155 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.13-py2.py3-none-any.whl (140 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.1-py3-none-any.whl (39 kB)
Collecting joblib>=1.1.1
  Using cached joblib-1.2.0-py3-none-any.whl (297 kB)
Collecting executing>=1.2.0
  Using cached executing-1.2.0-py2.py3-none-any.whl (24 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting asttokens>=2.1.0
  Using cached asttokens-2.2.1-py2.py3-none-any.whl (26 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Using legacy 'setup.py install' for batchgenerators, since package 'wheel' is not installed.
Using legacy 'setup.py install' for future, since package 'wheel' is not installed.
Using legacy 'setup.py install' for medpy, since package 'wheel' is not installed.
Using legacy 'setup.py install' for sklearn, since package 'wheel' is not installed.
Installing collected packages: six, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pyparsing, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, contourpy, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
    Running setup.py install for future: started
    Running setup.py install for future: finished with status 'done'
    Running setup.py install for sklearn: started
    Running setup.py install for sklearn: finished with status 'done'
    Running setup.py install for medpy: started
    Running setup.py install for medpy: finished with status 'done'
    Running setup.py install for batchgenerators: started
    Running setup.py install for batchgenerators: finished with status 'done'
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.4.1 SimpleITK-2.2.1 argparse-1.4.0 asttokens-2.2.1 backcall-0.2.0 batchgenerators-0.24 certifi-2022.12.7 charset-normalizer-2.1.1 contourpy-1.0.6 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.6 einops-0.6.0 executing-1.2.0 fonttools-4.38.0 future-0.18.2 graphviz-0.20.1 idna-3.4 imageio-2.22.4 ipython-8.7.0 jedi-0.18.2 joblib-1.2.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.6.2 matplotlib-inline-0.1.6 medpy-0.4.0 monai-1.0.1 networkx-2.8.8 nibabel-4.0.2 nnunet numpy-1.23.5 packaging-22.0 pandas-1.5.2 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.3.0 prompt-toolkit-3.0.36 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.1 pygments-2.13.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.20 pytz-2022.6 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.2.0 scipy-1.9.3 setuptools-65.6.3 six-1.16.0 sklearn-0.0.post1 stack-data-0.6.2 threadpoolctl-3.1.0 tifffile-2022.10.10 torch-1.12.0 tqdm-4.64.1 traceback2-1.4.0 traitlets-5.7.1 typing-extensions-4.4.0 unittest2-1.1.0 urllib3-1.26.13 wcwidth-0.2.5


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 11 unique case ids, here are some examples: ['panc_00021' 'panc_00025' 'panc_00026' 'panc_00018' 'panc_00019'
 'panc_00026' 'panc_00023' 'panc_00024' 'panc_00027' 'panc_00018']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 11
number of cases that still need to be predicted: 11
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-12-13 19:43:21.406490: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 1], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 1), stride=(1, 2, 1), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task612/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
[Timing] starting preprocessing generator took 1.5497207641601562e-05 seconds
starting prediction...
Preprocessing with 6 multithreads
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.23173809051513672 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.6313319206237793, transposing took 2.0503997802734375e-05 and 5.0067901611328125e-06, resampling/normalizing took 1.1789281368255615.
[Timing] preprocessing function took 1.8165607452392578 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 1.8171226978302002
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.19693231582641602 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 300, 320) spacing: [3.         0.66666669 0.66666669] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66666669, 0.66666669]), 'spacing_transposed': array([3.        , 0.66666669, 0.66666669]), 'data.shape (data is transposed)': (1, 42, 300, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 310)} 

[Timing] Preprocessing specifics: loading&cropping took 0.5882494449615479, transposing took 1.33514404296875e-05 and 2.384185791015625e-06, resampling/normalizing took 0.811168909072876.
[Timing] preprocessing function took 1.432222604751587 seconds
(1, 42, 291, 310)
[Timing] total time for preprocessing this item is 17.58977961540222
[Timing] This worker has ended successfully, no errors to report. It took 270.922425031662 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.25716519355773926 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.6515281200408936, transposing took 2.6702880859375e-05 and 1.3828277587890625e-05, resampling/normalizing took 1.091057300567627.
[Timing] preprocessing function took 1.7478992938995361 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 1.7505738735198975
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.18935632705688477 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.5245051383972168, transposing took 1.621246337890625e-05 and 2.6226043701171875e-06, resampling/normalizing took 1.1751019954681396.
[Timing] preprocessing function took 1.7306101322174072 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 30.39638042449951
[Timing] This worker has ended successfully, no errors to report. It took 341.95919036865234 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.3551156520843506 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 384, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 384, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 436, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 1.069925308227539, transposing took 1.8835067749023438e-05 and 4.5299530029296875e-06, resampling/normalizing took 5.371404409408569.
[Timing] preprocessing function took 6.463015794754028 seconds
(1, 51, 436, 582)
[Timing] total time for preprocessing this item is 199.5687894821167
[Timing] This worker has ended successfully, no errors to report. It took 484.75354051589966 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.19477343559265137 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 409, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 409, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 465, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.994314432144165, transposing took 2.193450927734375e-05 and 5.0067901611328125e-06, resampling/normalizing took 5.061922311782837.
[Timing] preprocessing function took 6.079993009567261 seconds
(1, 51, 465, 582)
[Timing] total time for preprocessing this item is 44.82143807411194
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.13702106475830078 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 415, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 415, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 472, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.6789870262145996, transposing took 1.2159347534179688e-05 and 1.6689300537109375e-06, resampling/normalizing took 3.9641430377960205.
[Timing] preprocessing function took 4.7088401317596436 seconds
(1, 51, 472, 582)
[Timing] total time for preprocessing this item is 297.07887506484985
[Timing] This worker has ended successfully, no errors to report. It took 556.0784840583801 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.16543102264404297 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 428, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 428, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 486, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.7261404991149902, transposing took 1.6927719116210938e-05 and 4.291534423828125e-06, resampling/normalizing took 5.469343185424805.
[Timing] preprocessing function took 6.219735383987427 seconds
(1, 51, 486, 582)
[Timing] total time for preprocessing this item is 57.95408916473389
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.43264007568359375 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 438, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 438, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 498, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.9418466091156006, transposing took 1.2874603271484375e-05 and 1.6689300537109375e-06, resampling/normalizing took 4.041263580322266.
[Timing] preprocessing function took 5.060097932815552 seconds
(1, 51, 498, 582)
[Timing] total time for preprocessing this item is 284.0912802219391
[Timing] This worker has ended successfully, no errors to report. It took 556.1189448833466 seconds.
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.4575321674346924 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 444, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 444, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 505, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 1.2766673564910889, transposing took 1.71661376953125e-05 and 4.5299530029296875e-06, resampling/normalizing took 5.203185796737671.
[Timing] preprocessing function took 6.503465414047241 seconds
(1, 51, 505, 582)
[Timing] total time for preprocessing this item is 128.48919987678528
preprocessing /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.12866806983947754 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 417, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 417, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 474, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 0.6649229526519775, transposing took 1.4066696166992188e-05 and 1.6689300537109375e-06, resampling/normalizing took 3.8703341484069824.
[Timing] preprocessing function took 4.604951858520508 seconds
(1, 51, 474, 582)
[Timing] total time for preprocessing this item is 284.8722610473633
[Timing] This worker has ended successfully, no errors to report. It took 556.1019554138184 seconds.
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3325958251953125 seconds
[Timing] - Saving the segmentation took 0.048248291015625 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3787722587585449 seconds
[Timing] - Saving the segmentation took 0.11235332489013672 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.8961162567138672 seconds
[Timing] - Saving the segmentation took 0.05829930305480957 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.7639586925506592 seconds
[Timing] - Saving the segmentation took 0.04911684989929199 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
[Timing] - Resampling the segmentation to original shape took 2.001572847366333 seconds
[Timing] - Saving the segmentation took 0.12772345542907715 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3311450481414795 seconds
[Timing] - Saving the segmentation took 0.04477953910827637 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3451979160308838 seconds
[Timing] - Saving the segmentation took 0.03077530860900879 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.8992104530334473 seconds
[Timing] - Saving the segmentation took 0.06561112403869629 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
[Timing] - Resampling the segmentation to original shape took 2.0155141353607178 seconds
[Timing] - Saving the segmentation took 0.05040264129638672 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.860424280166626 seconds
[Timing] - Saving the segmentation took 0.06088876724243164 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.8272006511688232 seconds
[Timing] - Saving the segmentation took 0.07475423812866211 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00019.nii.gz
[Timing] loading took 0.08817076683044434 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
computing Gaussian
done
[Timing prediction] mean of all patch predictions is 0.677518755197525, std is 1.3639400115565392.
[Timing prediction] mean of stuff after each patch pred is 0.13921383023262024, std is 0.00339399974926123 
[Timing prediction] Total patch predictions is 6.53392767906189 seconds.
prediction done
[Timing] fold 0 prediction took 7.270001649856567 seconds
[Timing] loading another fold took 0.04698753356933594 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1631377935409546, std is 0.0028676282584764647.
[Timing prediction] mean of stuff after each patch pred is 0.1397814154624939, std is 0.0031400484990457096 
[Timing prediction] Total patch predictions is 2.423405885696411 seconds.
prediction done
[Timing] another fold took 2.499770402908325 seconds
[Timing] loading another fold took 0.04691290855407715 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16373994946479797, std is 0.0038364607696871195.
[Timing prediction] mean of stuff after each patch pred is 0.13873425126075745, std is 0.0009898752005106273 
[Timing prediction] Total patch predictions is 2.4198484420776367 seconds.
prediction done
[Timing] another fold took 2.5073258876800537 seconds
[Timing] loading another fold took 0.04688882827758789 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16267699003219604, std is 0.001334318043606456.
[Timing prediction] mean of stuff after each patch pred is 0.13836073875427246, std is 0.0002294069341494888 
[Timing prediction] Total patch predictions is 2.408353090286255 seconds.
prediction done
[Timing] another fold took 2.493824005126953 seconds
[Timing] loading another fold took 0.04670429229736328 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16287556290626526, std is 0.0017239235957671128.
[Timing prediction] mean of stuff after each patch pred is 0.13864174485206604, std is 0.00016764632310652358 
[Timing prediction] Total patch predictions is 2.4121882915496826 seconds.
prediction done
[Timing] another fold took 2.496448516845703 seconds
[Timing] normalising with folds took 0.002804994583129883 seconds
[Timing] transposing backwards took 3.147125244140625e-05 seconds
[Timing] full prediction took 19.387704849243164 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00018.nii.gz
[Timing] loading took 0.048194169998168945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16436666250228882, std is 0.004307576320048952.
[Timing prediction] mean of stuff after each patch pred is 0.1386919915676117, std is 8.440286569266166e-05 
[Timing prediction] Total patch predictions is 2.4245240688323975 seconds.
prediction done
[Timing] fold 0 prediction took 2.504598379135132 seconds
[Timing] loading another fold took 0.04609560966491699 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16336840391159058, std is 0.0031926117014831265.
[Timing prediction] mean of stuff after each patch pred is 0.1401747465133667, std is 0.00282757099729513 
[Timing prediction] Total patch predictions is 2.4284021854400635 seconds.
prediction done
[Timing] another fold took 2.506664991378784 seconds
[Timing] loading another fold took 0.047478675842285156 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1626901626586914, std is 0.0019013623531825292.
[Timing prediction] mean of stuff after each patch pred is 0.13854986429214478, std is 0.0003819246624785308 
[Timing prediction] Total patch predictions is 2.4099717140197754 seconds.
prediction done
[Timing] another fold took 2.493558406829834 seconds
[Timing] loading another fold took 0.046654462814331055 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.162655770778656, std is 0.001471483485595174.
[Timing prediction] mean of stuff after each patch pred is 0.13806048035621643, std is 0.00013767439187805408 
[Timing prediction] Total patch predictions is 2.405782699584961 seconds.
prediction done
[Timing] another fold took 2.4894497394561768 seconds
[Timing] loading another fold took 0.046987295150756836 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1620190143585205, std is 0.0016861285092541055.
[Timing prediction] mean of stuff after each patch pred is 0.1379215121269226, std is 6.888613260041015e-05 
[Timing prediction] Total patch predictions is 2.399578809738159 seconds.
prediction done
[Timing] another fold took 2.483286142349243 seconds
[Timing] normalising with folds took 0.002749919891357422 seconds
[Timing] transposing backwards took 1.7642974853515625e-05 seconds
[Timing] full prediction took 32.1486701965332 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00024.nii.gz
[Timing] loading took 0.06843090057373047 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 86]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16340875625610352, std is 0.004780561489816391.
[Timing prediction] mean of stuff after each patch pred is 0.13845258951187134, std is 0.0011535600275480145 
[Timing prediction] Total patch predictions is 2.4149551391601562 seconds.
prediction done
[Timing] fold 0 prediction took 2.495760917663574 seconds
[Timing] loading another fold took 0.04628944396972656 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 86]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16249743103981018, std is 0.0024071070472186785.
[Timing prediction] mean of stuff after each patch pred is 0.13871821761131287, std is 0.0012440754388894572 
[Timing prediction] Total patch predictions is 2.409783124923706 seconds.
prediction done
[Timing] another fold took 2.4904322624206543 seconds
[Timing] loading another fold took 0.04654884338378906 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 86]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16199707984924316, std is 0.0018038496652976706.
[Timing prediction] mean of stuff after each patch pred is 0.13817206025123596, std is 0.00020027582617909438 
[Timing prediction] Total patch predictions is 2.4014053344726562 seconds.
prediction done
[Timing] another fold took 2.4828243255615234 seconds
[Timing] loading another fold took 0.04638218879699707 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 86]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16252082586288452, std is 0.0017699372989758056.
[Timing prediction] mean of stuff after each patch pred is 0.13814634084701538, std is 8.841108959842829e-05 
[Timing prediction] Total patch predictions is 2.4053919315338135 seconds.
prediction done
[Timing] another fold took 2.4871578216552734 seconds
[Timing] loading another fold took 0.04655146598815918 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 86]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16263145208358765, std is 0.0017484077602331937.
[Timing prediction] mean of stuff after each patch pred is 0.1382511854171753, std is 0.00019172185844268524 
[Timing prediction] Total patch predictions is 2.4071147441864014 seconds.
prediction done
[Timing] another fold took 2.488525152206421 seconds
[Timing] normalising with folds took 0.002704620361328125 seconds
[Timing] transposing backwards took 2.6941299438476562e-05 seconds
[Timing] full prediction took 44.890233516693115 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00025.nii.gz
[Timing] loading took 0.04957866668701172 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1732073724269867, std is 0.0018723268049675684.
[Timing prediction] mean of stuff after each patch pred is 0.13847380876541138, std is 0.00035205841047499805 
[Timing prediction] Total patch predictions is 2.493514060974121 seconds.
prediction done
[Timing] fold 0 prediction took 2.5763070583343506 seconds
[Timing] loading another fold took 0.04810523986816406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1736915409564972, std is 0.004569456225459826.
[Timing prediction] mean of stuff after each patch pred is 0.13996213674545288, std is 0.002639477584554318 
[Timing prediction] Total patch predictions is 2.5092971324920654 seconds.
prediction done
[Timing] another fold took 2.595142364501953 seconds
[Timing] loading another fold took 0.04993724822998047 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16360360383987427, std is 0.002696551820353938.
[Timing prediction] mean of stuff after each patch pred is 0.13972485065460205, std is 0.0014464775468852745 
[Timing prediction] Total patch predictions is 2.426694631576538 seconds.
prediction done
[Timing] another fold took 2.5174238681793213 seconds
[Timing] loading another fold took 0.05017447471618652 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1639988124370575, std is 0.002532819392771975.
[Timing prediction] mean of stuff after each patch pred is 0.14001253247261047, std is 0.0014876429988831983 
[Timing prediction] Total patch predictions is 2.432147264480591 seconds.
prediction done
[Timing] another fold took 2.5226335525512695 seconds
[Timing] loading another fold took 0.04988265037536621 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10], [0, 35], [0, 95]]
number of tiles: 8
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1674908995628357, std is 0.0044278502472318.
[Timing prediction] mean of stuff after each patch pred is 0.14003339409828186, std is 0.0014594391954698813 
[Timing prediction] Total patch predictions is 2.460261344909668 seconds.
prediction done
[Timing] another fold took 2.5502047538757324 seconds
[Timing] normalising with folds took 0.0028772354125976562 seconds
[Timing] transposing backwards took 3.337860107421875e-05 seconds
[Timing] full prediction took 57.936349391937256 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00022.nii.gz
[Timing] loading took 0.04923701286315918 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 465, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 104, 209], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1671811474694146, std is 0.006062148893593204.
[Timing prediction] mean of stuff after each patch pred is 0.14158546129862468, std is 0.00368191339409526 
[Timing prediction] Total patch predictions is 13.894811868667603 seconds.
prediction done
[Timing] fold 0 prediction took 14.136049032211304 seconds
[Timing] loading another fold took 0.04743027687072754 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 465, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 104, 209], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16374353302849665, std is 0.0016759902971453672.
[Timing prediction] mean of stuff after each patch pred is 0.14186213811238607, std is 0.0036861091822287203 
[Timing prediction] Total patch predictions is 13.75255799293518 seconds.
prediction done
[Timing] another fold took 14.011643886566162 seconds
[Timing] loading another fold took 0.04751253128051758 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 465, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 104, 209], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16390671730041503, std is 0.0017863949690711503.
[Timing prediction] mean of stuff after each patch pred is 0.14189137882656522, std is 0.0034743174355016315 
[Timing prediction] Total patch predictions is 13.761199951171875 seconds.
prediction done
[Timing] another fold took 14.020099878311157 seconds
[Timing] loading another fold took 0.0469212532043457 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 465, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 104, 209], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16339649624294705, std is 0.0013461460933850145.
[Timing prediction] mean of stuff after each patch pred is 0.14118654992845323, std is 0.0036315991009487664 
[Timing prediction] Total patch predictions is 13.706515312194824 seconds.
prediction done
[Timing] another fold took 13.963055849075317 seconds
[Timing] loading another fold took 0.046864986419677734 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 465, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 104, 209], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16444813940260145, std is 0.0014615606863504305.
[Timing prediction] mean of stuff after each patch pred is 0.14211220741271974, std is 0.003444071438420442 
[Timing prediction] Total patch predictions is 13.795535802841187 seconds.
prediction done
[Timing] another fold took 14.056434869766235 seconds
[Timing] normalising with folds took 0.009772539138793945 seconds
[Timing] transposing backwards took 2.8371810913085938e-05 seconds
[Timing] full prediction took 128.47230410575867 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00020.nii.gz
[Timing] loading took 0.048989295959472656 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1686143822140164, std is 0.006201843969698812.
[Timing prediction] mean of stuff after each patch pred is 0.14251959058973523, std is 0.0036637340354408092 
[Timing prediction] Total patch predictions is 14.00137186050415 seconds.
prediction done
[Timing] fold 0 prediction took 14.251507043838501 seconds
[Timing] loading another fold took 0.0462031364440918 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1647445254855686, std is 0.001493159468058859.
[Timing prediction] mean of stuff after each patch pred is 0.14242004288567436, std is 0.003437552980547003 
[Timing prediction] Total patch predictions is 13.822717666625977 seconds.
prediction done
[Timing] another fold took 14.092293977737427 seconds
[Timing] loading another fold took 0.04678845405578613 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16516492631700302, std is 0.001566054473666187.
[Timing prediction] mean of stuff after each patch pred is 0.14292389551798504, std is 0.00358162488619914 
[Timing prediction] Total patch predictions is 13.864330053329468 seconds.
prediction done
[Timing] another fold took 14.13429045677185 seconds
[Timing] loading another fold took 0.04681277275085449 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1652949121263292, std is 0.0021400071434996715.
[Timing prediction] mean of stuff after each patch pred is 0.14290021260579427, std is 0.003528126848230714 
[Timing prediction] Total patch predictions is 13.869138956069946 seconds.
prediction done
[Timing] another fold took 14.136964559555054 seconds
[Timing] loading another fold took 0.04692649841308594 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 486, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 115, 230], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1650524033440484, std is 0.0015652437188237837.
[Timing prediction] mean of stuff after each patch pred is 0.14288050333658855, std is 0.0035230894739467365 
[Timing prediction] Total patch predictions is 13.8572838306427 seconds.
prediction done
[Timing] another fold took 14.132025003433228 seconds
[Timing] normalising with folds took 0.011492013931274414 seconds
[Timing] transposing backwards took 3.886222839355469e-05 seconds
[Timing] full prediction took 199.5851321220398 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00021.nii.gz
[Timing] loading took 0.04929757118225098 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16648617850409614, std is 0.0041910661469070154.
[Timing prediction] mean of stuff after each patch pred is 0.14282268948025173, std is 0.0036353440532354174 
[Timing prediction] Total patch predictions is 13.919211149215698 seconds.
prediction done
[Timing] fold 0 prediction took 14.178266286849976 seconds
[Timing] loading another fold took 0.0465550422668457 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16531550619337293, std is 0.0015019899875782024.
[Timing prediction] mean of stuff after each patch pred is 0.14324232737223308, std is 0.0038728491762725996 
[Timing prediction] Total patch predictions is 13.885462284088135 seconds.
prediction done
[Timing] another fold took 14.163236856460571 seconds
[Timing] loading another fold took 0.046570777893066406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16545292536417644, std is 0.0015624388492302779.
[Timing prediction] mean of stuff after each patch pred is 0.14324141608344185, std is 0.0037245428637440827 
[Timing prediction] Total patch predictions is 13.891566276550293 seconds.
prediction done
[Timing] another fold took 14.175192832946777 seconds
[Timing] loading another fold took 0.04941511154174805 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16544352107577853, std is 0.0014332974471365058.
[Timing prediction] mean of stuff after each patch pred is 0.1432584073808458, std is 0.0036812040821066015 
[Timing prediction] Total patch predictions is 13.891903162002563 seconds.
prediction done
[Timing] another fold took 14.171096086502075 seconds
[Timing] loading another fold took 0.04738497734069824 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 124, 249], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16546853913201226, std is 0.001478153527396965.
[Timing prediction] mean of stuff after each patch pred is 0.14332907994588215, std is 0.0037912873657141495 
[Timing prediction] Total patch predictions is 13.896222591400146 seconds.
prediction done
[Timing] another fold took 14.179941415786743 seconds
[Timing] normalising with folds took 0.011538982391357422 seconds
[Timing] transposing backwards took 3.24249267578125e-05 seconds
[Timing] full prediction took 270.8368308544159 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00023.nii.gz
[Timing] loading took 0.04900360107421875 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16725010342068142, std is 0.004843338793174549.
[Timing prediction] mean of stuff after each patch pred is 0.1432668368021647, std is 0.003235035100039836 
[Timing prediction] Total patch predictions is 13.973594665527344 seconds.
prediction done
[Timing] fold 0 prediction took 14.204234600067139 seconds
[Timing] loading another fold took 0.04842185974121094 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16540276209513347, std is 0.001562393942042363.
[Timing prediction] mean of stuff after each patch pred is 0.14309295018513998, std is 0.0032038242998225193 
[Timing prediction] Total patch predictions is 13.882622003555298 seconds.
prediction done
[Timing] another fold took 14.129523038864136 seconds
[Timing] loading another fold took 0.04633331298828125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.165444638994005, std is 0.0014120485632790477.
[Timing prediction] mean of stuff after each patch pred is 0.14322252273559571, std is 0.0031083755233922415 
[Timing prediction] Total patch predictions is 13.890344142913818 seconds.
prediction done
[Timing] another fold took 14.1331307888031 seconds
[Timing] loading another fold took 0.04754471778869629 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16539772351582846, std is 0.0016630796690785305.
[Timing prediction] mean of stuff after each patch pred is 0.14302027490403918, std is 0.0032835755379150007 
[Timing prediction] Total patch predictions is 13.879159927368164 seconds.
prediction done
[Timing] another fold took 14.122014045715332 seconds
[Timing] loading another fold took 0.04649615287780762 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 436, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 90, 180], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16541788842942978, std is 0.0014200231545403264.
[Timing prediction] mean of stuff after each patch pred is 0.14305247200859916, std is 0.003154770121809467 
[Timing prediction] Total patch predictions is 13.881475448608398 seconds.
prediction done
[Timing] another fold took 14.123898983001709 seconds
[Timing] normalising with folds took 0.00924229621887207 seconds
[Timing] transposing backwards took 3.218650817871094e-05 seconds
[Timing] full prediction took 341.9252257347107 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00028.nii.gz
[Timing] loading took 0.049011945724487305 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 472, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 108, 216], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16740658548143175, std is 0.004675781076699257.
[Timing prediction] mean of stuff after each patch pred is 0.14359602398342555, std is 0.0037970126536340924 
[Timing prediction] Total patch predictions is 13.995437622070312 seconds.
prediction done
[Timing] fold 0 prediction took 14.23655652999878 seconds
[Timing] loading another fold took 0.04633021354675293 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 472, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 108, 216], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16560396088494195, std is 0.0014215302031974051.
[Timing prediction] mean of stuff after each patch pred is 0.14348101086086698, std is 0.0034950412862406834 
[Timing prediction] Total patch predictions is 13.909128189086914 seconds.
prediction done
[Timing] another fold took 14.173316240310669 seconds
[Timing] loading another fold took 0.048029184341430664 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 472, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 108, 216], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16590242915683323, std is 0.0015962118120700414.
[Timing prediction] mean of stuff after each patch pred is 0.14348361757066513, std is 0.0034049495432748075 
[Timing prediction] Total patch predictions is 13.92269515991211 seconds.
prediction done
[Timing] another fold took 14.187061071395874 seconds
[Timing] loading another fold took 0.04830217361450195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 472, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 108, 216], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1658852948082818, std is 0.0017509995888382052.
[Timing prediction] mean of stuff after each patch pred is 0.14351365831163193, std is 0.0035944276278602394 
[Timing prediction] Total patch predictions is 13.923369646072388 seconds.
prediction done
[Timing] another fold took 14.190395832061768 seconds
[Timing] loading another fold took 0.04737997055053711 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 472, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 108, 216], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16576480865478516, std is 0.0014990142777678683.
[Timing prediction] mean of stuff after each patch pred is 0.14348583751254612, std is 0.0033639494166836583 
[Timing prediction] Total patch predictions is 13.91658616065979 seconds.
prediction done
[Timing] another fold took 14.17612600326538 seconds
[Timing] normalising with folds took 0.009840726852416992 seconds
[Timing] transposing backwards took 2.8848648071289062e-05 seconds
[Timing] full prediction took 413.3422124385834 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00026.nii.gz
[Timing] loading took 0.04772782325744629 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 121, 242], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16719170146518283, std is 0.003908597591549153.
[Timing prediction] mean of stuff after each patch pred is 0.1435523721906874, std is 0.003736912680151267 
[Timing prediction] Total patch predictions is 13.983822584152222 seconds.
prediction done
[Timing] fold 0 prediction took 14.240307331085205 seconds
[Timing] loading another fold took 0.04824542999267578 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 121, 242], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16580458217196994, std is 0.0015541705723754824.
[Timing prediction] mean of stuff after each patch pred is 0.14350197050306532, std is 0.003995473719263939 
[Timing prediction] Total patch predictions is 13.919107913970947 seconds.
prediction done
[Timing] another fold took 14.195260763168335 seconds
[Timing] loading another fold took 0.04735159873962402 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 121, 242], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16588511996799046, std is 0.0014580956450442766.
[Timing prediction] mean of stuff after each patch pred is 0.14369709756639268, std is 0.003765881377584073 
[Timing prediction] Total patch predictions is 13.931507587432861 seconds.
prediction done
[Timing] another fold took 14.208791494369507 seconds
[Timing] loading another fold took 0.046952247619628906 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 121, 242], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16577866342332628, std is 0.001493775188544769.
[Timing prediction] mean of stuff after each patch pred is 0.14357319937811958, std is 0.0037447351169664837 
[Timing prediction] Total patch predictions is 13.92113995552063 seconds.
prediction done
[Timing] another fold took 14.205359697341919 seconds
[Timing] loading another fold took 0.047499656677246094 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 121, 242], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1657632138994005, std is 0.0013998725695387004.
[Timing prediction] mean of stuff after each patch pred is 0.14376691712273493, std is 0.0039697522583218535 
[Timing prediction] Total patch predictions is 13.92920708656311 seconds.
prediction done
[Timing] another fold took 14.207248210906982 seconds
[Timing] normalising with folds took 0.011120319366455078 seconds
[Timing] transposing backwards took 3.266334533691406e-05 seconds
[Timing] full prediction took 484.7697105407715 seconds
predicting /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/p16/batch2/segmentations/Task612/panc_00027.nii.gz
[Timing] loading took 0.04876375198364258 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 474, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 109, 218], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1674965540568034, std is 0.004469501744840097.
[Timing prediction] mean of stuff after each patch pred is 0.14354043006896972, std is 0.003521833100969489 
[Timing prediction] Total patch predictions is 13.997003316879272 seconds.
prediction done
[Timing] fold 0 prediction took 14.242895603179932 seconds
[Timing] loading another fold took 0.04800271987915039 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 474, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 109, 218], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16573090023464626, std is 0.0015363342371137575.
[Timing prediction] mean of stuff after each patch pred is 0.14338972303602432, std is 0.00359144849935653 
[Timing prediction] Total patch predictions is 13.910746097564697 seconds.
prediction done
[Timing] another fold took 14.172510862350464 seconds
[Timing] loading another fold took 0.04718828201293945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 474, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 109, 218], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16578287018669977, std is 0.0016419920320048383.
[Timing prediction] mean of stuff after each patch pred is 0.14340970781114365, std is 0.0035504460178468187 
[Timing prediction] Total patch predictions is 13.914003610610962 seconds.
prediction done
[Timing] another fold took 14.182292699813843 seconds
[Timing] loading another fold took 0.04689955711364746 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 474, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 109, 218], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.1656368096669515, std is 0.0014475678928449918.
[Timing prediction] mean of stuff after each patch pred is 0.1433731238047282, std is 0.003494889404508783 
[Timing prediction] Total patch predictions is 13.905758619308472 seconds.
prediction done
[Timing] another fold took 14.17279839515686 seconds
[Timing] loading another fold took 0.04902815818786621 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 474, 582)
patch size: [ 32 256 224]
steps (x, y, and z): [[0, 10, 19], [0, 109, 218], [0, 90, 179, 268, 358]]
number of tiles: 45
using precomputed Gaussian
[Timing prediction] mean of all patch predictions is 0.16576799286736382, std is 0.002028604789051676.
[Timing prediction] mean of stuff after each patch pred is 0.14340963893466527, std is 0.003615609869165575 
[Timing prediction] Total patch predictions is 13.913309812545776 seconds.
prediction done
[Timing] another fold took 14.175781011581421 seconds
[Timing] normalising with folds took 0.010010242462158203 seconds
[Timing] transposing backwards took 3.504753112792969e-05 seconds
[Timing] full prediction took 556.0955746173859 seconds
[Timing] Another preprocessing process done, it took 556.1838126182556 seconds
[Timing] Another preprocessing process done, it took 556.1838400363922 seconds
[Timing] Another preprocessing process done, it took 556.221577167511 seconds
[Timing] Another preprocessing process done, it took 556.2216155529022 seconds
[Timing] Another preprocessing process done, it took 556.2216365337372 seconds
[Timing] Another preprocessing process done, it took 556.2217009067535 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
[Timing] postprocessing took 2.5726242065429688 seconds
Program finished with exit code 0 at: Tue Dec 13 19:54:01 CET 2022
