Starting at Wed Aug 10 12:02:15 CEST 2022
Running on hosts: res-hpc-lkeb04
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 8.
Account: div2-lkeb
Job ID: 11441281
Job name: PancreasTrain
Node running script: res-hpc-lkeb04
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Wed Aug 10 16:34:50 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 495.29.05    Driver Version: 495.29.05    CUDA Version: 11.5     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  On   | 00000000:06:00.0 Off |                  N/A |
| 33%   58C    P8    11W / 250W |      0MiB / 11178MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-4v328mi4/hiddenlayer_7e112e57f69d45de8e4333a8a9e9d977
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.0-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.3-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0-py3-none-any.whl
Collecting scipy
  Using cached scipy-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (43.9 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24-py3-none-any.whl
Collecting numpy
  Using cached numpy-1.23.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.0 MB)
Collecting sklearn
  Using cached sklearn-0.0-py2.py3-none-any.whl
Collecting SimpleITK
  Using cached SimpleITK-2.1.1.2-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (48.4 MB)
Collecting pandas
  Using cached pandas-1.4.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.1-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.8.8-py3-none-any.whl (208 kB)
Collecting matplotlib
  Using cached matplotlib-3.5.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)
Collecting monai
  Using cached monai-0.9.1-202207251608-py3-none-any.whl (990 kB)
Collecting einops
  Using cached einops-0.4.1-py3-none-any.whl (28 kB)
Collecting ipython
  Using cached ipython-8.4.0-py3-none-any.whl (750 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.3.0-py3-none-any.whl (25 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting future
  Using cached future-0.18.2-py3-none-any.whl
Collecting scikit-learn
  Using cached scikit_learn-1.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.5 MB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.2.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.2 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting networkx>=2.2
  Using cached networkx-2.8.5-py3-none-any.whl (2.0 MB)
Collecting imageio>=2.4.1
  Using cached imageio-2.21.1-py3-none-any.whl (3.4 MB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.9 MB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.14-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.8 MB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0
  Using cached prompt_toolkit-3.0.30-py3-none-any.whl (381 kB)
Collecting stack-data
  Using cached stack_data-0.3.0-py3-none-any.whl (23 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.12.0-py3-none-any.whl (1.1 MB)
Collecting setuptools>=18.5
  Using cached setuptools-63.4.2-py3-none-any.whl (1.2 MB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting traitlets>=5
  Using cached traitlets-5.3.0-py3-none-any.whl (106 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.3-py3-none-any.whl (8.2 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.34.4-py3-none-any.whl (944 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting pytz>=2020.1
  Using cached pytz-2022.1-py2.py3-none-any.whl (503 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.6.15-py3-none-any.whl (160 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.11-py2.py3-none-any.whl (139 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.0-py3-none-any.whl (39 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.3-py3-none-any.whl (61 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.1.0-py2.py3-none-any.whl (306 kB)
Collecting asttokens
  Using cached asttokens-2.0.7-py2.py3-none-any.whl (23 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting executing
  Using cached executing-0.9.1-py2.py3-none-any.whl (16 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.3.0 SimpleITK-2.1.1.2 argparse-1.4.0 asttokens-2.0.7 backcall-0.2.0 batchgenerators-0.24 certifi-2022.6.15 charset-normalizer-2.1.0 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.3 einops-0.4.1 executing-0.9.1 fonttools-4.34.4 future-0.18.2 graphviz-0.20.1 idna-3.3 imageio-2.21.1 ipython-8.4.0 jedi-0.18.1 joblib-1.1.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.5.2 matplotlib-inline-0.1.3 medpy-0.4.0 monai-0.9.1 networkx-2.8.5 nibabel-4.0.1 nnunet numpy-1.23.1 packaging-21.3 pandas-1.4.3 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.2.0 prompt-toolkit-3.0.30 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.12.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.14 pytz-2022.1 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.2 scipy-1.9.0 setuptools-63.4.2 six-1.16.0 sklearn-0.0 stack-data-0.3.0 threadpoolctl-3.1.0 tifffile-2022.8.8 torch-1.12.0 tqdm-4.64.0 traceback2-1.4.0 traitlets-5.3.0 typing-extensions-4.3.0 unittest2-1.1.0 urllib3-1.26.11 wcwidth-0.2.5
1.12.0+cu116
8302
/exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/__init__.py


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2_Loss_DC_CE_weight01', task='901', fold='0', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNet_variants.loss_function.nnUNetTrainerV2_Loss_DC_CE_weight01.nnUNetTrainerV2_Loss_DC_CE_weight01'>
For that I will be using the following configuration:
num_classes:  4
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 96, 160, 160]), 'median_patient_size_in_voxels': array([147, 255, 255]), 'current_spacing': array([3.03      , 1.52075025, 1.52075025]), 'original_spacing': array([3.        , 0.75781244, 0.75781244]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 48, 192, 192]), 'median_patient_size_in_voxels': array([148, 512, 512]), 'current_spacing': array([3.        , 0.75781244, 0.75781244]), 'original_spacing': array([3.        , 0.75781244, 0.75781244]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task901/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-08-10 16:36:26.530819: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-08-10 16:36:26.590007: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task901/splits_final.pkl
2022-08-10 16:36:26.593971: The split file contains 5 splits.
2022-08-10 16:36:26.596270: Desired fold for training: 0
2022-08-10 16:36:26.598503: This split has 20 training and 6 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-08-10 16:36:27.189652: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-08-10 16:36:38.297850: Unable to plot network architecture:
2022-08-10 16:36:38.300409: local variable 'g' referenced before assignment
2022-08-10 16:36:38.302548: 
printing the network instead:

2022-08-10 16:36:38.304637: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-08-10 16:36:38.310678: 

2022-08-10 16:36:38.313059: 
epoch:  0
DC uitgerekend: tensor([0.0320, 0.0069, 0.0177, 0.0106], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02731955796480179
DC na mean: 0.02731955796480179, zelfde als eerst: False
DC uitgerekend: tensor([0.0314, 0.0069, 0.0211, 0.0123], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.027260368689894676
DC na mean: 0.027260368689894676, zelfde als eerst: False
DC uitgerekend: tensor([0.0292, 0.0078, 0.0238, 0.0129], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025852145627141
DC na mean: 0.025852145627141, zelfde als eerst: False
DC uitgerekend: tensor([0.0260, 0.0063, 0.0233, 0.0103], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023059742525219917
DC na mean: 0.023059742525219917, zelfde als eerst: False
DC uitgerekend: tensor([0.0306, 0.0434, 0.0134, 0.0062], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02834596112370491
DC na mean: 0.02834596112370491, zelfde als eerst: False
DC uitgerekend: tensor([0.0310, 0.0417, 0.0150, 0.0073], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028794417157769203
DC na mean: 0.028794417157769203, zelfde als eerst: False
DC uitgerekend: tensor([0.0289, 0.0444, 0.0155, 0.0070], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.027355870231986046
DC na mean: 0.027355870231986046, zelfde als eerst: False
DC uitgerekend: tensor([0.0277, 0.0384, 0.0169, 0.0070], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02614460699260235
DC na mean: 0.02614460699260235, zelfde als eerst: False
DC uitgerekend: tensor([3.5103e-04, 2.1425e-11, 5.4744e-03, 6.2190e-12], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0006911270320415497
DC na mean: 0.0006911270320415497, zelfde als eerst: False
DC uitgerekend: tensor([3.7848e-04, 6.7824e-11, 5.4962e-03, 5.0409e-11], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0007139176595956087
DC na mean: 0.0007139176595956087, zelfde als eerst: False
DC uitgerekend: tensor([7.0709e-04, 6.5541e-10, 5.5592e-03, 2.9739e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0009715408086776733
DC na mean: 0.0009715408086776733, zelfde als eerst: False
DC uitgerekend: tensor([4.5480e-04, 3.0934e-09, 4.6477e-03, 2.6751e-09], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0007073621382005513
DC na mean: 0.0007073621382005513, zelfde als eerst: False
DC uitgerekend: tensor([2.8000e-02, 2.0792e-11, 1.8565e-02, 5.3236e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02337591163814068
DC na mean: 0.02337591163814068, zelfde als eerst: False
DC uitgerekend: tensor([2.5559e-02, 6.8786e-11, 2.2623e-02, 5.7555e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021843615919351578
DC na mean: 0.021843615919351578, zelfde als eerst: False
DC uitgerekend: tensor([2.1182e-02, 6.2406e-10, 1.9162e-02, 5.9789e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01822778582572937
DC na mean: 0.01822778582572937, zelfde als eerst: False
DC uitgerekend: tensor([1.9425e-02, 3.1345e-09, 2.4591e-02, 6.5258e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.017335528507828712
DC na mean: 0.017335528507828712, zelfde als eerst: False
DC uitgerekend: tensor([0.0274, 0.0175, 0.0154, 0.0216], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025249190628528595
DC na mean: 0.025249190628528595, zelfde als eerst: False
DC uitgerekend: tensor([0.0274, 0.0171, 0.0162, 0.0232], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025468062609434128
DC na mean: 0.025468062609434128, zelfde als eerst: False
DC uitgerekend: tensor([0.0237, 0.0163, 0.0147, 0.0254], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022547880187630653
DC na mean: 0.022547880187630653, zelfde als eerst: False
DC uitgerekend: tensor([0.0223, 0.0224, 0.0137, 0.0209], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021539639681577682
DC na mean: 0.021539639681577682, zelfde als eerst: False
DC uitgerekend: tensor([0.0313, 0.0009, 0.0242, 0.0111], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.026858799159526825
DC na mean: 0.026858799159526825, zelfde als eerst: False
DC uitgerekend: tensor([0.0272, 0.0008, 0.0259, 0.0122], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02394619584083557
DC na mean: 0.02394619584083557, zelfde als eerst: False
DC uitgerekend: tensor([0.0246, 0.0011, 0.0271, 0.0131], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022083474323153496
DC na mean: 0.022083474323153496, zelfde als eerst: False
DC uitgerekend: tensor([0.0223, 0.0002, 0.0256, 0.0135], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02016330510377884
DC na mean: 0.02016330510377884, zelfde als eerst: False
DC uitgerekend: tensor([0.0025, 0.0491, 0.0199, 0.0006], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.007278266828507185
DC na mean: 0.007278266828507185, zelfde als eerst: False
DC uitgerekend: tensor([0.0018, 0.0443, 0.0128, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.005838185083121061
DC na mean: 0.005838185083121061, zelfde als eerst: False
DC uitgerekend: tensor([0.0015, 0.0499, 0.0158, 0.0010], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.006255509331822395
DC na mean: 0.006255509331822395, zelfde als eerst: False
DC uitgerekend: tensor([0.0006, 0.0391, 0.0174, 0.0015], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.004950555972754955
DC na mean: 0.004950555972754955, zelfde als eerst: False
DC uitgerekend: tensor([0.0185, 0.0596, 0.0129, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.020031942054629326
DC na mean: 0.020031942054629326, zelfde als eerst: False
DC uitgerekend: tensor([0.0156, 0.0623, 0.0109, 0.0032], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01789866015315056
DC na mean: 0.01789866015315056, zelfde als eerst: False
DC uitgerekend: tensor([0.0118, 0.0587, 0.0097, 0.0034], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01463337242603302
DC na mean: 0.01463337242603302, zelfde als eerst: False
DC uitgerekend: tensor([0.0106, 0.0526, 0.0092, 0.0040], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.013185974210500717
DC na mean: 0.013185974210500717, zelfde als eerst: False
DC uitgerekend: tensor([0.0320, 0.0012, 0.0175, 0.0054], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.026481235399842262
DC na mean: 0.026481235399842262, zelfde als eerst: False
DC uitgerekend: tensor([0.0288, 0.0012, 0.0146, 0.0056], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02377547137439251
DC na mean: 0.02377547137439251, zelfde als eerst: False
DC uitgerekend: tensor([0.0247, 0.0012, 0.0127, 0.0067], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.020577382296323776
DC na mean: 0.020577382296323776, zelfde als eerst: False
DC uitgerekend: tensor([0.0227, 0.0022, 0.0112, 0.0084], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01914806477725506
DC na mean: 0.01914806477725506, zelfde als eerst: False
DC uitgerekend: tensor([4.2956e-02, 2.4569e-11, 2.4365e-02, 6.7350e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03543571010231972
DC na mean: 0.03543571010231972, zelfde als eerst: False
DC uitgerekend: tensor([3.2033e-02, 8.3580e-11, 1.7036e-02, 6.9317e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.026484448462724686
DC na mean: 0.026484448462724686, zelfde als eerst: False
DC uitgerekend: tensor([2.5505e-02, 7.5816e-10, 1.9122e-02, 6.5135e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02159152552485466
DC na mean: 0.02159152552485466, zelfde als eerst: False
DC uitgerekend: tensor([2.1996e-02, 3.8123e-09, 1.9879e-02, 7.5424e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.019029688090085983
DC na mean: 0.019029688090085983, zelfde als eerst: False
DC uitgerekend: tensor([0.0295, 0.0989, 0.0093, 0.0030], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03127463161945343
DC na mean: 0.03127463161945343, zelfde als eerst: False
DC uitgerekend: tensor([0.0228, 0.1076, 0.0073, 0.0030], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02659633941948414
DC na mean: 0.02659633941948414, zelfde als eerst: False
DC uitgerekend: tensor([0.0188, 0.1019, 0.0106, 0.0024], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023295188322663307
DC na mean: 0.023295188322663307, zelfde als eerst: False
DC uitgerekend: tensor([0.0194, 0.0957, 0.0099, 0.0021], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023169605061411858
DC na mean: 0.023169605061411858, zelfde als eerst: False
DC uitgerekend: tensor([5.5014e-02, 4.6336e-05, 1.7373e-02, 3.9299e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04396103695034981
DC na mean: 0.04396103695034981, zelfde als eerst: False
DC uitgerekend: tensor([4.1587e-02, 1.5220e-05, 1.7833e-02, 3.6127e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03364116698503494
DC na mean: 0.03364116698503494, zelfde als eerst: False
DC uitgerekend: tensor([3.4199e-02, 1.0086e-06, 1.5728e-02, 4.3708e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02785329520702362
DC na mean: 0.02785329520702362, zelfde als eerst: False
DC uitgerekend: tensor([3.1526e-02, 4.3206e-09, 1.5658e-02, 3.1696e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02569940686225891
DC na mean: 0.02569940686225891, zelfde als eerst: False
DC uitgerekend: tensor([2.8668e-02, 3.0441e-11, 1.9199e-02, 8.8112e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.024207066744565964
DC na mean: 0.024207066744565964, zelfde als eerst: False
DC uitgerekend: tensor([2.3660e-02, 1.0288e-10, 1.4771e-02, 7.5987e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.019920405000448227
DC na mean: 0.019920405000448227, zelfde als eerst: False
DC uitgerekend: tensor([2.1502e-02, 9.0270e-10, 1.3025e-02, 8.0919e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0181640163064003
DC na mean: 0.0181640163064003, zelfde als eerst: False
DC uitgerekend: tensor([1.8821e-02, 4.6754e-09, 1.5042e-02, 1.0007e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01640455797314644
DC na mean: 0.01640455797314644, zelfde als eerst: False
DC uitgerekend: tensor([0.0488, 0.1103, 0.0234, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04815259948372841
DC na mean: 0.04815259948372841, zelfde als eerst: False
DC uitgerekend: tensor([0.0352, 0.1086, 0.0145, 0.0040], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.036865878850221634
DC na mean: 0.036865878850221634, zelfde als eerst: False
DC uitgerekend: tensor([0.0312, 0.0837, 0.0153, 0.0044], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03195462003350258
DC na mean: 0.03195462003350258, zelfde als eerst: False
DC uitgerekend: tensor([0.0239, 0.0775, 0.0170, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0258609801530838
DC na mean: 0.0258609801530838, zelfde als eerst: False
DC uitgerekend: tensor([0.0136, 0.0946, 0.0043, 0.0012], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.018160510808229446
DC na mean: 0.018160510808229446, zelfde als eerst: False
DC uitgerekend: tensor([0.0093, 0.0851, 0.0034, 0.0015], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.014083392918109894
DC na mean: 0.014083392918109894, zelfde als eerst: False
DC uitgerekend: tensor([0.0058, 0.0704, 0.0036, 0.0020], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0103379487991333
DC na mean: 0.0103379487991333, zelfde als eerst: False
DC uitgerekend: tensor([0.0036, 0.0523, 0.0036, 0.0010], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.007143048103898764
DC na mean: 0.007143048103898764, zelfde als eerst: False
DC uitgerekend: tensor([0.0737, 0.0969, 0.0412, 0.0204], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06887328624725342
DC na mean: 0.06887328624725342, zelfde als eerst: False
DC uitgerekend: tensor([0.0597, 0.0926, 0.0269, 0.0184], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05652203783392906
DC na mean: 0.05652203783392906, zelfde als eerst: False
DC uitgerekend: tensor([0.0516, 0.0681, 0.0282, 0.0144], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04817242547869682
DC na mean: 0.04817242547869682, zelfde als eerst: False
DC uitgerekend: tensor([0.0419, 0.0511, 0.0249, 0.0140], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03912007436156273
DC na mean: 0.03912007436156273, zelfde als eerst: False
DC uitgerekend: tensor([4.9115e-02, 4.7319e-11, 3.0230e-02, 8.5760e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04076549410820007
DC na mean: 0.04076549410820007, zelfde als eerst: False
DC uitgerekend: tensor([4.0879e-02, 1.6280e-10, 2.5561e-02, 7.2043e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0339660570025444
DC na mean: 0.0339660570025444, zelfde als eerst: False
DC uitgerekend: tensor([4.3166e-02, 1.4207e-09, 1.8542e-02, 5.7993e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03507695347070694
DC na mean: 0.03507695347070694, zelfde als eerst: False
DC uitgerekend: tensor([2.6958e-02, 8.1897e-09, 1.5523e-02, 4.3312e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022263944149017334
DC na mean: 0.022263944149017334, zelfde als eerst: False
DC uitgerekend: tensor([0.0415, 0.0245, 0.0310, 0.0099], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03696375712752342
DC na mean: 0.03696375712752342, zelfde als eerst: False
DC uitgerekend: tensor([0.0357, 0.0272, 0.0191, 0.0092], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03175134211778641
DC na mean: 0.03175134211778641, zelfde als eerst: False
DC uitgerekend: tensor([0.0297, 0.0221, 0.0137, 0.0085], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.026270080357789993
DC na mean: 0.026270080357789993, zelfde als eerst: False
DC uitgerekend: tensor([0.0235, 0.0207, 0.0154, 0.0067], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021335335448384285
DC na mean: 0.021335335448384285, zelfde als eerst: False
DC uitgerekend: tensor([0.0679, 0.0006, 0.0364, 0.0130], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05604926869273186
DC na mean: 0.05604926869273186, zelfde als eerst: False
DC uitgerekend: tensor([0.0600, 0.0005, 0.0225, 0.0114], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04883022606372833
DC na mean: 0.04883022606372833, zelfde als eerst: False
DC uitgerekend: tensor([0.0560, 0.0004, 0.0193, 0.0095], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04535353183746338
DC na mean: 0.04535353183746338, zelfde als eerst: False
DC uitgerekend: tensor([0.0413, 0.0004, 0.0146, 0.0062], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.033384907990694046
DC na mean: 0.033384907990694046, zelfde als eerst: False
DC uitgerekend: tensor([0.0212, 0.0691, 0.0481, 0.0036], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025608301162719727
DC na mean: 0.025608301162719727, zelfde als eerst: False
DC uitgerekend: tensor([0.0234, 0.0669, 0.0299, 0.0026], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025617966428399086
DC na mean: 0.025617966428399086, zelfde als eerst: False
DC uitgerekend: tensor([0.0194, 0.0424, 0.0285, 0.0016], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02049202471971512
DC na mean: 0.02049202471971512, zelfde als eerst: False
DC uitgerekend: tensor([0.0124, 0.0397, 0.0318, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.015277044847607613
DC na mean: 0.015277044847607613, zelfde als eerst: False
DC uitgerekend: tensor([5.7236e-02, 8.5963e-11, 3.2829e-02, 2.0743e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04814868047833443
DC na mean: 0.04814868047833443, zelfde als eerst: False
DC uitgerekend: tensor([4.4219e-02, 3.1861e-10, 2.3159e-02, 2.0247e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03735369071364403
DC na mean: 0.03735369071364403, zelfde als eerst: False
DC uitgerekend: tensor([4.6989e-02, 2.6105e-09, 1.6622e-02, 1.4129e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03851064294576645
DC na mean: 0.03851064294576645, zelfde als eerst: False
DC uitgerekend: tensor([3.9333e-02, 1.7137e-08, 1.5880e-02, 1.2784e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03246097266674042
DC na mean: 0.03246097266674042, zelfde als eerst: False
DC uitgerekend: tensor([0.0463, 0.0020, 0.0391, 0.0184], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04023197293281555
DC na mean: 0.04023197293281555, zelfde als eerst: False
DC uitgerekend: tensor([0.0419, 0.0023, 0.0294, 0.0168], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.035932570695877075
DC na mean: 0.035932570695877075, zelfde als eerst: False
DC uitgerekend: tensor([0.0368, 0.0016, 0.0235, 0.0121], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.031166739761829376
DC na mean: 0.031166739761829376, zelfde als eerst: False
DC uitgerekend: tensor([0.0170, 0.0020, 0.0224, 0.0106], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01576150767505169
DC na mean: 0.01576150767505169, zelfde als eerst: False
DC uitgerekend: tensor([0.0620, 0.1242, 0.0482, 0.0248], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06286092847585678
DC na mean: 0.06286092847585678, zelfde als eerst: False
DC uitgerekend: tensor([0.0590, 0.1438, 0.0364, 0.0234], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06104253605008125
DC na mean: 0.06104253605008125, zelfde als eerst: False
DC uitgerekend: tensor([0.0594, 0.0800, 0.0227, 0.0193], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05510040000081062
DC na mean: 0.05510040000081062, zelfde als eerst: False
DC uitgerekend: tensor([0.0458, 0.0611, 0.0218, 0.0124], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04256343096494675
DC na mean: 0.04256343096494675, zelfde als eerst: False
DC uitgerekend: tensor([0.0472, 0.0202, 0.0362, 0.0107], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.041480690240859985
DC na mean: 0.041480690240859985, zelfde als eerst: False
DC uitgerekend: tensor([0.0456, 0.0242, 0.0284, 0.0105], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.039940107613801956
DC na mean: 0.039940107613801956, zelfde als eerst: False
DC uitgerekend: tensor([0.0410, 0.0217, 0.0138, 0.0094], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03502931073307991
DC na mean: 0.03502931073307991, zelfde als eerst: False
DC uitgerekend: tensor([0.0245, 0.0177, 0.0165, 0.0080], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022095637395977974
DC na mean: 0.022095637395977974, zelfde als eerst: False
DC uitgerekend: tensor([0.0159, 0.0214, 0.0145, 0.0039], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.015278106555342674
DC na mean: 0.015278106555342674, zelfde als eerst: False
DC uitgerekend: tensor([0.0125, 0.0247, 0.0180, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.013091791421175003
DC na mean: 0.013091791421175003, zelfde als eerst: False
DC uitgerekend: tensor([0.0074, 0.0091, 0.0105, 0.0016], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.007344466168433428
DC na mean: 0.007344466168433428, zelfde als eerst: False
DC uitgerekend: tensor([0.0082, 0.0179, 0.0152, 0.0011], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.008954166434705257
DC na mean: 0.008954166434705257, zelfde als eerst: False
DC uitgerekend: tensor([0.0359, 0.0095, 0.0120, 0.0033], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02948930114507675
DC na mean: 0.02948930114507675, zelfde als eerst: False
DC uitgerekend: tensor([0.0268, 0.0066, 0.0128, 0.0039], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022435028105974197
DC na mean: 0.022435028105974197, zelfde als eerst: False
DC uitgerekend: tensor([0.0397, 0.0167, 0.0102, 0.0025], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03276637941598892
DC na mean: 0.03276637941598892, zelfde als eerst: False
DC uitgerekend: tensor([0.0191, 0.0154, 0.0143, 0.0066], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01751306839287281
DC na mean: 0.01751306839287281, zelfde als eerst: False
DC uitgerekend: tensor([0.0555, 0.0171, 0.0217, 0.0154], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.046891871839761734
DC na mean: 0.046891871839761734, zelfde als eerst: False
DC uitgerekend: tensor([0.0568, 0.0251, 0.0201, 0.0177], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04854978993535042
DC na mean: 0.04854978993535042, zelfde als eerst: False
DC uitgerekend: tensor([0.0584, 0.0179, 0.0148, 0.0094], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04814385995268822
DC na mean: 0.04814385995268822, zelfde als eerst: False
DC uitgerekend: tensor([0.0291, 0.0128, 0.0203, 0.0102], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0257401242852211
DC na mean: 0.0257401242852211, zelfde als eerst: False
DC uitgerekend: tensor([0.0046, 0.0400, 0.0162, 0.0023], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.008040185086429119
DC na mean: 0.008040185086429119, zelfde als eerst: False
DC uitgerekend: tensor([0.0053, 0.0762, 0.0286, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01232907548546791
DC na mean: 0.01232907548546791, zelfde als eerst: False
DC uitgerekend: tensor([0.0039, 0.0360, 0.0170, 0.0013], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.007157439365983009
DC na mean: 0.007157439365983009, zelfde als eerst: False
DC uitgerekend: tensor([0.0008, 0.0246, 0.0147, 0.0006], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0037200958468019962
DC na mean: 0.0037200958468019962, zelfde als eerst: False
DC uitgerekend: tensor([0.0517, 0.0425, 0.0152, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04470618814229965
DC na mean: 0.04470618814229965, zelfde als eerst: False
DC uitgerekend: tensor([0.0455, 0.0853, 0.0232, 0.0071], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04391096532344818
DC na mean: 0.04391096532344818, zelfde als eerst: False
DC uitgerekend: tensor([0.0667, 0.0445, 0.0201, 0.0067], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.056782182306051254
DC na mean: 0.056782182306051254, zelfde als eerst: False
DC uitgerekend: tensor([0.0437, 0.0275, 0.0124, 0.0071], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0371985137462616
DC na mean: 0.0371985137462616, zelfde als eerst: False
DC uitgerekend: tensor([0.0371, 0.0146, 0.0176, 0.0114], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0318913534283638
DC na mean: 0.0318913534283638, zelfde als eerst: False
DC uitgerekend: tensor([0.0341, 0.0201, 0.0137, 0.0133], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.029892653226852417
DC na mean: 0.029892653226852417, zelfde als eerst: False
DC uitgerekend: tensor([0.0312, 0.0094, 0.0065, 0.0091], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02590865269303322
DC na mean: 0.02590865269303322, zelfde als eerst: False
DC uitgerekend: tensor([0.0245, 0.0053, 0.0068, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.020162319764494896
DC na mean: 0.020162319764494896, zelfde als eerst: False
DC uitgerekend: tensor([0.0363, 0.0360, 0.0030, 0.0067], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03140934929251671
DC na mean: 0.03140934929251671, zelfde als eerst: False
DC uitgerekend: tensor([0.0334, 0.0614, 0.0020, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03096562623977661
DC na mean: 0.03096562623977661, zelfde als eerst: False
DC uitgerekend: tensor([0.0565, 0.0327, 0.0016, 0.0064], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.046620700508356094
DC na mean: 0.046620700508356094, zelfde als eerst: False
DC uitgerekend: tensor([0.0308, 0.0141, 0.0058, 0.0026], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02539217658340931
DC na mean: 0.02539217658340931, zelfde als eerst: False
DC uitgerekend: tensor([1.9227e-02, 3.4448e-10, 1.1540e-02, 1.1971e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.015770021826028824
DC na mean: 0.015770021826028824, zelfde als eerst: False
DC uitgerekend: tensor([2.4133e-02, 1.0537e-09, 1.6890e-02, 1.4023e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.019970932975411415
DC na mean: 0.019970932975411415, zelfde als eerst: False
DC uitgerekend: tensor([4.3384e-02, 9.5234e-09, 1.2141e-02, 2.3639e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.034487783908843994
DC na mean: 0.034487783908843994, zelfde als eerst: False
DC uitgerekend: tensor([3.4527e-02, 1.2091e-07, 1.0214e-02, 1.0353e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.027424786239862442
DC na mean: 0.027424786239862442, zelfde als eerst: False
DC uitgerekend: tensor([0.0274, 0.0169, 0.0071, 0.0194], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.024452950805425644
DC na mean: 0.024452950805425644, zelfde als eerst: False
DC uitgerekend: tensor([0.0196, 0.0263, 0.0035, 0.0089], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01806877925992012
DC na mean: 0.01806877925992012, zelfde als eerst: False
DC uitgerekend: tensor([0.0152, 0.0285, 0.0033, 0.0091], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.014801683835685253
DC na mean: 0.014801683835685253, zelfde als eerst: False
DC uitgerekend: tensor([0.0198, 0.0149, 0.0015, 0.0083], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01713833026587963
DC na mean: 0.01713833026587963, zelfde als eerst: False
DC uitgerekend: tensor([0.0135, 0.0088, 0.0035, 0.0034], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0115575036033988
DC na mean: 0.0115575036033988, zelfde als eerst: False
DC uitgerekend: tensor([0.0113, 0.0097, 0.0020, 0.0033], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.009847369976341724
DC na mean: 0.009847369976341724, zelfde als eerst: False
DC uitgerekend: tensor([0.0094, 0.0085, 0.0020, 0.0044], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.008399239741265774
DC na mean: 0.008399239741265774, zelfde als eerst: False
DC uitgerekend: tensor([0.0117, 0.0059, 0.0038, 0.0100], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.010480260476469994
DC na mean: 0.010480260476469994, zelfde als eerst: False
DC uitgerekend: tensor([0.0302, 0.0137, 0.0044, 0.0084], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02529282309114933
DC na mean: 0.02529282309114933, zelfde als eerst: False
DC uitgerekend: tensor([0.0263, 0.0079, 0.0037, 0.0080], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02171984501183033
DC na mean: 0.02171984501183033, zelfde als eerst: False
DC uitgerekend: tensor([0.0286, 0.0039, 0.0035, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022985955700278282
DC na mean: 0.022985955700278282, zelfde als eerst: False
DC uitgerekend: tensor([0.0348, 0.0014, 0.0020, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.027360541746020317
DC na mean: 0.027360541746020317, zelfde als eerst: False
DC uitgerekend: tensor([0.0368, 0.0018, 0.0077, 0.0116], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.029913417994976044
DC na mean: 0.029913417994976044, zelfde als eerst: False
DC uitgerekend: tensor([0.0231, 0.0003, 0.0065, 0.0079], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.018903011456131935
DC na mean: 0.018903011456131935, zelfde als eerst: False
DC uitgerekend: tensor([2.0402e-02, 9.1093e-05, 3.5609e-03, 7.9743e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.016588032245635986
DC na mean: 0.016588032245635986, zelfde als eerst: False
DC uitgerekend: tensor([0.0285, 0.0001, 0.0029, 0.0080], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022756963968276978
DC na mean: 0.022756963968276978, zelfde als eerst: False
DC uitgerekend: tensor([7.8183e-04, 1.9244e-10, 1.6993e-02, 1.7244e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0020411796867847443
DC na mean: 0.0020411796867847443, zelfde als eerst: False
DC uitgerekend: tensor([8.9355e-04, 7.9378e-10, 1.0539e-02, 1.2483e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.001594047644175589
DC na mean: 0.001594047644175589, zelfde als eerst: False
DC uitgerekend: tensor([1.5402e-03, 8.8965e-09, 1.5018e-02, 3.1825e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0025848180521279573
DC na mean: 0.0025848180521279573, zelfde als eerst: False
DC uitgerekend: tensor([6.6936e-05, 1.6230e-07, 1.5383e-02, 5.4573e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0016546007245779037
DC na mean: 0.0016546007245779037, zelfde als eerst: False
DC uitgerekend: tensor([0.0421, 0.0169, 0.0292, 0.0179], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03731822967529297
DC na mean: 0.03731822967529297, zelfde als eerst: False
DC uitgerekend: tensor([0.0328, 0.0071, 0.0147, 0.0108], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.027733217924833298
DC na mean: 0.027733217924833298, zelfde als eerst: False
DC uitgerekend: tensor([0.0268, 0.0047, 0.0078, 0.0082], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02223212644457817
DC na mean: 0.02223212644457817, zelfde als eerst: False
DC uitgerekend: tensor([0.0270, 0.0025, 0.0042, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021801017224788666
DC na mean: 0.021801017224788666, zelfde als eerst: False
DC uitgerekend: tensor([0.0058, 0.0645, 0.0117, 0.0078], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.010955680161714554
DC na mean: 0.010955680161714554, zelfde als eerst: False
DC uitgerekend: tensor([0.0046, 0.0552, 0.0071, 0.0038], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.008602182380855083
DC na mean: 0.008602182380855083, zelfde als eerst: False
DC uitgerekend: tensor([0.0045, 0.0476, 0.0038, 0.0020], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.007576418109238148
DC na mean: 0.007576418109238148, zelfde als eerst: False
DC uitgerekend: tensor([0.0057, 0.0091, 0.0029, 0.0010], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0054161143489181995
DC na mean: 0.0054161143489181995, zelfde als eerst: False
DC uitgerekend: tensor([5.9612e-11, 2.5866e-02, 4.3156e-02, 9.7271e-06], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.005310125183314085
DC na mean: 0.005310125183314085, zelfde als eerst: False
DC uitgerekend: tensor([2.6446e-10, 1.2340e-02, 1.8690e-02, 1.2849e-06], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0023870791774243116
DC na mean: 0.0023870791774243116, zelfde als eerst: False
DC uitgerekend: tensor([2.9495e-09, 7.9825e-03, 1.8625e-02, 4.0862e-05], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0020498502999544144
DC na mean: 0.0020498502999544144, zelfde als eerst: False
DC uitgerekend: tensor([3.5318e-08, 3.7768e-03, 8.0430e-03, 4.8151e-07], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0009092790423892438
DC na mean: 0.0009092790423892438, zelfde als eerst: False
DC uitgerekend: tensor([0.0403, 0.0002, 0.0094, 0.0023], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.031934574246406555
DC na mean: 0.031934574246406555, zelfde als eerst: False
DC uitgerekend: tensor([0.0412, 0.0008, 0.0081, 0.0056], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03277583792805672
DC na mean: 0.03277583792805672, zelfde als eerst: False
DC uitgerekend: tensor([0.0587, 0.0009, 0.0067, 0.0057], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04615817219018936
DC na mean: 0.04615817219018936, zelfde als eerst: False
DC uitgerekend: tensor([5.8195e-02, 3.3011e-07, 3.2491e-03, 6.1844e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0454912893474102
DC na mean: 0.0454912893474102, zelfde als eerst: False
DC uitgerekend: tensor([2.9228e-02, 2.6235e-10, 5.3449e-02, 2.9911e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028895052149891853
DC na mean: 0.028895052149891853, zelfde als eerst: False
DC uitgerekend: tensor([3.5241e-02, 1.5323e-09, 5.0251e-02, 2.5164e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.032909441739320755
DC na mean: 0.032909441739320755, zelfde als eerst: False
DC uitgerekend: tensor([7.4860e-02, 2.0891e-08, 2.2635e-02, 1.0855e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.060160569846630096
DC na mean: 0.060160569846630096, zelfde als eerst: False
DC uitgerekend: tensor([9.7298e-02, 4.0405e-07, 6.4338e-03, 5.9349e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07579627633094788
DC na mean: 0.07579627633094788, zelfde als eerst: False
DC uitgerekend: tensor([3.1568e-03, 1.0642e-01, 3.3427e-10, 1.0549e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.011425793170928955
DC na mean: 0.011425793170928955, zelfde als eerst: False
DC uitgerekend: tensor([2.0230e-03, 7.8263e-02, 1.1767e-09, 8.2249e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.008209051564335823
DC na mean: 0.008209051564335823, zelfde als eerst: False
DC uitgerekend: tensor([1.3602e-03, 3.5106e-02, 2.1807e-08, 8.2645e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.004382528830319643
DC na mean: 0.004382528830319643, zelfde als eerst: False
DC uitgerekend: tensor([2.0436e-03, 7.5093e-03, 5.6643e-07, 5.6730e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.002586046699434519
DC na mean: 0.002586046699434519, zelfde als eerst: False
DC uitgerekend: tensor([0.0357, 0.0988, 0.0443, 0.0314], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04086258262395859
DC na mean: 0.04086258262395859, zelfde als eerst: False
DC uitgerekend: tensor([0.0472, 0.0683, 0.0306, 0.0199], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.045482832938432693
DC na mean: 0.045482832938432693, zelfde als eerst: False
DC uitgerekend: tensor([0.0647, 0.0496, 0.0102, 0.0118], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.055294882506132126
DC na mean: 0.055294882506132126, zelfde als eerst: False
DC uitgerekend: tensor([0.0772, 0.0143, 0.0022, 0.0057], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06112033501267433
DC na mean: 0.06112033501267433, zelfde als eerst: False
DC uitgerekend: tensor([0.0647, 0.0003, 0.0257, 0.0235], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.053585365414619446
DC na mean: 0.053585365414619446, zelfde als eerst: False
DC uitgerekend: tensor([0.0791, 0.0006, 0.0124, 0.0114], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06275683641433716
DC na mean: 0.06275683641433716, zelfde als eerst: False
DC uitgerekend: tensor([0.0895, 0.0006, 0.0052, 0.0050], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06970139592885971
DC na mean: 0.06970139592885971, zelfde als eerst: False
DC uitgerekend: tensor([1.2065e-01, 4.3779e-05, 2.2435e-03, 1.9416e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09313306957483292
DC na mean: 0.09313306957483292, zelfde als eerst: False
DC uitgerekend: tensor([0.0618, 0.0010, 0.0331, 0.0300], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05247455835342407
DC na mean: 0.05247455835342407, zelfde als eerst: False
DC uitgerekend: tensor([0.0706, 0.0011, 0.0200, 0.0245], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.057775598019361496
DC na mean: 0.057775598019361496, zelfde als eerst: False
DC uitgerekend: tensor([0.1056, 0.0004, 0.0095, 0.0165], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08329214155673981
DC na mean: 0.08329214155673981, zelfde als eerst: False
DC uitgerekend: tensor([1.2006e-01, 7.5004e-05, 1.6382e-03, 1.0233e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09326941519975662
DC na mean: 0.09326941519975662, zelfde als eerst: False
DC uitgerekend: tensor([0.0210, 0.0018, 0.0043, 0.0062], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.017060980200767517
DC na mean: 0.017060980200767517, zelfde als eerst: False
DC uitgerekend: tensor([0.0323, 0.0050, 0.0048, 0.0109], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02639923058450222
DC na mean: 0.02639923058450222, zelfde als eerst: False
DC uitgerekend: tensor([0.0323, 0.0046, 0.0054, 0.0051], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025970369577407837
DC na mean: 0.025970369577407837, zelfde als eerst: False
DC uitgerekend: tensor([0.0190, 0.0016, 0.0040, 0.0024], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.015225263312458992
DC na mean: 0.015225263312458992, zelfde als eerst: False
DC uitgerekend: tensor([0.0108, 0.0029, 0.0535, 0.0033], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01292506605386734
DC na mean: 0.01292506605386734, zelfde als eerst: False
DC uitgerekend: tensor([0.0112, 0.0090, 0.0114, 0.0074], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.010736189782619476
DC na mean: 0.010736189782619476, zelfde als eerst: False
DC uitgerekend: tensor([0.0031, 0.0043, 0.0089, 0.0019], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.003572595538571477
DC na mean: 0.003572595538571477, zelfde als eerst: False
DC uitgerekend: tensor([0.0007, 0.0024, 0.0054, 0.0005], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0011674030683934689
DC na mean: 0.0011674030683934689, zelfde als eerst: False
DC uitgerekend: tensor([7.4001e-02, 3.2227e-10, 2.1847e-02, 3.2383e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06109502166509628
DC na mean: 0.06109502166509628, zelfde als eerst: False
DC uitgerekend: tensor([6.8926e-02, 1.4741e-09, 8.2991e-03, 2.3037e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.055430587381124496
DC na mean: 0.055430587381124496, zelfde als eerst: False
DC uitgerekend: tensor([7.7734e-02, 2.2541e-08, 2.6678e-03, 9.5541e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06073537468910217
DC na mean: 0.06073537468910217, zelfde als eerst: False
DC uitgerekend: tensor([8.2597e-02, 5.1679e-07, 2.0189e-03, 3.1022e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06393027305603027
DC na mean: 0.06393027305603027, zelfde als eerst: False
DC uitgerekend: tensor([0.0435, 0.0014, 0.0524, 0.0275], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.039726223796606064
DC na mean: 0.039726223796606064, zelfde als eerst: False
DC uitgerekend: tensor([0.0476, 0.0029, 0.0216, 0.0084], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03912056237459183
DC na mean: 0.03912056237459183, zelfde als eerst: False
DC uitgerekend: tensor([0.0390, 0.0007, 0.0144, 0.0016], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.031264182180166245
DC na mean: 0.031264182180166245, zelfde als eerst: False
DC uitgerekend: tensor([0.0356, 0.0001, 0.0034, 0.0006], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.027734171599149704
DC na mean: 0.027734171599149704, zelfde als eerst: False
DC uitgerekend: tensor([6.5702e-02, 2.2558e-10, 3.3330e-02, 2.7878e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.055248092859983444
DC na mean: 0.055248092859983444, zelfde als eerst: False
DC uitgerekend: tensor([8.9368e-02, 1.3412e-09, 1.5977e-02, 1.9682e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07148784399032593
DC na mean: 0.07148784399032593, zelfde als eerst: False
DC uitgerekend: tensor([1.2622e-01, 1.6697e-08, 5.3222e-03, 1.1550e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09838807582855225
DC na mean: 0.09838807582855225, zelfde als eerst: False
DC uitgerekend: tensor([1.6173e-01, 4.5574e-07, 8.8460e-04, 7.6457e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.12506374716758728
DC na mean: 0.12506374716758728, zelfde als eerst: False
DC uitgerekend: tensor([3.7107e-11, 2.3229e-02, 2.7552e-02, 4.1687e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.003906168043613434
DC na mean: 0.003906168043613434, zelfde als eerst: False
DC uitgerekend: tensor([1.8623e-10, 9.2121e-03, 1.6903e-02, 1.3059e-09], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0020088395103812218
DC na mean: 0.0020088395103812218, zelfde als eerst: False
DC uitgerekend: tensor([1.4914e-09, 5.8970e-03, 1.9888e-02, 3.1044e-08], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0019834544509649277
DC na mean: 0.0019834544509649277, zelfde als eerst: False
DC uitgerekend: tensor([1.0037e-08, 2.2250e-03, 7.0122e-03, 5.9859e-07], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0007106048869900405
DC na mean: 0.0007106048869900405, zelfde als eerst: False
DC uitgerekend: tensor([1.2882e-02, 1.3713e-10, 3.8441e-03, 2.2463e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01037775631994009
DC na mean: 0.01037775631994009, zelfde als eerst: False
DC uitgerekend: tensor([1.9144e-02, 6.4661e-10, 4.8562e-03, 9.0611e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.015796663239598274
DC na mean: 0.015796663239598274, zelfde als eerst: False
DC uitgerekend: tensor([2.4831e-02, 1.2233e-08, 2.3757e-03, 1.0131e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.020062590017914772
DC na mean: 0.020062590017914772, zelfde als eerst: False
DC uitgerekend: tensor([3.8308e-02, 4.6426e-07, 9.8904e-04, 4.2628e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.029871832579374313
DC na mean: 0.029871832579374313, zelfde als eerst: False
DC uitgerekend: tensor([0.0185, 0.0063, 0.0455, 0.0389], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02117927372455597
DC na mean: 0.02117927372455597, zelfde als eerst: False
DC uitgerekend: tensor([0.0252, 0.0133, 0.0154, 0.0191], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023062819615006447
DC na mean: 0.023062819615006447, zelfde als eerst: False
DC uitgerekend: tensor([0.0121, 0.0082, 0.0137, 0.0070], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.011525807902216911
DC na mean: 0.011525807902216911, zelfde als eerst: False
DC uitgerekend: tensor([0.0012, 0.0019, 0.0060, 0.0025], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0017552095232531428
DC na mean: 0.0017552095232531428, zelfde als eerst: False
DC uitgerekend: tensor([0.0687, 0.0461, 0.0038, 0.0219], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05835326388478279
DC na mean: 0.05835326388478279, zelfde als eerst: False
DC uitgerekend: tensor([0.0724, 0.0337, 0.0005, 0.0153], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05952322483062744
DC na mean: 0.05952322483062744, zelfde als eerst: False
DC uitgerekend: tensor([9.6831e-02, 9.3664e-03, 4.5444e-05, 1.4945e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07635867595672607
DC na mean: 0.07635867595672607, zelfde als eerst: False
DC uitgerekend: tensor([1.2077e-01, 2.0184e-03, 2.4885e-06, 5.0265e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09343842417001724
DC na mean: 0.09343842417001724, zelfde als eerst: False
DC uitgerekend: tensor([0.0669, 0.0756, 0.0434, 0.0284], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06277386844158173
DC na mean: 0.06277386844158173, zelfde als eerst: False
DC uitgerekend: tensor([0.0864, 0.0353, 0.0290, 0.0288], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.073651023209095
DC na mean: 0.073651023209095, zelfde als eerst: False
DC uitgerekend: tensor([0.1470, 0.0181, 0.0176, 0.0188], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.11725528538227081
DC na mean: 0.11725528538227081, zelfde als eerst: False
DC uitgerekend: tensor([0.1840, 0.0020, 0.0040, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.14233796298503876
DC na mean: 0.14233796298503876, zelfde als eerst: False
DC uitgerekend: tensor([4.7585e-02, 2.1752e-10, 5.0232e-02, 1.3798e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04152948036789894
DC na mean: 0.04152948036789894, zelfde als eerst: False
DC uitgerekend: tensor([4.6294e-02, 1.4393e-09, 1.0932e-02, 5.1924e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03685130178928375
DC na mean: 0.03685130178928375, zelfde als eerst: False
DC uitgerekend: tensor([5.2010e-02, 2.9808e-08, 7.0270e-03, 4.3612e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04088398814201355
DC na mean: 0.04088398814201355, zelfde als eerst: False
DC uitgerekend: tensor([4.3874e-02, 7.5195e-07, 4.1855e-03, 2.4891e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03426274657249451
DC na mean: 0.03426274657249451, zelfde als eerst: False
DC uitgerekend: tensor([1.2049e-02, 9.3833e-02, 2.4650e-10, 6.3115e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.016971582546830177
DC na mean: 0.016971582546830177, zelfde als eerst: False
DC uitgerekend: tensor([2.2752e-02, 3.8021e-02, 1.8895e-09, 1.0012e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021196503192186356
DC na mean: 0.021196503192186356, zelfde als eerst: False
DC uitgerekend: tensor([3.7489e-02, 1.2584e-02, 5.0909e-08, 3.8306e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.030100688338279724
DC na mean: 0.030100688338279724, zelfde als eerst: False
DC uitgerekend: tensor([4.7355e-02, 4.9182e-03, 1.5176e-06, 7.2130e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03686113283038139
DC na mean: 0.03686113283038139, zelfde als eerst: False
DC uitgerekend: tensor([0.0020, 0.0019, 0.0428, 0.0229], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.006724806968122721
DC na mean: 0.006724806968122721, zelfde als eerst: False
DC uitgerekend: tensor([0.0013, 0.0011, 0.0325, 0.0236], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0054247681982815266
DC na mean: 0.0054247681982815266, zelfde als eerst: False
DC uitgerekend: tensor([0.0004, 0.0006, 0.0063, 0.0116], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0017143774311989546
DC na mean: 0.0017143774311989546, zelfde als eerst: False
DC uitgerekend: tensor([1.3631e-05, 4.2710e-04, 9.1208e-04, 4.1847e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0004353956610430032
DC na mean: 0.0004353956610430032, zelfde als eerst: False
DC uitgerekend: tensor([4.2356e-11, 2.0549e-02, 3.0514e-03, 1.0636e-09], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0018154386198148131
DC na mean: 0.0018154386198148131, zelfde als eerst: False
DC uitgerekend: tensor([2.1159e-10, 2.6712e-02, 6.8249e-03, 2.0787e-09], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0025797307025641203
DC na mean: 0.0025797307025641203, zelfde als eerst: False
DC uitgerekend: tensor([1.0914e-09, 7.7905e-03, 7.9098e-03, 5.4542e-08], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.001207720022648573
DC na mean: 0.001207720022648573, zelfde als eerst: False
DC uitgerekend: tensor([7.6534e-09, 2.0997e-03, 5.4491e-03, 1.4706e-06], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0005807962152175605
DC na mean: 0.0005807962152175605, zelfde als eerst: False
DC uitgerekend: tensor([0.0755, 0.0772, 0.0194, 0.0242], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06732803583145142
DC na mean: 0.06732803583145142, zelfde als eerst: False
DC uitgerekend: tensor([0.0682, 0.0024, 0.0079, 0.0225], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.054990772157907486
DC na mean: 0.054990772157907486, zelfde als eerst: False
DC uitgerekend: tensor([0.0965, 0.0045, 0.0026, 0.0082], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0754031240940094
DC na mean: 0.0754031240940094, zelfde als eerst: False
DC uitgerekend: tensor([1.2012e-01, 2.0049e-03, 1.1516e-04, 1.4426e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09267505258321762
DC na mean: 0.09267505258321762, zelfde als eerst: False
DC uitgerekend: tensor([0.0528, 0.0169, 0.0415, 0.0293], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04738674312829971
DC na mean: 0.04738674312829971, zelfde als eerst: False
DC uitgerekend: tensor([0.0417, 0.0009, 0.0346, 0.0187], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.036275241523981094
DC na mean: 0.036275241523981094, zelfde als eerst: False
DC uitgerekend: tensor([0.0707, 0.0010, 0.0213, 0.0089], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05680783838033676
DC na mean: 0.05680783838033676, zelfde als eerst: False
DC uitgerekend: tensor([0.0830, 0.0002, 0.0052, 0.0033], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06450755894184113
DC na mean: 0.06450755894184113, zelfde als eerst: False
DC uitgerekend: tensor([0.0348, 0.0885, 0.0206, 0.0234], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.036976467818021774
DC na mean: 0.036976467818021774, zelfde als eerst: False
DC uitgerekend: tensor([0.0486, 0.0163, 0.0294, 0.0301], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04319487512111664
DC na mean: 0.04319487512111664, zelfde als eerst: False
DC uitgerekend: tensor([0.0699, 0.0084, 0.0118, 0.0132], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05632024630904198
DC na mean: 0.05632024630904198, zelfde als eerst: False
DC uitgerekend: tensor([0.0865, 0.0005, 0.0013, 0.0029], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06690970808267593
DC na mean: 0.06690970808267593, zelfde als eerst: False
DC uitgerekend: tensor([8.3657e-02, 2.0150e-10, 4.8088e-02, 4.4473e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07147157937288284
DC na mean: 0.07147157937288284, zelfde als eerst: False
DC uitgerekend: tensor([8.5570e-02, 9.0679e-10, 8.9200e-02, 7.3301e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07832338660955429
DC na mean: 0.07832338660955429, zelfde als eerst: False
DC uitgerekend: tensor([1.1123e-01, 1.5316e-08, 3.3380e-02, 1.9120e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08959713578224182
DC na mean: 0.08959713578224182, zelfde als eerst: False
DC uitgerekend: tensor([1.2925e-01, 5.4078e-07, 1.0605e-02, 4.0226e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.10054678469896317
DC na mean: 0.10054678469896317, zelfde als eerst: False
DC uitgerekend: tensor([0.0457, 0.0047, 0.0462, 0.0194], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04057026281952858
DC na mean: 0.04057026281952858, zelfde als eerst: False
DC uitgerekend: tensor([0.0535, 0.0100, 0.0148, 0.0285], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04527583345770836
DC na mean: 0.04527583345770836, zelfde als eerst: False
DC uitgerekend: tensor([0.0973, 0.0052, 0.0064, 0.0080], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0763201043009758
DC na mean: 0.0763201043009758, zelfde als eerst: False
DC uitgerekend: tensor([0.1355, 0.0012, 0.0022, 0.0017], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.10459887981414795
DC na mean: 0.10459887981414795, zelfde als eerst: False
DC uitgerekend: tensor([0.0193, 0.0170, 0.0298, 0.0184], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.019867364317178726
DC na mean: 0.019867364317178726, zelfde als eerst: False
DC uitgerekend: tensor([0.0226, 0.0180, 0.0195, 0.0112], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021152805536985397
DC na mean: 0.021152805536985397, zelfde als eerst: False
DC uitgerekend: tensor([0.0078, 0.0058, 0.0045, 0.0029], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0070219398476183414
DC na mean: 0.0070219398476183414, zelfde als eerst: False
DC uitgerekend: tensor([0.0060, 0.0030, 0.0011, 0.0014], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.005038383882492781
DC na mean: 0.005038383882492781, zelfde als eerst: False
DC uitgerekend: tensor([0.0390, 0.0103, 0.0315, 0.0258], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03521621227264404
DC na mean: 0.03521621227264404, zelfde als eerst: False
DC uitgerekend: tensor([0.0464, 0.0101, 0.0214, 0.0249], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04006084054708481
DC na mean: 0.04006084054708481, zelfde als eerst: False
DC uitgerekend: tensor([0.0433, 0.0035, 0.0087, 0.0166], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0355064831674099
DC na mean: 0.0355064831674099, zelfde als eerst: False
DC uitgerekend: tensor([0.0392, 0.0007, 0.0017, 0.0051], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03073178045451641
DC na mean: 0.03073178045451641, zelfde als eerst: False
DC uitgerekend: tensor([6.5244e-02, 2.7982e-10, 4.6560e-02, 5.4835e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0579872764647007
DC na mean: 0.0579872764647007, zelfde als eerst: False
DC uitgerekend: tensor([6.9757e-02, 9.7096e-10, 7.1526e-02, 9.6224e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06656333059072495
DC na mean: 0.06656333059072495, zelfde als eerst: False
DC uitgerekend: tensor([9.0944e-02, 2.0500e-08, 4.6443e-02, 3.8418e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07648437470197678
DC na mean: 0.07648437470197678, zelfde als eerst: False
DC uitgerekend: tensor([1.2628e-01, 5.8535e-07, 1.1001e-02, 8.4018e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09862928837537766
DC na mean: 0.09862928837537766, zelfde als eerst: False
DC uitgerekend: tensor([0.0235, 0.0292, 0.0550, 0.0165], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02579542249441147
DC na mean: 0.02579542249441147, zelfde als eerst: False
DC uitgerekend: tensor([0.0272, 0.0154, 0.0294, 0.0171], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025699235498905182
DC na mean: 0.025699235498905182, zelfde als eerst: False
DC uitgerekend: tensor([0.0417, 0.0059, 0.0175, 0.0238], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.035741470754146576
DC na mean: 0.035741470754146576, zelfde als eerst: False
DC uitgerekend: tensor([0.0272, 0.0033, 0.0027, 0.0057], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02179967425763607
DC na mean: 0.02179967425763607, zelfde als eerst: False
DC uitgerekend: tensor([0.0395, 0.0056, 0.0394, 0.0303], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03618863224983215
DC na mean: 0.03618863224983215, zelfde als eerst: False
DC uitgerekend: tensor([0.0443, 0.0068, 0.0176, 0.0222], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03768661245703697
DC na mean: 0.03768661245703697, zelfde als eerst: False
DC uitgerekend: tensor([0.0518, 0.0035, 0.0092, 0.0053], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.041266068816185
DC na mean: 0.041266068816185, zelfde als eerst: False
DC uitgerekend: tensor([0.0325, 0.0003, 0.0048, 0.0010], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02544817328453064
DC na mean: 0.02544817328453064, zelfde als eerst: False
DC uitgerekend: tensor([2.4297e-02, 2.0312e-10, 5.2906e-02, 3.0160e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025079363957047462
DC na mean: 0.025079363957047462, zelfde als eerst: False
DC uitgerekend: tensor([2.4439e-02, 6.0554e-10, 6.5244e-02, 3.4165e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.026445774361491203
DC na mean: 0.026445774361491203, zelfde als eerst: False
DC uitgerekend: tensor([2.3272e-02, 1.3317e-08, 2.3309e-02, 2.8321e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021873094141483307
DC na mean: 0.021873094141483307, zelfde als eerst: False
DC uitgerekend: tensor([2.6913e-02, 3.0961e-07, 4.4079e-03, 1.1051e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02189159020781517
DC na mean: 0.02189159020781517, zelfde als eerst: False
DC uitgerekend: tensor([0.0608, 0.0090, 0.0121, 0.0021], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.048559460788965225
DC na mean: 0.048559460788965225, zelfde als eerst: False
DC uitgerekend: tensor([0.0596, 0.0096, 0.0086, 0.0035], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.047495756298303604
DC na mean: 0.047495756298303604, zelfde als eerst: False
DC uitgerekend: tensor([0.0789, 0.0037, 0.0031, 0.0037], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.061505913734436035
DC na mean: 0.061505913734436035, zelfde als eerst: False
DC uitgerekend: tensor([0.0904, 0.0003, 0.0020, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0698036327958107
DC na mean: 0.0698036327958107, zelfde als eerst: False
DC uitgerekend: tensor([2.2973e-02, 2.3099e-10, 2.7223e-10, 1.6836e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.018966663628816605
DC na mean: 0.018966663628816605, zelfde als eerst: False
DC uitgerekend: tensor([2.6251e-02, 9.8650e-10, 1.1934e-09, 2.1548e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021850664168596268
DC na mean: 0.021850664168596268, zelfde als eerst: False
DC uitgerekend: tensor([5.1682e-02, 2.2398e-08, 3.0473e-08, 1.3667e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04080701246857643
DC na mean: 0.04080701246857643, zelfde als eerst: False
DC uitgerekend: tensor([8.4138e-02, 5.9840e-07, 8.8211e-07, 5.6607e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06515741348266602
DC na mean: 0.06515741348266602, zelfde als eerst: False
DC uitgerekend: tensor([0.0034, 0.0020, 0.0281, 0.0037], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.005203119479119778
DC na mean: 0.005203119479119778, zelfde als eerst: False
DC uitgerekend: tensor([0.0016, 0.0047, 0.0254, 0.0021], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.003700489643961191
DC na mean: 0.003700489643961191, zelfde als eerst: False
DC uitgerekend: tensor([0.0003, 0.0025, 0.0079, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0011227040085941553
DC na mean: 0.0011227040085941553, zelfde als eerst: False
DC uitgerekend: tensor([4.9611e-06, 1.5325e-04, 3.0387e-03, 8.0911e-06], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0002499725960660726
DC na mean: 0.0002499725960660726, zelfde als eerst: False
DC uitgerekend: tensor([0.0411, 0.0901, 0.0301, 0.0161], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.042091917246580124
DC na mean: 0.042091917246580124, zelfde als eerst: False
DC uitgerekend: tensor([0.0455, 0.1677, 0.0624, 0.0241], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.054584309458732605
DC na mean: 0.054584309458732605, zelfde als eerst: False
DC uitgerekend: tensor([0.0581, 0.0232, 0.0298, 0.0299], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.051045771688222885
DC na mean: 0.051045771688222885, zelfde als eerst: False
DC uitgerekend: tensor([0.0442, 0.0105, 0.0045, 0.0081], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03574373200535774
DC na mean: 0.03574373200535774, zelfde als eerst: False
DC uitgerekend: tensor([4.3502e-11, 2.5439e-10, 1.0657e-02, 2.9358e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.001045632641762495
DC na mean: 0.001045632641762495, zelfde als eerst: False
DC uitgerekend: tensor([1.7822e-10, 5.9857e-10, 1.0353e-02, 1.5333e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0009143278584815562
DC na mean: 0.0009143278584815562, zelfde als eerst: False
DC uitgerekend: tensor([1.2418e-09, 1.2227e-08, 5.4478e-03, 2.0622e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.000577696249820292
DC na mean: 0.000577696249820292, zelfde als eerst: False
DC uitgerekend: tensor([1.5171e-08, 4.4373e-07, 2.7809e-03, 6.3459e-06], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.00021445097809191793
DC na mean: 0.00021445097809191793, zelfde als eerst: False
DC uitgerekend: tensor([0.0431, 0.0807, 0.0291, 0.0175], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.042979296296834946
DC na mean: 0.042979296296834946, zelfde als eerst: False
DC uitgerekend: tensor([0.0511, 0.0798, 0.0510, 0.0264], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05141272768378258
DC na mean: 0.05141272768378258, zelfde als eerst: False
DC uitgerekend: tensor([0.0770, 0.0223, 0.0548, 0.0084], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06584058701992035
DC na mean: 0.06584058701992035, zelfde als eerst: False
DC uitgerekend: tensor([0.0880, 0.0124, 0.0100, 0.0066], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06990968436002731
DC na mean: 0.06990968436002731, zelfde als eerst: False
DC uitgerekend: tensor([2.1188e-02, 8.3227e-02, 4.3172e-10, 9.6172e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023440362885594368
DC na mean: 0.023440362885594368, zelfde als eerst: False
DC uitgerekend: tensor([3.0331e-02, 1.5981e-01, 9.7139e-10, 9.0108e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03631789609789848
DC na mean: 0.03631789609789848, zelfde als eerst: False
DC uitgerekend: tensor([3.0413e-02, 1.3237e-01, 2.2821e-08, 8.1349e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.034202612936496735
DC na mean: 0.034202612936496735, zelfde als eerst: False
DC uitgerekend: tensor([8.0391e-03, 1.1394e-02, 1.1356e-06, 8.0698e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0071225520223379135
DC na mean: 0.0071225520223379135, zelfde als eerst: False
DC uitgerekend: tensor([0.0326, 0.0125, 0.0202, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028129152953624725
DC na mean: 0.028129152953624725, zelfde als eerst: False
DC uitgerekend: tensor([0.0245, 0.0111, 0.0085, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02076745592057705
DC na mean: 0.02076745592057705, zelfde als eerst: False
DC uitgerekend: tensor([0.0252, 0.0042, 0.0036, 0.0011], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.020049868151545525
DC na mean: 0.020049868151545525, zelfde als eerst: False
DC uitgerekend: tensor([0.0117, 0.0008, 0.0007, 0.0013], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.009250919334590435
DC na mean: 0.009250919334590435, zelfde als eerst: False
DC uitgerekend: tensor([0.0095, 0.0351, 0.0221, 0.0197], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.013243721798062325
DC na mean: 0.013243721798062325, zelfde als eerst: False
DC uitgerekend: tensor([0.0040, 0.0211, 0.0343, 0.0248], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.009247911162674427
DC na mean: 0.009247911162674427, zelfde als eerst: False
DC uitgerekend: tensor([0.0075, 0.0031, 0.0073, 0.0057], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.006988239474594593
DC na mean: 0.006988239474594593, zelfde als eerst: False
DC uitgerekend: tensor([2.7180e-03, 2.2811e-05, 3.0525e-03, 1.2043e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0024199942126870155
DC na mean: 0.0024199942126870155, zelfde als eerst: False
DC uitgerekend: tensor([0.0162, 0.0844, 0.0088, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.019833678379654884
DC na mean: 0.019833678379654884, zelfde als eerst: False
DC uitgerekend: tensor([0.0187, 0.0334, 0.0022, 0.0053], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.017508117482066154
DC na mean: 0.017508117482066154, zelfde als eerst: False
DC uitgerekend: tensor([0.0228, 0.0142, 0.0016, 0.0026], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01896725967526436
DC na mean: 0.01896725967526436, zelfde als eerst: False
DC uitgerekend: tensor([0.0104, 0.0105, 0.0008, 0.0001], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.008842778392136097
DC na mean: 0.008842778392136097, zelfde als eerst: False
DC uitgerekend: tensor([0.0716, 0.0893, 0.0042, 0.0149], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06340403854846954
DC na mean: 0.06340403854846954, zelfde als eerst: False
DC uitgerekend: tensor([0.0856, 0.1672, 0.0006, 0.0164], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0800383910536766
DC na mean: 0.0800383910536766, zelfde als eerst: False
DC uitgerekend: tensor([0.0959, 0.0257, 0.0002, 0.0356], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07854269444942474
DC na mean: 0.07854269444942474, zelfde als eerst: False
DC uitgerekend: tensor([9.2471e-02, 6.1111e-03, 1.4382e-05, 7.9049e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0722106397151947
DC na mean: 0.0722106397151947, zelfde als eerst: False
DC uitgerekend: tensor([0.0671, 0.0021, 0.0211, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05347821116447449
DC na mean: 0.05347821116447449, zelfde als eerst: False
DC uitgerekend: tensor([0.0630, 0.0025, 0.0161, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05028648301959038
DC na mean: 0.05028648301959038, zelfde als eerst: False
DC uitgerekend: tensor([0.0686, 0.0003, 0.0053, 0.0020], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0533931627869606
DC na mean: 0.0533931627869606, zelfde als eerst: False
DC uitgerekend: tensor([5.0004e-02, 2.3041e-06, 6.9562e-03, 1.9698e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.039151422679424286
DC na mean: 0.039151422679424286, zelfde als eerst: False
DC uitgerekend: tensor([0.0498, 0.0070, 0.0274, 0.0036], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04122387245297432
DC na mean: 0.04122387245297432, zelfde als eerst: False
DC uitgerekend: tensor([0.0268, 0.0059, 0.0129, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02244562841951847
DC na mean: 0.02244562841951847, zelfde als eerst: False
DC uitgerekend: tensor([0.0391, 0.0050, 0.0088, 0.0014], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.031282953917980194
DC na mean: 0.031282953917980194, zelfde als eerst: False
DC uitgerekend: tensor([0.0184, 0.0032, 0.0042, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01480052899569273
DC na mean: 0.01480052899569273, zelfde als eerst: False
DC uitgerekend: tensor([5.2735e-02, 2.8058e-10, 9.5163e-03, 3.8128e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04132647439837456
DC na mean: 0.04132647439837456, zelfde als eerst: False
DC uitgerekend: tensor([4.6036e-02, 2.0192e-09, 1.3912e-02, 3.2020e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03672853112220764
DC na mean: 0.03672853112220764, zelfde als eerst: False
DC uitgerekend: tensor([4.3066e-02, 3.6530e-08, 1.0516e-02, 1.3061e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.034037165343761444
DC na mean: 0.034037165343761444, zelfde als eerst: False
DC uitgerekend: tensor([2.6628e-02, 5.9430e-07, 1.0379e-02, 1.8314e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021295277401804924
DC na mean: 0.021295277401804924, zelfde als eerst: False
DC uitgerekend: tensor([0.0058, 0.0145, 0.0429, 0.0013], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.00898723490536213
DC na mean: 0.00898723490536213, zelfde als eerst: False
DC uitgerekend: tensor([0.0063, 0.0126, 0.0463, 0.0017], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.009504865854978561
DC na mean: 0.009504865854978561, zelfde als eerst: False
DC uitgerekend: tensor([0.0105, 0.0154, 0.0216, 0.0015], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.011014941148459911
DC na mean: 0.011014941148459911, zelfde als eerst: False
DC uitgerekend: tensor([0.0011, 0.0172, 0.0095, 0.0044], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.003214346943423152
DC na mean: 0.003214346943423152, zelfde als eerst: False
DC uitgerekend: tensor([0.0877, 0.0286, 0.0212, 0.0291], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07353653758764267
DC na mean: 0.07353653758764267, zelfde als eerst: False
DC uitgerekend: tensor([0.0843, 0.0421, 0.0157, 0.0613], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07397168129682541
DC na mean: 0.07397168129682541, zelfde als eerst: False
DC uitgerekend: tensor([0.1384, 0.0256, 0.0131, 0.0093], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.11013796180486679
DC na mean: 0.11013796180486679, zelfde als eerst: False
DC uitgerekend: tensor([0.1966, 0.0118, 0.0036, 0.0092], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.15315307676792145
DC na mean: 0.15315307676792145, zelfde als eerst: False
DC uitgerekend: tensor([0.0531, 0.0655, 0.0092, 0.0160], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.047842204570770264
DC na mean: 0.047842204570770264, zelfde als eerst: False
DC uitgerekend: tensor([0.0573, 0.0602, 0.0009, 0.0262], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.050809185951948166
DC na mean: 0.050809185951948166, zelfde als eerst: False
DC uitgerekend: tensor([0.0832, 0.0202, 0.0005, 0.0247], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06750182807445526
DC na mean: 0.06750182807445526, zelfde als eerst: False
DC uitgerekend: tensor([0.1165, 0.0108, 0.0001, 0.0051], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09088103473186493
DC na mean: 0.09088103473186493, zelfde als eerst: False
DC uitgerekend: tensor([0.0026, 0.0024, 0.0043, 0.0002], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0025478950701653957
DC na mean: 0.0025478950701653957, zelfde als eerst: False
DC uitgerekend: tensor([0.0022, 0.0048, 0.0086, 0.0030], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0029756303410977125
DC na mean: 0.0029756303410977125, zelfde als eerst: False
DC uitgerekend: tensor([8.1668e-05, 2.9143e-03, 6.2286e-03, 7.1384e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0008210354717448354
DC na mean: 0.0008210354717448354, zelfde als eerst: False
DC uitgerekend: tensor([1.8082e-06, 1.9500e-03, 7.9752e-03, 4.8925e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0008025080896914005
DC na mean: 0.0008025080896914005, zelfde als eerst: False
DC uitgerekend: tensor([0.0735, 0.0013, 0.0279, 0.0103], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05955183506011963
DC na mean: 0.05955183506011963, zelfde als eerst: False
DC uitgerekend: tensor([0.0673, 0.0016, 0.0101, 0.0215], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.054300229996442795
DC na mean: 0.054300229996442795, zelfde als eerst: False
DC uitgerekend: tensor([0.0751, 0.0023, 0.0112, 0.0063], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05929753556847572
DC na mean: 0.05929753556847572, zelfde als eerst: False
DC uitgerekend: tensor([9.9601e-02, 1.4783e-05, 1.0507e-03, 2.5532e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0768943578004837
DC na mean: 0.0768943578004837, zelfde als eerst: False
DC uitgerekend: tensor([0.0350, 0.0929, 0.0007, 0.0072], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03469497337937355
DC na mean: 0.03469497337937355, zelfde als eerst: False
DC uitgerekend: tensor([0.0380, 0.1127, 0.0001, 0.0124], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0388297401368618
DC na mean: 0.0388297401368618, zelfde als eerst: False
DC uitgerekend: tensor([4.6991e-02, 4.4504e-02, 6.1285e-07, 1.6694e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03969862684607506
DC na mean: 0.03969862684607506, zelfde als eerst: False
DC uitgerekend: tensor([1.3919e-02, 5.4911e-03, 5.9028e-07, 1.2953e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.011138999834656715
DC na mean: 0.011138999834656715, zelfde als eerst: False
DC uitgerekend: tensor([2.6164e-02, 1.0393e-01, 3.0740e-10, 4.6784e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028480209410190582
DC na mean: 0.028480209410190582, zelfde als eerst: False
DC uitgerekend: tensor([3.8186e-02, 1.7325e-01, 8.6814e-10, 6.2356e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04317999631166458
DC na mean: 0.04317999631166458, zelfde als eerst: False
DC uitgerekend: tensor([4.6551e-02, 1.1370e-01, 2.2196e-08, 9.7181e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04530221223831177
DC na mean: 0.04530221223831177, zelfde als eerst: False
DC uitgerekend: tensor([4.9697e-02, 4.4669e-02, 4.5155e-07, 4.0674e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0419771783053875
DC na mean: 0.0419771783053875, zelfde als eerst: False
DC uitgerekend: tensor([0.0280, 0.0364, 0.0129, 0.0034], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025621240958571434
DC na mean: 0.025621240958571434, zelfde als eerst: False
DC uitgerekend: tensor([0.0264, 0.0296, 0.0093, 0.0068], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023827020078897476
DC na mean: 0.023827020078897476, zelfde als eerst: False
DC uitgerekend: tensor([0.0296, 0.0236, 0.0070, 0.0046], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025495357811450958
DC na mean: 0.025495357811450958, zelfde als eerst: False
DC uitgerekend: tensor([0.0327, 0.0335, 0.0054, 0.0030], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028415294364094734
DC na mean: 0.028415294364094734, zelfde als eerst: False
DC uitgerekend: tensor([0.0999, 0.0004, 0.0097, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07786388695240021
DC na mean: 0.07786388695240021, zelfde als eerst: False
DC uitgerekend: tensor([0.1048, 0.0008, 0.0138, 0.0101], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08252983540296555
DC na mean: 0.08252983540296555, zelfde als eerst: False
DC uitgerekend: tensor([0.1033, 0.0011, 0.0140, 0.0078], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08119002729654312
DC na mean: 0.08119002729654312, zelfde als eerst: False
DC uitgerekend: tensor([1.3346e-01, 4.1420e-06, 1.4561e-02, 4.8699e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.10415329039096832
DC na mean: 0.10415329039096832, zelfde als eerst: False
DC uitgerekend: tensor([0.0741, 0.0333, 0.0346, 0.0196], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06374222040176392
DC na mean: 0.06374222040176392, zelfde als eerst: False
DC uitgerekend: tensor([0.0797, 0.0443, 0.0164, 0.0267], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0680115669965744
DC na mean: 0.0680115669965744, zelfde als eerst: False
DC uitgerekend: tensor([0.1106, 0.0242, 0.0060, 0.0079], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08799829334020615
DC na mean: 0.08799829334020615, zelfde als eerst: False
DC uitgerekend: tensor([0.1352, 0.0162, 0.0063, 0.0064], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.10623298585414886
DC na mean: 0.10623298585414886, zelfde als eerst: False
DC uitgerekend: tensor([0.0037, 0.1326, 0.0214, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.014896835200488567
DC na mean: 0.014896835200488567, zelfde als eerst: False
DC uitgerekend: tensor([0.0040, 0.0954, 0.0268, 0.0073], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01303520705550909
DC na mean: 0.01303520705550909, zelfde als eerst: False
DC uitgerekend: tensor([0.0033, 0.1584, 0.0031, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.015180611982941628
DC na mean: 0.015180611982941628, zelfde als eerst: False
DC uitgerekend: tensor([0.0005, 0.0486, 0.0007, 0.0032], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.004440267104655504
DC na mean: 0.004440267104655504, zelfde als eerst: False
DC uitgerekend: tensor([0.0343, 0.0093, 0.0470, 0.0109], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03157787770032883
DC na mean: 0.03157787770032883, zelfde als eerst: False
DC uitgerekend: tensor([0.0379, 0.0160, 0.0346, 0.0134], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03406952694058418
DC na mean: 0.03406952694058418, zelfde als eerst: False
DC uitgerekend: tensor([0.0368, 0.0064, 0.0412, 0.0102], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.032763153314590454
DC na mean: 0.032763153314590454, zelfde als eerst: False
DC uitgerekend: tensor([4.1996e-02, 2.5317e-05, 8.3142e-03, 6.4464e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03344189375638962
DC na mean: 0.03344189375638962, zelfde als eerst: False
DC uitgerekend: tensor([0.0566, 0.0039, 0.0336, 0.0250], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.048338573426008224
DC na mean: 0.048338573426008224, zelfde als eerst: False
DC uitgerekend: tensor([0.0441, 0.0057, 0.0274, 0.0319], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03888774663209915
DC na mean: 0.03888774663209915, zelfde als eerst: False
DC uitgerekend: tensor([0.0303, 0.0028, 0.0116, 0.0191], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.025863591581583023
DC na mean: 0.025863591581583023, zelfde als eerst: False
DC uitgerekend: tensor([0.0495, 0.0001, 0.0072, 0.0111], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03946729376912117
DC na mean: 0.03946729376912117, zelfde als eerst: False
DC uitgerekend: tensor([0.0496, 0.0157, 0.0203, 0.0119], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0418446809053421
DC na mean: 0.0418446809053421, zelfde als eerst: False
DC uitgerekend: tensor([0.0511, 0.0304, 0.0126, 0.0104], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04340276122093201
DC na mean: 0.04340276122093201, zelfde als eerst: False
DC uitgerekend: tensor([0.0594, 0.0241, 0.0096, 0.0053], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04865885153412819
DC na mean: 0.04865885153412819, zelfde als eerst: False
DC uitgerekend: tensor([0.0518, 0.0272, 0.0042, 0.0066], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04276903346180916
DC na mean: 0.04276903346180916, zelfde als eerst: False
DC uitgerekend: tensor([0.0580, 0.0023, 0.0492, 0.0055], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04897122457623482
DC na mean: 0.04897122457623482, zelfde als eerst: False
DC uitgerekend: tensor([0.0703, 0.0058, 0.0482, 0.0189], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05968085676431656
DC na mean: 0.05968085676431656, zelfde als eerst: False
DC uitgerekend: tensor([0.0718, 0.0065, 0.0422, 0.0099], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05976241081953049
DC na mean: 0.05976241081953049, zelfde als eerst: False
DC uitgerekend: tensor([0.0693, 0.0019, 0.0188, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.055301256477832794
DC na mean: 0.055301256477832794, zelfde als eerst: False
DC uitgerekend: tensor([0.0355, 0.0065, 0.0080, 0.0040], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028742564842104912
DC na mean: 0.028742564842104912, zelfde als eerst: False
DC uitgerekend: tensor([0.0361, 0.0079, 0.0074, 0.0051], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02936488576233387
DC na mean: 0.02936488576233387, zelfde als eerst: False
DC uitgerekend: tensor([0.0395, 0.0056, 0.0069, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03165021911263466
DC na mean: 0.03165021911263466, zelfde als eerst: False
DC uitgerekend: tensor([0.0480, 0.0005, 0.0069, 0.0047], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03787513077259064
DC na mean: 0.03787513077259064, zelfde als eerst: False
DC uitgerekend: tensor([0.0669, 0.0130, 0.0386, 0.0138], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05649157240986824
DC na mean: 0.05649157240986824, zelfde als eerst: False
DC uitgerekend: tensor([0.0722, 0.0273, 0.0402, 0.0187], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0621945895254612
DC na mean: 0.0621945895254612, zelfde als eerst: False
DC uitgerekend: tensor([0.0950, 0.0283, 0.0373, 0.0197], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07964280247688293
DC na mean: 0.07964280247688293, zelfde als eerst: False
DC uitgerekend: tensor([0.1174, 0.0126, 0.0181, 0.0221], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.094349205493927
DC na mean: 0.094349205493927, zelfde als eerst: False
DC uitgerekend: tensor([2.4295e-02, 7.0783e-02, 2.7124e-10, 9.6874e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.024878093972802162
DC na mean: 0.024878093972802162, zelfde als eerst: False
DC uitgerekend: tensor([2.6546e-02, 3.4914e-02, 1.7027e-09, 1.9457e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.024602176621556282
DC na mean: 0.024602176621556282, zelfde als eerst: False
DC uitgerekend: tensor([2.5162e-02, 1.3794e-02, 7.7998e-09, 1.2395e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02136983536183834
DC na mean: 0.02136983536183834, zelfde als eerst: False
DC uitgerekend: tensor([2.9729e-02, 1.1883e-03, 1.7319e-07, 2.6379e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023163000121712685
DC na mean: 0.023163000121712685, zelfde als eerst: False
DC uitgerekend: tensor([0.0554, 0.0499, 0.0386, 0.0208], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05100438371300697
DC na mean: 0.05100438371300697, zelfde als eerst: False
DC uitgerekend: tensor([0.0581, 0.0546, 0.0382, 0.0302], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05417627468705177
DC na mean: 0.05417627468705177, zelfde als eerst: False
DC uitgerekend: tensor([0.0761, 0.0922, 0.0332, 0.0123], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06912169605493546
DC na mean: 0.06912169605493546, zelfde als eerst: False
DC uitgerekend: tensor([0.0633, 0.0786, 0.0226, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05696321651339531
DC na mean: 0.05696321651339531, zelfde als eerst: False
DC uitgerekend: tensor([5.4551e-02, 1.6983e-10, 2.1367e-03, 1.0529e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.042936526238918304
DC na mean: 0.042936526238918304, zelfde als eerst: False
DC uitgerekend: tensor([6.1150e-02, 6.2867e-10, 9.3948e-04, 8.0916e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.047732941806316376
DC na mean: 0.047732941806316376, zelfde als eerst: False
DC uitgerekend: tensor([5.7150e-02, 4.0715e-09, 5.6403e-05, 7.1686e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04451750963926315
DC na mean: 0.04451750963926315, zelfde als eerst: False
DC uitgerekend: tensor([2.5850e-02, 6.2890e-08, 4.3765e-07, 6.6056e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02039271593093872
DC na mean: 0.02039271593093872, zelfde als eerst: False
DC uitgerekend: tensor([0.0345, 0.0267, 0.0428, 0.0194], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.033364005386829376
DC na mean: 0.033364005386829376, zelfde als eerst: False
DC uitgerekend: tensor([0.0390, 0.0414, 0.0271, 0.0224], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03698964789509773
DC na mean: 0.03698964789509773, zelfde als eerst: False
DC uitgerekend: tensor([0.0505, 0.0394, 0.0217, 0.0248], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04548777639865875
DC na mean: 0.04548777639865875, zelfde als eerst: False
DC uitgerekend: tensor([0.0470, 0.0218, 0.0109, 0.0174], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.039976321160793304
DC na mean: 0.039976321160793304, zelfde als eerst: False
DC uitgerekend: tensor([1.8680e-02, 8.4959e-02, 8.8205e-05, 2.8829e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021132979542016983
DC na mean: 0.021132979542016983, zelfde als eerst: False
DC uitgerekend: tensor([1.2909e-02, 8.4581e-02, 1.4812e-09, 4.1155e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.016752617433667183
DC na mean: 0.016752617433667183, zelfde als eerst: False
DC uitgerekend: tensor([1.6456e-02, 1.3362e-01, 8.1626e-08, 1.7459e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023070964962244034
DC na mean: 0.023070964962244034, zelfde als eerst: False
DC uitgerekend: tensor([2.6397e-02, 6.0164e-02, 1.4017e-07, 2.6287e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.024953730404376984
DC na mean: 0.024953730404376984, zelfde als eerst: False
DC uitgerekend: tensor([0.1039, 0.0151, 0.0428, 0.0179], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08577999472618103
DC na mean: 0.08577999472618103, zelfde als eerst: False
DC uitgerekend: tensor([0.1064, 0.0156, 0.0386, 0.0238], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08782520145177841
DC na mean: 0.08782520145177841, zelfde als eerst: False
DC uitgerekend: tensor([0.0904, 0.0067, 0.0384, 0.0232], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07482068240642548
DC na mean: 0.07482068240642548, zelfde als eerst: False
DC uitgerekend: tensor([0.0854, 0.0003, 0.0122, 0.0317], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06909170746803284
DC na mean: 0.06909170746803284, zelfde als eerst: False
DC uitgerekend: tensor([0.0569, 0.0632, 0.0469, 0.0245], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05411596596240997
DC na mean: 0.05411596596240997, zelfde als eerst: False
DC uitgerekend: tensor([0.0579, 0.0810, 0.0418, 0.0454], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05745992809534073
DC na mean: 0.05745992809534073, zelfde als eerst: False
DC uitgerekend: tensor([0.0593, 0.1304, 0.0403, 0.0417], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06195797771215439
DC na mean: 0.06195797771215439, zelfde als eerst: False
DC uitgerekend: tensor([0.0653, 0.1195, 0.0204, 0.0319], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06341466307640076
DC na mean: 0.06341466307640076, zelfde als eerst: False
DC uitgerekend: tensor([1.5647e-02, 6.3261e-02, 2.9073e-10, 1.6336e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01702771708369255
DC na mean: 0.01702771708369255, zelfde als eerst: False
DC uitgerekend: tensor([1.7214e-02, 5.0513e-02, 1.7686e-09, 2.2167e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.017297793179750443
DC na mean: 0.017297793179750443, zelfde als eerst: False
DC uitgerekend: tensor([1.9854e-02, 1.0757e-01, 1.1163e-08, 4.3084e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.023878900334239006
DC na mean: 0.023878900334239006, zelfde als eerst: False
DC uitgerekend: tensor([8.4037e-03, 9.9304e-02, 1.9014e-07, 2.4991e-06], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.014103357680141926
DC na mean: 0.014103357680141926, zelfde als eerst: False
DC uitgerekend: tensor([0.0183, 0.0492, 0.0170, 0.0054], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.019621368497610092
DC na mean: 0.019621368497610092, zelfde als eerst: False
DC uitgerekend: tensor([0.0128, 0.0514, 0.0158, 0.0079], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01563476212322712
DC na mean: 0.01563476212322712, zelfde als eerst: False
DC uitgerekend: tensor([0.0106, 0.0611, 0.0150, 0.0040], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01429671049118042
DC na mean: 0.01429671049118042, zelfde als eerst: False
DC uitgerekend: tensor([0.0024, 0.0797, 0.0087, 0.0038], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.00893802847713232
DC na mean: 0.00893802847713232, zelfde als eerst: False
DC uitgerekend: tensor([0.0238, 0.0181, 0.0268, 0.0146], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022903496399521828
DC na mean: 0.022903496399521828, zelfde als eerst: False
DC uitgerekend: tensor([0.0200, 0.0165, 0.0142, 0.0144], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01888677477836609
DC na mean: 0.01888677477836609, zelfde als eerst: False
DC uitgerekend: tensor([0.0226, 0.0175, 0.0256, 0.0146], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021802518516778946
DC na mean: 0.021802518516778946, zelfde als eerst: False
DC uitgerekend: tensor([0.0359, 0.0117, 0.0078, 0.0181], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03047093376517296
DC na mean: 0.03047093376517296, zelfde als eerst: False
DC uitgerekend: tensor([0.0264, 0.0240, 0.0170, 0.0112], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.024287128821015358
DC na mean: 0.024287128821015358, zelfde als eerst: False
DC uitgerekend: tensor([0.0307, 0.0269, 0.0235, 0.0161], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02872217260301113
DC na mean: 0.02872217260301113, zelfde als eerst: False
DC uitgerekend: tensor([0.0398, 0.0369, 0.0271, 0.0190], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03700990974903107
DC na mean: 0.03700990974903107, zelfde als eerst: False
DC uitgerekend: tensor([0.0435, 0.0306, 0.0065, 0.0191], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03779085725545883
DC na mean: 0.03779085725545883, zelfde als eerst: False
DC uitgerekend: tensor([4.7918e-02, 1.4728e-10, 3.6280e-02, 8.7851e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04032675921916962
DC na mean: 0.04032675921916962, zelfde als eerst: False
DC uitgerekend: tensor([4.3291e-02, 5.1137e-10, 2.6682e-02, 1.1606e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.036245934665203094
DC na mean: 0.036245934665203094, zelfde als eerst: False
DC uitgerekend: tensor([5.2154e-02, 2.4315e-09, 3.9645e-02, 9.5110e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.043899498879909515
DC na mean: 0.043899498879909515, zelfde als eerst: False
DC uitgerekend: tensor([5.2474e-02, 2.2651e-08, 1.6523e-02, 1.0260e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04242520034313202
DC na mean: 0.04242520034313202, zelfde als eerst: False
DC uitgerekend: tensor([0.0452, 0.0435, 0.0225, 0.0097], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04058930650353432
DC na mean: 0.04058930650353432, zelfde als eerst: False
DC uitgerekend: tensor([0.0392, 0.0048, 0.0299, 0.0139], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03391919657588005
DC na mean: 0.03391919657588005, zelfde als eerst: False
DC uitgerekend: tensor([0.0429, 0.0026, 0.0419, 0.0122], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.037348903715610504
DC na mean: 0.037348903715610504, zelfde als eerst: False
DC uitgerekend: tensor([3.4159e-02, 6.0840e-05, 8.1873e-03, 1.1056e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.027761468663811684
DC na mean: 0.027761468663811684, zelfde als eerst: False
DC uitgerekend: tensor([0.0201, 0.0035, 0.0052, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.016391804441809654
DC na mean: 0.016391804441809654, zelfde als eerst: False
DC uitgerekend: tensor([0.0213, 0.0055, 0.0060, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01749756559729576
DC na mean: 0.01749756559729576, zelfde als eerst: False
DC uitgerekend: tensor([0.0216, 0.0052, 0.0073, 0.0035], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.017846696078777313
DC na mean: 0.017846696078777313, zelfde als eerst: False
DC uitgerekend: tensor([0.0193, 0.0026, 0.0115, 0.0048], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.016310764476656914
DC na mean: 0.016310764476656914, zelfde als eerst: False
DC uitgerekend: tensor([0.0551, 0.0349, 0.0301, 0.0101], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0481749027967453
DC na mean: 0.0481749027967453, zelfde als eerst: False
DC uitgerekend: tensor([0.0517, 0.0404, 0.0360, 0.0147], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.046804312616586685
DC na mean: 0.046804312616586685, zelfde als eerst: False
DC uitgerekend: tensor([0.0550, 0.0543, 0.0420, 0.0133], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05070959031581879
DC na mean: 0.05070959031581879, zelfde als eerst: False
DC uitgerekend: tensor([0.0545, 0.0438, 0.0091, 0.0076], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04660956189036369
DC na mean: 0.04660956189036369, zelfde als eerst: False
DC uitgerekend: tensor([2.5477e-02, 9.0549e-02, 4.4077e-10, 5.5918e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0269930362701416
DC na mean: 0.0269930362701416, zelfde als eerst: False
DC uitgerekend: tensor([3.3531e-02, 1.4689e-01, 2.1534e-09, 9.0866e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03779122978448868
DC na mean: 0.03779122978448868, zelfde als eerst: False
DC uitgerekend: tensor([2.4690e-02, 2.6785e-01, 7.1379e-09, 6.3420e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.040083661675453186
DC na mean: 0.040083661675453186, zelfde als eerst: False
DC uitgerekend: tensor([1.5787e-02, 2.2637e-01, 1.0704e-07, 2.6925e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02976399101316929
DC na mean: 0.02976399101316929, zelfde als eerst: False
DC uitgerekend: tensor([8.6139e-02, 1.9598e-10, 2.5065e-02, 1.1620e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06908251345157623
DC na mean: 0.06908251345157623, zelfde als eerst: False
DC uitgerekend: tensor([6.7226e-02, 6.1641e-10, 3.0496e-02, 1.8925e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05551428347826004
DC na mean: 0.05551428347826004, zelfde als eerst: False
DC uitgerekend: tensor([6.3833e-02, 2.3064e-09, 3.4558e-02, 2.2008e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05345391854643822
DC na mean: 0.05345391854643822, zelfde als eerst: False
DC uitgerekend: tensor([5.6213e-02, 2.5193e-08, 6.4424e-03, 2.7750e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04587097093462944
DC na mean: 0.04587097093462944, zelfde als eerst: False
DC uitgerekend: tensor([0.0423, 0.0667, 0.0044, 0.0089], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03871108964085579
DC na mean: 0.03871108964085579, zelfde als eerst: False
DC uitgerekend: tensor([0.0474, 0.0649, 0.0057, 0.0137], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04294611141085625
DC na mean: 0.04294611141085625, zelfde als eerst: False
DC uitgerekend: tensor([0.0486, 0.0855, 0.0082, 0.0115], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.045496728271245956
DC na mean: 0.045496728271245956, zelfde als eerst: False
DC uitgerekend: tensor([0.0527, 0.0212, 0.0005, 0.0115], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0430915504693985
DC na mean: 0.0430915504693985, zelfde als eerst: False
DC uitgerekend: tensor([0.0308, 0.0033, 0.0209, 0.0086], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.026215940713882446
DC na mean: 0.026215940713882446, zelfde als eerst: False
DC uitgerekend: tensor([0.0324, 0.0057, 0.0184, 0.0081], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.02737078070640564
DC na mean: 0.02737078070640564, zelfde als eerst: False
DC uitgerekend: tensor([0.0266, 0.0032, 0.0190, 0.0084], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022842248901724815
DC na mean: 0.022842248901724815, zelfde als eerst: False
DC uitgerekend: tensor([3.4162e-02, 3.5278e-05, 1.5628e-02, 1.8896e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028936849907040596
DC na mean: 0.028936849907040596, zelfde als eerst: False
DC uitgerekend: tensor([0.0849, 0.0663, 0.0143, 0.0162], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07274340838193893
DC na mean: 0.07274340838193893, zelfde als eerst: False
DC uitgerekend: tensor([0.0894, 0.0252, 0.0273, 0.0437], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07617630809545517
DC na mean: 0.07617630809545517, zelfde als eerst: False
DC uitgerekend: tensor([0.0869, 0.1304, 0.0239, 0.0440], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08212831616401672
DC na mean: 0.08212831616401672, zelfde als eerst: False
DC uitgerekend: tensor([0.1045, 0.1554, 0.0037, 0.0414], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0957830473780632
DC na mean: 0.0957830473780632, zelfde als eerst: False
DC uitgerekend: tensor([2.5717e-02, 2.5056e-10, 1.4055e-02, 5.8589e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021314259618520737
DC na mean: 0.021314259618520737, zelfde als eerst: False
DC uitgerekend: tensor([2.5333e-02, 1.1610e-09, 1.0492e-02, 4.3816e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.020631322637200356
DC na mean: 0.020631322637200356, zelfde als eerst: False
DC uitgerekend: tensor([2.1464e-02, 5.5301e-09, 1.2858e-02, 8.2880e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01813715510070324
DC na mean: 0.01813715510070324, zelfde als eerst: False
DC uitgerekend: tensor([2.5220e-02, 5.4390e-08, 4.7266e-03, 1.4348e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.020867187529802322
DC na mean: 0.020867187529802322, zelfde als eerst: False
DC uitgerekend: tensor([0.1021, 0.0284, 0.0271, 0.0123], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0837542861700058
DC na mean: 0.0837542861700058, zelfde als eerst: False
DC uitgerekend: tensor([0.0815, 0.0346, 0.0329, 0.0277], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07002681493759155
DC na mean: 0.07002681493759155, zelfde als eerst: False
DC uitgerekend: tensor([0.0854, 0.0429, 0.0462, 0.0235], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0743824914097786
DC na mean: 0.0743824914097786, zelfde als eerst: False
DC uitgerekend: tensor([0.1019, 0.0395, 0.0307, 0.0261], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0857570469379425
DC na mean: 0.0857570469379425, zelfde als eerst: False
DC uitgerekend: tensor([0.0796, 0.0074, 0.0111, 0.0030], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06284446269273758
DC na mean: 0.06284446269273758, zelfde als eerst: False
DC uitgerekend: tensor([0.0709, 0.0111, 0.0062, 0.0040], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.0561600998044014
DC na mean: 0.0561600998044014, zelfde als eerst: False
DC uitgerekend: tensor([0.0644, 0.0082, 0.0047, 0.0032], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05080695077776909
DC na mean: 0.05080695077776909, zelfde als eerst: False
DC uitgerekend: tensor([0.0751, 0.0010, 0.0067, 0.0084], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.059008825570344925
DC na mean: 0.059008825570344925, zelfde als eerst: False
DC uitgerekend: tensor([4.7519e-02, 2.2317e-10, 1.7863e-02, 1.0227e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03871379792690277
DC na mean: 0.03871379792690277, zelfde als eerst: False
DC uitgerekend: tensor([3.2874e-02, 7.7991e-10, 4.4961e-02, 2.6441e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.030780348926782608
DC na mean: 0.030780348926782608, zelfde als eerst: False
DC uitgerekend: tensor([3.5110e-02, 3.5497e-09, 4.0242e-02, 2.1753e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03177668899297714
DC na mean: 0.03177668899297714, zelfde als eerst: False
DC uitgerekend: tensor([2.1570e-02, 3.3281e-08, 1.3354e-02, 2.0671e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.019209856167435646
DC na mean: 0.019209856167435646, zelfde als eerst: False
DC uitgerekend: tensor([0.0649, 0.0127, 0.0173, 0.0095], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.052995484322309494
DC na mean: 0.052995484322309494, zelfde als eerst: False
DC uitgerekend: tensor([0.0548, 0.0176, 0.0487, 0.0260], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04926813021302223
DC na mean: 0.04926813021302223, zelfde als eerst: False
DC uitgerekend: tensor([0.0509, 0.0098, 0.0422, 0.0165], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04439940303564072
DC na mean: 0.04439940303564072, zelfde als eerst: False
DC uitgerekend: tensor([0.0474, 0.0072, 0.0099, 0.0179], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.039158571511507034
DC na mean: 0.039158571511507034, zelfde als eerst: False
DC uitgerekend: tensor([0.0484, 0.0280, 0.0184, 0.0072], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.041371021419763565
DC na mean: 0.041371021419763565, zelfde als eerst: False
DC uitgerekend: tensor([0.0373, 0.0166, 0.0236, 0.0183], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.033158063888549805
DC na mean: 0.033158063888549805, zelfde als eerst: False
DC uitgerekend: tensor([0.0299, 0.0235, 0.0330, 0.0083], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.028012029826641083
DC na mean: 0.028012029826641083, zelfde als eerst: False
DC uitgerekend: tensor([0.0515, 0.0136, 0.0251, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04289286583662033
DC na mean: 0.04289286583662033, zelfde als eerst: False
DC uitgerekend: tensor([3.9338e-02, 2.2121e-10, 2.3576e-02, 8.3212e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03271397203207016
DC na mean: 0.03271397203207016, zelfde als eerst: False
DC uitgerekend: tensor([3.8626e-02, 6.9192e-10, 5.0084e-02, 2.0786e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.035163942724466324
DC na mean: 0.035163942724466324, zelfde als eerst: False
DC uitgerekend: tensor([3.5555e-02, 3.1733e-09, 5.4874e-02, 1.3843e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03263576328754425
DC na mean: 0.03263576328754425, zelfde als eerst: False
DC uitgerekend: tensor([2.5446e-02, 4.9170e-08, 1.9358e-02, 5.8010e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.021508967503905296
DC na mean: 0.021508967503905296, zelfde als eerst: False
DC uitgerekend: tensor([0.0491, 0.0026, 0.0268, 0.0114], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.040916722267866135
DC na mean: 0.040916722267866135, zelfde als eerst: False
DC uitgerekend: tensor([0.0569, 0.0040, 0.0536, 0.0365], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05102790519595146
DC na mean: 0.05102790519595146, zelfde als eerst: False
DC uitgerekend: tensor([0.0438, 0.0019, 0.0394, 0.0349], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03957182914018631
DC na mean: 0.03957182914018631, zelfde als eerst: False
DC uitgerekend: tensor([0.0489, 0.0002, 0.0130, 0.0343], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04130241274833679
DC na mean: 0.04130241274833679, zelfde als eerst: False
DC uitgerekend: tensor([0.0550, 0.0021, 0.0249, 0.0114], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04524852707982063
DC na mean: 0.04524852707982063, zelfde als eerst: False
DC uitgerekend: tensor([0.0694, 0.0019, 0.0357, 0.0360], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05904851853847504
DC na mean: 0.05904851853847504, zelfde als eerst: False
DC uitgerekend: tensor([0.0545, 0.0015, 0.0246, 0.0318], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.046407751739025116
DC na mean: 0.046407751739025116, zelfde als eerst: False
DC uitgerekend: tensor([0.0778, 0.0003, 0.0085, 0.0432], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06387593597173691
DC na mean: 0.06387593597173691, zelfde als eerst: False
DC uitgerekend: tensor([0.0446, 0.0619, 0.0027, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03964084014296532
DC na mean: 0.03964084014296532, zelfde als eerst: False
DC uitgerekend: tensor([0.0548, 0.0707, 0.0023, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04816071689128876
DC na mean: 0.04816071689128876, zelfde als eerst: False
DC uitgerekend: tensor([0.0398, 0.1515, 0.0012, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04258062317967415
DC na mean: 0.04258062317967415, zelfde als eerst: False
DC uitgerekend: tensor([4.3889e-02, 1.5431e-01, 1.5330e-05, 3.2421e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04588085785508156
DC na mean: 0.04588085785508156, zelfde als eerst: False
DC uitgerekend: tensor([0.0912, 0.0158, 0.0157, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07288584858179092
DC na mean: 0.07288584858179092, zelfde als eerst: False
DC uitgerekend: tensor([0.0870, 0.0157, 0.0069, 0.0046], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06901758909225464
DC na mean: 0.06901758909225464, zelfde als eerst: False
DC uitgerekend: tensor([0.0774, 0.0141, 0.0044, 0.0023], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.061169665306806564
DC na mean: 0.061169665306806564, zelfde als eerst: False
DC uitgerekend: tensor([0.0833, 0.0119, 0.0065, 0.0038], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.06581384688615799
DC na mean: 0.06581384688615799, zelfde als eerst: False
DC uitgerekend: tensor([1.0889e-01, 2.2306e-10, 1.7690e-02, 6.7153e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.08564186096191406
DC na mean: 0.08564186096191406, zelfde als eerst: False
DC uitgerekend: tensor([1.1518e-01, 8.3417e-10, 1.8257e-02, 1.6979e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09131309390068054
DC na mean: 0.09131309390068054, zelfde als eerst: False
DC uitgerekend: tensor([7.5043e-02, 3.7554e-09, 3.7795e-03, 1.1374e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05889124795794487
DC na mean: 0.05889124795794487, zelfde als eerst: False
DC uitgerekend: tensor([7.2907e-02, 4.5546e-08, 1.0020e-03, 1.9342e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05764704570174217
DC na mean: 0.05764704570174217, zelfde als eerst: False
DC uitgerekend: tensor([4.8683e-02, 2.6930e-10, 3.2301e-02, 2.8798e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04015477001667023
DC na mean: 0.04015477001667023, zelfde als eerst: False
DC uitgerekend: tensor([5.3540e-02, 1.7688e-09, 7.2756e-02, 6.6766e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04729485139250755
DC na mean: 0.04729485139250755, zelfde als eerst: False
DC uitgerekend: tensor([4.0529e-02, 7.2923e-09, 1.1036e-01, 1.9995e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03981902077794075
DC na mean: 0.03981902077794075, zelfde als eerst: False
DC uitgerekend: tensor([3.0876e-02, 1.0316e-07, 8.5343e-02, 2.7481e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.03052682988345623
DC na mean: 0.03052682988345623, zelfde als eerst: False
DC uitgerekend: tensor([7.3819e-02, 1.9990e-06, 1.6129e-02, 9.3636e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05874492973089218
DC na mean: 0.05874492973089218, zelfde als eerst: False
DC uitgerekend: tensor([9.1128e-02, 1.2090e-07, 1.6879e-02, 2.0237e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.07295344024896622
DC na mean: 0.07295344024896622, zelfde als eerst: False
DC uitgerekend: tensor([7.3766e-02, 2.6774e-09, 4.9993e-03, 2.3347e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05892328545451164
DC na mean: 0.05892328545451164, zelfde als eerst: False
DC uitgerekend: tensor([7.4535e-02, 3.4281e-08, 1.5617e-03, 3.2581e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.059960704296827316
DC na mean: 0.059960704296827316, zelfde als eerst: False
DC uitgerekend: tensor([0.0557, 0.0356, 0.0272, 0.0173], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.04901351407170296
DC na mean: 0.04901351407170296, zelfde als eerst: False
DC uitgerekend: tensor([0.0569, 0.0142, 0.0368, 0.0442], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.05105535313487053
DC na mean: 0.05105535313487053, zelfde als eerst: False
DC uitgerekend: tensor([0.0649, 0.0076, 0.0512, 0.0503], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.058301862329244614
DC na mean: 0.058301862329244614, zelfde als eerst: False
DC uitgerekend: tensor([0.1093, 0.0096, 0.0530, 0.0579], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.09335340559482574
DC na mean: 0.09335340559482574, zelfde als eerst: False
DC uitgerekend: tensor([1.6857e-02, 7.6249e-02, 2.3549e-10, 9.1620e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.01953737810254097
DC na mean: 0.01953737810254097, zelfde als eerst: False
DC uitgerekend: tensor([1.7532e-02, 1.0229e-01, 1.1912e-09, 1.5967e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: 0.022582953795790672
DC na mean: 0.022582953795790672, zelfde als eerst: False
DC uitgerekend: tensor([6.9749e-03, 1.5420e-01, 1.1442e-08, 8.7854e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
