Starting at Wed Aug 10 12:02:15 CEST 2022
Running on hosts: res-hpc-lkeb04
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 8.
Account: div2-lkeb
Job ID: 11441206
Job name: PancreasTrain
Node running script: res-hpc-lkeb04
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Wed Aug 10 14:46:37 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 495.29.05    Driver Version: 495.29.05    CUDA Version: 11.5     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA GeForce ...  On   | 00000000:06:00.0 Off |                  N/A |
| 29%   54C    P8    10W / 250W |      0MiB / 11178MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-05ggvotj/hiddenlayer_81db1f785b9f4efba0affdfd1aedb468
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.0-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.3-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0-py3-none-any.whl
Collecting scipy
  Using cached scipy-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (43.9 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24-py3-none-any.whl
Collecting numpy
  Using cached numpy-1.23.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.0 MB)
Collecting sklearn
  Using cached sklearn-0.0-py2.py3-none-any.whl
Collecting SimpleITK
  Using cached SimpleITK-2.1.1.2-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (48.4 MB)
Collecting pandas
  Using cached pandas-1.4.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.1-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.8.8-py3-none-any.whl (208 kB)
Collecting matplotlib
  Using cached matplotlib-3.5.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)
Collecting monai
  Using cached monai-0.9.1-202207251608-py3-none-any.whl (990 kB)
Collecting einops
  Using cached einops-0.4.1-py3-none-any.whl (28 kB)
Collecting ipython
  Using cached ipython-8.4.0-py3-none-any.whl (750 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.3.0-py3-none-any.whl (25 kB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.2.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.2 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.5 MB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting future
  Using cached future-0.18.2-py3-none-any.whl
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting networkx>=2.2
  Using cached networkx-2.8.5-py3-none-any.whl (2.0 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting imageio>=2.4.1
  Using cached imageio-2.21.1-py3-none-any.whl (3.4 MB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.9 MB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.14-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.8 MB)
Collecting stack-data
  Using cached stack_data-0.3.0-py3-none-any.whl (23 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0
  Using cached prompt_toolkit-3.0.30-py3-none-any.whl (381 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting setuptools>=18.5
  Using cached setuptools-63.4.2-py3-none-any.whl (1.2 MB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.12.0-py3-none-any.whl (1.1 MB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.3-py3-none-any.whl (8.2 kB)
Collecting traitlets>=5
  Using cached traitlets-5.3.0-py3-none-any.whl (106 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.34.4-py3-none-any.whl (944 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting pytz>=2020.1
  Using cached pytz-2022.1-py2.py3-none-any.whl (503 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.3-py3-none-any.whl (61 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.6.15-py3-none-any.whl (160 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.0-py3-none-any.whl (39 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.11-py2.py3-none-any.whl (139 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.1.0-py2.py3-none-any.whl (306 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting asttokens
  Using cached asttokens-2.0.7-py2.py3-none-any.whl (23 kB)
Collecting executing
  Using cached executing-0.9.1-py2.py3-none-any.whl (16 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.3.0 SimpleITK-2.1.1.2 argparse-1.4.0 asttokens-2.0.7 backcall-0.2.0 batchgenerators-0.24 certifi-2022.6.15 charset-normalizer-2.1.0 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.3 einops-0.4.1 executing-0.9.1 fonttools-4.34.4 future-0.18.2 graphviz-0.20.1 idna-3.3 imageio-2.21.1 ipython-8.4.0 jedi-0.18.1 joblib-1.1.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.5.2 matplotlib-inline-0.1.3 medpy-0.4.0 monai-0.9.1 networkx-2.8.5 nibabel-4.0.1 nnunet numpy-1.23.1 packaging-21.3 pandas-1.4.3 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.2.0 prompt-toolkit-3.0.30 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.12.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.14 pytz-2022.1 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.2 scipy-1.9.0 setuptools-63.4.2 six-1.16.0 sklearn-0.0 stack-data-0.3.0 threadpoolctl-3.1.0 tifffile-2022.8.8 torch-1.12.0 tqdm-4.64.0 traceback2-1.4.0 traitlets-5.3.0 typing-extensions-4.3.0 unittest2-1.1.0 urllib3-1.26.11 wcwidth-0.2.5
1.12.0+cu116
8302
/exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/__init__.py


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2_Loss_DC_CE_weight01', task='901', fold='0', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNet_variants.loss_function.nnUNetTrainerV2_Loss_DC_CE_weight01.nnUNetTrainerV2_Loss_DC_CE_weight01'>
For that I will be using the following configuration:
num_classes:  4
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 96, 160, 160]), 'median_patient_size_in_voxels': array([147, 255, 255]), 'current_spacing': array([3.03      , 1.52075025, 1.52075025]), 'original_spacing': array([3.        , 0.75781244, 0.75781244]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 48, 192, 192]), 'median_patient_size_in_voxels': array([148, 512, 512]), 'current_spacing': array([3.        , 0.75781244, 0.75781244]), 'original_spacing': array([3.        , 0.75781244, 0.75781244]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task901/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-08-10 14:48:31.366966: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-08-10 14:48:31.473244: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task901/splits_final.pkl
2022-08-10 14:48:31.477310: The split file contains 5 splits.
2022-08-10 14:48:31.479399: Desired fold for training: 0
2022-08-10 14:48:31.481494: This split has 20 training and 6 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-08-10 14:48:32.129872: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-08-10 14:48:43.486064: Unable to plot network architecture:
2022-08-10 14:48:43.488712: local variable 'g' referenced before assignment
2022-08-10 14:48:43.490909: 
printing the network instead:

2022-08-10 14:48:43.493043: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 5, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-08-10 14:48:43.498770: 

2022-08-10 14:48:43.500960: 
epoch:  0
DC uitgerekend: tensor([0.0256, 0.0139, 0.0195, 0.0048], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0256, 0.0014, 0.0020, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007347686216235161, zelfde als eerst: False
DC uitgerekend: tensor([0.0282, 0.0140, 0.0205, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0282, 0.0014, 0.0021, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008007149212062359, zelfde als eerst: False
DC uitgerekend: tensor([0.0270, 0.0150, 0.0188, 0.0046], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0270, 0.0015, 0.0019, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007720503490418196, zelfde als eerst: False
DC uitgerekend: tensor([0.0302, 0.0161, 0.0115, 0.0060], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0302, 0.0016, 0.0011, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008387312293052673, zelfde als eerst: False
DC uitgerekend: tensor([0.0089, 0.0544, 0.0094, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.9222e-03, 5.4433e-03, 9.3628e-04, 9.0437e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003848048858344555, zelfde als eerst: False
DC uitgerekend: tensor([0.0086, 0.0581, 0.0116, 0.0007], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.6496e-03, 5.8123e-03, 1.1598e-03, 7.2371e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003923521842807531, zelfde als eerst: False
DC uitgerekend: tensor([0.0089, 0.0446, 0.0108, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.8569e-03, 4.4614e-03, 1.0811e-03, 8.8279e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003621922805905342, zelfde als eerst: False
DC uitgerekend: tensor([0.0121, 0.0410, 0.0082, 0.0011], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0121, 0.0041, 0.0008, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0042741266079247, zelfde als eerst: False
DC uitgerekend: tensor([1.4484e-02, 1.6245e-11, 1.4826e-02, 8.7262e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.4484e-02, 1.6245e-12, 1.4826e-03, 8.7262e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004209843929857016, zelfde als eerst: False
DC uitgerekend: tensor([1.3727e-02, 6.1323e-11, 2.0119e-02, 6.7964e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.3727e-02, 6.1323e-12, 2.0119e-03, 6.7964e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004104636609554291, zelfde als eerst: False
DC uitgerekend: tensor([1.1650e-02, 8.4837e-10, 1.4835e-02, 6.1462e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1650e-02, 8.4837e-11, 1.4835e-03, 6.1462e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003436925122514367, zelfde als eerst: False
DC uitgerekend: tensor([1.3053e-02, 8.3523e-09, 8.4557e-03, 6.4373e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.3053e-02, 8.3523e-10, 8.4557e-04, 6.4373e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003635656088590622, zelfde als eerst: False
DC uitgerekend: tensor([4.1471e-03, 5.1387e-02, 1.9347e-11, 9.5905e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.1471e-03, 5.1387e-03, 1.9347e-12, 9.5905e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.002345424145460129, zelfde als eerst: False
DC uitgerekend: tensor([3.9844e-03, 6.1212e-02, 3.4825e-11, 8.0223e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.9844e-03, 6.1212e-03, 3.4825e-12, 8.0223e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0025464685168117285, zelfde als eerst: False
DC uitgerekend: tensor([4.3326e-03, 3.4512e-02, 3.9546e-10, 6.9946e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.3326e-03, 3.4512e-03, 3.9546e-11, 6.9946e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0019634412601590157, zelfde als eerst: False
DC uitgerekend: tensor([4.0687e-03, 3.3804e-02, 8.5084e-09, 1.7157e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.0687e-03, 3.3804e-03, 8.5084e-10, 1.7157e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.001905166427604854, zelfde als eerst: False
DC uitgerekend: tensor([0.0267, 0.0306, 0.0255, 0.0050], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0267, 0.0031, 0.0025, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008197213523089886, zelfde als eerst: False
DC uitgerekend: tensor([0.0275, 0.0297, 0.0239, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0275, 0.0030, 0.0024, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008363526314496994, zelfde als eerst: False
DC uitgerekend: tensor([0.0250, 0.0294, 0.0271, 0.0057], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0250, 0.0029, 0.0027, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007800031453371048, zelfde als eerst: False
DC uitgerekend: tensor([0.0283, 0.0285, 0.0191, 0.0058], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0283, 0.0028, 0.0019, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008411694318056107, zelfde als eerst: False
DC uitgerekend: tensor([0.0230, 0.0104, 0.0130, 0.0056], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0230, 0.0010, 0.0013, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006479773670434952, zelfde als eerst: False
DC uitgerekend: tensor([0.0237, 0.0113, 0.0123, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0237, 0.0011, 0.0012, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006674618925899267, zelfde als eerst: False
DC uitgerekend: tensor([0.0196, 0.0102, 0.0140, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0196, 0.0010, 0.0014, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005665530450642109, zelfde als eerst: False
DC uitgerekend: tensor([0.0173, 0.0113, 0.0075, 0.0079], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0173, 0.0011, 0.0008, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004981424193829298, zelfde als eerst: False
DC uitgerekend: tensor([0.0042, 0.0153, 0.0091, 0.0038], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0042, 0.0015, 0.0009, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0017456382047384977, zelfde als eerst: False
DC uitgerekend: tensor([0.0053, 0.0161, 0.0083, 0.0048], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0053, 0.0016, 0.0008, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.002047289162874222, zelfde als eerst: False
DC uitgerekend: tensor([0.0036, 0.0168, 0.0101, 0.0060], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0036, 0.0017, 0.0010, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0017260767053812742, zelfde als eerst: False
DC uitgerekend: tensor([0.0041, 0.0181, 0.0043, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0041, 0.0018, 0.0004, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0017008672002702951, zelfde als eerst: False
DC uitgerekend: tensor([3.1795e-02, 1.8718e-11, 1.6101e-02, 4.2659e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.1795e-02, 1.8718e-12, 1.6101e-03, 4.2659e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008457956835627556, zelfde als eerst: False
DC uitgerekend: tensor([3.0254e-02, 7.2309e-11, 1.4589e-02, 5.0880e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.0254e-02, 7.2309e-12, 1.4589e-03, 5.0880e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008055326528847218, zelfde als eerst: False
DC uitgerekend: tensor([2.5760e-02, 1.0164e-09, 1.7998e-02, 5.3344e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5760e-02, 1.0164e-10, 1.7998e-03, 5.3344e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007023413199931383, zelfde als eerst: False
DC uitgerekend: tensor([2.5393e-02, 9.1229e-09, 1.3708e-02, 5.4639e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5393e-02, 9.1229e-10, 1.3708e-03, 5.4639e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006827530451118946, zelfde als eerst: False
DC uitgerekend: tensor([0.0392, 0.0175, 0.0361, 0.0124], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0392, 0.0018, 0.0036, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01145321223884821, zelfde als eerst: False
DC uitgerekend: tensor([0.0404, 0.0203, 0.0347, 0.0165], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0404, 0.0020, 0.0035, 0.0016], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011889933608472347, zelfde als eerst: False
DC uitgerekend: tensor([0.0324, 0.0164, 0.0410, 0.0149], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0324, 0.0016, 0.0041, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009908796288073063, zelfde als eerst: False
DC uitgerekend: tensor([0.0285, 0.0200, 0.0304, 0.0173], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0285, 0.0020, 0.0030, 0.0017], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008816569112241268, zelfde als eerst: False
DC uitgerekend: tensor([5.9541e-03, 2.0633e-11, 5.9049e-03, 1.2695e-11], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.9541e-03, 2.0633e-12, 5.9049e-04, 1.2695e-12], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0016361584421247244, zelfde als eerst: False
DC uitgerekend: tensor([7.0519e-03, 8.0771e-11, 5.2958e-03, 1.3218e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.0519e-03, 8.0771e-12, 5.2958e-04, 1.3218e-11], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0018953608814626932, zelfde als eerst: False
DC uitgerekend: tensor([5.4961e-03, 1.0952e-09, 6.6617e-03, 1.2273e-09], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.4961e-03, 1.0952e-10, 6.6617e-04, 1.2273e-10], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0015405624872073531, zelfde als eerst: False
DC uitgerekend: tensor([4.4350e-03, 9.4055e-09, 5.6279e-03, 4.1285e-09], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.4350e-03, 9.4055e-10, 5.6279e-04, 4.1285e-10], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0012494373368099332, zelfde als eerst: False
DC uitgerekend: tensor([2.5497e-03, 5.2204e-02, 2.5387e-11, 3.1184e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5497e-03, 5.2204e-03, 2.5387e-12, 3.1184e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0019503310322761536, zelfde als eerst: False
DC uitgerekend: tensor([2.5461e-03, 4.2621e-02, 5.7220e-11, 3.3460e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5461e-03, 4.2621e-03, 5.7220e-12, 3.3460e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.001710425247438252, zelfde als eerst: False
DC uitgerekend: tensor([2.3810e-03, 4.4409e-02, 6.2543e-10, 4.3287e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.3810e-03, 4.4409e-03, 6.2543e-11, 4.3287e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0017162937438115478, zelfde als eerst: False
DC uitgerekend: tensor([2.3300e-03, 3.6875e-02, 1.1008e-08, 5.0764e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.3300e-03, 3.6875e-03, 1.1008e-09, 5.0764e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0015170769765973091, zelfde als eerst: False
DC uitgerekend: tensor([0.0648, 0.0442, 0.0296, 0.0091], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0648, 0.0044, 0.0030, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01826300099492073, zelfde als eerst: False
DC uitgerekend: tensor([0.0647, 0.0526, 0.0273, 0.0131], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0647, 0.0053, 0.0027, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01850210689008236, zelfde als eerst: False
DC uitgerekend: tensor([0.0523, 0.0482, 0.0334, 0.0106], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0523, 0.0048, 0.0033, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015376499854028225, zelfde als eerst: False
DC uitgerekend: tensor([0.0438, 0.0458, 0.0286, 0.0096], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0438, 0.0046, 0.0029, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01305990107357502, zelfde als eerst: False
DC uitgerekend: tensor([0.0300, 0.0001, 0.0131, 0.0084], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.9954e-02, 1.1250e-05, 1.3096e-03, 8.4049e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008028896525502205, zelfde als eerst: False
DC uitgerekend: tensor([3.4222e-02, 9.7199e-05, 1.3462e-02, 1.1016e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.4222e-02, 9.7199e-06, 1.3462e-03, 1.1016e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00916984025388956, zelfde als eerst: False
DC uitgerekend: tensor([0.0220, 0.0002, 0.0164, 0.0114], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.2001e-02, 2.0185e-05, 1.6362e-03, 1.1436e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0062001533806324005, zelfde als eerst: False
DC uitgerekend: tensor([1.8759e-02, 5.3674e-05, 1.2750e-02, 1.0153e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.8759e-02, 5.3674e-06, 1.2750e-03, 1.0153e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005263763479888439, zelfde als eerst: False
DC uitgerekend: tensor([0.0314, 0.0016, 0.0341, 0.0102], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0314, 0.0002, 0.0034, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009004730731248856, zelfde als eerst: False
DC uitgerekend: tensor([0.0310, 0.0019, 0.0343, 0.0129], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0310, 0.0002, 0.0034, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008987468667328358, zelfde als eerst: False
DC uitgerekend: tensor([0.0216, 0.0008, 0.0339, 0.0099], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1608e-02, 8.0591e-05, 3.3928e-03, 9.9428e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00651897769421339, zelfde als eerst: False
DC uitgerekend: tensor([0.0193, 0.0011, 0.0267, 0.0083], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0193, 0.0001, 0.0027, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005720415618270636, zelfde als eerst: False
DC uitgerekend: tensor([1.7197e-02, 3.7727e-11, 1.7091e-02, 7.8641e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.7197e-02, 3.7727e-12, 1.7091e-03, 7.8641e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004923075437545776, zelfde als eerst: False
DC uitgerekend: tensor([1.6648e-02, 1.2495e-10, 1.3506e-02, 8.0331e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.6648e-02, 1.2495e-11, 1.3506e-03, 8.0331e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004700413439422846, zelfde als eerst: False
DC uitgerekend: tensor([1.5161e-02, 1.5363e-09, 1.4596e-02, 6.7169e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.5161e-02, 1.5363e-10, 1.4596e-03, 6.7169e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004323129076510668, zelfde als eerst: False
DC uitgerekend: tensor([1.1807e-02, 1.3036e-08, 9.9405e-03, 7.5981e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1807e-02, 1.3036e-09, 9.9405e-04, 7.5981e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0033902653958648443, zelfde als eerst: False
DC uitgerekend: tensor([0.0378, 0.0026, 0.0277, 0.0068], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0378, 0.0003, 0.0028, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010377109050750732, zelfde als eerst: False
DC uitgerekend: tensor([0.0423, 0.0030, 0.0278, 0.0086], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0423, 0.0003, 0.0028, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011551356874406338, zelfde als eerst: False
DC uitgerekend: tensor([0.0368, 0.0021, 0.0292, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0368, 0.0002, 0.0029, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010126658715307713, zelfde als eerst: False
DC uitgerekend: tensor([0.0226, 0.0012, 0.0252, 0.0088], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0226, 0.0001, 0.0025, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00651916628703475, zelfde als eerst: False
DC uitgerekend: tensor([0.0417, 0.0436, 0.0175, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0417, 0.0044, 0.0017, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012043241411447525, zelfde als eerst: False
DC uitgerekend: tensor([0.0454, 0.0497, 0.0198, 0.0048], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0454, 0.0050, 0.0020, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013196608982980251, zelfde als eerst: False
DC uitgerekend: tensor([0.0309, 0.0406, 0.0173, 0.0048], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0309, 0.0041, 0.0017, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009290505200624466, zelfde als eerst: False
DC uitgerekend: tensor([0.0236, 0.0355, 0.0193, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0236, 0.0036, 0.0019, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007355169393122196, zelfde als eerst: False
DC uitgerekend: tensor([6.4139e-02, 2.0186e-07, 2.0172e-02, 1.3946e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.4139e-02, 2.0186e-08, 2.0172e-03, 1.3946e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016887636855244637, zelfde als eerst: False
DC uitgerekend: tensor([7.4291e-02, 2.2972e-10, 1.6937e-02, 1.5503e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.4291e-02, 2.2972e-11, 1.6937e-03, 1.5503e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019383657723665237, zelfde als eerst: False
DC uitgerekend: tensor([7.4603e-02, 2.3158e-09, 1.7570e-02, 1.2148e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.4603e-02, 2.3158e-10, 1.7570e-03, 1.2148e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019393758848309517, zelfde als eerst: False
DC uitgerekend: tensor([4.4350e-02, 2.0261e-08, 1.9631e-02, 1.1322e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.4350e-02, 2.0261e-09, 1.9631e-03, 1.1322e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011861419305205345, zelfde als eerst: False
DC uitgerekend: tensor([0.0344, 0.0643, 0.0087, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0344, 0.0064, 0.0009, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010497436858713627, zelfde als eerst: False
DC uitgerekend: tensor([0.0354, 0.0619, 0.0075, 0.0035], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0354, 0.0062, 0.0008, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010663449764251709, zelfde als eerst: False
DC uitgerekend: tensor([0.0349, 0.0561, 0.0071, 0.0021], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0349, 0.0056, 0.0007, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01036807894706726, zelfde als eerst: False
DC uitgerekend: tensor([0.0174, 0.0464, 0.0130, 0.0022], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0174, 0.0046, 0.0013, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005881361663341522, zelfde als eerst: False
DC uitgerekend: tensor([0.0551, 0.0609, 0.0194, 0.0147], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0551, 0.0061, 0.0019, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016151580959558487, zelfde als eerst: False
DC uitgerekend: tensor([0.0577, 0.0747, 0.0216, 0.0167], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0577, 0.0075, 0.0022, 0.0017], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017256462946534157, zelfde als eerst: False
DC uitgerekend: tensor([0.0537, 0.0476, 0.0172, 0.0113], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0537, 0.0048, 0.0017, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015326512977480888, zelfde als eerst: False
DC uitgerekend: tensor([0.0330, 0.0471, 0.0233, 0.0139], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0330, 0.0047, 0.0023, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01034718006849289, zelfde als eerst: False
DC uitgerekend: tensor([0.0386, 0.0409, 0.0212, 0.0130], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0386, 0.0041, 0.0021, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011532831005752087, zelfde als eerst: False
DC uitgerekend: tensor([0.0395, 0.0478, 0.0211, 0.0121], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0395, 0.0048, 0.0021, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011912798509001732, zelfde als eerst: False
DC uitgerekend: tensor([0.0323, 0.0396, 0.0182, 0.0095], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0323, 0.0040, 0.0018, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009752960875630379, zelfde als eerst: False
DC uitgerekend: tensor([0.0296, 0.0294, 0.0170, 0.0099], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0296, 0.0029, 0.0017, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008793681859970093, zelfde als eerst: False
DC uitgerekend: tensor([0.0529, 0.0129, 0.0236, 0.0227], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0529, 0.0013, 0.0024, 0.0023], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014696153812110424, zelfde als eerst: False
DC uitgerekend: tensor([0.0578, 0.0132, 0.0206, 0.0215], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0578, 0.0013, 0.0021, 0.0022], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015846095979213715, zelfde als eerst: False
DC uitgerekend: tensor([0.0503, 0.0097, 0.0165, 0.0142], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0503, 0.0010, 0.0017, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01358531229197979, zelfde als eerst: False
DC uitgerekend: tensor([0.0308, 0.0076, 0.0181, 0.0130], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0308, 0.0008, 0.0018, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008658640086650848, zelfde als eerst: False
DC uitgerekend: tensor([2.1102e-02, 1.5278e-10, 7.9487e-03, 1.4863e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1102e-02, 1.5278e-11, 7.9487e-04, 1.4863e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005845869425684214, zelfde als eerst: False
DC uitgerekend: tensor([1.7326e-02, 4.4265e-10, 7.0577e-03, 1.4360e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.7326e-02, 4.4265e-11, 7.0577e-04, 1.4360e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004866903647780418, zelfde als eerst: False
DC uitgerekend: tensor([1.3936e-02, 3.7433e-09, 3.3940e-03, 9.9311e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.3936e-02, 3.7433e-10, 3.3940e-04, 9.9311e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003817022778093815, zelfde als eerst: False
DC uitgerekend: tensor([1.6416e-02, 3.6825e-08, 3.5718e-03, 9.9947e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.6416e-02, 3.6825e-09, 3.5718e-04, 9.9947e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004443044774234295, zelfde als eerst: False
DC uitgerekend: tensor([0.0134, 0.0363, 0.0139, 0.0039], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0134, 0.0036, 0.0014, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004690450616180897, zelfde als eerst: False
DC uitgerekend: tensor([0.0153, 0.0376, 0.0166, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0153, 0.0038, 0.0017, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005285418592393398, zelfde als eerst: False
DC uitgerekend: tensor([0.0105, 0.0455, 0.0108, 0.0020], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0105, 0.0045, 0.0011, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004091434180736542, zelfde als eerst: False
DC uitgerekend: tensor([0.0114, 0.0304, 0.0164, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0114, 0.0030, 0.0016, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004101863130927086, zelfde als eerst: False
DC uitgerekend: tensor([0.0699, 0.0364, 0.0280, 0.0131], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0699, 0.0036, 0.0028, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01940225064754486, zelfde als eerst: False
DC uitgerekend: tensor([0.0715, 0.0327, 0.0253, 0.0125], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0715, 0.0033, 0.0025, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01964193768799305, zelfde als eerst: False
DC uitgerekend: tensor([0.0594, 0.0283, 0.0172, 0.0059], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0594, 0.0028, 0.0017, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016126533970236778, zelfde als eerst: False
DC uitgerekend: tensor([0.0400, 0.0195, 0.0125, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0400, 0.0019, 0.0012, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010956990532577038, zelfde als eerst: False
DC uitgerekend: tensor([0.0348, 0.0129, 0.0249, 0.0311], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0348, 0.0013, 0.0025, 0.0031], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010421902872622013, zelfde als eerst: False
DC uitgerekend: tensor([0.0368, 0.0143, 0.0203, 0.0269], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0368, 0.0014, 0.0020, 0.0027], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010736656375229359, zelfde als eerst: False
DC uitgerekend: tensor([0.0278, 0.0095, 0.0155, 0.0206], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0278, 0.0010, 0.0015, 0.0021], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00809464044868946, zelfde als eerst: False
DC uitgerekend: tensor([0.0219, 0.0040, 0.0107, 0.0139], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0219, 0.0004, 0.0011, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006198589690029621, zelfde als eerst: False
DC uitgerekend: tensor([0.0505, 0.0017, 0.0289, 0.0253], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0505, 0.0002, 0.0029, 0.0025], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014013088308274746, zelfde als eerst: False
DC uitgerekend: tensor([0.0504, 0.0021, 0.0283, 0.0237], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0504, 0.0002, 0.0028, 0.0024], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0139484703540802, zelfde als eerst: False
DC uitgerekend: tensor([0.0673, 0.0013, 0.0190, 0.0146], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0673, 0.0001, 0.0019, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017697906121611595, zelfde als eerst: False
DC uitgerekend: tensor([0.0324, 0.0007, 0.0352, 0.0125], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.2361e-02, 6.7611e-05, 3.5232e-03, 1.2471e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009299729019403458, zelfde als eerst: False
DC uitgerekend: tensor([0.0522, 0.0342, 0.0243, 0.0129], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0522, 0.0034, 0.0024, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014829415827989578, zelfde als eerst: False
DC uitgerekend: tensor([0.0611, 0.0408, 0.0264, 0.0143], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0611, 0.0041, 0.0026, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01730002649128437, zelfde als eerst: False
DC uitgerekend: tensor([0.0541, 0.0119, 0.0176, 0.0103], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0541, 0.0012, 0.0018, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014533726498484612, zelfde als eerst: False
DC uitgerekend: tensor([0.0356, 0.0114, 0.0114, 0.0083], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0356, 0.0011, 0.0011, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009672798216342926, zelfde als eerst: False
DC uitgerekend: tensor([0.0518, 0.0377, 0.0235, 0.0444], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0518, 0.0038, 0.0023, 0.0044], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015594590455293655, zelfde als eerst: False
DC uitgerekend: tensor([0.0593, 0.0341, 0.0205, 0.0422], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0593, 0.0034, 0.0020, 0.0042], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01725752092897892, zelfde als eerst: False
DC uitgerekend: tensor([0.0527, 0.0371, 0.0140, 0.0210], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0527, 0.0037, 0.0014, 0.0021], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014986000955104828, zelfde als eerst: False
DC uitgerekend: tensor([0.0342, 0.0220, 0.0075, 0.0174], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0342, 0.0022, 0.0007, 0.0017], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00973155815154314, zelfde als eerst: False
DC uitgerekend: tensor([2.3024e-02, 6.6639e-02, 3.7922e-10, 2.8911e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.3024e-02, 6.6639e-03, 3.7922e-11, 2.8911e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007494144141674042, zelfde als eerst: False
DC uitgerekend: tensor([2.1590e-02, 4.9032e-02, 1.5361e-09, 2.1279e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1590e-02, 4.9032e-03, 1.5361e-10, 2.1279e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006676389370113611, zelfde als eerst: False
DC uitgerekend: tensor([2.0113e-02, 2.9784e-02, 9.3292e-09, 1.6773e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.0113e-02, 2.9784e-03, 9.3292e-10, 1.6773e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005814815871417522, zelfde als eerst: False
DC uitgerekend: tensor([1.8946e-02, 2.6742e-02, 6.8012e-08, 1.6269e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.8946e-02, 2.6742e-03, 6.8012e-09, 1.6269e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005445635877549648, zelfde als eerst: False
DC uitgerekend: tensor([0.0329, 0.0465, 0.0011, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0329, 0.0046, 0.0001, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009536775760352612, zelfde als eerst: False
DC uitgerekend: tensor([0.0380, 0.0336, 0.0021, 0.0064], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0380, 0.0034, 0.0002, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010554950684309006, zelfde als eerst: False
DC uitgerekend: tensor([0.0265, 0.0197, 0.0007, 0.0042], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.6467e-02, 1.9749e-03, 7.3021e-05, 4.2484e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007234856486320496, zelfde als eerst: False
DC uitgerekend: tensor([0.0219, 0.0185, 0.0030, 0.0025], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0219, 0.0018, 0.0003, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006068699061870575, zelfde als eerst: False
DC uitgerekend: tensor([0.0626, 0.0064, 0.0137, 0.0054], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0626, 0.0006, 0.0014, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01628931052982807, zelfde als eerst: False
DC uitgerekend: tensor([0.0598, 0.0066, 0.0141, 0.0067], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0598, 0.0007, 0.0014, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01564250886440277, zelfde als eerst: False
DC uitgerekend: tensor([0.0688, 0.0050, 0.0133, 0.0053], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0688, 0.0005, 0.0013, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017795579507946968, zelfde als eerst: False
DC uitgerekend: tensor([0.0527, 0.0012, 0.0163, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0527, 0.0001, 0.0016, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013726452365517616, zelfde als eerst: False
DC uitgerekend: tensor([4.5883e-02, 2.2658e-10, 2.9110e-02, 2.6097e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.5883e-02, 2.2658e-11, 2.9110e-03, 2.6097e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012850992381572723, zelfde als eerst: False
DC uitgerekend: tensor([4.3742e-02, 8.7800e-10, 1.5819e-02, 1.9508e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.3742e-02, 8.7800e-11, 1.5819e-03, 1.9508e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011818674392998219, zelfde als eerst: False
DC uitgerekend: tensor([7.5236e-02, 7.9205e-09, 1.0958e-02, 1.3338e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.5236e-02, 7.9205e-10, 1.0958e-03, 1.3338e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01941632479429245, zelfde als eerst: False
DC uitgerekend: tensor([4.8252e-02, 9.7883e-08, 8.8755e-03, 1.0889e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.8252e-02, 9.7883e-09, 8.8755e-04, 1.0889e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012557168491184711, zelfde als eerst: False
DC uitgerekend: tensor([0.0359, 0.0819, 0.0023, 0.0163], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0359, 0.0082, 0.0002, 0.0016], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011493781581521034, zelfde als eerst: False
DC uitgerekend: tensor([0.0371, 0.0574, 0.0022, 0.0140], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0371, 0.0057, 0.0002, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011119442991912365, zelfde als eerst: False
DC uitgerekend: tensor([0.0463, 0.0217, 0.0017, 0.0062], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0463, 0.0022, 0.0002, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012324280105531216, zelfde als eerst: False
DC uitgerekend: tensor([0.0364, 0.0115, 0.0011, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0364, 0.0011, 0.0001, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009580835700035095, zelfde als eerst: False
DC uitgerekend: tensor([0.0481, 0.0828, 0.0327, 0.0154], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0481, 0.0083, 0.0033, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015309717506170273, zelfde als eerst: False
DC uitgerekend: tensor([0.0452, 0.0581, 0.0230, 0.0153], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0452, 0.0058, 0.0023, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01371605135500431, zelfde als eerst: False
DC uitgerekend: tensor([0.0330, 0.0258, 0.0086, 0.0051], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0330, 0.0026, 0.0009, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009230135940015316, zelfde als eerst: False
DC uitgerekend: tensor([0.0400, 0.0178, 0.0058, 0.0062], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0400, 0.0018, 0.0006, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010753434151411057, zelfde als eerst: False
DC uitgerekend: tensor([2.1395e-04, 2.6150e-10, 6.9561e-02, 9.1599e-05], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1395e-04, 2.6150e-11, 6.9561e-03, 9.1599e-06], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00179479259531945, zelfde als eerst: False
DC uitgerekend: tensor([1.2372e-04, 1.5508e-09, 4.6914e-02, 4.9019e-05], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.2372e-04, 1.5508e-10, 4.6914e-03, 4.9019e-06], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0012050023069605231, zelfde als eerst: False
DC uitgerekend: tensor([3.9881e-05, 1.4325e-08, 2.0262e-02, 1.9428e-08], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.9881e-05, 1.4325e-09, 2.0262e-03, 1.9428e-09], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0005165103357285261, zelfde als eerst: False
DC uitgerekend: tensor([2.9960e-08, 1.2815e-07, 1.1162e-02, 1.9709e-07], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.9960e-08, 1.2815e-08, 1.1162e-03, 1.9709e-08], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00027905640308745205, zelfde als eerst: False
DC uitgerekend: tensor([3.3582e-02, 1.0564e-01, 3.1679e-10, 1.0530e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.3582e-02, 1.0564e-02, 3.1679e-11, 1.0530e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011299769394099712, zelfde als eerst: False
DC uitgerekend: tensor([3.5759e-02, 8.4365e-02, 2.5079e-09, 8.8743e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.5759e-02, 8.4365e-03, 2.5079e-10, 8.8743e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011270837858319283, zelfde als eerst: False
DC uitgerekend: tensor([3.2351e-02, 3.3365e-02, 1.9142e-08, 3.4049e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.2351e-02, 3.3365e-03, 1.9142e-09, 3.4049e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009006960317492485, zelfde als eerst: False
DC uitgerekend: tensor([3.9018e-02, 2.2628e-02, 1.1823e-07, 4.9788e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.9018e-02, 2.2628e-03, 1.1823e-08, 4.9788e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010444635525345802, zelfde als eerst: False
DC uitgerekend: tensor([0.0689, 0.0173, 0.0460, 0.0265], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0689, 0.0017, 0.0046, 0.0027], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01947423815727234, zelfde als eerst: False
DC uitgerekend: tensor([0.0673, 0.0167, 0.0275, 0.0204], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0673, 0.0017, 0.0027, 0.0020], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018438275903463364, zelfde als eerst: False
DC uitgerekend: tensor([0.0927, 0.0121, 0.0122, 0.0080], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0927, 0.0012, 0.0012, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02397184818983078, zelfde als eerst: False
DC uitgerekend: tensor([0.0691, 0.0052, 0.0207, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0691, 0.0005, 0.0021, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018049951642751694, zelfde als eerst: False
DC uitgerekend: tensor([0.0637, 0.0149, 0.0264, 0.0317], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0637, 0.0015, 0.0026, 0.0032], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01775946654379368, zelfde als eerst: False
DC uitgerekend: tensor([0.0718, 0.0117, 0.0219, 0.0318], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0718, 0.0012, 0.0022, 0.0032], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01958741620182991, zelfde als eerst: False
DC uitgerekend: tensor([0.0738, 0.0184, 0.0138, 0.0125], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0738, 0.0018, 0.0014, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01957569643855095, zelfde als eerst: False
DC uitgerekend: tensor([0.0362, 0.0113, 0.0232, 0.0089], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0362, 0.0011, 0.0023, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010124977678060532, zelfde als eerst: False
DC uitgerekend: tensor([0.0031, 0.0124, 0.0507, 0.0012], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0031, 0.0012, 0.0051, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0023925909772515297, zelfde als eerst: False
DC uitgerekend: tensor([0.0031, 0.0116, 0.0257, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0031, 0.0012, 0.0026, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0017643148312345147, zelfde als eerst: False
DC uitgerekend: tensor([0.0004, 0.0126, 0.0138, 0.0023], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0004, 0.0013, 0.0014, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0008203373872675002, zelfde als eerst: False
DC uitgerekend: tensor([0.0001, 0.0052, 0.0098, 0.0011], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0001, 0.0005, 0.0010, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00043756148079410195, zelfde als eerst: False
DC uitgerekend: tensor([6.7396e-02, 6.3381e-05, 4.6205e-02, 2.6873e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.7396e-02, 6.3381e-06, 4.6205e-03, 2.6873e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018677596002817154, zelfde als eerst: False
DC uitgerekend: tensor([7.7602e-02, 1.7039e-05, 2.6008e-02, 2.6199e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.7602e-02, 1.7039e-06, 2.6008e-03, 2.6199e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.020705997943878174, zelfde als eerst: False
DC uitgerekend: tensor([7.7986e-02, 3.4232e-05, 1.0599e-02, 1.3354e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.7986e-02, 3.4232e-06, 1.0599e-03, 1.3354e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.020096179097890854, zelfde als eerst: False
DC uitgerekend: tensor([7.6723e-02, 1.2222e-07, 1.3492e-02, 9.1815e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.6723e-02, 1.2222e-08, 1.3492e-03, 9.1815e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019747523590922356, zelfde als eerst: False
DC uitgerekend: tensor([2.8492e-02, 7.5511e-02, 1.6888e-10, 2.6165e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.8492e-02, 7.5511e-03, 1.6888e-11, 2.6165e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009664795361459255, zelfde als eerst: False
DC uitgerekend: tensor([2.3012e-02, 4.6446e-02, 1.2481e-09, 1.2527e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.3012e-02, 4.6446e-03, 1.2481e-10, 1.2527e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007227339781820774, zelfde als eerst: False
DC uitgerekend: tensor([4.0219e-02, 3.8661e-02, 1.6236e-08, 7.0814e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.0219e-02, 3.8661e-03, 1.6236e-09, 7.0814e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011198275722563267, zelfde als eerst: False
DC uitgerekend: tensor([6.6689e-02, 2.4398e-02, 1.4462e-07, 6.1860e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.6689e-02, 2.4398e-03, 1.4462e-08, 6.1860e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017436929047107697, zelfde als eerst: False
DC uitgerekend: tensor([2.5401e-02, 8.2401e-02, 5.9872e-05, 6.5129e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5401e-02, 8.2401e-03, 5.9872e-06, 6.5129e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008574643172323704, zelfde als eerst: False
DC uitgerekend: tensor([3.2545e-02, 3.2369e-02, 3.2296e-05, 8.6182e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.2545e-02, 3.2369e-03, 3.2296e-06, 8.6182e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00916167814284563, zelfde als eerst: False
DC uitgerekend: tensor([4.3547e-02, 1.5124e-02, 2.7864e-05, 5.1209e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.3547e-02, 1.5124e-03, 2.7864e-06, 5.1209e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011393566615879536, zelfde als eerst: False
DC uitgerekend: tensor([6.3810e-03, 7.7404e-03, 2.0724e-07, 6.2736e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.3810e-03, 7.7404e-04, 2.0724e-08, 6.2736e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0019456151640042663, zelfde als eerst: False
DC uitgerekend: tensor([0.0614, 0.0078, 0.0105, 0.0045], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0614, 0.0008, 0.0011, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01592743955552578, zelfde als eerst: False
DC uitgerekend: tensor([0.0637, 0.0085, 0.0050, 0.0048], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0637, 0.0008, 0.0005, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01639179326593876, zelfde als eerst: False
DC uitgerekend: tensor([0.0498, 0.0129, 0.0050, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0498, 0.0013, 0.0005, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013006947003304958, zelfde als eerst: False
DC uitgerekend: tensor([0.0405, 0.0017, 0.0185, 0.0090], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0405, 0.0002, 0.0018, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0108458511531353, zelfde als eerst: False
DC uitgerekend: tensor([4.0512e-02, 1.9600e-10, 1.7418e-02, 1.1846e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.0512e-02, 1.9600e-11, 1.7418e-03, 1.1846e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010593142360448837, zelfde als eerst: False
DC uitgerekend: tensor([5.7392e-02, 2.1165e-09, 8.4462e-03, 1.2746e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.7392e-02, 2.1165e-10, 8.4462e-04, 1.2746e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014591030776500702, zelfde als eerst: False
DC uitgerekend: tensor([6.3617e-02, 1.8498e-08, 5.8750e-03, 1.2140e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.3617e-02, 1.8498e-09, 5.8750e-04, 1.2140e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016081547364592552, zelfde als eerst: False
DC uitgerekend: tensor([4.5583e-02, 1.9192e-07, 7.4087e-03, 4.1265e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.5583e-02, 1.9192e-08, 7.4087e-04, 4.1265e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011684209108352661, zelfde als eerst: False
DC uitgerekend: tensor([3.1619e-02, 2.3667e-10, 4.5675e-02, 3.9677e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.1619e-02, 2.3667e-11, 4.5675e-03, 3.9677e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01003845501691103, zelfde als eerst: False
DC uitgerekend: tensor([3.6657e-02, 1.8866e-09, 3.7754e-02, 2.8817e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.6657e-02, 1.8866e-10, 3.7754e-03, 2.8817e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010828419588506222, zelfde als eerst: False
DC uitgerekend: tensor([4.7303e-02, 1.2375e-08, 1.2643e-02, 1.3089e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.7303e-02, 1.2375e-09, 1.2643e-03, 1.3089e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012469187378883362, zelfde als eerst: False
DC uitgerekend: tensor([7.5187e-02, 1.3524e-07, 7.1107e-03, 8.5280e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.5187e-02, 1.3524e-08, 7.1107e-04, 8.5280e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019187763333320618, zelfde als eerst: False
DC uitgerekend: tensor([0.0309, 0.0060, 0.0076, 0.0142], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0309, 0.0006, 0.0008, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008421958424150944, zelfde als eerst: False
DC uitgerekend: tensor([0.0389, 0.0051, 0.0060, 0.0092], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0389, 0.0005, 0.0006, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010217840783298016, zelfde als eerst: False
DC uitgerekend: tensor([0.0292, 0.0133, 0.0067, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0292, 0.0013, 0.0007, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00793413259088993, zelfde als eerst: False
DC uitgerekend: tensor([0.0186, 0.0048, 0.0158, 0.0050], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0186, 0.0005, 0.0016, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0053021786734461784, zelfde als eerst: False
DC uitgerekend: tensor([0.0403, 0.0233, 0.0484, 0.0261], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0403, 0.0023, 0.0048, 0.0026], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01252012699842453, zelfde als eerst: False
DC uitgerekend: tensor([0.0324, 0.0080, 0.0382, 0.0151], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0324, 0.0008, 0.0038, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00964482594281435, zelfde als eerst: False
DC uitgerekend: tensor([0.0314, 0.0070, 0.0203, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0314, 0.0007, 0.0020, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008708157576620579, zelfde als eerst: False
DC uitgerekend: tensor([0.0307, 0.0037, 0.0153, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0307, 0.0004, 0.0015, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008275309577584267, zelfde als eerst: False
DC uitgerekend: tensor([0.0391, 0.0104, 0.0530, 0.0519], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0391, 0.0010, 0.0053, 0.0052], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012663710862398148, zelfde als eerst: False
DC uitgerekend: tensor([0.0530, 0.0063, 0.0323, 0.0358], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0530, 0.0006, 0.0032, 0.0036], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01511971466243267, zelfde als eerst: False
DC uitgerekend: tensor([0.0711, 0.0035, 0.0171, 0.0136], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0711, 0.0003, 0.0017, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018627218902111053, zelfde als eerst: False
DC uitgerekend: tensor([0.0937, 0.0017, 0.0057, 0.0059], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0937, 0.0002, 0.0006, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.023767659440636635, zelfde als eerst: False
DC uitgerekend: tensor([0.0168, 0.0807, 0.0066, 0.0033], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0168, 0.0081, 0.0007, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0064653754234313965, zelfde als eerst: False
DC uitgerekend: tensor([0.0143, 0.0530, 0.0021, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0143, 0.0053, 0.0002, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005048878025263548, zelfde als eerst: False
DC uitgerekend: tensor([0.0110, 0.0373, 0.0007, 0.0029], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0979e-02, 3.7312e-03, 6.7880e-05, 2.9231e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003767521120607853, zelfde als eerst: False
DC uitgerekend: tensor([0.0067, 0.0212, 0.0012, 0.0015], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0067, 0.0021, 0.0001, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0022632917389273643, zelfde als eerst: False
DC uitgerekend: tensor([0.0019, 0.1388, 0.0098, 0.0039], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0019, 0.0139, 0.0010, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004294232465326786, zelfde als eerst: False
DC uitgerekend: tensor([0.0014, 0.0979, 0.0066, 0.0038], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0014, 0.0098, 0.0007, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00306246941909194, zelfde als eerst: False
DC uitgerekend: tensor([0.0004, 0.0313, 0.0009, 0.0013], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.2587e-04, 3.1294e-03, 9.4783e-05, 1.3396e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0009459909633733332, zelfde als eerst: False
DC uitgerekend: tensor([6.4766e-05, 9.7092e-03, 2.9240e-04, 1.9483e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.4766e-05, 9.7092e-04, 2.9240e-05, 1.9483e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00031493965070694685, zelfde als eerst: False
DC uitgerekend: tensor([0.0052, 0.0213, 0.0070, 0.0112], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0052, 0.0021, 0.0007, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.002276292536407709, zelfde als eerst: False
DC uitgerekend: tensor([0.0085, 0.0063, 0.0050, 0.0064], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0085, 0.0006, 0.0005, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0025790815707296133, zelfde als eerst: False
DC uitgerekend: tensor([0.0048, 0.0064, 0.0012, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0048, 0.0006, 0.0001, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0014725716318935156, zelfde als eerst: False
DC uitgerekend: tensor([0.0002, 0.0011, 0.0008, 0.0017], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.2679e-04, 1.0974e-04, 7.5647e-05, 1.7404e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00014655377890449017, zelfde als eerst: False
DC uitgerekend: tensor([0.0727, 0.0718, 0.0278, 0.0118], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0727, 0.0072, 0.0028, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02096785604953766, zelfde als eerst: False
DC uitgerekend: tensor([0.0922, 0.0277, 0.0154, 0.0142], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0922, 0.0028, 0.0015, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02447172999382019, zelfde als eerst: False
DC uitgerekend: tensor([0.1261, 0.0168, 0.0082, 0.0058], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1261, 0.0017, 0.0008, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.032307785004377365, zelfde als eerst: False
DC uitgerekend: tensor([0.1500, 0.0063, 0.0053, 0.0049], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1500, 0.0006, 0.0005, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.037905316799879074, zelfde als eerst: False
DC uitgerekend: tensor([0.0350, 0.1065, 0.0356, 0.0115], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0350, 0.0107, 0.0036, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012586144730448723, zelfde als eerst: False
DC uitgerekend: tensor([0.0300, 0.0236, 0.0316, 0.0144], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0300, 0.0024, 0.0032, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00925123319029808, zelfde als eerst: False
DC uitgerekend: tensor([0.0266, 0.0192, 0.0141, 0.0070], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0266, 0.0019, 0.0014, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007657742593437433, zelfde als eerst: False
DC uitgerekend: tensor([0.0484, 0.0110, 0.0046, 0.0035], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0484, 0.0011, 0.0005, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01257688831537962, zelfde als eerst: False
DC uitgerekend: tensor([0.0401, 0.0020, 0.0174, 0.0172], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0401, 0.0002, 0.0017, 0.0017], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010933179408311844, zelfde als eerst: False
DC uitgerekend: tensor([0.0425, 0.0010, 0.0150, 0.0177], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.2513e-02, 9.9526e-05, 1.5016e-03, 1.7685e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011470560915768147, zelfde als eerst: False
DC uitgerekend: tensor([0.0463, 0.0004, 0.0093, 0.0108], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.6348e-02, 4.4513e-05, 9.3143e-04, 1.0753e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012099766172468662, zelfde als eerst: False
DC uitgerekend: tensor([0.0701, 0.0004, 0.0058, 0.0127], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.0115e-02, 3.6406e-05, 5.8326e-04, 1.2738e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018002165481448174, zelfde als eerst: False
DC uitgerekend: tensor([0.0315, 0.0205, 0.0319, 0.0139], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0315, 0.0021, 0.0032, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009539083577692509, zelfde als eerst: False
DC uitgerekend: tensor([0.0371, 0.0142, 0.0133, 0.0134], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0371, 0.0014, 0.0013, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010288054123520851, zelfde als eerst: False
DC uitgerekend: tensor([0.0536, 0.0159, 0.0119, 0.0075], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0536, 0.0016, 0.0012, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014279559254646301, zelfde als eerst: False
DC uitgerekend: tensor([0.0352, 0.0057, 0.0121, 0.0026], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0352, 0.0006, 0.0012, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009321533143520355, zelfde als eerst: False
DC uitgerekend: tensor([3.7712e-02, 1.2665e-01, 2.5406e-10, 1.0318e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.7712e-02, 1.2665e-02, 2.5406e-11, 1.0318e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012852152809500694, zelfde als eerst: False
DC uitgerekend: tensor([2.8265e-02, 1.3703e-01, 1.7655e-09, 1.2754e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.8265e-02, 1.3703e-02, 1.7655e-10, 1.2754e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01081074122339487, zelfde als eerst: False
DC uitgerekend: tensor([3.2350e-02, 8.2587e-02, 3.4627e-08, 1.0319e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.2350e-02, 8.2587e-03, 3.4627e-09, 1.0319e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010410157032310963, zelfde als eerst: False
DC uitgerekend: tensor([3.0551e-02, 1.6689e-02, 3.4654e-07, 4.2421e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.0551e-02, 1.6689e-03, 3.4654e-08, 4.2421e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008160969242453575, zelfde als eerst: False
DC uitgerekend: tensor([0.0349, 0.0446, 0.0526, 0.0065], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0349, 0.0045, 0.0053, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011330482549965382, zelfde als eerst: False
DC uitgerekend: tensor([0.0265, 0.0448, 0.0550, 0.0065], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0265, 0.0045, 0.0055, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009285484440624714, zelfde als eerst: False
DC uitgerekend: tensor([0.0181, 0.0381, 0.0239, 0.0032], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0181, 0.0038, 0.0024, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0061479355208575726, zelfde als eerst: False
DC uitgerekend: tensor([0.0088, 0.0314, 0.0101, 0.0039], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0088, 0.0031, 0.0010, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003344973549246788, zelfde als eerst: False
DC uitgerekend: tensor([0.0172, 0.1105, 0.0002, 0.0109], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.7246e-02, 1.1050e-02, 1.6750e-05, 1.0865e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007349712308496237, zelfde als eerst: False
DC uitgerekend: tensor([0.0150, 0.1617, 0.0002, 0.0127], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.4959e-02, 1.6169e-02, 1.7164e-05, 1.2655e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00810281839221716, zelfde als eerst: False
DC uitgerekend: tensor([8.3982e-03, 1.1269e-01, 5.5617e-05, 8.9511e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.3982e-03, 1.1269e-02, 5.5617e-06, 8.9511e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005142032168805599, zelfde als eerst: False
DC uitgerekend: tensor([5.3095e-04, 5.1065e-02, 3.8815e-07, 2.8851e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.3095e-04, 5.1065e-03, 3.8815e-08, 2.8851e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0014815101167187095, zelfde als eerst: False
DC uitgerekend: tensor([4.6859e-02, 1.4799e-10, 4.0809e-02, 2.4735e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.6859e-02, 1.4799e-11, 4.0809e-03, 2.4735e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013353286311030388, zelfde als eerst: False
DC uitgerekend: tensor([5.0793e-02, 6.2673e-10, 3.3022e-02, 2.7950e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.0793e-02, 6.2673e-11, 3.3022e-03, 2.7950e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014222491532564163, zelfde als eerst: False
DC uitgerekend: tensor([7.5314e-02, 3.2261e-09, 1.5222e-02, 1.8958e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.5314e-02, 3.2261e-10, 1.5222e-03, 1.8958e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019683025777339935, zelfde als eerst: False
DC uitgerekend: tensor([9.7945e-02, 4.3955e-08, 6.6569e-03, 1.1410e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.7945e-02, 4.3955e-09, 6.6569e-04, 1.1410e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.024938035756349564, zelfde als eerst: False
DC uitgerekend: tensor([0.0350, 0.0104, 0.0163, 0.0053], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0350, 0.0010, 0.0016, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009539603255689144, zelfde als eerst: False
DC uitgerekend: tensor([0.0354, 0.0115, 0.0118, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0354, 0.0011, 0.0012, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00955612026154995, zelfde als eerst: False
DC uitgerekend: tensor([0.0322, 0.0147, 0.0097, 0.0047], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0322, 0.0015, 0.0010, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008781473152339458, zelfde als eerst: False
DC uitgerekend: tensor([0.0222, 0.0008, 0.0112, 0.0136], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.2200e-02, 8.3613e-05, 1.1180e-03, 1.3572e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00618981197476387, zelfde als eerst: False
DC uitgerekend: tensor([2.3597e-02, 2.3841e-10, 2.7263e-02, 1.1551e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.3597e-02, 2.3841e-11, 2.7263e-03, 1.1551e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006869543809443712, zelfde als eerst: False
DC uitgerekend: tensor([2.3369e-02, 1.1214e-09, 2.9370e-02, 1.2069e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.3369e-02, 1.1214e-10, 2.9370e-03, 1.2069e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006878298241645098, zelfde als eerst: False
DC uitgerekend: tensor([2.7265e-02, 7.6764e-09, 1.0972e-02, 6.2649e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.7265e-02, 7.6764e-10, 1.0972e-03, 6.2649e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007247306406497955, zelfde als eerst: False
DC uitgerekend: tensor([1.5996e-02, 9.5048e-08, 6.9856e-03, 3.8393e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.5996e-02, 9.5048e-09, 6.9856e-04, 3.8393e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004269650671631098, zelfde als eerst: False
DC uitgerekend: tensor([2.4793e-02, 2.1811e-10, 1.7014e-02, 9.1882e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.4793e-02, 2.1811e-11, 1.7014e-03, 9.1882e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006853376980870962, zelfde als eerst: False
DC uitgerekend: tensor([3.3543e-02, 8.1679e-10, 1.3426e-02, 7.4500e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.3543e-02, 8.1679e-11, 1.3426e-03, 7.4500e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008907701820135117, zelfde als eerst: False
DC uitgerekend: tensor([3.7670e-02, 6.5381e-09, 7.8763e-03, 1.0048e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.7670e-02, 6.5381e-10, 7.8763e-04, 1.0048e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00986549723893404, zelfde als eerst: False
DC uitgerekend: tensor([4.7183e-02, 1.1967e-07, 3.3189e-03, 9.8080e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.7183e-02, 1.1967e-08, 3.3189e-04, 9.8080e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012123974040150642, zelfde als eerst: False
DC uitgerekend: tensor([0.0104, 0.0417, 0.0002, 0.0037], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0395e-02, 4.1712e-03, 2.4496e-05, 3.6918e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0037400478031486273, zelfde als eerst: False
DC uitgerekend: tensor([0.0107, 0.0106, 0.0003, 0.0019], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0709e-02, 1.0563e-03, 3.4035e-05, 1.9217e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0029979092068970203, zelfde als eerst: False
DC uitgerekend: tensor([0.0162, 0.0107, 0.0007, 0.0018], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.6191e-02, 1.0744e-03, 6.5962e-05, 1.8268e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004378420766443014, zelfde als eerst: False
DC uitgerekend: tensor([3.1136e-02, 4.4138e-03, 3.6876e-07, 1.5467e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.1136e-02, 4.4138e-04, 3.6876e-08, 1.5467e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007932945154607296, zelfde als eerst: False
DC uitgerekend: tensor([4.0245e-02, 2.1189e-10, 3.3793e-03, 1.6597e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.0245e-02, 2.1189e-11, 3.3793e-04, 1.6597e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010560589842498302, zelfde als eerst: False
DC uitgerekend: tensor([4.3037e-02, 7.4380e-10, 1.2542e-03, 3.0032e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.3037e-02, 7.4380e-11, 1.2542e-04, 3.0032e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011541374027729034, zelfde als eerst: False
DC uitgerekend: tensor([5.8068e-02, 5.8277e-09, 2.5400e-04, 1.0034e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.8068e-02, 5.8277e-10, 2.5400e-05, 1.0034e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014774300158023834, zelfde als eerst: False
DC uitgerekend: tensor([7.4906e-02, 9.6223e-08, 1.2011e-05, 5.0960e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.4906e-02, 9.6223e-09, 1.2011e-06, 5.0960e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018854308873414993, zelfde als eerst: False
DC uitgerekend: tensor([0.0655, 0.0177, 0.0332, 0.0270], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0655, 0.0018, 0.0033, 0.0027], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018313515931367874, zelfde als eerst: False
DC uitgerekend: tensor([0.0607, 0.0167, 0.0719, 0.0574], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0607, 0.0017, 0.0072, 0.0057], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018827129155397415, zelfde als eerst: False
DC uitgerekend: tensor([0.0620, 0.0124, 0.0250, 0.0250], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0620, 0.0012, 0.0025, 0.0025], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017070172354578972, zelfde als eerst: False
DC uitgerekend: tensor([0.1035, 0.0050, 0.0079, 0.0107], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1035, 0.0005, 0.0008, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02646247111260891, zelfde als eerst: False
DC uitgerekend: tensor([0.0494, 0.0365, 0.0051, 0.0059], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0494, 0.0036, 0.0005, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013546253554522991, zelfde als eerst: False
DC uitgerekend: tensor([0.0533, 0.0743, 0.0053, 0.0082], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0533, 0.0074, 0.0005, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015508188866078854, zelfde als eerst: False
DC uitgerekend: tensor([0.0558, 0.0502, 0.0012, 0.0075], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0558, 0.0050, 0.0001, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015418866649270058, zelfde als eerst: False
DC uitgerekend: tensor([0.0255, 0.0149, 0.0002, 0.0019], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5457e-02, 1.4887e-03, 2.3656e-05, 1.8692e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006789087783545256, zelfde als eerst: False
DC uitgerekend: tensor([0.0184, 0.0579, 0.0134, 0.0036], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0184, 0.0058, 0.0013, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0064734118059277534, zelfde als eerst: False
DC uitgerekend: tensor([0.0203, 0.1009, 0.0059, 0.0032], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0203, 0.0101, 0.0006, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007830864749848843, zelfde als eerst: False
DC uitgerekend: tensor([0.0250, 0.0857, 0.0032, 0.0011], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0250, 0.0086, 0.0003, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008502236567437649, zelfde als eerst: False
DC uitgerekend: tensor([0.0221, 0.0410, 0.0024, 0.0004], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.2091e-02, 4.0967e-03, 2.4026e-04, 4.3053e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006617827340960503, zelfde als eerst: False
DC uitgerekend: tensor([0.0393, 0.0064, 0.0094, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0393, 0.0006, 0.0009, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010361096821725368, zelfde als eerst: False
DC uitgerekend: tensor([0.0343, 0.0080, 0.0058, 0.0057], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0343, 0.0008, 0.0006, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009051892906427383, zelfde als eerst: False
DC uitgerekend: tensor([0.0431, 0.0062, 0.0046, 0.0039], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0431, 0.0006, 0.0005, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011151181533932686, zelfde als eerst: False
DC uitgerekend: tensor([0.0242, 0.0025, 0.0064, 0.0024], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0242, 0.0003, 0.0006, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006319553125649691, zelfde als eerst: False
DC uitgerekend: tensor([6.6283e-02, 2.3473e-10, 3.6982e-02, 2.8234e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.6283e-02, 2.3473e-11, 3.6982e-03, 2.8234e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018201138824224472, zelfde als eerst: False
DC uitgerekend: tensor([6.3103e-02, 5.3350e-10, 5.4996e-02, 6.6294e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.3103e-02, 5.3350e-11, 5.4996e-03, 6.6294e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01880790665745735, zelfde als eerst: False
DC uitgerekend: tensor([7.8757e-02, 2.4034e-09, 2.7743e-02, 3.1950e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.8757e-02, 2.4034e-10, 2.7743e-03, 3.1950e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.021181629970669746, zelfde als eerst: False
DC uitgerekend: tensor([1.0527e-01, 3.8235e-08, 1.8902e-02, 1.7925e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0527e-01, 3.8235e-09, 1.8902e-03, 1.7925e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.027238421142101288, zelfde als eerst: False
DC uitgerekend: tensor([0.0377, 0.0062, 0.0209, 0.0191], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0377, 0.0006, 0.0021, 0.0019], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010592974722385406, zelfde als eerst: False
DC uitgerekend: tensor([0.0382, 0.0068, 0.0273, 0.0351], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0382, 0.0007, 0.0027, 0.0035], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011274712160229683, zelfde als eerst: False
DC uitgerekend: tensor([0.0337, 0.0039, 0.0166, 0.0113], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0337, 0.0004, 0.0017, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009230254217982292, zelfde als eerst: False
DC uitgerekend: tensor([0.0500, 0.0003, 0.0091, 0.0051], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.9962e-02, 3.3097e-05, 9.1303e-04, 5.0810e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012854061089456081, zelfde als eerst: False
DC uitgerekend: tensor([0.0608, 0.0173, 0.0150, 0.0137], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0608, 0.0017, 0.0015, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01635800302028656, zelfde als eerst: False
DC uitgerekend: tensor([0.0618, 0.0171, 0.0138, 0.0241], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0618, 0.0017, 0.0014, 0.0024], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016832618042826653, zelfde als eerst: False
DC uitgerekend: tensor([0.1052, 0.0226, 0.0078, 0.0125], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1052, 0.0023, 0.0008, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02736485004425049, zelfde als eerst: False
DC uitgerekend: tensor([0.1777, 0.0065, 0.0090, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1777, 0.0006, 0.0009, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.044950440526008606, zelfde als eerst: False
DC uitgerekend: tensor([0.0534, 0.0200, 0.0218, 0.0042], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0534, 0.0020, 0.0022, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014508171007037163, zelfde als eerst: False
DC uitgerekend: tensor([0.0504, 0.0210, 0.0193, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0504, 0.0021, 0.0019, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013683851808309555, zelfde als eerst: False
DC uitgerekend: tensor([0.0555, 0.0343, 0.0095, 0.0040], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0555, 0.0034, 0.0009, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015070824883878231, zelfde als eerst: False
DC uitgerekend: tensor([0.0544, 0.0057, 0.0049, 0.0042], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0544, 0.0006, 0.0005, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013979860581457615, zelfde als eerst: False
DC uitgerekend: tensor([7.9496e-02, 3.6752e-10, 1.6157e-02, 1.4298e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.9496e-02, 3.6752e-11, 1.6157e-03, 1.4298e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.020635420456528664, zelfde als eerst: False
DC uitgerekend: tensor([7.3929e-02, 1.3012e-09, 1.3717e-02, 3.5170e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.3929e-02, 1.3012e-10, 1.3717e-03, 3.5170e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019704433158040047, zelfde als eerst: False
DC uitgerekend: tensor([9.5412e-02, 5.6602e-09, 4.8106e-03, 1.8174e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.5412e-02, 5.6602e-10, 4.8106e-04, 1.8174e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02442769519984722, zelfde als eerst: False
DC uitgerekend: tensor([1.1772e-01, 1.0056e-07, 1.1341e-03, 4.2999e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1772e-01, 1.0056e-08, 1.1341e-04, 4.2999e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.029565056785941124, zelfde als eerst: False
DC uitgerekend: tensor([0.0519, 0.0162, 0.0091, 0.0037], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0519, 0.0016, 0.0009, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013703848235309124, zelfde als eerst: False
DC uitgerekend: tensor([0.0435, 0.0116, 0.0033, 0.0025], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0435, 0.0012, 0.0003, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011305681429803371, zelfde als eerst: False
DC uitgerekend: tensor([0.0601, 0.0260, 0.0017, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0601, 0.0026, 0.0002, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015773160383105278, zelfde als eerst: False
DC uitgerekend: tensor([0.0450, 0.0152, 0.0022, 0.0013], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0450, 0.0015, 0.0002, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011715428903698921, zelfde als eerst: False
DC uitgerekend: tensor([0.0187, 0.0362, 0.0111, 0.0034], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0187, 0.0036, 0.0011, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005933795589953661, zelfde als eerst: False
DC uitgerekend: tensor([0.0202, 0.0716, 0.0146, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0202, 0.0072, 0.0015, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00733682606369257, zelfde als eerst: False
DC uitgerekend: tensor([0.0242, 0.0607, 0.0169, 0.0030], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0242, 0.0061, 0.0017, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008054022677242756, zelfde als eerst: False
DC uitgerekend: tensor([0.0187, 0.0341, 0.0063, 0.0005], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.8689e-02, 3.4098e-03, 6.2885e-04, 5.2181e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005694914609193802, zelfde als eerst: False
DC uitgerekend: tensor([0.0355, 0.0434, 0.0165, 0.0070], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0355, 0.0043, 0.0016, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010539027862250805, zelfde als eerst: False
DC uitgerekend: tensor([0.0324, 0.0447, 0.0352, 0.0135], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0324, 0.0045, 0.0035, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010445807129144669, zelfde als eerst: False
DC uitgerekend: tensor([0.0542, 0.1074, 0.0126, 0.0092], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0542, 0.0107, 0.0013, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01678587682545185, zelfde als eerst: False
DC uitgerekend: tensor([0.0478, 0.0720, 0.0014, 0.0048], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0478, 0.0072, 0.0001, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013908129185438156, zelfde als eerst: False
DC uitgerekend: tensor([1.9314e-02, 1.9631e-02, 5.2536e-10, 3.1250e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.9314e-02, 1.9631e-03, 5.2536e-11, 3.1250e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005397382192313671, zelfde als eerst: False
DC uitgerekend: tensor([1.7279e-02, 8.2631e-03, 2.2536e-09, 2.3950e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.7279e-02, 8.2631e-04, 2.2536e-10, 2.3950e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004586138296872377, zelfde als eerst: False
DC uitgerekend: tensor([1.9347e-02, 2.6552e-02, 3.4891e-08, 2.1600e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.9347e-02, 2.6552e-03, 3.4891e-09, 2.1600e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00555457454174757, zelfde als eerst: False
DC uitgerekend: tensor([2.8478e-02, 2.9715e-02, 3.5915e-07, 2.4941e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.8478e-02, 2.9715e-03, 3.5915e-08, 2.4941e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007924809120595455, zelfde als eerst: False
DC uitgerekend: tensor([4.5338e-02, 2.6637e-10, 1.5704e-02, 8.4379e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.5338e-02, 2.6637e-11, 1.5704e-03, 8.4379e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011937984265387058, zelfde als eerst: False
DC uitgerekend: tensor([4.5769e-02, 8.6964e-10, 1.0688e-02, 6.7082e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.5769e-02, 8.6964e-11, 1.0688e-03, 6.7082e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011877119541168213, zelfde als eerst: False
DC uitgerekend: tensor([5.5988e-02, 5.2975e-09, 7.6983e-03, 6.2577e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.5988e-02, 5.2975e-10, 7.6983e-04, 6.2577e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014345827512443066, zelfde als eerst: False
DC uitgerekend: tensor([6.6006e-02, 9.3734e-08, 5.7526e-03, 5.5083e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.6006e-02, 9.3734e-09, 5.7526e-04, 5.5083e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016783110797405243, zelfde als eerst: False
DC uitgerekend: tensor([2.9164e-11, 4.8850e-02, 2.4550e-02, 4.6915e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.9164e-11, 4.8850e-03, 2.4550e-03, 4.6915e-11], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.001835002563893795, zelfde als eerst: False
DC uitgerekend: tensor([9.8859e-11, 9.5830e-02, 4.8536e-02, 6.3812e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.8859e-11, 9.5830e-03, 4.8536e-03, 6.3812e-11], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003609150182455778, zelfde als eerst: False
DC uitgerekend: tensor([8.6058e-10, 1.9584e-01, 2.3039e-02, 1.1048e-08], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.6058e-10, 1.9584e-02, 2.3039e-03, 1.1048e-09], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005471982527524233, zelfde als eerst: False
DC uitgerekend: tensor([8.7634e-09, 9.8647e-02, 8.6568e-03, 2.4184e-07], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.7634e-09, 9.8647e-03, 8.6568e-04, 2.4184e-08], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0026825997047126293, zelfde als eerst: False
DC uitgerekend: tensor([0.0454, 0.0123, 0.0150, 0.0068], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0454, 0.0012, 0.0015, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012201214209198952, zelfde als eerst: False
DC uitgerekend: tensor([0.0436, 0.0070, 0.0126, 0.0110], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0436, 0.0007, 0.0013, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011663914658129215, zelfde als eerst: False
DC uitgerekend: tensor([0.0515, 0.0188, 0.0097, 0.0080], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0515, 0.0019, 0.0010, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013796770013868809, zelfde als eerst: False
DC uitgerekend: tensor([0.0451, 0.0169, 0.0101, 0.0078], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0451, 0.0017, 0.0010, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012143999338150024, zelfde als eerst: False
DC uitgerekend: tensor([0.0222, 0.0390, 0.0269, 0.0110], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0222, 0.0039, 0.0027, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007484623230993748, zelfde als eerst: False
DC uitgerekend: tensor([0.0206, 0.0295, 0.0634, 0.0178], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0206, 0.0029, 0.0063, 0.0018], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007911968976259232, zelfde als eerst: False
DC uitgerekend: tensor([0.0104, 0.0446, 0.0246, 0.0029], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0104, 0.0045, 0.0025, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004400680307298899, zelfde als eerst: False
DC uitgerekend: tensor([0.0105, 0.0277, 0.0161, 0.0011], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0105, 0.0028, 0.0016, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0037456071004271507, zelfde als eerst: False
DC uitgerekend: tensor([0.0079, 0.0368, 0.0179, 0.0031], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0079, 0.0037, 0.0018, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0034202358219772577, zelfde als eerst: False
DC uitgerekend: tensor([0.0066, 0.0336, 0.0483, 0.0026], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0066, 0.0034, 0.0048, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0037568132393062115, zelfde als eerst: False
DC uitgerekend: tensor([0.0079, 0.0615, 0.0235, 0.0012], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0079, 0.0062, 0.0023, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004132898058742285, zelfde als eerst: False
DC uitgerekend: tensor([0.0104, 0.0535, 0.0050, 0.0018], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0104, 0.0053, 0.0005, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004118334036320448, zelfde als eerst: False
DC uitgerekend: tensor([0.0677, 0.0038, 0.0346, 0.0198], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0677, 0.0004, 0.0035, 0.0020], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018373331055045128, zelfde als eerst: False
DC uitgerekend: tensor([0.0608, 0.0016, 0.0678, 0.0409], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0608, 0.0002, 0.0068, 0.0041], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017949024215340614, zelfde als eerst: False
DC uitgerekend: tensor([3.8305e-02, 6.1882e-05, 2.7246e-02, 6.3584e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.8305e-02, 6.1882e-06, 2.7246e-03, 6.3584e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010417792946100235, zelfde als eerst: False
DC uitgerekend: tensor([6.6201e-02, 9.9625e-07, 2.0179e-02, 1.8510e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.6201e-02, 9.9625e-08, 2.0179e-03, 1.8510e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017100924625992775, zelfde als eerst: False
DC uitgerekend: tensor([0.0103, 0.0463, 0.0088, 0.0050], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0103, 0.0046, 0.0009, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004070125985890627, zelfde als eerst: False
DC uitgerekend: tensor([0.0116, 0.0730, 0.0235, 0.0077], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0116, 0.0073, 0.0024, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005517239216715097, zelfde als eerst: False
DC uitgerekend: tensor([0.0133, 0.1497, 0.0051, 0.0069], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0133, 0.0150, 0.0005, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007370532490313053, zelfde als eerst: False
DC uitgerekend: tensor([0.0114, 0.0860, 0.0003, 0.0017], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1370e-02, 8.5985e-03, 2.5719e-05, 1.7101e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005041228607296944, zelfde als eerst: False
DC uitgerekend: tensor([1.0893e-02, 5.9290e-02, 4.4473e-10, 8.2958e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0893e-02, 5.9290e-03, 4.4473e-11, 8.2958e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004412870388478041, zelfde als eerst: False
DC uitgerekend: tensor([9.0719e-03, 9.6108e-02, 1.5176e-09, 1.0316e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.0719e-03, 9.6108e-03, 1.5176e-10, 1.0316e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004928570240736008, zelfde als eerst: False
DC uitgerekend: tensor([1.3147e-02, 1.9380e-01, 2.0300e-08, 4.6567e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.3147e-02, 1.9380e-02, 2.0300e-09, 4.6567e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008248144760727882, zelfde als eerst: False
DC uitgerekend: tensor([2.0099e-02, 1.0815e-01, 2.2965e-07, 2.1325e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.0099e-02, 1.0815e-02, 2.2965e-08, 2.1325e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0077818697318434715, zelfde als eerst: False
DC uitgerekend: tensor([0.0759, 0.0101, 0.0137, 0.0077], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0759, 0.0010, 0.0014, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01975460909307003, zelfde als eerst: False
DC uitgerekend: tensor([0.0687, 0.0140, 0.0052, 0.0092], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0687, 0.0014, 0.0005, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01787310466170311, zelfde als eerst: False
DC uitgerekend: tensor([0.0773, 0.0083, 0.0021, 0.0071], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0773, 0.0008, 0.0002, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019772352650761604, zelfde als eerst: False
DC uitgerekend: tensor([0.1080, 0.0006, 0.0030, 0.0015], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0802e-01, 6.3664e-05, 3.0116e-04, 1.4541e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.027132635936141014, zelfde als eerst: False
DC uitgerekend: tensor([9.6518e-03, 4.8991e-02, 2.7957e-10, 3.7947e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.6518e-03, 4.8991e-03, 2.7957e-11, 3.7947e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003732577431946993, zelfde als eerst: False
DC uitgerekend: tensor([8.6328e-03, 7.8691e-02, 9.9729e-10, 4.0834e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.6328e-03, 7.8691e-03, 9.9729e-11, 4.0834e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004227558150887489, zelfde als eerst: False
DC uitgerekend: tensor([7.5413e-03, 9.8031e-02, 1.7149e-08, 2.8445e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.5413e-03, 9.8031e-03, 1.7149e-09, 2.8445e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004407214932143688, zelfde als eerst: False
DC uitgerekend: tensor([1.5893e-02, 4.3395e-02, 2.8023e-07, 2.9818e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.5893e-02, 4.3395e-03, 2.8023e-08, 2.9818e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00513263326138258, zelfde als eerst: False
DC uitgerekend: tensor([0.0641, 0.0025, 0.0193, 0.0099], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0641, 0.0002, 0.0019, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016818532720208168, zelfde als eerst: False
DC uitgerekend: tensor([0.0624, 0.0013, 0.0252, 0.0102], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0624, 0.0001, 0.0025, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01651606522500515, zelfde als eerst: False
DC uitgerekend: tensor([0.0937, 0.0007, 0.0344, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.3664e-02, 7.1147e-05, 3.4362e-03, 4.1403e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02439631149172783, zelfde als eerst: False
DC uitgerekend: tensor([9.4065e-02, 7.1592e-05, 1.9294e-02, 2.1641e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.4065e-02, 7.1592e-06, 1.9294e-03, 2.1641e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.024054408073425293, zelfde als eerst: False
DC uitgerekend: tensor([0.0356, 0.0193, 0.0258, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.5569e-02, 1.9255e-03, 2.5805e-03, 9.3095e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01004195585846901, zelfde als eerst: False
DC uitgerekend: tensor([0.0357, 0.0314, 0.0401, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.5687e-02, 3.1391e-03, 4.0135e-03, 8.6134e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0107314707711339, zelfde als eerst: False
DC uitgerekend: tensor([0.0426, 0.1226, 0.0240, 0.0011], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0426, 0.0123, 0.0024, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014343355782330036, zelfde als eerst: False
DC uitgerekend: tensor([0.0322, 0.1349, 0.0155, 0.0017], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0322, 0.0135, 0.0015, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011856989935040474, zelfde als eerst: False
DC uitgerekend: tensor([0.0317, 0.0027, 0.0098, 0.0020], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0317, 0.0003, 0.0010, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008291780948638916, zelfde als eerst: False
DC uitgerekend: tensor([0.0326, 0.0017, 0.0099, 0.0016], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0326, 0.0002, 0.0010, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0084788016974926, zelfde als eerst: False
DC uitgerekend: tensor([0.0380, 0.0011, 0.0094, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0380, 0.0001, 0.0009, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009844225831329823, zelfde als eerst: False
DC uitgerekend: tensor([6.3295e-02, 5.7806e-05, 2.4243e-02, 3.4971e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.3295e-02, 5.7806e-06, 2.4243e-03, 3.4971e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01651872508227825, zelfde als eerst: False
DC uitgerekend: tensor([0.0565, 0.0644, 0.0296, 0.0109], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0565, 0.0064, 0.0030, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01674243062734604, zelfde als eerst: False
DC uitgerekend: tensor([0.0520, 0.1793, 0.0579, 0.0164], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0520, 0.0179, 0.0058, 0.0016], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019346844404935837, zelfde als eerst: False
DC uitgerekend: tensor([0.0726, 0.2421, 0.0364, 0.0118], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0726, 0.0242, 0.0036, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.025396451354026794, zelfde als eerst: False
DC uitgerekend: tensor([0.0813, 0.2120, 0.0205, 0.0056], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0813, 0.0212, 0.0021, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.026281531900167465, zelfde als eerst: False
DC uitgerekend: tensor([7.4322e-02, 2.6109e-10, 2.5964e-02, 2.9352e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.4322e-02, 2.6109e-11, 2.5964e-03, 2.9352e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019963432103395462, zelfde als eerst: False
DC uitgerekend: tensor([7.4157e-02, 5.3466e-10, 3.7199e-02, 7.1042e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.4157e-02, 5.3466e-11, 3.7199e-03, 7.1042e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02124520018696785, zelfde als eerst: False
DC uitgerekend: tensor([8.4867e-02, 2.2408e-09, 3.3192e-02, 3.7525e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.4867e-02, 2.2408e-10, 3.3192e-03, 3.7525e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.022984622046351433, zelfde als eerst: False
DC uitgerekend: tensor([1.0390e-01, 3.4552e-08, 2.9185e-02, 1.9565e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0390e-01, 3.4552e-09, 2.9185e-03, 1.9565e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.027193479239940643, zelfde als eerst: False
DC uitgerekend: tensor([3.6883e-02, 7.3633e-02, 8.8606e-05, 5.3957e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.6883e-02, 7.3633e-03, 8.8606e-06, 5.3957e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011198740452528, zelfde als eerst: False
DC uitgerekend: tensor([3.1712e-02, 1.9445e-01, 3.4434e-07, 6.4186e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.1712e-02, 1.9445e-02, 3.4434e-08, 6.4186e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012949919328093529, zelfde als eerst: False
DC uitgerekend: tensor([2.6927e-02, 3.0954e-01, 4.3730e-07, 6.1702e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.6927e-02, 3.0954e-02, 4.3730e-08, 6.1702e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01462466549128294, zelfde als eerst: False
DC uitgerekend: tensor([3.4924e-02, 2.6925e-01, 2.4978e-07, 3.4058e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.4924e-02, 2.6925e-02, 2.4978e-08, 3.4058e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01554715633392334, zelfde als eerst: False
DC uitgerekend: tensor([0.0710, 0.0527, 0.0303, 0.0091], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0710, 0.0053, 0.0030, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02004653587937355, zelfde als eerst: False
DC uitgerekend: tensor([0.0715, 0.0411, 0.0096, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0715, 0.0041, 0.0010, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01930607482790947, zelfde als eerst: False
DC uitgerekend: tensor([0.0698, 0.0499, 0.0053, 0.0118], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0698, 0.0050, 0.0005, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01911422237753868, zelfde als eerst: False
DC uitgerekend: tensor([0.0725, 0.0241, 0.0024, 0.0065], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0725, 0.0024, 0.0002, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018944701179862022, zelfde als eerst: False
DC uitgerekend: tensor([0.0687, 0.0627, 0.0201, 0.0199], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0687, 0.0063, 0.0020, 0.0020], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019736096262931824, zelfde als eerst: False
DC uitgerekend: tensor([0.0700, 0.1356, 0.0361, 0.0576], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0700, 0.0136, 0.0036, 0.0058], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02322171814739704, zelfde als eerst: False
DC uitgerekend: tensor([0.0779, 0.1522, 0.0165, 0.0594], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0779, 0.0152, 0.0016, 0.0059], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02518765814602375, zelfde als eerst: False
DC uitgerekend: tensor([0.0814, 0.1082, 0.0081, 0.0361], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0814, 0.0108, 0.0008, 0.0036], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.024170979857444763, zelfde als eerst: False
DC uitgerekend: tensor([0.0626, 0.0053, 0.0115, 0.0117], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0626, 0.0005, 0.0012, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016370782628655434, zelfde als eerst: False
DC uitgerekend: tensor([0.0638, 0.0037, 0.0148, 0.0090], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0638, 0.0004, 0.0015, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016634823754429817, zelfde als eerst: False
DC uitgerekend: tensor([0.0647, 0.0050, 0.0115, 0.0126], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0647, 0.0005, 0.0011, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01689181663095951, zelfde als eerst: False
DC uitgerekend: tensor([0.0391, 0.0010, 0.0116, 0.0024], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.9055e-02, 9.7463e-05, 1.1567e-03, 2.4207e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010137831792235374, zelfde als eerst: False
DC uitgerekend: tensor([0.1045, 0.0240, 0.0387, 0.0246], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1045, 0.0024, 0.0039, 0.0025], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.028295543044805527, zelfde als eerst: False
DC uitgerekend: tensor([0.1060, 0.0276, 0.0270, 0.0367], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1060, 0.0028, 0.0027, 0.0037], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.028782770037651062, zelfde als eerst: False
DC uitgerekend: tensor([0.1133, 0.0196, 0.0244, 0.0316], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1133, 0.0020, 0.0024, 0.0032], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.030213825404644012, zelfde als eerst: False
DC uitgerekend: tensor([0.1448, 0.0091, 0.0073, 0.0233], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1448, 0.0009, 0.0007, 0.0023], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.03719313442707062, zelfde als eerst: False
DC uitgerekend: tensor([3.1692e-02, 1.7493e-10, 2.2333e-02, 1.4266e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.1692e-02, 1.7493e-11, 2.2333e-03, 1.4266e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008837944827973843, zelfde als eerst: False
DC uitgerekend: tensor([2.5360e-02, 4.9295e-10, 2.1431e-02, 1.8808e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5360e-02, 4.9295e-11, 2.1431e-03, 1.8808e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007346002385020256, zelfde als eerst: False
DC uitgerekend: tensor([1.8939e-02, 2.2474e-09, 2.9688e-02, 1.9145e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.8939e-02, 2.2474e-10, 2.9688e-03, 1.9145e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0059554846957325935, zelfde als eerst: False
DC uitgerekend: tensor([1.6823e-02, 3.0222e-08, 1.0162e-02, 4.8143e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.6823e-02, 3.0222e-09, 1.0162e-03, 4.8143e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004580141510814428, zelfde als eerst: False
DC uitgerekend: tensor([0.0573, 0.0857, 0.0418, 0.0122], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0573, 0.0086, 0.0042, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01780736818909645, zelfde als eerst: False
DC uitgerekend: tensor([0.0636, 0.1651, 0.0267, 0.0165], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0636, 0.0165, 0.0027, 0.0017], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02109975554049015, zelfde als eerst: False
DC uitgerekend: tensor([0.0725, 0.2019, 0.0166, 0.0057], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0725, 0.0202, 0.0017, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.023723213002085686, zelfde als eerst: False
DC uitgerekend: tensor([0.0591, 0.2107, 0.0147, 0.0051], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0591, 0.0211, 0.0015, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.020545175299048424, zelfde als eerst: False
DC uitgerekend: tensor([0.0771, 0.0373, 0.0208, 0.0304], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0771, 0.0037, 0.0021, 0.0030], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.021498320624232292, zelfde als eerst: False
DC uitgerekend: tensor([0.0886, 0.0522, 0.0060, 0.0279], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0886, 0.0052, 0.0006, 0.0028], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.024314895272254944, zelfde als eerst: False
DC uitgerekend: tensor([0.1122, 0.0312, 0.0049, 0.0188], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1122, 0.0031, 0.0005, 0.0019], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.029429305344820023, zelfde als eerst: False
DC uitgerekend: tensor([0.1318, 0.0146, 0.0225, 0.0093], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1318, 0.0015, 0.0022, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.034120213240385056, zelfde als eerst: False
DC uitgerekend: tensor([0.0668, 0.0251, 0.0209, 0.0260], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0668, 0.0025, 0.0021, 0.0026], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01850355789065361, zelfde als eerst: False
DC uitgerekend: tensor([0.0728, 0.0338, 0.0075, 0.0181], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0728, 0.0034, 0.0008, 0.0018], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019674967974424362, zelfde als eerst: False
DC uitgerekend: tensor([0.0892, 0.0175, 0.0107, 0.0080], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0892, 0.0017, 0.0011, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02319515310227871, zelfde als eerst: False
DC uitgerekend: tensor([0.0901, 0.0139, 0.0128, 0.0046], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0901, 0.0014, 0.0013, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.023311521857976913, zelfde als eerst: False
DC uitgerekend: tensor([0.0419, 0.0417, 0.0564, 0.0135], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0419, 0.0042, 0.0056, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013256443664431572, zelfde als eerst: False
DC uitgerekend: tensor([0.0569, 0.0757, 0.0655, 0.0191], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0569, 0.0076, 0.0065, 0.0019], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018229175359010696, zelfde als eerst: False
DC uitgerekend: tensor([0.0662, 0.1085, 0.0450, 0.0166], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0662, 0.0108, 0.0045, 0.0017], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02079339325428009, zelfde als eerst: False
DC uitgerekend: tensor([0.0812, 0.0798, 0.0184, 0.0077], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0812, 0.0080, 0.0018, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02295841835439205, zelfde als eerst: False
DC uitgerekend: tensor([3.3874e-11, 3.4455e-03, 3.1227e-02, 5.0034e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.3874e-11, 3.4455e-04, 3.1227e-03, 5.0034e-11], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0008668201044201851, zelfde als eerst: False
DC uitgerekend: tensor([1.2986e-10, 5.8268e-04, 3.1221e-02, 8.5945e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.2986e-10, 5.8268e-05, 3.1221e-03, 8.5945e-11], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0007950820145197213, zelfde als eerst: False
DC uitgerekend: tensor([8.3056e-10, 8.2787e-04, 1.4429e-02, 1.0353e-08], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.3056e-10, 8.2787e-05, 1.4429e-03, 1.0353e-09], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0003814293013419956, zelfde als eerst: False
DC uitgerekend: tensor([7.9696e-09, 6.2142e-04, 4.7204e-02, 1.4100e-07], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.9696e-09, 6.2142e-05, 4.7204e-03, 1.4100e-08], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.001195638789795339, zelfde als eerst: False
DC uitgerekend: tensor([3.2718e-02, 3.5506e-09, 8.9219e-02, 3.0374e-10], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.2718e-02, 3.5506e-10, 8.9219e-03, 3.0374e-11], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010409913957118988, zelfde als eerst: False
DC uitgerekend: tensor([3.6860e-02, 4.7936e-09, 4.3033e-02, 1.3834e-09], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.6860e-02, 4.7936e-10, 4.3033e-03, 1.3834e-10], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01029083039611578, zelfde als eerst: False
DC uitgerekend: tensor([3.3588e-02, 1.2068e-08, 4.3502e-02, 2.3348e-08], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.3588e-02, 1.2068e-09, 4.3502e-03, 2.3348e-09], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009484587237238884, zelfde als eerst: False
DC uitgerekend: tensor([3.8564e-02, 2.0263e-08, 4.4090e-02, 2.6119e-07], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.8564e-02, 2.0263e-09, 4.4090e-03, 2.6119e-08], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010743334889411926, zelfde als eerst: False
DC uitgerekend: tensor([0.0532, 0.0502, 0.0348, 0.0140], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0532, 0.0050, 0.0035, 0.0014], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01578463241457939, zelfde als eerst: False
DC uitgerekend: tensor([0.0661, 0.0744, 0.0212, 0.0191], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0661, 0.0074, 0.0021, 0.0019], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01938425935804844, zelfde als eerst: False
DC uitgerekend: tensor([0.0788, 0.0563, 0.0049, 0.0042], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0788, 0.0056, 0.0005, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.021334854885935783, zelfde als eerst: False
DC uitgerekend: tensor([0.0819, 0.0701, 0.0063, 0.0034], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0819, 0.0070, 0.0006, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.022476239129900932, zelfde als eerst: False
DC uitgerekend: tensor([0.0526, 0.0411, 0.0376, 0.0131], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0526, 0.0041, 0.0038, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015443778596818447, zelfde als eerst: False
DC uitgerekend: tensor([0.0626, 0.0459, 0.0140, 0.0155], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0626, 0.0046, 0.0014, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01753203570842743, zelfde als eerst: False
DC uitgerekend: tensor([0.0726, 0.0279, 0.0246, 0.0101], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0726, 0.0028, 0.0025, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.019708145409822464, zelfde als eerst: False
DC uitgerekend: tensor([0.0780, 0.0171, 0.0117, 0.0022], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0780, 0.0017, 0.0012, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.020269207656383514, zelfde als eerst: False
DC uitgerekend: tensor([0.0081, 0.0240, 0.0368, 0.0009], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.1326e-03, 2.3980e-03, 3.6793e-03, 8.9096e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0035747468937188387, zelfde als eerst: False
DC uitgerekend: tensor([0.0082, 0.0343, 0.0322, 0.0003], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.2165e-03, 3.4264e-03, 3.2160e-03, 3.3160e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.003723018802702427, zelfde als eerst: False
DC uitgerekend: tensor([0.0084, 0.0281, 0.0078, 0.0004], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.4072e-03, 2.8055e-03, 7.8413e-04, 3.7376e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0030085546895861626, zelfde als eerst: False
DC uitgerekend: tensor([0.0034, 0.0261, 0.0075, 0.0020], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0034, 0.0026, 0.0008, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0017299504252150655, zelfde als eerst: False
DC uitgerekend: tensor([2.1507e-02, 1.2680e-10, 9.8872e-03, 3.7972e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1507e-02, 1.2680e-11, 9.8872e-04, 3.7972e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.005718745291233063, zelfde als eerst: False
DC uitgerekend: tensor([2.5777e-02, 5.1330e-10, 7.8825e-03, 4.2219e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5777e-02, 5.1330e-11, 7.8825e-04, 4.2219e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006746937986463308, zelfde als eerst: False
DC uitgerekend: tensor([3.2638e-02, 2.6443e-09, 7.4518e-03, 3.2828e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.2638e-02, 2.6443e-10, 7.4518e-04, 3.2828e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008427766151726246, zelfde als eerst: False
DC uitgerekend: tensor([3.8483e-02, 2.0292e-08, 1.4273e-02, 8.4423e-04], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.8483e-02, 2.0292e-09, 1.4273e-03, 8.4423e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009998615831136703, zelfde als eerst: False
DC uitgerekend: tensor([0.0842, 0.0018, 0.0245, 0.0160], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0842, 0.0002, 0.0024, 0.0016], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.022103512659668922, zelfde als eerst: False
DC uitgerekend: tensor([0.0936, 0.0016, 0.0199, 0.0191], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0936, 0.0002, 0.0020, 0.0019], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.024415064603090286, zelfde als eerst: False
DC uitgerekend: tensor([0.1049, 0.0006, 0.0536, 0.0139], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0489e-01, 6.3916e-05, 5.3551e-03, 1.3934e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02792469784617424, zelfde als eerst: False
DC uitgerekend: tensor([0.1137, 0.0008, 0.0124, 0.0153], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1374e-01, 7.5139e-05, 1.2374e-03, 1.5326e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02914523519575596, zelfde als eerst: False
DC uitgerekend: tensor([0.0507, 0.0568, 0.0456, 0.0209], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0507, 0.0057, 0.0046, 0.0021], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015763334929943085, zelfde als eerst: False
DC uitgerekend: tensor([0.0604, 0.0594, 0.0146, 0.0198], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0604, 0.0059, 0.0015, 0.0020], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017432641237974167, zelfde als eerst: False
DC uitgerekend: tensor([0.0720, 0.0404, 0.0151, 0.0145], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0720, 0.0040, 0.0015, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01974497176706791, zelfde als eerst: False
DC uitgerekend: tensor([0.0762, 0.0247, 0.0218, 0.0108], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0762, 0.0025, 0.0022, 0.0011], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.020487714558839798, zelfde als eerst: False
DC uitgerekend: tensor([0.0064, 0.1131, 0.0162, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0064, 0.0113, 0.0016, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0049348259344697, zelfde als eerst: False
DC uitgerekend: tensor([0.0080, 0.0932, 0.0147, 0.0023], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0080, 0.0093, 0.0015, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.004753259476274252, zelfde als eerst: False
DC uitgerekend: tensor([0.0137, 0.1641, 0.0097, 0.0076], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0137, 0.0164, 0.0010, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007945840246975422, zelfde als eerst: False
DC uitgerekend: tensor([0.0098, 0.2565, 0.0352, 0.0025], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0098, 0.0256, 0.0035, 0.0002], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009799329563975334, zelfde als eerst: False
DC uitgerekend: tensor([6.2248e-02, 1.4963e-10, 1.0795e-02, 1.6308e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.2248e-02, 1.4963e-11, 1.0795e-03, 1.6308e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016239479184150696, zelfde als eerst: False
DC uitgerekend: tensor([7.3388e-02, 5.3651e-10, 4.2796e-03, 1.4030e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.3388e-02, 5.3651e-11, 4.2796e-04, 1.4030e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018804777413606644, zelfde als eerst: False
DC uitgerekend: tensor([8.9641e-02, 3.7496e-09, 5.8218e-03, 3.3104e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.9641e-02, 3.7496e-10, 5.8218e-04, 3.3104e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02263866364955902, zelfde als eerst: False
DC uitgerekend: tensor([8.6845e-02, 2.3430e-08, 3.2940e-03, 5.7040e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.6845e-02, 2.3430e-09, 3.2940e-04, 5.7040e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.021936161443591118, zelfde als eerst: False
DC uitgerekend: tensor([0.0161, 0.1059, 0.0037, 0.0055], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0161, 0.0106, 0.0004, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006896025501191616, zelfde als eerst: False
DC uitgerekend: tensor([0.0176, 0.1066, 0.0034, 0.0070], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0176, 0.0107, 0.0003, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007330268621444702, zelfde als eerst: False
DC uitgerekend: tensor([0.0179, 0.1275, 0.0005, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.7864e-02, 1.2748e-02, 4.5297e-05, 2.6884e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007731592282652855, zelfde als eerst: False
DC uitgerekend: tensor([1.3401e-02, 2.3160e-01, 8.1978e-05, 1.1818e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.3401e-02, 2.3160e-02, 8.1978e-06, 1.1818e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009171919897198677, zelfde als eerst: False
DC uitgerekend: tensor([0.0560, 0.1048, 0.0215, 0.0174], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0560, 0.0105, 0.0022, 0.0017], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017584217712283134, zelfde als eerst: False
DC uitgerekend: tensor([0.0563, 0.0922, 0.0086, 0.0152], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0563, 0.0092, 0.0009, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016978314146399498, zelfde als eerst: False
DC uitgerekend: tensor([0.0565, 0.1145, 0.0215, 0.0068], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0565, 0.0115, 0.0021, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017701860517263412, zelfde als eerst: False
DC uitgerekend: tensor([0.0493, 0.2055, 0.0190, 0.0083], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0493, 0.0206, 0.0019, 0.0008], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.018135206773877144, zelfde als eerst: False
DC uitgerekend: tensor([0.0334, 0.0034, 0.0119, 0.0087], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0334, 0.0003, 0.0012, 0.0009], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008947424590587616, zelfde als eerst: False
DC uitgerekend: tensor([0.0422, 0.0016, 0.0123, 0.0180], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0422, 0.0002, 0.0012, 0.0018], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011351319029927254, zelfde als eerst: False
DC uitgerekend: tensor([0.0576, 0.0004, 0.0149, 0.0152], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.7622e-02, 4.0802e-05, 1.4875e-03, 1.5221e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01516820676624775, zelfde als eerst: False
DC uitgerekend: tensor([6.6782e-02, 8.0364e-06, 2.2600e-02, 3.9529e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.6782e-02, 8.0364e-07, 2.2600e-03, 3.9529e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017359571531414986, zelfde als eerst: False
DC uitgerekend: tensor([0.0188, 0.0922, 0.0015, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0188, 0.0092, 0.0002, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0072064753621816635, zelfde als eerst: False
DC uitgerekend: tensor([0.0238, 0.0853, 0.0028, 0.0068], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0238, 0.0085, 0.0003, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008329114876687527, zelfde als eerst: False
DC uitgerekend: tensor([0.0222, 0.1299, 0.0011, 0.0061], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0222, 0.0130, 0.0001, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008980206213891506, zelfde als eerst: False
DC uitgerekend: tensor([2.5425e-02, 1.9281e-01, 3.6139e-06, 4.5721e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5425e-02, 1.9281e-02, 3.6139e-07, 4.5721e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011290944181382656, zelfde als eerst: False
DC uitgerekend: tensor([0.0290, 0.0833, 0.0032, 0.0101], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0290, 0.0083, 0.0003, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009671506471931934, zelfde als eerst: False
DC uitgerekend: tensor([0.0341, 0.0855, 0.0052, 0.0151], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0341, 0.0086, 0.0005, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011159808374941349, zelfde als eerst: False
DC uitgerekend: tensor([0.0377, 0.0738, 0.0016, 0.0043], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0377, 0.0074, 0.0002, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011431299149990082, zelfde als eerst: False
DC uitgerekend: tensor([0.0294, 0.1729, 0.0055, 0.0027], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0294, 0.0173, 0.0006, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011870530433952808, zelfde als eerst: False
DC uitgerekend: tensor([7.8300e-02, 2.2928e-10, 2.7905e-02, 1.8195e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.8300e-02, 2.2928e-11, 2.7905e-03, 1.8195e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02072742022573948, zelfde als eerst: False
DC uitgerekend: tensor([8.4736e-02, 9.1958e-10, 1.3680e-02, 1.8131e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.4736e-02, 9.1958e-11, 1.3680e-03, 1.8131e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02197938971221447, zelfde als eerst: False
DC uitgerekend: tensor([9.8467e-02, 3.7368e-09, 3.9121e-02, 2.2870e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.8467e-02, 3.7368e-10, 3.9121e-03, 2.2870e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02616659551858902, zelfde als eerst: False
DC uitgerekend: tensor([1.0516e-01, 2.7102e-08, 6.2589e-02, 1.0451e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.0516e-01, 2.7102e-09, 6.2589e-03, 1.0451e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.028117118403315544, zelfde als eerst: False
DC uitgerekend: tensor([4.2259e-02, 5.6944e-05, 8.9426e-03, 1.3001e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([4.2259e-02, 5.6944e-06, 8.9426e-04, 1.3001e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011114866472780704, zelfde als eerst: False
DC uitgerekend: tensor([5.3053e-02, 4.7744e-06, 6.9737e-03, 1.6957e-02], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.3053e-02, 4.7744e-07, 6.9737e-04, 1.6957e-03], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013861674815416336, zelfde als eerst: False
DC uitgerekend: tensor([6.6461e-02, 5.4967e-09, 2.8195e-02, 2.2653e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.6461e-02, 5.4967e-10, 2.8195e-03, 2.2653e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.017376868054270744, zelfde als eerst: False
DC uitgerekend: tensor([6.1701e-02, 3.5642e-08, 5.2726e-02, 3.6000e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([6.1701e-02, 3.5642e-09, 5.2726e-03, 3.6000e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016833381727337837, zelfde als eerst: False
DC uitgerekend: tensor([0.0537, 0.0169, 0.0260, 0.0151], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0537, 0.0017, 0.0026, 0.0015], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.014864297583699226, zelfde als eerst: False
DC uitgerekend: tensor([0.0680, 0.0144, 0.0044, 0.0131], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0680, 0.0014, 0.0004, 0.0013], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01779535785317421, zelfde als eerst: False
DC uitgerekend: tensor([0.0709, 0.0065, 0.0009, 0.0034], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.0932e-02, 6.4993e-04, 9.1481e-05, 3.3711e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01800256408751011, zelfde als eerst: False
DC uitgerekend: tensor([0.0461, 0.0042, 0.0025, 0.0034], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0461, 0.0004, 0.0003, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011770694516599178, zelfde als eerst: False
DC uitgerekend: tensor([9.2131e-04, 7.9996e-02, 3.6938e-10, 4.9753e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([9.2131e-04, 7.9996e-03, 3.6938e-11, 4.9753e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.002354612108319998, zelfde als eerst: False
DC uitgerekend: tensor([8.3642e-04, 9.5935e-02, 2.8781e-09, 8.0789e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([8.3642e-04, 9.5935e-03, 2.8781e-10, 8.0789e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.002809463068842888, zelfde als eerst: False
DC uitgerekend: tensor([1.1676e-03, 1.2744e-01, 2.7098e-08, 3.3720e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1676e-03, 1.2744e-02, 2.7098e-09, 3.3720e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0035622017458081245, zelfde als eerst: False
DC uitgerekend: tensor([7.6012e-09, 2.2306e-01, 1.0361e-07, 3.3715e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([7.6012e-09, 2.2306e-02, 1.0361e-08, 3.3715e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.00566071504727006, zelfde als eerst: False
DC uitgerekend: tensor([0.1015, 0.0055, 0.0127, 0.0099], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1015, 0.0005, 0.0013, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02608436904847622, zelfde als eerst: False
DC uitgerekend: tensor([0.1046, 0.0038, 0.0241, 0.0209], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1046, 0.0004, 0.0024, 0.0021], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.027381138876080513, zelfde als eerst: False
DC uitgerekend: tensor([0.1187, 0.0013, 0.0381, 0.0118], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.1187, 0.0001, 0.0038, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.030953064560890198, zelfde als eerst: False
DC uitgerekend: tensor([0.1175, 0.0007, 0.1499, 0.0086], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1749e-01, 7.4304e-05, 1.4994e-02, 8.5574e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.033353373408317566, zelfde als eerst: False
DC uitgerekend: tensor([0.0425, 0.0598, 0.0121, 0.0058], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0425, 0.0060, 0.0012, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01257725153118372, zelfde als eerst: False
DC uitgerekend: tensor([0.0418, 0.0553, 0.0178, 0.0097], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0418, 0.0055, 0.0018, 0.0010], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.012530192732810974, zelfde als eerst: False
DC uitgerekend: tensor([0.0513, 0.0976, 0.0073, 0.0039], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0513, 0.0098, 0.0007, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.015547001734375954, zelfde als eerst: False
DC uitgerekend: tensor([0.0626, 0.1070, 0.0140, 0.0054], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0626, 0.0107, 0.0014, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01880628801882267, zelfde als eerst: False
DC uitgerekend: tensor([0.0026, 0.0450, 0.0184, 0.0003], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.6180e-03, 4.4991e-03, 1.8444e-03, 3.2255e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.002248445525765419, zelfde als eerst: False
DC uitgerekend: tensor([2.1745e-03, 4.3916e-02, 1.1048e-02, 4.2385e-05], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1745e-03, 4.3916e-03, 1.1048e-03, 4.2385e-06], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0019188004080206156, zelfde als eerst: False
DC uitgerekend: tensor([0.0026, 0.0867, 0.0067, 0.0003], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.6236e-03, 8.6710e-03, 6.6871e-04, 2.6151e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0029973629862070084, zelfde als eerst: False
DC uitgerekend: tensor([0.0011, 0.0932, 0.0117, 0.0007], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.1498e-03, 9.3156e-03, 1.1657e-03, 7.0267e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.002925345441326499, zelfde als eerst: False
DC uitgerekend: tensor([0.0355, 0.0307, 0.0025, 0.0014], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0355, 0.0031, 0.0002, 0.0001], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.009747848846018314, zelfde als eerst: False
DC uitgerekend: tensor([0.0365, 0.0378, 0.0022, 0.0058], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0365, 0.0038, 0.0002, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.010273735038936138, zelfde als eerst: False
DC uitgerekend: tensor([0.0628, 0.0313, 0.0070, 0.0118], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0628, 0.0031, 0.0007, 0.0012], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.016955846920609474, zelfde als eerst: False
DC uitgerekend: tensor([0.0995, 0.0245, 0.0085, 0.0042], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0995, 0.0025, 0.0009, 0.0004], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.02581869438290596, zelfde als eerst: False
DC uitgerekend: tensor([0.0232, 0.0158, 0.0085, 0.0070], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0232, 0.0016, 0.0008, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006571954116225243, zelfde als eerst: False
DC uitgerekend: tensor([0.0270, 0.0099, 0.0093, 0.0071], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0270, 0.0010, 0.0009, 0.0007], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007403687108308077, zelfde als eerst: False
DC uitgerekend: tensor([0.0292, 0.0080, 0.0144, 0.0005], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.9226e-02, 7.9506e-04, 1.4366e-03, 4.8580e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007876642048358917, zelfde als eerst: False
DC uitgerekend: tensor([0.0258, 0.0121, 0.0243, 0.0007], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.5820e-02, 1.2119e-03, 2.4321e-03, 7.3329e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007384240627288818, zelfde als eerst: False
DC uitgerekend: tensor([0.0212, 0.0369, 0.0001, 0.0041], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1166e-02, 3.6930e-03, 1.4827e-05, 4.1260e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.006321687716990709, zelfde als eerst: False
DC uitgerekend: tensor([1.9739e-02, 8.9680e-02, 1.7746e-05, 5.0008e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([1.9739e-02, 8.9680e-03, 1.7746e-06, 5.0008e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.007302226033061743, zelfde als eerst: False
DC uitgerekend: tensor([2.1132e-02, 1.2595e-01, 4.9761e-07, 2.2260e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([2.1132e-02, 1.2595e-02, 4.9761e-08, 2.2260e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.008487537503242493, zelfde als eerst: False
DC uitgerekend: tensor([3.6129e-02, 1.7847e-01, 7.5718e-08, 1.5314e-03], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([3.6129e-02, 1.7847e-02, 7.5718e-09, 1.5314e-04], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.013532202690839767, zelfde als eerst: False
DC uitgerekend: tensor([0.0397, 0.0544, 0.0071, 0.0028], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0397, 0.0054, 0.0007, 0.0003], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.011530554853379726, zelfde als eerst: False
DC uitgerekend: tensor([0.0456, 0.0936, 0.0038, 0.0062], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0456, 0.0094, 0.0004, 0.0006], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01399366557598114, zelfde als eerst: False
DC uitgerekend: tensor([0.0489, 0.1417, 0.0174, 0.0052], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([0.0489, 0.0142, 0.0017, 0.0005], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.01632237620651722, zelfde als eerst: False
DC uitgerekend: tensor([0.0540, 0.1714, 0.0041, 0.0007], device='cuda:0',
       grad_fn=<SliceBackward0>)
DC na weighting: tensor([5.3967e-02, 1.7139e-02, 4.1340e-04, 7.3138e-05], device='cuda:0',
       grad_fn=<MulBackward0>)
DC na mean: 0.0178980715572834, zelfde als eerst: False
