Starting at Mon Nov  7 11:19:19 CET 2022
Running on hosts: res-hpc-lkeb07
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 6.
Account: div2-lkeb
Job ID: 12800564
Job name: PancreasInferenceEval
Node running script: res-hpc-lkeb07
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Mon Nov  7 11:19:21 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     Off  | 00000000:AF:00.0 Off |                  Off |
| 32%   38C    P0    60W / 260W |      0MiB / 24220MiB |      4%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-6hq0p97r/hiddenlayer_f082b30f103e43768f19403cac7d9081
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.1-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.5-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0.tar.gz (151 kB)
Collecting scipy
  Using cached scipy-1.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (33.7 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24.tar.gz (61 kB)
Collecting numpy
  Using cached numpy-1.23.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)
Collecting sklearn
  Using cached sklearn-0.0.tar.gz (1.1 kB)
Collecting SimpleITK
  Using cached SimpleITK-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (52.8 MB)
Collecting pandas
  Using cached pandas-1.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.2-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.10.10-py3-none-any.whl (210 kB)
Collecting matplotlib
  Downloading matplotlib-3.6.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.8 MB)
Collecting monai
  Using cached monai-1.0.1-202210241233-py3-none-any.whl (1.1 MB)
Collecting einops
  Using cached einops-0.5.0-py3-none-any.whl (36 kB)
Collecting ipython
  Using cached ipython-8.6.0-py3-none-any.whl (761 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.4.0-py3-none-any.whl (26 kB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.3.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.3 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.5 MB)
Collecting future
  Using cached future-0.18.2.tar.gz (829 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting networkx>=2.2
  Using cached networkx-2.8.8-py3-none-any.whl (2.0 MB)
Collecting imageio>=2.4.1
  Downloading imageio-2.22.4-py3-none-any.whl (3.4 MB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.8 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.19-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.13.0-py3-none-any.whl (1.1 MB)
Collecting prompt-toolkit<3.1.0,>3.0.1
  Downloading prompt_toolkit-3.0.32-py3-none-any.whl (382 kB)
Collecting traitlets>=5
  Using cached traitlets-5.5.0-py3-none-any.whl (107 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting stack-data
  Using cached stack_data-0.6.0-py3-none-any.whl (24 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.38.0-py3-none-any.whl (965 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting contourpy>=1.0.1
  Using cached contourpy-1.0.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (296 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting setuptools
  Downloading setuptools-65.5.1-py3-none-any.whl (1.2 MB)
Collecting pytz>=2020.1
  Using cached pytz-2022.6-py2.py3-none-any.whl (498 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.9.24-py3-none-any.whl (161 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.12-py2.py3-none-any.whl (140 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.1-py3-none-any.whl (39 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.2.0-py3-none-any.whl (297 kB)
Collecting asttokens>=2.1.0
  Using cached asttokens-2.1.0-py2.py3-none-any.whl (26 kB)
Collecting executing>=1.2.0
  Using cached executing-1.2.0-py2.py3-none-any.whl (24 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Using legacy 'setup.py install' for batchgenerators, since package 'wheel' is not installed.
Using legacy 'setup.py install' for future, since package 'wheel' is not installed.
Using legacy 'setup.py install' for medpy, since package 'wheel' is not installed.
Using legacy 'setup.py install' for sklearn, since package 'wheel' is not installed.
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, contourpy, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
    Running setup.py install for future: started
    Running setup.py install for future: finished with status 'done'
    Running setup.py install for sklearn: started
    Running setup.py install for sklearn: finished with status 'done'
    Running setup.py install for medpy: started
    Running setup.py install for medpy: finished with status 'done'
    Running setup.py install for batchgenerators: started
    Running setup.py install for batchgenerators: finished with status 'done'
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.4.1 SimpleITK-2.2.0 argparse-1.4.0 asttokens-2.1.0 backcall-0.2.0 batchgenerators-0.24 certifi-2022.9.24 charset-normalizer-2.1.1 contourpy-1.0.6 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.5 einops-0.5.0 executing-1.2.0 fonttools-4.38.0 future-0.18.2 graphviz-0.20.1 idna-3.4 imageio-2.22.4 ipython-8.6.0 jedi-0.18.1 joblib-1.2.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.6.2 matplotlib-inline-0.1.6 medpy-0.4.0 monai-1.0.1 networkx-2.8.8 nibabel-4.0.2 nnunet numpy-1.23.4 packaging-21.3 pandas-1.5.1 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.3.0 prompt-toolkit-3.0.32 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.13.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.19 pytz-2022.6 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.3 scipy-1.9.3 setuptools-65.5.1 six-1.16.0 sklearn-0.0 stack-data-0.6.0 threadpoolctl-3.1.0 tifffile-2022.10.10 torch-1.12.0 tqdm-4.64.1 traceback2-1.4.0 traitlets-5.5.0 typing-extensions-4.4.0 unittest2-1.1.0 urllib3-1.26.12 wcwidth-0.2.5


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 18 unique case ids, here are some examples: ['panc_00003' 'panc_00017' 'panc_00012' 'panc_00010' 'panc_00001'
 'panc_00011' 'panc_00007' 'panc_00010' 'panc_00017' 'panc_00005']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 18
number of cases that still need to be predicted: 18
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-11-07 11:21:31.976639: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task611/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
[Timing] starting preprocessing generator took 2.574920654296875e-05 seconds
starting prediction...
Preprocessing with 6 multithreads
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00003.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 2.2579383850097656 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 2.5190012454986572, transposing took 3.4809112548828125e-05 and 4.5299530029296875e-06, resampling/normalizing took 0.032037973403930664.
[Timing] preprocessing function took 2.5555238723754883 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 2.556007146835327
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00009.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.3643910884857178 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [2.98382854 0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.98382854, 0.68493152, 0.68493152]), 'spacing_transposed': array([2.98382854, 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.5653676986694336, transposing took 8.106231689453125e-06 and 1.430511474609375e-06, resampling/normalizing took 0.5851659774780273.
[Timing] preprocessing function took 1.1741845607757568 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 74.90807962417603
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00015.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.17876434326171875 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 300, 320) spacing: [3.         0.66666669 0.66666669] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66666669, 0.66666669]), 'spacing_transposed': array([3.        , 0.66666669, 0.66666669]), 'data.shape (data is transposed)': (1, 42, 300, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 310)} 

[Timing] Preprocessing specifics: loading&cropping took 0.35730719566345215, transposing took 1.3589859008789062e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.5583665370941162.
[Timing] preprocessing function took 0.9291226863861084 seconds
(1, 42, 291, 310)
[Timing] total time for preprocessing this item is 195.11313199996948
[Timing] This worker has ended successfully, no errors to report. It took 467.42502880096436 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00001.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 2.278585433959961 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 2.5120689868927, transposing took 3.0040740966796875e-05 and 4.291534423828125e-06, resampling/normalizing took 0.035989999771118164.
[Timing] preprocessing function took 2.552462339401245 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 2.5531296730041504
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00007.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.5495808124542236 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.7913820743560791, transposing took 1.239776611328125e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.6866891384124756.
[Timing] preprocessing function took 1.5136828422546387 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 92.88230013847351
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00013.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.11531662940979004 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.3200113773345947, transposing took 4.267692565917969e-05 and 6.198883056640625e-06, resampling/normalizing took 0.018093109130859375.
[Timing] preprocessing function took 0.352996826171875 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 195.058678150177
[Timing] This worker has ended successfully, no errors to report. It took 485.2996838092804 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00002.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 2.280625104904175 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 2.543954849243164, transposing took 2.1696090698242188e-05 and 4.76837158203125e-06, resampling/normalizing took 0.03114938735961914.
[Timing] preprocessing function took 2.5795395374298096 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 24.494110822677612
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00008.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.09527707099914551 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.3054676055908203, transposing took 1.2159347534179688e-05 and 1.430511474609375e-06, resampling/normalizing took 0.016901493072509766.
[Timing] preprocessing function took 0.3459951877593994 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 106.54052400588989
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00014.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 1.7187185287475586 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 444, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 444, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 505, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 2.2100915908813477, transposing took 1.2636184692382812e-05 and 1.9073486328125e-06, resampling/normalizing took 3.9293744564056396.
[Timing] preprocessing function took 6.164491891860962 seconds
(1, 51, 505, 582)
[Timing] total time for preprocessing this item is 195.16165566444397
[Timing] This worker has ended successfully, no errors to report. It took 485.342693567276 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00000.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 2.328112840652466 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 318, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 318, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 318, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 2.5914556980133057, transposing took 2.0265579223632812e-05 and 3.5762786865234375e-06, resampling/normalizing took 0.030857086181640625.
[Timing] preprocessing function took 2.628277540206909 seconds
(1, 40, 318, 320)
[Timing] total time for preprocessing this item is 41.98979067802429
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00006.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.20947670936584473 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 300, 320) spacing: [3.         0.66666669 0.66666669] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66666669, 0.66666669]), 'spacing_transposed': array([3.        , 0.66666669, 0.66666669]), 'data.shape (data is transposed)': (1, 42, 300, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 310)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4107499122619629, transposing took 1.2636184692382812e-05 and 1.430511474609375e-06, resampling/normalizing took 0.6480114459991455.
[Timing] preprocessing function took 1.0853493213653564 seconds
(1, 42, 291, 310)
[Timing] total time for preprocessing this item is 194.65313982963562
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00012.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1131596565246582 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.3030989170074463, transposing took 1.1920928955078125e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.01756572723388672.
[Timing] preprocessing function took 0.3313426971435547 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 107.47730684280396
[Timing] This worker has ended successfully, no errors to report. It took 503.3857972621918 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00005.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 2.2135164737701416 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 2.476310968399048, transposing took 2.1696090698242188e-05 and 3.337860107421875e-06, resampling/normalizing took 0.6849520206451416.
[Timing] preprocessing function took 3.165590763092041 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 59.60274696350098
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00011.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.18411469459533691 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.00000024 0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.00000024, 0.68493152, 0.68493152]), 'spacing_transposed': array([3.00000024, 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 42, 291, 319)} 

[Timing] Preprocessing specifics: loading&cropping took 0.37414097785949707, transposing took 1.2159347534179688e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.6976578235626221.
[Timing] preprocessing function took 1.0938849449157715 seconds
(1, 42, 291, 319)
[Timing] total time for preprocessing this item is 194.90337872505188
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00017.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1883220672607422 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.3775467872619629, transposing took 1.4066696166992188e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.017039775848388672.
[Timing] preprocessing function took 0.4091761112213135 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 194.73936128616333
[Timing] This worker has ended successfully, no errors to report. It took 503.26650834083557 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00004.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 2.2232768535614014 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 438, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 438, 512)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 51, 498, 582)} 

[Timing] Preprocessing specifics: loading&cropping took 2.7625937461853027, transposing took 2.5272369384765625e-05 and 4.5299530029296875e-06, resampling/normalizing took 4.065390348434448.
[Timing] preprocessing function took 6.851685285568237 seconds
(1, 51, 498, 582)
[Timing] total time for preprocessing this item is 113.10845732688904
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00010.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.25324416160583496 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.45829057693481445, transposing took 1.4066696166992188e-05 and 9.5367431640625e-07, resampling/normalizing took 0.017124176025390625.
[Timing] preprocessing function took 0.5224552154541016 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 195.14877820014954
preprocessing /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00016.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.13693690299987793 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
no resampling necessary
no resampling necessary
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([3.    , 0.6875, 0.6875]), 'data.shape (data is resampled)': (1, 40, 320, 320)} 

[Timing] Preprocessing specifics: loading&cropping took 0.3653218746185303, transposing took 2.47955322265625e-05 and 1.9073486328125e-06, resampling/normalizing took 0.017885208129882812.
[Timing] preprocessing function took 0.40839457511901855 seconds
(1, 40, 320, 320)
[Timing] total time for preprocessing this item is 177.00820350646973
[Timing] This worker has ended successfully, no errors to report. It took 503.2925069332123 seconds.
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00001.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.17815566062927246 seconds
[Timing] - Saving the segmentation took 0.22529006004333496 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00002.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06156134605407715 seconds
[Timing] - Saving the segmentation took 0.027667760848999023 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00005.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3161907196044922 seconds
[Timing] - Saving the segmentation took 0.028212547302246094 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00007.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30577611923217773 seconds
[Timing] - Saving the segmentation took 0.026965618133544922 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00008.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06354188919067383 seconds
[Timing] - Saving the segmentation took 0.02428460121154785 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00011.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30408430099487305 seconds
[Timing] - Saving the segmentation took 0.027420520782470703 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00013.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06541705131530762 seconds
[Timing] - Saving the segmentation took 0.025743961334228516 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00014.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.9351129531860352 seconds
[Timing] - Saving the segmentation took 0.052686214447021484 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00017.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06201648712158203 seconds
[Timing] - Saving the segmentation took 0.02696681022644043 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00003.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.07133793830871582 seconds
[Timing] - Saving the segmentation took 0.04909515380859375 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00000.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06561040878295898 seconds
[Timing] - Saving the segmentation took 0.024995803833007812 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00009.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.30681920051574707 seconds
[Timing] - Saving the segmentation took 0.030950307846069336 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00004.nii.gz
[Timing] - Resampling the segmentation to original shape took 2.0026159286499023 seconds
[Timing] - Saving the segmentation took 0.05262041091918945 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00006.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.31971311569213867 seconds
[Timing] - Saving the segmentation took 0.028043508529663086 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00015.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.3270690441131592 seconds
[Timing] - Saving the segmentation took 0.027492046356201172 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00010.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06844830513000488 seconds
[Timing] - Saving the segmentation took 0.027645349502563477 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00012.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.0674276351928711 seconds
[Timing] - Saving the segmentation took 0.03505277633666992 seconds
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00016.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.06130099296569824 seconds
[Timing] - Saving the segmentation took 0.02715921401977539 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00001.nii.gz
[Timing] loading took 0.06595730781555176 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
computing Gaussian
done
prediction done
[Timing] fold 0 prediction took 7.9583587646484375 seconds
[Timing] loading another fold took 0.04449129104614258 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.4222803115844727 seconds
[Timing] loading another fold took 0.04514360427856445 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.412795305252075 seconds
[Timing] loading another fold took 0.04389357566833496 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.412649154663086 seconds
[Timing] loading another fold took 0.044358015060424805 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.42289662361145 seconds
[Timing] normalising with folds took 0.0028116703033447266 seconds
[Timing] transposing backwards took 3.5762786865234375e-05 seconds
[Timing] full prediction took 24.530552864074707 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00003.nii.gz
[Timing] loading took 0.04511117935180664 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.42744779586792 seconds
[Timing] loading another fold took 0.04449915885925293 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.427506446838379 seconds
[Timing] loading another fold took 0.045128822326660156 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.447065830230713 seconds
[Timing] loading another fold took 0.044526100158691406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.430910110473633 seconds
[Timing] loading another fold took 0.044409990310668945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.4440417289733887 seconds
[Timing] normalising with folds took 0.0028913021087646484 seconds
[Timing] transposing backwards took 3.743171691894531e-05 seconds
[Timing] full prediction took 41.97700357437134 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00002.nii.gz
[Timing] loading took 0.047469139099121094 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.4576776027679443 seconds
[Timing] loading another fold took 0.044184207916259766 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.4673662185668945 seconds
[Timing] loading another fold took 0.04626107215881348 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.467508316040039 seconds
[Timing] loading another fold took 0.04524660110473633 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5566203594207764 seconds
[Timing] loading another fold took 0.0448756217956543 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5097224712371826 seconds
[Timing] normalising with folds took 0.0029420852661132812 seconds
[Timing] transposing backwards took 3.9577484130859375e-05 seconds
[Timing] full prediction took 59.71049785614014 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00000.nii.gz
[Timing] loading took 0.045360565185546875 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 318, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 94], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.4609904289245605 seconds
[Timing] loading another fold took 0.0446622371673584 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 318, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 94], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.514643669128418 seconds
[Timing] loading another fold took 0.04481935501098633 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 318, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 94], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5229172706604004 seconds
[Timing] loading another fold took 0.045429229736328125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 318, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 94], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.553117275238037 seconds
[Timing] loading another fold took 0.04491996765136719 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 318, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 94], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.491132974624634 seconds
[Timing] normalising with folds took 0.002843618392944336 seconds
[Timing] transposing backwards took 3.719329833984375e-05 seconds
[Timing] full prediction took 77.52529716491699 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00005.nii.gz
[Timing] loading took 0.0457611083984375 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.551666736602783 seconds
[Timing] loading another fold took 0.04447293281555176 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5674898624420166 seconds
[Timing] loading another fold took 0.044043779373168945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.4904158115386963 seconds
[Timing] loading another fold took 0.0439457893371582 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.568878412246704 seconds
[Timing] loading another fold took 0.04545259475708008 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.487441301345825 seconds
[Timing] normalising with folds took 0.0027310848236083984 seconds
[Timing] transposing backwards took 3.838539123535156e-05 seconds
[Timing] full prediction took 95.4598982334137 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00009.nii.gz
[Timing] loading took 0.04561352729797363 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.5038022994995117 seconds
[Timing] loading another fold took 0.04449200630187988 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.495292901992798 seconds
[Timing] loading another fold took 0.04499650001525879 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.50121808052063 seconds
[Timing] loading another fold took 0.04474997520446777 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.4840381145477295 seconds
[Timing] loading another fold took 0.04450035095214844 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5017495155334473 seconds
[Timing] normalising with folds took 0.002745389938354492 seconds
[Timing] transposing backwards took 3.6716461181640625e-05 seconds
[Timing] full prediction took 113.20411825180054 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00007.nii.gz
[Timing] loading took 0.045691728591918945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.5321290493011475 seconds
[Timing] loading another fold took 0.04442119598388672 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.4987757205963135 seconds
[Timing] loading another fold took 0.044550180435180664 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5408952236175537 seconds
[Timing] loading another fold took 0.04411149024963379 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.4967081546783447 seconds
[Timing] loading another fold took 0.0441281795501709 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.517115831375122 seconds
[Timing] normalising with folds took 0.0027277469635009766 seconds
[Timing] transposing backwards took 3.4332275390625e-05 seconds
[Timing] full prediction took 131.046480178833 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00004.nii.gz
[Timing] loading took 0.045092105865478516 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 91, 183, 274], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 21.091110944747925 seconds
[Timing] loading another fold took 0.0440983772277832 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 91, 183, 274], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 21.012856483459473 seconds
[Timing] loading another fold took 0.044928550720214844 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 91, 183, 274], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 21.047537803649902 seconds
[Timing] loading another fold took 0.04485321044921875 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 91, 183, 274], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 21.059231996536255 seconds
[Timing] loading another fold took 0.04500389099121094 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 498, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 91, 183, 274], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 21.01552414894104 seconds
[Timing] normalising with folds took 0.010434865951538086 seconds
[Timing] transposing backwards took 4.124641418457031e-05 seconds
[Timing] full prediction took 236.5849997997284 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00008.nii.gz
[Timing] loading took 0.05092144012451172 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.633112907409668 seconds
[Timing] loading another fold took 0.04365038871765137 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5318267345428467 seconds
[Timing] loading another fold took 0.044686317443847656 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.509446144104004 seconds
[Timing] loading another fold took 0.04461264610290527 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5070056915283203 seconds
[Timing] loading another fold took 0.04433774948120117 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5379042625427246 seconds
[Timing] normalising with folds took 0.0028460025787353516 seconds
[Timing] transposing backwards took 3.24249267578125e-05 seconds
[Timing] full prediction took 254.62570524215698 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00006.nii.gz
[Timing] loading took 0.045647621154785156 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.588691234588623 seconds
[Timing] loading another fold took 0.04492044448852539 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.543181896209717 seconds
[Timing] loading another fold took 0.044882774353027344 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5377347469329834 seconds
[Timing] loading another fold took 0.0446782112121582 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5212337970733643 seconds
[Timing] loading another fold took 0.04483962059020996 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.565037727355957 seconds
[Timing] normalising with folds took 0.002611875534057617 seconds
[Timing] transposing backwards took 4.172325134277344e-05 seconds
[Timing] full prediction took 272.64132857322693 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00011.nii.gz
[Timing] loading took 0.04519462585449219 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.534019947052002 seconds
[Timing] loading another fold took 0.04346036911010742 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.518240451812744 seconds
[Timing] loading another fold took 0.04367184638977051 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.505603313446045 seconds
[Timing] loading another fold took 0.043509721755981445 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.547046661376953 seconds
[Timing] loading another fold took 0.04504060745239258 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 319)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.509127616882324 seconds
[Timing] normalising with folds took 0.002668619155883789 seconds
[Timing] transposing backwards took 3.075599670410156e-05 seconds
[Timing] full prediction took 290.51822686195374 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00015.nii.gz
[Timing] loading took 0.0452883243560791 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.5290491580963135 seconds
[Timing] loading another fold took 0.04390239715576172 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5092923641204834 seconds
[Timing] loading another fold took 0.04399418830871582 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.504363536834717 seconds
[Timing] loading another fold took 0.04429483413696289 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.530001640319824 seconds
[Timing] loading another fold took 0.04378938674926758 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 42, 291, 310)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10], [0, 67], [0, 54]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5081608295440674 seconds
[Timing] normalising with folds took 0.0026023387908935547 seconds
[Timing] transposing backwards took 3.9577484130859375e-05 seconds
[Timing] full prediction took 308.3542754650116 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00013.nii.gz
[Timing] loading took 0.044823408126831055 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.524327039718628 seconds
[Timing] loading another fold took 0.044060468673706055 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5271456241607666 seconds
[Timing] loading another fold took 0.04390096664428711 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.52813982963562 seconds
[Timing] loading another fold took 0.044127702713012695 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5268399715423584 seconds
[Timing] loading another fold took 0.04384756088256836 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.528817892074585 seconds
[Timing] normalising with folds took 0.0028820037841796875 seconds
[Timing] transposing backwards took 2.5033950805664062e-05 seconds
[Timing] full prediction took 326.24335861206055 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00010.nii.gz
[Timing] loading took 0.04610490798950195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.509417772293091 seconds
[Timing] loading another fold took 0.04385519027709961 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5124874114990234 seconds
[Timing] loading another fold took 0.04415297508239746 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5319371223449707 seconds
[Timing] loading another fold took 0.04403567314147949 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.512596607208252 seconds
[Timing] loading another fold took 0.04386281967163086 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.513800859451294 seconds
[Timing] normalising with folds took 0.0028235912322998047 seconds
[Timing] transposing backwards took 3.743171691894531e-05 seconds
[Timing] full prediction took 344.0813822746277 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00014.nii.gz
[Timing] loading took 0.044301509857177734 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 20.948564529418945 seconds
[Timing] loading another fold took 0.04412126541137695 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 20.97240900993347 seconds
[Timing] loading another fold took 0.04468369483947754 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 21.038382053375244 seconds
[Timing] loading another fold took 0.04590559005737305 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 20.975335359573364 seconds
[Timing] loading another fold took 0.04395246505737305 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 505, 582)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 10, 19], [0, 94, 187, 281], [0, 109, 217, 326]]
number of tiles: 48
using precomputed Gaussian
prediction done
[Timing] another fold took 20.976282119750977 seconds
[Timing] normalising with folds took 0.010515451431274414 seconds
[Timing] transposing backwards took 3.600120544433594e-05 seconds
[Timing] full prediction took 449.3055260181427 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00012.nii.gz
[Timing] loading took 0.05001115798950195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.599606990814209 seconds
[Timing] loading another fold took 0.040320634841918945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.616065740585327 seconds
[Timing] loading another fold took 0.046567678451538086 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5728845596313477 seconds
[Timing] loading another fold took 0.044404029846191406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.539400339126587 seconds
[Timing] loading another fold took 0.04464530944824219 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.530369281768799 seconds
[Timing] normalising with folds took 0.0028133392333984375 seconds
[Timing] transposing backwards took 3.62396240234375e-05 seconds
[Timing] full prediction took 467.48479890823364 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00017.nii.gz
[Timing] loading took 0.045102596282958984 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.5372023582458496 seconds
[Timing] loading another fold took 0.04911923408508301 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5053141117095947 seconds
[Timing] loading another fold took 0.04332375526428223 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5102431774139404 seconds
[Timing] loading another fold took 0.04344296455383301 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5199944972991943 seconds
[Timing] loading another fold took 0.043616533279418945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5230488777160645 seconds
[Timing] normalising with folds took 0.002805948257446289 seconds
[Timing] transposing backwards took 3.3855438232421875e-05 seconds
[Timing] full prediction took 485.35188603401184 seconds
predicting /exports/lkeb-hpc/smaijer/output/611/3d_fullres/nnUNetTrainerV2/612/imagesTr/panc_00016.nii.gz
[Timing] loading took 0.04623055458068848 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 3.5519120693206787 seconds
[Timing] loading another fold took 0.04455280303955078 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.5346274375915527 seconds
[Timing] loading another fold took 0.044569969177246094 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.565687417984009 seconds
[Timing] loading another fold took 0.04408693313598633 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.52056622505188 seconds
[Timing] loading another fold took 0.043871164321899414 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 40, 320, 320)
patch size: [ 32 224 256]
steps (x, y, and z): [[0, 8], [0, 96], [0, 64]]
number of tiles: 8
using precomputed Gaussian
prediction done
[Timing] another fold took 3.554386615753174 seconds
[Timing] normalising with folds took 0.0028505325317382812 seconds
[Timing] transposing backwards took 3.814697265625e-05 seconds
[Timing] full prediction took 503.37657713890076 seconds
[Timing] Another preprocessing process done, it took 503.4554674625397 seconds
[Timing] Another preprocessing process done, it took 503.45553183555603 seconds
[Timing] Another preprocessing process done, it took 503.4555480480194 seconds
[Timing] Another preprocessing process done, it took 503.45556378364563 seconds
[Timing] Another preprocessing process done, it took 503.45952677726746 seconds
[Timing] Another preprocessing process done, it took 503.4595432281494 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
[Timing] postprocessing took 1.4029645919799805 seconds


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Program finished with exit code 0 at: Mon Nov  7 11:19:19 CET 2022
