Starting at Wed Jul  6 23:06:31 CEST 2022
Running on hosts: res-hpc-lkeb06
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 6.
Account: div2-lkeb
Job ID: 10629384
Job name: 700hybrA
Node running script: res-hpc-lkeb06
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Wed Jul  6 23:09:46 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.82.01    Driver Version: 470.82.01    CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     On   | 00000000:3B:00.0 Off |                  Off |
| 33%   28C    P8    16W / 260W |      0MiB / 24220MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-2j5q9imv/hiddenlayer_2974b4c1d5124d3dac5698c6ad5e1d35
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch>1.10.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.0-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.2-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0-py3-none-any.whl
Collecting scipy
  Using cached scipy-1.8.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (42.2 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24-py3-none-any.whl
Collecting numpy
  Using cached numpy-1.23.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.0 MB)
Collecting sklearn
  Using cached sklearn-0.0-py2.py3-none-any.whl
Collecting SimpleITK
  Using cached SimpleITK-2.1.1.2-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (48.4 MB)
Collecting pandas
  Using cached pandas-1.4.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.1-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.5.4-py3-none-any.whl (195 kB)
Collecting matplotlib
  Using cached matplotlib-3.5.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)
Collecting monai
  Using cached monai-0.9.0-202206131636-py3-none-any.whl (939 kB)
Collecting einops
  Using cached einops-0.4.1-py3-none-any.whl (28 kB)
Collecting ipython
  Using cached ipython-8.4.0-py3-none-any.whl (750 kB)
Collecting graphviz
  Using cached graphviz-0.20-py3-none-any.whl (46 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting scikit-learn
  Using cached scikit_learn-1.1.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.4 MB)
Collecting future
  Using cached future-0.18.2-py3-none-any.whl
Collecting pillow>=7.1.2
  Using cached Pillow-9.2.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.2 MB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting imageio>=2.4.1
  Using cached imageio-2.19.3-py3-none-any.whl (3.4 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.9 MB)
Collecting networkx>=2.2
  Using cached networkx-2.8.4-py3-none-any.whl (2.0 MB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.3.0-py3-none-any.whl (25 kB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.14-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.8 MB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.3-py3-none-any.whl (8.2 kB)
Collecting prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0
  Using cached prompt_toolkit-3.0.30-py3-none-any.whl (381 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.12.0-py3-none-any.whl (1.1 MB)
Collecting traitlets>=5
  Using cached traitlets-5.3.0-py3-none-any.whl (106 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting setuptools>=18.5
  Using cached setuptools-63.1.0-py3-none-any.whl (1.2 MB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting stack-data
  Using cached stack_data-0.3.0-py3-none-any.whl (23 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.3-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.34.2-py3-none-any.whl (944 kB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting pytz>=2020.1
  Using cached pytz-2022.1-py2.py3-none-any.whl (503 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.0-py3-none-any.whl (39 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.6.15-py3-none-any.whl (160 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.9-py2.py3-none-any.whl (138 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.3-py3-none-any.whl (61 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.1.0-py2.py3-none-any.whl (306 kB)
Collecting executing
  Using cached executing-0.8.3-py2.py3-none-any.whl (16 kB)
Collecting asttokens
  Using cached asttokens-2.0.5-py2.py3-none-any.whl (20 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.3.0 SimpleITK-2.1.1.2 argparse-1.4.0 asttokens-2.0.5 backcall-0.2.0 batchgenerators-0.24 certifi-2022.6.15 charset-normalizer-2.1.0 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.2 einops-0.4.1 executing-0.8.3 fonttools-4.34.2 future-0.18.2 graphviz-0.20 idna-3.3 imageio-2.19.3 ipython-8.4.0 jedi-0.18.1 joblib-1.1.0 kiwisolver-1.4.3 linecache2-1.0.0 matplotlib-3.5.2 matplotlib-inline-0.1.3 medpy-0.4.0 monai-0.9.0 networkx-2.8.4 nibabel-4.0.1 nnunet numpy-1.23.0 packaging-21.3 pandas-1.4.3 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.2.0 prompt-toolkit-3.0.30 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.12.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.14 pytz-2022.1 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.1 scipy-1.8.1 setuptools-63.1.0 six-1.16.0 sklearn-0.0 stack-data-0.3.0 threadpoolctl-3.1.0 tifffile-2022.5.4 torch-1.12.0 tqdm-4.64.0 traceback2-1.4.0 traitlets-5.3.0 typing-extensions-4.3.0 unittest2-1.1.0 urllib3-1.26.9 wcwidth-0.2.5


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task700/nnUNetTrainerV2_Hybrid__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 58 unique case ids, here are some examples: ['panc_0123' 'panc_0562' 'panc_0150' 'panc_0568' 'panc_0144' 'panc_0041'
 'panc_0140' 'panc_0128' 'panc_0106' 'panc_0090']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 58
number of cases that still need to be predicted: 58
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Img size: [ 64 160 160]
Patch size: (8, 16, 16)
Feature size: (8, 10, 10)
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Hybrid(
  (encoder): UNETREncoder(
    (vit): ViT(
      (patch_embedding): PatchEmbeddingBlock(
        (patch_embeddings): Sequential(
          (0): Rearrange('b c (h p1) (w p2) (d p3) -> b (h w d) (p1 p2 p3 c)', p1=8, p2=16, p3=16)
          (1): Linear(in_features=2048, out_features=768, bias=True)
        )
        (dropout): Dropout(p=0.0, inplace=False)
      )
      (blocks): ModuleList(
        (0): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (1): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (2): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (3): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (4): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (5): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (6): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (7): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (8): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (9): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (10): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
        (11): TransformerBlock(
          (mlp): MLPBlock(
            (linear1): Linear(in_features=768, out_features=3072, bias=True)
            (linear2): Linear(in_features=3072, out_features=768, bias=True)
            (fn): GELU(approximate=none)
            (drop1): Dropout(p=0.0, inplace=False)
            (drop2): Dropout(p=0.0, inplace=False)
          )
          (norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          (attn): SABlock(
            (out_proj): Linear(in_features=768, out_features=768, bias=True)
            (qkv): Linear(in_features=768, out_features=2304, bias=False)
            (input_rearrange): Rearrange('b h (qkv l d) -> qkv b l h d', qkv=3, l=12)
            (out_rearrange): Rearrange('b h l d -> b l (h d)')
            (drop_output): Dropout(p=0.0, inplace=False)
            (drop_weights): Dropout(p=0.0, inplace=False)
          )
          (norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
        )
      )
      (norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
    (encoder1): UnetrBasicBlock(
      (layer): UnetResBlock(
        (conv1): Convolution(
          (conv): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        )
        (conv2): Convolution(
          (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
        )
        (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        (norm1): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (norm2): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
        (conv3): Convolution(
          (conv): Conv3d(1, 32, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
        )
        (norm3): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=False, track_running_stats=False)
      )
    )
    (encoder2): UnetrPrUpBlock(
      (transp_conv_init): Convolution(
        (conv): ConvTranspose3d(768, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
      )
      (blocks): ModuleList(
        (0): Convolution(
          (conv): ConvTranspose3d(64, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
        )
        (1): Convolution(
          (conv): ConvTranspose3d(64, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
        )
      )
    )
    (encoder3): UnetrPrUpBlock(
      (transp_conv_init): Convolution(
        (conv): ConvTranspose3d(768, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
      )
      (blocks): ModuleList(
        (0): Convolution(
          (conv): ConvTranspose3d(128, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
        )
      )
    )
    (encoder4): UnetrPrUpBlock(
      (transp_conv_init): Convolution(
        (conv): ConvTranspose3d(768, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
      )
      (blocks): ModuleList()
    )
  )
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (tu): ModuleList(
    (0): ConvTranspose3d(768, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (1): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(128, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(64, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(32, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task700/nnUNetTrainerV2_Hybrid__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task700/nnUNetTrainerV2_Hybrid__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task700/nnUNetTrainerV2_Hybrid__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task700/nnUNetTrainerV2_Hybrid__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model']
starting preprocessing generator
starting prediction...
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0013.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
computing Gaussian
done
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0018.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 288
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0029.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 320, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224, 256], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 320, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224, 256], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 320, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224, 256], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 320, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224, 256], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 324
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0032.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 288, 608, 608)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224], [0, 75, 149, 224, 299, 373, 448], [0, 75, 149, 224, 299, 373, 448]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 288, 608, 608)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224], [0, 75, 149, 224, 299, 373, 448], [0, 75, 149, 224, 299, 373, 448]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 288, 608, 608)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224], [0, 75, 149, 224, 299, 373, 448], [0, 75, 149, 224, 299, 373, 448]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 288, 608, 608)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160, 192, 224], [0, 75, 149, 224, 299, 373, 448], [0, 75, 149, 224, 299, 373, 448]]
number of tiles: 392
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0022.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 574, 574)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 69, 138, 207, 276, 345, 414], [0, 69, 138, 207, 276, 345, 414]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 574, 574)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 69, 138, 207, 276, 345, 414], [0, 69, 138, 207, 276, 345, 414]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 574, 574)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 69, 138, 207, 276, 345, 414], [0, 69, 138, 207, 276, 345, 414]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 260, 574, 574)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 84, 112, 140, 168, 196], [0, 69, 138, 207, 276, 345, 414], [0, 69, 138, 207, 276, 345, 414]]
number of tiles: 392
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0008.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 252, 606, 606)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 63, 94, 125, 157, 188], [0, 74, 149, 223, 297, 372, 446], [0, 74, 149, 223, 297, 372, 446]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 252, 606, 606)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 63, 94, 125, 157, 188], [0, 74, 149, 223, 297, 372, 446], [0, 74, 149, 223, 297, 372, 446]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 252, 606, 606)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 63, 94, 125, 157, 188], [0, 74, 149, 223, 297, 372, 446], [0, 74, 149, 223, 297, 372, 446]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 252, 606, 606)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 63, 94, 125, 157, 188], [0, 74, 149, 223, 297, 372, 446], [0, 74, 149, 223, 297, 372, 446]]
number of tiles: 343
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0040.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0041.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 205, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 56, 85, 113, 141], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0056.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 238, 570, 570)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 145, 174], [0, 68, 137, 205, 273, 342, 410], [0, 68, 137, 205, 273, 342, 410]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 238, 570, 570)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 145, 174], [0, 68, 137, 205, 273, 342, 410], [0, 68, 137, 205, 273, 342, 410]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 238, 570, 570)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 145, 174], [0, 68, 137, 205, 273, 342, 410], [0, 68, 137, 205, 273, 342, 410]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 238, 570, 570)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 145, 174], [0, 68, 137, 205, 273, 342, 410], [0, 68, 137, 205, 273, 342, 410]]
number of tiles: 343
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0061.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 195, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 26, 52, 79, 105, 131], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 195, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 26, 52, 79, 105, 131], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 195, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 26, 52, 79, 105, 131], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 195, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 26, 52, 79, 105, 131], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0051.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 225, 508, 508)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 54, 80, 107, 134, 161], [0, 70, 139, 209, 278, 348], [0, 70, 139, 209, 278, 348]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 225, 508, 508)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 54, 80, 107, 134, 161], [0, 70, 139, 209, 278, 348], [0, 70, 139, 209, 278, 348]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 225, 508, 508)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 54, 80, 107, 134, 161], [0, 70, 139, 209, 278, 348], [0, 70, 139, 209, 278, 348]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 225, 508, 508)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 54, 80, 107, 134, 161], [0, 70, 139, 209, 278, 348], [0, 70, 139, 209, 278, 348]]
number of tiles: 252
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0034.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0070.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 515, 515)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 142, 213, 284, 355], [0, 71, 142, 213, 284, 355]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 515, 515)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 142, 213, 284, 355], [0, 71, 142, 213, 284, 355]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 515, 515)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 142, 213, 284, 355], [0, 71, 142, 213, 284, 355]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 515, 515)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 71, 142, 213, 284, 355], [0, 71, 142, 213, 284, 355]]
number of tiles: 288
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0073.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 228, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 55, 82, 109, 137, 164], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 228, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 55, 82, 109, 137, 164], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 228, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 55, 82, 109, 137, 164], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 228, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 27, 55, 82, 109, 137, 164], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0087.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0090.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 681, 681)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 74, 149, 223, 298, 372, 447, 521], [0, 74, 149, 223, 298, 372, 447, 521]]
number of tiles: 448
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 681, 681)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 74, 149, 223, 298, 372, 447, 521], [0, 74, 149, 223, 298, 372, 447, 521]]
number of tiles: 448
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 681, 681)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 74, 149, 223, 298, 372, 447, 521], [0, 74, 149, 223, 298, 372, 447, 521]]
number of tiles: 448
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 681, 681)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 74, 149, 223, 298, 372, 447, 521], [0, 74, 149, 223, 298, 372, 447, 521]]
number of tiles: 448
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0085.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 310, 461, 461)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154, 184, 215, 246], [0, 75, 150, 226, 301], [0, 75, 150, 226, 301]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 310, 461, 461)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154, 184, 215, 246], [0, 75, 150, 226, 301], [0, 75, 150, 226, 301]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 310, 461, 461)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154, 184, 215, 246], [0, 75, 150, 226, 301], [0, 75, 150, 226, 301]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 310, 461, 461)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154, 184, 215, 246], [0, 75, 150, 226, 301], [0, 75, 150, 226, 301]]
number of tiles: 225
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0063.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0108.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 278, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 122, 153, 183, 214], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 278, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 122, 153, 183, 214], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 278, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 122, 153, 183, 214], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 278, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 122, 153, 183, 214], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0112.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 609, 609)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 75, 150, 224, 299, 374, 449], [0, 75, 150, 224, 299, 374, 449]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 609, 609)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 75, 150, 224, 299, 374, 449], [0, 75, 150, 224, 299, 374, 449]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 609, 609)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 75, 150, 224, 299, 374, 449], [0, 75, 150, 224, 299, 374, 449]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 250, 609, 609)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 124, 155, 186], [0, 75, 150, 224, 299, 374, 449], [0, 75, 150, 224, 299, 374, 449]]
number of tiles: 343
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0120.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 218, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 92, 123, 154], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0123.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 280, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 93, 123, 154, 185, 216], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 288
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0117.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 288
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 288
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0106.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 262, 636, 636)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 85, 113, 141, 170, 198], [0, 79, 159, 238, 317, 397, 476], [0, 79, 159, 238, 317, 397, 476]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 262, 636, 636)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 85, 113, 141, 170, 198], [0, 79, 159, 238, 317, 397, 476], [0, 79, 159, 238, 317, 397, 476]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 262, 636, 636)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 85, 113, 141, 170, 198], [0, 79, 159, 238, 317, 397, 476], [0, 79, 159, 238, 317, 397, 476]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 262, 636, 636)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 85, 113, 141, 170, 198], [0, 79, 159, 238, 317, 397, 476], [0, 79, 159, 238, 317, 397, 476]]
number of tiles: 392
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0132.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 631, 631)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 78, 157, 236, 314, 392, 471], [0, 78, 157, 236, 314, 392, 471]]
number of tiles: 490
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 631, 631)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 78, 157, 236, 314, 392, 471], [0, 78, 157, 236, 314, 392, 471]]
number of tiles: 490
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 631, 631)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 78, 157, 236, 314, 392, 471], [0, 78, 157, 236, 314, 392, 471]]
number of tiles: 490
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 631, 631)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 78, 157, 236, 314, 392, 471], [0, 78, 157, 236, 314, 392, 471]]
number of tiles: 490
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0136.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 295, 518, 518)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 144, 173, 202, 231], [0, 72, 143, 215, 286, 358], [0, 72, 143, 215, 286, 358]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 295, 518, 518)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 144, 173, 202, 231], [0, 72, 143, 215, 286, 358], [0, 72, 143, 215, 286, 358]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 295, 518, 518)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 144, 173, 202, 231], [0, 72, 143, 215, 286, 358], [0, 72, 143, 215, 286, 358]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 295, 518, 518)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 58, 87, 116, 144, 173, 202, 231], [0, 72, 143, 215, 286, 358], [0, 72, 143, 215, 286, 358]]
number of tiles: 324
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0144.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 338, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 91, 122, 152, 183, 213, 244, 274], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 360
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 338, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 91, 122, 152, 183, 213, 244, 274], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 360
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 338, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 91, 122, 152, 183, 213, 244, 274], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 360
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 338, 555, 555)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 91, 122, 152, 183, 213, 244, 274], [0, 79, 158, 237, 316, 395], [0, 79, 158, 237, 316, 395]]
number of tiles: 360
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0150.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 633, 633)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 79, 158, 236, 315, 394, 473], [0, 79, 158, 236, 315, 394, 473]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 633, 633)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 79, 158, 236, 315, 394, 473], [0, 79, 158, 236, 315, 394, 473]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 633, 633)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 79, 158, 236, 315, 394, 473], [0, 79, 158, 236, 315, 394, 473]]
number of tiles: 343
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 633, 633)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 79, 158, 236, 315, 394, 473], [0, 79, 158, 236, 315, 394, 473]]
number of tiles: 343
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0140.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 590, 590)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 72, 143, 215, 287, 358, 430], [0, 72, 143, 215, 287, 358, 430]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 590, 590)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 72, 143, 215, 287, 358, 430], [0, 72, 143, 215, 287, 358, 430]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 590, 590)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 72, 143, 215, 287, 358, 430], [0, 72, 143, 215, 287, 358, 430]]
number of tiles: 392
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 258, 590, 590)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 55, 83, 111, 139, 166, 194], [0, 72, 143, 215, 287, 358, 430], [0, 72, 143, 215, 287, 358, 430]]
number of tiles: 392
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0128.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 519, 519)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 72, 144, 215, 287, 359], [0, 72, 144, 215, 287, 359]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 519, 519)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 72, 144, 215, 287, 359], [0, 72, 144, 215, 287, 359]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 519, 519)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 72, 144, 215, 287, 359], [0, 72, 144, 215, 287, 359]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 248, 519, 519)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 61, 92, 123, 153, 184], [0, 72, 144, 215, 287, 359], [0, 72, 144, 215, 287, 359]]
number of tiles: 252
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0157.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 240, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 252
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0167.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 513, 513)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 71, 141, 212, 282, 353], [0, 71, 141, 212, 282, 353]]
number of tiles: 216
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0176.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 308, 493, 493)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 92, 122, 152, 183, 214, 244], [0, 67, 133, 200, 266, 333], [0, 67, 133, 200, 266, 333]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 308, 493, 493)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 92, 122, 152, 183, 214, 244], [0, 67, 133, 200, 266, 333], [0, 67, 133, 200, 266, 333]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 308, 493, 493)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 92, 122, 152, 183, 214, 244], [0, 67, 133, 200, 266, 333], [0, 67, 133, 200, 266, 333]]
number of tiles: 324
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 308, 493, 493)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 61, 92, 122, 152, 183, 214, 244], [0, 67, 133, 200, 266, 333], [0, 67, 133, 200, 266, 333]]
number of tiles: 324
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0189.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 472, 472)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 78, 156, 234, 312], [0, 78, 156, 234, 312]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 472, 472)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 78, 156, 234, 312], [0, 78, 156, 234, 312]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 472, 472)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 78, 156, 234, 312], [0, 78, 156, 234, 312]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 222, 472, 472)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 63, 95, 126, 158], [0, 78, 156, 234, 312], [0, 78, 156, 234, 312]]
number of tiles: 150
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0174.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 330, 643, 643)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 59, 89, 118, 148, 177, 207, 236, 266], [0, 69, 138, 207, 276, 345, 414, 483], [0, 69, 138, 207, 276, 345, 414, 483]]
number of tiles: 640
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 330, 643, 643)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 59, 89, 118, 148, 177, 207, 236, 266], [0, 69, 138, 207, 276, 345, 414, 483], [0, 69, 138, 207, 276, 345, 414, 483]]
number of tiles: 640
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 330, 643, 643)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 59, 89, 118, 148, 177, 207, 236, 266], [0, 69, 138, 207, 276, 345, 414, 483], [0, 69, 138, 207, 276, 345, 414, 483]]
number of tiles: 640
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 330, 643, 643)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 59, 89, 118, 148, 177, 207, 236, 266], [0, 69, 138, 207, 276, 345, 414, 483], [0, 69, 138, 207, 276, 345, 414, 483]]
number of tiles: 640
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0155.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 568, 568)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 68, 136, 204, 272, 340, 408], [0, 68, 136, 204, 272, 340, 408]]
number of tiles: 490
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 568, 568)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 68, 136, 204, 272, 340, 408], [0, 68, 136, 204, 272, 340, 408]]
number of tiles: 490
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 568, 568)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 68, 136, 204, 272, 340, 408], [0, 68, 136, 204, 272, 340, 408]]
number of tiles: 490
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 328, 568, 568)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 29, 59, 88, 117, 147, 176, 205, 235, 264], [0, 68, 136, 204, 272, 340, 408], [0, 68, 136, 204, 272, 340, 408]]
number of tiles: 490
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0194.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 185, 526, 526)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 60, 91, 121], [0, 73, 146, 220, 293, 366], [0, 73, 146, 220, 293, 366]]
number of tiles: 180
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 185, 526, 526)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 60, 91, 121], [0, 73, 146, 220, 293, 366], [0, 73, 146, 220, 293, 366]]
number of tiles: 180
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 185, 526, 526)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 60, 91, 121], [0, 73, 146, 220, 293, 366], [0, 73, 146, 220, 293, 366]]
number of tiles: 180
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 185, 526, 526)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 30, 60, 91, 121], [0, 73, 146, 220, 293, 366], [0, 73, 146, 220, 293, 366]]
number of tiles: 180
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0544.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 411, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 188, 251], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 411, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 188, 251], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 411, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 188, 251], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 411, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 188, 251], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0546.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0547.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0545.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0191.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 235, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 86, 114, 142, 171], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 235, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 86, 114, 142, 171], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 235, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 86, 114, 142, 171], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 252
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 235, 500, 500)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 28, 57, 86, 114, 142, 171], [0, 68, 136, 204, 272, 340], [0, 68, 136, 204, 272, 340]]
number of tiles: 252
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0550.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 392, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 155, 232], [0, 70, 140, 211, 281, 351]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 392, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 155, 232], [0, 70, 140, 211, 281, 351]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 392, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 155, 232], [0, 70, 140, 211, 281, 351]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 392, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 155, 232], [0, 70, 140, 211, 281, 351]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0552.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0556.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0559.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0029.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 128, 512, 512) after crop: (1, 128, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 128, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 320, 513, 513)} 

(1, 320, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0056.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 768, 768) after crop: (1, 95, 768, 768) spacing: [5.         0.57942706 0.57942706] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.57942706, 0.57942706]), 'spacing_transposed': array([5.        , 0.57942706, 0.57942706]), 'data.shape (data is transposed)': (1, 95, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 238, 570, 570)} 

(1, 238, 570, 570)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0087.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 218, 513, 513)} 

(1, 218, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0120.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 218, 513, 513)} 

(1, 218, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0144.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 135, 512, 512) after crop: (1, 135, 512, 512) spacing: [5.         0.84600002 0.84600002] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.84600002, 0.84600002]), 'spacing_transposed': array([5.        , 0.84600002, 0.84600002]), 'data.shape (data is transposed)': (1, 135, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 338, 555, 555)} 

(1, 338, 555, 555)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0176.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 123, 512, 512) after crop: (1, 123, 512, 512) spacing: [5.         0.75099999 0.75099999] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.75099999, 0.75099999]), 'spacing_transposed': array([5.        , 0.75099999, 0.75099999]), 'data.shape (data is transposed)': (1, 123, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 308, 493, 493)} 

(1, 308, 493, 493)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0546.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 468, 576) after crop: (1, 72, 466, 575) spacing: [3.         0.69444442 0.69444442] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.69444442, 0.69444442]), 'spacing_transposed': array([3.        , 0.69444442, 0.69444442]), 'data.shape (data is transposed)': (1, 72, 466, 575)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 415, 512)} 

(1, 108, 415, 512)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0556.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 232, 288) after crop: (1, 72, 230, 287) spacing: [3.         1.38888884 1.38888884] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([3.        , 1.38888884, 1.38888884]), 'spacing_transposed': array([3.        , 1.38888884, 1.38888884]), 'data.shape (data is transposed)': (1, 72, 230, 287)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 409, 511)} 

(1, 108, 409, 511)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0572.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 468, 576) after crop: (1, 72, 463, 575) spacing: [3.         0.69444442 0.69444442] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.69444442, 0.69444442]), 'spacing_transposed': array([3.        , 0.69444442, 0.69444442]), 'data.shape (data is transposed)': (1, 72, 463, 575)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 412, 512)} 

(1, 108, 412, 512)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0032.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 115, 512, 512) after crop: (1, 115, 512, 512) spacing: [5.         0.92699999 0.92699999] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.92699999, 0.92699999]), 'spacing_transposed': array([5.        , 0.92699999, 0.92699999]), 'data.shape (data is transposed)': (1, 115, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 288, 608, 608)} 

(1, 288, 608, 608)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0061.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 78, 512, 512) after crop: (1, 78, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 78, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 195, 513, 513)} 

(1, 195, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0090.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 96, 512, 512) after crop: (1, 96, 512, 512) spacing: [5.         1.03699994 1.03699994] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 1.03699994, 1.03699994]), 'spacing_transposed': array([5.        , 1.03699994, 1.03699994]), 'data.shape (data is transposed)': (1, 96, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 240, 681, 681)} 

(1, 240, 681, 681)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0123.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 112, 512, 512) after crop: (1, 112, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 112, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 280, 513, 513)} 

(1, 280, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0150.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 768, 768) after crop: (1, 99, 768, 768) spacing: [5.         0.64322919 0.64322919] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.64322919, 0.64322919]), 'spacing_transposed': array([5.        , 0.64322919, 0.64322919]), 'data.shape (data is transposed)': (1, 99, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 248, 633, 633)} 

(1, 248, 633, 633)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0189.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 768, 768) after crop: (1, 89, 768, 768) spacing: [5.         0.47916666 0.47916666] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.47916666, 0.47916666]), 'spacing_transposed': array([5.        , 0.47916666, 0.47916666]), 'data.shape (data is transposed)': (1, 89, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 222, 472, 472)} 

(1, 222, 472, 472)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0547.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 260, 320) after crop: (1, 72, 258, 319) spacing: [3.     1.1875 1.1875] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([3.    , 1.1875, 1.1875]), 'spacing_transposed': array([3.    , 1.1875, 1.1875]), 'data.shape (data is transposed)': (1, 72, 258, 319)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 393, 486)} 

(1, 108, 393, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0559.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 320, 60, 320) after crop: (1, 319, 60, 319) spacing: [1.1875 3.     1.1875] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([1.1875, 3.    , 1.1875]), 'spacing_transposed': array([1.1875, 3.    , 1.1875]), 'data.shape (data is transposed)': (1, 319, 60, 319)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 189, 231, 486)} 

(1, 189, 231, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0573.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 260, 320) after crop: (1, 72, 257, 318) spacing: [3.     1.1875 1.1875] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([3.    , 1.1875, 1.1875]), 'spacing_transposed': array([3.    , 1.1875, 1.1875]), 'data.shape (data is transposed)': (1, 72, 257, 318)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 391, 484)} 

(1, 108, 391, 484)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0013.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 82, 512, 512) after crop: (1, 82, 512, 512) spacing: [5.         0.78100002 0.78100002] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78100002, 0.78100002]), 'spacing_transposed': array([5.        , 0.78100002, 0.78100002]), 'data.shape (data is transposed)': (1, 82, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 205, 513, 513)} 

(1, 205, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0040.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 100, 512, 512) after crop: (1, 100, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 100, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 250, 513, 513)} 

(1, 250, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0070.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 768, 768) after crop: (1, 103, 768, 768) spacing: [5.        0.5234375 0.5234375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.       , 0.5234375, 0.5234375]), 'spacing_transposed': array([5.       , 0.5234375, 0.5234375]), 'data.shape (data is transposed)': (1, 103, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 258, 515, 515)} 

(1, 258, 515, 515)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0108.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 111, 512, 512) after crop: (1, 111, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 111, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 278, 513, 513)} 

(1, 278, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0132.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 131, 512, 512) after crop: (1, 131, 512, 512) spacing: [5.         0.96100003 0.96100003] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.96100003, 0.96100003]), 'spacing_transposed': array([5.        , 0.96100003, 0.96100003]), 'data.shape (data is transposed)': (1, 131, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 328, 631, 631)} 

(1, 328, 631, 631)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0157.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 96, 512, 512) after crop: (1, 96, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 96, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 240, 513, 513)} 

(1, 240, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0194.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 74, 768, 768) after crop: (1, 74, 768, 768) spacing: [5.         0.53385419 0.53385419] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.53385419, 0.53385419]), 'spacing_transposed': array([5.        , 0.53385419, 0.53385419]), 'data.shape (data is transposed)': (1, 74, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 185, 526, 526)} 

(1, 185, 526, 526)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0550.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 468, 576) after crop: (1, 72, 440, 574) spacing: [3.         0.69444442 0.69444442] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.69444442, 0.69444442]), 'spacing_transposed': array([3.        , 0.69444442, 0.69444442]), 'data.shape (data is transposed)': (1, 72, 440, 574)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 392, 511)} 

(1, 108, 392, 511)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0562.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 320, 60, 320) after crop: (1, 319, 60, 319) spacing: [1.1875 3.     1.1875] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([1.1875, 3.    , 1.1875]), 'spacing_transposed': array([1.1875, 3.    , 1.1875]), 'data.shape (data is transposed)': (1, 319, 60, 319)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 189, 231, 486)} 

(1, 189, 231, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0576.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 260, 320) after crop: (1, 72, 258, 319) spacing: [3.     1.1875 1.1875] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([3.    , 1.1875, 1.1875]), 'spacing_transposed': array([3.    , 1.1875, 1.1875]), 'data.shape (data is transposed)': (1, 72, 258, 319)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 393, 486)} 

(1, 108, 393, 486)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0018.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 104, 512, 512) after crop: (1, 104, 512, 512) spacing: [5.         0.84600002 0.84600002] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.84600002, 0.84600002]), 'spacing_transposed': array([5.        , 0.84600002, 0.84600002]), 'data.shape (data is transposed)': (1, 104, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 260, 555, 555)} 

(1, 260, 555, 555)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0041.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 82, 512, 512) after crop: (1, 82, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 82, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 205, 513, 513)} 

(1, 205, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0073.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 91, 512, 512) after crop: (1, 91, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 91, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 228, 513, 513)} 

(1, 228, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0112.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 100, 768, 768) after crop: (1, 100, 768, 768) spacing: [5.         0.61848956 0.61848956] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.61848956, 0.61848956]), 'spacing_transposed': array([5.        , 0.61848956, 0.61848956]), 'data.shape (data is transposed)': (1, 100, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 250, 609, 609)} 

(1, 250, 609, 609)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0136.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 118, 512, 512) after crop: (1, 118, 512, 512) spacing: [5.         0.78899997 0.78899997] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78899997, 0.78899997]), 'spacing_transposed': array([5.        , 0.78899997, 0.78899997]), 'data.shape (data is transposed)': (1, 118, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 295, 518, 518)} 

(1, 295, 518, 518)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0167.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [5.         0.78200001 0.78200001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78200001, 0.78200001]), 'spacing_transposed': array([5.        , 0.78200001, 0.78200001]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 222, 513, 513)} 

(1, 222, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0544.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 468, 576) after crop: (1, 72, 462, 575) spacing: [3.         0.69444442 0.69444442] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.69444442, 0.69444442]), 'spacing_transposed': array([3.        , 0.69444442, 0.69444442]), 'data.shape (data is transposed)': (1, 72, 462, 575)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 411, 512)} 

(1, 108, 411, 512)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0552.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 260, 320) after crop: (1, 72, 258, 319) spacing: [3.     1.1875 1.1875] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([3.    , 1.1875, 1.1875]), 'spacing_transposed': array([3.    , 1.1875, 1.1875]), 'data.shape (data is transposed)': (1, 72, 258, 319)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 393, 486)} 

(1, 108, 393, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0563.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 468, 576) after crop: (1, 72, 466, 575) spacing: [3.         0.69444442 0.69444442] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.69444442, 0.69444442]), 'spacing_transposed': array([3.        , 0.69444442, 0.69444442]), 'data.shape (data is transposed)': (1, 72, 466, 575)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 415, 512)} 

(1, 108, 415, 512)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0581.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 468, 576) after crop: (1, 72, 466, 575) spacing: [3.         0.69444442 0.69444442] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.69444442, 0.69444442]), 'spacing_transposed': array([3.        , 0.69444442, 0.69444442]), 'data.shape (data is transposed)': (1, 72, 466, 575)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 415, 512)} 

(1, 108, 415, 512)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0022.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 104, 768, 768) after crop: (1, 104, 768, 768) spacing: [5.         0.58333331 0.58333331] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.58333331, 0.58333331]), 'spacing_transposed': array([5.        , 0.58333331, 0.58333331]), 'data.shape (data is transposed)': (1, 104, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 260, 574, 574)} 

(1, 260, 574, 574)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0051.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 90, 512, 512) after crop: (1, 90, 512, 512) spacing: [5.         0.77399999 0.77399999] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.77399999, 0.77399999]), 'spacing_transposed': array([5.        , 0.77399999, 0.77399999]), 'data.shape (data is transposed)': (1, 90, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 225, 508, 508)} 

(1, 225, 508, 508)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0085.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 124, 512, 512) after crop: (1, 124, 512, 512) spacing: [5.         0.70200002 0.70200002] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.70200002, 0.70200002]), 'spacing_transposed': array([5.        , 0.70200002, 0.70200002]), 'data.shape (data is transposed)': (1, 124, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 310, 461, 461)} 

(1, 310, 461, 461)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0117.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 768, 768) after crop: (1, 103, 768, 768) spacing: [5.        0.5078125 0.5078125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.       , 0.5078125, 0.5078125]), 'spacing_transposed': array([5.       , 0.5078125, 0.5078125]), 'data.shape (data is transposed)': (1, 103, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 258, 500, 500)} 

(1, 258, 500, 500)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0140.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 768, 768) after crop: (1, 103, 768, 768) spacing: [5.         0.59895831 0.59895831] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.59895831, 0.59895831]), 'spacing_transposed': array([5.        , 0.59895831, 0.59895831]), 'data.shape (data is transposed)': (1, 103, 768, 768)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 258, 590, 590)} 

(1, 258, 590, 590)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0174.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 132, 512, 512) after crop: (1, 132, 512, 512) spacing: [5.         0.98000002 0.98000002] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.98000002, 0.98000002]), 'spacing_transposed': array([5.        , 0.98000002, 0.98000002]), 'data.shape (data is transposed)': (1, 132, 512, 512)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 330, 643, 643)} 

(1, 330, 643, 643)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0545.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 320, 144, 260) after crop: (1, 319, 144, 259) spacing: [1.40629995 1.5        1.40629995] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([1.40629995, 1.5       , 1.40629995]), 'spacing_transposed': array([1.40629995, 1.5       , 1.40629995]), 'data.shape (data is transposed)': (1, 319, 144, 259)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 224, 277, 467)} 

(1, 224, 277, 467)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0553.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 320, 144, 260) after crop: (1, 319, 144, 259) spacing: [1.40629995 1.5        1.40629995] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([1.40629995, 1.5       , 1.40629995]), 'spacing_transposed': array([1.40629995, 1.5       , 1.40629995]), 'data.shape (data is transposed)': (1, 319, 144, 259)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 224, 277, 467)} 

(1, 224, 277, 467)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0568.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 468, 576) after crop: (1, 72, 456, 575) spacing: [3.         0.69444442 0.69444442] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.69444442, 0.69444442]), 'spacing_transposed': array([3.        , 0.69444442, 0.69444442]), 'data.shape (data is transposed)': (1, 72, 456, 575)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 108, 406, 512)} 

(1, 108, 406, 512)
preprocessing /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0598.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 320, 144, 260) after crop: (1, 319, 144, 259) spacing: [1.40629995 1.5        1.40629995] 

no separate z, order 3
no separate z, order 1
before: {'spacing': array([1.40629995, 1.5       , 1.40629995]), 'spacing_transposed': array([1.40629995, 1.5       , 1.40629995]), 'data.shape (data is transposed)': (1, 319, 144, 259)} 
after:  {'spacing': array([2.        , 0.78014851, 0.78014851]), 'data.shape (data is resampled)': (1, 224, 277, 467)} 

(1, 224, 277, 467)
This worker has ended successfully, no errors to report
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0013.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0029.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0022.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0040.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0056.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0051.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0070.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0087.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0085.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0108.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0120.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0117.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0132.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0144.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0140.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0157.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0176.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0174.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0194.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0546.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0545.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0550.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0556.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0553.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0562.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0572.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0568.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0576.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0598.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0018.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0032.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0008.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0041.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0061.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0034.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0073.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0090.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0063.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0112.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0123.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0106.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0136.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0150.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0128.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0167.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0189.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0155.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0544.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0547.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0191.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0552.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0559.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0549.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0563.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0573.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0561.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0581.nii.gz
force_separate_z: None interpolation order: 1
separate z: False lowres axis None
no separate z, order 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0575.nii.gz
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0553.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0549.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0562.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 189, 231, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 31, 62, 94, 125], [0, 71], [0, 65, 130, 196, 261, 326]]
number of tiles: 60
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0563.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0572.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 412, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 189, 252], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 412, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 189, 252], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 412, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 189, 252], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 412, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 63, 126, 189, 252], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0573.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 391, 484)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 154, 231], [0, 65, 130, 194, 259, 324]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 391, 484)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 154, 231], [0, 65, 130, 194, 259, 324]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 391, 484)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 154, 231], [0, 65, 130, 194, 259, 324]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 391, 484)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 77, 154, 231], [0, 65, 130, 194, 259, 324]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0568.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 406, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 123, 184, 246], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 406, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 123, 184, 246], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 406, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 123, 184, 246], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 406, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 123, 184, 246], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0561.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 409, 511)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 62, 124, 187, 249], [0, 70, 140, 211, 281, 351]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0576.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 393, 486)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 78, 155, 233], [0, 65, 130, 196, 261, 326]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0581.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 415, 512)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 22, 44], [0, 64, 128, 191, 255], [0, 70, 141, 211, 282, 352]]
number of tiles: 90
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0598.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
predicting /exports/lkeb-hpc/smaijer/output/700/3d_fullres/nnUNetTrainerV2_Hybrid/700/imagesTsA/panc_0575.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 224, 277, 467)
patch size: [ 64 160 160]
steps (x, y, and z): [[0, 32, 64, 96, 128, 160], [0, 58, 117], [0, 77, 154, 230, 307]]
number of tiles: 90
using precomputed Gaussian
prediction done
This output is too large for python process-process communication. Saving output temporarily to disk
inference done. Now waiting for the segmentation export to finish...
postprocessing...
