Starting at Wed Nov  2 08:25:53 CET 2022
Running on hosts: res-hpc-lkeb07
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 6.
Account: div2-lkeb
Job ID: 12739588
Job name: PancreasInferenceEval
Node running script: res-hpc-lkeb07
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Wed Nov  2 08:25:55 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     Off  | 00000000:D8:00.0 Off |                  Off |
| 33%   35C    P0    58W / 260W |      0MiB / 24220MiB |      4%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-b9lol3l_/hiddenlayer_bedfa2e7edf44608b6c6ad2aac64deb4
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.1-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.5-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0.tar.gz (151 kB)
Collecting scipy
  Using cached scipy-1.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (33.7 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24.tar.gz (61 kB)
Collecting numpy
  Using cached numpy-1.23.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)
Collecting sklearn
  Using cached sklearn-0.0.tar.gz (1.1 kB)
Collecting SimpleITK
  Using cached SimpleITK-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (52.8 MB)
Collecting pandas
  Using cached pandas-1.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.2-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.10.10-py3-none-any.whl (210 kB)
Collecting matplotlib
  Using cached matplotlib-3.6.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.8 MB)
Collecting monai
  Using cached monai-1.0.1-202210241233-py3-none-any.whl (1.1 MB)
Collecting einops
  Using cached einops-0.5.0-py3-none-any.whl (36 kB)
Collecting ipython
  Using cached ipython-8.6.0-py3-none-any.whl (761 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.4.0-py3-none-any.whl (26 kB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.3.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.3 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.5 MB)
Collecting future
  Using cached future-0.18.2.tar.gz (829 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.8 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting networkx>=2.2
  Downloading networkx-2.8.8-py3-none-any.whl (2.0 MB)
Collecting imageio>=2.4.1
  Using cached imageio-2.22.3-py3-none-any.whl (3.4 MB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.19-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
Collecting stack-data
  Using cached stack_data-0.6.0-py3-none-any.whl (24 kB)
Collecting prompt-toolkit<3.1.0,>3.0.1
  Using cached prompt_toolkit-3.0.31-py3-none-any.whl (382 kB)
Collecting traitlets>=5
  Using cached traitlets-5.5.0-py3-none-any.whl (107 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.13.0-py3-none-any.whl (1.1 MB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting contourpy>=1.0.1
  Using cached contourpy-1.0.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (296 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.38.0-py3-none-any.whl (965 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting setuptools
  Using cached setuptools-65.5.0-py3-none-any.whl (1.2 MB)
Collecting pytz>=2020.1
  Using cached pytz-2022.6-py2.py3-none-any.whl (498 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.1-py3-none-any.whl (39 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.12-py2.py3-none-any.whl (140 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.9.24-py3-none-any.whl (161 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.2.0-py3-none-any.whl (297 kB)
Collecting executing>=1.2.0
  Using cached executing-1.2.0-py2.py3-none-any.whl (24 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting asttokens>=2.1.0
  Using cached asttokens-2.1.0-py2.py3-none-any.whl (26 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Using legacy 'setup.py install' for batchgenerators, since package 'wheel' is not installed.
Using legacy 'setup.py install' for future, since package 'wheel' is not installed.
Using legacy 'setup.py install' for medpy, since package 'wheel' is not installed.
Using legacy 'setup.py install' for sklearn, since package 'wheel' is not installed.
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, contourpy, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
    Running setup.py install for future: started
    Running setup.py install for future: finished with status 'done'
    Running setup.py install for sklearn: started
    Running setup.py install for sklearn: finished with status 'done'
    Running setup.py install for medpy: started
    Running setup.py install for medpy: finished with status 'done'
    Running setup.py install for batchgenerators: started
    Running setup.py install for batchgenerators: finished with status 'done'
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.4.1 SimpleITK-2.2.0 argparse-1.4.0 asttokens-2.1.0 backcall-0.2.0 batchgenerators-0.24 certifi-2022.9.24 charset-normalizer-2.1.1 contourpy-1.0.6 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.5 einops-0.5.0 executing-1.2.0 fonttools-4.38.0 future-0.18.2 graphviz-0.20.1 idna-3.4 imageio-2.22.3 ipython-8.6.0 jedi-0.18.1 joblib-1.2.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.6.1 matplotlib-inline-0.1.6 medpy-0.4.0 monai-1.0.1 networkx-2.8.8 nibabel-4.0.2 nnunet numpy-1.23.4 packaging-21.3 pandas-1.5.1 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.3.0 prompt-toolkit-3.0.31 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.13.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.19 pytz-2022.6 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.3 scipy-1.9.3 setuptools-65.5.0 six-1.16.0 sklearn-0.0 stack-data-0.6.0 threadpoolctl-3.1.0 tifffile-2022.10.10 torch-1.12.0 tqdm-4.64.1 traceback2-1.4.0 traitlets-5.5.0 typing-extensions-4.4.0 unittest2-1.1.0 urllib3-1.26.12 wcwidth-0.2.5


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task600/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 8 unique case ids, here are some examples: ['panc_00006' 'panc_00000' 'panc_00007' 'panc_00003' 'panc_00004'
 'panc_00001' 'panc_00006' 'panc_00005']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 8
number of cases that still need to be predicted: 8
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task600/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task600/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task600/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task600/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task600/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
[Timing] starting preprocessing generator took 1.239776611328125e-05 seconds
starting prediction...
Preprocessing with 6 multithreads
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00005.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.9132421016693115 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 74, 168, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 1.212831974029541, transposing took 3.8623809814453125e-05 and 4.5299530029296875e-06, resampling/normalizing took 0.8512623310089111.
[Timing] preprocessing function took 2.068117618560791 seconds
(1, 74, 168, 185)
[Timing] total time for preprocessing this item is 2.0686347484588623
[Timing] This worker has ended successfully, no errors to report. It took 2.1046438217163086 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00002.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.964059591293335 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 185, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 1.2642476558685303, transposing took 3.337860107421875e-05 and 4.291534423828125e-06, resampling/normalizing took 0.9025435447692871.
[Timing] preprocessing function took 2.1703269481658936 seconds
(1, 70, 185, 185)
[Timing] total time for preprocessing this item is 9.753862142562866
[Timing] This worker has ended successfully, no errors to report. It took 26.79577660560608 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00003.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.9467957019805908 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 185, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 1.2431201934814453, transposing took 3.647804260253906e-05 and 5.7220458984375e-06, resampling/normalizing took 0.912651777267456.
[Timing] preprocessing function took 2.1591129302978516 seconds
(1, 70, 185, 185)
[Timing] total time for preprocessing this item is 18.25265121459961
[Timing] This worker has ended successfully, no errors to report. It took 55.253852128982544 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00004.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.9133257865905762 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 438, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 438, 512)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 90, 288, 337)} 

[Timing] Preprocessing specifics: loading&cropping took 1.5117583274841309, transposing took 8.153915405273438e-05 and 2.5272369384765625e-05, resampling/normalizing took 2.275437116622925.
[Timing] preprocessing function took 3.8012278079986572 seconds
(1, 90, 288, 337)
[Timing] total time for preprocessing this item is 22.494354963302612
[Timing] This worker has ended successfully, no errors to report. It took 59.53357434272766 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00000.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.978522539138794 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 318, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 318, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 184, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 1.2784991264343262, transposing took 3.457069396972656e-05 and 4.5299530029296875e-06, resampling/normalizing took 0.8994786739349365.
[Timing] preprocessing function took 2.204122304916382 seconds
(1, 70, 184, 185)
[Timing] total time for preprocessing this item is 9.753236293792725
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00006.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1931748390197754 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 300, 320) spacing: [3.         0.66666669 0.66666669] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66666669, 0.66666669]), 'spacing_transposed': array([3.        , 0.66666669, 0.66666669]), 'data.shape (data is transposed)': (1, 42, 300, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 74, 168, 180)} 

[Timing] Preprocessing specifics: loading&cropping took 0.3879241943359375, transposing took 1.3113021850585938e-05 and 1.430511474609375e-06, resampling/normalizing took 0.6196751594543457.
[Timing] preprocessing function took 1.0224905014038086 seconds
(1, 74, 168, 180)
[Timing] total time for preprocessing this item is 41.16871690750122
[Timing] This worker has ended successfully, no errors to report. It took 59.60656666755676 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00001.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.9481203556060791 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 185, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 1.2361197471618652, transposing took 4.696846008300781e-05 and 5.245208740234375e-06, resampling/normalizing took 0.9491260051727295.
[Timing] preprocessing function took 2.1924335956573486 seconds
(1, 70, 185, 185)
[Timing] total time for preprocessing this item is 13.989500522613525
preprocessing /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00007.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.18886685371398926 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 74, 168, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 0.38105177879333496, transposing took 1.6689300537109375e-05 and 1.6689300537109375e-06, resampling/normalizing took 0.6498682498931885.
[Timing] preprocessing function took 1.0455904006958008 seconds
(1, 74, 168, 185)
[Timing] total time for preprocessing this item is 36.92745566368103
[Timing] This worker has ended successfully, no errors to report. It took 59.59024429321289 seconds.
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00005.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.059943675994873 seconds
[Timing] - Saving the segmentation took 0.13869857788085938 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00002.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9674792289733887 seconds
[Timing] - Saving the segmentation took 0.02431035041809082 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00003.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9646430015563965 seconds
[Timing] - Saving the segmentation took 0.04730868339538574 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00006.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.960684061050415 seconds
[Timing] - Saving the segmentation took 0.03870058059692383 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00000.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.0081074237823486 seconds
[Timing] - Saving the segmentation took 0.03821444511413574 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00001.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9679675102233887 seconds
[Timing] - Saving the segmentation took 0.03272747993469238 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00004.nii.gz
[Timing] - Resampling the segmentation to original shape took 2.2444989681243896 seconds
[Timing] - Saving the segmentation took 0.051018476486206055 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00007.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9192533493041992 seconds
[Timing] - Saving the segmentation took 0.025213241577148438 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00005.nii.gz
[Timing] loading took 0.05507183074951172 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
computing Gaussian
done
prediction done
[Timing] fold 0 prediction took 4.190144777297974 seconds
[Timing] loading another fold took 0.03135371208190918 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8007991313934326 seconds
[Timing] loading another fold took 0.03182196617126465 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7920041084289551 seconds
[Timing] loading another fold took 0.031484365463256836 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7953107357025146 seconds
[Timing] loading another fold took 0.03139162063598633 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7980446815490723 seconds
[Timing] normalising with folds took 0.0039751529693603516 seconds
[Timing] transposing backwards took 3.790855407714844e-05 seconds
[Timing] full prediction took 9.774654150009155 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00000.nii.gz
[Timing] loading took 0.03253817558288574 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8267526626586914 seconds
[Timing] loading another fold took 0.03249859809875488 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8090629577636719 seconds
[Timing] loading another fold took 0.030536890029907227 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8002111911773682 seconds
[Timing] loading another fold took 0.030836105346679688 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7989568710327148 seconds
[Timing] loading another fold took 0.030483722686767578 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8005993366241455 seconds
[Timing] normalising with folds took 0.003896951675415039 seconds
[Timing] transposing backwards took 1.9550323486328125e-05 seconds
[Timing] full prediction took 14.009660005569458 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00002.nii.gz
[Timing] loading took 0.03931260108947754 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8316001892089844 seconds
[Timing] loading another fold took 0.03199315071105957 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8207612037658691 seconds
[Timing] loading another fold took 0.03156542778015137 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8188040256500244 seconds
[Timing] loading another fold took 0.03045511245727539 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8186488151550293 seconds
[Timing] loading another fold took 0.030592679977416992 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8196725845336914 seconds
[Timing] normalising with folds took 0.00395655632019043 seconds
[Timing] transposing backwards took 2.3603439331054688e-05 seconds
[Timing] full prediction took 18.30830669403076 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00001.nii.gz
[Timing] loading took 0.0356898307800293 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.828819751739502 seconds
[Timing] loading another fold took 0.030426025390625 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8194363117218018 seconds
[Timing] loading another fold took 0.03026747703552246 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8057947158813477 seconds
[Timing] loading another fold took 0.030408382415771484 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8115677833557129 seconds
[Timing] loading another fold took 0.03041243553161621 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8052537441253662 seconds
[Timing] normalising with folds took 0.004015445709228516 seconds
[Timing] transposing backwards took 2.2172927856445312e-05 seconds
[Timing] full prediction took 22.56252932548523 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00003.nii.gz
[Timing] loading took 0.03227496147155762 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8243916034698486 seconds
[Timing] loading another fold took 0.03066563606262207 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8187031745910645 seconds
[Timing] loading another fold took 0.030315876007080078 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.806586503982544 seconds
[Timing] loading another fold took 0.03080010414123535 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8104805946350098 seconds
[Timing] loading another fold took 0.030619144439697266 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8074069023132324 seconds
[Timing] normalising with folds took 0.003900766372680664 seconds
[Timing] transposing backwards took 1.9788742065429688e-05 seconds
[Timing] full prediction took 26.815529584884644 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00004.nii.gz
[Timing] loading took 0.03119492530822754 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 4.7486748695373535 seconds
[Timing] loading another fold took 0.03176450729370117 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.742324590682983 seconds
[Timing] loading another fold took 0.03184390068054199 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.754536151885986 seconds
[Timing] loading another fold took 0.03188824653625488 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.793644905090332 seconds
[Timing] loading another fold took 0.03206229209899902 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.779399156570435 seconds
[Timing] normalising with folds took 0.006301403045654297 seconds
[Timing] transposing backwards took 3.266334533691406e-05 seconds
[Timing] full prediction took 50.84315228462219 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00006.nii.gz
[Timing] loading took 0.034509897232055664 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8489551544189453 seconds
[Timing] loading another fold took 0.031162261962890625 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8467137813568115 seconds
[Timing] loading another fold took 0.032724857330322266 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8399477005004883 seconds
[Timing] loading another fold took 0.030568599700927734 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8310222625732422 seconds
[Timing] loading another fold took 0.030717849731445312 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8164355754852295 seconds
[Timing] normalising with folds took 0.0039403438568115234 seconds
[Timing] transposing backwards took 2.1219253540039062e-05 seconds
[Timing] full prediction took 55.30562233924866 seconds
predicting /exports/lkeb-hpc/smaijer/output/600/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00007.nii.gz
[Timing] loading took 0.03179335594177246 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8242406845092773 seconds
[Timing] loading another fold took 0.03093409538269043 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8324103355407715 seconds
[Timing] loading another fold took 0.030678510665893555 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8155820369720459 seconds
[Timing] loading another fold took 0.030793428421020508 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8263697624206543 seconds
[Timing] loading another fold took 0.03057241439819336 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8173844814300537 seconds
[Timing] normalising with folds took 0.0037288665771484375 seconds
[Timing] transposing backwards took 2.2411346435546875e-05 seconds
[Timing] full prediction took 59.60587692260742 seconds
[Timing] Another preprocessing process done, it took 59.65331673622131 seconds
[Timing] Another preprocessing process done, it took 59.65336203575134 seconds
[Timing] Another preprocessing process done, it took 59.65338063240051 seconds
[Timing] Another preprocessing process done, it took 59.653395652770996 seconds
[Timing] Another preprocessing process done, it took 59.65340995788574 seconds
[Timing] Another preprocessing process done, it took 59.65342354774475 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
[Timing] postprocessing took 1.2830853462219238 seconds


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Program finished with exit code 0 at: Wed Nov  2 08:25:53 CET 2022
