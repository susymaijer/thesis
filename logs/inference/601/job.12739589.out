Starting at Wed Nov  2 08:26:31 CET 2022
Running on hosts: res-hpc-lkeb06
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 6.
Account: div2-lkeb
Job ID: 12739589
Job name: PancreasInferenceEval
Node running script: res-hpc-lkeb06
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Wed Nov  2 08:26:33 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     Off  | 00000000:3B:00.0 Off |                  Off |
| 31%   31C    P0    65W / 260W |      0MiB / 24220MiB |      4%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-5cdtdtl6/hiddenlayer_bea763c0d1f1408b98d9ef63909d35b7
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.1-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.5-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0.tar.gz (151 kB)
Collecting scipy
  Using cached scipy-1.9.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (33.7 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24.tar.gz (61 kB)
Collecting numpy
  Using cached numpy-1.23.4-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.1 MB)
Collecting sklearn
  Using cached sklearn-0.0.tar.gz (1.1 kB)
Collecting SimpleITK
  Using cached SimpleITK-2.2.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (52.8 MB)
Collecting pandas
  Using cached pandas-1.5.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.1 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.2-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Using cached tifffile-2022.10.10-py3-none-any.whl (210 kB)
Collecting matplotlib
  Using cached matplotlib-3.6.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.8 MB)
Collecting monai
  Using cached monai-1.0.1-202210241233-py3-none-any.whl (1.1 MB)
Collecting einops
  Using cached einops-0.5.0-py3-none-any.whl (36 kB)
Collecting ipython
  Using cached ipython-8.6.0-py3-none-any.whl (761 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.4.0-py3-none-any.whl (26 kB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.3.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.3 MB)
Collecting scikit-learn
  Using cached scikit_learn-1.1.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.5 MB)
Collecting future
  Using cached future-0.18.2.tar.gz (829 kB)
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting networkx>=2.2
  Using cached networkx-2.8.8-py3-none-any.whl (2.0 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.4.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.8 MB)
Collecting imageio>=2.4.1
  Using cached imageio-2.22.3-py3-none-any.whl (3.4 MB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.19-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.0 MB)
Collecting prompt-toolkit<3.1.0,>3.0.1
  Using cached prompt_toolkit-3.0.31-py3-none-any.whl (382 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting stack-data
  Using cached stack_data-0.6.0-py3-none-any.whl (24 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.6-py3-none-any.whl (9.4 kB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.13.0-py3-none-any.whl (1.1 MB)
Collecting traitlets>=5
  Using cached traitlets-5.5.0-py3-none-any.whl (107 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting contourpy>=1.0.1
  Using cached contourpy-1.0.6-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (296 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.38.0-py3-none-any.whl (965 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting setuptools
  Using cached setuptools-65.5.0-py3-none-any.whl (1.2 MB)
Collecting pytz>=2020.1
  Using cached pytz-2022.6-py2.py3-none-any.whl (498 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.9.24-py3-none-any.whl (161 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.1-py3-none-any.whl (39 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.4-py3-none-any.whl (61 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.12-py2.py3-none-any.whl (140 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.2.0-py3-none-any.whl (297 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting executing>=1.2.0
  Using cached executing-1.2.0-py2.py3-none-any.whl (24 kB)
Collecting asttokens>=2.1.0
  Using cached asttokens-2.1.0-py2.py3-none-any.whl (26 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Using legacy 'setup.py install' for batchgenerators, since package 'wheel' is not installed.
Using legacy 'setup.py install' for future, since package 'wheel' is not installed.
Using legacy 'setup.py install' for medpy, since package 'wheel' is not installed.
Using legacy 'setup.py install' for sklearn, since package 'wheel' is not installed.
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, contourpy, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
    Running setup.py install for future: started
    Running setup.py install for future: finished with status 'done'
    Running setup.py install for sklearn: started
    Running setup.py install for sklearn: finished with status 'done'
    Running setup.py install for medpy: started
    Running setup.py install for medpy: finished with status 'done'
    Running setup.py install for batchgenerators: started
    Running setup.py install for batchgenerators: finished with status 'done'
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.4.1 SimpleITK-2.2.0 argparse-1.4.0 asttokens-2.1.0 backcall-0.2.0 batchgenerators-0.24 certifi-2022.9.24 charset-normalizer-2.1.1 contourpy-1.0.6 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.5 einops-0.5.0 executing-1.2.0 fonttools-4.38.0 future-0.18.2 graphviz-0.20.1 idna-3.4 imageio-2.22.3 ipython-8.6.0 jedi-0.18.1 joblib-1.2.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.6.1 matplotlib-inline-0.1.6 medpy-0.4.0 monai-1.0.1 networkx-2.8.8 nibabel-4.0.2 nnunet numpy-1.23.4 packaging-21.3 pandas-1.5.1 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.3.0 prompt-toolkit-3.0.31 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.13.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.19 pytz-2022.6 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.3 scipy-1.9.3 setuptools-65.5.0 six-1.16.0 sklearn-0.0 stack-data-0.6.0 threadpoolctl-3.1.0 tifffile-2022.10.10 torch-1.12.0 tqdm-4.64.1 traceback2-1.4.0 traitlets-5.5.0 typing-extensions-4.4.0 unittest2-1.1.0 urllib3-1.26.12 wcwidth-0.2.5


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task601/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 8 unique case ids, here are some examples: ['panc_00001' 'panc_00000' 'panc_00007' 'panc_00003' 'panc_00001'
 'panc_00002' 'panc_00006' 'panc_00000']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 8
number of cases that still need to be predicted: 8
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task601/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task601/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task601/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task601/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task601/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
[Timing] starting preprocessing generator took 1.1444091796875e-05 seconds
starting prediction...
Preprocessing with 6 multithreads
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00002.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.16633820533752441 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 185, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 0.46157169342041016, transposing took 3.6716461181640625e-05 and 5.245208740234375e-06, resampling/normalizing took 0.8675577640533447.
[Timing] preprocessing function took 1.3334991931915283 seconds
(1, 70, 185, 185)
[Timing] total time for preprocessing this item is 9.461507797241211
[Timing] This worker has ended successfully, no errors to report. It took 34.98386597633362 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00005.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.16967034339904785 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 74, 168, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 0.45598578453063965, transposing took 2.4080276489257812e-05 and 4.0531158447265625e-06, resampling/normalizing took 0.8177902698516846.
[Timing] preprocessing function took 1.2774243354797363 seconds
(1, 74, 168, 185)
[Timing] total time for preprocessing this item is 13.696176052093506
[Timing] This worker has ended successfully, no errors to report. It took 58.63082766532898 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00003.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.16588282585144043 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 185, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4585111141204834, transposing took 3.1948089599609375e-05 and 3.5762786865234375e-06, resampling/normalizing took 0.8586478233337402.
[Timing] preprocessing function took 1.3206300735473633 seconds
(1, 70, 185, 185)
[Timing] total time for preprocessing this item is 18.001078844070435
[Timing] This worker has ended successfully, no errors to report. It took 58.77587270736694 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00000.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1696608066558838 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 318, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 318, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 184, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4530036449432373, transposing took 4.1484832763671875e-05 and 7.62939453125e-06, resampling/normalizing took 0.8352608680725098.
[Timing] preprocessing function took 1.293341875076294 seconds
(1, 70, 184, 185)
[Timing] total time for preprocessing this item is 1.2937591075897217
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00006.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.18514442443847656 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 300, 320) spacing: [3.         0.66666669 0.66666669] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66666669, 0.66666669]), 'spacing_transposed': array([3.        , 0.66666669, 0.66666669]), 'data.shape (data is transposed)': (1, 42, 300, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 74, 168, 180)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4153933525085449, transposing took 1.52587890625e-05 and 1.430511474609375e-06, resampling/normalizing took 0.6553974151611328.
[Timing] preprocessing function took 1.0868966579437256 seconds
(1, 74, 168, 180)
[Timing] total time for preprocessing this item is 21.02024507522583
[Timing] This worker has ended successfully, no errors to report. It took 58.84096598625183 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00001.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.13628625869750977 seconds
before crop: (1, 40, 320, 320) after crop: (1, 40, 320, 320) spacing: [3.     0.6875 0.6875] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.    , 0.6875, 0.6875]), 'spacing_transposed': array([3.    , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 40, 320, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 70, 185, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 0.4184877872467041, transposing took 2.86102294921875e-05 and 4.291534423828125e-06, resampling/normalizing took 0.8597927093505859.
[Timing] preprocessing function took 1.2813613414764404 seconds
(1, 70, 185, 185)
[Timing] total time for preprocessing this item is 1.305621862411499
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00007.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.1596827507019043 seconds
before crop: (1, 42, 320, 320) after crop: (1, 42, 292, 320) spacing: [3.         0.68493152 0.68493152] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.68493152, 0.68493152]), 'spacing_transposed': array([3.        , 0.68493152, 0.68493152]), 'data.shape (data is transposed)': (1, 42, 292, 320)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 74, 168, 185)} 

[Timing] Preprocessing specifics: loading&cropping took 0.38664817810058594, transposing took 9.775161743164062e-06 and 9.5367431640625e-07, resampling/normalizing took 0.6895689964294434.
[Timing] preprocessing function took 1.096830129623413 seconds
(1, 74, 168, 185)
[Timing] total time for preprocessing this item is 25.225134134292603
[Timing] This worker has ended successfully, no errors to report. It took 58.82312202453613 seconds.
preprocessing /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00004.nii.gz
using preprocessor GenericPreprocessor
[Timing] Loading took 0.15636825561523438 seconds
before crop: (1, 35, 512, 512) after crop: (1, 35, 438, 512) spacing: [4.4000001 0.78125   0.78125  ] 

ff voor mezelf want snap data files niet, hier lengte van data files1
separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.4000001, 0.78125  , 0.78125  ]), 'spacing_transposed': array([4.4000001, 0.78125  , 0.78125  ]), 'data.shape (data is transposed)': (1, 35, 438, 512)} 
after:  {'spacing': array([1.70314997, 1.1875    , 1.1875    ]), 'data.shape (data is resampled)': (1, 90, 288, 337)} 

[Timing] Preprocessing specifics: loading&cropping took 0.7765874862670898, transposing took 3.0517578125e-05 and 3.5762786865234375e-06, resampling/normalizing took 2.3566792011260986.
[Timing] preprocessing function took 3.1475167274475098 seconds
(1, 90, 288, 337)
[Timing] total time for preprocessing this item is 30.684962034225464
[Timing] This worker has ended successfully, no errors to report. It took 58.7639365196228 seconds.
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00000.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.003800868988037 seconds
[Timing] - Saving the segmentation took 0.03887295722961426 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00002.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.979682445526123 seconds
[Timing] - Saving the segmentation took 0.02452564239501953 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00003.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9867372512817383 seconds
[Timing] - Saving the segmentation took 0.02797389030456543 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00007.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9550485610961914 seconds
[Timing] - Saving the segmentation took 0.03183627128601074 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00001.nii.gz
[Timing] - Resampling the segmentation to original shape took 1.0075960159301758 seconds
[Timing] - Saving the segmentation took 0.03662896156311035 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00005.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9406969547271729 seconds
[Timing] - Saving the segmentation took 0.02501058578491211 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00006.nii.gz
[Timing] - Resampling the segmentation to original shape took 0.9742605686187744 seconds
[Timing] - Saving the segmentation took 0.0244290828704834 seconds
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00004.nii.gz
[Timing] - Resampling the segmentation to original shape took 2.2855780124664307 seconds
[Timing] - Saving the segmentation took 0.051696062088012695 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00000.nii.gz
[Timing] loading took 0.058641910552978516 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
computing Gaussian
done
prediction done
[Timing] fold 0 prediction took 4.747424125671387 seconds
[Timing] loading another fold took 0.03217887878417969 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8150787353515625 seconds
[Timing] loading another fold took 0.031946659088134766 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7989470958709717 seconds
[Timing] loading another fold took 0.03195309638977051 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8017573356628418 seconds
[Timing] loading another fold took 0.031760215759277344 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 184, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 56], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.805243730545044 seconds
[Timing] normalising with folds took 0.004525661468505859 seconds
[Timing] transposing backwards took 3.5762786865234375e-05 seconds
[Timing] full prediction took 9.50364375114441 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00001.nii.gz
[Timing] loading took 0.048539161682128906 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8391649723052979 seconds
[Timing] loading another fold took 0.03236246109008789 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8139796257019043 seconds
[Timing] loading another fold took 0.031647682189941406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8153877258300781 seconds
[Timing] loading another fold took 0.03170919418334961 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8141696453094482 seconds
[Timing] loading another fold took 0.031838417053222656 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.813805103302002 seconds
[Timing] normalising with folds took 0.004149913787841797 seconds
[Timing] transposing backwards took 2.4557113647460938e-05 seconds
[Timing] full prediction took 13.805773258209229 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00002.nii.gz
[Timing] loading took 0.044557809829711914 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.825108528137207 seconds
[Timing] loading another fold took 0.03181886672973633 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8123598098754883 seconds
[Timing] loading another fold took 0.031464576721191406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8217930793762207 seconds
[Timing] loading another fold took 0.031683921813964844 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.804703950881958 seconds
[Timing] loading another fold took 0.031557321548461914 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8005805015563965 seconds
[Timing] normalising with folds took 0.004313230514526367 seconds
[Timing] transposing backwards took 2.86102294921875e-05 seconds
[Timing] full prediction took 18.067733764648438 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00005.nii.gz
[Timing] loading took 0.04105401039123535 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8251323699951172 seconds
[Timing] loading another fold took 0.03212428092956543 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8188040256500244 seconds
[Timing] loading another fold took 0.03157854080200195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7974376678466797 seconds
[Timing] loading another fold took 0.03147721290588379 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8047630786895752 seconds
[Timing] loading another fold took 0.03153038024902344 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8033864498138428 seconds
[Timing] normalising with folds took 0.004157066345214844 seconds
[Timing] transposing backwards took 3.123283386230469e-05 seconds
[Timing] full prediction took 22.310723304748535 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00003.nii.gz
[Timing] loading took 0.0332791805267334 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8271923065185547 seconds
[Timing] loading another fold took 0.0325314998626709 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8202898502349854 seconds
[Timing] loading another fold took 0.03152966499328613 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7984359264373779 seconds
[Timing] loading another fold took 0.031464576721191406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.800330638885498 seconds
[Timing] loading another fold took 0.03142523765563965 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 185, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 57], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8053667545318604 seconds
[Timing] normalising with folds took 0.004206657409667969 seconds
[Timing] transposing backwards took 2.2172927856445312e-05 seconds
[Timing] full prediction took 26.556236267089844 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00006.nii.gz
[Timing] loading took 0.04068708419799805 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.8082623481750488 seconds
[Timing] loading another fold took 0.03185749053955078 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8146975040435791 seconds
[Timing] loading another fold took 0.031482696533203125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7973098754882812 seconds
[Timing] loading another fold took 0.031545162200927734 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7980053424835205 seconds
[Timing] loading another fold took 0.031542301177978516 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.7996222972869873 seconds
[Timing] normalising with folds took 0.004132270812988281 seconds
[Timing] transposing backwards took 2.47955322265625e-05 seconds
[Timing] full prediction took 30.766921520233154 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00007.nii.gz
[Timing] loading took 0.034571170806884766 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 0.7996971607208252 seconds
[Timing] loading another fold took 0.03191661834716797 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8268964290618896 seconds
[Timing] loading another fold took 0.031818389892578125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8096861839294434 seconds
[Timing] loading another fold took 0.03156614303588867 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8079140186309814 seconds
[Timing] loading another fold took 0.0317080020904541 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 168, 192)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 40], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
[Timing] another fold took 0.8082969188690186 seconds
[Timing] normalising with folds took 0.004027843475341797 seconds
[Timing] transposing backwards took 2.3126602172851562e-05 seconds
[Timing] full prediction took 35.01247954368591 seconds
predicting /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/610/imagesTr/panc_00004.nii.gz
[Timing] loading took 0.032605886459350586 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] fold 0 prediction took 4.714605331420898 seconds
[Timing] loading another fold took 0.03172922134399414 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.690995454788208 seconds
[Timing] loading another fold took 0.03172135353088379 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.714671850204468 seconds
[Timing] loading another fold took 0.03188943862915039 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.703696966171265 seconds
[Timing] loading another fold took 0.031812191009521484 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 288, 337)
patch size: [ 96 128 192]
steps (x, y, and z): [[0], [0, 53, 107, 160], [0, 72, 145]]
number of tiles: 12
using precomputed Gaussian
prediction done
[Timing] another fold took 4.706517934799194 seconds
[Timing] normalising with folds took 0.005995512008666992 seconds
[Timing] transposing backwards took 3.62396240234375e-05 seconds
[Timing] full prediction took 58.76044845581055 seconds
[Timing] Another preprocessing process done, it took 58.89382028579712 seconds
[Timing] Another preprocessing process done, it took 58.894399642944336 seconds
[Timing] Another preprocessing process done, it took 58.894421100616455 seconds
[Timing] Another preprocessing process done, it took 58.89443874359131 seconds
[Timing] Another preprocessing process done, it took 58.89445424079895 seconds
[Timing] Another preprocessing process done, it took 58.89446997642517 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
[Timing] postprocessing took 2.717186450958252 seconds


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Program finished with exit code 0 at: Wed Nov  2 08:26:31 CET 2022
