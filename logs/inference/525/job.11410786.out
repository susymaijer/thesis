Starting at Mon Aug  8 10:40:45 CEST 2022
Running on hosts: res-hpc-lkeb09
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 8.
Account: div2-lkeb
Job ID: 11410786
Job name: PancreasInferenceEval
Node running script: res-hpc-lkeb09
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Mon Aug  8 14:22:50 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.103.01   Driver Version: 470.103.01   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A6000    On   | 00000000:D8:00.0 Off |                  Off |
| 30%   26C    P8    16W / 300W |      0MiB / 48685MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-m7jz_2ya/hiddenlayer_0e108955bba34e5ca6c471d0a91260b9
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Obtaining file:///home/smaijer/code/nnUNet
Collecting torch==1.12.0
  Using cached torch-1.12.0-cp310-cp310-manylinux1_x86_64.whl (776.3 MB)
Collecting tqdm
  Using cached tqdm-4.64.0-py2.py3-none-any.whl (78 kB)
Collecting dicom2nifti
  Using cached dicom2nifti-2.4.3-py3-none-any.whl (43 kB)
Collecting scikit-image>=0.14
  Using cached scikit_image-0.19.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (13.9 MB)
Collecting medpy
  Using cached MedPy-0.4.0-py3-none-any.whl
Collecting scipy
  Using cached scipy-1.9.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (43.9 MB)
Collecting batchgenerators>=0.23
  Using cached batchgenerators-0.24-py3-none-any.whl
Collecting numpy
  Using cached numpy-1.23.1-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.0 MB)
Collecting sklearn
  Using cached sklearn-0.0-py2.py3-none-any.whl
Collecting SimpleITK
  Using cached SimpleITK-2.1.1.2-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (48.4 MB)
Collecting pandas
  Using cached pandas-1.4.3-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.6 MB)
Collecting requests
  Using cached requests-2.28.1-py3-none-any.whl (62 kB)
Collecting nibabel
  Using cached nibabel-4.0.1-py3-none-any.whl (3.3 MB)
Collecting tifffile
  Downloading tifffile-2022.8.3-py3-none-any.whl (207 kB)
Collecting matplotlib
  Using cached matplotlib-3.5.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (11.9 MB)
Collecting monai
  Using cached monai-0.9.1-202207251608-py3-none-any.whl (990 kB)
Collecting einops
  Using cached einops-0.4.1-py3-none-any.whl (28 kB)
Collecting ipython
  Using cached ipython-8.4.0-py3-none-any.whl (750 kB)
Collecting graphviz
  Using cached graphviz-0.20.1-py3-none-any.whl (47 kB)
Collecting typing-extensions
  Using cached typing_extensions-4.3.0-py3-none-any.whl (25 kB)
Collecting scikit-learn
  Downloading scikit_learn-1.1.2-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (30.5 MB)
Collecting pillow>=7.1.2
  Using cached Pillow-9.2.0-cp310-cp310-manylinux_2_28_x86_64.whl (3.2 MB)
Collecting future
  Using cached future-0.18.2-py3-none-any.whl
Collecting unittest2
  Using cached unittest2-1.1.0-py2.py3-none-any.whl (96 kB)
Collecting threadpoolctl
  Using cached threadpoolctl-3.1.0-py3-none-any.whl (14 kB)
Collecting networkx>=2.2
  Using cached networkx-2.8.5-py3-none-any.whl (2.0 MB)
Collecting PyWavelets>=1.1.1
  Using cached PyWavelets-1.3.0-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (6.9 MB)
Collecting packaging>=20.0
  Using cached packaging-21.3-py3-none-any.whl (40 kB)
Collecting imageio>=2.4.1
  Downloading imageio-2.21.1-py3-none-any.whl (3.4 MB)
Collecting pyparsing!=3.0.5,>=2.0.2
  Using cached pyparsing-3.0.9-py3-none-any.whl (98 kB)
Collecting python-gdcm
  Using cached python_gdcm-3.0.14-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (12.8 MB)
Collecting pydicom>=2.2.0
  Using cached pydicom-2.3.0-py3-none-any.whl (2.0 MB)
Collecting pexpect>4.3
  Using cached pexpect-4.8.0-py2.py3-none-any.whl (59 kB)
Collecting jedi>=0.16
  Using cached jedi-0.18.1-py2.py3-none-any.whl (1.6 MB)
Collecting setuptools>=18.5
  Downloading setuptools-63.4.2-py3-none-any.whl (1.2 MB)
Collecting traitlets>=5
  Using cached traitlets-5.3.0-py3-none-any.whl (106 kB)
Collecting stack-data
  Using cached stack_data-0.3.0-py3-none-any.whl (23 kB)
Collecting decorator
  Using cached decorator-5.1.1-py3-none-any.whl (9.1 kB)
Collecting pickleshare
  Using cached pickleshare-0.7.5-py2.py3-none-any.whl (6.9 kB)
Collecting prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0
  Using cached prompt_toolkit-3.0.30-py3-none-any.whl (381 kB)
Collecting pygments>=2.4.0
  Using cached Pygments-2.12.0-py3-none-any.whl (1.1 MB)
Collecting matplotlib-inline
  Using cached matplotlib_inline-0.1.3-py3-none-any.whl (8.2 kB)
Collecting backcall
  Using cached backcall-0.2.0-py2.py3-none-any.whl (11 kB)
Collecting parso<0.9.0,>=0.8.0
  Using cached parso-0.8.3-py2.py3-none-any.whl (100 kB)
Collecting ptyprocess>=0.5
  Using cached ptyprocess-0.7.0-py2.py3-none-any.whl (13 kB)
Collecting wcwidth
  Using cached wcwidth-0.2.5-py2.py3-none-any.whl (30 kB)
Collecting kiwisolver>=1.0.1
  Using cached kiwisolver-1.4.4-cp310-cp310-manylinux_2_12_x86_64.manylinux2010_x86_64.whl (1.6 MB)
Collecting cycler>=0.10
  Using cached cycler-0.11.0-py3-none-any.whl (6.4 kB)
Collecting fonttools>=4.22.0
  Using cached fonttools-4.34.4-py3-none-any.whl (944 kB)
Collecting python-dateutil>=2.7
  Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)
Collecting six>=1.5
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting pytz>=2020.1
  Using cached pytz-2022.1-py2.py3-none-any.whl (503 kB)
Collecting charset-normalizer<3,>=2
  Using cached charset_normalizer-2.1.0-py3-none-any.whl (39 kB)
Collecting idna<4,>=2.5
  Using cached idna-3.3-py3-none-any.whl (61 kB)
Collecting urllib3<1.27,>=1.21.1
  Using cached urllib3-1.26.11-py2.py3-none-any.whl (139 kB)
Collecting certifi>=2017.4.17
  Using cached certifi-2022.6.15-py3-none-any.whl (160 kB)
Collecting joblib>=1.0.0
  Using cached joblib-1.1.0-py2.py3-none-any.whl (306 kB)
Collecting executing
  Using cached executing-0.9.1-py2.py3-none-any.whl (16 kB)
Collecting pure-eval
  Using cached pure_eval-0.2.2-py3-none-any.whl (11 kB)
Collecting asttokens
  Using cached asttokens-2.0.5-py2.py3-none-any.whl (20 kB)
Collecting traceback2
  Using cached traceback2-1.4.0-py2.py3-none-any.whl (16 kB)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Collecting linecache2
  Using cached linecache2-1.0.0-py2.py3-none-any.whl (12 kB)
Installing collected packages: six, pyparsing, pillow, numpy, linecache2, wcwidth, typing-extensions, traitlets, traceback2, tifffile, threadpoolctl, setuptools, scipy, PyWavelets, pure-eval, ptyprocess, parso, packaging, networkx, joblib, imageio, executing, asttokens, argparse, urllib3, unittest2, torch, stack-data, SimpleITK, scikit-learn, scikit-image, pytz, python-gdcm, python-dateutil, pygments, pydicom, prompt-toolkit, pickleshare, pexpect, nibabel, matplotlib-inline, kiwisolver, jedi, idna, future, fonttools, decorator, cycler, charset-normalizer, certifi, backcall, tqdm, sklearn, requests, pandas, monai, medpy, matplotlib, ipython, graphviz, einops, dicom2nifti, batchgenerators, nnunet
  Running setup.py develop for nnunet
Successfully installed PyWavelets-1.3.0 SimpleITK-2.1.1.2 argparse-1.4.0 asttokens-2.0.5 backcall-0.2.0 batchgenerators-0.24 certifi-2022.6.15 charset-normalizer-2.1.0 cycler-0.11.0 decorator-5.1.1 dicom2nifti-2.4.3 einops-0.4.1 executing-0.9.1 fonttools-4.34.4 future-0.18.2 graphviz-0.20.1 idna-3.3 imageio-2.21.1 ipython-8.4.0 jedi-0.18.1 joblib-1.1.0 kiwisolver-1.4.4 linecache2-1.0.0 matplotlib-3.5.2 matplotlib-inline-0.1.3 medpy-0.4.0 monai-0.9.1 networkx-2.8.5 nibabel-4.0.1 nnunet numpy-1.23.1 packaging-21.3 pandas-1.4.3 parso-0.8.3 pexpect-4.8.0 pickleshare-0.7.5 pillow-9.2.0 prompt-toolkit-3.0.30 ptyprocess-0.7.0 pure-eval-0.2.2 pydicom-2.3.0 pygments-2.12.0 pyparsing-3.0.9 python-dateutil-2.8.2 python-gdcm-3.0.14 pytz-2022.1 requests-2.28.1 scikit-image-0.19.3 scikit-learn-1.1.2 scipy-1.9.0 setuptools-63.4.2 six-1.16.0 sklearn-0.0 stack-data-0.3.0 threadpoolctl-3.1.0 tifffile-2022.8.3 torch-1.12.0 tqdm-4.64.0 traceback2-1.4.0 traitlets-5.3.0 typing-extensions-4.3.0 unittest2-1.1.0 urllib3-1.26.11 wcwidth-0.2.5


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task525/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 12 unique case ids, here are some examples: ['panc_0049' 'panc_0073' 'panc_0033' 'panc_0057' 'panc_0001' 'panc_0049'
 'panc_0049' 'panc_0057' 'panc_0009' 'panc_0057']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 12
number of cases that still need to be predicted: 12
emptying cuda cache
loading parameters for folds, [0, 1, 2, 3, 4]
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-08-08 14:24:15.550872: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task525/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task525/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task525/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task525/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task525/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
preprocessing took 1.430511474609375e-05 seconds
starting prediction...
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0033.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 310, 512, 512) after crop: (1, 310, 512, 512) spacing: [1.00000012 0.7421875  0.7421875 ] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.00000012, 0.7421875 , 0.7421875 ]), 'spacing_transposed': array([1.00000012, 0.7421875 , 0.7421875 ]), 'data.shape (data is transposed)': (1, 310, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 103, 501, 501)} 

(1, 103, 501, 501)
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0081.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 209, 512, 512) after crop: (1, 209, 512, 512) spacing: [1.        0.9765625 0.9765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.       , 0.9765625, 0.9765625]), 'spacing_transposed': array([1.       , 0.9765625, 0.9765625]), 'data.shape (data is transposed)': (1, 209, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 70, 660, 660)} 

(1, 70, 660, 660)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0017.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 310, 512, 512) after crop: (1, 310, 512, 512) spacing: [1.00000012 0.78125    0.78125   ] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.00000012, 0.78125   , 0.78125   ]), 'spacing_transposed': array([1.00000012, 0.78125   , 0.78125   ]), 'data.shape (data is transposed)': (1, 310, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 103, 528, 528)} 

(1, 103, 528, 528)
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0065.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 216, 512, 512) after crop: (1, 216, 512, 512) spacing: [1.        0.9765625 0.9765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.       , 0.9765625, 0.9765625]), 'spacing_transposed': array([1.       , 0.9765625, 0.9765625]), 'data.shape (data is transposed)': (1, 216, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 72, 660, 660)} 

(1, 72, 660, 660)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0009.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 196, 512, 512) after crop: (1, 196, 512, 512) spacing: [1.         0.85799998 0.85799998] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.        , 0.85799998, 0.85799998]), 'spacing_transposed': array([1.        , 0.85799998, 0.85799998]), 'data.shape (data is transposed)': (1, 196, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 65, 580, 580)} 

(1, 65, 580, 580)
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0057.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 228, 512, 512) after crop: (1, 228, 512, 512) spacing: [1.        0.9765625 0.9765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.       , 0.9765625, 0.9765625]), 'spacing_transposed': array([1.       , 0.9765625, 0.9765625]), 'data.shape (data is transposed)': (1, 228, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 76, 660, 660)} 

(1, 76, 660, 660)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0041.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 237, 512, 512) after crop: (1, 237, 512, 512) spacing: [1.     0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.    , 0.9375, 0.9375]), 'spacing_transposed': array([1.    , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 237, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 79, 633, 633)} 

(1, 79, 633, 633)
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0082.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 226, 512, 512) after crop: (1, 226, 512, 512) spacing: [1.     0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.    , 0.9375, 0.9375]), 'spacing_transposed': array([1.    , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 226, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 75, 633, 633)} 

(1, 75, 633, 633)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0001.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 240, 512, 512) after crop: (1, 240, 512, 512) spacing: [1.       0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.      , 0.859375, 0.859375]), 'spacing_transposed': array([1.      , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 240, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 80, 581, 581)} 

(1, 80, 581, 581)
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0049.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 222, 512, 512) after crop: (1, 222, 512, 512) spacing: [1.        0.8984375 0.8984375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.       , 0.8984375, 0.8984375]), 'spacing_transposed': array([1.       , 0.8984375, 0.8984375]), 'data.shape (data is transposed)': (1, 222, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 74, 607, 607)} 

(1, 74, 607, 607)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0026.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 310, 512, 512) after crop: (1, 310, 512, 512) spacing: [1.       0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.      , 0.859375, 0.859375]), 'spacing_transposed': array([1.      , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 310, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 103, 581, 581)} 

(1, 103, 581, 581)
preprocessing /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0073.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 310, 512, 512) after crop: (1, 310, 512, 512) spacing: [1.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.      , 0.703125, 0.703125]), 'spacing_transposed': array([1.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 310, 512, 512)} 
after:  {'spacing': array([3.        , 0.75781244, 0.75781244]), 'data.shape (data is resampled)': (1, 103, 475, 475)} 

(1, 103, 475, 475)
This worker has ended successfully, no errors to report
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0017.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0041.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0026.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0065.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0082.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0073.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0033.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0009.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0001.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0081.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0057.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0049.nii.gz
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0033.nii.gz
loading took 0.06237983703613281 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 501, 501)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 77, 154, 232, 309], [0, 77, 154, 232, 309]]
number of tiles: 100
computing Gaussian
done
prediction done
fold 0 prediction took 38.09664821624756 seconds
loading another fold took 0.03459978103637695 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 501, 501)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 77, 154, 232, 309], [0, 77, 154, 232, 309]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.37097716331482 seconds
loading another fold took 0.03660130500793457 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 501, 501)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 77, 154, 232, 309], [0, 77, 154, 232, 309]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.53478503227234 seconds
loading another fold took 0.0347292423248291 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 501, 501)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 77, 154, 232, 309], [0, 77, 154, 232, 309]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.551092386245728 seconds
loading another fold took 0.03312873840332031 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 501, 501)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 77, 154, 232, 309], [0, 77, 154, 232, 309]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.600563287734985 seconds
full prediction took 0.022855043411254883 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0017.nii.gz
loading took 0.04096722602844238 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 528, 528)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 84, 168, 252, 336], [0, 84, 168, 252, 336]]
number of tiles: 100
using precomputed Gaussian
prediction done
fold 0 prediction took 30.44433355331421 seconds
loading another fold took 0.036905765533447266 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 528, 528)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 84, 168, 252, 336], [0, 84, 168, 252, 336]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.836177587509155 seconds
loading another fold took 0.034529924392700195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 528, 528)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 84, 168, 252, 336], [0, 84, 168, 252, 336]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.944024801254272 seconds
loading another fold took 0.036309242248535156 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 528, 528)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 84, 168, 252, 336], [0, 84, 168, 252, 336]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.91340923309326 seconds
loading another fold took 0.03505277633666992 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 528, 528)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 84, 168, 252, 336], [0, 84, 168, 252, 336]]
number of tiles: 100
using precomputed Gaussian
prediction done
another fold took 28.92536425590515 seconds
full prediction took 0.020865440368652344 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0009.nii.gz
loading took 0.037392616271972656 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 580, 580)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 17], [0, 78, 155, 233, 310, 388], [0, 78, 155, 233, 310, 388]]
number of tiles: 72
using precomputed Gaussian
prediction done
fold 0 prediction took 22.096468925476074 seconds
loading another fold took 0.044523000717163086 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 580, 580)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 17], [0, 78, 155, 233, 310, 388], [0, 78, 155, 233, 310, 388]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 20.95063805580139 seconds
loading another fold took 0.036052703857421875 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 580, 580)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 17], [0, 78, 155, 233, 310, 388], [0, 78, 155, 233, 310, 388]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 20.79504156112671 seconds
loading another fold took 0.0331876277923584 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 580, 580)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 17], [0, 78, 155, 233, 310, 388], [0, 78, 155, 233, 310, 388]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 20.82279634475708 seconds
loading another fold took 0.034828901290893555 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 580, 580)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 17], [0, 78, 155, 233, 310, 388], [0, 78, 155, 233, 310, 388]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 20.9486882686615 seconds
full prediction took 0.018037796020507812 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0041.nii.gz
loading took 0.0410764217376709 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 31], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
fold 0 prediction took 32.25332260131836 seconds
loading another fold took 0.03613543510437012 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 31], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.288483381271362 seconds
loading another fold took 0.036910295486450195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 31], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.452041625976562 seconds
loading another fold took 0.03385519981384277 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 31], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.262726306915283 seconds
loading another fold took 0.03413581848144531 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 31], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.38132643699646 seconds
full prediction took 0.026823997497558594 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0001.nii.gz
loading took 0.03787636756896973 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 32], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 108
using precomputed Gaussian
prediction done
fold 0 prediction took 32.29085183143616 seconds
loading another fold took 0.035193681716918945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 32], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.305044651031494 seconds
loading another fold took 0.04232072830200195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 32], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.26697015762329 seconds
loading another fold took 0.03390765190124512 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 32], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.117730617523193 seconds
loading another fold took 0.03515028953552246 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 16, 32], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.26785373687744 seconds
full prediction took 0.026294708251953125 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0026.nii.gz
loading took 0.04642748832702637 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 144
using precomputed Gaussian
prediction done
fold 0 prediction took 42.03556752204895 seconds
loading another fold took 0.0384669303894043 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 144
using precomputed Gaussian
prediction done
another fold took 41.542195320129395 seconds
loading another fold took 0.034290313720703125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 144
using precomputed Gaussian
prediction done
another fold took 41.61625695228577 seconds
loading another fold took 0.03490900993347168 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 144
using precomputed Gaussian
prediction done
another fold took 41.66327214241028 seconds
loading another fold took 0.03608059883117676 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 581, 581)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 78, 156, 233, 311, 389], [0, 78, 156, 233, 311, 389]]
number of tiles: 144
using precomputed Gaussian
prediction done
another fold took 41.45596218109131 seconds
full prediction took 0.025138378143310547 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0081.nii.gz
loading took 0.04024672508239746 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 22], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
fold 0 prediction took 21.968463897705078 seconds
loading another fold took 0.03496551513671875 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 22], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.028666257858276 seconds
loading another fold took 0.03374290466308594 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 22], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.093178510665894 seconds
loading another fold took 0.03615283966064453 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 22], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.21396780014038 seconds
loading another fold took 0.033772945404052734 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 22], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.085158824920654 seconds
full prediction took 0.025183677673339844 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0065.nii.gz
loading took 0.03704118728637695 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 72, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 24], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
fold 0 prediction took 21.535111665725708 seconds
loading another fold took 0.03506064414978027 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 72, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 24], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.074350595474243 seconds
loading another fold took 0.03253054618835449 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 72, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 24], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.284432888031006 seconds
loading another fold took 0.03581738471984863 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 72, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 24], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.087313413619995 seconds
loading another fold took 0.03424882888793945 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 72, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 24], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 72
using precomputed Gaussian
prediction done
another fold took 21.073116064071655 seconds
full prediction took 0.0271453857421875 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0057.nii.gz
loading took 0.0600588321685791 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 28], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 108
using precomputed Gaussian
prediction done
fold 0 prediction took 31.85511088371277 seconds
loading another fold took 0.03455162048339844 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 28], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.431125164031982 seconds
loading another fold took 0.03461647033691406 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 28], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.252501010894775 seconds
loading another fold took 0.03427934646606445 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 28], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.425687551498413 seconds
loading another fold took 0.03507518768310547 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 660, 660)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 28], [0, 94, 187, 281, 374, 468], [0, 94, 187, 281, 374, 468]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.25639057159424 seconds
full prediction took 0.029705286026000977 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0082.nii.gz
loading took 0.0353083610534668 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 27], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
fold 0 prediction took 31.891971111297607 seconds
loading another fold took 0.03775811195373535 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 27], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.31714916229248 seconds
loading another fold took 0.0334627628326416 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 27], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.430381536483765 seconds
loading another fold took 0.041054725646972656 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 27], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.332642316818237 seconds
loading another fold took 0.03395533561706543 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 633, 633)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 14, 27], [0, 88, 176, 265, 353, 441], [0, 88, 176, 265, 353, 441]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.274661540985107 seconds
full prediction took 0.023624897003173828 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0049.nii.gz
loading took 0.04070782661437988 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 607, 607)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 13, 26], [0, 83, 166, 249, 332, 415], [0, 83, 166, 249, 332, 415]]
number of tiles: 108
using precomputed Gaussian
prediction done
fold 0 prediction took 31.90082836151123 seconds
loading another fold took 0.0356137752532959 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 607, 607)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 13, 26], [0, 83, 166, 249, 332, 415], [0, 83, 166, 249, 332, 415]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.16519784927368 seconds
loading another fold took 0.0339055061340332 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 607, 607)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 13, 26], [0, 83, 166, 249, 332, 415], [0, 83, 166, 249, 332, 415]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.355435609817505 seconds
loading another fold took 0.034743547439575195 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 607, 607)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 13, 26], [0, 83, 166, 249, 332, 415], [0, 83, 166, 249, 332, 415]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.265504598617554 seconds
loading another fold took 0.03552508354187012 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 607, 607)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 13, 26], [0, 83, 166, 249, 332, 415], [0, 83, 166, 249, 332, 415]]
number of tiles: 108
using precomputed Gaussian
prediction done
another fold took 31.154253005981445 seconds
full prediction took 0.022348642349243164 seconds
predicting /exports/lkeb-hpc/smaijer/output/525/3d_fullres/nnUNetTrainerV2/501/imagesTs/panc_0073.nii.gz
loading took 0.040546417236328125 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 475, 475)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 64
using precomputed Gaussian
prediction done
fold 0 prediction took 19.390397548675537 seconds
loading another fold took 0.03482246398925781 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 475, 475)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 64
using precomputed Gaussian
prediction done
another fold took 18.622975826263428 seconds
loading another fold took 0.033713340759277344 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 475, 475)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 64
using precomputed Gaussian
prediction done
another fold took 18.629657983779907 seconds
loading another fold took 0.037999868392944336 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 475, 475)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 64
using precomputed Gaussian
prediction done
another fold took 18.66926622390747 seconds
loading another fold took 0.03594613075256348 seconds
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 475, 475)
patch size: [ 48 192 192]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 64
using precomputed Gaussian
prediction done
another fold took 18.702858448028564 seconds
full prediction took 0.017131328582763672 seconds
inference done. Now waiting for the segmentation export to finish...
postprocessing...
postprocessing took 19.793397426605225 seconds


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Program finished with exit code 0 at: Mon Aug  8 10:40:45 CEST 2022
