Starting at Fri Oct 28 09:46:27 CEST 2022
Running on hosts: res-hpc-lkeb06
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 8.
Account: div2-lkeb
Job ID: 12692795
Job name: PancreasAll
Node running script: res-hpc-lkeb06
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Fri Oct 28 10:01:40 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.141.03   Driver Version: 470.141.03   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     Off  | 00000000:3B:00.0 Off |                  Off |
| 31%   30C    P0    65W / 260W |      0MiB / 24220MiB |      4%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-7_z3tdwr/hiddenlayer_bf7192153a6440bf9950eb55b24c15fd
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Start preprocessing..
Done preprocessing! Start training all the folds..


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='610', fold='0', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'MRI'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'nonCT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 32, 224, 256]), 'median_patient_size_in_voxels': array([ 41, 319, 320]), 'current_spacing': array([3.    , 0.6875, 0.6875]), 'original_spacing': array([3.    , 0.6875, 0.6875]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task610/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-10-28 10:01:49.482313: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-10-28 10:01:49.500107: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task610/splits_final.pkl
2022-10-28 10:01:49.502879: The split file contains 5 splits.
2022-10-28 10:01:49.504310: Desired fold for training: 0
2022-10-28 10:01:49.505856: This split has 6 training and 2 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-10-28 10:01:51.173120: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-10-28 10:02:03.371303: Unable to plot network architecture:
2022-10-28 10:02:03.373159: local variable 'g' referenced before assignment
2022-10-28 10:02:03.374686: 
printing the network instead:

2022-10-28 10:02:03.376667: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(1, 3, 3), stride=(1, 2, 2), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-10-28 10:02:03.380068: 

2022-10-28 10:02:03.381377: 
epoch:  0
2022-10-28 10:03:33.531054: train loss : -0.4800
2022-10-28 10:03:39.039616: validation loss: -1.0439
2022-10-28 10:03:39.042155: Average global foreground Dice: [0.6048]
2022-10-28 10:03:39.043679: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:03:39.434344: Suus1 maybe_update_lr lr: 0.009991
2022-10-28 10:03:39.436444: This epoch took 96.053748 s

2022-10-28 10:03:39.438059: 
epoch:  1
2022-10-28 10:04:59.323383: train loss : -0.8315
2022-10-28 10:05:04.845137: validation loss: -1.1289
2022-10-28 10:05:04.848665: Average global foreground Dice: [0.6431]
2022-10-28 10:05:04.851414: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:05:05.286748: Suus1 maybe_update_lr lr: 0.009982
2022-10-28 10:05:05.289008: saving best epoch checkpoint...
2022-10-28 10:05:05.385895: saving checkpoint...
2022-10-28 10:05:07.047451: done, saving took 1.76 seconds
2022-10-28 10:05:07.053933: This epoch took 87.614564 s

2022-10-28 10:05:07.055746: 
epoch:  2
2022-10-28 10:06:27.067605: train loss : -1.0926
2022-10-28 10:06:32.518194: validation loss: -1.2871
2022-10-28 10:06:32.520330: Average global foreground Dice: [0.7105]
2022-10-28 10:06:32.521975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:06:32.937831: Suus1 maybe_update_lr lr: 0.009973
2022-10-28 10:06:32.939430: saving best epoch checkpoint...
2022-10-28 10:06:33.003894: saving checkpoint...
2022-10-28 10:06:34.013951: done, saving took 1.07 seconds
2022-10-28 10:06:34.021420: This epoch took 86.964049 s

2022-10-28 10:06:34.022912: 
epoch:  3
2022-10-28 10:07:54.089540: train loss : -1.3067
2022-10-28 10:07:59.637411: validation loss: -1.3846
2022-10-28 10:07:59.639650: Average global foreground Dice: [0.7493]
2022-10-28 10:07:59.641248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:08:00.108400: Suus1 maybe_update_lr lr: 0.009964
2022-10-28 10:08:00.110215: saving best epoch checkpoint...
2022-10-28 10:08:00.204272: saving checkpoint...
2022-10-28 10:08:01.370483: done, saving took 1.26 seconds
2022-10-28 10:08:01.377952: This epoch took 87.353435 s

2022-10-28 10:08:01.379403: 
epoch:  4
2022-10-28 10:09:21.458484: train loss : -1.3879
2022-10-28 10:09:27.042253: validation loss: -1.4644
2022-10-28 10:09:27.044828: Average global foreground Dice: [0.7817]
2022-10-28 10:09:27.046452: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:09:27.644244: Suus1 maybe_update_lr lr: 0.009955
2022-10-28 10:09:27.646225: saving best epoch checkpoint...
2022-10-28 10:09:27.720270: saving checkpoint...
2022-10-28 10:09:28.730669: done, saving took 1.08 seconds
2022-10-28 10:09:28.736718: This epoch took 87.355943 s

2022-10-28 10:09:28.738201: 
epoch:  5
2022-10-28 10:10:48.805887: train loss : -1.4113
2022-10-28 10:10:54.349504: validation loss: -1.3481
2022-10-28 10:10:54.352492: Average global foreground Dice: [0.7378]
2022-10-28 10:10:54.354060: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:10:54.810619: Suus1 maybe_update_lr lr: 0.009946
2022-10-28 10:10:54.812550: saving best epoch checkpoint...
2022-10-28 10:10:54.896049: saving checkpoint...
2022-10-28 10:10:55.931123: done, saving took 1.12 seconds
2022-10-28 10:10:55.937798: This epoch took 87.198241 s

2022-10-28 10:10:55.939303: 
epoch:  6
2022-10-28 10:12:15.990835: train loss : -1.4650
2022-10-28 10:12:21.510244: validation loss: -1.5203
2022-10-28 10:12:21.512657: Average global foreground Dice: [0.8096]
2022-10-28 10:12:21.514135: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:12:21.978673: Suus1 maybe_update_lr lr: 0.009937
2022-10-28 10:12:21.980327: saving best epoch checkpoint...
2022-10-28 10:12:22.057710: saving checkpoint...
2022-10-28 10:12:23.070638: done, saving took 1.09 seconds
2022-10-28 10:12:23.077598: This epoch took 87.136726 s

2022-10-28 10:12:23.079067: 
epoch:  7
2022-10-28 10:13:43.116287: train loss : -1.5472
2022-10-28 10:13:48.664689: validation loss: -1.4930
2022-10-28 10:13:48.666663: Average global foreground Dice: [0.7945]
2022-10-28 10:13:48.668084: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:13:49.094704: Suus1 maybe_update_lr lr: 0.009928
2022-10-28 10:13:49.096434: saving best epoch checkpoint...
2022-10-28 10:13:49.177808: saving checkpoint...
2022-10-28 10:13:50.227133: done, saving took 1.13 seconds
2022-10-28 10:13:50.233965: This epoch took 87.153455 s

2022-10-28 10:13:50.235445: 
epoch:  8
2022-10-28 10:15:10.317009: train loss : -1.5861
2022-10-28 10:15:15.760090: validation loss: -1.4986
2022-10-28 10:15:15.765180: Average global foreground Dice: [0.7996]
2022-10-28 10:15:15.770249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:15:16.176761: Suus1 maybe_update_lr lr: 0.009919
2022-10-28 10:15:16.178783: saving best epoch checkpoint...
2022-10-28 10:15:16.237682: saving checkpoint...
2022-10-28 10:15:17.232020: done, saving took 1.05 seconds
2022-10-28 10:15:17.239385: This epoch took 87.002312 s

2022-10-28 10:15:17.241200: 
epoch:  9
2022-10-28 10:16:37.345002: train loss : -1.5926
2022-10-28 10:16:42.791587: validation loss: -1.5338
2022-10-28 10:16:42.794224: Average global foreground Dice: [0.8163]
2022-10-28 10:16:42.795799: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:16:43.199171: Suus1 maybe_update_lr lr: 0.00991
2022-10-28 10:16:43.201057: saving best epoch checkpoint...
2022-10-28 10:16:43.262210: saving checkpoint...
2022-10-28 10:16:44.239795: done, saving took 1.04 seconds
2022-10-28 10:16:44.246983: This epoch took 87.003889 s

2022-10-28 10:16:44.248755: 
epoch:  10
2022-10-28 10:18:04.358646: train loss : -1.6314
2022-10-28 10:18:09.906301: validation loss: -1.4852
2022-10-28 10:18:09.908741: Average global foreground Dice: [0.7923]
2022-10-28 10:18:09.910303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:18:10.350775: Suus1 maybe_update_lr lr: 0.009901
2022-10-28 10:18:10.352785: saving best epoch checkpoint...
2022-10-28 10:18:10.438802: saving checkpoint...
2022-10-28 10:18:11.529466: done, saving took 1.18 seconds
2022-10-28 10:18:11.536701: This epoch took 87.286131 s

2022-10-28 10:18:11.538147: 
epoch:  11
2022-10-28 10:19:31.633230: train loss : -1.6165
2022-10-28 10:19:37.094461: validation loss: -1.5116
2022-10-28 10:19:37.096617: Average global foreground Dice: [0.8064]
2022-10-28 10:19:37.098020: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:19:37.499923: Suus1 maybe_update_lr lr: 0.009892
2022-10-28 10:19:37.501430: saving best epoch checkpoint...
2022-10-28 10:19:37.563430: saving checkpoint...
2022-10-28 10:19:38.648548: done, saving took 1.15 seconds
2022-10-28 10:19:38.655187: This epoch took 87.113459 s

2022-10-28 10:19:38.656695: 
epoch:  12
2022-10-28 10:20:58.784032: train loss : -1.6511
2022-10-28 10:21:04.335331: validation loss: -1.5517
2022-10-28 10:21:04.337883: Average global foreground Dice: [0.8216]
2022-10-28 10:21:04.339620: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:21:05.028996: Suus1 maybe_update_lr lr: 0.009883
2022-10-28 10:21:05.030754: saving best epoch checkpoint...
2022-10-28 10:21:05.083645: saving checkpoint...
2022-10-28 10:21:06.208377: done, saving took 1.18 seconds
2022-10-28 10:21:06.213874: This epoch took 87.555748 s

2022-10-28 10:21:06.215760: 
epoch:  13
2022-10-28 10:22:26.343426: train loss : -1.6718
2022-10-28 10:22:31.887701: validation loss: -1.5822
2022-10-28 10:22:31.890981: Average global foreground Dice: [0.8364]
2022-10-28 10:22:31.892762: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:22:32.319150: Suus1 maybe_update_lr lr: 0.009874
2022-10-28 10:22:32.321633: saving best epoch checkpoint...
2022-10-28 10:22:32.384063: saving checkpoint...
2022-10-28 10:22:33.551741: done, saving took 1.23 seconds
2022-10-28 10:22:33.557047: This epoch took 87.339750 s

2022-10-28 10:22:33.558719: 
epoch:  14
2022-10-28 10:23:53.620036: train loss : -1.7015
2022-10-28 10:23:59.184237: validation loss: -1.5994
2022-10-28 10:23:59.186767: Average global foreground Dice: [0.8435]
2022-10-28 10:23:59.188392: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:23:59.623061: Suus1 maybe_update_lr lr: 0.009865
2022-10-28 10:23:59.624773: saving best epoch checkpoint...
2022-10-28 10:23:59.675279: saving checkpoint...
2022-10-28 10:24:00.891945: done, saving took 1.27 seconds
2022-10-28 10:24:00.897216: This epoch took 87.337002 s

2022-10-28 10:24:00.898672: 
epoch:  15
2022-10-28 10:25:21.007127: train loss : -1.7142
2022-10-28 10:25:26.566736: validation loss: -1.6080
2022-10-28 10:25:26.569106: Average global foreground Dice: [0.8465]
2022-10-28 10:25:26.570682: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:25:27.009419: Suus1 maybe_update_lr lr: 0.009856
2022-10-28 10:25:27.011238: saving best epoch checkpoint...
2022-10-28 10:25:27.061718: saving checkpoint...
2022-10-28 10:25:28.211827: done, saving took 1.20 seconds
2022-10-28 10:25:28.217121: This epoch took 87.317038 s

2022-10-28 10:25:28.218612: 
epoch:  16
2022-10-28 10:26:48.301522: train loss : -1.6965
2022-10-28 10:26:53.785253: validation loss: -1.6199
2022-10-28 10:26:53.788135: Average global foreground Dice: [0.8506]
2022-10-28 10:26:53.789887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:26:54.223057: Suus1 maybe_update_lr lr: 0.009847
2022-10-28 10:26:54.224562: saving best epoch checkpoint...
2022-10-28 10:26:54.268435: saving checkpoint...
2022-10-28 10:26:55.529557: done, saving took 1.30 seconds
2022-10-28 10:26:55.534805: This epoch took 87.314757 s

2022-10-28 10:26:55.536477: 
epoch:  17
2022-10-28 10:28:15.587357: train loss : -1.6850
2022-10-28 10:28:21.135780: validation loss: -1.4438
2022-10-28 10:28:21.138387: Average global foreground Dice: [0.7804]
2022-10-28 10:28:21.139811: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:28:21.628125: Suus1 maybe_update_lr lr: 0.009838
2022-10-28 10:28:21.629928: saving best epoch checkpoint...
2022-10-28 10:28:21.699410: saving checkpoint...
2022-10-28 10:28:23.582144: done, saving took 1.95 seconds
2022-10-28 10:28:23.588311: This epoch took 88.050431 s

2022-10-28 10:28:23.589710: 
epoch:  18
2022-10-28 10:29:43.668514: train loss : -1.7077
2022-10-28 10:29:49.227616: validation loss: -1.6139
2022-10-28 10:29:49.230386: Average global foreground Dice: [0.8506]
2022-10-28 10:29:49.232175: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:29:49.678339: Suus1 maybe_update_lr lr: 0.009829
2022-10-28 10:29:49.680129: saving best epoch checkpoint...
2022-10-28 10:29:49.759788: saving checkpoint...
2022-10-28 10:29:51.171285: done, saving took 1.49 seconds
2022-10-28 10:29:51.177782: This epoch took 87.586612 s

2022-10-28 10:29:51.179180: 
epoch:  19
2022-10-28 10:31:11.291512: train loss : -1.7306
2022-10-28 10:31:16.835193: validation loss: -1.6402
2022-10-28 10:31:16.843854: Average global foreground Dice: [0.8588]
2022-10-28 10:31:16.845314: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:31:17.276775: Suus1 maybe_update_lr lr: 0.00982
2022-10-28 10:31:17.278562: saving best epoch checkpoint...
2022-10-28 10:31:17.362605: saving checkpoint...
2022-10-28 10:31:18.349603: done, saving took 1.07 seconds
2022-10-28 10:31:18.356042: This epoch took 87.175142 s

2022-10-28 10:31:18.357419: 
epoch:  20
2022-10-28 10:32:38.475529: train loss : -1.7510
2022-10-28 10:32:44.036884: validation loss: -1.6299
2022-10-28 10:32:44.039291: Average global foreground Dice: [0.8579]
2022-10-28 10:32:44.040808: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:32:44.703586: Suus1 maybe_update_lr lr: 0.009811
2022-10-28 10:32:44.705291: saving best epoch checkpoint...
2022-10-28 10:32:44.758564: saving checkpoint...
2022-10-28 10:32:45.804815: done, saving took 1.10 seconds
2022-10-28 10:32:45.810112: This epoch took 87.451237 s

2022-10-28 10:32:45.811661: 
epoch:  21
2022-10-28 10:34:05.934925: train loss : -1.7279
2022-10-28 10:34:11.380751: validation loss: -1.6117
2022-10-28 10:34:11.383024: Average global foreground Dice: [0.8476]
2022-10-28 10:34:11.384728: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:34:11.788161: Suus1 maybe_update_lr lr: 0.009802
2022-10-28 10:34:11.789873: saving best epoch checkpoint...
2022-10-28 10:34:11.832019: saving checkpoint...
2022-10-28 10:34:12.769424: done, saving took 0.98 seconds
2022-10-28 10:34:12.774726: This epoch took 86.961399 s

2022-10-28 10:34:12.776242: 
epoch:  22
2022-10-28 10:35:32.959592: train loss : -1.7438
2022-10-28 10:35:38.531641: validation loss: -1.5778
2022-10-28 10:35:38.535075: Average global foreground Dice: [0.8334]
2022-10-28 10:35:38.536677: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:35:39.001624: Suus1 maybe_update_lr lr: 0.009793
2022-10-28 10:35:39.003484: saving best epoch checkpoint...
2022-10-28 10:35:39.054716: saving checkpoint...
2022-10-28 10:35:40.164710: done, saving took 1.16 seconds
2022-10-28 10:35:40.170336: This epoch took 87.392555 s

2022-10-28 10:35:40.171773: 
epoch:  23
2022-10-28 10:37:00.360582: train loss : -1.7401
2022-10-28 10:37:05.912429: validation loss: -1.6059
2022-10-28 10:37:05.916190: Average global foreground Dice: [0.8456]
2022-10-28 10:37:05.917765: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:37:06.357630: Suus1 maybe_update_lr lr: 0.009784
2022-10-28 10:37:06.359358: saving best epoch checkpoint...
2022-10-28 10:37:06.410470: saving checkpoint...
2022-10-28 10:37:07.630672: done, saving took 1.27 seconds
2022-10-28 10:37:07.636493: This epoch took 87.463415 s

2022-10-28 10:37:07.637892: 
epoch:  24
2022-10-28 10:38:28.006417: train loss : -1.7734
2022-10-28 10:38:33.985829: validation loss: -1.5846
2022-10-28 10:38:33.988016: Average global foreground Dice: [0.8376]
2022-10-28 10:38:33.989700: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:38:34.441849: Suus1 maybe_update_lr lr: 0.009775
2022-10-28 10:38:34.443625: saving best epoch checkpoint...
2022-10-28 10:38:34.511748: saving checkpoint...
2022-10-28 10:38:35.750232: done, saving took 1.31 seconds
2022-10-28 10:38:35.756072: This epoch took 88.116773 s

2022-10-28 10:38:35.757709: 
epoch:  25
2022-10-28 10:39:56.411218: train loss : -1.7507
2022-10-28 10:40:02.272539: validation loss: -1.6541
2022-10-28 10:40:02.275197: Average global foreground Dice: [0.8661]
2022-10-28 10:40:02.276984: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:40:02.761618: Suus1 maybe_update_lr lr: 0.009766
2022-10-28 10:40:02.764068: saving best epoch checkpoint...
2022-10-28 10:40:02.844666: saving checkpoint...
2022-10-28 10:40:04.232158: done, saving took 1.47 seconds
2022-10-28 10:40:04.241982: This epoch took 88.482918 s

2022-10-28 10:40:04.243632: 
epoch:  26
2022-10-28 10:41:24.872176: train loss : -1.7802
2022-10-28 10:41:31.030581: validation loss: -1.6534
2022-10-28 10:41:31.032711: Average global foreground Dice: [0.8651]
2022-10-28 10:41:31.034489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:41:31.505741: Suus1 maybe_update_lr lr: 0.009757
2022-10-28 10:41:31.507645: saving best epoch checkpoint...
2022-10-28 10:41:31.576424: saving checkpoint...
2022-10-28 10:41:33.071491: done, saving took 1.56 seconds
2022-10-28 10:41:33.077987: This epoch took 88.832762 s

2022-10-28 10:41:33.079537: 
epoch:  27
2022-10-28 10:42:53.702026: train loss : -1.8023
2022-10-28 10:42:59.489198: validation loss: -1.6156
2022-10-28 10:42:59.492725: Average global foreground Dice: [0.8485]
2022-10-28 10:42:59.494150: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:42:59.938174: Suus1 maybe_update_lr lr: 0.009748
2022-10-28 10:42:59.939888: saving best epoch checkpoint...
2022-10-28 10:43:00.012024: saving checkpoint...
2022-10-28 10:43:01.738585: done, saving took 1.80 seconds
2022-10-28 10:43:01.746500: This epoch took 88.665611 s

2022-10-28 10:43:01.748165: 
epoch:  28
2022-10-28 10:44:22.401395: train loss : -1.8020
2022-10-28 10:44:28.202226: validation loss: -1.6577
2022-10-28 10:44:28.204539: Average global foreground Dice: [0.8661]
2022-10-28 10:44:28.206014: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:44:29.095171: Suus1 maybe_update_lr lr: 0.009739
2022-10-28 10:44:29.097146: saving best epoch checkpoint...
2022-10-28 10:44:29.158721: saving checkpoint...
2022-10-28 10:44:30.387339: done, saving took 1.29 seconds
2022-10-28 10:44:30.392672: This epoch took 88.643140 s

2022-10-28 10:44:30.394054: 
epoch:  29
2022-10-28 10:45:51.020469: train loss : -1.8150
2022-10-28 10:45:57.165379: validation loss: -1.6552
2022-10-28 10:45:57.169383: Average global foreground Dice: [0.8659]
2022-10-28 10:45:57.175333: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:45:57.648531: Suus1 maybe_update_lr lr: 0.00973
2022-10-28 10:45:57.650535: saving best epoch checkpoint...
2022-10-28 10:45:57.735316: saving checkpoint...
2022-10-28 10:45:59.151715: done, saving took 1.50 seconds
2022-10-28 10:45:59.157930: This epoch took 88.762489 s

2022-10-28 10:45:59.159540: 
epoch:  30
2022-10-28 10:47:19.804038: train loss : -1.7745
2022-10-28 10:47:25.627821: validation loss: -1.5935
2022-10-28 10:47:25.630653: Average global foreground Dice: [0.8404]
2022-10-28 10:47:25.632380: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:47:26.108544: Suus1 maybe_update_lr lr: 0.009721
2022-10-28 10:47:26.110474: saving best epoch checkpoint...
2022-10-28 10:47:26.216000: saving checkpoint...
2022-10-28 10:47:27.784451: done, saving took 1.67 seconds
2022-10-28 10:47:27.790089: This epoch took 88.629094 s

2022-10-28 10:47:27.791668: 
epoch:  31
2022-10-28 10:48:48.655142: train loss : -1.7834
2022-10-28 10:48:54.830036: validation loss: -1.6511
2022-10-28 10:48:54.832857: Average global foreground Dice: [0.863]
2022-10-28 10:48:54.834448: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:48:55.322256: Suus1 maybe_update_lr lr: 0.009712
2022-10-28 10:48:55.323948: saving best epoch checkpoint...
2022-10-28 10:48:55.390437: saving checkpoint...
2022-10-28 10:48:56.702945: done, saving took 1.38 seconds
2022-10-28 10:48:56.708752: This epoch took 88.915703 s

2022-10-28 10:48:56.710221: 
epoch:  32
2022-10-28 10:50:17.678087: train loss : -1.7821
2022-10-28 10:50:23.909930: validation loss: -1.6291
2022-10-28 10:50:23.912001: Average global foreground Dice: [0.8544]
2022-10-28 10:50:23.913581: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:50:24.375798: Suus1 maybe_update_lr lr: 0.009703
2022-10-28 10:50:24.377476: saving best epoch checkpoint...
2022-10-28 10:50:24.450048: saving checkpoint...
2022-10-28 10:50:25.899381: done, saving took 1.52 seconds
2022-10-28 10:50:25.927672: This epoch took 89.216037 s

2022-10-28 10:50:25.929707: 
epoch:  33
2022-10-28 10:51:46.881954: train loss : -1.7722
2022-10-28 10:51:53.437059: validation loss: -1.5819
2022-10-28 10:51:53.445127: Average global foreground Dice: [0.8355]
2022-10-28 10:51:53.446883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:51:53.911927: Suus1 maybe_update_lr lr: 0.009693
2022-10-28 10:51:53.913905: This epoch took 87.982625 s

2022-10-28 10:51:53.915695: 
epoch:  34
2022-10-28 10:53:15.784028: train loss : -1.7932
2022-10-28 10:53:21.565794: validation loss: -1.6063
2022-10-28 10:53:21.569594: Average global foreground Dice: [0.8463]
2022-10-28 10:53:21.571321: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:53:22.016231: Suus1 maybe_update_lr lr: 0.009684
2022-10-28 10:53:22.017953: saving best epoch checkpoint...
2022-10-28 10:53:22.076320: saving checkpoint...
2022-10-28 10:53:23.359042: done, saving took 1.34 seconds
2022-10-28 10:53:23.377442: This epoch took 89.460425 s

2022-10-28 10:53:23.379328: 
epoch:  35
2022-10-28 10:54:44.293164: train loss : -1.7981
2022-10-28 10:54:50.213501: validation loss: -1.6590
2022-10-28 10:54:50.217246: Average global foreground Dice: [0.8664]
2022-10-28 10:54:50.218839: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:54:50.718938: Suus1 maybe_update_lr lr: 0.009675
2022-10-28 10:54:50.721063: saving best epoch checkpoint...
2022-10-28 10:54:50.828323: saving checkpoint...
2022-10-28 10:54:52.239861: done, saving took 1.52 seconds
2022-10-28 10:54:52.249369: This epoch took 88.867803 s

2022-10-28 10:54:52.251231: 
epoch:  36
2022-10-28 10:56:13.401977: train loss : -1.8188
2022-10-28 10:56:19.155387: validation loss: -1.6088
2022-10-28 10:56:19.160083: Average global foreground Dice: [0.8472]
2022-10-28 10:56:19.167573: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:56:20.086425: Suus1 maybe_update_lr lr: 0.009666
2022-10-28 10:56:20.088562: saving best epoch checkpoint...
2022-10-28 10:56:20.190477: saving checkpoint...
2022-10-28 10:56:21.682969: done, saving took 1.59 seconds
2022-10-28 10:56:21.688456: This epoch took 89.435693 s

2022-10-28 10:56:21.689960: 
epoch:  37
2022-10-28 10:57:42.525944: train loss : -1.7159
2022-10-28 10:57:48.269605: validation loss: -1.5908
2022-10-28 10:57:48.271739: Average global foreground Dice: [0.8379]
2022-10-28 10:57:48.273268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:57:48.767401: Suus1 maybe_update_lr lr: 0.009657
2022-10-28 10:57:48.769503: This epoch took 87.078142 s

2022-10-28 10:57:48.771157: 
epoch:  38
2022-10-28 10:59:09.987373: train loss : -1.7558
2022-10-28 10:59:15.736544: validation loss: -1.6315
2022-10-28 10:59:15.738914: Average global foreground Dice: [0.8547]
2022-10-28 10:59:15.740541: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 10:59:16.238429: Suus1 maybe_update_lr lr: 0.009648
2022-10-28 10:59:16.240375: saving best epoch checkpoint...
2022-10-28 10:59:16.310631: saving checkpoint...
2022-10-28 10:59:17.744510: done, saving took 1.50 seconds
2022-10-28 10:59:17.751194: This epoch took 88.978378 s

2022-10-28 10:59:17.754112: 
epoch:  39
2022-10-28 11:00:38.565722: train loss : -1.7811
2022-10-28 11:00:44.317010: validation loss: -1.6324
2022-10-28 11:00:44.321060: Average global foreground Dice: [0.8565]
2022-10-28 11:00:44.324529: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:00:44.802656: Suus1 maybe_update_lr lr: 0.009639
2022-10-28 11:00:44.805693: saving best epoch checkpoint...
2022-10-28 11:00:44.866545: saving checkpoint...
2022-10-28 11:00:50.745994: done, saving took 5.93 seconds
2022-10-28 11:00:50.863927: This epoch took 93.105063 s

2022-10-28 11:00:50.866666: 
epoch:  40
2022-10-28 11:02:11.712966: train loss : -1.8067
2022-10-28 11:02:18.607651: validation loss: -1.6579
2022-10-28 11:02:18.612146: Average global foreground Dice: [0.8666]
2022-10-28 11:02:18.614368: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:02:19.482093: Suus1 maybe_update_lr lr: 0.00963
2022-10-28 11:02:19.485080: saving best epoch checkpoint...
2022-10-28 11:02:19.543496: saving checkpoint...
2022-10-28 11:02:22.119003: done, saving took 2.63 seconds
2022-10-28 11:02:22.126869: This epoch took 91.258023 s

2022-10-28 11:02:22.128469: 
epoch:  41
2022-10-28 11:03:42.827136: train loss : -1.8293
2022-10-28 11:03:49.239267: validation loss: -1.6723
2022-10-28 11:03:49.241459: Average global foreground Dice: [0.8718]
2022-10-28 11:03:49.243062: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:03:49.825593: Suus1 maybe_update_lr lr: 0.009621
2022-10-28 11:03:49.827498: saving best epoch checkpoint...
2022-10-28 11:03:49.924912: saving checkpoint...
2022-10-28 11:03:51.803164: done, saving took 1.97 seconds
2022-10-28 11:03:51.814441: This epoch took 89.684342 s

2022-10-28 11:03:51.816177: 
epoch:  42
2022-10-28 11:05:12.667274: train loss : -1.8101
2022-10-28 11:05:18.897437: validation loss: -1.6396
2022-10-28 11:05:18.902844: Average global foreground Dice: [0.8588]
2022-10-28 11:05:18.954522: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:05:19.433362: Suus1 maybe_update_lr lr: 0.009612
2022-10-28 11:05:19.435152: saving best epoch checkpoint...
2022-10-28 11:05:19.559825: saving checkpoint...
2022-10-28 11:05:24.328718: done, saving took 4.89 seconds
2022-10-28 11:05:24.336232: This epoch took 92.518636 s

2022-10-28 11:05:24.337715: 
epoch:  43
2022-10-28 11:06:45.113119: train loss : -1.8029
2022-10-28 11:06:50.867765: validation loss: -1.6317
2022-10-28 11:06:50.870520: Average global foreground Dice: [0.8544]
2022-10-28 11:06:50.872175: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:06:51.369354: Suus1 maybe_update_lr lr: 0.009603
2022-10-28 11:06:51.371327: saving best epoch checkpoint...
2022-10-28 11:06:51.501128: saving checkpoint...
2022-10-28 11:06:53.134729: done, saving took 1.76 seconds
2022-10-28 11:06:53.142321: This epoch took 88.803219 s

2022-10-28 11:06:53.143888: 
epoch:  44
2022-10-28 11:08:13.893762: train loss : -1.7928
2022-10-28 11:08:19.669943: validation loss: -1.6518
2022-10-28 11:08:19.672646: Average global foreground Dice: [0.8632]
2022-10-28 11:08:19.674156: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:08:20.406996: Suus1 maybe_update_lr lr: 0.009594
2022-10-28 11:08:20.408787: saving best epoch checkpoint...
2022-10-28 11:08:20.484820: saving checkpoint...
2022-10-28 11:08:23.654238: done, saving took 3.24 seconds
2022-10-28 11:08:23.659953: This epoch took 90.514544 s

2022-10-28 11:08:23.661477: 
epoch:  45
2022-10-28 11:09:44.283899: train loss : -1.8290
2022-10-28 11:09:50.080909: validation loss: -1.6522
2022-10-28 11:09:50.083509: Average global foreground Dice: [0.863]
2022-10-28 11:09:50.085147: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:09:50.569986: Suus1 maybe_update_lr lr: 0.009585
2022-10-28 11:09:50.571943: saving best epoch checkpoint...
2022-10-28 11:09:50.657466: saving checkpoint...
2022-10-28 11:09:52.599172: done, saving took 2.03 seconds
2022-10-28 11:09:52.739488: This epoch took 89.076540 s

2022-10-28 11:09:52.741308: 
epoch:  46
2022-10-28 11:11:13.472393: train loss : -1.8471
2022-10-28 11:11:19.547925: validation loss: -1.6493
2022-10-28 11:11:19.550231: Average global foreground Dice: [0.8621]
2022-10-28 11:11:19.551796: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:11:20.002020: Suus1 maybe_update_lr lr: 0.009576
2022-10-28 11:11:20.003721: saving best epoch checkpoint...
2022-10-28 11:11:20.058625: saving checkpoint...
2022-10-28 11:11:21.223721: done, saving took 1.22 seconds
2022-10-28 11:11:21.230141: This epoch took 88.487259 s

2022-10-28 11:11:21.231665: 
epoch:  47
2022-10-28 11:12:41.815610: train loss : -1.8217
2022-10-28 11:12:47.540530: validation loss: -1.6139
2022-10-28 11:12:47.542930: Average global foreground Dice: [0.8478]
2022-10-28 11:12:47.544511: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:12:47.993463: Suus1 maybe_update_lr lr: 0.009567
2022-10-28 11:12:47.995317: This epoch took 86.762210 s

2022-10-28 11:12:47.996760: 
epoch:  48
2022-10-28 11:14:09.443658: train loss : -1.8140
2022-10-28 11:14:15.487218: validation loss: -1.6709
2022-10-28 11:14:15.489598: Average global foreground Dice: [0.8709]
2022-10-28 11:14:15.491061: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:14:15.957963: Suus1 maybe_update_lr lr: 0.009558
2022-10-28 11:14:15.962352: saving best epoch checkpoint...
2022-10-28 11:14:16.043054: saving checkpoint...
2022-10-28 11:14:17.634986: done, saving took 1.67 seconds
2022-10-28 11:14:17.641515: This epoch took 89.643184 s

2022-10-28 11:14:17.643000: 
epoch:  49
2022-10-28 11:15:39.022060: train loss : -1.8384
2022-10-28 11:15:44.846044: validation loss: -1.6416
2022-10-28 11:15:44.848643: Average global foreground Dice: [0.8576]
2022-10-28 11:15:44.850376: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:15:45.351654: Suus1 maybe_update_lr lr: 0.009549
2022-10-28 11:15:45.353474: saving scheduled checkpoint file...
2022-10-28 11:15:45.425739: saving checkpoint...
2022-10-28 11:15:47.026390: done, saving took 1.67 seconds
2022-10-28 11:15:47.033087: done
2022-10-28 11:15:47.035310: saving best epoch checkpoint...
2022-10-28 11:15:47.132230: saving checkpoint...
2022-10-28 11:15:48.725245: done, saving took 1.69 seconds
2022-10-28 11:15:48.731848: This epoch took 91.087485 s

2022-10-28 11:15:48.733253: 
epoch:  50
2022-10-28 11:17:09.482150: train loss : -1.8338
2022-10-28 11:17:15.744092: validation loss: -1.6593
2022-10-28 11:17:15.756132: Average global foreground Dice: [0.8648]
2022-10-28 11:17:15.761493: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:17:16.224704: Suus1 maybe_update_lr lr: 0.00954
2022-10-28 11:17:16.227382: saving best epoch checkpoint...
2022-10-28 11:17:16.329304: saving checkpoint...
2022-10-28 11:17:17.680389: done, saving took 1.44 seconds
2022-10-28 11:17:17.696383: This epoch took 88.961773 s

2022-10-28 11:17:17.702319: 
epoch:  51
2022-10-28 11:18:38.794255: train loss : -1.8422
2022-10-28 11:18:44.945994: validation loss: -1.6234
2022-10-28 11:18:44.948437: Average global foreground Dice: [0.8515]
2022-10-28 11:18:44.949982: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:18:45.421321: Suus1 maybe_update_lr lr: 0.009531
2022-10-28 11:18:45.423103: This epoch took 87.718775 s

2022-10-28 11:18:45.424445: 
epoch:  52
2022-10-28 11:20:06.925536: train loss : -1.8383
2022-10-28 11:20:14.546329: validation loss: -1.5993
2022-10-28 11:20:14.548895: Average global foreground Dice: [0.8408]
2022-10-28 11:20:14.560340: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:20:15.058505: Suus1 maybe_update_lr lr: 0.009522
2022-10-28 11:20:15.060517: This epoch took 89.634720 s

2022-10-28 11:20:15.061996: 
epoch:  53
2022-10-28 11:21:36.355676: train loss : -1.8311
2022-10-28 11:21:42.380568: validation loss: -1.6329
2022-10-28 11:21:42.387161: Average global foreground Dice: [0.8561]
2022-10-28 11:21:42.389423: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:21:42.868861: Suus1 maybe_update_lr lr: 0.009513
2022-10-28 11:21:42.873210: This epoch took 87.809749 s

2022-10-28 11:21:42.879482: 
epoch:  54
2022-10-28 11:23:04.176415: train loss : -1.8520
2022-10-28 11:23:11.149594: validation loss: -1.6318
2022-10-28 11:23:11.153644: Average global foreground Dice: [0.852]
2022-10-28 11:23:11.156836: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:23:11.661108: Suus1 maybe_update_lr lr: 0.009504
2022-10-28 11:23:11.663149: This epoch took 88.781846 s

2022-10-28 11:23:11.664858: 
epoch:  55
2022-10-28 11:24:33.535488: train loss : -1.8126
2022-10-28 11:24:39.297921: validation loss: -1.6430
2022-10-28 11:24:39.303307: Average global foreground Dice: [0.8574]
2022-10-28 11:24:39.304894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:24:39.795103: Suus1 maybe_update_lr lr: 0.009495
2022-10-28 11:24:39.797332: This epoch took 88.127136 s

2022-10-28 11:24:39.798908: 
epoch:  56
2022-10-28 11:26:01.323621: train loss : -1.8390
2022-10-28 11:26:07.429838: validation loss: -1.6298
2022-10-28 11:26:07.432086: Average global foreground Dice: [0.8529]
2022-10-28 11:26:07.433516: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:26:07.922779: Suus1 maybe_update_lr lr: 0.009486
2022-10-28 11:26:07.924659: This epoch took 88.121316 s

2022-10-28 11:26:07.926087: 
epoch:  57
2022-10-28 11:27:29.555481: train loss : -1.8469
2022-10-28 11:27:35.331921: validation loss: -1.6510
2022-10-28 11:27:35.335240: Average global foreground Dice: [0.8608]
2022-10-28 11:27:35.336825: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:27:35.842958: Suus1 maybe_update_lr lr: 0.009476
2022-10-28 11:27:35.844761: This epoch took 87.917353 s

2022-10-28 11:27:35.846137: 
epoch:  58
2022-10-28 11:28:57.069954: train loss : -1.8296
2022-10-28 11:29:03.548037: validation loss: -1.6059
2022-10-28 11:29:03.550549: Average global foreground Dice: [0.8455]
2022-10-28 11:29:03.552186: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:29:04.087136: Suus1 maybe_update_lr lr: 0.009467
2022-10-28 11:29:04.089077: This epoch took 88.241570 s

2022-10-28 11:29:04.090660: 
epoch:  59
2022-10-28 11:30:25.548478: train loss : -1.8150
2022-10-28 11:30:31.331980: validation loss: -1.6331
2022-10-28 11:30:31.334375: Average global foreground Dice: [0.8534]
2022-10-28 11:30:31.335840: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:30:31.838367: Suus1 maybe_update_lr lr: 0.009458
2022-10-28 11:30:31.840189: This epoch took 87.747820 s

2022-10-28 11:30:31.841605: 
epoch:  60
2022-10-28 11:31:53.114665: train loss : -1.8551
2022-10-28 11:31:59.714105: validation loss: -1.6351
2022-10-28 11:31:59.717135: Average global foreground Dice: [0.8548]
2022-10-28 11:31:59.718766: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:32:00.243577: Suus1 maybe_update_lr lr: 0.009449
2022-10-28 11:32:00.245739: This epoch took 88.402766 s

2022-10-28 11:32:00.247359: 
epoch:  61
2022-10-28 11:33:21.852293: train loss : -1.8499
2022-10-28 11:33:28.007692: validation loss: -1.6367
2022-10-28 11:33:28.017523: Average global foreground Dice: [0.8549]
2022-10-28 11:33:28.019079: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:33:28.506208: Suus1 maybe_update_lr lr: 0.00944
2022-10-28 11:33:28.508569: This epoch took 88.259742 s

2022-10-28 11:33:28.510828: 
epoch:  62
2022-10-28 11:34:50.870831: train loss : -1.8612
2022-10-28 11:34:56.636126: validation loss: -1.6270
2022-10-28 11:34:56.638258: Average global foreground Dice: [0.8507]
2022-10-28 11:34:56.639706: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:34:57.133795: Suus1 maybe_update_lr lr: 0.009431
2022-10-28 11:34:57.135602: This epoch took 88.621597 s

2022-10-28 11:34:57.137043: 
epoch:  63
2022-10-28 11:36:18.418018: train loss : -1.8598
2022-10-28 11:36:24.547545: validation loss: -1.6499
2022-10-28 11:36:24.550390: Average global foreground Dice: [0.8607]
2022-10-28 11:36:24.551951: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:36:25.042059: Suus1 maybe_update_lr lr: 0.009422
2022-10-28 11:36:25.044285: This epoch took 87.905715 s

2022-10-28 11:36:25.045759: 
epoch:  64
2022-10-28 11:37:46.100033: train loss : -1.8675
2022-10-28 11:37:52.215993: validation loss: -1.5692
2022-10-28 11:37:52.218578: Average global foreground Dice: [0.8305]
2022-10-28 11:37:52.220239: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:37:52.706295: Suus1 maybe_update_lr lr: 0.009413
2022-10-28 11:37:52.708541: This epoch took 87.660830 s

2022-10-28 11:37:52.710194: 
epoch:  65
2022-10-28 11:39:14.158339: train loss : -1.8502
2022-10-28 11:39:20.870320: validation loss: -1.6408
2022-10-28 11:39:20.873552: Average global foreground Dice: [0.856]
2022-10-28 11:39:20.875638: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:39:21.368327: Suus1 maybe_update_lr lr: 0.009404
2022-10-28 11:39:21.370382: This epoch took 88.658691 s

2022-10-28 11:39:21.371959: 
epoch:  66
2022-10-28 11:40:42.929060: train loss : -1.8556
2022-10-28 11:40:49.487705: validation loss: -1.6490
2022-10-28 11:40:49.490691: Average global foreground Dice: [0.8585]
2022-10-28 11:40:49.492265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:40:50.063765: Suus1 maybe_update_lr lr: 0.009395
2022-10-28 11:40:50.066020: This epoch took 88.692240 s

2022-10-28 11:40:50.067569: 
epoch:  67
2022-10-28 11:42:11.471061: train loss : -1.8741
2022-10-28 11:42:19.714788: validation loss: -1.6196
2022-10-28 11:42:19.717528: Average global foreground Dice: [0.8484]
2022-10-28 11:42:19.719087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:42:20.253169: Suus1 maybe_update_lr lr: 0.009386
2022-10-28 11:42:20.255133: This epoch took 90.186153 s

2022-10-28 11:42:20.256628: 
epoch:  68
2022-10-28 11:43:42.708444: train loss : -1.8610
2022-10-28 11:43:48.568352: validation loss: -1.6608
2022-10-28 11:43:48.572020: Average global foreground Dice: [0.8648]
2022-10-28 11:43:48.573668: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:43:49.073977: Suus1 maybe_update_lr lr: 0.009377
2022-10-28 11:43:49.075898: This epoch took 88.816933 s

2022-10-28 11:43:49.077443: 
epoch:  69
2022-10-28 11:45:11.116179: train loss : -1.8381
2022-10-28 11:45:17.349755: validation loss: -1.5941
2022-10-28 11:45:17.352448: Average global foreground Dice: [0.8392]
2022-10-28 11:45:17.356672: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:45:17.832064: Suus1 maybe_update_lr lr: 0.009368
2022-10-28 11:45:17.834286: This epoch took 88.755110 s

2022-10-28 11:45:17.835793: 
epoch:  70
2022-10-28 11:46:39.334674: train loss : -1.8349
2022-10-28 11:46:45.195881: validation loss: -1.6434
2022-10-28 11:46:45.249631: Average global foreground Dice: [0.8594]
2022-10-28 11:46:45.265709: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:46:45.779642: Suus1 maybe_update_lr lr: 0.009359
2022-10-28 11:46:45.807815: This epoch took 87.970503 s

2022-10-28 11:46:45.816344: 
epoch:  71
2022-10-28 11:48:07.236255: train loss : -1.8275
2022-10-28 11:48:13.561545: validation loss: -1.6025
2022-10-28 11:48:13.565480: Average global foreground Dice: [0.8381]
2022-10-28 11:48:13.567704: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:48:14.118352: Suus1 maybe_update_lr lr: 0.00935
2022-10-28 11:48:14.120955: This epoch took 88.291761 s

2022-10-28 11:48:14.122414: 
epoch:  72
2022-10-28 11:49:35.856653: train loss : -1.8276
2022-10-28 11:49:41.777331: validation loss: -1.6606
2022-10-28 11:49:41.780010: Average global foreground Dice: [0.8651]
2022-10-28 11:49:41.781781: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:49:42.309542: Suus1 maybe_update_lr lr: 0.009341
2022-10-28 11:49:42.313586: This epoch took 88.189497 s

2022-10-28 11:49:42.319764: 
epoch:  73
2022-10-28 11:51:04.410175: train loss : -1.8220
2022-10-28 11:51:10.322490: validation loss: -1.6182
2022-10-28 11:51:10.325481: Average global foreground Dice: [0.8484]
2022-10-28 11:51:10.327857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:51:10.824044: Suus1 maybe_update_lr lr: 0.009331
2022-10-28 11:51:10.826206: This epoch took 88.494785 s

2022-10-28 11:51:10.827666: 
epoch:  74
2022-10-28 11:52:32.460726: train loss : -1.8175
2022-10-28 11:52:38.377480: validation loss: -1.6565
2022-10-28 11:52:38.380543: Average global foreground Dice: [0.8641]
2022-10-28 11:52:38.382149: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:52:38.886322: Suus1 maybe_update_lr lr: 0.009322
2022-10-28 11:52:38.892672: This epoch took 88.063323 s

2022-10-28 11:52:38.895662: 
epoch:  75
2022-10-28 11:54:00.768025: train loss : -1.8501
2022-10-28 11:54:07.156795: validation loss: -1.6386
2022-10-28 11:54:07.159738: Average global foreground Dice: [0.8556]
2022-10-28 11:54:07.161494: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:54:07.643310: Suus1 maybe_update_lr lr: 0.009313
2022-10-28 11:54:07.645400: This epoch took 88.748668 s

2022-10-28 11:54:07.646776: 
epoch:  76
2022-10-28 11:55:29.798730: train loss : -1.8686
2022-10-28 11:55:35.727738: validation loss: -1.6687
2022-10-28 11:55:35.730318: Average global foreground Dice: [0.8676]
2022-10-28 11:55:35.732033: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:55:36.244275: Suus1 maybe_update_lr lr: 0.009304
2022-10-28 11:55:36.246995: This epoch took 88.598918 s

2022-10-28 11:55:36.259049: 
epoch:  77
2022-10-28 11:56:58.273135: train loss : -1.8391
2022-10-28 11:57:04.270891: validation loss: -1.6528
2022-10-28 11:57:04.273554: Average global foreground Dice: [0.8616]
2022-10-28 11:57:04.275061: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:57:04.748705: Suus1 maybe_update_lr lr: 0.009295
2022-10-28 11:57:04.750664: This epoch took 88.489012 s

2022-10-28 11:57:04.752123: 
epoch:  78
2022-10-28 11:58:26.947375: train loss : -1.8501
2022-10-28 11:58:33.058443: validation loss: -1.6234
2022-10-28 11:58:33.060843: Average global foreground Dice: [0.8486]
2022-10-28 11:58:33.062372: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 11:58:33.574381: Suus1 maybe_update_lr lr: 0.009286
2022-10-28 11:58:33.576307: This epoch took 88.822748 s

2022-10-28 11:58:33.577736: 
epoch:  79
2022-10-28 11:59:54.968387: train loss : -1.8625
2022-10-28 12:00:01.031550: validation loss: -1.6461
2022-10-28 12:00:01.034564: Average global foreground Dice: [0.8583]
2022-10-28 12:00:01.036124: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:00:01.540305: Suus1 maybe_update_lr lr: 0.009277
2022-10-28 12:00:01.542188: This epoch took 87.963084 s

2022-10-28 12:00:01.543769: 
epoch:  80
2022-10-28 12:01:23.286868: train loss : -1.8565
2022-10-28 12:01:29.215244: validation loss: -1.6275
2022-10-28 12:01:29.217703: Average global foreground Dice: [0.8511]
2022-10-28 12:01:29.219369: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:01:29.731338: Suus1 maybe_update_lr lr: 0.009268
2022-10-28 12:01:29.733546: This epoch took 88.188173 s

2022-10-28 12:01:29.735003: 
epoch:  81
2022-10-28 12:02:51.779037: train loss : -1.8497
2022-10-28 12:02:59.231484: validation loss: -1.4710
2022-10-28 12:02:59.233674: Average global foreground Dice: [0.7923]
2022-10-28 12:02:59.235174: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:02:59.770060: Suus1 maybe_update_lr lr: 0.009259
2022-10-28 12:02:59.771754: This epoch took 90.035446 s

2022-10-28 12:02:59.773201: 
epoch:  82
2022-10-28 12:04:21.652632: train loss : -1.8202
2022-10-28 12:04:28.205462: validation loss: -1.5650
2022-10-28 12:04:28.208653: Average global foreground Dice: [0.8255]
2022-10-28 12:04:28.210597: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:04:28.754973: Suus1 maybe_update_lr lr: 0.00925
2022-10-28 12:04:28.756820: This epoch took 88.982299 s

2022-10-28 12:04:28.758294: 
epoch:  83
2022-10-28 12:05:50.515817: train loss : -1.8232
2022-10-28 12:05:56.403347: validation loss: -1.6058
2022-10-28 12:05:56.406355: Average global foreground Dice: [0.8428]
2022-10-28 12:05:56.407815: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:05:56.929856: Suus1 maybe_update_lr lr: 0.009241
2022-10-28 12:05:56.931838: This epoch took 88.172155 s

2022-10-28 12:05:56.933544: 
epoch:  84
2022-10-28 12:07:18.856905: train loss : -1.8406
2022-10-28 12:07:24.986142: validation loss: -1.5924
2022-10-28 12:07:24.988359: Average global foreground Dice: [0.8356]
2022-10-28 12:07:24.989956: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:07:25.486248: Suus1 maybe_update_lr lr: 0.009232
2022-10-28 12:07:25.487978: This epoch took 88.552909 s

2022-10-28 12:07:25.489458: 
epoch:  85
2022-10-28 12:08:47.106641: train loss : -1.8532
2022-10-28 12:08:53.636359: validation loss: -1.6561
2022-10-28 12:08:53.640031: Average global foreground Dice: [0.8622]
2022-10-28 12:08:53.641847: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:08:54.172019: Suus1 maybe_update_lr lr: 0.009223
2022-10-28 12:08:54.173985: This epoch took 88.683177 s

2022-10-28 12:08:54.175375: 
epoch:  86
2022-10-28 12:10:15.973449: train loss : -1.8778
2022-10-28 12:10:22.916216: validation loss: -1.6713
2022-10-28 12:10:22.918890: Average global foreground Dice: [0.869]
2022-10-28 12:10:22.920606: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:10:23.392545: Suus1 maybe_update_lr lr: 0.009213
2022-10-28 12:10:23.419037: This epoch took 89.242320 s

2022-10-28 12:10:23.486438: 
epoch:  87
2022-10-28 12:11:44.917337: train loss : -1.8794
2022-10-28 12:11:50.651882: validation loss: -1.6647
2022-10-28 12:11:50.654743: Average global foreground Dice: [0.867]
2022-10-28 12:11:50.656240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:11:51.158293: Suus1 maybe_update_lr lr: 0.009204
2022-10-28 12:11:51.160986: This epoch took 87.652600 s

2022-10-28 12:11:51.162995: 
epoch:  88
2022-10-28 12:13:12.771909: train loss : -1.8798
2022-10-28 12:13:19.487522: validation loss: -1.6415
2022-10-28 12:13:19.489850: Average global foreground Dice: [0.8572]
2022-10-28 12:13:19.491499: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:13:20.022236: Suus1 maybe_update_lr lr: 0.009195
2022-10-28 12:13:20.024142: This epoch took 88.859427 s

2022-10-28 12:13:20.025652: 
epoch:  89
2022-10-28 12:14:41.702501: train loss : -1.8705
2022-10-28 12:14:47.475498: validation loss: -1.6545
2022-10-28 12:14:47.478379: Average global foreground Dice: [0.8608]
2022-10-28 12:14:47.479852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:14:48.044948: Suus1 maybe_update_lr lr: 0.009186
2022-10-28 12:14:48.046852: This epoch took 88.019501 s

2022-10-28 12:14:48.048335: 
epoch:  90
2022-10-28 12:16:09.612459: train loss : -1.8674
2022-10-28 12:16:16.438811: validation loss: -1.6055
2022-10-28 12:16:16.440990: Average global foreground Dice: [0.8413]
2022-10-28 12:16:16.442307: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-10-28 12:16:16.920566: Suus1 maybe_update_lr lr: 0.009177
2022-10-28 12:16:16.922705: 