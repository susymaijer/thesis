Starting at Mon Jun 20 02:24:17 CEST 2022
Running on hosts: res-hpc-lkeb07
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 6.
Account: div2-lkeb
Job ID: 10582150
Job name: PancreasAll
Node running script: res-hpc-lkeb07
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Tue Jun 28 22:45:49 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.82.01    Driver Version: 470.82.01    CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  Quadro RTX 6000     Off  | 00000000:3B:00.0 Off |                  Off |
| 31%   37C    P0    64W / 260W |      0MiB / 24220MiB |      4%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-bt5r0ni3/hiddenlayer_41b4b5cbf4514ef6aff2b12e0d6b539d
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Obtaining file:///home/smaijer/code/nnUNet
Requirement already satisfied: torch>1.10.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (1.12.0)
Requirement already satisfied: tqdm in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (4.64.0)
Requirement already satisfied: dicom2nifti in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (2.4.2)
Requirement already satisfied: scikit-image>=0.14 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (0.19.3)
Requirement already satisfied: medpy in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (0.4.0)
Requirement already satisfied: scipy in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (1.8.1)
Requirement already satisfied: batchgenerators>=0.23 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (0.24)
Requirement already satisfied: numpy in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (1.23.0)
Requirement already satisfied: sklearn in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (0.0)
Requirement already satisfied: SimpleITK in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (2.1.1.2)
Requirement already satisfied: pandas in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (1.4.3)
Requirement already satisfied: requests in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (2.28.0)
Requirement already satisfied: nibabel in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (4.0.1)
Requirement already satisfied: tifffile in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (2022.5.4)
Requirement already satisfied: matplotlib in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (3.5.2)
Requirement already satisfied: monai in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (0.9.0)
Requirement already satisfied: einops in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (0.4.1)
Requirement already satisfied: ipython in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (8.4.0)
Requirement already satisfied: graphviz in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from nnunet==1.7.0) (0.20)
Requirement already satisfied: threadpoolctl in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from batchgenerators>=0.23->nnunet==1.7.0) (3.1.0)
Requirement already satisfied: unittest2 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from batchgenerators>=0.23->nnunet==1.7.0) (1.1.0)
Requirement already satisfied: scikit-learn in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from batchgenerators>=0.23->nnunet==1.7.0) (1.1.1)
Requirement already satisfied: future in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from batchgenerators>=0.23->nnunet==1.7.0) (0.18.2)
Requirement already satisfied: pillow>=7.1.2 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from batchgenerators>=0.23->nnunet==1.7.0) (9.1.1)
Requirement already satisfied: packaging>=20.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from scikit-image>=0.14->nnunet==1.7.0) (21.3)
Requirement already satisfied: networkx>=2.2 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from scikit-image>=0.14->nnunet==1.7.0) (2.8.4)
Requirement already satisfied: PyWavelets>=1.1.1 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from scikit-image>=0.14->nnunet==1.7.0) (1.3.0)
Requirement already satisfied: imageio>=2.4.1 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from scikit-image>=0.14->nnunet==1.7.0) (2.19.3)
Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from packaging>=20.0->scikit-image>=0.14->nnunet==1.7.0) (3.0.9)
Requirement already satisfied: typing-extensions in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from torch>1.10.0->nnunet==1.7.0) (4.2.0)
Requirement already satisfied: python-gdcm in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from dicom2nifti->nnunet==1.7.0) (3.0.14)
Requirement already satisfied: pydicom>=2.2.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from dicom2nifti->nnunet==1.7.0) (2.3.0)
Requirement already satisfied: decorator in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (5.1.1)
Requirement already satisfied: backcall in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (0.2.0)
Requirement already satisfied: matplotlib-inline in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (0.1.3)
Requirement already satisfied: pexpect>4.3 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (4.8.0)
Requirement already satisfied: setuptools>=18.5 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (58.1.0)
Requirement already satisfied: pickleshare in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (0.7.5)
Requirement already satisfied: stack-data in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (0.3.0)
Requirement already satisfied: traitlets>=5 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (5.3.0)
Requirement already satisfied: prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (3.0.30)
Requirement already satisfied: pygments>=2.4.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (2.12.0)
Requirement already satisfied: jedi>=0.16 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from ipython->nnunet==1.7.0) (0.18.1)
Requirement already satisfied: parso<0.9.0,>=0.8.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from jedi>=0.16->ipython->nnunet==1.7.0) (0.8.3)
Requirement already satisfied: ptyprocess>=0.5 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from pexpect>4.3->ipython->nnunet==1.7.0) (0.7.0)
Requirement already satisfied: wcwidth in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from prompt-toolkit!=3.0.0,!=3.0.1,<3.1.0,>=2.0.0->ipython->nnunet==1.7.0) (0.2.5)
Requirement already satisfied: fonttools>=4.22.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from matplotlib->nnunet==1.7.0) (4.33.3)
Requirement already satisfied: kiwisolver>=1.0.1 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from matplotlib->nnunet==1.7.0) (1.4.3)
Requirement already satisfied: python-dateutil>=2.7 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from matplotlib->nnunet==1.7.0) (2.8.2)
Requirement already satisfied: cycler>=0.10 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from matplotlib->nnunet==1.7.0) (0.11.0)
Requirement already satisfied: six>=1.5 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from python-dateutil>=2.7->matplotlib->nnunet==1.7.0) (1.16.0)
Requirement already satisfied: pytz>=2020.1 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from pandas->nnunet==1.7.0) (2022.1)
Requirement already satisfied: idna<4,>=2.5 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from requests->nnunet==1.7.0) (3.3)
Requirement already satisfied: charset-normalizer~=2.0.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from requests->nnunet==1.7.0) (2.0.12)
Requirement already satisfied: certifi>=2017.4.17 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from requests->nnunet==1.7.0) (2022.6.15)
Requirement already satisfied: urllib3<1.27,>=1.21.1 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from requests->nnunet==1.7.0) (1.26.9)
Requirement already satisfied: joblib>=1.0.0 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from scikit-learn->batchgenerators>=0.23->nnunet==1.7.0) (1.1.0)
Requirement already satisfied: pure-eval in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from stack-data->ipython->nnunet==1.7.0) (0.2.2)
Requirement already satisfied: executing in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from stack-data->ipython->nnunet==1.7.0) (0.8.3)
Requirement already satisfied: asttokens in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from stack-data->ipython->nnunet==1.7.0) (2.0.5)
Collecting argparse
  Using cached argparse-1.4.0-py2.py3-none-any.whl (23 kB)
Requirement already satisfied: traceback2 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from unittest2->batchgenerators>=0.23->nnunet==1.7.0) (1.4.0)
Requirement already satisfied: linecache2 in /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages (from traceback2->unittest2->batchgenerators>=0.23->nnunet==1.7.0) (1.0.0)
Installing collected packages: argparse, nnunet
  Attempting uninstall: nnunet
    Found existing installation: nnunet 1.7.0
    Uninstalling nnunet-1.7.0:
      Successfully uninstalled nnunet-1.7.0
  Running setup.py develop for nnunet
Successfully installed argparse-1.4.0 nnunet-1.7.0


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='700', fold='0', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  15
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 80, 160, 160]), 'median_patient_size_in_voxels': array([138, 243, 243]), 'current_spacing': array([3.28926364, 1.64543342, 1.64543342]), 'original_spacing': array([2.        , 0.78014851, 0.78014851]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 160, 160]), 'median_patient_size_in_voxels': array([228, 513, 513]), 'current_spacing': array([2.        , 0.78014851, 0.78014851]), 'original_spacing': array([2.        , 0.78014851, 0.78014851]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task700/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-06-28 22:46:13.635684: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task700/splits_final.pkl
2022-06-28 22:46:13.646735: The split file contains 5 splits.
2022-06-28 22:46:13.649636: Desired fold for training: 0
2022-06-28 22:46:13.651814: This split has 192 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [2, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-06-28 22:46:16.513055: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task700/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-06-28 22:46:18.589649: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
2022-06-28 22:46:39.793041: Unable to plot network architecture:
2022-06-28 22:46:39.797535: _jit_pass_onnx_unpack_quantized_weights(): incompatible function arguments. The following argument types are supported:
    1. (arg0: torch::jit::Graph, arg1: Dict[str, IValue], arg2: bool) -> Dict[str, IValue]

Invoked with: graph(%input.1 : Float(1, 1, 64, 160, 160, strides=[1638400, 1638400, 25600, 160, 1], requires_grad=0, device=cuda:0),
      %1 : Float(320, 640, 3, 3, 3, strides=[17280, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %2 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %3 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %4 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %5 : Float(320, 320, 3, 3, 3, strides=[8640, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %6 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %7 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %8 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %9 : Float(256, 512, 3, 3, 3, strides=[13824, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %10 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %11 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %12 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %13 : Float(256, 256, 3, 3, 3, strides=[6912, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %14 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %15 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %16 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %17 : Float(128, 256, 3, 3, 3, strides=[6912, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %18 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %19 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %20 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %21 : Float(128, 128, 3, 3, 3, strides=[3456, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %22 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %23 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %24 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %25 : Float(64, 128, 3, 3, 3, strides=[3456, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %26 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %27 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %28 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %29 : Float(64, 64, 3, 3, 3, strides=[1728, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %30 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %31 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %32 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %33 : Float(32, 64, 3, 3, 3, strides=[1728, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %34 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %35 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %36 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %37 : Float(32, 32, 3, 3, 3, strides=[864, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %38 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %39 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %40 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %41 : Float(32, 1, 1, 3, 3, strides=[9, 9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %42 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %43 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %44 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %45 : Float(32, 32, 1, 3, 3, strides=[288, 9, 9, 3, 1], requires_grad=1, device=cuda:0),
      %46 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %47 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %48 : Float(32, strides=[1], requires_grad=1, device=cuda:0),
      %49 : Float(64, 32, 3, 3, 3, strides=[864, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %50 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %51 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %52 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %53 : Float(64, 64, 3, 3, 3, strides=[1728, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %54 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %55 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %56 : Float(64, strides=[1], requires_grad=1, device=cuda:0),
      %57 : Float(128, 64, 3, 3, 3, strides=[1728, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %58 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %59 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %60 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %61 : Float(128, 128, 3, 3, 3, strides=[3456, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %62 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %63 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %64 : Float(128, strides=[1], requires_grad=1, device=cuda:0),
      %65 : Float(256, 128, 3, 3, 3, strides=[3456, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %66 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %67 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %68 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %69 : Float(256, 256, 3, 3, 3, strides=[6912, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %70 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %71 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %72 : Float(256, strides=[1], requires_grad=1, device=cuda:0),
      %73 : Float(320, 256, 3, 3, 3, strides=[6912, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %74 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %75 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %76 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %77 : Float(320, 320, 3, 3, 3, strides=[8640, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %78 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %79 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %80 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %81 : Float(320, 320, 3, 3, 3, strides=[8640, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %82 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %83 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %84 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %85 : Float(320, 320, 3, 3, 3, strides=[8640, 27, 9, 3, 1], requires_grad=1, device=cuda:0),
      %86 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %87 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %88 : Float(320, strides=[1], requires_grad=1, device=cuda:0),
      %89 : Float(320, 320, 2, 2, 2, strides=[2560, 8, 4, 2, 1], requires_grad=1, device=cuda:0),
      %90 : Float(320, 256, 2, 2, 2, strides=[2048, 8, 4, 2, 1], requires_grad=1, device=cuda:0),
      %91 : Float(256, 128, 2, 2, 2, strides=[1024, 8, 4, 2, 1], requires_grad=1, device=cuda:0),
      %92 : Float(128, 64, 2, 2, 2, strides=[512, 8, 4, 2, 1], requires_grad=1, device=cuda:0),
      %93 : Float(64, 32, 1, 2, 2, strides=[128, 4, 4, 2, 1], requires_grad=1, device=cuda:0),
      %94 : Float(16, 320, 1, 1, 1, strides=[320, 1, 1, 1, 1], requires_grad=1, device=cuda:0),
      %95 : Float(16, 256, 1, 1, 1, strides=[256, 1, 1, 1, 1], requires_grad=1, device=cuda:0),
      %96 : Float(16, 128, 1, 1, 1, strides=[128, 1, 1, 1, 1], requires_grad=1, device=cuda:0),
      %97 : Float(16, 64, 1, 1, 1, strides=[64, 1, 1, 1, 1], requires_grad=1, device=cuda:0),
      %98 : Float(16, 32, 1, 1, 1, strides=[32, 1, 1, 1, 1], requires_grad=1, device=cuda:0)):
  %1719 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1720 : int[] = prim::Constant[value=[0, 1, 1]]()
  %1721 : int[] = prim::Constant[value=[1, 1, 1]]()
  %309 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1722 : int[] = prim::Constant[value=[0, 0, 0]]()
  %314 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %315 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %316 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %317 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %318 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.3 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%input.1, %41, %42, %1719, %1720, %1721, %309, %1722, %314, %315, %316, %317, %318) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %341 : NoneType = prim::Constant()
  %342 : NoneType = prim::Constant()
  %343 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %344 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %345 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %346 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %348 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.5 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.3, %43, %44, %341, %342, %343, %344, %345, %346) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1847 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.5, %348) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1723 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1724 : int[] = prim::Constant[value=[0, 1, 1]]()
  %1725 : int[] = prim::Constant[value=[1, 1, 1]]()
  %362 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1726 : int[] = prim::Constant[value=[0, 0, 0]]()
  %367 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %368 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %369 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %370 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %371 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.9 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1847, %45, %46, %1723, %1724, %1725, %362, %1726, %367, %368, %369, %370, %371) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %394 : NoneType = prim::Constant()
  %395 : NoneType = prim::Constant()
  %396 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %397 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %398 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %399 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %401 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.11 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.9, %47, %48, %394, %395, %396, %397, %398, %399) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1848 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.11, %401) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1727 : int[] = prim::Constant[value=[1, 2, 2]]()
  %1728 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1729 : int[] = prim::Constant[value=[1, 1, 1]]()
  %415 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1730 : int[] = prim::Constant[value=[0, 0, 0]]()
  %420 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %421 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %422 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %423 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %424 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.15 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1848, %49, %50, %1727, %1728, %1729, %415, %1730, %420, %421, %422, %423, %424) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %447 : NoneType = prim::Constant()
  %448 : NoneType = prim::Constant()
  %449 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %450 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %451 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %452 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %454 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.17 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.15, %51, %52, %447, %448, %449, %450, %451, %452) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1849 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.17, %454) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1731 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1732 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1733 : int[] = prim::Constant[value=[1, 1, 1]]()
  %468 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1734 : int[] = prim::Constant[value=[0, 0, 0]]()
  %473 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %474 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %475 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %476 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %477 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.21 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1849, %53, %54, %1731, %1732, %1733, %468, %1734, %473, %474, %475, %476, %477) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %500 : NoneType = prim::Constant()
  %501 : NoneType = prim::Constant()
  %502 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %503 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %504 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %505 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %507 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.23 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.21, %55, %56, %500, %501, %502, %503, %504, %505) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1850 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.23, %507) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1735 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1736 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1737 : int[] = prim::Constant[value=[1, 1, 1]]()
  %521 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1738 : int[] = prim::Constant[value=[0, 0, 0]]()
  %526 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %527 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %528 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %529 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %530 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.27 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1850, %57, %58, %1735, %1736, %1737, %521, %1738, %526, %527, %528, %529, %530) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %553 : NoneType = prim::Constant()
  %554 : NoneType = prim::Constant()
  %555 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %556 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %557 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %558 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %560 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.29 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.27, %59, %60, %553, %554, %555, %556, %557, %558) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1851 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.29, %560) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1739 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1740 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1741 : int[] = prim::Constant[value=[1, 1, 1]]()
  %574 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1742 : int[] = prim::Constant[value=[0, 0, 0]]()
  %579 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %580 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %581 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %582 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %583 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.33 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1851, %61, %62, %1739, %1740, %1741, %574, %1742, %579, %580, %581, %582, %583) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %606 : NoneType = prim::Constant()
  %607 : NoneType = prim::Constant()
  %608 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %609 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %610 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %611 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %613 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.35 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.33, %63, %64, %606, %607, %608, %609, %610, %611) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1852 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.35, %613) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1743 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1744 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1745 : int[] = prim::Constant[value=[1, 1, 1]]()
  %627 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1746 : int[] = prim::Constant[value=[0, 0, 0]]()
  %632 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %633 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %634 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %635 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %636 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.39 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1852, %65, %66, %1743, %1744, %1745, %627, %1746, %632, %633, %634, %635, %636) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %659 : NoneType = prim::Constant()
  %660 : NoneType = prim::Constant()
  %661 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %662 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %663 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %664 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %666 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.41 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.39, %67, %68, %659, %660, %661, %662, %663, %664) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1853 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.41, %666) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1747 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1748 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1749 : int[] = prim::Constant[value=[1, 1, 1]]()
  %680 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1750 : int[] = prim::Constant[value=[0, 0, 0]]()
  %685 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %686 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %687 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %688 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %689 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.45 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1853, %69, %70, %1747, %1748, %1749, %680, %1750, %685, %686, %687, %688, %689) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %712 : NoneType = prim::Constant()
  %713 : NoneType = prim::Constant()
  %714 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %715 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %716 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %717 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %719 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.47 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.45, %71, %72, %712, %713, %714, %715, %716, %717) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1854 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.47, %719) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1751 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1752 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1753 : int[] = prim::Constant[value=[1, 1, 1]]()
  %733 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1754 : int[] = prim::Constant[value=[0, 0, 0]]()
  %738 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %739 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %740 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %741 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %742 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.51 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1854, %73, %74, %1751, %1752, %1753, %733, %1754, %738, %739, %740, %741, %742) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %765 : NoneType = prim::Constant()
  %766 : NoneType = prim::Constant()
  %767 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %768 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %769 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %770 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %772 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.53 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.51, %75, %76, %765, %766, %767, %768, %769, %770) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1855 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.53, %772) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1755 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1756 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1757 : int[] = prim::Constant[value=[1, 1, 1]]()
  %786 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1758 : int[] = prim::Constant[value=[0, 0, 0]]()
  %791 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %792 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %793 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %794 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %795 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.57 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1855, %77, %78, %1755, %1756, %1757, %786, %1758, %791, %792, %793, %794, %795) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %818 : NoneType = prim::Constant()
  %819 : NoneType = prim::Constant()
  %820 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %821 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %822 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %823 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %825 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.59 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.57, %79, %80, %818, %819, %820, %821, %822, %823) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1856 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.59, %825) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1759 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1760 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1761 : int[] = prim::Constant[value=[1, 1, 1]]()
  %839 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1762 : int[] = prim::Constant[value=[0, 0, 0]]()
  %844 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %845 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %846 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %847 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %848 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.63 : Float(1, 320, 4, 5, 5, strides=[32000, 100, 25, 5, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1856, %81, %82, %1759, %1760, %1761, %839, %1762, %844, %845, %846, %847, %848) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %871 : NoneType = prim::Constant()
  %872 : NoneType = prim::Constant()
  %873 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %874 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %875 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %876 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %878 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.65 : Float(1, 320, 4, 5, 5, strides=[32000, 100, 25, 5, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.63, %83, %84, %871, %872, %873, %874, %875, %876) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1857 : Float(1, 320, 4, 5, 5, strides=[32000, 100, 25, 5, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.65, %878) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1763 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1764 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1765 : int[] = prim::Constant[value=[1, 1, 1]]()
  %892 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1766 : int[] = prim::Constant[value=[0, 0, 0]]()
  %897 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %898 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %899 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %900 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %901 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.69 : Float(1, 320, 4, 5, 5, strides=[32000, 100, 25, 5, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1857, %85, %86, %1763, %1764, %1765, %892, %1766, %897, %898, %899, %900, %901) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %924 : NoneType = prim::Constant()
  %925 : NoneType = prim::Constant()
  %926 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %927 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %928 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %929 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %931 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.71 : Float(1, 320, 4, 5, 5, strides=[32000, 100, 25, 5, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.69, %87, %88, %924, %925, %926, %927, %928, %929) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1858 : Float(1, 320, 4, 5, 5, strides=[32000, 100, 25, 5, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.71, %931) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %933 : NoneType = prim::Constant()
  %1767 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1768 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1769 : int[] = prim::Constant[value=[1, 1, 1]]()
  %946 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1770 : int[] = prim::Constant[value=[0, 0, 0]]()
  %951 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %952 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %953 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %954 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %955 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %956 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1858, %89, %933, %1767, %1768, %1769, %946, %1770, %951, %952, %953, %954, %955) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %957 : Tensor[] = prim::ListConstruct(%956, %1856)
  %958 : int = prim::Constant[value=1]() # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %input.73 : Float(1, 640, 8, 10, 10, strides=[512000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::cat(%957, %958) # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %1771 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1772 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1773 : int[] = prim::Constant[value=[1, 1, 1]]()
  %972 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1774 : int[] = prim::Constant[value=[0, 0, 0]]()
  %977 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %978 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %979 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %980 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %981 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.75 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%input.73, %1, %2, %1771, %1772, %1773, %972, %1774, %977, %978, %979, %980, %981) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1004 : NoneType = prim::Constant()
  %1005 : NoneType = prim::Constant()
  %1006 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1007 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1008 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1009 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1011 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.77 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.75, %3, %4, %1004, %1005, %1006, %1007, %1008, %1009) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1859 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.77, %1011) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1775 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1776 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1777 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1025 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1778 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1030 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1031 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1032 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1033 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1034 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.81 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1859, %5, %6, %1775, %1776, %1777, %1025, %1778, %1030, %1031, %1032, %1033, %1034) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1057 : NoneType = prim::Constant()
  %1058 : NoneType = prim::Constant()
  %1059 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1060 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1061 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1062 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1064 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.83 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.81, %7, %8, %1057, %1058, %1059, %1060, %1061, %1062) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1860 : Float(1, 320, 8, 10, 10, strides=[256000, 800, 100, 10, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.83, %1064) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1066 : NoneType = prim::Constant()
  %1779 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1780 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1781 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1079 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1782 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1084 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1085 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1086 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1087 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1088 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1089 : Float(1, 16, 8, 10, 10, strides=[12800, 800, 100, 10, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1860, %94, %1066, %1779, %1780, %1781, %1079, %1782, %1084, %1085, %1086, %1087, %1088) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1090 : NoneType = prim::Constant()
  %1783 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1784 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1785 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1103 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1786 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1108 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1109 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1110 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1111 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1112 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1113 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1860, %90, %1090, %1783, %1784, %1785, %1103, %1786, %1108, %1109, %1110, %1111, %1112) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1114 : Tensor[] = prim::ListConstruct(%1113, %1854)
  %1115 : int = prim::Constant[value=1]() # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %input.87 : Float(1, 512, 16, 20, 20, strides=[3276800, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::cat(%1114, %1115) # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %1787 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1788 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1789 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1129 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1790 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1134 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1135 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1136 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1137 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1138 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.89 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%input.87, %9, %10, %1787, %1788, %1789, %1129, %1790, %1134, %1135, %1136, %1137, %1138) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1161 : NoneType = prim::Constant()
  %1162 : NoneType = prim::Constant()
  %1163 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1164 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1165 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1166 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1168 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.91 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.89, %11, %12, %1161, %1162, %1163, %1164, %1165, %1166) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1861 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.91, %1168) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1791 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1792 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1793 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1182 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1794 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1187 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1188 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1189 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1190 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1191 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.95 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1861, %13, %14, %1791, %1792, %1793, %1182, %1794, %1187, %1188, %1189, %1190, %1191) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1214 : NoneType = prim::Constant()
  %1215 : NoneType = prim::Constant()
  %1216 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1217 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1218 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1219 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1221 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.97 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.95, %15, %16, %1214, %1215, %1216, %1217, %1218, %1219) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1862 : Float(1, 256, 16, 20, 20, strides=[1638400, 6400, 400, 20, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.97, %1221) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1223 : NoneType = prim::Constant()
  %1795 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1796 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1797 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1236 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1798 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1241 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1242 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1243 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1244 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1245 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1246 : Float(1, 16, 16, 20, 20, strides=[102400, 6400, 400, 20, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1862, %95, %1223, %1795, %1796, %1797, %1236, %1798, %1241, %1242, %1243, %1244, %1245) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1247 : NoneType = prim::Constant()
  %1799 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1800 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1801 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1260 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1802 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1265 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1266 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1267 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1268 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1269 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1270 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1862, %91, %1247, %1799, %1800, %1801, %1260, %1802, %1265, %1266, %1267, %1268, %1269) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1271 : Tensor[] = prim::ListConstruct(%1270, %1852)
  %1272 : int = prim::Constant[value=1]() # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %input.101 : Float(1, 256, 32, 40, 40, strides=[13107200, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::cat(%1271, %1272) # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %1803 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1804 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1805 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1286 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1806 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1291 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1292 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1293 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1294 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1295 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.103 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%input.101, %17, %18, %1803, %1804, %1805, %1286, %1806, %1291, %1292, %1293, %1294, %1295) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1318 : NoneType = prim::Constant()
  %1319 : NoneType = prim::Constant()
  %1320 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1321 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1322 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1323 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1325 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.105 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.103, %19, %20, %1318, %1319, %1320, %1321, %1322, %1323) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1863 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.105, %1325) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1807 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1808 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1809 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1339 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1810 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1344 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1345 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1346 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1347 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1348 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.109 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1863, %21, %22, %1807, %1808, %1809, %1339, %1810, %1344, %1345, %1346, %1347, %1348) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1371 : NoneType = prim::Constant()
  %1372 : NoneType = prim::Constant()
  %1373 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1374 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1375 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1376 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1378 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.111 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.109, %23, %24, %1371, %1372, %1373, %1374, %1375, %1376) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1864 : Float(1, 128, 32, 40, 40, strides=[6553600, 51200, 1600, 40, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.111, %1378) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1380 : NoneType = prim::Constant()
  %1811 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1812 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1813 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1393 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1814 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1398 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1399 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1400 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1401 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1402 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1403 : Float(1, 16, 32, 40, 40, strides=[819200, 51200, 1600, 40, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1864, %96, %1380, %1811, %1812, %1813, %1393, %1814, %1398, %1399, %1400, %1401, %1402) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1404 : NoneType = prim::Constant()
  %1815 : int[] = prim::Constant[value=[2, 2, 2]]()
  %1816 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1817 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1417 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1818 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1422 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1423 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1424 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1425 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1426 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1427 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1864, %92, %1404, %1815, %1816, %1817, %1417, %1818, %1422, %1423, %1424, %1425, %1426) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1428 : Tensor[] = prim::ListConstruct(%1427, %1850)
  %1429 : int = prim::Constant[value=1]() # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %input.115 : Float(1, 128, 64, 80, 80, strides=[52428800, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::cat(%1428, %1429) # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %1819 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1820 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1821 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1443 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1822 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1448 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1449 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1450 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1451 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1452 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.117 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%input.115, %25, %26, %1819, %1820, %1821, %1443, %1822, %1448, %1449, %1450, %1451, %1452) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1475 : NoneType = prim::Constant()
  %1476 : NoneType = prim::Constant()
  %1477 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1478 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1479 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1480 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1482 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.119 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.117, %27, %28, %1475, %1476, %1477, %1478, %1479, %1480) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1865 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.119, %1482) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1823 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1824 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1825 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1496 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1826 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1501 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1502 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1503 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1504 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1505 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.123 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1865, %29, %30, %1823, %1824, %1825, %1496, %1826, %1501, %1502, %1503, %1504, %1505) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1528 : NoneType = prim::Constant()
  %1529 : NoneType = prim::Constant()
  %1530 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1531 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1532 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1533 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1535 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.125 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.123, %31, %32, %1528, %1529, %1530, %1531, %1532, %1533) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1866 : Float(1, 64, 64, 80, 80, strides=[26214400, 409600, 6400, 80, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.125, %1535) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1537 : NoneType = prim::Constant()
  %1827 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1828 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1829 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1550 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1830 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1555 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1556 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1557 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1558 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1559 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1560 : Float(1, 16, 64, 80, 80, strides=[6553600, 409600, 6400, 80, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1866, %97, %1537, %1827, %1828, %1829, %1550, %1830, %1555, %1556, %1557, %1558, %1559) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1561 : NoneType = prim::Constant()
  %1831 : int[] = prim::Constant[value=[1, 2, 2]]()
  %1832 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1833 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1574 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1834 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1579 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1580 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1581 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1582 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1583 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1584 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1866, %93, %1561, %1831, %1832, %1833, %1574, %1834, %1579, %1580, %1581, %1582, %1583) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:1099:0
  %1585 : Tensor[] = prim::ListConstruct(%1584, %1848)
  %1586 : int = prim::Constant[value=1]() # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %input.129 : Float(1, 64, 64, 160, 160, strides=[104857600, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::cat(%1585, %1586) # /home/smaijer/code/nnUNet/nnunet/network_architecture/generic_UNet.py:446:0
  %1835 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1836 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1837 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1600 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1838 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1605 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1606 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1607 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1608 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1609 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.131 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%input.129, %33, %34, %1835, %1836, %1837, %1600, %1838, %1605, %1606, %1607, %1608, %1609) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1632 : NoneType = prim::Constant()
  %1633 : NoneType = prim::Constant()
  %1634 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1635 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1636 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1637 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1639 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.133 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.131, %35, %36, %1632, %1633, %1634, %1635, %1636, %1637) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1867 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.133, %1639) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1839 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1840 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1841 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1653 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1842 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1658 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1659 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1660 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1661 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1662 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %input.137 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1867, %37, %38, %1839, %1840, %1841, %1653, %1842, %1658, %1659, %1660, %1661, %1662) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1685 : NoneType = prim::Constant()
  %1686 : NoneType = prim::Constant()
  %1687 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1688 : float = prim::Constant[value=0.10000000000000001]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1689 : float = prim::Constant[value=1.0000000000000001e-05]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1690 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1692 : float = prim::Constant[value=0.01]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %input.139 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::instance_norm(%input.137, %39, %40, %1685, %1686, %1687, %1688, %1689, %1690) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:2469:0
  %1868 : Float(1, 32, 64, 160, 160, strides=[52428800, 1638400, 25600, 160, 1], requires_grad=1, device=cuda:0) = aten::leaky_relu(%input.139, %1692) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/functional.py:1629:0
  %1694 : NoneType = prim::Constant()
  %1843 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1844 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1845 : int[] = prim::Constant[value=[1, 1, 1]]()
  %1707 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1846 : int[] = prim::Constant[value=[0, 0, 0]]()
  %1712 : int = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1713 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1714 : bool = prim::Constant[value=0]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1715 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1716 : bool = prim::Constant[value=1]() # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  %1717 : Float(1, 16, 64, 160, 160, strides=[26214400, 1638400, 25600, 160, 1], requires_grad=0, device=cuda:0) = aten::_convolution(%1868, %98, %1694, %1843, %1844, %1845, %1707, %1846, %1712, %1713, %1714, %1715, %1716) # /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/lib/python3.10/site-packages/torch/nn/modules/conv.py:598:0
  return (%1717, %1560, %1403, %1246, %1089)
, None, False
2022-06-28 22:46:39.805229: 
printing the network instead:

2022-06-28 22:46:39.809616: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 16, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-06-28 22:46:39.814272: 

2022-06-28 22:46:39.963372: saving checkpoint...
2022-06-28 22:46:41.273543: done, saving took 1.41 seconds
