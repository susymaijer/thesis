Starting at Thu Jul  7 18:42:49 CEST 2022
Running on hosts: res-hpc-lkeb09
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 5.
Account: div2-lkeb
Job ID: 10631348
Job name: PancreasAll
Node running script: res-hpc-lkeb09
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Thu Jul  7 18:42:50 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.103.01   Driver Version: 470.103.01   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A6000    On   | 00000000:AF:00.0 Off |                  Off |
| 30%   25C    P8    19W / 300W |      0MiB / 48685MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-xtwrmi10/hiddenlayer_414b42a1b3fe4860b40b1b0e0bdf90d3
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Start preprocessing..
Done preprocessing! Start training all the folds..


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='0', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-07 18:43:21.582833: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-07 18:43:32.174937: Creating new 5-fold cross-validation split...
2022-07-07 18:43:32.185305: Desired fold for training: 0
2022-07-07 18:43:32.187476: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-07 18:43:59.019442: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-07 18:44:18.010984: Unable to plot network architecture:
2022-07-07 18:44:18.014346: local variable 'g' referenced before assignment
2022-07-07 18:44:18.016460: 
printing the network instead:

2022-07-07 18:44:18.018392: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-07 18:44:18.022900: 

2022-07-07 18:44:18.025115: 
epoch:  0
2022-07-07 18:45:40.190968: train loss : -0.0511
2022-07-07 18:45:46.061850: validation loss: -0.2855
2022-07-07 18:45:46.093882: Average global foreground Dice: [0.4441]
2022-07-07 18:45:46.107976: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:45:47.071757: Suus1 maybe_update_lr lr: 0.009982
2022-07-07 18:45:47.078008: This epoch took 89.050944 s

2022-07-07 18:45:47.080571: 
epoch:  1
2022-07-07 18:46:57.028527: train loss : -0.2801
2022-07-07 18:47:02.178035: validation loss: -0.4055
2022-07-07 18:47:02.210628: Average global foreground Dice: [0.5382]
2022-07-07 18:47:02.230429: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:47:02.830182: Suus1 maybe_update_lr lr: 0.009964
2022-07-07 18:47:02.855721: saving best epoch checkpoint...
2022-07-07 18:47:03.007094: saving checkpoint...
2022-07-07 18:47:04.582727: done, saving took 1.71 seconds
2022-07-07 18:47:04.600075: This epoch took 77.517387 s

2022-07-07 18:47:04.602872: 
epoch:  2
2022-07-07 18:48:16.473092: train loss : -0.3871
2022-07-07 18:48:21.443830: validation loss: -0.4880
2022-07-07 18:48:21.467263: Average global foreground Dice: [0.6035]
2022-07-07 18:48:21.499888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:48:22.187403: Suus1 maybe_update_lr lr: 0.009946
2022-07-07 18:48:22.207896: saving best epoch checkpoint...
2022-07-07 18:48:22.292620: saving checkpoint...
2022-07-07 18:48:24.280143: done, saving took 2.05 seconds
2022-07-07 18:48:24.296293: This epoch took 79.690643 s

2022-07-07 18:48:24.298627: 
epoch:  3
2022-07-07 18:49:34.017952: train loss : -0.4630
2022-07-07 18:49:38.982206: validation loss: -0.5368
2022-07-07 18:49:39.024330: Average global foreground Dice: [0.6436]
2022-07-07 18:49:39.036888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:49:39.775022: Suus1 maybe_update_lr lr: 0.009928
2022-07-07 18:49:39.809229: saving best epoch checkpoint...
2022-07-07 18:49:39.955589: saving checkpoint...
2022-07-07 18:49:41.525828: done, saving took 1.68 seconds
2022-07-07 18:49:41.540685: This epoch took 77.239946 s

2022-07-07 18:49:41.542696: 
epoch:  4
2022-07-07 18:50:52.856693: train loss : -0.4899
2022-07-07 18:50:58.262083: validation loss: -0.5525
2022-07-07 18:50:58.294418: Average global foreground Dice: [0.662]
2022-07-07 18:50:58.325073: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:50:59.339813: Suus1 maybe_update_lr lr: 0.00991
2022-07-07 18:50:59.353773: saving best epoch checkpoint...
2022-07-07 18:50:59.500622: saving checkpoint...
2022-07-07 18:51:01.152743: done, saving took 1.77 seconds
2022-07-07 18:51:01.167070: This epoch took 79.622175 s

2022-07-07 18:51:01.169035: 
epoch:  5
2022-07-07 18:52:11.401361: train loss : -0.5302
2022-07-07 18:52:16.971276: validation loss: -0.5942
2022-07-07 18:52:17.024290: Average global foreground Dice: [0.6982]
2022-07-07 18:52:17.026852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:52:17.818438: Suus1 maybe_update_lr lr: 0.009892
2022-07-07 18:52:17.834969: saving best epoch checkpoint...
2022-07-07 18:52:17.904420: saving checkpoint...
2022-07-07 18:52:19.692626: done, saving took 1.84 seconds
2022-07-07 18:52:19.707892: This epoch took 78.536811 s

2022-07-07 18:52:19.710227: 
epoch:  6
2022-07-07 18:53:31.525390: train loss : -0.5539
2022-07-07 18:53:36.946826: validation loss: -0.6038
2022-07-07 18:53:36.968049: Average global foreground Dice: [0.7093]
2022-07-07 18:53:36.974336: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:53:37.585783: Suus1 maybe_update_lr lr: 0.009874
2022-07-07 18:53:37.622910: saving best epoch checkpoint...
2022-07-07 18:53:37.741051: saving checkpoint...
2022-07-07 18:53:39.560323: done, saving took 1.92 seconds
2022-07-07 18:53:39.575285: This epoch took 79.862976 s

2022-07-07 18:53:39.577524: 
epoch:  7
2022-07-07 18:54:50.314347: train loss : -0.5690
2022-07-07 18:54:55.241452: validation loss: -0.6241
2022-07-07 18:54:55.266225: Average global foreground Dice: [0.7204]
2022-07-07 18:54:55.298868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:54:55.909506: Suus1 maybe_update_lr lr: 0.009856
2022-07-07 18:54:55.924670: saving best epoch checkpoint...
2022-07-07 18:54:55.987931: saving checkpoint...
2022-07-07 18:54:57.473748: done, saving took 1.55 seconds
2022-07-07 18:54:57.489332: This epoch took 77.909808 s

2022-07-07 18:54:57.491425: 
epoch:  8
2022-07-07 18:56:09.967201: train loss : -0.5966
2022-07-07 18:56:15.299657: validation loss: -0.6523
2022-07-07 18:56:15.340364: Average global foreground Dice: [0.7437]
2022-07-07 18:56:15.354875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:56:15.827407: Suus1 maybe_update_lr lr: 0.009838
2022-07-07 18:56:15.863813: saving best epoch checkpoint...
2022-07-07 18:56:16.034659: saving checkpoint...
2022-07-07 18:56:17.556819: done, saving took 1.66 seconds
2022-07-07 18:56:17.606084: This epoch took 80.112528 s

2022-07-07 18:56:17.608202: 
epoch:  9
2022-07-07 18:57:29.753016: train loss : -0.6034
2022-07-07 18:57:35.304043: validation loss: -0.6647
2022-07-07 18:57:35.352258: Average global foreground Dice: [0.7475]
2022-07-07 18:57:35.384889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:57:36.255542: Suus1 maybe_update_lr lr: 0.00982
2022-07-07 18:57:36.288249: saving best epoch checkpoint...
2022-07-07 18:57:36.365610: saving checkpoint...
2022-07-07 18:57:37.921445: done, saving took 1.62 seconds
2022-07-07 18:57:37.937254: This epoch took 80.327029 s

2022-07-07 18:57:37.939348: 
epoch:  10
2022-07-07 18:58:49.983874: train loss : -0.6254
2022-07-07 18:58:54.649441: validation loss: -0.6758
2022-07-07 18:58:54.672212: Average global foreground Dice: [0.7519]
2022-07-07 18:58:54.700904: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:58:55.497815: Suus1 maybe_update_lr lr: 0.009802
2022-07-07 18:58:55.500260: saving best epoch checkpoint...
2022-07-07 18:58:55.631096: saving checkpoint...
2022-07-07 18:58:57.252337: done, saving took 1.74 seconds
2022-07-07 18:58:57.268067: This epoch took 79.326663 s

2022-07-07 18:58:57.270030: 
epoch:  11
2022-07-07 19:00:09.402112: train loss : -0.6352
2022-07-07 19:00:15.626703: validation loss: -0.6831
2022-07-07 19:00:15.660232: Average global foreground Dice: [0.762]
2022-07-07 19:00:15.682101: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:00:16.368681: Suus1 maybe_update_lr lr: 0.009784
2022-07-07 19:00:16.399900: saving best epoch checkpoint...
2022-07-07 19:00:16.515109: saving checkpoint...
2022-07-07 19:00:18.095413: done, saving took 1.67 seconds
2022-07-07 19:00:18.110276: This epoch took 80.838312 s

2022-07-07 19:00:18.112160: 
epoch:  12
2022-07-07 19:01:29.635968: train loss : -0.6494
2022-07-07 19:01:35.443630: validation loss: -0.6720
2022-07-07 19:01:35.475371: Average global foreground Dice: [0.7546]
2022-07-07 19:01:35.490589: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:01:36.436564: Suus1 maybe_update_lr lr: 0.009766
2022-07-07 19:01:36.458977: saving best epoch checkpoint...
2022-07-07 19:01:36.559299: saving checkpoint...
2022-07-07 19:01:38.100232: done, saving took 1.62 seconds
2022-07-07 19:01:38.114849: This epoch took 80.000889 s

2022-07-07 19:01:38.117261: 
epoch:  13
2022-07-07 19:02:49.262649: train loss : -0.6531
2022-07-07 19:02:54.260428: validation loss: -0.6688
2022-07-07 19:02:54.275224: Average global foreground Dice: [0.744]
2022-07-07 19:02:54.301915: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:02:55.239904: Suus1 maybe_update_lr lr: 0.009748
2022-07-07 19:02:55.271295: saving best epoch checkpoint...
2022-07-07 19:02:55.374424: saving checkpoint...
2022-07-07 19:02:57.267021: done, saving took 1.98 seconds
2022-07-07 19:02:57.281314: This epoch took 79.162050 s

2022-07-07 19:02:57.283708: 
epoch:  14
2022-07-07 19:04:07.824575: train loss : -0.6670
2022-07-07 19:04:12.902176: validation loss: -0.6872
2022-07-07 19:04:12.949595: Average global foreground Dice: [0.7684]
2022-07-07 19:04:12.987888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:04:13.600811: Suus1 maybe_update_lr lr: 0.00973
2022-07-07 19:04:13.611967: saving best epoch checkpoint...
2022-07-07 19:04:13.678189: saving checkpoint...
2022-07-07 19:04:15.120926: done, saving took 1.49 seconds
2022-07-07 19:04:15.203483: This epoch took 77.917663 s

2022-07-07 19:04:15.205961: 
epoch:  15
2022-07-07 19:05:26.680356: train loss : -0.6604
2022-07-07 19:05:31.839517: validation loss: -0.6928
2022-07-07 19:05:31.860250: Average global foreground Dice: [0.7666]
2022-07-07 19:05:31.876871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:05:32.740575: Suus1 maybe_update_lr lr: 0.009712
2022-07-07 19:05:32.761921: saving best epoch checkpoint...
2022-07-07 19:05:32.855741: saving checkpoint...
2022-07-07 19:05:34.669368: done, saving took 1.89 seconds
2022-07-07 19:05:34.686506: This epoch took 79.478230 s

2022-07-07 19:05:34.689144: 
epoch:  16
2022-07-07 19:06:45.853156: train loss : -0.6739
2022-07-07 19:06:50.808402: validation loss: -0.6782
2022-07-07 19:06:50.835312: Average global foreground Dice: [0.7599]
2022-07-07 19:06:50.854965: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:06:51.693583: Suus1 maybe_update_lr lr: 0.009693
2022-07-07 19:06:51.725908: saving best epoch checkpoint...
2022-07-07 19:06:51.830480: saving checkpoint...
2022-07-07 19:06:53.672885: done, saving took 1.91 seconds
2022-07-07 19:06:53.687132: This epoch took 78.995633 s

2022-07-07 19:06:53.689246: 
epoch:  17
2022-07-07 19:08:03.354208: train loss : -0.6847
2022-07-07 19:08:08.152662: validation loss: -0.6945
2022-07-07 19:08:08.173333: Average global foreground Dice: [0.7677]
2022-07-07 19:08:08.189874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:08:09.067742: Suus1 maybe_update_lr lr: 0.009675
2022-07-07 19:08:09.088905: saving best epoch checkpoint...
2022-07-07 19:08:09.193513: saving checkpoint...
2022-07-07 19:08:10.774654: done, saving took 1.66 seconds
2022-07-07 19:08:10.789961: This epoch took 77.098824 s

2022-07-07 19:08:10.792154: 
epoch:  18
2022-07-07 19:09:22.826276: train loss : -0.6626
2022-07-07 19:09:27.555451: validation loss: -0.6995
2022-07-07 19:09:27.587666: Average global foreground Dice: [0.7747]
2022-07-07 19:09:27.622356: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:09:28.247396: Suus1 maybe_update_lr lr: 0.009657
2022-07-07 19:09:28.268898: saving best epoch checkpoint...
2022-07-07 19:09:28.345933: saving checkpoint...
2022-07-07 19:09:30.012873: done, saving took 1.72 seconds
2022-07-07 19:09:30.028426: This epoch took 79.233968 s

2022-07-07 19:09:30.030440: 
epoch:  19
2022-07-07 19:10:41.273677: train loss : -0.6804
2022-07-07 19:10:46.264326: validation loss: -0.6840
2022-07-07 19:10:46.299324: Average global foreground Dice: [0.7565]
2022-07-07 19:10:46.320885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:10:46.991024: Suus1 maybe_update_lr lr: 0.009639
2022-07-07 19:10:47.013239: saving best epoch checkpoint...
2022-07-07 19:10:47.145576: saving checkpoint...
2022-07-07 19:10:48.885774: done, saving took 1.85 seconds
2022-07-07 19:10:48.902745: This epoch took 78.870375 s

2022-07-07 19:10:48.904992: 
epoch:  20
2022-07-07 19:12:00.564075: train loss : -0.6933
2022-07-07 19:12:05.904572: validation loss: -0.6960
2022-07-07 19:12:05.926437: Average global foreground Dice: [0.7763]
2022-07-07 19:12:05.948938: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:12:06.748503: Suus1 maybe_update_lr lr: 0.009621
2022-07-07 19:12:06.790905: saving best epoch checkpoint...
2022-07-07 19:12:06.880326: saving checkpoint...
2022-07-07 19:12:08.448627: done, saving took 1.63 seconds
2022-07-07 19:12:08.463812: This epoch took 79.556665 s

2022-07-07 19:12:08.466210: 
epoch:  21
2022-07-07 19:13:19.658957: train loss : -0.6965
2022-07-07 19:13:24.673501: validation loss: -0.7285
2022-07-07 19:13:24.694242: Average global foreground Dice: [0.7935]
2022-07-07 19:13:24.716873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:13:25.508259: Suus1 maybe_update_lr lr: 0.009603
2022-07-07 19:13:25.518545: saving best epoch checkpoint...
2022-07-07 19:13:25.614881: saving checkpoint...
2022-07-07 19:13:27.480572: done, saving took 1.94 seconds
2022-07-07 19:13:27.496597: This epoch took 79.027548 s

2022-07-07 19:13:27.498911: 
epoch:  22
2022-07-07 19:14:38.221330: train loss : -0.7051
2022-07-07 19:14:43.233412: validation loss: -0.7190
2022-07-07 19:14:43.262297: Average global foreground Dice: [0.7882]
2022-07-07 19:14:43.292073: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:14:44.101241: Suus1 maybe_update_lr lr: 0.009585
2022-07-07 19:14:44.121901: saving best epoch checkpoint...
2022-07-07 19:14:44.233071: saving checkpoint...
2022-07-07 19:14:45.970069: done, saving took 1.82 seconds
2022-07-07 19:14:45.984014: This epoch took 78.482719 s

2022-07-07 19:14:45.986033: 
epoch:  23
2022-07-07 19:15:57.384991: train loss : -0.7155
2022-07-07 19:16:02.820565: validation loss: -0.7253
2022-07-07 19:16:02.847307: Average global foreground Dice: [0.7886]
2022-07-07 19:16:02.873039: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:16:03.444362: Suus1 maybe_update_lr lr: 0.009567
2022-07-07 19:16:03.462910: saving best epoch checkpoint...
2022-07-07 19:16:03.623240: saving checkpoint...
2022-07-07 19:16:05.625066: done, saving took 2.15 seconds
2022-07-07 19:16:05.642182: This epoch took 79.654178 s

2022-07-07 19:16:05.645296: 
epoch:  24
2022-07-07 19:17:17.860950: train loss : -0.6960
2022-07-07 19:17:23.089720: validation loss: -0.7117
2022-07-07 19:17:23.133381: Average global foreground Dice: [0.785]
2022-07-07 19:17:23.136147: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:17:23.768422: Suus1 maybe_update_lr lr: 0.009549
2022-07-07 19:17:23.791966: saving best epoch checkpoint...
2022-07-07 19:17:23.893733: saving checkpoint...
2022-07-07 19:17:25.765977: done, saving took 1.96 seconds
2022-07-07 19:17:25.780088: This epoch took 80.132337 s

2022-07-07 19:17:25.782178: 
epoch:  25
2022-07-07 19:18:38.337805: train loss : -0.7097
2022-07-07 19:18:43.728933: validation loss: -0.7267
2022-07-07 19:18:43.755348: Average global foreground Dice: [0.7961]
2022-07-07 19:18:43.778021: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:18:44.434846: Suus1 maybe_update_lr lr: 0.009531
2022-07-07 19:18:44.464893: saving best epoch checkpoint...
2022-07-07 19:18:44.544983: saving checkpoint...
2022-07-07 19:18:45.966072: done, saving took 1.48 seconds
2022-07-07 19:18:46.043311: This epoch took 80.259055 s

2022-07-07 19:18:46.063781: 
epoch:  26
2022-07-07 19:19:57.664506: train loss : -0.7221
2022-07-07 19:20:02.793423: validation loss: -0.7050
2022-07-07 19:20:02.824777: Average global foreground Dice: [0.7689]
2022-07-07 19:20:02.844022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:20:03.443182: Suus1 maybe_update_lr lr: 0.009513
2022-07-07 19:20:03.468895: saving best epoch checkpoint...
2022-07-07 19:20:03.546255: saving checkpoint...
2022-07-07 19:20:05.495727: done, saving took 1.99 seconds
2022-07-07 19:20:05.511128: This epoch took 79.445192 s

2022-07-07 19:20:05.513272: 
epoch:  27
2022-07-07 19:21:17.704255: train loss : -0.7219
2022-07-07 19:21:22.684948: validation loss: -0.7191
2022-07-07 19:21:22.707185: Average global foreground Dice: [0.7926]
2022-07-07 19:21:22.727513: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:21:23.469986: Suus1 maybe_update_lr lr: 0.009495
2022-07-07 19:21:23.477557: saving best epoch checkpoint...
2022-07-07 19:21:23.562408: saving checkpoint...
2022-07-07 19:21:24.960938: done, saving took 1.45 seconds
2022-07-07 19:21:24.976397: This epoch took 79.460993 s

2022-07-07 19:21:24.978392: 
epoch:  28
2022-07-07 19:22:36.513559: train loss : -0.7174
2022-07-07 19:22:41.206769: validation loss: -0.7112
2022-07-07 19:22:41.237085: Average global foreground Dice: [0.7755]
2022-07-07 19:22:41.261881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:22:42.329557: Suus1 maybe_update_lr lr: 0.009476
2022-07-07 19:22:42.350970: saving best epoch checkpoint...
2022-07-07 19:22:42.456818: saving checkpoint...
2022-07-07 19:22:44.299739: done, saving took 1.93 seconds
2022-07-07 19:22:44.314583: This epoch took 79.334255 s

2022-07-07 19:22:44.316841: 
epoch:  29
2022-07-07 19:23:56.167018: train loss : -0.7218
2022-07-07 19:24:01.760484: validation loss: -0.7234
2022-07-07 19:24:01.791349: Average global foreground Dice: [0.7866]
2022-07-07 19:24:01.803481: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:24:02.594094: Suus1 maybe_update_lr lr: 0.009458
2022-07-07 19:24:02.613538: saving best epoch checkpoint...
2022-07-07 19:24:02.729225: saving checkpoint...
2022-07-07 19:24:04.512450: done, saving took 1.87 seconds
2022-07-07 19:24:04.529115: This epoch took 80.210230 s

2022-07-07 19:24:04.531633: 
epoch:  30
2022-07-07 19:25:15.208134: train loss : -0.7107
2022-07-07 19:25:21.312981: validation loss: -0.6956
2022-07-07 19:25:21.316825: Average global foreground Dice: [0.765]
2022-07-07 19:25:21.354150: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:25:22.260523: Suus1 maybe_update_lr lr: 0.00944
2022-07-07 19:25:22.292912: saving best epoch checkpoint...
2022-07-07 19:25:22.391119: saving checkpoint...
2022-07-07 19:25:24.162541: done, saving took 1.84 seconds
2022-07-07 19:25:24.176415: This epoch took 79.642337 s

2022-07-07 19:25:24.178463: 
epoch:  31
2022-07-07 19:26:35.286887: train loss : -0.7311
2022-07-07 19:26:40.307009: validation loss: -0.7308
2022-07-07 19:26:40.330452: Average global foreground Dice: [0.801]
2022-07-07 19:26:40.362970: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:26:41.172460: Suus1 maybe_update_lr lr: 0.009422
2022-07-07 19:26:41.190669: saving best epoch checkpoint...
2022-07-07 19:26:41.249680: saving checkpoint...
2022-07-07 19:26:43.039429: done, saving took 1.84 seconds
2022-07-07 19:26:43.053623: This epoch took 78.873256 s

2022-07-07 19:26:43.055638: 
epoch:  32
2022-07-07 19:27:54.307864: train loss : -0.7248
2022-07-07 19:27:59.370258: validation loss: -0.7429
2022-07-07 19:27:59.401665: Average global foreground Dice: [0.8057]
2022-07-07 19:27:59.421365: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:28:00.008568: Suus1 maybe_update_lr lr: 0.009404
2022-07-07 19:28:00.014907: saving best epoch checkpoint...
2022-07-07 19:28:00.095294: saving checkpoint...
2022-07-07 19:28:01.799483: done, saving took 1.78 seconds
2022-07-07 19:28:01.814790: This epoch took 78.757211 s

2022-07-07 19:28:01.816900: 
epoch:  33
2022-07-07 19:29:12.149929: train loss : -0.7387
2022-07-07 19:29:17.232214: validation loss: -0.7141
2022-07-07 19:29:17.260210: Average global foreground Dice: [0.7837]
2022-07-07 19:29:17.283884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:29:17.894534: Suus1 maybe_update_lr lr: 0.009386
2022-07-07 19:29:17.903699: saving best epoch checkpoint...
2022-07-07 19:29:17.984054: saving checkpoint...
2022-07-07 19:29:19.525610: done, saving took 1.60 seconds
2022-07-07 19:29:19.540415: This epoch took 77.721571 s

2022-07-07 19:29:19.542435: 
epoch:  34
2022-07-07 19:30:30.556372: train loss : -0.7416
2022-07-07 19:30:35.449340: validation loss: -0.7282
2022-07-07 19:30:35.488477: Average global foreground Dice: [0.7977]
2022-07-07 19:30:35.500881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:30:36.111420: Suus1 maybe_update_lr lr: 0.009368
2022-07-07 19:30:36.137887: saving best epoch checkpoint...
2022-07-07 19:30:36.226548: saving checkpoint...
2022-07-07 19:30:38.063918: done, saving took 1.90 seconds
2022-07-07 19:30:38.078833: This epoch took 78.534454 s

2022-07-07 19:30:38.081165: 
epoch:  35
2022-07-07 19:31:49.573086: train loss : -0.7391
2022-07-07 19:31:54.641212: validation loss: -0.7485
2022-07-07 19:31:54.666957: Average global foreground Dice: [0.8061]
2022-07-07 19:31:54.695007: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:31:55.604403: Suus1 maybe_update_lr lr: 0.00935
2022-07-07 19:31:55.625911: saving best epoch checkpoint...
2022-07-07 19:31:55.728914: saving checkpoint...
2022-07-07 19:31:57.492414: done, saving took 1.84 seconds
2022-07-07 19:31:57.508613: This epoch took 79.425193 s

2022-07-07 19:31:57.510633: 
epoch:  36
2022-07-07 19:33:10.389049: train loss : -0.7440
2022-07-07 19:33:15.378174: validation loss: -0.7298
2022-07-07 19:33:15.408243: Average global foreground Dice: [0.799]
2022-07-07 19:33:15.429874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:33:16.267494: Suus1 maybe_update_lr lr: 0.009331
2022-07-07 19:33:16.290890: saving best epoch checkpoint...
2022-07-07 19:33:16.406818: saving checkpoint...
2022-07-07 19:33:18.110013: done, saving took 1.79 seconds
2022-07-07 19:33:18.124998: This epoch took 80.612470 s

2022-07-07 19:33:18.127083: 
epoch:  37
2022-07-07 19:34:30.343152: train loss : -0.7521
2022-07-07 19:34:36.842352: validation loss: -0.7508
2022-07-07 19:34:36.877658: Average global foreground Dice: [0.8077]
2022-07-07 19:34:36.907875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:34:37.533007: Suus1 maybe_update_lr lr: 0.009313
2022-07-07 19:34:37.546860: saving best epoch checkpoint...
2022-07-07 19:34:37.597731: saving checkpoint...
2022-07-07 19:34:39.222966: done, saving took 1.67 seconds
2022-07-07 19:34:39.238642: This epoch took 81.109566 s

2022-07-07 19:34:39.241146: 
epoch:  38
2022-07-07 19:35:50.460941: train loss : -0.7561
2022-07-07 19:35:55.768210: validation loss: -0.7540
2022-07-07 19:35:55.793609: Average global foreground Dice: [0.8123]
2022-07-07 19:35:55.813402: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:35:56.455608: Suus1 maybe_update_lr lr: 0.009295
2022-07-07 19:35:56.529704: saving best epoch checkpoint...
2022-07-07 19:35:56.630129: saving checkpoint...
2022-07-07 19:35:58.391199: done, saving took 1.85 seconds
2022-07-07 19:35:58.405644: This epoch took 79.162373 s

2022-07-07 19:35:58.407664: 
epoch:  39
2022-07-07 19:37:08.384309: train loss : -0.7454
2022-07-07 19:37:13.470372: validation loss: -0.7423
2022-07-07 19:37:13.503197: Average global foreground Dice: [0.8083]
2022-07-07 19:37:13.534871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:37:14.156293: Suus1 maybe_update_lr lr: 0.009277
2022-07-07 19:37:14.180881: saving best epoch checkpoint...
2022-07-07 19:37:14.325072: saving checkpoint...
2022-07-07 19:37:16.053496: done, saving took 1.85 seconds
2022-07-07 19:37:16.067772: This epoch took 77.658119 s

2022-07-07 19:37:16.070764: 
epoch:  40
2022-07-07 19:38:28.617996: train loss : -0.7540
2022-07-07 19:38:33.803955: validation loss: -0.7601
2022-07-07 19:38:33.839335: Average global foreground Dice: [0.8168]
2022-07-07 19:38:33.860875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:38:34.440490: Suus1 maybe_update_lr lr: 0.009259
2022-07-07 19:38:34.461925: saving best epoch checkpoint...
2022-07-07 19:38:34.544977: saving checkpoint...
2022-07-07 19:38:36.092743: done, saving took 1.61 seconds
2022-07-07 19:38:36.107451: This epoch took 80.034406 s

2022-07-07 19:38:36.109637: 
epoch:  41
2022-07-07 19:39:45.267349: train loss : -0.7507
2022-07-07 19:39:50.483304: validation loss: -0.7235
2022-07-07 19:39:50.515486: Average global foreground Dice: [0.7857]
2022-07-07 19:39:50.543347: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:39:51.172963: Suus1 maybe_update_lr lr: 0.009241
2022-07-07 19:39:51.175502: This epoch took 75.063914 s

2022-07-07 19:39:51.179780: 
epoch:  42
2022-07-07 19:41:04.964406: train loss : -0.7408
2022-07-07 19:41:10.151034: validation loss: -0.7389
2022-07-07 19:41:10.182600: Average global foreground Dice: [0.8001]
2022-07-07 19:41:10.206997: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:41:10.983341: Suus1 maybe_update_lr lr: 0.009223
2022-07-07 19:41:11.013908: saving best epoch checkpoint...
2022-07-07 19:41:11.100319: saving checkpoint...
2022-07-07 19:41:12.702358: done, saving took 1.67 seconds
2022-07-07 19:41:12.719071: This epoch took 81.519358 s

2022-07-07 19:41:12.721088: 
epoch:  43
2022-07-07 19:42:24.164414: train loss : -0.7370
2022-07-07 19:42:29.315055: validation loss: -0.7391
2022-07-07 19:42:29.335737: Average global foreground Dice: [0.8052]
2022-07-07 19:42:29.339235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:42:30.023718: Suus1 maybe_update_lr lr: 0.009204
2022-07-07 19:42:30.043300: saving best epoch checkpoint...
2022-07-07 19:42:30.121409: saving checkpoint...
2022-07-07 19:42:31.803530: done, saving took 1.74 seconds
2022-07-07 19:42:31.818568: This epoch took 79.095511 s

2022-07-07 19:42:31.820641: 
epoch:  44
2022-07-07 19:43:42.287950: train loss : -0.7560
2022-07-07 19:43:47.285406: validation loss: -0.7389
2022-07-07 19:43:47.321697: Average global foreground Dice: [0.8067]
2022-07-07 19:43:47.339023: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:43:48.172645: Suus1 maybe_update_lr lr: 0.009186
2022-07-07 19:43:48.193905: saving best epoch checkpoint...
2022-07-07 19:43:48.266680: saving checkpoint...
2022-07-07 19:43:49.993102: done, saving took 1.78 seconds
2022-07-07 19:43:50.007309: This epoch took 78.184601 s

2022-07-07 19:43:50.009481: 
epoch:  45
2022-07-07 19:45:02.413609: train loss : -0.7521
2022-07-07 19:45:07.341761: validation loss: -0.7408
2022-07-07 19:45:07.377270: Average global foreground Dice: [0.8052]
2022-07-07 19:45:07.398654: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:45:07.961004: Suus1 maybe_update_lr lr: 0.009168
2022-07-07 19:45:07.981888: saving best epoch checkpoint...
2022-07-07 19:45:08.081770: saving checkpoint...
2022-07-07 19:45:09.706612: done, saving took 1.70 seconds
2022-07-07 19:45:09.744349: This epoch took 79.732736 s

2022-07-07 19:45:09.746567: 
epoch:  46
2022-07-07 19:46:20.806853: train loss : -0.7616
2022-07-07 19:46:25.816804: validation loss: -0.7459
2022-07-07 19:46:25.856361: Average global foreground Dice: [0.8046]
2022-07-07 19:46:25.858779: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:46:26.555463: Suus1 maybe_update_lr lr: 0.00915
2022-07-07 19:46:26.575927: saving best epoch checkpoint...
2022-07-07 19:46:26.667776: saving checkpoint...
2022-07-07 19:46:28.230981: done, saving took 1.64 seconds
2022-07-07 19:46:28.245147: This epoch took 78.496400 s

2022-07-07 19:46:28.247073: 
epoch:  47
2022-07-07 19:47:40.296499: train loss : -0.7582
2022-07-07 19:47:46.141179: validation loss: -0.7451
2022-07-07 19:47:46.178422: Average global foreground Dice: [0.8043]
2022-07-07 19:47:46.200055: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:47:46.779686: Suus1 maybe_update_lr lr: 0.009132
2022-07-07 19:47:46.816915: saving best epoch checkpoint...
2022-07-07 19:47:46.875743: saving checkpoint...
2022-07-07 19:47:48.404993: done, saving took 1.59 seconds
2022-07-07 19:47:48.420973: This epoch took 80.171966 s

2022-07-07 19:47:48.423357: 
epoch:  48
2022-07-07 19:48:59.053373: train loss : -0.7632
2022-07-07 19:49:04.601773: validation loss: -0.7364
2022-07-07 19:49:04.636339: Average global foreground Dice: [0.7996]
2022-07-07 19:49:04.657880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:49:05.343256: Suus1 maybe_update_lr lr: 0.009114
2022-07-07 19:49:05.363898: saving best epoch checkpoint...
2022-07-07 19:49:05.454888: saving checkpoint...
2022-07-07 19:49:07.160389: done, saving took 1.78 seconds
2022-07-07 19:49:07.175649: This epoch took 78.749925 s

2022-07-07 19:49:07.177821: 
epoch:  49
2022-07-07 19:50:18.497063: train loss : -0.7616
2022-07-07 19:50:23.650120: validation loss: -0.7422
2022-07-07 19:50:23.688288: Average global foreground Dice: [0.8058]
2022-07-07 19:50:23.710997: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:50:24.445671: Suus1 maybe_update_lr lr: 0.009095
2022-07-07 19:50:24.459863: saving scheduled checkpoint file...
2022-07-07 19:50:24.571309: saving checkpoint...
2022-07-07 19:50:26.461480: done, saving took 1.97 seconds
2022-07-07 19:50:26.478069: done
2022-07-07 19:50:26.481164: saving best epoch checkpoint...
2022-07-07 19:50:26.521210: saving checkpoint...
2022-07-07 19:50:28.050668: done, saving took 1.57 seconds
2022-07-07 19:50:28.066872: This epoch took 80.887043 s

2022-07-07 19:50:28.069274: 
epoch:  50
2022-07-07 19:51:40.564965: train loss : -0.7664
2022-07-07 19:51:46.436677: validation loss: -0.7486
2022-07-07 19:51:46.462879: Average global foreground Dice: [0.8042]
2022-07-07 19:51:46.483416: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:51:47.183715: Suus1 maybe_update_lr lr: 0.009077
2022-07-07 19:51:47.204269: saving best epoch checkpoint...
2022-07-07 19:51:47.341595: saving checkpoint...
2022-07-07 19:51:48.873193: done, saving took 1.64 seconds
2022-07-07 19:51:48.888329: This epoch took 80.816647 s

2022-07-07 19:51:48.890412: 
epoch:  51
2022-07-07 19:53:01.206147: train loss : -0.7626
2022-07-07 19:53:06.694133: validation loss: -0.7525
2022-07-07 19:53:06.725349: Average global foreground Dice: [0.8161]
2022-07-07 19:53:06.745125: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:53:07.482282: Suus1 maybe_update_lr lr: 0.009059
2022-07-07 19:53:07.502892: saving best epoch checkpoint...
2022-07-07 19:53:07.616920: saving checkpoint...
2022-07-07 19:53:09.244107: done, saving took 1.70 seconds
2022-07-07 19:53:09.258506: This epoch took 80.366025 s

2022-07-07 19:53:09.260402: 
epoch:  52
2022-07-07 19:54:18.936061: train loss : -0.7639
2022-07-07 19:54:23.687798: validation loss: -0.7705
2022-07-07 19:54:23.721777: Average global foreground Dice: [0.8246]
2022-07-07 19:54:23.733879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:54:24.519339: Suus1 maybe_update_lr lr: 0.009041
2022-07-07 19:54:24.540905: saving best epoch checkpoint...
2022-07-07 19:54:24.625511: saving checkpoint...
2022-07-07 19:54:26.103602: done, saving took 1.54 seconds
2022-07-07 19:54:26.119102: This epoch took 76.856653 s

2022-07-07 19:54:26.121244: 
epoch:  53
2022-07-07 19:55:37.476234: train loss : -0.7761
2022-07-07 19:55:43.220858: validation loss: -0.7538
2022-07-07 19:55:43.226477: Average global foreground Dice: [0.81]
2022-07-07 19:55:43.268348: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:55:44.096288: Suus1 maybe_update_lr lr: 0.009023
2022-07-07 19:55:44.118748: saving best epoch checkpoint...
2022-07-07 19:55:44.191658: saving checkpoint...
2022-07-07 19:55:45.889936: done, saving took 1.76 seconds
2022-07-07 19:55:45.904313: This epoch took 79.780980 s

2022-07-07 19:55:45.906375: 
epoch:  54
2022-07-07 19:56:57.104681: train loss : -0.7664
2022-07-07 19:57:02.056365: validation loss: -0.7505
2022-07-07 19:57:02.076985: Average global foreground Dice: [0.8106]
2022-07-07 19:57:02.092005: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:57:02.877455: Suus1 maybe_update_lr lr: 0.009004
2022-07-07 19:57:02.898921: saving best epoch checkpoint...
2022-07-07 19:57:03.004715: saving checkpoint...
2022-07-07 19:57:04.567367: done, saving took 1.65 seconds
2022-07-07 19:57:04.581839: This epoch took 78.673403 s

2022-07-07 19:57:04.583932: 
epoch:  55
2022-07-07 19:58:15.587741: train loss : -0.7680
2022-07-07 19:58:20.640475: validation loss: -0.7390
2022-07-07 19:58:20.674304: Average global foreground Dice: [0.8026]
2022-07-07 19:58:20.700968: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:58:21.522901: Suus1 maybe_update_lr lr: 0.008986
2022-07-07 19:58:21.542187: This epoch took 76.956085 s

2022-07-07 19:58:21.558263: 
epoch:  56
2022-07-07 19:59:32.897756: train loss : -0.7771
2022-07-07 19:59:37.812957: validation loss: -0.7517
2022-07-07 19:59:37.842478: Average global foreground Dice: [0.8135]
2022-07-07 19:59:37.863892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:59:38.720316: Suus1 maybe_update_lr lr: 0.008968
2022-07-07 19:59:38.743916: saving best epoch checkpoint...
2022-07-07 19:59:38.863717: saving checkpoint...
2022-07-07 19:59:40.408458: done, saving took 1.62 seconds
2022-07-07 19:59:40.423932: This epoch took 78.838057 s

2022-07-07 19:59:40.426142: 
epoch:  57
2022-07-07 20:00:51.667777: train loss : -0.7685
2022-07-07 20:00:57.090153: validation loss: -0.7646
2022-07-07 20:00:57.143517: Average global foreground Dice: [0.8229]
2022-07-07 20:00:57.179312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:00:57.900397: Suus1 maybe_update_lr lr: 0.00895
2022-07-07 20:00:57.903349: saving best epoch checkpoint...
2022-07-07 20:00:57.956550: saving checkpoint...
2022-07-07 20:00:59.579887: done, saving took 1.67 seconds
2022-07-07 20:00:59.593919: This epoch took 79.165640 s

2022-07-07 20:00:59.595916: 
epoch:  58
2022-07-07 20:02:10.178126: train loss : -0.7713
2022-07-07 20:02:15.254821: validation loss: -0.7632
2022-07-07 20:02:15.262932: Average global foreground Dice: [0.8189]
2022-07-07 20:02:15.283352: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:02:16.026731: Suus1 maybe_update_lr lr: 0.008931
2022-07-07 20:02:16.058914: saving best epoch checkpoint...
2022-07-07 20:02:16.158605: saving checkpoint...
2022-07-07 20:02:17.914887: done, saving took 1.83 seconds
2022-07-07 20:02:17.930058: This epoch took 78.331990 s

2022-07-07 20:02:17.932047: 
epoch:  59
2022-07-07 20:03:29.712918: train loss : -0.7721
2022-07-07 20:03:35.143446: validation loss: -0.7355
2022-07-07 20:03:35.170296: Average global foreground Dice: [0.8068]
2022-07-07 20:03:35.202875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:03:35.852036: Suus1 maybe_update_lr lr: 0.008913
2022-07-07 20:03:35.879920: This epoch took 77.945905 s

2022-07-07 20:03:35.918862: 
epoch:  60
2022-07-07 20:04:47.578961: train loss : -0.7755
2022-07-07 20:04:52.888616: validation loss: -0.7669
2022-07-07 20:04:52.906777: Average global foreground Dice: [0.8293]
2022-07-07 20:04:52.926481: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:04:53.668689: Suus1 maybe_update_lr lr: 0.008895
2022-07-07 20:04:53.698911: saving best epoch checkpoint...
2022-07-07 20:04:53.766958: saving checkpoint...
2022-07-07 20:04:55.404228: done, saving took 1.70 seconds
2022-07-07 20:04:55.419672: This epoch took 79.471802 s

2022-07-07 20:04:55.422117: 
epoch:  61
2022-07-07 20:06:06.483926: train loss : -0.7753
2022-07-07 20:06:11.962698: validation loss: -0.7486
2022-07-07 20:06:11.994268: Average global foreground Dice: [0.8079]
2022-07-07 20:06:12.010891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:06:12.632841: Suus1 maybe_update_lr lr: 0.008877
2022-07-07 20:06:12.654917: This epoch took 77.230642 s

2022-07-07 20:06:12.676872: 
epoch:  62
2022-07-07 20:07:24.114371: train loss : -0.7777
2022-07-07 20:07:29.059080: validation loss: -0.7661
2022-07-07 20:07:29.090278: Average global foreground Dice: [0.8276]
2022-07-07 20:07:29.102882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:07:29.994133: Suus1 maybe_update_lr lr: 0.008859
2022-07-07 20:07:30.015916: saving best epoch checkpoint...
2022-07-07 20:07:30.154850: saving checkpoint...
2022-07-07 20:07:31.675029: done, saving took 1.63 seconds
2022-07-07 20:07:31.690951: This epoch took 78.992063 s

2022-07-07 20:07:31.693130: 
epoch:  63
2022-07-07 20:08:42.140640: train loss : -0.7832
2022-07-07 20:08:47.034737: validation loss: -0.7644
2022-07-07 20:08:47.068397: Average global foreground Dice: [0.8234]
2022-07-07 20:08:47.090581: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:08:47.917995: Suus1 maybe_update_lr lr: 0.00884
2022-07-07 20:08:47.949929: saving best epoch checkpoint...
2022-07-07 20:08:48.077560: saving checkpoint...
2022-07-07 20:08:49.769389: done, saving took 1.80 seconds
2022-07-07 20:08:49.785495: This epoch took 78.090275 s

2022-07-07 20:08:49.787564: 
epoch:  64
2022-07-07 20:10:00.190215: train loss : -0.7784
2022-07-07 20:10:05.108083: validation loss: -0.7728
2022-07-07 20:10:05.129755: Average global foreground Dice: [0.8219]
2022-07-07 20:10:05.161048: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:10:05.799211: Suus1 maybe_update_lr lr: 0.008822
2022-07-07 20:10:05.823790: saving best epoch checkpoint...
2022-07-07 20:10:06.037433: saving checkpoint...
2022-07-07 20:10:07.767452: done, saving took 1.93 seconds
2022-07-07 20:10:07.785300: This epoch took 77.995733 s

2022-07-07 20:10:07.787539: 
epoch:  65
2022-07-07 20:11:18.449286: train loss : -0.7894
2022-07-07 20:11:24.521767: validation loss: -0.7646
2022-07-07 20:11:24.526603: Average global foreground Dice: [0.8253]
2022-07-07 20:11:24.535393: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:11:25.247392: Suus1 maybe_update_lr lr: 0.008804
2022-07-07 20:11:25.250133: saving best epoch checkpoint...
2022-07-07 20:11:25.341520: saving checkpoint...
2022-07-07 20:11:26.692508: done, saving took 1.42 seconds
2022-07-07 20:11:26.775222: This epoch took 78.985431 s

2022-07-07 20:11:26.777264: 
epoch:  66
2022-07-07 20:12:37.908648: train loss : -0.7842
2022-07-07 20:12:43.036039: validation loss: -0.7683
2022-07-07 20:12:43.044703: Average global foreground Dice: [0.827]
2022-07-07 20:12:43.091913: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:12:43.775679: Suus1 maybe_update_lr lr: 0.008785
2022-07-07 20:12:43.800903: saving best epoch checkpoint...
2022-07-07 20:12:43.941422: saving checkpoint...
2022-07-07 20:12:45.433832: done, saving took 1.61 seconds
2022-07-07 20:12:45.449923: This epoch took 78.670764 s

2022-07-07 20:12:45.451805: 
epoch:  67
2022-07-07 20:13:56.291958: train loss : -0.7863
2022-07-07 20:14:01.627592: validation loss: -0.7659
2022-07-07 20:14:01.667427: Average global foreground Dice: [0.8218]
2022-07-07 20:14:01.687088: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:14:02.365785: Suus1 maybe_update_lr lr: 0.008767
2022-07-07 20:14:02.386904: saving best epoch checkpoint...
2022-07-07 20:14:02.582804: saving checkpoint...
2022-07-07 20:14:04.203457: done, saving took 1.79 seconds
2022-07-07 20:14:04.219324: This epoch took 78.765610 s

2022-07-07 20:14:04.221497: 
epoch:  68
2022-07-07 20:15:15.332494: train loss : -0.7849
2022-07-07 20:15:20.108021: validation loss: -0.7583
2022-07-07 20:15:20.142264: Average global foreground Dice: [0.8188]
2022-07-07 20:15:20.174892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:15:20.981894: Suus1 maybe_update_lr lr: 0.008749
2022-07-07 20:15:21.008204: saving best epoch checkpoint...
2022-07-07 20:15:21.069955: saving checkpoint...
2022-07-07 20:15:22.950146: done, saving took 1.93 seconds
2022-07-07 20:15:22.964843: This epoch took 78.741402 s

2022-07-07 20:15:22.966884: 
epoch:  69
2022-07-07 20:16:33.743008: train loss : -0.7880
2022-07-07 20:16:39.111452: validation loss: -0.7524
2022-07-07 20:16:39.142097: Average global foreground Dice: [0.8129]
2022-07-07 20:16:39.166821: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:16:39.796611: Suus1 maybe_update_lr lr: 0.008731
2022-07-07 20:16:39.817934: This epoch took 76.849081 s

2022-07-07 20:16:39.839863: 
epoch:  70
2022-07-07 20:17:52.276835: train loss : -0.7867
2022-07-07 20:17:57.694554: validation loss: -0.7658
2022-07-07 20:17:57.722984: Average global foreground Dice: [0.8219]
2022-07-07 20:17:57.735865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:17:58.544221: Suus1 maybe_update_lr lr: 0.008712
2022-07-07 20:17:58.564672: saving best epoch checkpoint...
2022-07-07 20:17:58.676496: saving checkpoint...
2022-07-07 20:18:00.334525: done, saving took 1.75 seconds
2022-07-07 20:18:00.364003: This epoch took 80.492992 s

2022-07-07 20:18:00.366231: 
epoch:  71
2022-07-07 20:19:12.566594: train loss : -0.7891
2022-07-07 20:19:17.727825: validation loss: -0.7625
2022-07-07 20:19:17.768242: Average global foreground Dice: [0.8219]
2022-07-07 20:19:17.797916: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:19:18.439668: Suus1 maybe_update_lr lr: 0.008694
2022-07-07 20:19:18.460906: saving best epoch checkpoint...
2022-07-07 20:19:18.533934: saving checkpoint...
2022-07-07 20:19:20.107735: done, saving took 1.62 seconds
2022-07-07 20:19:20.123436: This epoch took 79.755250 s

2022-07-07 20:19:20.125582: 
epoch:  72
2022-07-07 20:20:32.103815: train loss : -0.7901
2022-07-07 20:20:37.394303: validation loss: -0.7742
2022-07-07 20:20:37.425298: Average global foreground Dice: [0.8266]
2022-07-07 20:20:37.440892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:20:38.142637: Suus1 maybe_update_lr lr: 0.008676
2022-07-07 20:20:38.148519: saving best epoch checkpoint...
2022-07-07 20:20:38.241447: saving checkpoint...
2022-07-07 20:20:40.145934: done, saving took 1.98 seconds
2022-07-07 20:20:40.161825: This epoch took 80.034072 s

2022-07-07 20:20:40.164112: 
epoch:  73
2022-07-07 20:21:50.484716: train loss : -0.7971
2022-07-07 20:21:55.159813: validation loss: -0.7953
2022-07-07 20:21:55.178258: Average global foreground Dice: [0.8443]
2022-07-07 20:21:55.197853: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:21:56.098346: Suus1 maybe_update_lr lr: 0.008658
2022-07-07 20:21:56.117749: saving best epoch checkpoint...
2022-07-07 20:21:56.219673: saving checkpoint...
2022-07-07 20:21:57.786936: done, saving took 1.65 seconds
2022-07-07 20:21:57.801509: This epoch took 77.635247 s

2022-07-07 20:21:57.803575: 
epoch:  74
2022-07-07 20:23:09.409701: train loss : -0.7972
2022-07-07 20:23:14.817103: validation loss: -0.7753
2022-07-07 20:23:14.848609: Average global foreground Dice: [0.8318]
2022-07-07 20:23:14.869117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:23:15.489906: Suus1 maybe_update_lr lr: 0.008639
2022-07-07 20:23:15.510910: saving best epoch checkpoint...
2022-07-07 20:23:15.618333: saving checkpoint...
2022-07-07 20:23:17.550016: done, saving took 2.02 seconds
2022-07-07 20:23:17.587856: This epoch took 79.782306 s

2022-07-07 20:23:17.590297: 
epoch:  75
2022-07-07 20:24:28.163803: train loss : -0.7963
2022-07-07 20:24:33.130704: validation loss: -0.7599
2022-07-07 20:24:33.158374: Average global foreground Dice: [0.8179]
2022-07-07 20:24:33.179555: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:24:33.853215: Suus1 maybe_update_lr lr: 0.008621
2022-07-07 20:24:33.891912: This epoch took 76.299536 s

2022-07-07 20:24:33.913861: 
epoch:  76
2022-07-07 20:25:47.123744: train loss : -0.7980
2022-07-07 20:25:52.666629: validation loss: -0.7804
2022-07-07 20:25:52.685956: Average global foreground Dice: [0.8314]
2022-07-07 20:25:52.717716: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:25:53.501456: Suus1 maybe_update_lr lr: 0.008603
2022-07-07 20:25:53.530938: saving best epoch checkpoint...
2022-07-07 20:25:53.666618: saving checkpoint...
2022-07-07 20:25:55.314656: done, saving took 1.77 seconds
2022-07-07 20:25:55.329578: This epoch took 81.389696 s

2022-07-07 20:25:55.331659: 
epoch:  77
2022-07-07 20:27:06.233023: train loss : -0.7979
2022-07-07 20:27:10.846803: validation loss: -0.7873
2022-07-07 20:27:10.880459: Average global foreground Dice: [0.8377]
2022-07-07 20:27:10.900878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:27:11.528494: Suus1 maybe_update_lr lr: 0.008584
2022-07-07 20:27:11.559364: saving best epoch checkpoint...
2022-07-07 20:27:11.664536: saving checkpoint...
2022-07-07 20:27:13.435571: done, saving took 1.86 seconds
2022-07-07 20:27:13.450849: This epoch took 78.117087 s

2022-07-07 20:27:13.453125: 
epoch:  78
2022-07-07 20:28:23.885833: train loss : -0.7998
2022-07-07 20:28:28.857788: validation loss: -0.7597
2022-07-07 20:28:28.894235: Average global foreground Dice: [0.822]
2022-07-07 20:28:28.915884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:28:29.861223: Suus1 maybe_update_lr lr: 0.008566
2022-07-07 20:28:29.897923: This epoch took 76.442590 s

2022-07-07 20:28:29.913872: 
epoch:  79
2022-07-07 20:29:39.894591: train loss : -0.7990
2022-07-07 20:29:45.083221: validation loss: -0.7585
2022-07-07 20:29:45.126283: Average global foreground Dice: [0.8179]
2022-07-07 20:29:45.139744: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:29:45.910672: Suus1 maybe_update_lr lr: 0.008548
2022-07-07 20:29:45.929907: This epoch took 75.975036 s

2022-07-07 20:29:45.951857: 
epoch:  80
2022-07-07 20:30:58.244129: train loss : -0.7960
2022-07-07 20:31:04.221249: validation loss: -0.7676
2022-07-07 20:31:04.252568: Average global foreground Dice: [0.8167]
2022-07-07 20:31:04.272311: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:31:04.966989: Suus1 maybe_update_lr lr: 0.008529
2022-07-07 20:31:04.975316: This epoch took 79.010328 s

2022-07-07 20:31:05.027864: 
epoch:  81
2022-07-07 20:32:17.336354: train loss : -0.8027
2022-07-07 20:32:22.413622: validation loss: -0.7666
2022-07-07 20:32:22.459399: Average global foreground Dice: [0.8263]
2022-07-07 20:32:22.465468: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:32:23.296564: Suus1 maybe_update_lr lr: 0.008511
2022-07-07 20:32:23.327212: This epoch took 78.263341 s

2022-07-07 20:32:23.346856: 
epoch:  82
2022-07-07 20:33:35.088885: train loss : -0.7917
2022-07-07 20:33:40.210365: validation loss: -0.7594
2022-07-07 20:33:40.241355: Average global foreground Dice: [0.8228]
2022-07-07 20:33:40.269863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:33:40.863240: Suus1 maybe_update_lr lr: 0.008493
2022-07-07 20:33:40.866484: This epoch took 77.503621 s

2022-07-07 20:33:40.888877: 
epoch:  83
2022-07-07 20:34:52.762670: train loss : -0.7902
2022-07-07 20:34:57.871666: validation loss: -0.7529
2022-07-07 20:34:57.890232: Average global foreground Dice: [0.8173]
2022-07-07 20:34:57.898612: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:34:58.803807: Suus1 maybe_update_lr lr: 0.008474
2022-07-07 20:34:58.816600: This epoch took 77.917143 s

2022-07-07 20:34:58.824632: 
epoch:  84
2022-07-07 20:36:10.124129: train loss : -0.7973
2022-07-07 20:36:15.994909: validation loss: -0.7587
2022-07-07 20:36:16.036302: Average global foreground Dice: [0.8175]
2022-07-07 20:36:16.057869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:36:16.650370: Suus1 maybe_update_lr lr: 0.008456
2022-07-07 20:36:16.676945: This epoch took 77.850118 s

2022-07-07 20:36:16.698858: 
epoch:  85
2022-07-07 20:37:30.870158: train loss : -0.7913
2022-07-07 20:37:36.787982: validation loss: -0.7459
2022-07-07 20:37:36.819583: Average global foreground Dice: [0.8026]
2022-07-07 20:37:36.839448: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:37:37.684184: Suus1 maybe_update_lr lr: 0.008438
2022-07-07 20:37:37.705927: This epoch took 80.966746 s

2022-07-07 20:37:37.729870: 
epoch:  86
2022-07-07 20:38:49.406811: train loss : -0.7913
2022-07-07 20:38:54.591663: validation loss: -0.7542
2022-07-07 20:38:54.623495: Average global foreground Dice: [0.8171]
2022-07-07 20:38:54.635888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:38:55.215219: Suus1 maybe_update_lr lr: 0.008419
2022-07-07 20:38:55.235905: This epoch took 77.474707 s

2022-07-07 20:38:55.257868: 
epoch:  87
2022-07-07 20:40:07.005067: train loss : -0.8003
2022-07-07 20:40:12.192977: validation loss: -0.7747
2022-07-07 20:40:12.206848: Average global foreground Dice: [0.831]
2022-07-07 20:40:12.212912: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:40:13.031022: Suus1 maybe_update_lr lr: 0.008401
2022-07-07 20:40:13.050226: This epoch took 77.769351 s

2022-07-07 20:40:13.070900: 
epoch:  88
2022-07-07 20:41:24.708765: train loss : -0.7964
2022-07-07 20:41:29.797060: validation loss: -0.7715
2022-07-07 20:41:29.833283: Average global foreground Dice: [0.8257]
2022-07-07 20:41:29.856755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:41:30.606374: Suus1 maybe_update_lr lr: 0.008383
2022-07-07 20:41:30.650951: This epoch took 77.577846 s

2022-07-07 20:41:30.672868: 
epoch:  89
2022-07-07 20:42:43.773344: train loss : -0.7890
2022-07-07 20:42:48.992621: validation loss: -0.7680
2022-07-07 20:42:49.009213: Average global foreground Dice: [0.822]
2022-07-07 20:42:49.013352: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:42:49.658632: Suus1 maybe_update_lr lr: 0.008364
2022-07-07 20:42:49.679585: This epoch took 78.984724 s

2022-07-07 20:42:49.699511: 
epoch:  90
2022-07-07 20:44:00.410040: train loss : -0.7695
2022-07-07 20:44:05.563628: validation loss: -0.7491
2022-07-07 20:44:05.595598: Average global foreground Dice: [0.8099]
2022-07-07 20:44:05.611904: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:44:06.473974: Suus1 maybe_update_lr lr: 0.008346
2022-07-07 20:44:06.484725: This epoch took 76.783012 s

2022-07-07 20:44:06.493479: 
epoch:  91
2022-07-07 20:45:19.619926: train loss : -0.7903
2022-07-07 20:45:24.801790: validation loss: -0.7697
2022-07-07 20:45:24.820978: Average global foreground Dice: [0.8313]
2022-07-07 20:45:24.830817: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:45:25.546278: Suus1 maybe_update_lr lr: 0.008328
2022-07-07 20:45:25.578900: This epoch took 79.051640 s

2022-07-07 20:45:25.590693: 
epoch:  92
2022-07-07 20:46:37.493789: train loss : -0.7950
2022-07-07 20:46:42.082641: validation loss: -0.7641
2022-07-07 20:46:42.103398: Average global foreground Dice: [0.8199]
2022-07-07 20:46:42.109529: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:46:42.885820: Suus1 maybe_update_lr lr: 0.008309
2022-07-07 20:46:42.933914: This epoch took 77.306035 s

2022-07-07 20:46:42.943607: 
epoch:  93
2022-07-07 20:47:54.932117: train loss : -0.7993
2022-07-07 20:48:00.184974: validation loss: -0.7758
2022-07-07 20:48:00.230360: Average global foreground Dice: [0.831]
2022-07-07 20:48:00.264177: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:48:00.888631: Suus1 maybe_update_lr lr: 0.008291
2022-07-07 20:48:00.917932: This epoch took 77.962063 s

2022-07-07 20:48:00.939875: 
epoch:  94
2022-07-07 20:49:11.810587: train loss : -0.8061
2022-07-07 20:49:17.018527: validation loss: -0.7643
2022-07-07 20:49:17.034655: Average global foreground Dice: [0.8244]
2022-07-07 20:49:17.063885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:49:17.779344: Suus1 maybe_update_lr lr: 0.008272
2022-07-07 20:49:17.803543: This epoch took 76.837946 s

2022-07-07 20:49:17.834856: 
epoch:  95
2022-07-07 20:50:27.869515: train loss : -0.8099
2022-07-07 20:50:32.850172: validation loss: -0.7746
2022-07-07 20:50:32.885863: Average global foreground Dice: [0.8331]
2022-07-07 20:50:32.916003: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:50:33.593339: Suus1 maybe_update_lr lr: 0.008254
2022-07-07 20:50:33.625921: This epoch took 75.765745 s

2022-07-07 20:50:33.658102: 
epoch:  96
2022-07-07 20:51:45.359651: train loss : -0.8067
2022-07-07 20:51:50.332150: validation loss: -0.7846
2022-07-07 20:51:50.359835: Average global foreground Dice: [0.8351]
2022-07-07 20:51:50.379616: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:51:51.033395: Suus1 maybe_update_lr lr: 0.008236
2022-07-07 20:51:51.064915: saving best epoch checkpoint...
2022-07-07 20:51:51.199337: saving checkpoint...
2022-07-07 20:51:53.000958: done, saving took 1.91 seconds
2022-07-07 20:51:53.017231: This epoch took 79.338983 s

2022-07-07 20:51:53.019317: 
epoch:  97
2022-07-07 20:53:02.801227: train loss : -0.8046
2022-07-07 20:53:07.607327: validation loss: -0.7712
2022-07-07 20:53:07.638420: Average global foreground Dice: [0.8309]
2022-07-07 20:53:07.658133: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:53:08.505789: Suus1 maybe_update_lr lr: 0.008217
2022-07-07 20:53:08.548915: saving best epoch checkpoint...
2022-07-07 20:53:08.665531: saving checkpoint...
2022-07-07 20:53:10.398309: done, saving took 1.82 seconds
2022-07-07 20:53:10.413093: This epoch took 77.391640 s

2022-07-07 20:53:10.415190: 
epoch:  98
2022-07-07 20:54:22.293785: train loss : -0.8052
2022-07-07 20:54:27.522724: validation loss: -0.7731
2022-07-07 20:54:27.555657: Average global foreground Dice: [0.8323]
2022-07-07 20:54:27.564553: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:54:28.223227: Suus1 maybe_update_lr lr: 0.008199
2022-07-07 20:54:28.225646: saving best epoch checkpoint...
2022-07-07 20:54:28.370303: saving checkpoint...
2022-07-07 20:54:30.012306: done, saving took 1.78 seconds
2022-07-07 20:54:30.028224: This epoch took 79.611023 s

2022-07-07 20:54:30.030478: 
epoch:  99
2022-07-07 20:55:41.339157: train loss : -0.8126
2022-07-07 20:55:46.178767: validation loss: -0.7634
2022-07-07 20:55:46.212355: Average global foreground Dice: [0.8257]
2022-07-07 20:55:46.244890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:55:47.139302: Suus1 maybe_update_lr lr: 0.008181
2022-07-07 20:55:47.151960: saving scheduled checkpoint file...
2022-07-07 20:55:47.295477: saving checkpoint...
2022-07-07 20:55:48.962807: done, saving took 1.79 seconds
2022-07-07 20:55:48.982059: done
2022-07-07 20:55:48.984194: This epoch took 78.951823 s

2022-07-07 20:55:48.986179: 
epoch:  100
2022-07-07 20:57:01.574147: train loss : -0.8011
2022-07-07 20:57:06.894315: validation loss: -0.7588
2022-07-07 20:57:06.919646: Average global foreground Dice: [0.8134]
2022-07-07 20:57:06.939387: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:57:07.485677: Suus1 maybe_update_lr lr: 0.008162
2022-07-07 20:57:07.509931: This epoch took 78.521514 s

2022-07-07 20:57:07.533865: 
epoch:  101
2022-07-07 20:58:21.007182: train loss : -0.8035
2022-07-07 20:58:26.154130: validation loss: -0.7639
2022-07-07 20:58:26.167356: Average global foreground Dice: [0.8142]
2022-07-07 20:58:26.200147: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:58:27.040681: Suus1 maybe_update_lr lr: 0.008144
2022-07-07 20:58:27.050139: This epoch took 79.472872 s

2022-07-07 20:58:27.055652: 
epoch:  102
2022-07-07 20:59:37.436852: train loss : -0.7950
2022-07-07 20:59:42.723202: validation loss: -0.7665
2022-07-07 20:59:42.746278: Average global foreground Dice: [0.8272]
2022-07-07 20:59:42.757927: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:59:43.440490: Suus1 maybe_update_lr lr: 0.008125
2022-07-07 20:59:43.460057: This epoch took 76.391367 s

2022-07-07 20:59:43.481866: 
epoch:  103
2022-07-07 21:00:56.242733: train loss : -0.8022
2022-07-07 21:01:02.345734: validation loss: -0.7625
2022-07-07 21:01:02.378223: Average global foreground Dice: [0.828]
2022-07-07 21:01:02.397934: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:01:02.956720: Suus1 maybe_update_lr lr: 0.008107
2022-07-07 21:01:02.975905: This epoch took 79.472022 s

2022-07-07 21:01:02.997866: 
epoch:  104
2022-07-07 21:02:14.647121: train loss : -0.8026
2022-07-07 21:02:19.589730: validation loss: -0.7758
2022-07-07 21:02:19.628266: Average global foreground Dice: [0.833]
2022-07-07 21:02:19.643043: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:02:20.400435: Suus1 maybe_update_lr lr: 0.008088
2022-07-07 21:02:20.433930: This epoch took 77.414056 s

2022-07-07 21:02:20.464988: 
epoch:  105
2022-07-07 21:03:32.758631: train loss : -0.8011
2022-07-07 21:03:38.045553: validation loss: -0.7681
2022-07-07 21:03:38.084416: Average global foreground Dice: [0.8254]
2022-07-07 21:03:38.104113: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:03:38.963433: Suus1 maybe_update_lr lr: 0.00807
2022-07-07 21:03:38.984909: This epoch took 78.499841 s

2022-07-07 21:03:39.006867: 
epoch:  106
2022-07-07 21:04:52.189528: train loss : -0.8075
2022-07-07 21:04:57.202404: validation loss: -0.7664
2022-07-07 21:04:57.213328: Average global foreground Dice: [0.8281]
2022-07-07 21:04:57.233268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:04:57.964401: Suus1 maybe_update_lr lr: 0.008052
2022-07-07 21:04:57.967461: This epoch took 78.938601 s

2022-07-07 21:04:57.975455: 
epoch:  107
2022-07-07 21:06:09.752159: train loss : -0.8157
2022-07-07 21:06:14.872197: validation loss: -0.7624
2022-07-07 21:06:14.905324: Average global foreground Dice: [0.823]
2022-07-07 21:06:14.926893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:06:15.554324: Suus1 maybe_update_lr lr: 0.008033
2022-07-07 21:06:15.576041: This epoch took 77.581439 s

2022-07-07 21:06:15.596100: 
epoch:  108
2022-07-07 21:07:27.498874: train loss : -0.8151
2022-07-07 21:07:32.475585: validation loss: -0.7617
2022-07-07 21:07:32.507269: Average global foreground Dice: [0.817]
2022-07-07 21:07:32.540848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:07:33.288057: Suus1 maybe_update_lr lr: 0.008015
2022-07-07 21:07:33.321917: This epoch took 77.710027 s

2022-07-07 21:07:33.351245: 
epoch:  109
2022-07-07 21:08:45.342447: train loss : -0.8113
2022-07-07 21:08:50.713300: validation loss: -0.7690
2022-07-07 21:08:50.780783: Average global foreground Dice: [0.8293]
2022-07-07 21:08:50.811515: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:08:51.494382: Suus1 maybe_update_lr lr: 0.007996
2022-07-07 21:08:51.515931: This epoch took 78.136056 s

2022-07-07 21:08:51.537856: 
epoch:  110
2022-07-07 21:10:01.520190: train loss : -0.8099
2022-07-07 21:10:06.809660: validation loss: -0.7578
2022-07-07 21:10:06.836196: Average global foreground Dice: [0.8119]
2022-07-07 21:10:06.865876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:10:07.623272: Suus1 maybe_update_lr lr: 0.007978
2022-07-07 21:10:07.642961: This epoch took 76.083086 s

2022-07-07 21:10:07.673870: 
epoch:  111
2022-07-07 21:11:19.543383: train loss : -0.8221
2022-07-07 21:11:24.245781: validation loss: -0.7686
2022-07-07 21:11:24.248940: Average global foreground Dice: [0.8201]
2022-07-07 21:11:24.251492: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:11:24.818684: Suus1 maybe_update_lr lr: 0.007959
2022-07-07 21:11:24.840009: This epoch took 77.136814 s

2022-07-07 21:11:24.867852: 
epoch:  112
2022-07-07 21:12:34.929471: train loss : -0.8184
2022-07-07 21:12:39.972256: validation loss: -0.7906
2022-07-07 21:12:40.008293: Average global foreground Dice: [0.844]
2022-07-07 21:12:40.039878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:12:40.857857: Suus1 maybe_update_lr lr: 0.007941
2022-07-07 21:12:40.896973: This epoch took 75.992846 s

2022-07-07 21:12:40.921000: 
epoch:  113
2022-07-07 21:13:54.605854: train loss : -0.8160
2022-07-07 21:14:00.074921: validation loss: -0.7900
2022-07-07 21:14:00.115221: Average global foreground Dice: [0.8435]
2022-07-07 21:14:00.127448: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:14:00.940923: Suus1 maybe_update_lr lr: 0.007922
2022-07-07 21:14:00.953082: saving best epoch checkpoint...
2022-07-07 21:14:01.133466: saving checkpoint...
2022-07-07 21:14:02.723834: done, saving took 1.74 seconds
2022-07-07 21:14:02.739964: This epoch took 81.797096 s

2022-07-07 21:14:02.742122: 
epoch:  114
2022-07-07 21:15:14.484738: train loss : -0.8165
2022-07-07 21:15:20.024048: validation loss: -0.7848
2022-07-07 21:15:20.049006: Average global foreground Dice: [0.8385]
2022-07-07 21:15:20.070854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:15:20.633889: Suus1 maybe_update_lr lr: 0.007904
2022-07-07 21:15:20.643538: saving best epoch checkpoint...
2022-07-07 21:15:20.819803: saving checkpoint...
2022-07-07 21:15:22.281860: done, saving took 1.60 seconds
2022-07-07 21:15:22.297462: This epoch took 79.553321 s

2022-07-07 21:15:22.299613: 
epoch:  115
2022-07-07 21:16:32.937562: train loss : -0.8159
2022-07-07 21:16:38.559583: validation loss: -0.7701
2022-07-07 21:16:38.571309: Average global foreground Dice: [0.8273]
2022-07-07 21:16:38.620721: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:16:39.226508: Suus1 maybe_update_lr lr: 0.007885
2022-07-07 21:16:39.228863: This epoch took 76.927359 s

2022-07-07 21:16:39.238209: 
epoch:  116
2022-07-07 21:17:50.333734: train loss : -0.8224
2022-07-07 21:17:55.255147: validation loss: -0.7941
2022-07-07 21:17:55.286568: Average global foreground Dice: [0.8462]
2022-07-07 21:17:55.307687: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:17:56.126324: Suus1 maybe_update_lr lr: 0.007867
2022-07-07 21:17:56.147911: saving best epoch checkpoint...
2022-07-07 21:17:56.247909: saving checkpoint...
2022-07-07 21:17:58.187831: done, saving took 2.01 seconds
2022-07-07 21:17:58.202919: This epoch took 78.934909 s

2022-07-07 21:17:58.205257: 
epoch:  117
2022-07-07 21:19:08.480908: train loss : -0.8257
2022-07-07 21:19:13.582274: validation loss: -0.7566
2022-07-07 21:19:13.586993: Average global foreground Dice: [0.8172]
2022-07-07 21:19:13.623106: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:19:14.375592: Suus1 maybe_update_lr lr: 0.007848
2022-07-07 21:19:14.407913: This epoch took 76.200201 s

2022-07-07 21:19:14.441345: 
epoch:  118
2022-07-07 21:20:25.755776: train loss : -0.8249
2022-07-07 21:20:30.523225: validation loss: -0.7723
2022-07-07 21:20:30.554201: Average global foreground Dice: [0.8294]
2022-07-07 21:20:30.592056: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:20:31.378266: Suus1 maybe_update_lr lr: 0.00783
2022-07-07 21:20:31.408904: This epoch took 76.944295 s

2022-07-07 21:20:31.430877: 
epoch:  119
2022-07-07 21:21:43.789042: train loss : -0.8289
2022-07-07 21:21:48.760157: validation loss: -0.7816
2022-07-07 21:21:48.791668: Average global foreground Dice: [0.8347]
2022-07-07 21:21:48.811410: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:21:49.355065: Suus1 maybe_update_lr lr: 0.007811
2022-07-07 21:21:49.357313: This epoch took 77.901438 s

2022-07-07 21:21:49.360619: 
epoch:  120
2022-07-07 21:23:02.039176: train loss : -0.8255
2022-07-07 21:23:07.652733: validation loss: -0.7869
2022-07-07 21:23:07.687296: Average global foreground Dice: [0.8373]
2022-07-07 21:23:07.725868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:23:08.391261: Suus1 maybe_update_lr lr: 0.007793
2022-07-07 21:23:08.410613: saving best epoch checkpoint...
2022-07-07 21:23:08.469235: saving checkpoint...
2022-07-07 21:23:09.953329: done, saving took 1.54 seconds
2022-07-07 21:23:09.969094: This epoch took 80.606548 s

2022-07-07 21:23:09.971337: 
epoch:  121
2022-07-07 21:24:20.603564: train loss : -0.8263
2022-07-07 21:24:25.083065: validation loss: -0.7768
2022-07-07 21:24:25.134255: Average global foreground Dice: [0.829]
2022-07-07 21:24:25.146875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:24:25.679032: Suus1 maybe_update_lr lr: 0.007774
2022-07-07 21:24:25.709288: This epoch took 75.735785 s

2022-07-07 21:24:25.729419: 
epoch:  122
2022-07-07 21:25:36.835479: train loss : -0.8308
2022-07-07 21:25:41.827699: validation loss: -0.7830
2022-07-07 21:25:41.863284: Average global foreground Dice: [0.8342]
2022-07-07 21:25:41.890632: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:25:42.580317: Suus1 maybe_update_lr lr: 0.007756
2022-07-07 21:25:42.582877: saving best epoch checkpoint...
2022-07-07 21:25:42.669851: saving checkpoint...
2022-07-07 21:25:44.132124: done, saving took 1.53 seconds
2022-07-07 21:25:44.149365: This epoch took 78.399705 s

2022-07-07 21:25:44.151427: 
epoch:  123
2022-07-07 21:26:55.816880: train loss : -0.8289
2022-07-07 21:27:00.682281: validation loss: -0.7672
2022-07-07 21:27:00.685863: Average global foreground Dice: [0.83]
2022-07-07 21:27:00.687984: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:27:01.276002: Suus1 maybe_update_lr lr: 0.007737
2022-07-07 21:27:01.302300: This epoch took 77.148935 s

2022-07-07 21:27:01.324850: 
epoch:  124
2022-07-07 21:28:13.574982: train loss : -0.8305
2022-07-07 21:28:18.334305: validation loss: -0.7821
2022-07-07 21:28:18.365654: Average global foreground Dice: [0.8353]
2022-07-07 21:28:18.389874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:28:19.301643: Suus1 maybe_update_lr lr: 0.007719
2022-07-07 21:28:19.314907: saving best epoch checkpoint...
2022-07-07 21:28:19.399422: saving checkpoint...
2022-07-07 21:28:21.053184: done, saving took 1.73 seconds
2022-07-07 21:28:21.069200: This epoch took 79.734090 s

2022-07-07 21:28:21.071474: 
epoch:  125
2022-07-07 21:29:31.799700: train loss : -0.8202
2022-07-07 21:29:37.165014: validation loss: -0.7751
2022-07-07 21:29:37.205446: Average global foreground Dice: [0.8273]
2022-07-07 21:29:37.228885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:29:37.780002: Suus1 maybe_update_lr lr: 0.0077
2022-07-07 21:29:37.800914: This epoch took 76.727253 s

2022-07-07 21:29:37.824868: 
epoch:  126
2022-07-07 21:30:49.447877: train loss : -0.8252
2022-07-07 21:30:54.470316: validation loss: -0.7694
2022-07-07 21:30:54.494639: Average global foreground Dice: [0.824]
2022-07-07 21:30:54.501489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:30:55.338556: Suus1 maybe_update_lr lr: 0.007682
2022-07-07 21:30:55.364895: This epoch took 77.525025 s

2022-07-07 21:30:55.381875: 
epoch:  127
2022-07-07 21:32:07.453737: train loss : -0.8178
2022-07-07 21:32:12.839264: validation loss: -0.7449
2022-07-07 21:32:12.875213: Average global foreground Dice: [0.8091]
2022-07-07 21:32:12.887862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:32:13.574471: Suus1 maybe_update_lr lr: 0.007663
2022-07-07 21:32:13.595916: This epoch took 78.198032 s

2022-07-07 21:32:13.617869: 
epoch:  128
2022-07-07 21:33:25.581090: train loss : -0.8283
2022-07-07 21:33:30.727262: validation loss: -0.7470
2022-07-07 21:33:30.741459: Average global foreground Dice: [0.808]
2022-07-07 21:33:30.752211: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:33:31.431749: Suus1 maybe_update_lr lr: 0.007645
2022-07-07 21:33:31.461057: This epoch took 77.825185 s

2022-07-07 21:33:31.472125: 
epoch:  129
2022-07-07 21:34:42.970290: train loss : -0.8333
2022-07-07 21:34:47.947697: validation loss: -0.7737
2022-07-07 21:34:47.982261: Average global foreground Dice: [0.8302]
2022-07-07 21:34:48.011158: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:34:48.827740: Suus1 maybe_update_lr lr: 0.007626
2022-07-07 21:34:48.845590: This epoch took 77.370212 s

2022-07-07 21:34:48.847857: 
epoch:  130
2022-07-07 21:35:59.659904: train loss : -0.8304
2022-07-07 21:36:05.139577: validation loss: -0.7537
2022-07-07 21:36:05.179951: Average global foreground Dice: [0.813]
2022-07-07 21:36:05.200230: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:36:05.811228: Suus1 maybe_update_lr lr: 0.007608
2022-07-07 21:36:05.822850: This epoch took 76.972735 s

2022-07-07 21:36:05.830405: 
epoch:  131
2022-07-07 21:37:19.214967: train loss : -0.8011
2022-07-07 21:37:24.524780: validation loss: -0.7731
2022-07-07 21:37:24.545584: Average global foreground Dice: [0.8267]
2022-07-07 21:37:24.565390: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:37:25.279347: Suus1 maybe_update_lr lr: 0.007589
2022-07-07 21:37:25.305935: This epoch took 79.454951 s

2022-07-07 21:37:25.319597: 
epoch:  132
2022-07-07 21:38:36.470064: train loss : -0.8062
2022-07-07 21:38:41.849247: validation loss: -0.7609
2022-07-07 21:38:41.862506: Average global foreground Dice: [0.8143]
2022-07-07 21:38:41.867598: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:38:42.684344: Suus1 maybe_update_lr lr: 0.007571
2022-07-07 21:38:42.704619: This epoch took 77.382800 s

2022-07-07 21:38:42.716598: 
epoch:  133
2022-07-07 21:39:52.696193: train loss : -0.8195
2022-07-07 21:39:57.593497: validation loss: -0.7897
2022-07-07 21:39:57.622592: Average global foreground Dice: [0.8414]
2022-07-07 21:39:57.630974: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:39:58.276790: Suus1 maybe_update_lr lr: 0.007552
2022-07-07 21:39:58.316592: This epoch took 75.597879 s

2022-07-07 21:39:58.345864: 
epoch:  134
2022-07-07 21:41:09.952949: train loss : -0.8250
2022-07-07 21:41:15.240470: validation loss: -0.7851
2022-07-07 21:41:15.263327: Average global foreground Dice: [0.84]
2022-07-07 21:41:15.284876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:41:16.004051: Suus1 maybe_update_lr lr: 0.007533
2022-07-07 21:41:16.022004: This epoch took 77.643138 s

2022-07-07 21:41:16.042042: 
epoch:  135
2022-07-07 21:42:27.114462: train loss : -0.8264
2022-07-07 21:42:32.139954: validation loss: -0.7823
2022-07-07 21:42:32.159240: Average global foreground Dice: [0.8364]
2022-07-07 21:42:32.192894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:42:32.817600: Suus1 maybe_update_lr lr: 0.007515
2022-07-07 21:42:32.839090: This epoch took 76.776955 s

2022-07-07 21:42:32.867856: 
epoch:  136
2022-07-07 21:43:43.924093: train loss : -0.8328
2022-07-07 21:43:48.990091: validation loss: -0.7680
2022-07-07 21:43:49.018295: Average global foreground Dice: [0.8292]
2022-07-07 21:43:49.047016: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:43:49.808015: Suus1 maybe_update_lr lr: 0.007496
2022-07-07 21:43:49.828904: This epoch took 76.931238 s

2022-07-07 21:43:49.850844: 
epoch:  137
2022-07-07 21:45:00.897050: train loss : -0.8345
2022-07-07 21:45:05.814226: validation loss: -0.7843
2022-07-07 21:45:05.845402: Average global foreground Dice: [0.8394]
2022-07-07 21:45:05.861884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:45:06.569334: Suus1 maybe_update_lr lr: 0.007478
2022-07-07 21:45:06.601904: This epoch took 76.713987 s

2022-07-07 21:45:06.642945: 
epoch:  138
2022-07-07 21:46:19.699450: train loss : -0.8327
2022-07-07 21:46:24.919557: validation loss: -0.7898
2022-07-07 21:46:24.948174: Average global foreground Dice: [0.8454]
2022-07-07 21:46:24.969342: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:46:25.744303: Suus1 maybe_update_lr lr: 0.007459
2022-07-07 21:46:25.766766: saving best epoch checkpoint...
2022-07-07 21:46:25.951910: saving checkpoint...
2022-07-07 21:46:27.792612: done, saving took 1.99 seconds
2022-07-07 21:46:27.808638: This epoch took 81.125762 s

2022-07-07 21:46:27.810664: 
epoch:  139
2022-07-07 21:47:38.549384: train loss : -0.8351
2022-07-07 21:47:43.366188: validation loss: -0.7867
2022-07-07 21:47:43.392914: Average global foreground Dice: [0.8397]
2022-07-07 21:47:43.395047: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:47:44.089780: Suus1 maybe_update_lr lr: 0.00744
2022-07-07 21:47:44.131058: saving best epoch checkpoint...
2022-07-07 21:47:44.235914: saving checkpoint...
2022-07-07 21:47:45.900522: done, saving took 1.72 seconds
2022-07-07 21:47:45.914626: This epoch took 78.101940 s

2022-07-07 21:47:45.916698: 
epoch:  140
2022-07-07 21:48:57.147964: train loss : -0.8400
2022-07-07 21:49:02.781235: validation loss: -0.7730
2022-07-07 21:49:02.820766: Average global foreground Dice: [0.8299]
2022-07-07 21:49:02.853875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:49:03.563681: Suus1 maybe_update_lr lr: 0.007422
2022-07-07 21:49:03.584927: This epoch took 77.666347 s

2022-07-07 21:49:03.618026: 
epoch:  141
2022-07-07 21:50:14.149839: train loss : -0.8398
2022-07-07 21:50:19.132318: validation loss: -0.7695
2022-07-07 21:50:19.162344: Average global foreground Dice: [0.8268]
2022-07-07 21:50:19.183871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:50:19.944077: Suus1 maybe_update_lr lr: 0.007403
2022-07-07 21:50:19.965063: This epoch took 76.314194 s

2022-07-07 21:50:19.987867: 
epoch:  142
2022-07-07 21:51:33.312674: train loss : -0.8284
2022-07-07 21:51:38.511512: validation loss: -0.7750
2022-07-07 21:51:38.521283: Average global foreground Dice: [0.831]
2022-07-07 21:51:38.554548: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:51:39.357491: Suus1 maybe_update_lr lr: 0.007385
2022-07-07 21:51:39.377949: This epoch took 79.369771 s

2022-07-07 21:51:39.392871: 
epoch:  143
2022-07-07 21:52:50.644249: train loss : -0.8336
2022-07-07 21:52:55.643469: validation loss: -0.7631
2022-07-07 21:52:55.646324: Average global foreground Dice: [0.8202]
2022-07-07 21:52:55.648362: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:52:56.475307: Suus1 maybe_update_lr lr: 0.007366
2022-07-07 21:52:56.496904: This epoch took 77.086803 s

2022-07-07 21:52:56.530008: 
epoch:  144
2022-07-07 21:54:07.141476: train loss : -0.8431
2022-07-07 21:54:12.428821: validation loss: -0.7701
2022-07-07 21:54:12.455132: Average global foreground Dice: [0.8248]
2022-07-07 21:54:12.458738: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:54:13.103551: Suus1 maybe_update_lr lr: 0.007347
2022-07-07 21:54:13.123924: This epoch took 76.570984 s

2022-07-07 21:54:13.143072: 
epoch:  145
2022-07-07 21:55:24.966230: train loss : -0.8357
2022-07-07 21:55:29.940285: validation loss: -0.7749
2022-07-07 21:55:29.972269: Average global foreground Dice: [0.8335]
2022-07-07 21:55:29.985036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:55:30.841458: Suus1 maybe_update_lr lr: 0.007329
2022-07-07 21:55:30.844195: This epoch took 77.676716 s

2022-07-07 21:55:30.862233: 
epoch:  146
2022-07-07 21:56:41.729261: train loss : -0.8422
2022-07-07 21:56:46.414671: validation loss: -0.7773
2022-07-07 21:56:46.427958: Average global foreground Dice: [0.8355]
2022-07-07 21:56:46.449839: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:56:47.212376: Suus1 maybe_update_lr lr: 0.00731
2022-07-07 21:56:47.242118: This epoch took 76.363607 s

2022-07-07 21:56:47.266493: 
epoch:  147
2022-07-07 21:57:59.674631: train loss : -0.8382
2022-07-07 21:58:05.649485: validation loss: -0.7788
2022-07-07 21:58:05.673289: Average global foreground Dice: [0.8299]
2022-07-07 21:58:05.696883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:58:06.478423: Suus1 maybe_update_lr lr: 0.007291
2022-07-07 21:58:06.525950: This epoch took 79.238357 s

2022-07-07 21:58:06.566975: 
epoch:  148
2022-07-07 21:59:17.983280: train loss : -0.8292
2022-07-07 21:59:23.068259: validation loss: -0.7674
2022-07-07 21:59:23.099272: Average global foreground Dice: [0.8256]
2022-07-07 21:59:23.119867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:59:23.943288: Suus1 maybe_update_lr lr: 0.007273
2022-07-07 21:59:23.962929: This epoch took 77.363063 s

2022-07-07 21:59:23.985135: 
epoch:  149
2022-07-07 22:00:34.864841: train loss : -0.8249
2022-07-07 22:00:40.307458: validation loss: -0.7716
2022-07-07 22:00:40.340278: Average global foreground Dice: [0.8345]
2022-07-07 22:00:40.356881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:00:41.262309: Suus1 maybe_update_lr lr: 0.007254
2022-07-07 22:00:41.283755: saving scheduled checkpoint file...
2022-07-07 22:00:41.392820: saving checkpoint...
2022-07-07 22:00:43.084957: done, saving took 1.78 seconds
2022-07-07 22:00:43.102150: done
2022-07-07 22:00:43.104535: This epoch took 79.096855 s

2022-07-07 22:00:43.106835: 
epoch:  150
2022-07-07 22:01:54.979059: train loss : -0.8274
2022-07-07 22:02:00.681155: validation loss: -0.7686
2022-07-07 22:02:00.722270: Average global foreground Dice: [0.826]
2022-07-07 22:02:00.743871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:02:01.404117: Suus1 maybe_update_lr lr: 0.007236
2022-07-07 22:02:01.423068: This epoch took 78.313896 s

2022-07-07 22:02:01.440882: 
epoch:  151
2022-07-07 22:03:11.976429: train loss : -0.8375
2022-07-07 22:03:17.091446: validation loss: -0.7689
2022-07-07 22:03:17.122308: Average global foreground Dice: [0.8249]
2022-07-07 22:03:17.154902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:03:17.682505: Suus1 maybe_update_lr lr: 0.007217
2022-07-07 22:03:17.722923: This epoch took 76.247823 s

2022-07-07 22:03:17.741222: 
epoch:  152
2022-07-07 22:04:29.825374: train loss : -0.8430
2022-07-07 22:04:35.104951: validation loss: -0.7547
2022-07-07 22:04:35.122622: Average global foreground Dice: [0.8171]
2022-07-07 22:04:35.161320: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:04:35.846524: Suus1 maybe_update_lr lr: 0.007198
2022-07-07 22:04:35.867052: This epoch took 78.083855 s

2022-07-07 22:04:35.871218: 
epoch:  153
2022-07-07 22:05:46.896958: train loss : -0.8408
2022-07-07 22:05:51.901105: validation loss: -0.7748
2022-07-07 22:05:51.924903: Average global foreground Dice: [0.8274]
2022-07-07 22:05:51.962696: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:05:52.610399: Suus1 maybe_update_lr lr: 0.00718
2022-07-07 22:05:52.621729: This epoch took 76.723785 s

2022-07-07 22:05:52.645869: 
epoch:  154
2022-07-07 22:07:03.898555: train loss : -0.8462
2022-07-07 22:07:08.574645: validation loss: -0.7730
2022-07-07 22:07:08.626751: Average global foreground Dice: [0.8271]
2022-07-07 22:07:08.647863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:07:09.449606: Suus1 maybe_update_lr lr: 0.007161
2022-07-07 22:07:09.470917: This epoch took 76.793763 s

2022-07-07 22:07:09.493871: 
epoch:  155
2022-07-07 22:08:21.264553: train loss : -0.8484
2022-07-07 22:08:26.117408: validation loss: -0.7589
2022-07-07 22:08:26.148428: Average global foreground Dice: [0.8094]
2022-07-07 22:08:26.170252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:08:26.947464: Suus1 maybe_update_lr lr: 0.007142
2022-07-07 22:08:26.960946: This epoch took 77.443089 s

2022-07-07 22:08:26.976175: 
epoch:  156
2022-07-07 22:09:39.955091: train loss : -0.8402
2022-07-07 22:09:45.220205: validation loss: -0.7768
2022-07-07 22:09:45.244171: Average global foreground Dice: [0.8342]
2022-07-07 22:09:45.266043: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:09:46.142469: Suus1 maybe_update_lr lr: 0.007123
2022-07-07 22:09:46.167940: This epoch took 79.172668 s

2022-07-07 22:09:46.193511: 
epoch:  157
2022-07-07 22:10:57.938360: train loss : -0.8433
2022-07-07 22:11:02.702944: validation loss: -0.7677
2022-07-07 22:11:02.741320: Average global foreground Dice: [0.8234]
2022-07-07 22:11:02.759181: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:11:03.384451: Suus1 maybe_update_lr lr: 0.007105
2022-07-07 22:11:03.408044: This epoch took 77.196458 s

2022-07-07 22:11:03.424611: 
epoch:  158
2022-07-07 22:12:16.063323: train loss : -0.8484
2022-07-07 22:12:21.599287: validation loss: -0.7542
2022-07-07 22:12:21.634283: Average global foreground Dice: [0.813]
2022-07-07 22:12:21.654192: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:12:22.210476: Suus1 maybe_update_lr lr: 0.007086
2022-07-07 22:12:22.220024: This epoch took 78.779173 s

2022-07-07 22:12:22.232260: 
epoch:  159
2022-07-07 22:13:32.330591: train loss : -0.8479
2022-07-07 22:13:37.502692: validation loss: -0.7852
2022-07-07 22:13:37.530500: Average global foreground Dice: [0.8397]
2022-07-07 22:13:37.549598: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:13:38.625639: Suus1 maybe_update_lr lr: 0.007067
2022-07-07 22:13:38.646950: This epoch took 76.401672 s

2022-07-07 22:13:38.668862: 
epoch:  160
2022-07-07 22:14:50.195185: train loss : -0.8460
2022-07-07 22:14:55.240776: validation loss: -0.7908
2022-07-07 22:14:55.273562: Average global foreground Dice: [0.8395]
2022-07-07 22:14:55.292984: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:14:56.004963: Suus1 maybe_update_lr lr: 0.007049
2022-07-07 22:14:56.044907: This epoch took 77.352048 s

2022-07-07 22:14:56.055607: 
epoch:  161
2022-07-07 22:16:07.464162: train loss : -0.8491
2022-07-07 22:16:12.561024: validation loss: -0.7807
2022-07-07 22:16:12.592370: Average global foreground Dice: [0.8327]
2022-07-07 22:16:12.607869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:16:13.403352: Suus1 maybe_update_lr lr: 0.00703
2022-07-07 22:16:13.446914: This epoch took 77.389148 s

2022-07-07 22:16:13.490870: 
epoch:  162
2022-07-07 22:17:25.581964: train loss : -0.8445
2022-07-07 22:17:30.685378: validation loss: -0.7828
2022-07-07 22:17:30.706399: Average global foreground Dice: [0.8348]
2022-07-07 22:17:30.708784: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:17:31.507590: Suus1 maybe_update_lr lr: 0.007011
2022-07-07 22:17:31.551870: This epoch took 78.028007 s

2022-07-07 22:17:31.559284: 
epoch:  163
2022-07-07 22:18:42.226085: train loss : -0.8447
2022-07-07 22:18:46.966358: validation loss: -0.7719
2022-07-07 22:18:46.978321: Average global foreground Dice: [0.8229]
2022-07-07 22:18:46.983415: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:18:47.608225: Suus1 maybe_update_lr lr: 0.006992
2022-07-07 22:18:47.621895: This epoch took 76.045965 s

2022-07-07 22:18:47.653033: 
epoch:  164
2022-07-07 22:19:58.643029: train loss : -0.8371
2022-07-07 22:20:03.629041: validation loss: -0.7581
2022-07-07 22:20:03.659301: Average global foreground Dice: [0.8189]
2022-07-07 22:20:03.678897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:20:04.410490: Suus1 maybe_update_lr lr: 0.006974
2022-07-07 22:20:04.432919: This epoch took 76.743554 s

2022-07-07 22:20:04.454856: 
epoch:  165
2022-07-07 22:21:14.846828: train loss : -0.8327
2022-07-07 22:21:20.110504: validation loss: -0.7627
2022-07-07 22:21:20.135332: Average global foreground Dice: [0.8222]
2022-07-07 22:21:20.156859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:21:20.999702: Suus1 maybe_update_lr lr: 0.006955
2022-07-07 22:21:21.022303: This epoch took 76.531437 s

2022-07-07 22:21:21.027741: 
epoch:  166
2022-07-07 22:22:33.441949: train loss : -0.8339
2022-07-07 22:22:37.926448: validation loss: -0.7802
2022-07-07 22:22:37.988303: Average global foreground Dice: [0.8371]
2022-07-07 22:22:38.001992: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:22:38.613091: Suus1 maybe_update_lr lr: 0.006936
2022-07-07 22:22:38.634000: This epoch took 77.604112 s

2022-07-07 22:22:38.651973: 
epoch:  167
2022-07-07 22:23:50.516044: train loss : -0.8381
2022-07-07 22:23:55.918529: validation loss: -0.7675
2022-07-07 22:23:55.945392: Average global foreground Dice: [0.8297]
2022-07-07 22:23:55.960152: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:23:56.807561: Suus1 maybe_update_lr lr: 0.006918
2022-07-07 22:23:56.826902: This epoch took 78.148908 s

2022-07-07 22:23:56.853860: 
epoch:  168
2022-07-07 22:25:09.245051: train loss : -0.8386
2022-07-07 22:25:14.431568: validation loss: -0.7706
2022-07-07 22:25:14.460236: Average global foreground Dice: [0.8257]
2022-07-07 22:25:14.488874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:25:15.322531: Suus1 maybe_update_lr lr: 0.006899
2022-07-07 22:25:15.343978: This epoch took 78.446009 s

2022-07-07 22:25:15.365861: 
epoch:  169
2022-07-07 22:26:26.896764: train loss : -0.8487
2022-07-07 22:26:31.575957: validation loss: -0.7617
2022-07-07 22:26:31.610697: Average global foreground Dice: [0.8184]
2022-07-07 22:26:31.630039: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:26:32.493408: Suus1 maybe_update_lr lr: 0.00688
2022-07-07 22:26:32.531804: This epoch took 77.152625 s

2022-07-07 22:26:32.540778: 
epoch:  170
2022-07-07 22:27:42.649907: train loss : -0.8515
2022-07-07 22:27:48.389430: validation loss: -0.7733
2022-07-07 22:27:48.420704: Average global foreground Dice: [0.8293]
2022-07-07 22:27:48.450872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:27:49.345725: Suus1 maybe_update_lr lr: 0.006861
2022-07-07 22:27:49.371836: This epoch took 76.796861 s

2022-07-07 22:27:49.386854: 
epoch:  171
2022-07-07 22:29:00.012862: train loss : -0.8478
2022-07-07 22:29:05.609392: validation loss: -0.7737
2022-07-07 22:29:05.639323: Average global foreground Dice: [0.8262]
2022-07-07 22:29:05.671952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:29:06.440392: Suus1 maybe_update_lr lr: 0.006842
2022-07-07 22:29:06.469252: This epoch took 77.079337 s

2022-07-07 22:29:06.489299: 
epoch:  172
2022-07-07 22:30:15.313801: train loss : -0.8530
2022-07-07 22:30:19.987786: validation loss: -0.7838
2022-07-07 22:30:20.000255: Average global foreground Dice: [0.8373]
2022-07-07 22:30:20.006665: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:30:20.871408: Suus1 maybe_update_lr lr: 0.006824
2022-07-07 22:30:20.896045: This epoch took 74.381031 s

2022-07-07 22:30:20.916965: 
epoch:  173
2022-07-07 22:31:30.853626: train loss : -0.8584
2022-07-07 22:31:35.881257: validation loss: -0.8019
2022-07-07 22:31:35.925255: Average global foreground Dice: [0.8555]
2022-07-07 22:31:35.957885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:31:36.614365: Suus1 maybe_update_lr lr: 0.006805
2022-07-07 22:31:36.633735: This epoch took 75.685857 s

2022-07-07 22:31:36.654002: 
epoch:  174
2022-07-07 22:32:47.748876: train loss : -0.8569
2022-07-07 22:32:52.529163: validation loss: -0.7750
2022-07-07 22:32:52.546874: Average global foreground Dice: [0.826]
2022-07-07 22:32:52.574885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:32:53.293434: Suus1 maybe_update_lr lr: 0.006786
2022-07-07 22:32:53.295973: This epoch took 76.622083 s

2022-07-07 22:32:53.297963: 
epoch:  175
2022-07-07 22:34:04.108820: train loss : -0.8554
2022-07-07 22:34:08.938256: validation loss: -0.7904
2022-07-07 22:34:08.969249: Average global foreground Dice: [0.843]
2022-07-07 22:34:08.990871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:34:09.739609: Suus1 maybe_update_lr lr: 0.006767
2022-07-07 22:34:09.764323: This epoch took 76.464373 s

2022-07-07 22:34:09.781935: 
epoch:  176
2022-07-07 22:35:22.049089: train loss : -0.8568
2022-07-07 22:35:26.989675: validation loss: -0.7662
2022-07-07 22:35:27.016302: Average global foreground Dice: [0.8254]
2022-07-07 22:35:27.039866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:35:27.701233: Suus1 maybe_update_lr lr: 0.006749
2022-07-07 22:35:27.728737: This epoch took 77.918733 s

2022-07-07 22:35:27.747404: 
epoch:  177
2022-07-07 22:36:40.096458: train loss : -0.8573
2022-07-07 22:36:44.702488: validation loss: -0.7494
2022-07-07 22:36:44.734268: Average global foreground Dice: [0.8116]
2022-07-07 22:36:44.751291: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:36:45.613332: Suus1 maybe_update_lr lr: 0.00673
2022-07-07 22:36:45.634902: This epoch took 77.866005 s

2022-07-07 22:36:45.656853: 
epoch:  178
2022-07-07 22:37:57.910167: train loss : -0.8578
2022-07-07 22:38:02.715800: validation loss: -0.7676
2022-07-07 22:38:02.751045: Average global foreground Dice: [0.8281]
2022-07-07 22:38:02.778269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:38:03.609529: Suus1 maybe_update_lr lr: 0.006711
2022-07-07 22:38:03.628923: This epoch took 77.950332 s

2022-07-07 22:38:03.650862: 
epoch:  179
2022-07-07 22:39:15.812403: train loss : -0.8524
2022-07-07 22:39:20.481405: validation loss: -0.7671
2022-07-07 22:39:20.522199: Average global foreground Dice: [0.8275]
2022-07-07 22:39:20.547691: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:39:21.241387: Suus1 maybe_update_lr lr: 0.006692
2022-07-07 22:39:21.257811: This epoch took 77.578928 s

2022-07-07 22:39:21.259875: 
epoch:  180
2022-07-07 22:40:32.503139: train loss : -0.8587
2022-07-07 22:40:37.742626: validation loss: -0.7755
2022-07-07 22:40:37.781421: Average global foreground Dice: [0.8349]
2022-07-07 22:40:37.798035: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:40:38.518280: Suus1 maybe_update_lr lr: 0.006673
2022-07-07 22:40:38.544924: This epoch took 77.282739 s

2022-07-07 22:40:38.555706: 
epoch:  181
2022-07-07 22:41:50.612164: train loss : -0.8494
2022-07-07 22:41:56.049292: validation loss: -0.7702
2022-07-07 22:41:56.070534: Average global foreground Dice: [0.8266]
2022-07-07 22:41:56.092867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:41:56.714824: Suus1 maybe_update_lr lr: 0.006654
2022-07-07 22:41:56.746902: This epoch took 78.188996 s

2022-07-07 22:41:56.781871: 
epoch:  182
2022-07-07 22:43:08.613974: train loss : -0.8508
2022-07-07 22:43:14.635998: validation loss: -0.7644
2022-07-07 22:43:14.662622: Average global foreground Dice: [0.8273]
2022-07-07 22:43:14.682347: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:43:15.498406: Suus1 maybe_update_lr lr: 0.006636
2022-07-07 22:43:15.528922: This epoch took 78.714041 s

2022-07-07 22:43:15.550865: 
epoch:  183
2022-07-07 22:44:25.552923: train loss : -0.8590
2022-07-07 22:44:30.681273: validation loss: -0.7735
2022-07-07 22:44:30.708437: Average global foreground Dice: [0.8268]
2022-07-07 22:44:30.729862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:44:31.445344: Suus1 maybe_update_lr lr: 0.006617
2022-07-07 22:44:31.489930: This epoch took 75.918680 s

2022-07-07 22:44:31.510179: 
epoch:  184
2022-07-07 22:45:43.900223: train loss : -0.8614
2022-07-07 22:45:49.081716: validation loss: -0.7843
2022-07-07 22:45:49.101190: Average global foreground Dice: [0.8397]
2022-07-07 22:45:49.131875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:45:49.826221: Suus1 maybe_update_lr lr: 0.006598
2022-07-07 22:45:49.858926: This epoch took 78.346322 s

2022-07-07 22:45:49.885150: 
epoch:  185
2022-07-07 22:47:02.217097: train loss : -0.8595
2022-07-07 22:47:07.444488: validation loss: -0.7924
2022-07-07 22:47:07.462343: Average global foreground Dice: [0.8437]
2022-07-07 22:47:07.483881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:47:08.093607: Suus1 maybe_update_lr lr: 0.006579
2022-07-07 22:47:08.115977: This epoch took 78.209117 s

2022-07-07 22:47:08.142874: 
epoch:  186
2022-07-07 22:48:19.350521: train loss : -0.8576
2022-07-07 22:48:24.433804: validation loss: -0.7857
2022-07-07 22:48:24.450382: Average global foreground Dice: [0.8377]
2022-07-07 22:48:24.471871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:48:25.132119: Suus1 maybe_update_lr lr: 0.00656
2022-07-07 22:48:25.165900: saving best epoch checkpoint...
2022-07-07 22:48:25.306914: saving checkpoint...
2022-07-07 22:48:27.003829: done, saving took 1.81 seconds
2022-07-07 22:48:27.021856: This epoch took 78.856992 s

2022-07-07 22:48:27.023970: 
epoch:  187
2022-07-07 22:49:37.211269: train loss : -0.8631
2022-07-07 22:49:42.391518: validation loss: -0.7667
2022-07-07 22:49:42.406518: Average global foreground Dice: [0.8266]
2022-07-07 22:49:42.411816: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:49:43.140203: Suus1 maybe_update_lr lr: 0.006541
2022-07-07 22:49:43.160910: This epoch took 76.134712 s

2022-07-07 22:49:43.182855: 
epoch:  188
2022-07-07 22:50:53.334414: train loss : -0.8558
2022-07-07 22:50:58.577134: validation loss: -0.7611
2022-07-07 22:50:58.607571: Average global foreground Dice: [0.8213]
2022-07-07 22:50:58.630036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:50:59.340275: Suus1 maybe_update_lr lr: 0.006522
2022-07-07 22:50:59.366941: This epoch took 76.161061 s

2022-07-07 22:50:59.385849: 
epoch:  189
2022-07-07 22:52:10.459573: train loss : -0.8461
2022-07-07 22:52:15.268642: validation loss: -0.7648
2022-07-07 22:52:15.279980: Average global foreground Dice: [0.8233]
2022-07-07 22:52:15.311224: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:52:15.961352: Suus1 maybe_update_lr lr: 0.006504
2022-07-07 22:52:15.987393: This epoch took 76.579533 s

2022-07-07 22:52:15.989754: 
epoch:  190
2022-07-07 22:53:27.684694: train loss : -0.8530
2022-07-07 22:53:32.902505: validation loss: -0.7729
2022-07-07 22:53:32.944285: Average global foreground Dice: [0.8275]
2022-07-07 22:53:32.948506: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:53:33.529474: Suus1 maybe_update_lr lr: 0.006485
2022-07-07 22:53:33.550947: This epoch took 77.559119 s

2022-07-07 22:53:33.572865: 
epoch:  191
2022-07-07 22:54:45.087693: train loss : -0.8589
2022-07-07 22:54:50.578566: validation loss: -0.7685
2022-07-07 22:54:50.607377: Average global foreground Dice: [0.8312]
2022-07-07 22:54:50.630083: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:54:51.408379: Suus1 maybe_update_lr lr: 0.006466
2022-07-07 22:54:51.430927: This epoch took 77.837786 s

2022-07-07 22:54:51.454865: 
epoch:  192
2022-07-07 22:56:03.575024: train loss : -0.8565
2022-07-07 22:56:09.149356: validation loss: -0.7793
2022-07-07 22:56:09.175546: Average global foreground Dice: [0.8362]
2022-07-07 22:56:09.204865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:56:10.033296: Suus1 maybe_update_lr lr: 0.006447
2022-07-07 22:56:10.052916: This epoch took 78.566613 s

2022-07-07 22:56:10.073930: 
epoch:  193
2022-07-07 22:57:21.851934: train loss : -0.8548
2022-07-07 22:57:27.151759: validation loss: -0.7670
2022-07-07 22:57:27.182214: Average global foreground Dice: [0.8257]
2022-07-07 22:57:27.202513: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:57:27.997218: Suus1 maybe_update_lr lr: 0.006428
2022-07-07 22:57:28.019856: This epoch took 77.926794 s

2022-07-07 22:57:28.037580: 
epoch:  194
2022-07-07 22:58:39.701337: train loss : -0.8584
2022-07-07 22:58:44.456766: validation loss: -0.7834
2022-07-07 22:58:44.490244: Average global foreground Dice: [0.8371]
2022-07-07 22:58:44.514870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:58:45.157223: Suus1 maybe_update_lr lr: 0.006409
2022-07-07 22:58:45.178896: This epoch took 77.121191 s

2022-07-07 22:58:45.200871: 
epoch:  195
2022-07-07 22:59:59.345071: train loss : -0.8580
2022-07-07 23:00:04.718804: validation loss: -0.7886
2022-07-07 23:00:04.740295: Average global foreground Dice: [0.845]
2022-07-07 23:00:04.784415: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:00:05.401887: Suus1 maybe_update_lr lr: 0.00639
2022-07-07 23:00:05.422881: saving best epoch checkpoint...
2022-07-07 23:00:05.530962: saving checkpoint...
2022-07-07 23:00:07.195657: done, saving took 1.75 seconds
2022-07-07 23:00:07.212505: This epoch took 81.988631 s

2022-07-07 23:00:07.214776: 
epoch:  196
2022-07-07 23:01:19.301315: train loss : -0.8611
2022-07-07 23:01:24.883703: validation loss: -0.7729
2022-07-07 23:01:24.919391: Average global foreground Dice: [0.8286]
2022-07-07 23:01:24.941020: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:01:25.725312: Suus1 maybe_update_lr lr: 0.006371
2022-07-07 23:01:25.746704: This epoch took 78.529858 s

2022-07-07 23:01:25.758420: 
epoch:  197
2022-07-07 23:02:37.265000: train loss : -0.8613
2022-07-07 23:02:41.989822: validation loss: -0.7726
2022-07-07 23:02:42.013241: Average global foreground Dice: [0.8296]
2022-07-07 23:02:42.032886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:02:42.645394: Suus1 maybe_update_lr lr: 0.006352
2022-07-07 23:02:42.668094: This epoch took 76.907607 s

2022-07-07 23:02:42.695124: 
epoch:  198
2022-07-07 23:03:54.074251: train loss : -0.8628
2022-07-07 23:03:59.467333: validation loss: -0.7812
2022-07-07 23:03:59.498273: Average global foreground Dice: [0.8381]
2022-07-07 23:03:59.533230: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:04:00.154465: Suus1 maybe_update_lr lr: 0.006333
2022-07-07 23:04:00.180976: saving best epoch checkpoint...
2022-07-07 23:04:00.361467: saving checkpoint...
2022-07-07 23:04:02.085898: done, saving took 1.88 seconds
2022-07-07 23:04:02.102669: This epoch took 79.384802 s

2022-07-07 23:04:02.104815: 
epoch:  199
2022-07-07 23:05:14.147668: train loss : -0.8596
2022-07-07 23:05:18.975942: validation loss: -0.7639
2022-07-07 23:05:19.004276: Average global foreground Dice: [0.8236]
2022-07-07 23:05:19.018571: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:05:19.797176: Suus1 maybe_update_lr lr: 0.006314
2022-07-07 23:05:19.839880: saving scheduled checkpoint file...
2022-07-07 23:05:19.924625: saving checkpoint...
2022-07-07 23:05:21.508791: done, saving took 1.65 seconds
2022-07-07 23:05:21.526486: done
2022-07-07 23:05:21.528918: This epoch took 79.422042 s

2022-07-07 23:05:21.531103: 
epoch:  200
2022-07-07 23:06:32.656739: train loss : -0.8631
2022-07-07 23:06:37.433478: validation loss: -0.7625
2022-07-07 23:06:37.452471: Average global foreground Dice: [0.8227]
2022-07-07 23:06:37.468502: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:06:38.224751: Suus1 maybe_update_lr lr: 0.006296
2022-07-07 23:06:38.244321: This epoch took 76.711039 s

2022-07-07 23:06:38.267926: 
epoch:  201
2022-07-07 23:07:49.585571: train loss : -0.8661
2022-07-07 23:07:54.741837: validation loss: -0.7768
2022-07-07 23:07:54.778196: Average global foreground Dice: [0.8317]
2022-07-07 23:07:54.797782: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:07:55.435523: Suus1 maybe_update_lr lr: 0.006277
2022-07-07 23:07:55.454912: This epoch took 77.167045 s

2022-07-07 23:07:55.473123: 
epoch:  202
2022-07-07 23:09:05.829547: train loss : -0.8664
2022-07-07 23:09:11.306356: validation loss: -0.7943
2022-07-07 23:09:11.351283: Average global foreground Dice: [0.8422]
2022-07-07 23:09:11.370564: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:09:12.139355: Suus1 maybe_update_lr lr: 0.006258
2022-07-07 23:09:12.169979: This epoch took 76.678123 s

2022-07-07 23:09:12.190092: 
epoch:  203
2022-07-07 23:10:23.768785: train loss : -0.8681
2022-07-07 23:10:28.562736: validation loss: -0.7889
2022-07-07 23:10:28.609200: Average global foreground Dice: [0.8432]
2022-07-07 23:10:28.621765: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:10:29.275664: Suus1 maybe_update_lr lr: 0.006239
2022-07-07 23:10:29.280221: saving best epoch checkpoint...
2022-07-07 23:10:29.386282: saving checkpoint...
2022-07-07 23:10:31.147498: done, saving took 1.87 seconds
2022-07-07 23:10:31.163810: This epoch took 78.953652 s

2022-07-07 23:10:31.165927: 
epoch:  204
2022-07-07 23:11:40.812685: train loss : -0.8698
2022-07-07 23:11:46.103721: validation loss: -0.7670
2022-07-07 23:11:46.156271: Average global foreground Dice: [0.8255]
2022-07-07 23:11:46.177880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:11:46.870513: Suus1 maybe_update_lr lr: 0.00622
2022-07-07 23:11:46.899936: This epoch took 75.731932 s

2022-07-07 23:11:46.932888: 
epoch:  205
2022-07-07 23:12:58.831814: train loss : -0.8670
2022-07-07 23:13:03.731501: validation loss: -0.7819
2022-07-07 23:13:03.734958: Average global foreground Dice: [0.8327]
2022-07-07 23:13:03.753889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:13:04.392075: Suus1 maybe_update_lr lr: 0.006201
2022-07-07 23:13:04.409917: This epoch took 77.444056 s

2022-07-07 23:13:04.433849: 
epoch:  206
2022-07-07 23:14:17.168175: train loss : -0.8681
2022-07-07 23:14:22.214975: validation loss: -0.7820
2022-07-07 23:14:22.242449: Average global foreground Dice: [0.8386]
2022-07-07 23:14:22.264004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:14:22.784534: Suus1 maybe_update_lr lr: 0.006182
2022-07-07 23:14:22.811973: This epoch took 78.370371 s

2022-07-07 23:14:22.835052: 
epoch:  207
2022-07-07 23:15:34.709043: train loss : -0.8677
2022-07-07 23:15:39.950941: validation loss: -0.8035
2022-07-07 23:15:39.974894: Average global foreground Dice: [0.8514]
2022-07-07 23:15:40.004882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:15:40.586456: Suus1 maybe_update_lr lr: 0.006163
2022-07-07 23:15:40.605906: saving best epoch checkpoint...
2022-07-07 23:15:40.698981: saving checkpoint...
2022-07-07 23:15:42.542679: done, saving took 1.91 seconds
2022-07-07 23:15:42.557738: This epoch took 79.709922 s

2022-07-07 23:15:42.559903: 
epoch:  208
2022-07-07 23:16:53.996852: train loss : -0.8714
2022-07-07 23:16:59.785311: validation loss: -0.7872
2022-07-07 23:16:59.817361: Average global foreground Dice: [0.839]
2022-07-07 23:16:59.832251: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:17:00.466579: Suus1 maybe_update_lr lr: 0.006144
2022-07-07 23:17:00.487897: saving best epoch checkpoint...
2022-07-07 23:17:00.611869: saving checkpoint...
2022-07-07 23:17:02.185466: done, saving took 1.66 seconds
2022-07-07 23:17:02.202405: This epoch took 79.640334 s

2022-07-07 23:17:02.204554: 
epoch:  209
2022-07-07 23:18:12.786263: train loss : -0.8696
2022-07-07 23:18:17.929474: validation loss: -0.7815
2022-07-07 23:18:17.942952: Average global foreground Dice: [0.8341]
2022-07-07 23:18:17.967614: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:18:18.777241: Suus1 maybe_update_lr lr: 0.006125
2022-07-07 23:18:18.796907: This epoch took 76.588126 s

2022-07-07 23:18:18.805174: 
epoch:  210
2022-07-07 23:19:29.101695: train loss : -0.8686
2022-07-07 23:19:33.826361: validation loss: -0.7548
2022-07-07 23:19:33.862245: Average global foreground Dice: [0.8154]
2022-07-07 23:19:33.874889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:19:34.550218: Suus1 maybe_update_lr lr: 0.006106
2022-07-07 23:19:34.580900: This epoch took 75.773550 s

2022-07-07 23:19:34.604858: 
epoch:  211
2022-07-07 23:20:45.558152: train loss : -0.8702
2022-07-07 23:20:50.513786: validation loss: -0.7810
2022-07-07 23:20:50.543290: Average global foreground Dice: [0.8355]
2022-07-07 23:20:50.560857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:20:51.287265: Suus1 maybe_update_lr lr: 0.006087
2022-07-07 23:20:51.298505: This epoch took 76.660658 s

2022-07-07 23:20:51.318697: 
epoch:  212
2022-07-07 23:22:02.844810: train loss : -0.8703
2022-07-07 23:22:08.734748: validation loss: -0.7444
2022-07-07 23:22:08.753444: Average global foreground Dice: [0.8094]
2022-07-07 23:22:08.761605: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:22:09.551827: Suus1 maybe_update_lr lr: 0.006068
2022-07-07 23:22:09.554354: This epoch took 78.233660 s

2022-07-07 23:22:09.556410: 
epoch:  213
2022-07-07 23:23:20.025642: train loss : -0.8701
2022-07-07 23:23:25.481725: validation loss: -0.7954
2022-07-07 23:23:25.504280: Average global foreground Dice: [0.8472]
2022-07-07 23:23:25.522937: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:23:26.011457: Suus1 maybe_update_lr lr: 0.006049
2022-07-07 23:23:26.031933: This epoch took 76.473355 s

2022-07-07 23:23:26.049487: 
epoch:  214
2022-07-07 23:24:38.153234: train loss : -0.8662
2022-07-07 23:24:43.193518: validation loss: -0.7643
2022-07-07 23:24:43.235831: Average global foreground Dice: [0.8192]
2022-07-07 23:24:43.271883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:24:44.085027: Suus1 maybe_update_lr lr: 0.00603
2022-07-07 23:24:44.105926: This epoch took 78.028034 s

2022-07-07 23:24:44.127862: 
epoch:  215
2022-07-07 23:25:55.696626: train loss : -0.8510
2022-07-07 23:26:00.624834: validation loss: -0.7587
2022-07-07 23:26:00.656296: Average global foreground Dice: [0.8225]
2022-07-07 23:26:00.671889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:26:01.323020: Suus1 maybe_update_lr lr: 0.006011
2022-07-07 23:26:01.342919: This epoch took 77.193043 s

2022-07-07 23:26:01.359871: 
epoch:  216
2022-07-07 23:27:12.470788: train loss : -0.8557
2022-07-07 23:27:17.592023: validation loss: -0.7938
2022-07-07 23:27:17.611222: Average global foreground Dice: [0.8464]
2022-07-07 23:27:17.631860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:27:18.262815: Suus1 maybe_update_lr lr: 0.005991
2022-07-07 23:27:18.283148: This epoch took 76.895268 s

2022-07-07 23:27:18.303159: 
epoch:  217
2022-07-07 23:28:28.739760: train loss : -0.8589
2022-07-07 23:28:33.704900: validation loss: -0.7691
2022-07-07 23:28:33.731478: Average global foreground Dice: [0.8301]
2022-07-07 23:28:33.753348: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:28:34.284915: Suus1 maybe_update_lr lr: 0.005972
2022-07-07 23:28:34.316042: This epoch took 75.995150 s

2022-07-07 23:28:34.336523: 
epoch:  218
2022-07-07 23:29:45.203177: train loss : -0.8633
2022-07-07 23:29:50.079899: validation loss: -0.7753
2022-07-07 23:29:50.117350: Average global foreground Dice: [0.8294]
2022-07-07 23:29:50.138885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:29:50.701228: Suus1 maybe_update_lr lr: 0.005953
2022-07-07 23:29:50.732196: This epoch took 76.367321 s

2022-07-07 23:29:50.753862: 
epoch:  219
2022-07-07 23:31:03.528430: train loss : -0.8645
2022-07-07 23:31:08.755531: validation loss: -0.7688
2022-07-07 23:31:08.786359: Average global foreground Dice: [0.8273]
2022-07-07 23:31:08.816923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:31:09.506500: Suus1 maybe_update_lr lr: 0.005934
2022-07-07 23:31:09.516208: This epoch took 78.741936 s

2022-07-07 23:31:09.534100: 
epoch:  220
2022-07-07 23:32:19.915947: train loss : -0.8709
2022-07-07 23:32:25.042603: validation loss: -0.7993
2022-07-07 23:32:25.055298: Average global foreground Dice: [0.8499]
2022-07-07 23:32:25.062064: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:32:25.627997: Suus1 maybe_update_lr lr: 0.005915
2022-07-07 23:32:25.647923: This epoch took 76.103998 s

2022-07-07 23:32:25.669864: 
epoch:  221
2022-07-07 23:33:36.593671: train loss : -0.8722
2022-07-07 23:33:41.452732: validation loss: -0.7692
2022-07-07 23:33:41.484626: Average global foreground Dice: [0.8255]
2022-07-07 23:33:41.504467: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:33:42.202172: Suus1 maybe_update_lr lr: 0.005896
2022-07-07 23:33:42.220010: This epoch took 76.529930 s

2022-07-07 23:33:42.240401: 
epoch:  222
2022-07-07 23:34:53.477233: train loss : -0.8681
2022-07-07 23:34:58.646062: validation loss: -0.7786
2022-07-07 23:34:58.671274: Average global foreground Dice: [0.833]
2022-07-07 23:34:58.695878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:34:59.327534: Suus1 maybe_update_lr lr: 0.005877
2022-07-07 23:34:59.358912: This epoch took 77.105456 s

2022-07-07 23:34:59.383374: 
epoch:  223
2022-07-07 23:36:14.179129: train loss : -0.8720
2022-07-07 23:36:19.510482: validation loss: -0.7852
2022-07-07 23:36:19.513741: Average global foreground Dice: [0.8427]
2022-07-07 23:36:19.517924: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:36:20.038719: Suus1 maybe_update_lr lr: 0.005858
2022-07-07 23:36:20.058907: This epoch took 80.663090 s

2022-07-07 23:36:20.079632: 
epoch:  224
2022-07-07 23:37:31.944021: train loss : -0.8716
2022-07-07 23:37:37.347306: validation loss: -0.7470
2022-07-07 23:37:37.365278: Average global foreground Dice: [0.8074]
2022-07-07 23:37:37.380627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:37:38.058964: Suus1 maybe_update_lr lr: 0.005839
2022-07-07 23:37:38.100925: This epoch took 78.003458 s

2022-07-07 23:37:38.137856: 
epoch:  225
2022-07-07 23:38:48.692705: train loss : -0.8749
2022-07-07 23:38:53.700678: validation loss: -0.7665
2022-07-07 23:38:53.714623: Average global foreground Dice: [0.8262]
2022-07-07 23:38:53.721297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:38:54.472987: Suus1 maybe_update_lr lr: 0.00582
2022-07-07 23:38:54.503954: This epoch took 76.333088 s

2022-07-07 23:38:54.535881: 
epoch:  226
2022-07-07 23:40:06.622315: train loss : -0.8764
2022-07-07 23:40:12.211911: validation loss: -0.7530
2022-07-07 23:40:12.256934: Average global foreground Dice: [0.8202]
2022-07-07 23:40:12.271852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:40:12.950286: Suus1 maybe_update_lr lr: 0.005801
2022-07-07 23:40:12.990911: This epoch took 78.422044 s

2022-07-07 23:40:13.003732: 
epoch:  227
2022-07-07 23:41:25.561889: train loss : -0.8780
2022-07-07 23:41:30.773675: validation loss: -0.7669
2022-07-07 23:41:30.787001: Average global foreground Dice: [0.8236]
2022-07-07 23:41:30.799870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:41:31.446638: Suus1 maybe_update_lr lr: 0.005781
2022-07-07 23:41:31.480010: This epoch took 78.462501 s

2022-07-07 23:41:31.502864: 
epoch:  228
2022-07-07 23:42:42.930093: train loss : -0.8756
2022-07-07 23:42:47.747646: validation loss: -0.7841
2022-07-07 23:42:47.781271: Average global foreground Dice: [0.8392]
2022-07-07 23:42:47.804707: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:42:48.461398: Suus1 maybe_update_lr lr: 0.005762
2022-07-07 23:42:48.482896: This epoch took 76.963965 s

2022-07-07 23:42:48.510449: 
epoch:  229
2022-07-07 23:43:59.590833: train loss : -0.8762
2022-07-07 23:44:04.519135: validation loss: -0.7821
2022-07-07 23:44:04.550594: Average global foreground Dice: [0.8394]
2022-07-07 23:44:04.566873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:44:05.216634: Suus1 maybe_update_lr lr: 0.005743
2022-07-07 23:44:05.236966: This epoch took 76.711087 s

2022-07-07 23:44:05.264201: 
epoch:  230
2022-07-07 23:45:16.201230: train loss : -0.8750
2022-07-07 23:45:20.801311: validation loss: -0.7824
2022-07-07 23:45:20.838942: Average global foreground Dice: [0.833]
2022-07-07 23:45:20.872862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:45:21.522080: Suus1 maybe_update_lr lr: 0.005724
2022-07-07 23:45:21.541028: This epoch took 76.255151 s

2022-07-07 23:45:21.565115: 
epoch:  231
2022-07-07 23:46:31.586014: train loss : -0.8725
2022-07-07 23:46:36.997863: validation loss: -0.7635
2022-07-07 23:46:37.027344: Average global foreground Dice: [0.8232]
2022-07-07 23:46:37.051250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:46:37.711452: Suus1 maybe_update_lr lr: 0.005705
2022-07-07 23:46:37.730912: This epoch took 76.133043 s

2022-07-07 23:46:37.749242: 
epoch:  232
2022-07-07 23:47:49.163301: train loss : -0.8748
2022-07-07 23:47:54.055964: validation loss: -0.7778
2022-07-07 23:47:54.073444: Average global foreground Dice: [0.8376]
2022-07-07 23:47:54.122080: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:47:54.770749: Suus1 maybe_update_lr lr: 0.005686
2022-07-07 23:47:54.787415: This epoch took 77.032920 s

2022-07-07 23:47:54.807847: 
epoch:  233
2022-07-07 23:49:06.053138: train loss : -0.8774
2022-07-07 23:49:10.986527: validation loss: -0.7761
2022-07-07 23:49:11.012378: Average global foreground Dice: [0.8319]
2022-07-07 23:49:11.040753: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:49:11.692975: Suus1 maybe_update_lr lr: 0.005667
2022-07-07 23:49:11.720436: This epoch took 76.877850 s

2022-07-07 23:49:11.740570: 
epoch:  234
2022-07-07 23:50:24.043118: train loss : -0.8749
2022-07-07 23:50:29.063325: validation loss: -0.7826
2022-07-07 23:50:29.088318: Average global foreground Dice: [0.8381]
2022-07-07 23:50:29.106870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:50:29.758035: Suus1 maybe_update_lr lr: 0.005647
2022-07-07 23:50:29.788907: This epoch took 78.033044 s

2022-07-07 23:50:29.810853: 
epoch:  235
2022-07-07 23:51:42.640044: train loss : -0.8737
2022-07-07 23:51:48.330047: validation loss: -0.7939
2022-07-07 23:51:48.357402: Average global foreground Dice: [0.8435]
2022-07-07 23:51:48.378875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:51:49.086945: Suus1 maybe_update_lr lr: 0.005628
2022-07-07 23:51:49.095863: This epoch took 79.260000 s

2022-07-07 23:51:49.104052: 
epoch:  236
2022-07-07 23:52:59.430625: train loss : -0.8637
2022-07-07 23:53:04.311724: validation loss: -0.7768
2022-07-07 23:53:04.345243: Average global foreground Dice: [0.8345]
2022-07-07 23:53:04.352785: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:53:04.995247: Suus1 maybe_update_lr lr: 0.005609
2022-07-07 23:53:05.004947: This epoch took 75.868042 s

2022-07-07 23:53:05.021927: 
epoch:  237
2022-07-07 23:54:16.279488: train loss : -0.8693
2022-07-07 23:54:21.127362: validation loss: -0.7719
2022-07-07 23:54:21.158395: Average global foreground Dice: [0.8265]
2022-07-07 23:54:21.170880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:54:21.834518: Suus1 maybe_update_lr lr: 0.00559
2022-07-07 23:54:21.856920: This epoch took 76.795951 s

2022-07-07 23:54:21.879984: 
epoch:  238
2022-07-07 23:55:33.183114: train loss : -0.8725
2022-07-07 23:55:38.225420: validation loss: -0.7688
2022-07-07 23:55:38.269304: Average global foreground Dice: [0.8236]
2022-07-07 23:55:38.300228: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:55:39.103985: Suus1 maybe_update_lr lr: 0.005571
2022-07-07 23:55:39.123905: This epoch took 77.230049 s

2022-07-07 23:55:39.137799: 
epoch:  239
2022-07-07 23:56:50.328019: train loss : -0.8751
2022-07-07 23:56:55.603484: validation loss: -0.7883
2022-07-07 23:56:55.649835: Average global foreground Dice: [0.8466]
2022-07-07 23:56:55.685706: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:56:56.434249: Suus1 maybe_update_lr lr: 0.005551
2022-07-07 23:56:56.464953: This epoch took 77.310797 s

2022-07-07 23:56:56.498945: 
epoch:  240
2022-07-07 23:58:07.229873: train loss : -0.8772
2022-07-07 23:58:12.117575: validation loss: -0.7827
2022-07-07 23:58:12.140567: Average global foreground Dice: [0.8355]
2022-07-07 23:58:12.167891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:58:13.051769: Suus1 maybe_update_lr lr: 0.005532
2022-07-07 23:58:13.054305: This epoch took 76.542212 s

2022-07-07 23:58:13.056431: 
epoch:  241
2022-07-07 23:59:22.621780: train loss : -0.8817
2022-07-07 23:59:27.542147: validation loss: -0.7732
2022-07-07 23:59:27.572661: Average global foreground Dice: [0.8317]
2022-07-07 23:59:27.584987: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:59:28.127558: Suus1 maybe_update_lr lr: 0.005513
2022-07-07 23:59:28.146918: This epoch took 75.088411 s

2022-07-07 23:59:28.180033: 
epoch:  242
2022-07-08 00:00:40.130027: train loss : -0.8807
2022-07-08 00:00:44.955455: validation loss: -0.7884
2022-07-08 00:00:44.982373: Average global foreground Dice: [0.8412]
2022-07-08 00:00:45.014858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:00:45.693733: Suus1 maybe_update_lr lr: 0.005494
2022-07-08 00:00:45.714900: This epoch took 77.513036 s

2022-07-08 00:00:45.727682: 
epoch:  243
2022-07-08 00:01:57.457155: train loss : -0.8819
2022-07-08 00:02:02.506248: validation loss: -0.7779
2022-07-08 00:02:02.558286: Average global foreground Dice: [0.8414]
2022-07-08 00:02:02.584764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:02:03.367308: Suus1 maybe_update_lr lr: 0.005474
2022-07-08 00:02:03.397470: This epoch took 77.667300 s

2022-07-08 00:02:03.409849: 
epoch:  244
2022-07-08 00:03:13.344978: train loss : -0.8810
2022-07-08 00:03:17.846430: validation loss: -0.7702
2022-07-08 00:03:17.875174: Average global foreground Dice: [0.826]
2022-07-08 00:03:17.908877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:03:18.628717: Suus1 maybe_update_lr lr: 0.005455
2022-07-08 00:03:18.670932: This epoch took 75.229926 s

2022-07-08 00:03:18.703865: 
epoch:  245
2022-07-08 00:04:29.379230: train loss : -0.8811
2022-07-08 00:04:35.399379: validation loss: -0.7769
2022-07-08 00:04:35.434474: Average global foreground Dice: [0.8368]
2022-07-08 00:04:35.466866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:04:36.075907: Suus1 maybe_update_lr lr: 0.005436
2022-07-08 00:04:36.093905: This epoch took 77.357012 s

2022-07-08 00:04:36.116860: 
epoch:  246
2022-07-08 00:05:48.101161: train loss : -0.8761
2022-07-08 00:05:53.011469: validation loss: -0.7843
2022-07-08 00:05:53.034143: Average global foreground Dice: [0.8389]
2022-07-08 00:05:53.058736: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:05:53.946575: Suus1 maybe_update_lr lr: 0.005417
2022-07-08 00:05:53.965916: This epoch took 77.823918 s

2022-07-08 00:05:53.984460: 
epoch:  247
2022-07-08 00:07:04.975071: train loss : -0.8827
2022-07-08 00:07:09.703358: validation loss: -0.7774
2022-07-08 00:07:09.724266: Average global foreground Dice: [0.8366]
2022-07-08 00:07:09.726434: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:07:10.248930: Suus1 maybe_update_lr lr: 0.005397
2022-07-08 00:07:10.260741: This epoch took 76.259856 s

2022-07-08 00:07:10.267751: 
epoch:  248
2022-07-08 00:08:23.237188: train loss : -0.8826
2022-07-08 00:08:28.818577: validation loss: -0.7808
2022-07-08 00:08:28.845246: Average global foreground Dice: [0.8357]
2022-07-08 00:08:28.864863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:08:29.401319: Suus1 maybe_update_lr lr: 0.005378
2022-07-08 00:08:29.421366: This epoch took 79.143999 s

2022-07-08 00:08:29.441599: 
epoch:  249
2022-07-08 00:09:40.962318: train loss : -0.8754
2022-07-08 00:09:46.015598: validation loss: -0.7673
2022-07-08 00:09:46.043293: Average global foreground Dice: [0.826]
2022-07-08 00:09:46.060620: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:09:46.695220: Suus1 maybe_update_lr lr: 0.005359
2022-07-08 00:09:46.725871: saving scheduled checkpoint file...
2022-07-08 00:09:46.878245: saving checkpoint...
2022-07-08 00:09:48.793120: done, saving took 2.03 seconds
2022-07-08 00:09:48.809620: done
2022-07-08 00:09:48.811867: This epoch took 79.358180 s

2022-07-08 00:09:48.814173: 
epoch:  250
2022-07-08 00:10:59.543021: train loss : -0.8734
2022-07-08 00:11:04.326709: validation loss: -0.7659
2022-07-08 00:11:04.366270: Average global foreground Dice: [0.8298]
2022-07-08 00:11:04.393117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:11:05.041001: Suus1 maybe_update_lr lr: 0.00534
2022-07-08 00:11:05.061341: This epoch took 76.245083 s

2022-07-08 00:11:05.071043: 
epoch:  251
2022-07-08 00:12:16.579315: train loss : -0.8791
2022-07-08 00:12:21.616682: validation loss: -0.7762
2022-07-08 00:12:21.634227: Average global foreground Dice: [0.8292]
2022-07-08 00:12:21.656025: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:12:22.272404: Suus1 maybe_update_lr lr: 0.00532
2022-07-08 00:12:22.302914: This epoch took 77.229583 s

2022-07-08 00:12:22.324863: 
epoch:  252
2022-07-08 00:13:33.991833: train loss : -0.8774
2022-07-08 00:13:38.852664: validation loss: -0.7825
2022-07-08 00:13:38.868675: Average global foreground Dice: [0.8402]
2022-07-08 00:13:38.889389: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:13:39.446861: Suus1 maybe_update_lr lr: 0.005301
2022-07-08 00:13:39.478258: This epoch took 77.120378 s

2022-07-08 00:13:39.498548: 
epoch:  253
2022-07-08 00:14:50.643431: train loss : -0.8809
2022-07-08 00:14:56.080059: validation loss: -0.7807
2022-07-08 00:14:56.104253: Average global foreground Dice: [0.8351]
2022-07-08 00:14:56.123076: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:14:56.630732: Suus1 maybe_update_lr lr: 0.005282
2022-07-08 00:14:56.664905: This epoch took 77.149033 s

2022-07-08 00:14:56.677862: 
epoch:  254
2022-07-08 00:16:08.056965: train loss : -0.8797
2022-07-08 00:16:13.332920: validation loss: -0.7378
2022-07-08 00:16:13.359267: Average global foreground Dice: [0.8102]
2022-07-08 00:16:13.398877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:16:14.033387: Suus1 maybe_update_lr lr: 0.005262
2022-07-08 00:16:14.091685: This epoch took 77.390864 s

2022-07-08 00:16:14.123864: 
epoch:  255
2022-07-08 00:17:26.706256: train loss : -0.8782
2022-07-08 00:17:31.383525: validation loss: -0.7594
2022-07-08 00:17:31.424445: Average global foreground Dice: [0.8217]
2022-07-08 00:17:31.447866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:17:32.031290: Suus1 maybe_update_lr lr: 0.005243
2022-07-08 00:17:32.050811: This epoch took 77.904914 s

2022-07-08 00:17:32.078864: 
epoch:  256
2022-07-08 00:18:44.720324: train loss : -0.8757
2022-07-08 00:18:49.862756: validation loss: -0.7735
2022-07-08 00:18:49.889113: Average global foreground Dice: [0.828]
2022-07-08 00:18:49.901195: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:18:50.547649: Suus1 maybe_update_lr lr: 0.005224
2022-07-08 00:18:50.588784: This epoch took 78.484859 s

2022-07-08 00:18:50.600722: 
epoch:  257
2022-07-08 00:20:02.317718: train loss : -0.8800
2022-07-08 00:20:07.477428: validation loss: -0.7525
2022-07-08 00:20:07.504790: Average global foreground Dice: [0.8152]
2022-07-08 00:20:07.524684: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:20:08.136226: Suus1 maybe_update_lr lr: 0.005204
2022-07-08 00:20:08.155930: This epoch took 77.548240 s

2022-07-08 00:20:08.177865: 
epoch:  258
2022-07-08 00:21:20.253567: train loss : -0.8842
2022-07-08 00:21:25.042961: validation loss: -0.7969
2022-07-08 00:21:25.050087: Average global foreground Dice: [0.8497]
2022-07-08 00:21:25.052730: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:21:25.715024: Suus1 maybe_update_lr lr: 0.005185
2022-07-08 00:21:25.748930: This epoch took 77.527075 s

2022-07-08 00:21:25.770867: 
epoch:  259
2022-07-08 00:22:37.118222: train loss : -0.8813
2022-07-08 00:22:41.892162: validation loss: -0.7609
2022-07-08 00:22:41.923275: Average global foreground Dice: [0.8218]
2022-07-08 00:22:41.938890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:22:42.622103: Suus1 maybe_update_lr lr: 0.005166
2022-07-08 00:22:42.630652: This epoch took 76.837766 s

2022-07-08 00:22:42.632767: 
epoch:  260
2022-07-08 00:23:52.687871: train loss : -0.8824
2022-07-08 00:23:57.436156: validation loss: -0.7801
2022-07-08 00:23:57.471320: Average global foreground Dice: [0.8326]
2022-07-08 00:23:57.493884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:23:58.172107: Suus1 maybe_update_lr lr: 0.005146
2022-07-08 00:23:58.191952: This epoch took 75.557167 s

2022-07-08 00:23:58.211881: 
epoch:  261
2022-07-08 00:25:08.147570: train loss : -0.8822
2022-07-08 00:25:13.055536: validation loss: -0.7706
2022-07-08 00:25:13.076818: Average global foreground Dice: [0.829]
2022-07-08 00:25:13.098568: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:25:13.889024: Suus1 maybe_update_lr lr: 0.005127
2022-07-08 00:25:13.907508: This epoch took 75.663397 s

2022-07-08 00:25:13.913094: 
epoch:  262
2022-07-08 00:26:25.255271: train loss : -0.8851
2022-07-08 00:26:30.297556: validation loss: -0.7865
2022-07-08 00:26:30.330803: Average global foreground Dice: [0.8417]
2022-07-08 00:26:30.359258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:26:31.102179: Suus1 maybe_update_lr lr: 0.005107
2022-07-08 00:26:31.139923: This epoch took 77.207346 s

2022-07-08 00:26:31.172870: 
epoch:  263
2022-07-08 00:27:41.664263: train loss : -0.8858
2022-07-08 00:27:46.500454: validation loss: -0.7852
2022-07-08 00:27:46.534256: Average global foreground Dice: [0.8402]
2022-07-08 00:27:46.547872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:27:47.341446: Suus1 maybe_update_lr lr: 0.005088
2022-07-08 00:27:47.371941: This epoch took 76.171360 s

2022-07-08 00:27:47.394856: 
epoch:  264
2022-07-08 00:28:59.277743: train loss : -0.8849
2022-07-08 00:29:04.152615: validation loss: -0.7796
2022-07-08 00:29:04.186349: Average global foreground Dice: [0.8318]
2022-07-08 00:29:04.212861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:29:04.939106: Suus1 maybe_update_lr lr: 0.005069
2022-07-08 00:29:04.958910: This epoch took 77.541035 s

2022-07-08 00:29:04.977261: 
epoch:  265
2022-07-08 00:30:15.300851: train loss : -0.8875
2022-07-08 00:30:20.568685: validation loss: -0.7904
2022-07-08 00:30:20.588516: Average global foreground Dice: [0.8428]
2022-07-08 00:30:20.606875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:30:21.161018: Suus1 maybe_update_lr lr: 0.005049
2022-07-08 00:30:21.163886: This epoch took 76.179052 s

2022-07-08 00:30:21.192866: 
epoch:  266
2022-07-08 00:31:32.588112: train loss : -0.8883
2022-07-08 00:31:37.769247: validation loss: -0.7601
2022-07-08 00:31:37.803276: Average global foreground Dice: [0.8202]
2022-07-08 00:31:37.830082: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:31:38.469305: Suus1 maybe_update_lr lr: 0.00503
2022-07-08 00:31:38.502911: This epoch took 77.299254 s

2022-07-08 00:31:38.546849: 
epoch:  267
2022-07-08 00:32:49.729370: train loss : -0.8856
2022-07-08 00:32:54.805761: validation loss: -0.7983
2022-07-08 00:32:54.830502: Average global foreground Dice: [0.853]
2022-07-08 00:32:54.843100: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:32:55.558455: Suus1 maybe_update_lr lr: 0.00501
2022-07-08 00:32:55.592924: This epoch took 77.012039 s

2022-07-08 00:32:55.614862: 
epoch:  268
2022-07-08 00:34:07.197686: train loss : -0.8864
2022-07-08 00:34:11.978370: validation loss: -0.7815
2022-07-08 00:34:12.013236: Average global foreground Dice: [0.84]
2022-07-08 00:34:12.041075: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:34:12.653592: Suus1 maybe_update_lr lr: 0.004991
2022-07-08 00:34:12.685905: This epoch took 77.053129 s

2022-07-08 00:34:12.707854: 
epoch:  269
2022-07-08 00:35:24.389984: train loss : -0.8862
2022-07-08 00:35:29.388334: validation loss: -0.7700
2022-07-08 00:35:29.400198: Average global foreground Dice: [0.8283]
2022-07-08 00:35:29.406409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:35:30.270781: Suus1 maybe_update_lr lr: 0.004971
2022-07-08 00:35:30.291926: This epoch took 77.552729 s

2022-07-08 00:35:30.318425: 
epoch:  270
2022-07-08 00:36:40.672227: train loss : -0.8903
2022-07-08 00:36:46.051214: validation loss: -0.7819
2022-07-08 00:36:46.073275: Average global foreground Dice: [0.836]
2022-07-08 00:36:46.075721: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:36:46.644878: Suus1 maybe_update_lr lr: 0.004952
2022-07-08 00:36:46.677922: This epoch took 76.340780 s

2022-07-08 00:36:46.692187: 
epoch:  271
2022-07-08 00:37:58.562416: train loss : -0.8864
2022-07-08 00:38:03.324954: validation loss: -0.7674
2022-07-08 00:38:03.348247: Average global foreground Dice: [0.8346]
2022-07-08 00:38:03.369011: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:38:04.038445: Suus1 maybe_update_lr lr: 0.004933
2022-07-08 00:38:04.058788: This epoch took 77.346496 s

2022-07-08 00:38:04.080861: 
epoch:  272
2022-07-08 00:39:15.096849: train loss : -0.8882
2022-07-08 00:39:19.701843: validation loss: -0.7895
2022-07-08 00:39:19.715162: Average global foreground Dice: [0.8434]
2022-07-08 00:39:19.751445: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:39:20.394862: Suus1 maybe_update_lr lr: 0.004913
2022-07-08 00:39:20.425911: saving best epoch checkpoint...
2022-07-08 00:39:20.584070: saving checkpoint...
2022-07-08 00:39:22.216186: done, saving took 1.76 seconds
2022-07-08 00:39:22.234418: This epoch took 78.137924 s

2022-07-08 00:39:22.236805: 
epoch:  273
2022-07-08 00:40:33.194945: train loss : -0.8905
2022-07-08 00:40:38.191173: validation loss: -0.7890
2022-07-08 00:40:38.215334: Average global foreground Dice: [0.8396]
2022-07-08 00:40:38.246180: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:40:38.896803: Suus1 maybe_update_lr lr: 0.004894
2022-07-08 00:40:38.899440: saving best epoch checkpoint...
2022-07-08 00:40:39.040127: saving checkpoint...
2022-07-08 00:40:40.857302: done, saving took 1.96 seconds
2022-07-08 00:40:40.873212: This epoch took 78.634232 s

2022-07-08 00:40:40.875616: 
epoch:  274
2022-07-08 00:41:51.657042: train loss : -0.8856
2022-07-08 00:41:57.590693: validation loss: -0.7966
2022-07-08 00:41:57.604580: Average global foreground Dice: [0.8505]
2022-07-08 00:41:57.613878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:41:58.259395: Suus1 maybe_update_lr lr: 0.004874
2022-07-08 00:41:58.291896: saving best epoch checkpoint...
2022-07-08 00:41:58.421948: saving checkpoint...
2022-07-08 00:42:00.457041: done, saving took 2.14 seconds
2022-07-08 00:42:00.474061: This epoch took 79.596039 s

2022-07-08 00:42:00.476379: 
epoch:  275
2022-07-08 00:43:10.409752: train loss : -0.8890
2022-07-08 00:43:15.362853: validation loss: -0.7768
2022-07-08 00:43:15.398783: Average global foreground Dice: [0.8324]
2022-07-08 00:43:15.410860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:43:15.998333: Suus1 maybe_update_lr lr: 0.004855
2022-07-08 00:43:16.014551: This epoch took 75.536008 s

2022-07-08 00:43:16.049814: 
epoch:  276
2022-07-08 00:44:26.544101: train loss : -0.8904
2022-07-08 00:44:31.377324: validation loss: -0.7772
2022-07-08 00:44:31.413281: Average global foreground Dice: [0.8376]
2022-07-08 00:44:31.443088: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:44:32.283641: Suus1 maybe_update_lr lr: 0.004835
2022-07-08 00:44:32.312095: This epoch took 76.242156 s

2022-07-08 00:44:32.333892: 
epoch:  277
2022-07-08 00:45:42.992665: train loss : -0.8920
2022-07-08 00:45:48.164349: validation loss: -0.7846
2022-07-08 00:45:48.192749: Average global foreground Dice: [0.843]
2022-07-08 00:45:48.212363: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:45:48.775578: Suus1 maybe_update_lr lr: 0.004816
2022-07-08 00:45:48.793582: saving best epoch checkpoint...
2022-07-08 00:45:48.895607: saving checkpoint...
2022-07-08 00:45:50.690656: done, saving took 1.87 seconds
2022-07-08 00:45:50.706633: This epoch took 78.351029 s

2022-07-08 00:45:50.708919: 
epoch:  278
2022-07-08 00:47:00.884726: train loss : -0.8901
2022-07-08 00:47:06.283312: validation loss: -0.7897
2022-07-08 00:47:06.321278: Average global foreground Dice: [0.8394]
2022-07-08 00:47:06.342884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:47:07.109662: Suus1 maybe_update_lr lr: 0.004796
2022-07-08 00:47:07.130913: saving best epoch checkpoint...
2022-07-08 00:47:07.247555: saving checkpoint...
2022-07-08 00:47:09.008516: done, saving took 1.84 seconds
2022-07-08 00:47:09.024166: This epoch took 78.313090 s

2022-07-08 00:47:09.026401: 
epoch:  279
2022-07-08 00:48:19.637204: train loss : -0.8935
2022-07-08 00:48:24.343124: validation loss: -0.7662
2022-07-08 00:48:24.357673: Average global foreground Dice: [0.8283]
2022-07-08 00:48:24.366182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:48:25.216328: Suus1 maybe_update_lr lr: 0.004776
2022-07-08 00:48:25.231735: This epoch took 76.203124 s

2022-07-08 00:48:25.246392: 
epoch:  280
2022-07-08 00:49:36.758595: train loss : -0.8906
2022-07-08 00:49:41.892121: validation loss: -0.7759
2022-07-08 00:49:41.923358: Average global foreground Dice: [0.8378]
2022-07-08 00:49:41.935856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:49:42.508736: Suus1 maybe_update_lr lr: 0.004757
2022-07-08 00:49:42.527909: This epoch took 77.256094 s

2022-07-08 00:49:42.553866: 
epoch:  281
2022-07-08 00:50:54.297014: train loss : -0.8910
2022-07-08 00:50:58.742225: validation loss: -0.7688
2022-07-08 00:50:58.770835: Average global foreground Dice: [0.8311]
2022-07-08 00:50:58.784655: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:50:59.264602: Suus1 maybe_update_lr lr: 0.004737
2022-07-08 00:50:59.283911: This epoch took 76.707010 s

2022-07-08 00:50:59.311857: 
epoch:  282
2022-07-08 00:52:09.385633: train loss : -0.8930
2022-07-08 00:52:14.085350: validation loss: -0.7729
2022-07-08 00:52:14.114239: Average global foreground Dice: [0.8344]
2022-07-08 00:52:14.149900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:52:14.778787: Suus1 maybe_update_lr lr: 0.004718
2022-07-08 00:52:14.808929: This epoch took 75.474043 s

2022-07-08 00:52:14.841863: 
epoch:  283
2022-07-08 00:53:27.195705: train loss : -0.8947
2022-07-08 00:53:32.118321: validation loss: -0.7579
2022-07-08 00:53:32.142554: Average global foreground Dice: [0.8232]
2022-07-08 00:53:32.181974: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:53:33.037316: Suus1 maybe_update_lr lr: 0.004698
2022-07-08 00:53:33.062730: This epoch took 78.187844 s

2022-07-08 00:53:33.070015: 
epoch:  284
2022-07-08 00:54:44.495358: train loss : -0.8914
2022-07-08 00:54:49.572013: validation loss: -0.7659
2022-07-08 00:54:49.603598: Average global foreground Dice: [0.8284]
2022-07-08 00:54:49.623405: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:54:50.431116: Suus1 maybe_update_lr lr: 0.004679
2022-07-08 00:54:50.471256: This epoch took 77.359385 s

2022-07-08 00:54:50.491311: 
epoch:  285
2022-07-08 00:56:02.583961: train loss : -0.8843
2022-07-08 00:56:08.599349: validation loss: -0.7764
2022-07-08 00:56:08.629747: Average global foreground Dice: [0.8323]
2022-07-08 00:56:08.643729: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:56:09.487182: Suus1 maybe_update_lr lr: 0.004659
2022-07-08 00:56:09.491735: This epoch took 78.978870 s

2022-07-08 00:56:09.503853: 
epoch:  286
2022-07-08 00:57:20.165165: train loss : -0.8858
2022-07-08 00:57:25.974211: validation loss: -0.7797
2022-07-08 00:57:26.007272: Average global foreground Dice: [0.8361]
2022-07-08 00:57:26.027248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:57:26.882791: Suus1 maybe_update_lr lr: 0.004639
2022-07-08 00:57:26.912923: This epoch took 77.376832 s

2022-07-08 00:57:26.927703: 
epoch:  287
2022-07-08 00:58:38.643326: train loss : -0.8872
2022-07-08 00:58:44.105684: validation loss: -0.7808
2022-07-08 00:58:44.145327: Average global foreground Dice: [0.8356]
2022-07-08 00:58:44.160892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:58:44.657902: Suus1 maybe_update_lr lr: 0.00462
2022-07-08 00:58:44.677182: This epoch took 77.716307 s

2022-07-08 00:58:44.696309: 
epoch:  288
2022-07-08 00:59:56.015888: train loss : -0.8908
2022-07-08 01:00:00.664721: validation loss: -0.7854
2022-07-08 01:00:00.696722: Average global foreground Dice: [0.8421]
2022-07-08 01:00:00.723879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:00:01.246523: Suus1 maybe_update_lr lr: 0.0046
2022-07-08 01:00:01.249386: This epoch took 76.550557 s

2022-07-08 01:00:01.268862: 
epoch:  289
2022-07-08 01:01:12.783775: train loss : -0.8898
2022-07-08 01:01:17.484132: validation loss: -0.7917
2022-07-08 01:01:17.519269: Average global foreground Dice: [0.8445]
2022-07-08 01:01:17.528948: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:01:18.346243: Suus1 maybe_update_lr lr: 0.004581
2022-07-08 01:01:18.366910: This epoch took 77.066367 s

2022-07-08 01:01:18.387324: 
epoch:  290
2022-07-08 01:02:31.041502: train loss : -0.8929
2022-07-08 01:02:36.334991: validation loss: -0.7737
2022-07-08 01:02:36.369553: Average global foreground Dice: [0.8374]
2022-07-08 01:02:36.385691: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:02:37.014652: Suus1 maybe_update_lr lr: 0.004561
2022-07-08 01:02:37.033924: This epoch took 78.622065 s

2022-07-08 01:02:37.060171: 
epoch:  291
2022-07-08 01:03:48.627997: train loss : -0.8906
2022-07-08 01:03:54.054121: validation loss: -0.7814
2022-07-08 01:03:54.090130: Average global foreground Dice: [0.8381]
2022-07-08 01:03:54.136868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:03:54.722809: Suus1 maybe_update_lr lr: 0.004541
2022-07-08 01:03:54.728672: This epoch took 77.646809 s

2022-07-08 01:03:54.758000: 
epoch:  292
2022-07-08 01:05:05.840165: train loss : -0.8920
2022-07-08 01:05:10.837419: validation loss: -0.7694
2022-07-08 01:05:10.878202: Average global foreground Dice: [0.8278]
2022-07-08 01:05:10.898678: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:05:11.453167: Suus1 maybe_update_lr lr: 0.004522
2022-07-08 01:05:11.472912: This epoch took 76.705589 s

2022-07-08 01:05:11.495737: 
epoch:  293
2022-07-08 01:06:22.965217: train loss : -0.8880
2022-07-08 01:06:27.605459: validation loss: -0.7589
2022-07-08 01:06:27.617872: Average global foreground Dice: [0.8187]
2022-07-08 01:06:27.628609: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:06:28.415769: Suus1 maybe_update_lr lr: 0.004502
2022-07-08 01:06:28.445922: This epoch took 76.931350 s

2022-07-08 01:06:28.467911: 
epoch:  294
2022-07-08 01:07:40.728789: train loss : -0.8952
2022-07-08 01:07:45.817195: validation loss: -0.7838
2022-07-08 01:07:45.849651: Average global foreground Dice: [0.8351]
2022-07-08 01:07:45.869432: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:07:46.453553: Suus1 maybe_update_lr lr: 0.004482
2022-07-08 01:07:46.457261: This epoch took 77.956406 s

2022-07-08 01:07:46.483134: 
epoch:  295
2022-07-08 01:08:58.072783: train loss : -0.8945
2022-07-08 01:09:03.646437: validation loss: -0.7809
2022-07-08 01:09:03.680277: Average global foreground Dice: [0.8362]
2022-07-08 01:09:03.704899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:09:04.259046: Suus1 maybe_update_lr lr: 0.004463
2022-07-08 01:09:04.279037: This epoch took 77.773902 s

2022-07-08 01:09:04.299110: 
epoch:  296
2022-07-08 01:10:15.746128: train loss : -0.8928
2022-07-08 01:10:20.843372: validation loss: -0.7770
2022-07-08 01:10:20.859145: Average global foreground Dice: [0.8372]
2022-07-08 01:10:20.891896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:10:21.598665: Suus1 maybe_update_lr lr: 0.004443
2022-07-08 01:10:21.601596: This epoch took 77.286734 s

2022-07-08 01:10:21.603858: 
epoch:  297
2022-07-08 01:11:33.497312: train loss : -0.8927
2022-07-08 01:11:38.768842: validation loss: -0.7781
2022-07-08 01:11:38.788247: Average global foreground Dice: [0.8384]
2022-07-08 01:11:38.809951: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:11:39.526062: Suus1 maybe_update_lr lr: 0.004423
2022-07-08 01:11:39.544921: This epoch took 77.938849 s

2022-07-08 01:11:39.566865: 
epoch:  298
2022-07-08 01:12:50.346752: train loss : -0.8936
2022-07-08 01:12:55.203478: validation loss: -0.7782
2022-07-08 01:12:55.228249: Average global foreground Dice: [0.84]
2022-07-08 01:12:55.230705: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:12:55.776258: Suus1 maybe_update_lr lr: 0.004404
2022-07-08 01:12:55.802961: This epoch took 76.214334 s

2022-07-08 01:12:55.824939: 
epoch:  299
2022-07-08 01:14:07.985228: train loss : -0.8954
2022-07-08 01:14:12.958327: validation loss: -0.7720
2022-07-08 01:14:12.989561: Average global foreground Dice: [0.8321]
2022-07-08 01:14:13.000983: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:14:13.661290: Suus1 maybe_update_lr lr: 0.004384
2022-07-08 01:14:13.680871: saving scheduled checkpoint file...
2022-07-08 01:14:13.794941: saving checkpoint...
2022-07-08 01:14:15.517567: done, saving took 1.81 seconds
2022-07-08 01:14:15.534675: done
2022-07-08 01:14:15.536955: This epoch took 79.691961 s

2022-07-08 01:14:15.539186: 
epoch:  300
2022-07-08 01:15:26.107830: train loss : -0.8952
2022-07-08 01:15:30.754370: validation loss: -0.7779
2022-07-08 01:15:30.784237: Average global foreground Dice: [0.8348]
2022-07-08 01:15:30.805317: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:15:31.470882: Suus1 maybe_update_lr lr: 0.004364
2022-07-08 01:15:31.491931: This epoch took 75.950521 s

2022-07-08 01:15:31.515861: 
epoch:  301
2022-07-08 01:16:41.806432: train loss : -0.8935
2022-07-08 01:16:46.557962: validation loss: -0.7780
2022-07-08 01:16:46.602363: Average global foreground Dice: [0.8357]
2022-07-08 01:16:46.622260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:16:47.254271: Suus1 maybe_update_lr lr: 0.004344
2022-07-08 01:16:47.284912: This epoch took 75.738040 s

2022-07-08 01:16:47.317868: 
epoch:  302
2022-07-08 01:17:58.220234: train loss : -0.8968
2022-07-08 01:18:02.769721: validation loss: -0.7926
2022-07-08 01:18:02.794415: Average global foreground Dice: [0.8444]
2022-07-08 01:18:02.827716: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:18:03.579361: Suus1 maybe_update_lr lr: 0.004325
2022-07-08 01:18:03.616918: This epoch took 76.266050 s

2022-07-08 01:18:03.648004: 
epoch:  303
2022-07-08 01:19:15.901367: train loss : -0.8960
2022-07-08 01:19:20.964587: validation loss: -0.7771
2022-07-08 01:19:20.982206: Average global foreground Dice: [0.8353]
2022-07-08 01:19:20.984685: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:19:21.625605: Suus1 maybe_update_lr lr: 0.004305
2022-07-08 01:19:21.666049: This epoch took 77.996172 s

2022-07-08 01:19:21.694583: 
epoch:  304
2022-07-08 01:20:33.171640: train loss : -0.8902
2022-07-08 01:20:38.080401: validation loss: -0.7753
2022-07-08 01:20:38.109221: Average global foreground Dice: [0.8329]
2022-07-08 01:20:38.130865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:20:38.929645: Suus1 maybe_update_lr lr: 0.004285
2022-07-08 01:20:38.951570: This epoch took 77.248546 s

2022-07-08 01:20:38.969464: 
epoch:  305
2022-07-08 01:21:50.004626: train loss : -0.8914
2022-07-08 01:21:54.806527: validation loss: -0.7794
2022-07-08 01:21:54.833329: Average global foreground Dice: [0.8362]
2022-07-08 01:21:54.849701: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:21:55.501994: Suus1 maybe_update_lr lr: 0.004265
2022-07-08 01:21:55.512962: This epoch took 76.532887 s

2022-07-08 01:21:55.520380: 
epoch:  306
2022-07-08 01:23:06.538886: train loss : -0.8943
2022-07-08 01:23:11.223620: validation loss: -0.7673
2022-07-08 01:23:11.257250: Average global foreground Dice: [0.8241]
2022-07-08 01:23:11.268997: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:23:11.858031: Suus1 maybe_update_lr lr: 0.004245
2022-07-08 01:23:11.861256: This epoch took 76.309333 s

2022-07-08 01:23:11.867598: 
epoch:  307
2022-07-08 01:24:23.539155: train loss : -0.8936
2022-07-08 01:24:28.867116: validation loss: -0.7694
2022-07-08 01:24:28.902813: Average global foreground Dice: [0.8342]
2022-07-08 01:24:28.913576: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:24:29.761305: Suus1 maybe_update_lr lr: 0.004226
2022-07-08 01:24:29.791964: This epoch took 77.895927 s

2022-07-08 01:24:29.825970: 
epoch:  308
2022-07-08 01:25:40.032800: train loss : -0.8965
2022-07-08 01:25:45.013597: validation loss: -0.7876
2022-07-08 01:25:45.058779: Average global foreground Dice: [0.8387]
2022-07-08 01:25:45.066776: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:25:45.685716: Suus1 maybe_update_lr lr: 0.004206
2022-07-08 01:25:45.722899: This epoch took 75.874969 s

2022-07-08 01:25:45.741071: 
epoch:  309
2022-07-08 01:26:57.494432: train loss : -0.8960
2022-07-08 01:27:02.665327: validation loss: -0.7788
2022-07-08 01:27:02.689105: Average global foreground Dice: [0.8346]
2022-07-08 01:27:02.708497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:27:03.355731: Suus1 maybe_update_lr lr: 0.004186
2022-07-08 01:27:03.360196: This epoch took 77.599093 s

2022-07-08 01:27:03.384870: 
epoch:  310
2022-07-08 01:28:15.839856: train loss : -0.8957
2022-07-08 01:28:21.779172: validation loss: -0.7888
2022-07-08 01:28:21.810267: Average global foreground Dice: [0.8422]
2022-07-08 01:28:21.827967: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:28:22.453761: Suus1 maybe_update_lr lr: 0.004166
2022-07-08 01:28:22.461027: This epoch took 79.045057 s

2022-07-08 01:28:22.500054: 
epoch:  311
2022-07-08 01:29:33.945423: train loss : -0.8959
2022-07-08 01:29:38.720021: validation loss: -0.7548
2022-07-08 01:29:38.769340: Average global foreground Dice: [0.8236]
2022-07-08 01:29:38.801863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:29:39.576691: Suus1 maybe_update_lr lr: 0.004146
2022-07-08 01:29:39.597322: This epoch took 77.081930 s

2022-07-08 01:29:39.614703: 
epoch:  312
2022-07-08 01:30:51.764561: train loss : -0.8990
2022-07-08 01:30:56.509375: validation loss: -0.7710
2022-07-08 01:30:56.520541: Average global foreground Dice: [0.8334]
2022-07-08 01:30:56.538360: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:30:57.409890: Suus1 maybe_update_lr lr: 0.004127
2022-07-08 01:30:57.424028: This epoch took 77.790160 s

2022-07-08 01:30:57.451859: 
epoch:  313
2022-07-08 01:32:08.906344: train loss : -0.8968
2022-07-08 01:32:14.597047: validation loss: -0.7574
2022-07-08 01:32:14.625252: Average global foreground Dice: [0.8274]
2022-07-08 01:32:14.646878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:32:15.370057: Suus1 maybe_update_lr lr: 0.004107
2022-07-08 01:32:15.380876: This epoch took 77.899970 s

2022-07-08 01:32:15.390947: 
epoch:  314
2022-07-08 01:33:25.252748: train loss : -0.9000
2022-07-08 01:33:30.088736: validation loss: -0.7865
2022-07-08 01:33:30.100311: Average global foreground Dice: [0.8411]
2022-07-08 01:33:30.126881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:33:30.966129: Suus1 maybe_update_lr lr: 0.004087
2022-07-08 01:33:30.985936: This epoch took 75.573977 s

2022-07-08 01:33:31.007864: 
epoch:  315
2022-07-08 01:34:41.586740: train loss : -0.9017
2022-07-08 01:34:46.567888: validation loss: -0.7705
2022-07-08 01:34:46.608990: Average global foreground Dice: [0.8285]
2022-07-08 01:34:46.611815: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:34:47.393944: Suus1 maybe_update_lr lr: 0.004067
2022-07-08 01:34:47.413911: This epoch took 76.384029 s

2022-07-08 01:34:47.426008: 
epoch:  316
2022-07-08 01:35:58.342402: train loss : -0.9017
2022-07-08 01:36:03.007561: validation loss: -0.7498
2022-07-08 01:36:03.017125: Average global foreground Dice: [0.8154]
2022-07-08 01:36:03.027512: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:36:03.649308: Suus1 maybe_update_lr lr: 0.004047
2022-07-08 01:36:03.673062: This epoch took 76.217521 s

2022-07-08 01:36:03.679312: 
epoch:  317
2022-07-08 01:37:14.219450: train loss : -0.9034
2022-07-08 01:37:19.237532: validation loss: -0.7543
2022-07-08 01:37:19.262635: Average global foreground Dice: [0.8219]
2022-07-08 01:37:19.275730: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:37:19.991356: Suus1 maybe_update_lr lr: 0.004027
2022-07-08 01:37:20.010918: This epoch took 76.291726 s

2022-07-08 01:37:20.032871: 
epoch:  318
2022-07-08 01:38:31.047055: train loss : -0.9034
2022-07-08 01:38:35.863788: validation loss: -0.7832
2022-07-08 01:38:35.897274: Average global foreground Dice: [0.842]
2022-07-08 01:38:35.914431: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:38:36.523590: Suus1 maybe_update_lr lr: 0.004007
2022-07-08 01:38:36.542891: This epoch took 76.484646 s

2022-07-08 01:38:36.564858: 
epoch:  319
2022-07-08 01:39:48.964214: train loss : -0.8971
2022-07-08 01:39:54.375211: validation loss: -0.7739
2022-07-08 01:39:54.405439: Average global foreground Dice: [0.8293]
2022-07-08 01:39:54.428226: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:39:55.151549: Suus1 maybe_update_lr lr: 0.003987
2022-07-08 01:39:55.170911: This epoch took 78.589521 s

2022-07-08 01:39:55.196919: 
epoch:  320
2022-07-08 01:41:07.277719: train loss : -0.9017
2022-07-08 01:41:12.355240: validation loss: -0.7849
2022-07-08 01:41:12.390285: Average global foreground Dice: [0.8435]
2022-07-08 01:41:12.422895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:41:13.223140: Suus1 maybe_update_lr lr: 0.003967
2022-07-08 01:41:13.251148: This epoch took 78.028445 s

2022-07-08 01:41:13.271147: 
epoch:  321
2022-07-08 01:42:24.504924: train loss : -0.9010
2022-07-08 01:42:29.912277: validation loss: -0.7610
2022-07-08 01:42:29.947263: Average global foreground Dice: [0.829]
2022-07-08 01:42:29.990870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:42:30.772094: Suus1 maybe_update_lr lr: 0.003947
2022-07-08 01:42:30.779009: This epoch took 77.486074 s

2022-07-08 01:42:30.792254: 
epoch:  322
2022-07-08 01:43:42.310493: train loss : -0.8995
2022-07-08 01:43:47.309347: validation loss: -0.7922
2022-07-08 01:43:47.337385: Average global foreground Dice: [0.846]
2022-07-08 01:43:47.354756: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:43:47.910973: Suus1 maybe_update_lr lr: 0.003927
2022-07-08 01:43:47.936100: This epoch took 77.133228 s

2022-07-08 01:43:47.938592: 
epoch:  323
2022-07-08 01:45:00.224778: train loss : -0.8999
2022-07-08 01:45:05.275384: validation loss: -0.7828
2022-07-08 01:45:05.304307: Average global foreground Dice: [0.8389]
2022-07-08 01:45:05.334490: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:45:05.991072: Suus1 maybe_update_lr lr: 0.003907
2022-07-08 01:45:06.022906: This epoch took 78.081959 s

2022-07-08 01:45:06.061865: 
epoch:  324
2022-07-08 01:46:16.736911: train loss : -0.9016
2022-07-08 01:46:21.366190: validation loss: -0.7788
2022-07-08 01:46:21.409319: Average global foreground Dice: [0.8394]
2022-07-08 01:46:21.430875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:46:22.158358: Suus1 maybe_update_lr lr: 0.003887
2022-07-08 01:46:22.191016: This epoch took 76.102149 s

2022-07-08 01:46:22.223850: 
epoch:  325
2022-07-08 01:47:32.624830: train loss : -0.9028
2022-07-08 01:47:37.319566: validation loss: -0.7817
2022-07-08 01:47:37.354301: Average global foreground Dice: [0.8391]
2022-07-08 01:47:37.375874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:47:38.011851: Suus1 maybe_update_lr lr: 0.003867
2022-07-08 01:47:38.039933: This epoch took 75.788062 s

2022-07-08 01:47:38.061865: 
epoch:  326
2022-07-08 01:48:49.650905: train loss : -0.9025
2022-07-08 01:48:54.468413: validation loss: -0.7780
2022-07-08 01:48:54.508163: Average global foreground Dice: [0.833]
2022-07-08 01:48:54.528421: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:48:55.216078: Suus1 maybe_update_lr lr: 0.003847
2022-07-08 01:48:55.235913: This epoch took 77.152042 s

2022-07-08 01:48:55.257866: 
epoch:  327
2022-07-08 01:50:06.041653: train loss : -0.9046
2022-07-08 01:50:11.134423: validation loss: -0.7893
2022-07-08 01:50:11.178314: Average global foreground Dice: [0.8473]
2022-07-08 01:50:11.199877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:50:11.839146: Suus1 maybe_update_lr lr: 0.003827
2022-07-08 01:50:11.858937: This epoch took 76.579070 s

2022-07-08 01:50:11.884545: 
epoch:  328
2022-07-08 01:51:24.221365: train loss : -0.9024
2022-07-08 01:51:29.265408: validation loss: -0.7781
2022-07-08 01:51:29.269145: Average global foreground Dice: [0.8406]
2022-07-08 01:51:29.271636: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:51:29.822971: Suus1 maybe_update_lr lr: 0.003807
2022-07-08 01:51:29.853018: This epoch took 77.966138 s

2022-07-08 01:51:29.874848: 
epoch:  329
2022-07-08 01:52:42.636057: train loss : -0.9025
2022-07-08 01:52:47.590611: validation loss: -0.7904
2022-07-08 01:52:47.628394: Average global foreground Dice: [0.8434]
2022-07-08 01:52:47.648813: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:52:48.212253: Suus1 maybe_update_lr lr: 0.003787
2022-07-08 01:52:48.233168: This epoch took 78.346438 s

2022-07-08 01:52:48.291863: 
epoch:  330
2022-07-08 01:53:58.288130: train loss : -0.9022
2022-07-08 01:54:03.083312: validation loss: -0.7929
2022-07-08 01:54:03.108470: Average global foreground Dice: [0.8479]
2022-07-08 01:54:03.128158: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:54:03.876472: Suus1 maybe_update_lr lr: 0.003767
2022-07-08 01:54:03.906930: saving best epoch checkpoint...
2022-07-08 01:54:04.043045: saving checkpoint...
2022-07-08 01:54:05.853369: done, saving took 1.94 seconds
2022-07-08 01:54:05.872892: This epoch took 77.547033 s

2022-07-08 01:54:05.875201: 
epoch:  331
2022-07-08 01:55:17.913311: train loss : -0.9006
2022-07-08 01:55:22.699694: validation loss: -0.7783
2022-07-08 01:55:22.726672: Average global foreground Dice: [0.8349]
2022-07-08 01:55:22.753866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:55:23.419511: Suus1 maybe_update_lr lr: 0.003747
2022-07-08 01:55:23.449924: This epoch took 77.572679 s

2022-07-08 01:55:23.468861: 
epoch:  332
2022-07-08 01:56:33.614351: train loss : -0.9034
2022-07-08 01:56:38.512482: validation loss: -0.7765
2022-07-08 01:56:38.540556: Average global foreground Dice: [0.8362]
2022-07-08 01:56:38.560184: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:56:39.367400: Suus1 maybe_update_lr lr: 0.003727
2022-07-08 01:56:39.415919: This epoch took 75.944588 s

2022-07-08 01:56:39.432403: 
epoch:  333
2022-07-08 01:57:51.326864: train loss : -0.9013
2022-07-08 01:57:56.753268: validation loss: -0.7797
2022-07-08 01:57:56.783219: Average global foreground Dice: [0.8319]
2022-07-08 01:57:56.815892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:57:57.464664: Suus1 maybe_update_lr lr: 0.003707
2022-07-08 01:57:57.495891: This epoch took 78.044159 s

2022-07-08 01:57:57.516182: 
epoch:  334
2022-07-08 01:59:07.238254: train loss : -0.9034
2022-07-08 01:59:12.253341: validation loss: -0.7889
2022-07-08 01:59:12.281417: Average global foreground Dice: [0.8439]
2022-07-08 01:59:12.297867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:59:13.085090: Suus1 maybe_update_lr lr: 0.003687
2022-07-08 01:59:13.105918: This epoch took 75.574515 s

2022-07-08 01:59:13.128861: 
epoch:  335
2022-07-08 02:00:24.515568: train loss : -0.9039
2022-07-08 02:00:29.491204: validation loss: -0.7852
2022-07-08 02:00:29.510064: Average global foreground Dice: [0.84]
2022-07-08 02:00:29.536716: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:00:30.306730: Suus1 maybe_update_lr lr: 0.003667
2022-07-08 02:00:30.314577: This epoch took 77.158682 s

2022-07-08 02:00:30.337090: 
epoch:  336
2022-07-08 02:01:42.040017: train loss : -0.9062
2022-07-08 02:01:47.842614: validation loss: -0.7838
2022-07-08 02:01:47.854605: Average global foreground Dice: [0.8445]
2022-07-08 02:01:47.881883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:01:48.610431: Suus1 maybe_update_lr lr: 0.003647
2022-07-08 02:01:48.632934: saving best epoch checkpoint...
2022-07-08 02:01:48.780335: saving checkpoint...
2022-07-08 02:01:50.626941: done, saving took 1.96 seconds
2022-07-08 02:01:50.643128: This epoch took 80.280418 s

2022-07-08 02:01:50.645501: 
epoch:  337
2022-07-08 02:03:01.517667: train loss : -0.9025
2022-07-08 02:03:06.292755: validation loss: -0.7775
2022-07-08 02:03:06.324710: Average global foreground Dice: [0.8281]
2022-07-08 02:03:06.354952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:03:07.206709: Suus1 maybe_update_lr lr: 0.003627
2022-07-08 02:03:07.213272: This epoch took 76.565521 s

2022-07-08 02:03:07.219771: 
epoch:  338
2022-07-08 02:04:17.819098: train loss : -0.9017
2022-07-08 02:04:22.916421: validation loss: -0.7728
2022-07-08 02:04:22.961562: Average global foreground Dice: [0.8338]
2022-07-08 02:04:22.974760: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:04:23.700983: Suus1 maybe_update_lr lr: 0.003606
2022-07-08 02:04:23.717830: This epoch took 76.472937 s

2022-07-08 02:04:23.720275: 
epoch:  339
2022-07-08 02:05:33.002984: train loss : -0.9053
2022-07-08 02:05:37.939616: validation loss: -0.7777
2022-07-08 02:05:37.952139: Average global foreground Dice: [0.8372]
2022-07-08 02:05:37.962565: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:05:38.720848: Suus1 maybe_update_lr lr: 0.003586
2022-07-08 02:05:38.744836: This epoch took 75.015259 s

2022-07-08 02:05:38.772719: 
epoch:  340
2022-07-08 02:06:49.007639: train loss : -0.9041
2022-07-08 02:06:54.017319: validation loss: -0.7729
2022-07-08 02:06:54.055403: Average global foreground Dice: [0.8326]
2022-07-08 02:06:54.079892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:06:54.863463: Suus1 maybe_update_lr lr: 0.003566
2022-07-08 02:06:54.887047: This epoch took 76.098659 s

2022-07-08 02:06:54.889642: 
epoch:  341
2022-07-08 02:08:05.641765: train loss : -0.9057
2022-07-08 02:08:10.951057: validation loss: -0.7912
2022-07-08 02:08:10.980554: Average global foreground Dice: [0.8463]
2022-07-08 02:08:10.994876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:08:11.676881: Suus1 maybe_update_lr lr: 0.003546
2022-07-08 02:08:11.695948: This epoch took 76.776075 s

2022-07-08 02:08:11.708329: 
epoch:  342
2022-07-08 02:09:22.879638: train loss : -0.9026
2022-07-08 02:09:27.712857: validation loss: -0.7692
2022-07-08 02:09:27.742347: Average global foreground Dice: [0.8289]
2022-07-08 02:09:27.764863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:09:28.319137: Suus1 maybe_update_lr lr: 0.003526
2022-07-08 02:09:28.338892: This epoch took 76.593484 s

2022-07-08 02:09:28.375041: 
epoch:  343
2022-07-08 02:10:39.519030: train loss : -0.9026
2022-07-08 02:10:44.503886: validation loss: -0.7786
2022-07-08 02:10:44.529634: Average global foreground Dice: [0.8382]
2022-07-08 02:10:44.544246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:10:45.209208: Suus1 maybe_update_lr lr: 0.003505
2022-07-08 02:10:45.238289: This epoch took 76.841422 s

2022-07-08 02:10:45.270876: 
epoch:  344
2022-07-08 02:11:56.360787: train loss : -0.9049
2022-07-08 02:12:01.277599: validation loss: -0.7873
2022-07-08 02:12:01.305255: Average global foreground Dice: [0.8418]
2022-07-08 02:12:01.332881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:12:02.128047: Suus1 maybe_update_lr lr: 0.003485
2022-07-08 02:12:02.147096: This epoch took 76.854228 s

2022-07-08 02:12:02.166128: 
epoch:  345
2022-07-08 02:13:13.000822: train loss : -0.9084
2022-07-08 02:13:17.962373: validation loss: -0.7868
2022-07-08 02:13:17.994369: Average global foreground Dice: [0.8428]
2022-07-08 02:13:18.015882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:13:18.759023: Suus1 maybe_update_lr lr: 0.003465
2022-07-08 02:13:18.778937: This epoch took 76.580061 s

2022-07-08 02:13:18.800851: 
epoch:  346
2022-07-08 02:14:30.890424: train loss : -0.9030
2022-07-08 02:14:35.946472: validation loss: -0.7675
2022-07-08 02:14:35.984260: Average global foreground Dice: [0.8262]
2022-07-08 02:14:35.996888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:14:36.588071: Suus1 maybe_update_lr lr: 0.003445
2022-07-08 02:14:36.590941: This epoch took 77.773448 s

2022-07-08 02:14:36.593193: 
epoch:  347
2022-07-08 02:15:47.409973: train loss : -0.9010
2022-07-08 02:15:52.897287: validation loss: -0.7807
2022-07-08 02:15:52.914224: Average global foreground Dice: [0.8382]
2022-07-08 02:15:52.959567: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:15:53.692547: Suus1 maybe_update_lr lr: 0.003424
2022-07-08 02:15:53.712937: This epoch took 77.117650 s

2022-07-08 02:15:53.743861: 
epoch:  348
2022-07-08 02:17:05.034045: train loss : -0.9022
2022-07-08 02:17:10.196560: validation loss: -0.7897
2022-07-08 02:17:10.234042: Average global foreground Dice: [0.8494]
2022-07-08 02:17:10.247864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:17:11.050214: Suus1 maybe_update_lr lr: 0.003404
2022-07-08 02:17:11.069908: This epoch took 77.304034 s

2022-07-08 02:17:11.101007: 
epoch:  349
2022-07-08 02:18:22.608014: train loss : -0.9034
2022-07-08 02:18:27.629994: validation loss: -0.7833
2022-07-08 02:18:27.652044: Average global foreground Dice: [0.8395]
2022-07-08 02:18:27.665655: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:18:28.549087: Suus1 maybe_update_lr lr: 0.003384
2022-07-08 02:18:28.574301: saving scheduled checkpoint file...
2022-07-08 02:18:28.717908: saving checkpoint...
2022-07-08 02:18:30.469769: done, saving took 1.87 seconds
2022-07-08 02:18:30.503471: done
2022-07-08 02:18:30.505673: This epoch took 79.396172 s

2022-07-08 02:18:30.507818: 
epoch:  350
2022-07-08 02:19:40.416862: train loss : -0.9068
2022-07-08 02:19:45.100731: validation loss: -0.7492
2022-07-08 02:19:45.149056: Average global foreground Dice: [0.8191]
2022-07-08 02:19:45.169813: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:19:45.864449: Suus1 maybe_update_lr lr: 0.003364
2022-07-08 02:19:45.881939: This epoch took 75.371938 s

2022-07-08 02:19:45.905385: 
epoch:  351
2022-07-08 02:20:57.391842: train loss : -0.9073
2022-07-08 02:21:02.924147: validation loss: -0.7768
2022-07-08 02:21:02.954315: Average global foreground Dice: [0.8385]
2022-07-08 02:21:02.968117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:21:03.652769: Suus1 maybe_update_lr lr: 0.003343
2022-07-08 02:21:03.670254: This epoch took 77.717218 s

2022-07-08 02:21:03.702013: 
epoch:  352
2022-07-08 02:22:15.371271: train loss : -0.9088
2022-07-08 02:22:20.435101: validation loss: -0.7859
2022-07-08 02:22:20.439494: Average global foreground Dice: [0.8406]
2022-07-08 02:22:20.469057: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:22:21.216086: Suus1 maybe_update_lr lr: 0.003323
2022-07-08 02:22:21.242126: This epoch took 77.528127 s

2022-07-08 02:22:21.262169: 
epoch:  353
2022-07-08 02:23:33.609282: train loss : -0.9069
2022-07-08 02:23:38.691825: validation loss: -0.7728
2022-07-08 02:23:38.701209: Average global foreground Dice: [0.8334]
2022-07-08 02:23:38.705102: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:23:39.340009: Suus1 maybe_update_lr lr: 0.003303
2022-07-08 02:23:39.354922: This epoch took 78.077057 s

2022-07-08 02:23:39.359720: 
epoch:  354
2022-07-08 02:24:51.206205: train loss : -0.9022
2022-07-08 02:24:56.373344: validation loss: -0.7819
2022-07-08 02:24:56.397706: Average global foreground Dice: [0.8398]
2022-07-08 02:24:56.436280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:24:57.037598: Suus1 maybe_update_lr lr: 0.003282
2022-07-08 02:24:57.083916: This epoch took 77.712078 s

2022-07-08 02:24:57.094624: 
epoch:  355
2022-07-08 02:26:07.989054: train loss : -0.9047
2022-07-08 02:26:12.852551: validation loss: -0.7653
2022-07-08 02:26:12.886550: Average global foreground Dice: [0.8291]
2022-07-08 02:26:12.907092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:26:13.595311: Suus1 maybe_update_lr lr: 0.003262
2022-07-08 02:26:13.604626: This epoch took 76.507871 s

2022-07-08 02:26:13.621199: 
epoch:  356
2022-07-08 02:27:25.013422: train loss : -0.9031
2022-07-08 02:27:30.545879: validation loss: -0.7756
2022-07-08 02:27:30.591319: Average global foreground Dice: [0.8403]
2022-07-08 02:27:30.612944: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:27:31.210804: Suus1 maybe_update_lr lr: 0.003241
2022-07-08 02:27:31.246904: This epoch took 77.604005 s

2022-07-08 02:27:31.259851: 
epoch:  357
2022-07-08 02:28:42.249567: train loss : -0.9040
2022-07-08 02:28:46.955287: validation loss: -0.7901
2022-07-08 02:28:46.996339: Average global foreground Dice: [0.8465]
2022-07-08 02:28:47.020232: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:28:47.740269: Suus1 maybe_update_lr lr: 0.003221
2022-07-08 02:28:47.763107: This epoch took 76.477041 s

2022-07-08 02:28:47.802979: 
epoch:  358
2022-07-08 02:29:58.930498: train loss : -0.9072
2022-07-08 02:30:04.067201: validation loss: -0.7549
2022-07-08 02:30:04.098315: Average global foreground Dice: [0.8233]
2022-07-08 02:30:04.114876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:30:04.818992: Suus1 maybe_update_lr lr: 0.003201
2022-07-08 02:30:04.846930: This epoch took 77.032091 s

2022-07-08 02:30:04.868857: 
epoch:  359
2022-07-08 02:31:16.415454: train loss : -0.9072
2022-07-08 02:31:22.104805: validation loss: -0.7800
2022-07-08 02:31:22.131657: Average global foreground Dice: [0.8357]
2022-07-08 02:31:22.159632: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:31:22.773367: Suus1 maybe_update_lr lr: 0.00318
2022-07-08 02:31:22.800943: This epoch took 77.909075 s

2022-07-08 02:31:22.823154: 
epoch:  360
2022-07-08 02:32:34.713146: train loss : -0.9071
2022-07-08 02:32:40.001055: validation loss: -0.7847
2022-07-08 02:32:40.027136: Average global foreground Dice: [0.842]
2022-07-08 02:32:40.035651: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:32:41.018222: Suus1 maybe_update_lr lr: 0.00316
2022-07-08 02:32:41.045505: This epoch took 78.199619 s

2022-07-08 02:32:41.065545: 
epoch:  361
2022-07-08 02:33:53.063579: train loss : -0.9087
2022-07-08 02:33:58.099163: validation loss: -0.7989
2022-07-08 02:33:58.130379: Average global foreground Dice: [0.8531]
2022-07-08 02:33:58.147870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:33:58.991250: Suus1 maybe_update_lr lr: 0.003139
2022-07-08 02:33:59.000094: This epoch took 77.900249 s

2022-07-08 02:33:59.012580: 
epoch:  362
2022-07-08 02:35:09.709581: train loss : -0.9086
2022-07-08 02:35:14.570870: validation loss: -0.7742
2022-07-08 02:35:14.592504: Average global foreground Dice: [0.8357]
2022-07-08 02:35:14.598496: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:35:15.385924: Suus1 maybe_update_lr lr: 0.003119
2022-07-08 02:35:15.405920: This epoch took 76.377488 s

2022-07-08 02:35:15.427930: 
epoch:  363
2022-07-08 02:36:25.850048: train loss : -0.9104
2022-07-08 02:36:30.805149: validation loss: -0.7941
2022-07-08 02:36:30.835291: Average global foreground Dice: [0.8482]
2022-07-08 02:36:30.866220: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:36:31.832348: Suus1 maybe_update_lr lr: 0.003098
2022-07-08 02:36:31.852767: saving best epoch checkpoint...
2022-07-08 02:36:31.935632: saving checkpoint...
2022-07-08 02:36:33.532194: done, saving took 1.68 seconds
2022-07-08 02:36:33.546690: This epoch took 78.098707 s

2022-07-08 02:36:33.548636: 
epoch:  364
2022-07-08 02:37:43.759122: train loss : -0.9106
2022-07-08 02:37:49.036515: validation loss: -0.7735
2022-07-08 02:37:49.068528: Average global foreground Dice: [0.8336]
2022-07-08 02:37:49.081895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:37:49.769461: Suus1 maybe_update_lr lr: 0.003078
2022-07-08 02:37:49.789926: This epoch took 76.239283 s

2022-07-08 02:37:49.812858: 
epoch:  365
2022-07-08 02:38:59.943461: train loss : -0.9110
2022-07-08 02:39:04.610639: validation loss: -0.7624
2022-07-08 02:39:04.624582: Average global foreground Dice: [0.8285]
2022-07-08 02:39:04.630382: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:39:05.322581: Suus1 maybe_update_lr lr: 0.003057
2022-07-08 02:39:05.349215: This epoch took 75.516081 s

2022-07-08 02:39:05.369257: 
epoch:  366
2022-07-08 02:40:16.080338: train loss : -0.9123
2022-07-08 02:40:21.676819: validation loss: -0.7440
2022-07-08 02:40:21.698124: Average global foreground Dice: [0.8096]
2022-07-08 02:40:21.728895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:40:22.511376: Suus1 maybe_update_lr lr: 0.003037
2022-07-08 02:40:22.546957: This epoch took 77.149082 s

2022-07-08 02:40:22.579878: 
epoch:  367
2022-07-08 02:41:33.723963: train loss : -0.9083
2022-07-08 02:41:38.836240: validation loss: -0.7369
2022-07-08 02:41:38.864782: Average global foreground Dice: [0.8074]
2022-07-08 02:41:38.918895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:41:39.521555: Suus1 maybe_update_lr lr: 0.003016
2022-07-08 02:41:39.549956: This epoch took 76.948092 s

2022-07-08 02:41:39.571847: 
epoch:  368
2022-07-08 02:42:51.000535: train loss : -0.9097
2022-07-08 02:42:55.753679: validation loss: -0.7777
2022-07-08 02:42:55.780562: Average global foreground Dice: [0.8346]
2022-07-08 02:42:55.791227: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:42:56.570929: Suus1 maybe_update_lr lr: 0.002996
2022-07-08 02:42:56.596726: This epoch took 76.993697 s

2022-07-08 02:42:56.634876: 
epoch:  369
2022-07-08 02:44:09.298059: train loss : -0.9095
2022-07-08 02:44:14.480999: validation loss: -0.7659
2022-07-08 02:44:14.507104: Average global foreground Dice: [0.8277]
2022-07-08 02:44:14.535869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:44:15.106203: Suus1 maybe_update_lr lr: 0.002975
2022-07-08 02:44:15.134139: This epoch took 78.466273 s

2022-07-08 02:44:15.166878: 
epoch:  370
2022-07-08 02:45:26.485342: train loss : -0.9081
2022-07-08 02:45:31.904363: validation loss: -0.7627
2022-07-08 02:45:31.933082: Average global foreground Dice: [0.8291]
2022-07-08 02:45:31.940658: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:45:32.566973: Suus1 maybe_update_lr lr: 0.002954
2022-07-08 02:45:32.585104: This epoch took 77.400237 s

2022-07-08 02:45:32.605346: 
epoch:  371
2022-07-08 02:46:44.611578: train loss : -0.9099
2022-07-08 02:46:49.830115: validation loss: -0.7773
2022-07-08 02:46:49.846004: Average global foreground Dice: [0.8356]
2022-07-08 02:46:49.860588: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:46:50.696928: Suus1 maybe_update_lr lr: 0.002934
2022-07-08 02:46:50.717893: This epoch took 78.103309 s

2022-07-08 02:46:50.739867: 
epoch:  372
2022-07-08 02:48:02.713344: train loss : -0.9098
2022-07-08 02:48:07.725575: validation loss: -0.7665
2022-07-08 02:48:07.728635: Average global foreground Dice: [0.8289]
2022-07-08 02:48:07.730727: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:48:08.550407: Suus1 maybe_update_lr lr: 0.002913
2022-07-08 02:48:08.569936: This epoch took 77.804044 s

2022-07-08 02:48:08.591855: 
epoch:  373
2022-07-08 02:49:18.818032: train loss : -0.9113
2022-07-08 02:49:24.701228: validation loss: -0.7793
2022-07-08 02:49:24.712157: Average global foreground Dice: [0.8368]
2022-07-08 02:49:24.720551: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:49:25.600076: Suus1 maybe_update_lr lr: 0.002892
2022-07-08 02:49:25.630938: This epoch took 77.022073 s

2022-07-08 02:49:25.651191: 
epoch:  374
2022-07-08 02:50:35.943797: train loss : -0.9062
2022-07-08 02:50:40.786958: validation loss: -0.7778
2022-07-08 02:50:40.822443: Average global foreground Dice: [0.8348]
2022-07-08 02:50:40.834319: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:50:41.683224: Suus1 maybe_update_lr lr: 0.002872
2022-07-08 02:50:41.713965: This epoch took 76.046087 s

2022-07-08 02:50:41.735863: 
epoch:  375
2022-07-08 02:51:54.203173: train loss : -0.9064
2022-07-08 02:51:59.212536: validation loss: -0.7670
2022-07-08 02:51:59.247208: Average global foreground Dice: [0.8301]
2022-07-08 02:51:59.268865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:51:59.949030: Suus1 maybe_update_lr lr: 0.002851
2022-07-08 02:51:59.985533: This epoch took 78.227662 s

2022-07-08 02:52:00.022166: 
epoch:  376
2022-07-08 02:53:11.336426: train loss : -0.9065
2022-07-08 02:53:16.463239: validation loss: -0.7690
2022-07-08 02:53:16.493209: Average global foreground Dice: [0.8344]
2022-07-08 02:53:16.522993: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:53:17.276172: Suus1 maybe_update_lr lr: 0.00283
2022-07-08 02:53:17.297901: This epoch took 77.273379 s

2022-07-08 02:53:17.330884: 
epoch:  377
2022-07-08 02:54:30.134163: train loss : -0.9071
2022-07-08 02:54:35.306882: validation loss: -0.7747
2022-07-08 02:54:35.332767: Average global foreground Dice: [0.8303]
2022-07-08 02:54:35.345964: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:54:36.145502: Suus1 maybe_update_lr lr: 0.00281
2022-07-08 02:54:36.178944: This epoch took 78.826085 s

2022-07-08 02:54:36.209141: 
epoch:  378
2022-07-08 02:55:47.634277: train loss : -0.9101
2022-07-08 02:55:52.793132: validation loss: -0.7734
2022-07-08 02:55:52.825491: Average global foreground Dice: [0.8318]
2022-07-08 02:55:52.855876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:55:53.512175: Suus1 maybe_update_lr lr: 0.002789
2022-07-08 02:55:53.533231: This epoch took 77.303980 s

2022-07-08 02:55:53.541979: 
epoch:  379
2022-07-08 02:57:04.923140: train loss : -0.9106
2022-07-08 02:57:09.789827: validation loss: -0.7597
2022-07-08 02:57:09.793847: Average global foreground Dice: [0.8262]
2022-07-08 02:57:09.815044: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:57:10.406782: Suus1 maybe_update_lr lr: 0.002768
2022-07-08 02:57:10.415899: This epoch took 76.871927 s

2022-07-08 02:57:10.424040: 
epoch:  380
2022-07-08 02:58:23.663049: train loss : -0.9114
2022-07-08 02:58:28.748973: validation loss: -0.7769
2022-07-08 02:58:28.780318: Average global foreground Dice: [0.8359]
2022-07-08 02:58:28.792874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:58:29.467293: Suus1 maybe_update_lr lr: 0.002747
2022-07-08 02:58:29.494865: This epoch took 79.059523 s

2022-07-08 02:58:29.515916: 
epoch:  381
2022-07-08 02:59:41.258940: train loss : -0.9137
2022-07-08 02:59:45.913910: validation loss: -0.7784
2022-07-08 02:59:45.949457: Average global foreground Dice: [0.8409]
2022-07-08 02:59:45.975210: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:59:46.778510: Suus1 maybe_update_lr lr: 0.002727
2022-07-08 02:59:46.797916: This epoch took 77.260059 s

2022-07-08 02:59:46.819874: 
epoch:  382
2022-07-08 03:00:58.881340: train loss : -0.9128
2022-07-08 03:01:04.161502: validation loss: -0.7813
2022-07-08 03:01:04.172291: Average global foreground Dice: [0.8403]
2022-07-08 03:01:04.203073: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:01:04.781301: Suus1 maybe_update_lr lr: 0.002706
2022-07-08 03:01:04.800933: This epoch took 77.959059 s

2022-07-08 03:01:04.824853: 
epoch:  383
2022-07-08 03:02:16.249805: train loss : -0.9131
2022-07-08 03:02:21.169775: validation loss: -0.7842
2022-07-08 03:02:21.174039: Average global foreground Dice: [0.8471]
2022-07-08 03:02:21.190597: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:02:22.114774: Suus1 maybe_update_lr lr: 0.002685
2022-07-08 03:02:22.138447: This epoch took 77.290579 s

2022-07-08 03:02:22.153208: 
epoch:  384
2022-07-08 03:03:33.265314: train loss : -0.9139
2022-07-08 03:03:38.184921: validation loss: -0.7787
2022-07-08 03:03:38.213279: Average global foreground Dice: [0.8368]
2022-07-08 03:03:38.233897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:03:38.955124: Suus1 maybe_update_lr lr: 0.002664
2022-07-08 03:03:38.986932: This epoch took 76.808815 s

2022-07-08 03:03:39.005213: 
epoch:  385
2022-07-08 03:04:51.787090: train loss : -0.9107
2022-07-08 03:04:57.310922: validation loss: -0.7695
2022-07-08 03:04:57.344446: Average global foreground Dice: [0.833]
2022-07-08 03:04:57.360873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:04:58.072057: Suus1 maybe_update_lr lr: 0.002643
2022-07-08 03:04:58.101922: This epoch took 79.078043 s

2022-07-08 03:04:58.121127: 
epoch:  386
2022-07-08 03:06:08.127733: train loss : -0.9103
2022-07-08 03:06:13.523842: validation loss: -0.7859
2022-07-08 03:06:13.551919: Average global foreground Dice: [0.8448]
2022-07-08 03:06:13.566833: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:06:14.151350: Suus1 maybe_update_lr lr: 0.002622
2022-07-08 03:06:14.170148: This epoch took 76.022988 s

2022-07-08 03:06:14.199994: 
epoch:  387
2022-07-08 03:07:25.255344: train loss : -0.9148
2022-07-08 03:07:30.661012: validation loss: -0.7727
2022-07-08 03:07:30.682494: Average global foreground Dice: [0.8329]
2022-07-08 03:07:30.711981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:07:31.237416: Suus1 maybe_update_lr lr: 0.002601
2022-07-08 03:07:31.256922: This epoch took 77.035498 s

2022-07-08 03:07:31.280855: 
epoch:  388
2022-07-08 03:08:43.487741: train loss : -0.9160
2022-07-08 03:08:48.849880: validation loss: -0.7772
2022-07-08 03:08:48.884484: Average global foreground Dice: [0.844]
2022-07-08 03:08:48.905157: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:08:49.618695: Suus1 maybe_update_lr lr: 0.002581
2022-07-08 03:08:49.644579: This epoch took 78.358290 s

2022-07-08 03:08:49.675003: 
epoch:  389
2022-07-08 03:10:00.016273: train loss : -0.9153
2022-07-08 03:10:05.144695: validation loss: -0.8002
2022-07-08 03:10:05.154738: Average global foreground Dice: [0.855]
2022-07-08 03:10:05.180992: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:10:05.981297: Suus1 maybe_update_lr lr: 0.00256
2022-07-08 03:10:06.000900: This epoch took 76.297922 s

2022-07-08 03:10:06.033853: 
epoch:  390
2022-07-08 03:11:16.295134: train loss : -0.9153
2022-07-08 03:11:21.959564: validation loss: -0.7583
2022-07-08 03:11:22.023220: Average global foreground Dice: [0.8263]
2022-07-08 03:11:22.055877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:11:22.814598: Suus1 maybe_update_lr lr: 0.002539
2022-07-08 03:11:22.842687: This epoch took 76.786820 s

2022-07-08 03:11:22.863974: 
epoch:  391
2022-07-08 03:12:33.781934: train loss : -0.9133
2022-07-08 03:12:38.923318: validation loss: -0.7852
2022-07-08 03:12:38.950570: Average global foreground Dice: [0.8395]
2022-07-08 03:12:38.993848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:12:39.881309: Suus1 maybe_update_lr lr: 0.002518
2022-07-08 03:12:39.900918: This epoch took 76.993051 s

2022-07-08 03:12:39.922870: 
epoch:  392
2022-07-08 03:13:51.215676: train loss : -0.9150
2022-07-08 03:13:56.411809: validation loss: -0.7892
2022-07-08 03:13:56.456248: Average global foreground Dice: [0.8432]
2022-07-08 03:13:56.474530: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:13:57.163665: Suus1 maybe_update_lr lr: 0.002497
2022-07-08 03:13:57.173851: This epoch took 77.228985 s

2022-07-08 03:13:57.190879: 
epoch:  393
2022-07-08 03:15:08.745301: train loss : -0.9157
2022-07-08 03:15:13.611196: validation loss: -0.7520
2022-07-08 03:15:13.655988: Average global foreground Dice: [0.8185]
2022-07-08 03:15:13.662388: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:15:14.364224: Suus1 maybe_update_lr lr: 0.002476
2022-07-08 03:15:14.383884: This epoch took 77.172610 s

2022-07-08 03:15:14.405857: 
epoch:  394
2022-07-08 03:16:26.098492: train loss : -0.9152
2022-07-08 03:16:31.126894: validation loss: -0.7779
2022-07-08 03:16:31.148398: Average global foreground Dice: [0.8387]
2022-07-08 03:16:31.168146: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:16:31.974068: Suus1 maybe_update_lr lr: 0.002455
2022-07-08 03:16:31.994941: This epoch took 77.563852 s

2022-07-08 03:16:32.017902: 
epoch:  395
2022-07-08 03:17:42.194985: train loss : -0.9153
2022-07-08 03:17:47.258722: validation loss: -0.7844
2022-07-08 03:17:47.308314: Average global foreground Dice: [0.84]
2022-07-08 03:17:47.323316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:17:48.000483: Suus1 maybe_update_lr lr: 0.002434
2022-07-08 03:17:48.019692: This epoch took 75.991073 s

2022-07-08 03:17:48.046181: 
epoch:  396
2022-07-08 03:18:59.304627: train loss : -0.9170
2022-07-08 03:19:04.417359: validation loss: -0.7910
2022-07-08 03:19:04.446338: Average global foreground Dice: [0.8437]
2022-07-08 03:19:04.465877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:19:05.271140: Suus1 maybe_update_lr lr: 0.002413
2022-07-08 03:19:05.297234: This epoch took 77.229375 s

2022-07-08 03:19:05.318867: 
epoch:  397
2022-07-08 03:20:16.396147: train loss : -0.9171
2022-07-08 03:20:21.796791: validation loss: -0.7898
2022-07-08 03:20:21.848251: Average global foreground Dice: [0.8455]
2022-07-08 03:20:21.870685: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:20:22.536174: Suus1 maybe_update_lr lr: 0.002391
2022-07-08 03:20:22.554574: This epoch took 77.215425 s

2022-07-08 03:20:22.567932: 
epoch:  398
2022-07-08 03:21:33.868669: train loss : -0.9167
2022-07-08 03:21:38.593855: validation loss: -0.7714
2022-07-08 03:21:38.629307: Average global foreground Dice: [0.8314]
2022-07-08 03:21:38.658102: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:21:39.521652: Suus1 maybe_update_lr lr: 0.00237
2022-07-08 03:21:39.540896: This epoch took 76.968020 s

2022-07-08 03:21:39.559377: 
epoch:  399
2022-07-08 03:22:50.016908: train loss : -0.9158
2022-07-08 03:22:54.868260: validation loss: -0.7746
2022-07-08 03:22:54.910744: Average global foreground Dice: [0.8382]
2022-07-08 03:22:54.927120: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:22:55.583171: Suus1 maybe_update_lr lr: 0.002349
2022-07-08 03:22:55.616884: saving scheduled checkpoint file...
2022-07-08 03:22:55.759873: saving checkpoint...
2022-07-08 03:22:57.439545: done, saving took 1.80 seconds
2022-07-08 03:22:57.456745: done
2022-07-08 03:22:57.459189: This epoch took 77.877182 s

2022-07-08 03:22:57.461810: 
epoch:  400
2022-07-08 03:24:07.534823: train loss : -0.9130
2022-07-08 03:24:12.327999: validation loss: -0.7617
2022-07-08 03:24:12.338882: Average global foreground Dice: [0.8208]
2022-07-08 03:24:12.341154: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:24:13.327083: Suus1 maybe_update_lr lr: 0.002328
2022-07-08 03:24:13.332037: This epoch took 75.867671 s

2022-07-08 03:24:13.358869: 
epoch:  401
2022-07-08 03:25:22.863790: train loss : -0.9155
2022-07-08 03:25:27.669907: validation loss: -0.7866
2022-07-08 03:25:27.682776: Average global foreground Dice: [0.8377]
2022-07-08 03:25:27.684867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:25:28.517210: Suus1 maybe_update_lr lr: 0.002307
2022-07-08 03:25:28.536905: This epoch took 75.156028 s

2022-07-08 03:25:28.557849: 
epoch:  402
2022-07-08 03:26:39.244127: train loss : -0.9121
2022-07-08 03:26:44.215057: validation loss: -0.7842
2022-07-08 03:26:44.227757: Average global foreground Dice: [0.8387]
2022-07-08 03:26:44.239254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:26:45.019109: Suus1 maybe_update_lr lr: 0.002286
2022-07-08 03:26:45.045762: This epoch took 76.474173 s

2022-07-08 03:26:45.066116: 
epoch:  403
2022-07-08 03:27:57.009612: train loss : -0.9164
2022-07-08 03:28:01.903784: validation loss: -0.7925
2022-07-08 03:28:01.936455: Average global foreground Dice: [0.8482]
2022-07-08 03:28:01.941717: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:28:02.735987: Suus1 maybe_update_lr lr: 0.002264
2022-07-08 03:28:02.755912: This epoch took 77.674033 s

2022-07-08 03:28:02.777853: 
epoch:  404
2022-07-08 03:29:13.953212: train loss : -0.9133
2022-07-08 03:29:18.857280: validation loss: -0.7601
2022-07-08 03:29:18.897295: Average global foreground Dice: [0.8239]
2022-07-08 03:29:18.920879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:29:19.579309: Suus1 maybe_update_lr lr: 0.002243
2022-07-08 03:29:19.603927: This epoch took 76.799064 s

2022-07-08 03:29:19.614350: 
epoch:  405
2022-07-08 03:30:31.969118: train loss : -0.9146
2022-07-08 03:30:37.040431: validation loss: -0.7762
2022-07-08 03:30:37.073263: Average global foreground Dice: [0.8369]
2022-07-08 03:30:37.102597: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:30:37.845846: Suus1 maybe_update_lr lr: 0.002222
2022-07-08 03:30:37.859520: This epoch took 78.220492 s

2022-07-08 03:30:37.894125: 
epoch:  406
2022-07-08 03:31:49.667048: train loss : -0.9155
2022-07-08 03:31:54.522654: validation loss: -0.7518
2022-07-08 03:31:54.554617: Average global foreground Dice: [0.8197]
2022-07-08 03:31:54.572885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:31:55.277513: Suus1 maybe_update_lr lr: 0.002201
2022-07-08 03:31:55.285603: This epoch took 77.376737 s

2022-07-08 03:31:55.287788: 
epoch:  407
2022-07-08 03:33:07.120400: train loss : -0.9156
2022-07-08 03:33:12.305143: validation loss: -0.7684
2022-07-08 03:33:12.327922: Average global foreground Dice: [0.8275]
2022-07-08 03:33:12.353861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:33:13.140057: Suus1 maybe_update_lr lr: 0.002179
2022-07-08 03:33:13.169920: This epoch took 77.836060 s

2022-07-08 03:33:13.202865: 
epoch:  408
2022-07-08 03:34:24.517423: train loss : -0.9176
2022-07-08 03:34:29.701767: validation loss: -0.7658
2022-07-08 03:34:29.720254: Average global foreground Dice: [0.834]
2022-07-08 03:34:29.728873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:34:30.388214: Suus1 maybe_update_lr lr: 0.002158
2022-07-08 03:34:30.395684: This epoch took 77.170735 s

2022-07-08 03:34:30.424222: 
epoch:  409
2022-07-08 03:35:41.681372: train loss : -0.9173
2022-07-08 03:35:46.354537: validation loss: -0.7746
2022-07-08 03:35:46.428336: Average global foreground Dice: [0.8335]
2022-07-08 03:35:46.453192: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:35:47.279058: Suus1 maybe_update_lr lr: 0.002137
2022-07-08 03:35:47.298921: This epoch took 76.854578 s

2022-07-08 03:35:47.314038: 
epoch:  410
2022-07-08 03:36:58.648581: train loss : -0.9180
2022-07-08 03:37:03.707917: validation loss: -0.7648
2022-07-08 03:37:03.731589: Average global foreground Dice: [0.8235]
2022-07-08 03:37:03.733688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:37:04.514632: Suus1 maybe_update_lr lr: 0.002115
2022-07-08 03:37:04.534904: This epoch took 77.203034 s

2022-07-08 03:37:04.550971: 
epoch:  411
2022-07-08 03:38:17.971781: train loss : -0.9159
2022-07-08 03:38:22.639404: validation loss: -0.7689
2022-07-08 03:38:22.670545: Average global foreground Dice: [0.8285]
2022-07-08 03:38:22.687877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:38:23.325380: Suus1 maybe_update_lr lr: 0.002094
2022-07-08 03:38:23.344910: This epoch took 78.790961 s

2022-07-08 03:38:23.354583: 
epoch:  412
2022-07-08 03:39:34.699493: train loss : -0.9150
2022-07-08 03:39:39.491974: validation loss: -0.7582
2022-07-08 03:39:39.523721: Average global foreground Dice: [0.8177]
2022-07-08 03:39:39.540070: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:39:40.199058: Suus1 maybe_update_lr lr: 0.002072
2022-07-08 03:39:40.229927: This epoch took 76.854797 s

2022-07-08 03:39:40.251856: 
epoch:  413
2022-07-08 03:40:51.000334: train loss : -0.9196
2022-07-08 03:40:55.916529: validation loss: -0.7600
2022-07-08 03:40:55.957206: Average global foreground Dice: [0.8286]
2022-07-08 03:40:55.969893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:40:56.635877: Suus1 maybe_update_lr lr: 0.002051
2022-07-08 03:40:56.666944: This epoch took 76.388063 s

2022-07-08 03:40:56.693851: 
epoch:  414
2022-07-08 03:42:07.756050: train loss : -0.9195
2022-07-08 03:42:12.609577: validation loss: -0.7654
2022-07-08 03:42:12.641346: Average global foreground Dice: [0.8297]
2022-07-08 03:42:12.671881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:42:13.305451: Suus1 maybe_update_lr lr: 0.00203
2022-07-08 03:42:13.316303: This epoch took 76.592429 s

2022-07-08 03:42:13.328743: 
epoch:  415
2022-07-08 03:43:27.434403: train loss : -0.9179
2022-07-08 03:43:32.451995: validation loss: -0.7888
2022-07-08 03:43:32.468411: Average global foreground Dice: [0.8461]
2022-07-08 03:43:32.488695: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:43:33.233035: Suus1 maybe_update_lr lr: 0.002008
2022-07-08 03:43:33.261027: This epoch took 79.907390 s

2022-07-08 03:43:33.282298: 
epoch:  416
2022-07-08 03:44:44.066008: train loss : -0.9199
2022-07-08 03:44:49.403390: validation loss: -0.7985
2022-07-08 03:44:49.430119: Average global foreground Dice: [0.8534]
2022-07-08 03:44:49.451884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:44:50.184876: Suus1 maybe_update_lr lr: 0.001987
2022-07-08 03:44:50.204923: This epoch took 76.885052 s

2022-07-08 03:44:50.226853: 
epoch:  417
2022-07-08 03:46:00.710194: train loss : -0.9216
2022-07-08 03:46:05.774378: validation loss: -0.7843
2022-07-08 03:46:05.793470: Average global foreground Dice: [0.8421]
2022-07-08 03:46:05.826878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:46:06.444917: Suus1 maybe_update_lr lr: 0.001965
2022-07-08 03:46:06.486920: This epoch took 76.237962 s

2022-07-08 03:46:06.498420: 
epoch:  418
2022-07-08 03:47:17.842359: train loss : -0.9211
2022-07-08 03:47:22.947715: validation loss: -0.7857
2022-07-08 03:47:22.992320: Average global foreground Dice: [0.8433]
2022-07-08 03:47:23.020320: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:47:23.652652: Suus1 maybe_update_lr lr: 0.001943
2022-07-08 03:47:23.671936: This epoch took 77.152062 s

2022-07-08 03:47:23.690214: 
epoch:  419
2022-07-08 03:48:34.663768: train loss : -0.9201
2022-07-08 03:48:39.662066: validation loss: -0.7924
2022-07-08 03:48:39.693391: Average global foreground Dice: [0.8477]
2022-07-08 03:48:39.722303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:48:40.317338: Suus1 maybe_update_lr lr: 0.001922
2022-07-08 03:48:40.329727: This epoch took 76.615849 s

2022-07-08 03:48:40.332010: 
epoch:  420
2022-07-08 03:49:50.565669: train loss : -0.9206
2022-07-08 03:49:55.479979: validation loss: -0.7743
2022-07-08 03:49:55.507191: Average global foreground Dice: [0.8338]
2022-07-08 03:49:55.530854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:49:56.107204: Suus1 maybe_update_lr lr: 0.0019
2022-07-08 03:49:56.150928: This epoch took 75.816700 s

2022-07-08 03:49:56.170679: 
epoch:  421
2022-07-08 03:51:05.662231: train loss : -0.9221
2022-07-08 03:51:10.694181: validation loss: -0.7830
2022-07-08 03:51:10.722352: Average global foreground Dice: [0.8441]
2022-07-08 03:51:10.727730: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:51:11.503087: Suus1 maybe_update_lr lr: 0.001879
2022-07-08 03:51:11.522926: This epoch took 75.341480 s

2022-07-08 03:51:11.544859: 
epoch:  422
2022-07-08 03:52:22.043181: train loss : -0.9219
2022-07-08 03:52:26.914036: validation loss: -0.7597
2022-07-08 03:52:26.917751: Average global foreground Dice: [0.8316]
2022-07-08 03:52:26.930876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:52:27.699455: Suus1 maybe_update_lr lr: 0.001857
2022-07-08 03:52:27.718920: This epoch took 76.152042 s

2022-07-08 03:52:27.737280: 
epoch:  423
2022-07-08 03:53:37.951950: train loss : -0.9222
2022-07-08 03:53:42.864594: validation loss: -0.7812
2022-07-08 03:53:42.873099: Average global foreground Dice: [0.8423]
2022-07-08 03:53:42.883941: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:53:43.596673: Suus1 maybe_update_lr lr: 0.001835
2022-07-08 03:53:43.626290: This epoch took 75.874417 s

2022-07-08 03:53:43.646301: 
epoch:  424
2022-07-08 03:54:53.482333: train loss : -0.9206
2022-07-08 03:54:58.070731: validation loss: -0.7929
2022-07-08 03:54:58.106631: Average global foreground Dice: [0.8499]
2022-07-08 03:54:58.110156: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:54:58.697772: Suus1 maybe_update_lr lr: 0.001813
2022-07-08 03:54:58.700379: This epoch took 75.041498 s

2022-07-08 03:54:58.702442: 
epoch:  425
2022-07-08 03:56:08.770225: train loss : -0.9207
2022-07-08 03:56:13.838573: validation loss: -0.7857
2022-07-08 03:56:13.871228: Average global foreground Dice: [0.8468]
2022-07-08 03:56:13.903965: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:56:14.859812: Suus1 maybe_update_lr lr: 0.001792
2022-07-08 03:56:14.867692: saving best epoch checkpoint...
2022-07-08 03:56:15.001605: saving checkpoint...
2022-07-08 03:56:16.463352: done, saving took 1.58 seconds
2022-07-08 03:56:16.479110: This epoch took 77.774725 s

2022-07-08 03:56:16.481302: 
epoch:  426
2022-07-08 03:57:28.846633: train loss : -0.9207
2022-07-08 03:57:33.835394: validation loss: -0.7955
2022-07-08 03:57:33.861306: Average global foreground Dice: [0.8488]
2022-07-08 03:57:33.873877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:57:34.518334: Suus1 maybe_update_lr lr: 0.00177
2022-07-08 03:57:34.547907: saving best epoch checkpoint...
2022-07-08 03:57:34.679440: saving checkpoint...
2022-07-08 03:57:36.319615: done, saving took 1.72 seconds
2022-07-08 03:57:36.335747: This epoch took 79.852408 s

2022-07-08 03:57:36.337916: 
epoch:  427
2022-07-08 03:58:46.985572: train loss : -0.9209
2022-07-08 03:58:51.985976: validation loss: -0.7807
2022-07-08 03:58:52.006881: Average global foreground Dice: [0.8425]
2022-07-08 03:58:52.018377: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:58:52.735779: Suus1 maybe_update_lr lr: 0.001748
2022-07-08 03:58:52.759064: saving best epoch checkpoint...
2022-07-08 03:58:52.873384: saving checkpoint...
2022-07-08 03:58:54.608054: done, saving took 1.83 seconds
2022-07-08 03:58:54.623037: This epoch took 78.282999 s

2022-07-08 03:58:54.624998: 
epoch:  428
2022-07-08 04:00:05.446775: train loss : -0.9223
2022-07-08 04:00:10.182703: validation loss: -0.7697
2022-07-08 04:00:10.209281: Average global foreground Dice: [0.8321]
2022-07-08 04:00:10.221896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:00:11.062876: Suus1 maybe_update_lr lr: 0.001726
2022-07-08 04:00:11.079199: This epoch took 76.452393 s

2022-07-08 04:00:11.082069: 
epoch:  429
2022-07-08 04:01:22.057457: train loss : -0.9226
2022-07-08 04:01:27.023258: validation loss: -0.7929
2022-07-08 04:01:27.068245: Average global foreground Dice: [0.8497]
2022-07-08 04:01:27.091890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:01:28.060119: Suus1 maybe_update_lr lr: 0.001704
2022-07-08 04:01:28.079908: saving best epoch checkpoint...
2022-07-08 04:01:28.204944: saving checkpoint...
2022-07-08 04:01:29.881758: done, saving took 1.79 seconds
2022-07-08 04:01:29.897570: This epoch took 78.796824 s

2022-07-08 04:01:29.900314: 
epoch:  430
2022-07-08 04:02:40.829253: train loss : -0.9218
2022-07-08 04:02:45.918271: validation loss: -0.7691
2022-07-08 04:02:45.944105: Average global foreground Dice: [0.8348]
2022-07-08 04:02:45.963917: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:02:46.780755: Suus1 maybe_update_lr lr: 0.001682
2022-07-08 04:02:46.801934: This epoch took 76.899264 s

2022-07-08 04:02:46.821989: 
epoch:  431
2022-07-08 04:03:58.351059: train loss : -0.9232
2022-07-08 04:04:03.495769: validation loss: -0.7784
2022-07-08 04:04:03.527387: Average global foreground Dice: [0.8386]
2022-07-08 04:04:03.544900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:04:04.230287: Suus1 maybe_update_lr lr: 0.00166
2022-07-08 04:04:04.249900: This epoch took 77.413146 s

2022-07-08 04:04:04.284998: 
epoch:  432
2022-07-08 04:05:15.066051: train loss : -0.9206
2022-07-08 04:05:20.712096: validation loss: -0.7689
2022-07-08 04:05:20.789323: Average global foreground Dice: [0.8362]
2022-07-08 04:05:20.810886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:05:21.568277: Suus1 maybe_update_lr lr: 0.001638
2022-07-08 04:05:21.579049: This epoch took 77.261181 s

2022-07-08 04:05:21.581649: 
epoch:  433
2022-07-08 04:06:33.105649: train loss : -0.9214
2022-07-08 04:06:38.263496: validation loss: -0.7842
2022-07-08 04:06:38.291563: Average global foreground Dice: [0.8449]
2022-07-08 04:06:38.314581: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:06:39.004213: Suus1 maybe_update_lr lr: 0.001616
2022-07-08 04:06:39.040427: This epoch took 77.440179 s

2022-07-08 04:06:39.058115: 
epoch:  434
2022-07-08 04:07:49.166498: train loss : -0.9222
2022-07-08 04:07:53.899675: validation loss: -0.7757
2022-07-08 04:07:53.933697: Average global foreground Dice: [0.8346]
2022-07-08 04:07:53.954027: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:07:54.670244: Suus1 maybe_update_lr lr: 0.001594
2022-07-08 04:07:54.684639: This epoch took 75.608631 s

2022-07-08 04:07:54.692707: 
epoch:  435
2022-07-08 04:09:05.926090: train loss : -0.9225
2022-07-08 04:09:11.035088: validation loss: -0.7889
2022-07-08 04:09:11.056152: Average global foreground Dice: [0.8485]
2022-07-08 04:09:11.060478: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:09:11.771952: Suus1 maybe_update_lr lr: 0.001572
2022-07-08 04:09:11.790901: This epoch took 77.070042 s

2022-07-08 04:09:11.809785: 
epoch:  436
2022-07-08 04:10:21.541337: train loss : -0.9226
2022-07-08 04:10:26.517107: validation loss: -0.7948
2022-07-08 04:10:26.556253: Average global foreground Dice: [0.8483]
2022-07-08 04:10:26.588903: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:10:27.278141: Suus1 maybe_update_lr lr: 0.00155
2022-07-08 04:10:27.294571: saving best epoch checkpoint...
2022-07-08 04:10:27.381856: saving checkpoint...
2022-07-08 04:10:28.988172: done, saving took 1.69 seconds
2022-07-08 04:10:29.004525: This epoch took 77.174574 s

2022-07-08 04:10:29.006702: 
epoch:  437
2022-07-08 04:11:39.476743: train loss : -0.9244
2022-07-08 04:11:44.699073: validation loss: -0.7724
2022-07-08 04:11:44.706953: Average global foreground Dice: [0.8346]
2022-07-08 04:11:44.709844: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:11:45.458592: Suus1 maybe_update_lr lr: 0.001528
2022-07-08 04:11:45.479937: This epoch took 76.471234 s

2022-07-08 04:11:45.495557: 
epoch:  438
2022-07-08 04:12:58.098045: train loss : -0.9224
2022-07-08 04:13:03.919444: validation loss: -0.7597
2022-07-08 04:13:03.955296: Average global foreground Dice: [0.8248]
2022-07-08 04:13:03.969866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:13:04.693923: Suus1 maybe_update_lr lr: 0.001506
2022-07-08 04:13:04.724906: This epoch took 79.212992 s

2022-07-08 04:13:04.746862: 
epoch:  439
2022-07-08 04:14:16.648285: train loss : -0.9236
2022-07-08 04:14:21.843296: validation loss: -0.7630
2022-07-08 04:14:21.861622: Average global foreground Dice: [0.8291]
2022-07-08 04:14:21.887861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:14:22.593103: Suus1 maybe_update_lr lr: 0.001483
2022-07-08 04:14:22.621917: This epoch took 77.842053 s

2022-07-08 04:14:22.629282: 
epoch:  440
2022-07-08 04:15:34.265841: train loss : -0.9252
2022-07-08 04:15:39.914385: validation loss: -0.7701
2022-07-08 04:15:39.945268: Average global foreground Dice: [0.831]
2022-07-08 04:15:39.976153: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:15:40.715466: Suus1 maybe_update_lr lr: 0.001461
2022-07-08 04:15:40.725784: This epoch took 78.086578 s

2022-07-08 04:15:40.728811: 
epoch:  441
2022-07-08 04:16:51.625285: train loss : -0.9252
2022-07-08 04:16:56.610148: validation loss: -0.7841
2022-07-08 04:16:56.665915: Average global foreground Dice: [0.8402]
2022-07-08 04:16:56.687983: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:16:57.447170: Suus1 maybe_update_lr lr: 0.001439
2022-07-08 04:16:57.474054: This epoch took 76.729130 s

2022-07-08 04:16:57.495859: 
epoch:  442
2022-07-08 04:18:09.545309: train loss : -0.9234
2022-07-08 04:18:14.378377: validation loss: -0.7734
2022-07-08 04:18:14.407299: Average global foreground Dice: [0.8392]
2022-07-08 04:18:14.439884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:18:15.093058: Suus1 maybe_update_lr lr: 0.001416
2022-07-08 04:18:15.121246: This epoch took 77.605175 s

2022-07-08 04:18:15.149599: 
epoch:  443
2022-07-08 04:19:26.889835: train loss : -0.9217
2022-07-08 04:19:31.705312: validation loss: -0.7768
2022-07-08 04:19:31.735157: Average global foreground Dice: [0.842]
2022-07-08 04:19:31.765885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:19:32.396868: Suus1 maybe_update_lr lr: 0.001394
2022-07-08 04:19:32.416907: This epoch took 77.226029 s

2022-07-08 04:19:32.449840: 
epoch:  444
2022-07-08 04:20:42.936388: train loss : -0.9249
2022-07-08 04:20:48.127921: validation loss: -0.7718
2022-07-08 04:20:48.161294: Average global foreground Dice: [0.8358]
2022-07-08 04:20:48.190122: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:20:48.929070: Suus1 maybe_update_lr lr: 0.001372
2022-07-08 04:20:48.948900: This epoch took 76.467045 s

2022-07-08 04:20:48.975866: 
epoch:  445
2022-07-08 04:21:59.723636: train loss : -0.9244
2022-07-08 04:22:04.791804: validation loss: -0.7633
2022-07-08 04:22:04.829289: Average global foreground Dice: [0.8313]
2022-07-08 04:22:04.855878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:22:05.492999: Suus1 maybe_update_lr lr: 0.001349
2022-07-08 04:22:05.512894: This epoch took 76.534685 s

2022-07-08 04:22:05.539877: 
epoch:  446
2022-07-08 04:23:15.578545: train loss : -0.9252
2022-07-08 04:23:20.850930: validation loss: -0.7869
2022-07-08 04:23:20.855242: Average global foreground Dice: [0.8465]
2022-07-08 04:23:20.880930: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:23:21.639971: Suus1 maybe_update_lr lr: 0.001327
2022-07-08 04:23:21.659905: This epoch took 76.096877 s

2022-07-08 04:23:21.681857: 
epoch:  447
2022-07-08 04:24:32.061017: train loss : -0.9262
2022-07-08 04:24:37.433132: validation loss: -0.7879
2022-07-08 04:24:37.445879: Average global foreground Dice: [0.8492]
2022-07-08 04:24:37.468400: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:24:38.210490: Suus1 maybe_update_lr lr: 0.001304
2022-07-08 04:24:38.221282: This epoch took 76.517408 s

2022-07-08 04:24:38.241872: 
epoch:  448
2022-07-08 04:25:50.778105: train loss : -0.9254
2022-07-08 04:25:56.051337: validation loss: -0.7757
2022-07-08 04:25:56.082685: Average global foreground Dice: [0.8407]
2022-07-08 04:25:56.102517: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:25:56.816380: Suus1 maybe_update_lr lr: 0.001282
2022-07-08 04:25:56.837050: This epoch took 78.562181 s

2022-07-08 04:25:56.857090: 
epoch:  449
2022-07-08 04:27:08.806657: train loss : -0.9247
2022-07-08 04:27:13.530717: validation loss: -0.7636
2022-07-08 04:27:13.562350: Average global foreground Dice: [0.8318]
2022-07-08 04:27:13.601924: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:27:14.285148: Suus1 maybe_update_lr lr: 0.001259
2022-07-08 04:27:14.305767: saving scheduled checkpoint file...
2022-07-08 04:27:14.385383: saving checkpoint...
2022-07-08 04:27:16.009469: done, saving took 1.68 seconds
2022-07-08 04:27:16.024678: done
2022-07-08 04:27:16.026721: This epoch took 79.149523 s

2022-07-08 04:27:16.028680: 
epoch:  450
2022-07-08 04:28:26.399042: train loss : -0.9256
2022-07-08 04:28:31.371822: validation loss: -0.7788
2022-07-08 04:28:31.399404: Average global foreground Dice: [0.8384]
2022-07-08 04:28:31.424383: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:28:32.331462: Suus1 maybe_update_lr lr: 0.001236
2022-07-08 04:28:32.355598: This epoch took 76.324826 s

2022-07-08 04:28:32.357720: 
epoch:  451
2022-07-08 04:29:43.574961: train loss : -0.9263
2022-07-08 04:29:48.076509: validation loss: -0.7729
2022-07-08 04:29:48.114310: Average global foreground Dice: [0.8371]
2022-07-08 04:29:48.132135: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:29:48.778146: Suus1 maybe_update_lr lr: 0.001214
2022-07-08 04:29:48.802246: This epoch took 76.442272 s

2022-07-08 04:29:48.816805: 
epoch:  452
2022-07-08 04:31:01.469574: train loss : -0.9265
2022-07-08 04:31:07.125588: validation loss: -0.7762
2022-07-08 04:31:07.166257: Average global foreground Dice: [0.8401]
2022-07-08 04:31:07.181688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:31:08.033098: Suus1 maybe_update_lr lr: 0.001191
2022-07-08 04:31:08.063943: This epoch took 79.237038 s

2022-07-08 04:31:08.096862: 
epoch:  453
2022-07-08 04:32:18.800080: train loss : -0.9271
2022-07-08 04:32:23.544273: validation loss: -0.7773
2022-07-08 04:32:23.616290: Average global foreground Dice: [0.8359]
2022-07-08 04:32:23.631915: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:32:24.208863: Suus1 maybe_update_lr lr: 0.001168
2022-07-08 04:32:24.233932: This epoch took 76.113940 s

2022-07-08 04:32:24.256302: 
epoch:  454
2022-07-08 04:33:36.610282: train loss : -0.9260
2022-07-08 04:33:41.371649: validation loss: -0.7696
2022-07-08 04:33:41.403677: Average global foreground Dice: [0.8344]
2022-07-08 04:33:41.423464: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:33:42.105088: Suus1 maybe_update_lr lr: 0.001145
2022-07-08 04:33:42.129629: This epoch took 77.845281 s

2022-07-08 04:33:42.158987: 
epoch:  455
2022-07-08 04:34:52.854229: train loss : -0.9279
2022-07-08 04:34:58.040720: validation loss: -0.7699
2022-07-08 04:34:58.084254: Average global foreground Dice: [0.839]
2022-07-08 04:34:58.096860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:34:58.922785: Suus1 maybe_update_lr lr: 0.001122
2022-07-08 04:34:58.960022: This epoch took 76.760808 s

2022-07-08 04:34:58.969463: 
epoch:  456
2022-07-08 04:36:10.409731: train loss : -0.9272
2022-07-08 04:36:15.599417: validation loss: -0.7583
2022-07-08 04:36:15.611026: Average global foreground Dice: [0.8271]
2022-07-08 04:36:15.613215: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:36:16.187130: Suus1 maybe_update_lr lr: 0.001099
2022-07-08 04:36:16.206925: This epoch took 77.214631 s

2022-07-08 04:36:16.228858: 
epoch:  457
2022-07-08 04:37:27.204691: train loss : -0.9281
2022-07-08 04:37:32.500251: validation loss: -0.7538
2022-07-08 04:37:32.532494: Average global foreground Dice: [0.8212]
2022-07-08 04:37:32.552266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:37:33.133937: Suus1 maybe_update_lr lr: 0.001076
2022-07-08 04:37:33.161915: This epoch took 76.901040 s

2022-07-08 04:37:33.183859: 
epoch:  458
2022-07-08 04:38:44.617399: train loss : -0.9263
2022-07-08 04:38:50.946174: validation loss: -0.7616
2022-07-08 04:38:50.959744: Average global foreground Dice: [0.8297]
2022-07-08 04:38:50.978216: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:38:51.554499: Suus1 maybe_update_lr lr: 0.001053
2022-07-08 04:38:51.567559: This epoch took 78.346693 s

2022-07-08 04:38:51.587873: 
epoch:  459
2022-07-08 04:40:04.197676: train loss : -0.9243
2022-07-08 04:40:09.885407: validation loss: -0.7857
2022-07-08 04:40:09.921273: Average global foreground Dice: [0.8426]
2022-07-08 04:40:09.934073: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:40:10.607174: Suus1 maybe_update_lr lr: 0.00103
2022-07-08 04:40:10.626952: This epoch took 79.032686 s

2022-07-08 04:40:10.652863: 
epoch:  460
2022-07-08 04:41:21.441603: train loss : -0.9278
2022-07-08 04:41:26.400829: validation loss: -0.7689
2022-07-08 04:41:26.446275: Average global foreground Dice: [0.8298]
2022-07-08 04:41:26.478864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:41:27.121247: Suus1 maybe_update_lr lr: 0.001007
2022-07-08 04:41:27.152034: This epoch took 76.483174 s

2022-07-08 04:41:27.171865: 
epoch:  461
2022-07-08 04:42:37.871811: train loss : -0.9269
2022-07-08 04:42:42.904494: validation loss: -0.7716
2022-07-08 04:42:42.948242: Average global foreground Dice: [0.8355]
2022-07-08 04:42:42.980874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:42:43.612057: Suus1 maybe_update_lr lr: 0.000983
2022-07-08 04:42:43.631933: This epoch took 76.442908 s

2022-07-08 04:42:43.653856: 
epoch:  462
2022-07-08 04:43:56.235237: train loss : -0.9249
2022-07-08 04:44:01.066890: validation loss: -0.7842
2022-07-08 04:44:01.092335: Average global foreground Dice: [0.8448]
2022-07-08 04:44:01.124884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:44:01.965319: Suus1 maybe_update_lr lr: 0.00096
2022-07-08 04:44:01.979063: This epoch took 78.303192 s

2022-07-08 04:44:01.995862: 
epoch:  463
2022-07-08 04:45:13.887281: train loss : -0.9272
2022-07-08 04:45:19.015949: validation loss: -0.7695
2022-07-08 04:45:19.058586: Average global foreground Dice: [0.8334]
2022-07-08 04:45:19.090868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:45:19.787783: Suus1 maybe_update_lr lr: 0.000937
2022-07-08 04:45:19.840451: This epoch took 77.825438 s

2022-07-08 04:45:19.852859: 
epoch:  464
2022-07-08 04:46:30.543870: train loss : -0.9276
2022-07-08 04:46:35.762786: validation loss: -0.7758
2022-07-08 04:46:35.785304: Average global foreground Dice: [0.8397]
2022-07-08 04:46:35.806855: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:46:36.379815: Suus1 maybe_update_lr lr: 0.000913
2022-07-08 04:46:36.401124: This epoch took 76.518736 s

2022-07-08 04:46:36.423854: 
epoch:  465
2022-07-08 04:47:48.955617: train loss : -0.9266
2022-07-08 04:47:54.489971: validation loss: -0.7778
2022-07-08 04:47:54.511010: Average global foreground Dice: [0.8412]
2022-07-08 04:47:54.534873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:47:55.170222: Suus1 maybe_update_lr lr: 0.00089
2022-07-08 04:47:55.198378: This epoch took 78.761783 s

2022-07-08 04:47:55.212077: 
epoch:  466
2022-07-08 04:49:06.645036: train loss : -0.9273
2022-07-08 04:49:12.009116: validation loss: -0.7568
2022-07-08 04:49:12.032212: Average global foreground Dice: [0.8335]
2022-07-08 04:49:12.041685: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:49:12.655151: Suus1 maybe_update_lr lr: 0.000866
2022-07-08 04:49:12.658132: This epoch took 77.393266 s

2022-07-08 04:49:12.661530: 
epoch:  467
2022-07-08 04:50:23.862873: train loss : -0.9264
2022-07-08 04:50:29.165706: validation loss: -0.7869
2022-07-08 04:50:29.210253: Average global foreground Dice: [0.8457]
2022-07-08 04:50:29.227863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:50:29.787177: Suus1 maybe_update_lr lr: 0.000842
2022-07-08 04:50:29.817918: This epoch took 77.133955 s

2022-07-08 04:50:29.832384: 
epoch:  468
2022-07-08 04:51:40.496333: train loss : -0.9283
2022-07-08 04:51:45.727941: validation loss: -0.7609
2022-07-08 04:51:45.757298: Average global foreground Dice: [0.8237]
2022-07-08 04:51:45.774874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:51:46.487876: Suus1 maybe_update_lr lr: 0.000819
2022-07-08 04:51:46.506888: This epoch took 76.663113 s

2022-07-08 04:51:46.525996: 
epoch:  469
2022-07-08 04:52:58.328658: train loss : -0.9272
2022-07-08 04:53:03.627434: validation loss: -0.7598
2022-07-08 04:53:03.664424: Average global foreground Dice: [0.8313]
2022-07-08 04:53:03.688302: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:53:04.360949: Suus1 maybe_update_lr lr: 0.000795
2022-07-08 04:53:04.380219: This epoch took 77.821350 s

2022-07-08 04:53:04.403851: 
epoch:  470
2022-07-08 04:54:15.794710: train loss : -0.9275
2022-07-08 04:54:20.324925: validation loss: -0.7782
2022-07-08 04:54:20.344049: Average global foreground Dice: [0.8405]
2022-07-08 04:54:20.350952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:54:21.188650: Suus1 maybe_update_lr lr: 0.000771
2022-07-08 04:54:21.208937: This epoch took 76.785059 s

2022-07-08 04:54:21.231862: 
epoch:  471
2022-07-08 04:55:31.782247: train loss : -0.9278
2022-07-08 04:55:36.626769: validation loss: -0.7711
2022-07-08 04:55:36.678324: Average global foreground Dice: [0.8325]
2022-07-08 04:55:36.698015: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:55:37.366422: Suus1 maybe_update_lr lr: 0.000747
2022-07-08 04:55:37.397079: This epoch took 76.143212 s

2022-07-08 04:55:37.417113: 
epoch:  472
2022-07-08 04:56:48.651001: train loss : -0.9284
2022-07-08 04:56:53.558509: validation loss: -0.7787
2022-07-08 04:56:53.589516: Average global foreground Dice: [0.8411]
2022-07-08 04:56:53.609113: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:56:54.430802: Suus1 maybe_update_lr lr: 0.000723
2022-07-08 04:56:54.439127: This epoch took 76.991266 s

2022-07-08 04:56:54.453223: 
epoch:  473
2022-07-08 04:58:05.396720: train loss : -0.9290
2022-07-08 04:58:10.340044: validation loss: -0.7779
2022-07-08 04:58:10.366223: Average global foreground Dice: [0.8396]
2022-07-08 04:58:10.381797: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:58:11.077740: Suus1 maybe_update_lr lr: 0.000699
2022-07-08 04:58:11.090900: This epoch took 76.621034 s

2022-07-08 04:58:11.097184: 
epoch:  474
2022-07-08 04:59:22.591943: train loss : -0.9298
2022-07-08 04:59:27.599061: validation loss: -0.7678
2022-07-08 04:59:27.632282: Average global foreground Dice: [0.8361]
2022-07-08 04:59:27.649873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:59:28.465096: Suus1 maybe_update_lr lr: 0.000675
2022-07-08 04:59:28.484931: This epoch took 77.364817 s

2022-07-08 04:59:28.506853: 
epoch:  475
2022-07-08 05:00:39.125553: train loss : -0.9288
2022-07-08 05:00:43.747982: validation loss: -0.7807
2022-07-08 05:00:43.772356: Average global foreground Dice: [0.8405]
2022-07-08 05:00:43.802876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:00:44.505751: Suus1 maybe_update_lr lr: 0.00065
2022-07-08 05:00:44.523270: This epoch took 75.994391 s

2022-07-08 05:00:44.553571: 
epoch:  476
2022-07-08 05:01:56.176831: train loss : -0.9282
2022-07-08 05:02:01.087293: validation loss: -0.7794
2022-07-08 05:02:01.110340: Average global foreground Dice: [0.8409]
2022-07-08 05:02:01.123739: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:02:01.807747: Suus1 maybe_update_lr lr: 0.000626
2022-07-08 05:02:01.829636: This epoch took 77.256760 s

2022-07-08 05:02:01.848855: 
epoch:  477
2022-07-08 05:03:14.005568: train loss : -0.9302
2022-07-08 05:03:18.692974: validation loss: -0.7813
2022-07-08 05:03:18.717835: Average global foreground Dice: [0.8397]
2022-07-08 05:03:18.725798: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:03:19.319927: Suus1 maybe_update_lr lr: 0.000601
2022-07-08 05:03:19.344902: This epoch took 77.473903 s

2022-07-08 05:03:19.366861: 
epoch:  478
2022-07-08 05:04:31.345885: train loss : -0.9282
2022-07-08 05:04:36.446110: validation loss: -0.7932
2022-07-08 05:04:36.475569: Average global foreground Dice: [0.8507]
2022-07-08 05:04:36.503882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:04:37.106342: Suus1 maybe_update_lr lr: 0.000577
2022-07-08 05:04:37.123463: This epoch took 77.727543 s

2022-07-08 05:04:37.144679: 
epoch:  479
2022-07-08 05:05:49.111192: train loss : -0.9287
2022-07-08 05:05:54.089803: validation loss: -0.8028
2022-07-08 05:05:54.127292: Average global foreground Dice: [0.8551]
2022-07-08 05:05:54.147731: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:05:54.860700: Suus1 maybe_update_lr lr: 0.000552
2022-07-08 05:05:54.876462: This epoch took 77.699370 s

2022-07-08 05:05:54.889140: 
epoch:  480
2022-07-08 05:07:06.447033: train loss : -0.9303
2022-07-08 05:07:11.497965: validation loss: -0.7725
2022-07-08 05:07:11.522303: Average global foreground Dice: [0.8313]
2022-07-08 05:07:11.542845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:07:12.262436: Suus1 maybe_update_lr lr: 0.000527
2022-07-08 05:07:12.290907: This epoch took 77.367535 s

2022-07-08 05:07:12.316850: 
epoch:  481
2022-07-08 05:08:23.348905: train loss : -0.9292
2022-07-08 05:08:28.219229: validation loss: -0.7659
2022-07-08 05:08:28.245236: Average global foreground Dice: [0.8271]
2022-07-08 05:08:28.268863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:08:28.909444: Suus1 maybe_update_lr lr: 0.000502
2022-07-08 05:08:28.937264: This epoch took 76.583303 s

2022-07-08 05:08:28.956855: 
epoch:  482
2022-07-08 05:09:40.737609: train loss : -0.9308
2022-07-08 05:09:45.435463: validation loss: -0.7689
2022-07-08 05:09:45.476205: Average global foreground Dice: [0.8358]
2022-07-08 05:09:45.488859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:09:46.250151: Suus1 maybe_update_lr lr: 0.000477
2022-07-08 05:09:46.280995: This epoch took 77.284853 s

2022-07-08 05:09:46.301737: 
epoch:  483
2022-07-08 05:10:56.475986: train loss : -0.9309
2022-07-08 05:11:01.197741: validation loss: -0.7877
2022-07-08 05:11:01.222246: Average global foreground Dice: [0.8462]
2022-07-08 05:11:01.252885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:11:02.000082: Suus1 maybe_update_lr lr: 0.000451
2022-07-08 05:11:02.020474: This epoch took 75.704474 s

2022-07-08 05:11:02.037857: 
epoch:  484
2022-07-08 05:12:13.131237: train loss : -0.9295
2022-07-08 05:12:18.116278: validation loss: -0.7741
2022-07-08 05:12:18.136738: Average global foreground Dice: [0.8326]
2022-07-08 05:12:18.163925: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:12:18.720150: Suus1 maybe_update_lr lr: 0.000426
2022-07-08 05:12:18.751930: This epoch took 76.707867 s

2022-07-08 05:12:18.784888: 
epoch:  485
2022-07-08 05:13:29.454813: train loss : -0.9299
2022-07-08 05:13:34.828395: validation loss: -0.7789
2022-07-08 05:13:34.855438: Average global foreground Dice: [0.843]
2022-07-08 05:13:34.881434: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:13:35.561842: Suus1 maybe_update_lr lr: 0.0004
2022-07-08 05:13:35.573751: This epoch took 76.756874 s

2022-07-08 05:13:35.585729: 
epoch:  486
2022-07-08 05:14:47.174057: train loss : -0.9317
2022-07-08 05:14:51.940426: validation loss: -0.7730
2022-07-08 05:14:51.980283: Average global foreground Dice: [0.8386]
2022-07-08 05:14:52.004688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:14:52.726768: Suus1 maybe_update_lr lr: 0.000375
2022-07-08 05:14:52.739483: This epoch took 77.146726 s

2022-07-08 05:14:52.759241: 
epoch:  487
2022-07-08 05:16:03.552866: train loss : -0.9313
2022-07-08 05:16:08.433755: validation loss: -0.7889
2022-07-08 05:16:08.466330: Average global foreground Dice: [0.8515]
2022-07-08 05:16:08.488024: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:16:09.278349: Suus1 maybe_update_lr lr: 0.000348
2022-07-08 05:16:09.282254: This epoch took 76.520652 s

2022-07-08 05:16:09.301881: 
epoch:  488
2022-07-08 05:17:20.447972: train loss : -0.9305
2022-07-08 05:17:25.679998: validation loss: -0.7687
2022-07-08 05:17:25.707944: Average global foreground Dice: [0.836]
2022-07-08 05:17:25.724682: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:17:26.349056: Suus1 maybe_update_lr lr: 0.000322
2022-07-08 05:17:26.379908: This epoch took 77.060738 s

2022-07-08 05:17:26.411861: 
epoch:  489
2022-07-08 05:18:37.424837: train loss : -0.9313
2022-07-08 05:18:42.729043: validation loss: -0.7765
2022-07-08 05:18:42.749733: Average global foreground Dice: [0.8425]
2022-07-08 05:18:42.752386: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:18:43.368961: Suus1 maybe_update_lr lr: 0.000296
2022-07-08 05:18:43.376541: This epoch took 76.942473 s

2022-07-08 05:18:43.381391: 
epoch:  490
2022-07-08 05:19:53.477805: train loss : -0.9307
2022-07-08 05:19:58.439948: validation loss: -0.7682
2022-07-08 05:19:58.482394: Average global foreground Dice: [0.8315]
2022-07-08 05:19:58.494868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:19:59.174556: Suus1 maybe_update_lr lr: 0.000269
2022-07-08 05:19:59.189296: This epoch took 75.777699 s

2022-07-08 05:19:59.209867: 
epoch:  491
2022-07-08 05:21:11.130497: train loss : -0.9297
2022-07-08 05:21:15.981026: validation loss: -0.7833
2022-07-08 05:21:16.021830: Average global foreground Dice: [0.8424]
2022-07-08 05:21:16.033868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:21:16.870961: Suus1 maybe_update_lr lr: 0.000242
2022-07-08 05:21:16.889917: This epoch took 77.675966 s

2022-07-08 05:21:16.910187: 
epoch:  492
2022-07-08 05:22:27.296199: train loss : -0.9317
2022-07-08 05:22:33.229348: validation loss: -0.7768
2022-07-08 05:22:33.257526: Average global foreground Dice: [0.8359]
2022-07-08 05:22:33.263456: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:22:33.976470: Suus1 maybe_update_lr lr: 0.000215
2022-07-08 05:22:33.993899: This epoch took 77.055017 s

2022-07-08 05:22:34.005323: 
epoch:  493
2022-07-08 05:23:45.022920: train loss : -0.9316
2022-07-08 05:23:49.793160: validation loss: -0.7840
2022-07-08 05:23:49.824652: Average global foreground Dice: [0.8418]
2022-07-08 05:23:49.836894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:23:50.516838: Suus1 maybe_update_lr lr: 0.000187
2022-07-08 05:23:50.546926: This epoch took 76.529641 s

2022-07-08 05:23:50.567355: 
epoch:  494
2022-07-08 05:25:01.753589: train loss : -0.9318
2022-07-08 05:25:06.452675: validation loss: -0.7782
2022-07-08 05:25:06.481289: Average global foreground Dice: [0.8397]
2022-07-08 05:25:06.524867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:25:07.183990: Suus1 maybe_update_lr lr: 0.000158
2022-07-08 05:25:07.203927: This epoch took 76.616383 s

2022-07-08 05:25:07.226873: 
epoch:  495
2022-07-08 05:26:19.146157: train loss : -0.9309
2022-07-08 05:26:24.594924: validation loss: -0.7543
2022-07-08 05:26:24.630244: Average global foreground Dice: [0.8215]
2022-07-08 05:26:24.651863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:26:25.266244: Suus1 maybe_update_lr lr: 0.00013
2022-07-08 05:26:25.292908: This epoch took 78.044028 s

2022-07-08 05:26:25.309857: 
epoch:  496
2022-07-08 05:27:35.967023: train loss : -0.9311
2022-07-08 05:27:41.272500: validation loss: -0.7627
2022-07-08 05:27:41.290299: Average global foreground Dice: [0.8282]
2022-07-08 05:27:41.320218: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:27:41.989011: Suus1 maybe_update_lr lr: 0.0001
2022-07-08 05:27:42.000088: This epoch took 76.658977 s

2022-07-08 05:27:42.009202: 
epoch:  497
2022-07-08 05:28:53.197882: train loss : -0.9297
2022-07-08 05:28:58.507549: validation loss: -0.7701
2022-07-08 05:28:58.548053: Average global foreground Dice: [0.8341]
2022-07-08 05:28:58.566883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:28:59.360072: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-08 05:28:59.390940: This epoch took 77.345069 s

2022-07-08 05:28:59.423858: 
epoch:  498
2022-07-08 05:30:10.227264: train loss : -0.9325
2022-07-08 05:30:14.829852: validation loss: -0.7722
2022-07-08 05:30:14.860977: Average global foreground Dice: [0.8389]
2022-07-08 05:30:14.872467: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:30:15.562279: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-08 05:30:15.592996: This epoch took 76.136120 s

2022-07-08 05:30:15.611874: 
epoch:  499
2022-07-08 05:31:26.324398: train loss : -0.9315
2022-07-08 05:31:31.172629: validation loss: -0.7755
2022-07-08 05:31:31.189072: Average global foreground Dice: [0.835]
2022-07-08 05:31:31.212896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:31:31.809190: Suus1 maybe_update_lr lr: 0.0
2022-07-08 05:31:31.843189: saving scheduled checkpoint file...
2022-07-08 05:31:32.015993: saving checkpoint...
2022-07-08 05:31:33.563899: done, saving took 1.70 seconds
2022-07-08 05:31:33.583176: done
2022-07-08 05:31:33.585693: This epoch took 77.966166 s

2022-07-08 05:31:33.644272: saving checkpoint...
2022-07-08 05:31:34.997930: done, saving took 1.41 seconds
panc_024 (2, 57, 164, 279)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 164, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 4], [0, 23]]
number of tiles: 8
computing Gaussian
done
prediction done
suus panc_024 transposed
suus panc_024 not saving softmax
suus panc_024 voeg toe aan pred_gt tuples voor later
panc_040 (2, 90, 196, 331)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 196, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 36], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_040 transposed
suus panc_040 not saving softmax
suus panc_040 voeg toe aan pred_gt tuples voor later
panc_048 (2, 53, 185, 353)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 185, 353)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 25], [0, 97]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_048 transposed
suus panc_048 not saving softmax
suus panc_048 voeg toe aan pred_gt tuples voor later
panc_058 (2, 78, 191, 335)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 191, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 31], [0, 79]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_058 transposed
suus panc_058 not saving softmax
suus panc_058 voeg toe aan pred_gt tuples voor later
panc_067 (2, 58, 211, 338)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 211, 338)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 51], [0, 82]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_067 transposed
suus panc_067 not saving softmax
suus panc_067 voeg toe aan pred_gt tuples voor later
panc_075 (2, 45, 151, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 24]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_075 transposed
suus panc_075 not saving softmax
suus panc_075 voeg toe aan pred_gt tuples voor later
panc_086 (2, 51, 181, 342)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 181, 342)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 21], [0, 86]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_086 transposed
suus panc_086 not saving softmax
suus panc_086 voeg toe aan pred_gt tuples voor later
panc_101 (2, 92, 181, 304)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 181, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 21], [0, 48]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_101 transposed
suus panc_101 not saving softmax
suus panc_101 voeg toe aan pred_gt tuples voor later
panc_105 (2, 78, 205, 322)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 205, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 45], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_105 transposed
suus panc_105 not saving softmax
suus panc_105 voeg toe aan pred_gt tuples voor later
panc_107 (2, 46, 173, 255)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 173, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 13], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_107 transposed
suus panc_107 not saving softmax
suus panc_107 voeg toe aan pred_gt tuples voor later
panc_113 (2, 54, 199, 285)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 199, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 39], [0, 29]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_113 transposed
suus panc_113 not saving softmax
suus panc_113 voeg toe aan pred_gt tuples voor later
panc_119 (2, 55, 198, 318)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 198, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 38], [0, 62]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_119 transposed
suus panc_119 not saving softmax
suus panc_119 voeg toe aan pred_gt tuples voor later
panc_131 (2, 59, 212, 295)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 212, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 52], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_131 transposed
suus panc_131 not saving softmax
suus panc_131 voeg toe aan pred_gt tuples voor later
panc_137 (2, 64, 159, 304)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 48]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_137 transposed
suus panc_137 not saving softmax
suus panc_137 voeg toe aan pred_gt tuples voor later
panc_148 (2, 76, 182, 270)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 182, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 22], [0, 14]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_148 transposed
suus panc_148 not saving softmax
suus panc_148 voeg toe aan pred_gt tuples voor later
panc_157 (2, 57, 191, 309)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 191, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 31], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_157 transposed
suus panc_157 not saving softmax
suus panc_157 voeg toe aan pred_gt tuples voor later
panc_182 (2, 51, 157, 240)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_182 transposed
suus panc_182 not saving softmax
suus panc_182 voeg toe aan pred_gt tuples voor later
panc_191 (2, 48, 162, 274)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 162, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 2], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_191 transposed
suus panc_191 not saving softmax
suus panc_191 voeg toe aan pred_gt tuples voor later
panc_193 (2, 55, 141, 303)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 47]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_193 transposed
suus panc_193 not saving softmax
suus panc_193 voeg toe aan pred_gt tuples voor later
panc_194 (2, 76, 186, 318)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 186, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 26], [0, 62]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_194 transposed
suus panc_194 not saving softmax
suus panc_194 voeg toe aan pred_gt tuples voor later
panc_204 (2, 48, 160, 214)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
suus panc_204 transposed
suus panc_204 not saving softmax
suus panc_204 voeg toe aan pred_gt tuples voor later
panc_207 (2, 60, 202, 268)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_207 transposed
suus panc_207 not saving softmax
suus panc_207 voeg toe aan pred_gt tuples voor later
panc_211 (2, 62, 191, 276)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 191, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 31], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_211 transposed
suus panc_211 not saving softmax
suus panc_211 voeg toe aan pred_gt tuples voor later
panc_215 (2, 54, 134, 292)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 36]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_215 transposed
suus panc_215 not saving softmax
suus panc_215 voeg toe aan pred_gt tuples voor later
panc_219 (2, 64, 192, 300)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 192, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 32], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_219 transposed
suus panc_219 not saving softmax
suus panc_219 voeg toe aan pred_gt tuples voor later
panc_224 (2, 64, 176, 300)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 176, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 16], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_224 transposed
suus panc_224 not saving softmax
suus panc_224 voeg toe aan pred_gt tuples voor later
panc_236 (2, 51, 151, 262)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 6]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_236 transposed
suus panc_236 not saving softmax
suus panc_236 voeg toe aan pred_gt tuples voor later
panc_241 (2, 61, 162, 266)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_241 transposed
suus panc_241 not saving softmax
suus panc_241 voeg toe aan pred_gt tuples voor later
panc_256 (2, 64, 159, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 24]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_256 transposed
suus panc_256 not saving softmax
suus panc_256 voeg toe aan pred_gt tuples voor later
panc_285 (2, 53, 162, 260)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 162, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 2], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_285 transposed
suus panc_285 not saving softmax
suus panc_285 voeg toe aan pred_gt tuples voor later
panc_286 (2, 61, 155, 253)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_286 transposed
suus panc_286 not saving softmax
suus panc_286 voeg toe aan pred_gt tuples voor later
panc_294 (2, 62, 174, 248)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_294 transposed
suus panc_294 not saving softmax
suus panc_294 voeg toe aan pred_gt tuples voor later
panc_296 (2, 86, 219, 333)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 219, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 59], [0, 77]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_296 transposed
suus panc_296 not saving softmax
suus panc_296 voeg toe aan pred_gt tuples voor later
panc_302 (2, 63, 224, 332)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 224, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 64], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_302 transposed
suus panc_302 not saving softmax
suus panc_302 voeg toe aan pred_gt tuples voor later
panc_305 (2, 55, 144, 189)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_305 transposed
suus panc_305 not saving softmax
suus panc_305 voeg toe aan pred_gt tuples voor later
panc_321 (2, 58, 175, 261)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_321 transposed
suus panc_321 not saving softmax
suus panc_321 voeg toe aan pred_gt tuples voor later
panc_325 (2, 54, 149, 252)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_325 transposed
suus panc_325 not saving softmax
suus panc_325 voeg toe aan pred_gt tuples voor later
panc_364 (2, 57, 154, 281)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_364 transposed
suus panc_364 not saving softmax
suus panc_364 voeg toe aan pred_gt tuples voor later
panc_367 (2, 61, 191, 329)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 73]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_367 transposed
suus panc_367 not saving softmax
suus panc_367 voeg toe aan pred_gt tuples voor later
panc_369 (2, 64, 220, 345)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 220, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 60], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_369 transposed
suus panc_369 not saving softmax
suus panc_369 voeg toe aan pred_gt tuples voor later
panc_374 (2, 64, 224, 270)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 224, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 64], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_374 transposed
suus panc_374 not saving softmax
suus panc_374 voeg toe aan pred_gt tuples voor later
panc_386 (2, 59, 169, 295)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 169, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 9], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_386 transposed
suus panc_386 not saving softmax
suus panc_386 voeg toe aan pred_gt tuples voor later
panc_393 (2, 64, 213, 399)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 213, 399)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 53], [0, 72, 143]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_393 transposed
suus panc_393 not saving softmax
suus panc_393 voeg toe aan pred_gt tuples voor later
panc_399 (2, 88, 190, 331)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 190, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40], [0, 30], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_399 transposed
suus panc_399 not saving softmax
suus panc_399 voeg toe aan pred_gt tuples voor later
panc_410 (2, 55, 138, 294)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 38]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_410 transposed
suus panc_410 not saving softmax
suus panc_410 voeg toe aan pred_gt tuples voor later
panc_412 (2, 67, 187, 325)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 187, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 27], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_412 transposed
suus panc_412 not saving softmax
suus panc_412 voeg toe aan pred_gt tuples voor later
panc_413 (2, 56, 179, 305)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_413 transposed
suus panc_413 not saving softmax
suus panc_413 voeg toe aan pred_gt tuples voor later
panc_415 (2, 86, 164, 277)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 164, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 4], [0, 21]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_415 transposed
suus panc_415 not saving softmax
suus panc_415 voeg toe aan pred_gt tuples voor later
2022-07-08 05:33:33.135604: finished prediction
2022-07-08 05:33:33.139319: evaluation of raw predictions
2022-07-08 05:33:47.566300: determining postprocessing
Foreground vs background
before: 0.8354974398849785
after:  0.8356124335017688
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_024.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_105.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_182.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_219.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_296.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_374.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_040.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_107.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_191.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_224.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_302.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_386.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_048.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_113.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_193.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_236.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_305.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_393.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_058.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_119.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_194.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_241.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_321.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_399.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_067.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_131.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_204.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_256.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_325.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_410.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_075.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_137.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_207.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_285.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_364.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_412.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_086.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_148.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_211.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_286.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_367.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_413.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_101.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_157.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_215.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_294.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_369.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_415.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='1', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-08 05:34:20.555583: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-08 05:34:21.187851: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-08 05:34:21.192307: The split file contains 5 splits.
2022-07-08 05:34:21.194476: Desired fold for training: 1
2022-07-08 05:34:21.196816: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-08 05:34:22.887747: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-08 05:34:35.054607: Unable to plot network architecture:
2022-07-08 05:34:35.058764: local variable 'g' referenced before assignment
2022-07-08 05:34:35.064839: 
printing the network instead:

2022-07-08 05:34:35.067183: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-08 05:34:35.076886: 

2022-07-08 05:34:35.107057: 
epoch:  0
2022-07-08 05:35:59.015904: train loss : -0.0965
2022-07-08 05:36:04.600915: validation loss: -0.2507
2022-07-08 05:36:04.621652: Average global foreground Dice: [0.4111]
2022-07-08 05:36:04.635913: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:36:05.631253: Suus1 maybe_update_lr lr: 0.009982
2022-07-08 05:36:05.666543: This epoch took 90.491528 s

2022-07-08 05:36:05.697632: 
epoch:  1
2022-07-08 05:37:16.343700: train loss : -0.3560
2022-07-08 05:37:21.227369: validation loss: -0.3921
2022-07-08 05:37:21.271014: Average global foreground Dice: [0.5195]
2022-07-08 05:37:21.292647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:37:21.908116: Suus1 maybe_update_lr lr: 0.009964
2022-07-08 05:37:21.934887: saving best epoch checkpoint...
2022-07-08 05:37:22.095090: saving checkpoint...
2022-07-08 05:37:23.776912: done, saving took 1.82 seconds
2022-07-08 05:37:23.793164: This epoch took 78.093299 s

2022-07-08 05:37:23.795999: 
epoch:  2
2022-07-08 05:38:34.377468: train loss : -0.4529
2022-07-08 05:38:38.805331: validation loss: -0.4727
2022-07-08 05:38:38.835001: Average global foreground Dice: [0.5925]
2022-07-08 05:38:38.844362: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:38:39.696290: Suus1 maybe_update_lr lr: 0.009946
2022-07-08 05:38:39.727895: saving best epoch checkpoint...
2022-07-08 05:38:39.883937: saving checkpoint...
2022-07-08 05:38:41.487606: done, saving took 1.74 seconds
2022-07-08 05:38:41.504780: This epoch took 77.706196 s

2022-07-08 05:38:41.506841: 
epoch:  3
2022-07-08 05:39:52.542295: train loss : -0.5298
2022-07-08 05:39:57.558899: validation loss: -0.5347
2022-07-08 05:39:57.579226: Average global foreground Dice: [0.6409]
2022-07-08 05:39:57.610199: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:39:58.267316: Suus1 maybe_update_lr lr: 0.009928
2022-07-08 05:39:58.287897: saving best epoch checkpoint...
2022-07-08 05:39:58.464676: saving checkpoint...
2022-07-08 05:40:00.463154: done, saving took 2.15 seconds
2022-07-08 05:40:00.478041: This epoch took 78.969273 s

2022-07-08 05:40:00.480176: 
epoch:  4
2022-07-08 05:41:10.951048: train loss : -0.5269
2022-07-08 05:41:16.424512: validation loss: -0.5237
2022-07-08 05:41:16.435112: Average global foreground Dice: [0.6282]
2022-07-08 05:41:16.455889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:41:17.143241: Suus1 maybe_update_lr lr: 0.00991
2022-07-08 05:41:17.169631: saving best epoch checkpoint...
2022-07-08 05:41:17.321891: saving checkpoint...
2022-07-08 05:41:19.123918: done, saving took 1.94 seconds
2022-07-08 05:41:19.140728: This epoch took 78.658515 s

2022-07-08 05:41:19.142905: 
epoch:  5
2022-07-08 05:42:31.031952: train loss : -0.5593
2022-07-08 05:42:35.791378: validation loss: -0.5590
2022-07-08 05:42:35.822491: Average global foreground Dice: [0.6569]
2022-07-08 05:42:35.842296: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:42:36.588076: Suus1 maybe_update_lr lr: 0.009892
2022-07-08 05:42:36.608888: saving best epoch checkpoint...
2022-07-08 05:42:36.785074: saving checkpoint...
2022-07-08 05:42:38.242189: done, saving took 1.61 seconds
2022-07-08 05:42:38.259211: This epoch took 79.114303 s

2022-07-08 05:42:38.261299: 
epoch:  6
2022-07-08 05:43:49.372948: train loss : -0.5765
2022-07-08 05:43:55.022613: validation loss: -0.6293
2022-07-08 05:43:55.041586: Average global foreground Dice: [0.7238]
2022-07-08 05:43:55.084870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:43:55.778440: Suus1 maybe_update_lr lr: 0.009874
2022-07-08 05:43:55.810889: saving best epoch checkpoint...
2022-07-08 05:43:55.926599: saving checkpoint...
2022-07-08 05:43:57.667654: done, saving took 1.82 seconds
2022-07-08 05:43:57.683744: This epoch took 79.420501 s

2022-07-08 05:43:57.685895: 
epoch:  7
2022-07-08 05:45:07.632761: train loss : -0.5954
2022-07-08 05:45:12.327692: validation loss: -0.5989
2022-07-08 05:45:12.391273: Average global foreground Dice: [0.7009]
2022-07-08 05:45:12.403878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:45:12.977359: Suus1 maybe_update_lr lr: 0.009856
2022-07-08 05:45:13.001873: saving best epoch checkpoint...
2022-07-08 05:45:13.113441: saving checkpoint...
2022-07-08 05:45:14.987829: done, saving took 1.96 seconds
2022-07-08 05:45:15.025919: This epoch took 77.337827 s

2022-07-08 05:45:15.028117: 
epoch:  8
2022-07-08 05:46:25.319568: train loss : -0.6171
2022-07-08 05:46:30.106927: validation loss: -0.6020
2022-07-08 05:46:30.146399: Average global foreground Dice: [0.7011]
2022-07-08 05:46:30.154957: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:46:30.860432: Suus1 maybe_update_lr lr: 0.009838
2022-07-08 05:46:30.888033: saving best epoch checkpoint...
2022-07-08 05:46:31.019878: saving checkpoint...
2022-07-08 05:46:32.604569: done, saving took 1.70 seconds
2022-07-08 05:46:32.621208: This epoch took 77.591014 s

2022-07-08 05:46:32.623644: 
epoch:  9
2022-07-08 05:47:42.419181: train loss : -0.6371
2022-07-08 05:47:47.261912: validation loss: -0.6107
2022-07-08 05:47:47.291644: Average global foreground Dice: [0.6992]
2022-07-08 05:47:47.311178: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:47:48.187580: Suus1 maybe_update_lr lr: 0.00982
2022-07-08 05:47:48.217867: saving best epoch checkpoint...
2022-07-08 05:47:48.308357: saving checkpoint...
2022-07-08 05:47:49.945632: done, saving took 1.71 seconds
2022-07-08 05:47:49.962823: This epoch took 77.337063 s

2022-07-08 05:47:49.965026: 
epoch:  10
2022-07-08 05:49:00.026216: train loss : -0.6365
2022-07-08 05:49:04.821955: validation loss: -0.6269
2022-07-08 05:49:04.841981: Average global foreground Dice: [0.7136]
2022-07-08 05:49:04.863435: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:49:05.592423: Suus1 maybe_update_lr lr: 0.009802
2022-07-08 05:49:05.613893: saving best epoch checkpoint...
2022-07-08 05:49:05.751681: saving checkpoint...
2022-07-08 05:49:07.497889: done, saving took 1.86 seconds
2022-07-08 05:49:07.515657: This epoch took 77.548406 s

2022-07-08 05:49:07.518083: 
epoch:  11
2022-07-08 05:50:18.122594: train loss : -0.6487
2022-07-08 05:50:23.081548: validation loss: -0.6332
2022-07-08 05:50:23.120243: Average global foreground Dice: [0.7136]
2022-07-08 05:50:23.129923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:50:23.802386: Suus1 maybe_update_lr lr: 0.009784
2022-07-08 05:50:23.812476: saving best epoch checkpoint...
2022-07-08 05:50:23.895125: saving checkpoint...
2022-07-08 05:50:25.659825: done, saving took 1.84 seconds
2022-07-08 05:50:25.675442: This epoch took 78.155271 s

2022-07-08 05:50:25.677595: 
epoch:  12
2022-07-08 05:51:38.440790: train loss : -0.6646
2022-07-08 05:51:43.928802: validation loss: -0.6341
2022-07-08 05:51:43.949596: Average global foreground Dice: [0.7174]
2022-07-08 05:51:43.975955: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:51:44.935292: Suus1 maybe_update_lr lr: 0.009766
2022-07-08 05:51:44.956893: saving best epoch checkpoint...
2022-07-08 05:51:45.048914: saving checkpoint...
2022-07-08 05:51:46.489179: done, saving took 1.51 seconds
2022-07-08 05:51:46.503675: This epoch took 80.823964 s

2022-07-08 05:51:46.505812: 
epoch:  13
2022-07-08 05:52:57.010855: train loss : -0.6747
2022-07-08 05:53:01.636852: validation loss: -0.6421
2022-07-08 05:53:01.665297: Average global foreground Dice: [0.7215]
2022-07-08 05:53:01.688614: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:53:02.353917: Suus1 maybe_update_lr lr: 0.009748
2022-07-08 05:53:02.385901: saving best epoch checkpoint...
2022-07-08 05:53:02.499337: saving checkpoint...
2022-07-08 05:53:04.112205: done, saving took 1.69 seconds
2022-07-08 05:53:04.128438: This epoch took 77.620131 s

2022-07-08 05:53:04.131044: 
epoch:  14
2022-07-08 05:54:14.789403: train loss : -0.6599
2022-07-08 05:54:19.627656: validation loss: -0.6487
2022-07-08 05:54:19.654531: Average global foreground Dice: [0.7318]
2022-07-08 05:54:19.687884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:54:20.483358: Suus1 maybe_update_lr lr: 0.00973
2022-07-08 05:54:20.506891: saving best epoch checkpoint...
2022-07-08 05:54:20.612329: saving checkpoint...
2022-07-08 05:54:22.248374: done, saving took 1.72 seconds
2022-07-08 05:54:22.263108: This epoch took 78.129632 s

2022-07-08 05:54:22.265203: 
epoch:  15
2022-07-08 05:55:34.456853: train loss : -0.6755
2022-07-08 05:55:39.461376: validation loss: -0.6658
2022-07-08 05:55:39.505283: Average global foreground Dice: [0.7433]
2022-07-08 05:55:39.515880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:55:40.408504: Suus1 maybe_update_lr lr: 0.009712
2022-07-08 05:55:40.430799: saving best epoch checkpoint...
2022-07-08 05:55:40.540834: saving checkpoint...
2022-07-08 05:55:42.190493: done, saving took 1.70 seconds
2022-07-08 05:55:42.206357: This epoch took 79.939162 s

2022-07-08 05:55:42.209133: 
epoch:  16
2022-07-08 05:56:53.008548: train loss : -0.6957
2022-07-08 05:56:57.919013: validation loss: -0.6370
2022-07-08 05:56:57.948295: Average global foreground Dice: [0.7241]
2022-07-08 05:56:57.975883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:56:58.770007: Suus1 maybe_update_lr lr: 0.009693
2022-07-08 05:56:58.792755: saving best epoch checkpoint...
2022-07-08 05:56:58.865440: saving checkpoint...
2022-07-08 05:57:00.714741: done, saving took 1.90 seconds
2022-07-08 05:57:00.728903: This epoch took 78.517411 s

2022-07-08 05:57:00.731100: 
epoch:  17
2022-07-08 05:58:11.738582: train loss : -0.6718
2022-07-08 05:58:16.838295: validation loss: -0.6735
2022-07-08 05:58:16.865375: Average global foreground Dice: [0.7509]
2022-07-08 05:58:16.886883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:58:17.656641: Suus1 maybe_update_lr lr: 0.009675
2022-07-08 05:58:17.685183: saving best epoch checkpoint...
2022-07-08 05:58:17.751545: saving checkpoint...
2022-07-08 05:58:19.175936: done, saving took 1.47 seconds
2022-07-08 05:58:19.192154: This epoch took 78.459120 s

2022-07-08 05:58:19.194634: 
epoch:  18
2022-07-08 05:59:31.099263: train loss : -0.6955
2022-07-08 05:59:36.107870: validation loss: -0.6689
2022-07-08 05:59:36.137681: Average global foreground Dice: [0.7485]
2022-07-08 05:59:36.158919: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:59:36.797331: Suus1 maybe_update_lr lr: 0.009657
2022-07-08 05:59:36.827205: saving best epoch checkpoint...
2022-07-08 05:59:36.985332: saving checkpoint...
2022-07-08 05:59:38.770727: done, saving took 1.91 seconds
2022-07-08 05:59:38.786526: This epoch took 79.589599 s

2022-07-08 05:59:38.788896: 
epoch:  19
2022-07-08 06:00:49.961401: train loss : -0.7032
2022-07-08 06:00:55.650135: validation loss: -0.6779
2022-07-08 06:00:55.664222: Average global foreground Dice: [0.7547]
2022-07-08 06:00:55.669883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:00:56.330510: Suus1 maybe_update_lr lr: 0.009639
2022-07-08 06:00:56.351898: saving best epoch checkpoint...
2022-07-08 06:00:56.429312: saving checkpoint...
2022-07-08 06:00:58.488468: done, saving took 2.11 seconds
2022-07-08 06:00:58.504120: This epoch took 79.712862 s

2022-07-08 06:00:58.506303: 
epoch:  20
2022-07-08 06:02:10.421537: train loss : -0.6933
2022-07-08 06:02:15.465068: validation loss: -0.6598
2022-07-08 06:02:15.490935: Average global foreground Dice: [0.7461]
2022-07-08 06:02:15.521025: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:02:16.297837: Suus1 maybe_update_lr lr: 0.009621
2022-07-08 06:02:16.318890: saving best epoch checkpoint...
2022-07-08 06:02:16.425666: saving checkpoint...
2022-07-08 06:02:18.079527: done, saving took 1.73 seconds
2022-07-08 06:02:18.094169: This epoch took 79.585802 s

2022-07-08 06:02:18.096209: 
epoch:  21
2022-07-08 06:03:30.581211: train loss : -0.6998
2022-07-08 06:03:35.595937: validation loss: -0.6902
2022-07-08 06:03:35.616589: Average global foreground Dice: [0.7599]
2022-07-08 06:03:35.641921: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:03:36.269342: Suus1 maybe_update_lr lr: 0.009603
2022-07-08 06:03:36.279597: saving best epoch checkpoint...
2022-07-08 06:03:36.384595: saving checkpoint...
2022-07-08 06:03:37.928927: done, saving took 1.63 seconds
2022-07-08 06:03:37.943386: This epoch took 79.845055 s

2022-07-08 06:03:37.945611: 
epoch:  22
2022-07-08 06:04:48.375803: train loss : -0.7017
2022-07-08 06:04:53.223150: validation loss: -0.7149
2022-07-08 06:04:53.256278: Average global foreground Dice: [0.7897]
2022-07-08 06:04:53.288384: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:04:53.889527: Suus1 maybe_update_lr lr: 0.009585
2022-07-08 06:04:53.915339: saving best epoch checkpoint...
2022-07-08 06:04:54.038935: saving checkpoint...
2022-07-08 06:04:55.793556: done, saving took 1.84 seconds
2022-07-08 06:04:55.806630: This epoch took 77.858910 s

2022-07-08 06:04:55.808728: 
epoch:  23
2022-07-08 06:06:07.156530: train loss : -0.7094
2022-07-08 06:06:12.144971: validation loss: -0.6936
2022-07-08 06:06:12.178286: Average global foreground Dice: [0.766]
2022-07-08 06:06:12.189339: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:06:12.795756: Suus1 maybe_update_lr lr: 0.009567
2022-07-08 06:06:12.825891: saving best epoch checkpoint...
2022-07-08 06:06:12.931455: saving checkpoint...
2022-07-08 06:06:14.555533: done, saving took 1.70 seconds
2022-07-08 06:06:14.570868: This epoch took 78.760204 s

2022-07-08 06:06:14.573045: 
epoch:  24
2022-07-08 06:07:25.193897: train loss : -0.7270
2022-07-08 06:07:31.037409: validation loss: -0.7084
2022-07-08 06:07:31.040437: Average global foreground Dice: [0.7838]
2022-07-08 06:07:31.062891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:07:31.706763: Suus1 maybe_update_lr lr: 0.009549
2022-07-08 06:07:31.709316: saving best epoch checkpoint...
2022-07-08 06:07:31.786355: saving checkpoint...
2022-07-08 06:07:33.298643: done, saving took 1.56 seconds
2022-07-08 06:07:33.311948: This epoch took 78.736950 s

2022-07-08 06:07:33.313864: 
epoch:  25
2022-07-08 06:08:45.287989: train loss : -0.7046
2022-07-08 06:08:50.781650: validation loss: -0.6914
2022-07-08 06:08:50.791186: Average global foreground Dice: [0.7698]
2022-07-08 06:08:50.810443: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:08:51.406328: Suus1 maybe_update_lr lr: 0.009531
2022-07-08 06:08:51.447895: saving best epoch checkpoint...
2022-07-08 06:08:51.524478: saving checkpoint...
2022-07-08 06:08:53.296177: done, saving took 1.83 seconds
2022-07-08 06:08:53.310759: This epoch took 79.995031 s

2022-07-08 06:08:53.312767: 
epoch:  26
2022-07-08 06:10:04.556452: train loss : -0.7166
2022-07-08 06:10:10.455431: validation loss: -0.6791
2022-07-08 06:10:10.488390: Average global foreground Dice: [0.7575]
2022-07-08 06:10:10.514595: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:10:11.271288: Suus1 maybe_update_lr lr: 0.009513
2022-07-08 06:10:11.291944: saving best epoch checkpoint...
2022-07-08 06:10:11.379755: saving checkpoint...
2022-07-08 06:10:13.151369: done, saving took 1.84 seconds
2022-07-08 06:10:13.167601: This epoch took 79.852720 s

2022-07-08 06:10:13.169914: 
epoch:  27
2022-07-08 06:11:24.225489: train loss : -0.7192
2022-07-08 06:11:28.750324: validation loss: -0.6856
2022-07-08 06:11:28.781260: Average global foreground Dice: [0.7603]
2022-07-08 06:11:28.799877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:11:29.456760: Suus1 maybe_update_lr lr: 0.009495
2022-07-08 06:11:29.488015: saving best epoch checkpoint...
2022-07-08 06:11:29.587334: saving checkpoint...
2022-07-08 06:11:31.452053: done, saving took 1.94 seconds
2022-07-08 06:11:31.466100: This epoch took 78.294122 s

2022-07-08 06:11:31.468082: 
epoch:  28
2022-07-08 06:12:42.133412: train loss : -0.7184
2022-07-08 06:12:47.009413: validation loss: -0.6909
2022-07-08 06:12:47.047226: Average global foreground Dice: [0.7621]
2022-07-08 06:12:47.084866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:12:47.770976: Suus1 maybe_update_lr lr: 0.009476
2022-07-08 06:12:47.796908: saving best epoch checkpoint...
2022-07-08 06:12:47.929669: saving checkpoint...
2022-07-08 06:12:49.567512: done, saving took 1.74 seconds
2022-07-08 06:12:49.582511: This epoch took 78.112422 s

2022-07-08 06:12:49.584582: 
epoch:  29
2022-07-08 06:13:59.526756: train loss : -0.7266
2022-07-08 06:14:04.470315: validation loss: -0.7130
2022-07-08 06:14:04.513018: Average global foreground Dice: [0.7829]
2022-07-08 06:14:04.515577: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:14:05.219966: Suus1 maybe_update_lr lr: 0.009458
2022-07-08 06:14:05.241570: saving best epoch checkpoint...
2022-07-08 06:14:05.353023: saving checkpoint...
2022-07-08 06:14:07.016498: done, saving took 1.76 seconds
2022-07-08 06:14:07.030009: This epoch took 77.443426 s

2022-07-08 06:14:07.031950: 
epoch:  30
2022-07-08 06:15:18.417929: train loss : -0.7284
2022-07-08 06:15:24.626390: validation loss: -0.7111
2022-07-08 06:15:24.649699: Average global foreground Dice: [0.784]
2022-07-08 06:15:24.670503: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:15:25.475755: Suus1 maybe_update_lr lr: 0.00944
2022-07-08 06:15:25.491153: saving best epoch checkpoint...
2022-07-08 06:15:25.626687: saving checkpoint...
2022-07-08 06:15:27.280248: done, saving took 1.76 seconds
2022-07-08 06:15:27.293562: This epoch took 80.259804 s

2022-07-08 06:15:27.295630: 
epoch:  31
2022-07-08 06:16:38.208721: train loss : -0.7276
2022-07-08 06:16:43.171309: validation loss: -0.7293
2022-07-08 06:16:43.204254: Average global foreground Dice: [0.7883]
2022-07-08 06:16:43.225858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:16:43.825769: Suus1 maybe_update_lr lr: 0.009422
2022-07-08 06:16:43.857896: saving best epoch checkpoint...
2022-07-08 06:16:43.926352: saving checkpoint...
2022-07-08 06:16:45.756153: done, saving took 1.88 seconds
2022-07-08 06:16:45.770450: This epoch took 78.472890 s

2022-07-08 06:16:45.772495: 
epoch:  32
2022-07-08 06:17:56.788137: train loss : -0.7334
2022-07-08 06:18:01.894433: validation loss: -0.6879
2022-07-08 06:18:01.931134: Average global foreground Dice: [0.7592]
2022-07-08 06:18:01.942339: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:18:02.551248: Suus1 maybe_update_lr lr: 0.009404
2022-07-08 06:18:02.572897: saving best epoch checkpoint...
2022-07-08 06:18:02.680095: saving checkpoint...
2022-07-08 06:18:04.273199: done, saving took 1.68 seconds
2022-07-08 06:18:04.287788: This epoch took 78.513285 s

2022-07-08 06:18:04.289775: 
epoch:  33
2022-07-08 06:19:15.536883: train loss : -0.7330
2022-07-08 06:19:20.375141: validation loss: -0.7021
2022-07-08 06:19:20.393250: Average global foreground Dice: [0.7749]
2022-07-08 06:19:20.412867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:19:21.052289: Suus1 maybe_update_lr lr: 0.009386
2022-07-08 06:19:21.066083: saving best epoch checkpoint...
2022-07-08 06:19:21.180266: saving checkpoint...
2022-07-08 06:19:22.822536: done, saving took 1.74 seconds
2022-07-08 06:19:22.838045: This epoch took 78.546210 s

2022-07-08 06:19:22.840053: 
epoch:  34
2022-07-08 06:20:32.262335: train loss : -0.7451
2022-07-08 06:20:37.772141: validation loss: -0.7080
2022-07-08 06:20:37.792431: Average global foreground Dice: [0.7832]
2022-07-08 06:20:37.819895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:20:38.757560: Suus1 maybe_update_lr lr: 0.009368
2022-07-08 06:20:38.778898: saving best epoch checkpoint...
2022-07-08 06:20:38.919003: saving checkpoint...
2022-07-08 06:20:40.698140: done, saving took 1.89 seconds
2022-07-08 06:20:40.712758: This epoch took 77.870705 s

2022-07-08 06:20:40.714855: 
epoch:  35
2022-07-08 06:21:50.577956: train loss : -0.7512
2022-07-08 06:21:55.753981: validation loss: -0.7218
2022-07-08 06:21:55.787752: Average global foreground Dice: [0.7869]
2022-07-08 06:21:55.813437: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:21:56.475831: Suus1 maybe_update_lr lr: 0.00935
2022-07-08 06:21:56.491044: saving best epoch checkpoint...
2022-07-08 06:21:56.572681: saving checkpoint...
2022-07-08 06:21:58.364438: done, saving took 1.84 seconds
2022-07-08 06:21:58.378571: This epoch took 77.661610 s

2022-07-08 06:21:58.380585: 
epoch:  36
2022-07-08 06:23:11.632133: train loss : -0.7384
2022-07-08 06:23:16.651825: validation loss: -0.7113
2022-07-08 06:23:16.686083: Average global foreground Dice: [0.7864]
2022-07-08 06:23:16.716232: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:23:17.366736: Suus1 maybe_update_lr lr: 0.009331
2022-07-08 06:23:17.387890: saving best epoch checkpoint...
2022-07-08 06:23:17.498124: saving checkpoint...
2022-07-08 06:23:18.969731: done, saving took 1.56 seconds
2022-07-08 06:23:18.998688: This epoch took 80.616038 s

2022-07-08 06:23:19.014708: 
epoch:  37
2022-07-08 06:24:29.295243: train loss : -0.7466
2022-07-08 06:24:34.512349: validation loss: -0.7065
2022-07-08 06:24:34.552525: Average global foreground Dice: [0.7772]
2022-07-08 06:24:34.571933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:24:35.269636: Suus1 maybe_update_lr lr: 0.009313
2022-07-08 06:24:35.300027: saving best epoch checkpoint...
2022-07-08 06:24:35.415208: saving checkpoint...
2022-07-08 06:24:36.969045: done, saving took 1.67 seconds
2022-07-08 06:24:36.982857: This epoch took 77.965856 s

2022-07-08 06:24:36.984980: 
epoch:  38
2022-07-08 06:25:50.620659: train loss : -0.7543
2022-07-08 06:25:55.191326: validation loss: -0.7143
2022-07-08 06:25:55.205218: Average global foreground Dice: [0.7838]
2022-07-08 06:25:55.237851: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:25:55.717709: Suus1 maybe_update_lr lr: 0.009295
2022-07-08 06:25:55.737113: saving best epoch checkpoint...
2022-07-08 06:25:55.822348: saving checkpoint...
2022-07-08 06:25:57.367691: done, saving took 1.61 seconds
2022-07-08 06:25:57.381634: This epoch took 80.394572 s

2022-07-08 06:25:57.383889: 
epoch:  39
2022-07-08 06:27:09.782035: train loss : -0.7529
2022-07-08 06:27:15.284185: validation loss: -0.7102
2022-07-08 06:27:15.317274: Average global foreground Dice: [0.7845]
2022-07-08 06:27:15.330426: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:27:16.146400: Suus1 maybe_update_lr lr: 0.009277
2022-07-08 06:27:16.155607: saving best epoch checkpoint...
2022-07-08 06:27:16.252560: saving checkpoint...
2022-07-08 06:27:17.790134: done, saving took 1.63 seconds
2022-07-08 06:27:17.805050: This epoch took 80.419217 s

2022-07-08 06:27:17.807780: 
epoch:  40
2022-07-08 06:28:29.521076: train loss : -0.7582
2022-07-08 06:28:35.139849: validation loss: -0.7416
2022-07-08 06:28:35.173288: Average global foreground Dice: [0.8102]
2022-07-08 06:28:35.202190: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:28:35.947864: Suus1 maybe_update_lr lr: 0.009259
2022-07-08 06:28:35.955878: saving best epoch checkpoint...
2022-07-08 06:28:36.049580: saving checkpoint...
2022-07-08 06:28:37.556680: done, saving took 1.58 seconds
2022-07-08 06:28:37.570893: This epoch took 79.761024 s

2022-07-08 06:28:37.572934: 
epoch:  41
2022-07-08 06:29:48.037367: train loss : -0.7520
2022-07-08 06:29:53.554553: validation loss: -0.7471
2022-07-08 06:29:53.585919: Average global foreground Dice: [0.8023]
2022-07-08 06:29:53.627906: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:29:54.605352: Suus1 maybe_update_lr lr: 0.009241
2022-07-08 06:29:54.626907: saving best epoch checkpoint...
2022-07-08 06:29:54.695852: saving checkpoint...
2022-07-08 06:29:56.209781: done, saving took 1.56 seconds
2022-07-08 06:29:56.223555: This epoch took 78.648635 s

2022-07-08 06:29:56.225775: 
epoch:  42
2022-07-08 06:31:07.196243: train loss : -0.7469
2022-07-08 06:31:13.540789: validation loss: -0.7123
2022-07-08 06:31:13.566947: Average global foreground Dice: [0.7811]
2022-07-08 06:31:13.594872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:31:14.379015: Suus1 maybe_update_lr lr: 0.009223
2022-07-08 06:31:14.410884: saving best epoch checkpoint...
2022-07-08 06:31:14.498871: saving checkpoint...
2022-07-08 06:31:15.898208: done, saving took 1.45 seconds
2022-07-08 06:31:15.912577: This epoch took 79.684799 s

2022-07-08 06:31:15.914598: 
epoch:  43
2022-07-08 06:32:27.386423: train loss : -0.7548
2022-07-08 06:32:32.354380: validation loss: -0.7330
2022-07-08 06:32:32.381225: Average global foreground Dice: [0.7992]
2022-07-08 06:32:32.400880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:32:33.077428: Suus1 maybe_update_lr lr: 0.009204
2022-07-08 06:32:33.100889: saving best epoch checkpoint...
2022-07-08 06:32:33.188600: saving checkpoint...
2022-07-08 06:32:34.661622: done, saving took 1.54 seconds
2022-07-08 06:32:34.675813: This epoch took 78.759190 s

2022-07-08 06:32:34.678070: 
epoch:  44
2022-07-08 06:33:46.531892: train loss : -0.7592
2022-07-08 06:33:51.883244: validation loss: -0.7357
2022-07-08 06:33:51.929351: Average global foreground Dice: [0.7975]
2022-07-08 06:33:51.949028: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:33:52.811709: Suus1 maybe_update_lr lr: 0.009186
2022-07-08 06:33:52.821742: saving best epoch checkpoint...
2022-07-08 06:33:52.917522: saving checkpoint...
2022-07-08 06:33:54.462140: done, saving took 1.61 seconds
2022-07-08 06:33:54.476729: This epoch took 79.796561 s

2022-07-08 06:33:54.478844: 
epoch:  45
2022-07-08 06:35:06.028665: train loss : -0.7559
2022-07-08 06:35:11.268729: validation loss: -0.7182
2022-07-08 06:35:11.290530: Average global foreground Dice: [0.785]
2022-07-08 06:35:11.310379: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:35:11.930288: Suus1 maybe_update_lr lr: 0.009168
2022-07-08 06:35:11.932830: saving best epoch checkpoint...
2022-07-08 06:35:12.026027: saving checkpoint...
2022-07-08 06:35:13.704992: done, saving took 1.76 seconds
2022-07-08 06:35:13.720746: This epoch took 79.240001 s

2022-07-08 06:35:13.722885: 
epoch:  46
2022-07-08 06:36:25.084174: train loss : -0.7598
2022-07-08 06:36:30.719866: validation loss: -0.7295
2022-07-08 06:36:30.753242: Average global foreground Dice: [0.7899]
2022-07-08 06:36:30.772886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:36:31.567535: Suus1 maybe_update_lr lr: 0.00915
2022-07-08 06:36:31.570264: saving best epoch checkpoint...
2022-07-08 06:36:31.667147: saving checkpoint...
2022-07-08 06:36:33.177043: done, saving took 1.60 seconds
2022-07-08 06:36:33.194354: This epoch took 79.469119 s

2022-07-08 06:36:33.196618: 
epoch:  47
2022-07-08 06:37:44.168590: train loss : -0.7620
2022-07-08 06:37:49.288272: validation loss: -0.7362
2022-07-08 06:37:49.319427: Average global foreground Dice: [0.7985]
2022-07-08 06:37:49.337998: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:37:50.011176: Suus1 maybe_update_lr lr: 0.009132
2022-07-08 06:37:50.040571: saving best epoch checkpoint...
2022-07-08 06:37:50.147456: saving checkpoint...
2022-07-08 06:37:51.839180: done, saving took 1.78 seconds
2022-07-08 06:37:51.856908: This epoch took 78.657542 s

2022-07-08 06:37:51.859478: 
epoch:  48
2022-07-08 06:39:03.693388: train loss : -0.7581
2022-07-08 06:39:09.008404: validation loss: -0.7464
2022-07-08 06:39:09.037733: Average global foreground Dice: [0.8112]
2022-07-08 06:39:09.057515: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:39:09.674988: Suus1 maybe_update_lr lr: 0.009114
2022-07-08 06:39:09.681084: saving best epoch checkpoint...
2022-07-08 06:39:09.783931: saving checkpoint...
2022-07-08 06:39:11.261903: done, saving took 1.55 seconds
2022-07-08 06:39:11.277905: This epoch took 79.416033 s

2022-07-08 06:39:11.279987: 
epoch:  49
2022-07-08 06:40:22.239677: train loss : -0.7631
2022-07-08 06:40:27.564718: validation loss: -0.7289
2022-07-08 06:40:27.591685: Average global foreground Dice: [0.7938]
2022-07-08 06:40:27.610869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:40:28.631752: Suus1 maybe_update_lr lr: 0.009095
2022-07-08 06:40:28.661997: saving scheduled checkpoint file...
2022-07-08 06:40:28.759874: saving checkpoint...
2022-07-08 06:40:30.362308: done, saving took 1.67 seconds
2022-07-08 06:40:30.409573: done
2022-07-08 06:40:30.412315: saving best epoch checkpoint...
2022-07-08 06:40:30.451883: saving checkpoint...
2022-07-08 06:40:31.777872: done, saving took 1.36 seconds
2022-07-08 06:40:31.791651: This epoch took 80.509757 s

2022-07-08 06:40:31.793691: 
epoch:  50
2022-07-08 06:41:44.202842: train loss : -0.7577
2022-07-08 06:41:48.733341: validation loss: -0.7301
2022-07-08 06:41:48.763826: Average global foreground Dice: [0.8008]
2022-07-08 06:41:48.784942: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:41:49.597493: Suus1 maybe_update_lr lr: 0.009077
2022-07-08 06:41:49.616432: saving best epoch checkpoint...
2022-07-08 06:41:49.668446: saving checkpoint...
2022-07-08 06:41:51.312067: done, saving took 1.69 seconds
2022-07-08 06:41:51.325933: This epoch took 79.530218 s

2022-07-08 06:41:51.328026: 
epoch:  51
2022-07-08 06:43:01.365963: train loss : -0.7678
2022-07-08 06:43:05.919242: validation loss: -0.7219
2022-07-08 06:43:05.950252: Average global foreground Dice: [0.7817]
2022-07-08 06:43:05.962903: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:43:06.601235: Suus1 maybe_update_lr lr: 0.009059
2022-07-08 06:43:06.628914: This epoch took 75.298909 s

2022-07-08 06:43:06.650867: 
epoch:  52
2022-07-08 06:44:18.317887: train loss : -0.7699
2022-07-08 06:44:23.044254: validation loss: -0.7452
2022-07-08 06:44:23.087292: Average global foreground Dice: [0.8042]
2022-07-08 06:44:23.114002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:44:23.965629: Suus1 maybe_update_lr lr: 0.009041
2022-07-08 06:44:23.971918: saving best epoch checkpoint...
2022-07-08 06:44:24.132249: saving checkpoint...
2022-07-08 06:44:25.651520: done, saving took 1.66 seconds
2022-07-08 06:44:25.666824: This epoch took 78.989951 s

2022-07-08 06:44:25.668953: 
epoch:  53
2022-07-08 06:45:37.288026: train loss : -0.7655
2022-07-08 06:45:42.616823: validation loss: -0.7538
2022-07-08 06:45:42.644332: Average global foreground Dice: [0.8115]
2022-07-08 06:45:42.666000: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:45:43.422527: Suus1 maybe_update_lr lr: 0.009023
2022-07-08 06:45:43.454917: saving best epoch checkpoint...
2022-07-08 06:45:43.530463: saving checkpoint...
2022-07-08 06:45:45.202758: done, saving took 1.71 seconds
2022-07-08 06:45:45.218313: This epoch took 79.547458 s

2022-07-08 06:45:45.220942: 
epoch:  54
2022-07-08 06:46:56.352112: train loss : -0.7631
2022-07-08 06:47:01.217873: validation loss: -0.7434
2022-07-08 06:47:01.252272: Average global foreground Dice: [0.8075]
2022-07-08 06:47:01.278362: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:47:02.030619: Suus1 maybe_update_lr lr: 0.009004
2022-07-08 06:47:02.061344: saving best epoch checkpoint...
2022-07-08 06:47:02.165605: saving checkpoint...
2022-07-08 06:47:03.719444: done, saving took 1.64 seconds
2022-07-08 06:47:03.736474: This epoch took 78.513152 s

2022-07-08 06:47:03.738858: 
epoch:  55
2022-07-08 06:48:15.063138: train loss : -0.7664
2022-07-08 06:48:19.888012: validation loss: -0.7368
2022-07-08 06:48:19.928766: Average global foreground Dice: [0.798]
2022-07-08 06:48:19.948488: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:48:20.614660: Suus1 maybe_update_lr lr: 0.008986
2022-07-08 06:48:20.635884: saving best epoch checkpoint...
2022-07-08 06:48:20.751713: saving checkpoint...
2022-07-08 06:48:22.452685: done, saving took 1.79 seconds
2022-07-08 06:48:22.467884: This epoch took 78.726928 s

2022-07-08 06:48:22.469787: 
epoch:  56
2022-07-08 06:49:35.123196: train loss : -0.7734
2022-07-08 06:49:40.542950: validation loss: -0.7401
2022-07-08 06:49:40.565259: Average global foreground Dice: [0.8019]
2022-07-08 06:49:40.584329: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:49:41.346414: Suus1 maybe_update_lr lr: 0.008968
2022-07-08 06:49:41.376086: saving best epoch checkpoint...
2022-07-08 06:49:41.616242: saving checkpoint...
2022-07-08 06:49:43.654304: done, saving took 2.27 seconds
2022-07-08 06:49:43.671988: This epoch took 81.200335 s

2022-07-08 06:49:43.674474: 
epoch:  57
2022-07-08 06:50:54.483499: train loss : -0.7731
2022-07-08 06:50:59.433254: validation loss: -0.7568
2022-07-08 06:50:59.469465: Average global foreground Dice: [0.8156]
2022-07-08 06:50:59.489892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:51:00.142711: Suus1 maybe_update_lr lr: 0.00895
2022-07-08 06:51:00.168310: saving best epoch checkpoint...
2022-07-08 06:51:00.260734: saving checkpoint...
2022-07-08 06:51:02.066925: done, saving took 1.87 seconds
2022-07-08 06:51:02.080963: This epoch took 78.403919 s

2022-07-08 06:51:02.082960: 
epoch:  58
2022-07-08 06:52:12.515147: train loss : -0.7681
2022-07-08 06:52:17.913402: validation loss: -0.7443
2022-07-08 06:52:17.948278: Average global foreground Dice: [0.8066]
2022-07-08 06:52:17.969877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:52:18.728727: Suus1 maybe_update_lr lr: 0.008931
2022-07-08 06:52:18.752913: saving best epoch checkpoint...
2022-07-08 06:52:18.824260: saving checkpoint...
2022-07-08 06:52:20.615598: done, saving took 1.84 seconds
2022-07-08 06:52:20.630383: This epoch took 78.545375 s

2022-07-08 06:52:20.632662: 
epoch:  59
2022-07-08 06:53:31.630696: train loss : -0.7831
2022-07-08 06:53:36.638650: validation loss: -0.7642
2022-07-08 06:53:36.665458: Average global foreground Dice: [0.8173]
2022-07-08 06:53:36.687878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:53:37.431176: Suus1 maybe_update_lr lr: 0.008913
2022-07-08 06:53:37.452081: saving best epoch checkpoint...
2022-07-08 06:53:37.541496: saving checkpoint...
2022-07-08 06:53:39.028816: done, saving took 1.55 seconds
2022-07-08 06:53:39.042887: This epoch took 78.407943 s

2022-07-08 06:53:39.044900: 
epoch:  60
2022-07-08 06:54:50.560120: train loss : -0.7826
2022-07-08 06:54:55.369503: validation loss: -0.7484
2022-07-08 06:54:55.422367: Average global foreground Dice: [0.8122]
2022-07-08 06:54:55.451032: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:54:56.214774: Suus1 maybe_update_lr lr: 0.008895
2022-07-08 06:54:56.235053: saving best epoch checkpoint...
2022-07-08 06:54:56.315014: saving checkpoint...
2022-07-08 06:54:57.983784: done, saving took 1.73 seconds
2022-07-08 06:54:57.997630: This epoch took 78.950960 s

2022-07-08 06:54:57.999779: 
epoch:  61
2022-07-08 06:56:08.796879: train loss : -0.7850
2022-07-08 06:56:13.798761: validation loss: -0.7489
2022-07-08 06:56:13.809861: Average global foreground Dice: [0.8096]
2022-07-08 06:56:13.827865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:56:14.564098: Suus1 maybe_update_lr lr: 0.008877
2022-07-08 06:56:14.595026: saving best epoch checkpoint...
2022-07-08 06:56:14.698260: saving checkpoint...
2022-07-08 06:56:16.187705: done, saving took 1.57 seconds
2022-07-08 06:56:16.205082: This epoch took 78.203291 s

2022-07-08 06:56:16.208047: 
epoch:  62
2022-07-08 06:57:27.375370: train loss : -0.7857
2022-07-08 06:57:31.991211: validation loss: -0.7458
2022-07-08 06:57:32.022264: Average global foreground Dice: [0.8068]
2022-07-08 06:57:32.041009: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:57:32.851923: Suus1 maybe_update_lr lr: 0.008859
2022-07-08 06:57:32.872881: saving best epoch checkpoint...
2022-07-08 06:57:32.955971: saving checkpoint...
2022-07-08 06:57:34.636389: done, saving took 1.74 seconds
2022-07-08 06:57:34.651969: This epoch took 78.441439 s

2022-07-08 06:57:34.654293: 
epoch:  63
2022-07-08 06:58:46.808816: train loss : -0.7904
2022-07-08 06:58:52.370241: validation loss: -0.7561
2022-07-08 06:58:52.395582: Average global foreground Dice: [0.8139]
2022-07-08 06:58:52.415286: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:58:53.025445: Suus1 maybe_update_lr lr: 0.00884
2022-07-08 06:58:53.046903: saving best epoch checkpoint...
2022-07-08 06:58:53.114225: saving checkpoint...
2022-07-08 06:58:54.853262: done, saving took 1.78 seconds
2022-07-08 06:58:54.868586: This epoch took 80.212037 s

2022-07-08 06:58:54.870726: 
epoch:  64
2022-07-08 07:00:08.121805: train loss : -0.7852
2022-07-08 07:00:13.213093: validation loss: -0.7403
2022-07-08 07:00:13.257286: Average global foreground Dice: [0.8056]
2022-07-08 07:00:13.275486: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:00:13.990508: Suus1 maybe_update_lr lr: 0.008822
2022-07-08 07:00:14.003901: saving best epoch checkpoint...
2022-07-08 07:00:14.108821: saving checkpoint...
2022-07-08 07:00:15.944695: done, saving took 1.93 seconds
2022-07-08 07:00:15.966412: This epoch took 81.093646 s

2022-07-08 07:00:15.968612: 
epoch:  65
2022-07-08 07:01:27.327849: train loss : -0.7867
2022-07-08 07:01:32.582408: validation loss: -0.7476
2022-07-08 07:01:32.612292: Average global foreground Dice: [0.8119]
2022-07-08 07:01:32.640877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:01:33.337865: Suus1 maybe_update_lr lr: 0.008804
2022-07-08 07:01:33.358878: saving best epoch checkpoint...
2022-07-08 07:01:33.513285: saving checkpoint...
2022-07-08 07:01:35.166354: done, saving took 1.79 seconds
2022-07-08 07:01:35.184089: This epoch took 79.213383 s

2022-07-08 07:01:35.186454: 
epoch:  66
2022-07-08 07:02:47.472032: train loss : -0.7812
2022-07-08 07:02:52.761349: validation loss: -0.7650
2022-07-08 07:02:52.795759: Average global foreground Dice: [0.8195]
2022-07-08 07:02:52.824888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:02:53.725788: Suus1 maybe_update_lr lr: 0.008785
2022-07-08 07:02:53.742888: saving best epoch checkpoint...
2022-07-08 07:02:53.854697: saving checkpoint...
2022-07-08 07:02:55.698703: done, saving took 1.94 seconds
2022-07-08 07:02:55.714726: This epoch took 80.526016 s

2022-07-08 07:02:55.716751: 
epoch:  67
2022-07-08 07:04:07.956418: train loss : -0.7843
2022-07-08 07:04:13.447051: validation loss: -0.7470
2022-07-08 07:04:13.491259: Average global foreground Dice: [0.8068]
2022-07-08 07:04:13.512627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:04:14.218844: Suus1 maybe_update_lr lr: 0.008767
2022-07-08 07:04:14.255871: saving best epoch checkpoint...
2022-07-08 07:04:14.332299: saving checkpoint...
2022-07-08 07:04:15.998114: done, saving took 1.73 seconds
2022-07-08 07:04:16.014972: This epoch took 80.296285 s

2022-07-08 07:04:16.017277: 
epoch:  68
2022-07-08 07:05:27.299351: train loss : -0.7847
2022-07-08 07:05:32.442618: validation loss: -0.7402
2022-07-08 07:05:32.478269: Average global foreground Dice: [0.8045]
2022-07-08 07:05:32.491178: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:05:33.305518: Suus1 maybe_update_lr lr: 0.008749
2022-07-08 07:05:33.326524: This epoch took 77.307030 s

2022-07-08 07:05:33.345984: 
epoch:  69
2022-07-08 07:06:44.685778: train loss : -0.7868
2022-07-08 07:06:50.081323: validation loss: -0.7177
2022-07-08 07:06:50.121426: Average global foreground Dice: [0.785]
2022-07-08 07:06:50.152054: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:06:51.000260: Suus1 maybe_update_lr lr: 0.008731
2022-07-08 07:06:51.032915: This epoch took 77.666332 s

2022-07-08 07:06:51.054896: 
epoch:  70
2022-07-08 07:08:02.190895: train loss : -0.7652
2022-07-08 07:08:07.352132: validation loss: -0.7309
2022-07-08 07:08:07.369974: Average global foreground Dice: [0.7975]
2022-07-08 07:08:07.383377: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:08:08.066309: Suus1 maybe_update_lr lr: 0.008712
2022-07-08 07:08:08.090327: This epoch took 77.015341 s

2022-07-08 07:08:08.106088: 
epoch:  71
2022-07-08 07:09:20.412132: train loss : -0.7803
2022-07-08 07:09:26.475658: validation loss: -0.7475
2022-07-08 07:09:26.491263: Average global foreground Dice: [0.808]
2022-07-08 07:09:26.505685: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:09:27.201947: Suus1 maybe_update_lr lr: 0.008694
2022-07-08 07:09:27.208024: This epoch took 79.095858 s

2022-07-08 07:09:27.241864: 
epoch:  72
2022-07-08 07:10:38.706231: train loss : -0.7894
2022-07-08 07:10:44.265909: validation loss: -0.7547
2022-07-08 07:10:44.314284: Average global foreground Dice: [0.8128]
2022-07-08 07:10:44.343354: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:10:45.100394: Suus1 maybe_update_lr lr: 0.008676
2022-07-08 07:10:45.122960: This epoch took 77.867090 s

2022-07-08 07:10:45.144870: 
epoch:  73
2022-07-08 07:11:57.907297: train loss : -0.7858
2022-07-08 07:12:02.958474: validation loss: -0.7521
2022-07-08 07:12:02.967565: Average global foreground Dice: [0.8115]
2022-07-08 07:12:03.003866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:12:03.792727: Suus1 maybe_update_lr lr: 0.008658
2022-07-08 07:12:03.815027: This epoch took 78.643087 s

2022-07-08 07:12:03.836879: 
epoch:  74
2022-07-08 07:13:13.920680: train loss : -0.7889
2022-07-08 07:13:19.106300: validation loss: -0.7605
2022-07-08 07:13:19.138381: Average global foreground Dice: [0.8157]
2022-07-08 07:13:19.159908: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:13:19.802358: Suus1 maybe_update_lr lr: 0.008639
2022-07-08 07:13:19.804848: saving best epoch checkpoint...
2022-07-08 07:13:19.949145: saving checkpoint...
2022-07-08 07:13:21.585917: done, saving took 1.78 seconds
2022-07-08 07:13:21.603565: This epoch took 77.753030 s

2022-07-08 07:13:21.605740: 
epoch:  75
2022-07-08 07:14:31.388166: train loss : -0.7931
2022-07-08 07:14:36.274130: validation loss: -0.7459
2022-07-08 07:14:36.292588: Average global foreground Dice: [0.8065]
2022-07-08 07:14:36.310901: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:14:37.042209: Suus1 maybe_update_lr lr: 0.008621
2022-07-08 07:14:37.062889: saving best epoch checkpoint...
2022-07-08 07:14:37.155096: saving checkpoint...
2022-07-08 07:14:38.743092: done, saving took 1.66 seconds
2022-07-08 07:14:38.761555: This epoch took 77.153684 s

2022-07-08 07:14:38.763831: 
epoch:  76
2022-07-08 07:15:49.485135: train loss : -0.7981
2022-07-08 07:15:54.777378: validation loss: -0.7402
2022-07-08 07:15:54.805436: Average global foreground Dice: [0.7993]
2022-07-08 07:15:54.833963: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:15:55.400518: Suus1 maybe_update_lr lr: 0.008603
2022-07-08 07:15:55.420643: This epoch took 76.654756 s

2022-07-08 07:15:55.438799: 
epoch:  77
2022-07-08 07:17:06.453201: train loss : -0.7929
2022-07-08 07:17:11.585408: validation loss: -0.7349
2022-07-08 07:17:11.621308: Average global foreground Dice: [0.7949]
2022-07-08 07:17:11.644867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:17:12.391747: Suus1 maybe_update_lr lr: 0.008584
2022-07-08 07:17:12.413095: This epoch took 76.954358 s

2022-07-08 07:17:12.433124: 
epoch:  78
2022-07-08 07:18:25.740358: train loss : -0.7966
2022-07-08 07:18:31.265062: validation loss: -0.7531
2022-07-08 07:18:31.271779: Average global foreground Dice: [0.8056]
2022-07-08 07:18:31.295166: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:18:31.973389: Suus1 maybe_update_lr lr: 0.008566
2022-07-08 07:18:31.992924: This epoch took 79.520857 s

2022-07-08 07:18:32.014865: 
epoch:  79
2022-07-08 07:19:44.310081: train loss : -0.8015
2022-07-08 07:19:49.279395: validation loss: -0.7354
2022-07-08 07:19:49.300030: Average global foreground Dice: [0.7852]
2022-07-08 07:19:49.338863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:19:50.106409: Suus1 maybe_update_lr lr: 0.008548
2022-07-08 07:19:50.138891: This epoch took 78.102016 s

2022-07-08 07:19:50.160845: 
epoch:  80
2022-07-08 07:21:02.469036: train loss : -0.7964
2022-07-08 07:21:07.722336: validation loss: -0.7482
2022-07-08 07:21:07.756262: Average global foreground Dice: [0.8075]
2022-07-08 07:21:07.777885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:21:08.459784: Suus1 maybe_update_lr lr: 0.008529
2022-07-08 07:21:08.480957: This epoch took 78.296079 s

2022-07-08 07:21:08.502971: 
epoch:  81
2022-07-08 07:22:19.585882: train loss : -0.7983
2022-07-08 07:22:24.922171: validation loss: -0.7556
2022-07-08 07:22:24.950995: Average global foreground Dice: [0.8184]
2022-07-08 07:22:24.982883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:22:25.789273: Suus1 maybe_update_lr lr: 0.008511
2022-07-08 07:22:25.798730: This epoch took 77.275562 s

2022-07-08 07:22:25.811883: 
epoch:  82
2022-07-08 07:23:35.921038: train loss : -0.8013
2022-07-08 07:23:40.923709: validation loss: -0.7558
2022-07-08 07:23:40.951463: Average global foreground Dice: [0.8122]
2022-07-08 07:23:40.972108: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:23:41.566508: Suus1 maybe_update_lr lr: 0.008493
2022-07-08 07:23:41.598898: This epoch took 75.784576 s

2022-07-08 07:23:41.614004: 
epoch:  83
2022-07-08 07:24:52.861435: train loss : -0.8045
2022-07-08 07:24:57.912138: validation loss: -0.7422
2022-07-08 07:24:57.932804: Average global foreground Dice: [0.8042]
2022-07-08 07:24:57.957900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:24:58.770289: Suus1 maybe_update_lr lr: 0.008474
2022-07-08 07:24:58.802909: This epoch took 77.167038 s

2022-07-08 07:24:58.841147: 
epoch:  84
2022-07-08 07:26:09.273139: train loss : -0.8102
2022-07-08 07:26:14.370429: validation loss: -0.7541
2022-07-08 07:26:14.418247: Average global foreground Dice: [0.8098]
2022-07-08 07:26:14.461860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:26:15.291334: Suus1 maybe_update_lr lr: 0.008456
2022-07-08 07:26:15.345899: This epoch took 76.488750 s

2022-07-08 07:26:15.378859: 
epoch:  85
2022-07-08 07:27:28.370159: train loss : -0.8071
2022-07-08 07:27:34.302419: validation loss: -0.7661
2022-07-08 07:27:34.333530: Average global foreground Dice: [0.815]
2022-07-08 07:27:34.345878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:27:35.222190: Suus1 maybe_update_lr lr: 0.008438
2022-07-08 07:27:35.252901: saving best epoch checkpoint...
2022-07-08 07:27:35.418063: saving checkpoint...
2022-07-08 07:27:37.193276: done, saving took 1.91 seconds
2022-07-08 07:27:37.210135: This epoch took 81.815018 s

2022-07-08 07:27:37.212521: 
epoch:  86
2022-07-08 07:28:48.315084: train loss : -0.8008
2022-07-08 07:28:53.253640: validation loss: -0.7524
2022-07-08 07:28:53.293292: Average global foreground Dice: [0.8037]
2022-07-08 07:28:53.305878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:28:54.069654: Suus1 maybe_update_lr lr: 0.008419
2022-07-08 07:28:54.089924: This epoch took 76.875174 s

2022-07-08 07:28:54.115859: 
epoch:  87
2022-07-08 07:30:05.699262: train loss : -0.8050
2022-07-08 07:30:10.787840: validation loss: -0.7306
2022-07-08 07:30:10.800444: Average global foreground Dice: [0.7984]
2022-07-08 07:30:10.827864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:30:11.438970: Suus1 maybe_update_lr lr: 0.008401
2022-07-08 07:30:11.456637: This epoch took 77.318772 s

2022-07-08 07:30:11.467319: 
epoch:  88
2022-07-08 07:31:23.275112: train loss : -0.8067
2022-07-08 07:31:28.448667: validation loss: -0.7515
2022-07-08 07:31:28.479412: Average global foreground Dice: [0.814]
2022-07-08 07:31:28.494877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:31:29.343196: Suus1 maybe_update_lr lr: 0.008383
2022-07-08 07:31:29.364915: This epoch took 77.875901 s

2022-07-08 07:31:29.396178: 
epoch:  89
2022-07-08 07:32:41.882062: train loss : -0.8044
2022-07-08 07:32:46.605244: validation loss: -0.7446
2022-07-08 07:32:46.628989: Average global foreground Dice: [0.8068]
2022-07-08 07:32:46.658878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:32:47.236054: Suus1 maybe_update_lr lr: 0.008364
2022-07-08 07:32:47.256928: This epoch took 77.840563 s

2022-07-08 07:32:47.289884: 
epoch:  90
2022-07-08 07:33:59.663442: train loss : -0.7980
2022-07-08 07:34:04.811802: validation loss: -0.7440
2022-07-08 07:34:04.854262: Average global foreground Dice: [0.8039]
2022-07-08 07:34:04.873885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:34:05.689317: Suus1 maybe_update_lr lr: 0.008346
2022-07-08 07:34:05.700913: This epoch took 78.400038 s

2022-07-08 07:34:05.722892: 
epoch:  91
2022-07-08 07:35:18.852483: train loss : -0.8052
2022-07-08 07:35:24.180382: validation loss: -0.7446
2022-07-08 07:35:24.203724: Average global foreground Dice: [0.8056]
2022-07-08 07:35:24.221010: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:35:24.828587: Suus1 maybe_update_lr lr: 0.008328
2022-07-08 07:35:24.853886: This epoch took 79.088812 s

2022-07-08 07:35:24.856513: 
epoch:  92
2022-07-08 07:36:36.694568: train loss : -0.7908
2022-07-08 07:36:42.166105: validation loss: -0.7591
2022-07-08 07:36:42.191379: Average global foreground Dice: [0.814]
2022-07-08 07:36:42.212873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:36:42.895185: Suus1 maybe_update_lr lr: 0.008309
2022-07-08 07:36:42.918911: saving best epoch checkpoint...
2022-07-08 07:36:43.076997: saving checkpoint...
2022-07-08 07:36:44.790871: done, saving took 1.85 seconds
2022-07-08 07:36:44.809072: This epoch took 79.946080 s

2022-07-08 07:36:44.811191: 
epoch:  93
2022-07-08 07:37:54.972876: train loss : -0.7848
2022-07-08 07:38:00.268548: validation loss: -0.7364
2022-07-08 07:38:00.295285: Average global foreground Dice: [0.8014]
2022-07-08 07:38:00.304684: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:38:01.036904: Suus1 maybe_update_lr lr: 0.008291
2022-07-08 07:38:01.045389: This epoch took 76.232125 s

2022-07-08 07:38:01.066869: 
epoch:  94
2022-07-08 07:39:12.309031: train loss : -0.7772
2022-07-08 07:39:17.828465: validation loss: -0.7485
2022-07-08 07:39:17.854147: Average global foreground Dice: [0.806]
2022-07-08 07:39:17.872018: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:39:18.552164: Suus1 maybe_update_lr lr: 0.008272
2022-07-08 07:39:18.581322: This epoch took 77.508762 s

2022-07-08 07:39:18.601321: 
epoch:  95
2022-07-08 07:40:28.522307: train loss : -0.7974
2022-07-08 07:40:33.788828: validation loss: -0.7326
2022-07-08 07:40:33.820713: Average global foreground Dice: [0.7953]
2022-07-08 07:40:33.848864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:40:34.620406: Suus1 maybe_update_lr lr: 0.008254
2022-07-08 07:40:34.638898: This epoch took 76.018044 s

2022-07-08 07:40:34.660863: 
epoch:  96
2022-07-08 07:41:46.011020: train loss : -0.7941
2022-07-08 07:41:51.033980: validation loss: -0.7703
2022-07-08 07:41:51.059307: Average global foreground Dice: [0.8246]
2022-07-08 07:41:51.067814: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:41:51.780657: Suus1 maybe_update_lr lr: 0.008236
2022-07-08 07:41:51.786509: saving best epoch checkpoint...
2022-07-08 07:41:51.866179: saving checkpoint...
2022-07-08 07:41:53.461440: done, saving took 1.65 seconds
2022-07-08 07:41:53.476643: This epoch took 78.793773 s

2022-07-08 07:41:53.478832: 
epoch:  97
2022-07-08 07:43:03.588243: train loss : -0.8052
2022-07-08 07:43:08.680113: validation loss: -0.7580
2022-07-08 07:43:08.729970: Average global foreground Dice: [0.8203]
2022-07-08 07:43:08.750923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:43:09.382597: Suus1 maybe_update_lr lr: 0.008217
2022-07-08 07:43:09.398290: saving best epoch checkpoint...
2022-07-08 07:43:09.495231: saving checkpoint...
2022-07-08 07:43:11.186722: done, saving took 1.75 seconds
2022-07-08 07:43:11.204080: This epoch took 77.723176 s

2022-07-08 07:43:11.206204: 
epoch:  98
2022-07-08 07:44:21.656568: train loss : -0.8074
2022-07-08 07:44:26.542612: validation loss: -0.7532
2022-07-08 07:44:26.566319: Average global foreground Dice: [0.8092]
2022-07-08 07:44:26.592895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:44:27.112972: Suus1 maybe_update_lr lr: 0.008199
2022-07-08 07:44:27.140135: saving best epoch checkpoint...
2022-07-08 07:44:27.294926: saving checkpoint...
2022-07-08 07:44:29.078800: done, saving took 1.92 seconds
2022-07-08 07:44:29.094332: This epoch took 77.886046 s

2022-07-08 07:44:29.096524: 
epoch:  99
2022-07-08 07:45:41.613058: train loss : -0.8102
2022-07-08 07:45:46.948526: validation loss: -0.7280
2022-07-08 07:45:46.980452: Average global foreground Dice: [0.7915]
2022-07-08 07:45:47.013011: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:45:47.746869: Suus1 maybe_update_lr lr: 0.008181
2022-07-08 07:45:47.766993: saving scheduled checkpoint file...
2022-07-08 07:45:47.867373: saving checkpoint...
2022-07-08 07:45:49.557931: done, saving took 1.79 seconds
2022-07-08 07:45:49.575716: done
2022-07-08 07:45:49.577801: This epoch took 80.479328 s

2022-07-08 07:45:49.579840: 
epoch:  100
2022-07-08 07:47:00.514057: train loss : -0.8071
2022-07-08 07:47:05.315921: validation loss: -0.7573
2022-07-08 07:47:05.334409: Average global foreground Dice: [0.8131]
2022-07-08 07:47:05.362923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:47:06.274309: Suus1 maybe_update_lr lr: 0.008162
2022-07-08 07:47:06.306921: This epoch took 76.724891 s

2022-07-08 07:47:06.338002: 
epoch:  101
2022-07-08 07:48:18.448604: train loss : -0.8126
2022-07-08 07:48:23.093197: validation loss: -0.7610
2022-07-08 07:48:23.125739: Average global foreground Dice: [0.8225]
2022-07-08 07:48:23.137777: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:48:23.912911: Suus1 maybe_update_lr lr: 0.008144
2022-07-08 07:48:23.933488: saving best epoch checkpoint...
2022-07-08 07:48:24.018683: saving checkpoint...
2022-07-08 07:48:25.592847: done, saving took 1.63 seconds
2022-07-08 07:48:25.607688: This epoch took 79.247784 s

2022-07-08 07:48:25.609939: 
epoch:  102
2022-07-08 07:49:35.775403: train loss : -0.8048
2022-07-08 07:49:40.500530: validation loss: -0.7457
2022-07-08 07:49:40.532712: Average global foreground Dice: [0.8036]
2022-07-08 07:49:40.556182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:49:41.338918: Suus1 maybe_update_lr lr: 0.008125
2022-07-08 07:49:41.353402: This epoch took 75.741413 s

2022-07-08 07:49:41.355595: 
epoch:  103
2022-07-08 07:50:52.917642: train loss : -0.8079
2022-07-08 07:50:57.949974: validation loss: -0.7421
2022-07-08 07:50:57.964499: Average global foreground Dice: [0.803]
2022-07-08 07:50:57.993921: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:50:58.748912: Suus1 maybe_update_lr lr: 0.008107
2022-07-08 07:50:58.767058: This epoch took 77.409067 s

2022-07-08 07:50:58.791713: 
epoch:  104
2022-07-08 07:52:10.560194: train loss : -0.8050
2022-07-08 07:52:15.671385: validation loss: -0.7746
2022-07-08 07:52:15.722375: Average global foreground Dice: [0.827]
2022-07-08 07:52:15.738255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:52:16.257592: Suus1 maybe_update_lr lr: 0.008088
2022-07-08 07:52:16.275946: saving best epoch checkpoint...
2022-07-08 07:52:16.347276: saving checkpoint...
2022-07-08 07:52:17.898224: done, saving took 1.60 seconds
2022-07-08 07:52:17.914663: This epoch took 79.078801 s

2022-07-08 07:52:17.917031: 
epoch:  105
2022-07-08 07:53:27.760948: train loss : -0.8098
2022-07-08 07:53:32.665426: validation loss: -0.7707
2022-07-08 07:53:32.698323: Average global foreground Dice: [0.8241]
2022-07-08 07:53:32.730923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:53:33.324783: Suus1 maybe_update_lr lr: 0.00807
2022-07-08 07:53:33.351185: saving best epoch checkpoint...
2022-07-08 07:53:33.430573: saving checkpoint...
2022-07-08 07:53:35.002836: done, saving took 1.62 seconds
2022-07-08 07:53:35.017331: This epoch took 77.098172 s

2022-07-08 07:53:35.019555: 
epoch:  106
2022-07-08 07:54:44.737480: train loss : -0.8096
2022-07-08 07:54:49.635500: validation loss: -0.7666
2022-07-08 07:54:49.639061: Average global foreground Dice: [0.8216]
2022-07-08 07:54:49.646077: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:54:50.339434: Suus1 maybe_update_lr lr: 0.008052
2022-07-08 07:54:50.371236: saving best epoch checkpoint...
2022-07-08 07:54:50.465029: saving checkpoint...
2022-07-08 07:54:52.095347: done, saving took 1.70 seconds
2022-07-08 07:54:52.110567: This epoch took 77.088976 s

2022-07-08 07:54:52.112653: 
epoch:  107
2022-07-08 07:56:03.622240: train loss : -0.8185
2022-07-08 07:56:08.449727: validation loss: -0.7548
2022-07-08 07:56:08.465356: Average global foreground Dice: [0.8066]
2022-07-08 07:56:08.504878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:56:09.038065: Suus1 maybe_update_lr lr: 0.008033
2022-07-08 07:56:09.069278: This epoch took 76.954559 s

2022-07-08 07:56:09.073908: 
epoch:  108
2022-07-08 07:57:21.743204: train loss : -0.8176
2022-07-08 07:57:27.208906: validation loss: -0.7524
2022-07-08 07:57:27.255248: Average global foreground Dice: [0.8096]
2022-07-08 07:57:27.276968: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:57:28.044762: Suus1 maybe_update_lr lr: 0.008015
2022-07-08 07:57:28.079091: This epoch took 78.972667 s

2022-07-08 07:57:28.111892: 
epoch:  109
2022-07-08 07:58:40.549847: train loss : -0.8176
2022-07-08 07:58:45.883533: validation loss: -0.7338
2022-07-08 07:58:45.904216: Average global foreground Dice: [0.7942]
2022-07-08 07:58:45.920868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:58:46.556529: Suus1 maybe_update_lr lr: 0.007996
2022-07-08 07:58:46.559255: This epoch took 78.427395 s

2022-07-08 07:58:46.577903: 
epoch:  110
2022-07-08 07:59:57.327814: train loss : -0.8159
2022-07-08 08:00:02.861163: validation loss: -0.7480
2022-07-08 08:00:02.883277: Average global foreground Dice: [0.808]
2022-07-08 08:00:02.897289: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:00:03.700151: Suus1 maybe_update_lr lr: 0.007978
2022-07-08 08:00:03.719846: This epoch took 77.118884 s

2022-07-08 08:00:03.728461: 
epoch:  111
2022-07-08 08:01:15.609173: train loss : -0.8196
2022-07-08 08:01:21.657264: validation loss: -0.7634
2022-07-08 08:01:21.687286: Average global foreground Dice: [0.8237]
2022-07-08 08:01:21.702876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:01:22.415225: Suus1 maybe_update_lr lr: 0.007959
2022-07-08 08:01:22.434884: This epoch took 78.675982 s

2022-07-08 08:01:22.448961: 
epoch:  112
2022-07-08 08:02:33.809251: train loss : -0.8258
2022-07-08 08:02:38.826662: validation loss: -0.7511
2022-07-08 08:02:38.830871: Average global foreground Dice: [0.8075]
2022-07-08 08:02:38.845183: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:02:39.561235: Suus1 maybe_update_lr lr: 0.007941
2022-07-08 08:02:39.591921: This epoch took 77.138970 s

2022-07-08 08:02:39.610842: 
epoch:  113
2022-07-08 08:03:52.602885: train loss : -0.8269
2022-07-08 08:03:57.826449: validation loss: -0.7662
2022-07-08 08:03:57.867421: Average global foreground Dice: [0.8223]
2022-07-08 08:03:57.897341: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:03:58.524697: Suus1 maybe_update_lr lr: 0.007922
2022-07-08 08:03:58.527538: This epoch took 78.904850 s

2022-07-08 08:03:58.530217: 
epoch:  114
2022-07-08 08:05:10.082653: train loss : -0.8287
2022-07-08 08:05:15.492680: validation loss: -0.7570
2022-07-08 08:05:15.507232: Average global foreground Dice: [0.8122]
2022-07-08 08:05:15.519900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:05:16.260865: Suus1 maybe_update_lr lr: 0.007904
2022-07-08 08:05:16.278308: This epoch took 77.735943 s

2022-07-08 08:05:16.291899: 
epoch:  115
2022-07-08 08:06:26.081098: train loss : -0.8197
2022-07-08 08:06:31.559927: validation loss: -0.7676
2022-07-08 08:06:31.595307: Average global foreground Dice: [0.8184]
2022-07-08 08:06:31.618871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:06:32.375621: Suus1 maybe_update_lr lr: 0.007885
2022-07-08 08:06:32.395034: saving best epoch checkpoint...
2022-07-08 08:06:32.523733: saving checkpoint...
2022-07-08 08:06:34.285272: done, saving took 1.86 seconds
2022-07-08 08:06:34.302135: This epoch took 77.983465 s

2022-07-08 08:06:34.304207: 
epoch:  116
2022-07-08 08:07:46.219398: train loss : -0.8318
2022-07-08 08:07:51.535186: validation loss: -0.7592
2022-07-08 08:07:51.582556: Average global foreground Dice: [0.816]
2022-07-08 08:07:51.601888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:07:52.235335: Suus1 maybe_update_lr lr: 0.007867
2022-07-08 08:07:52.255894: saving best epoch checkpoint...
2022-07-08 08:07:52.348316: saving checkpoint...
2022-07-08 08:07:53.968929: done, saving took 1.69 seconds
2022-07-08 08:07:53.985892: This epoch took 79.679718 s

2022-07-08 08:07:53.988089: 
epoch:  117
2022-07-08 08:09:04.751257: train loss : -0.8288
2022-07-08 08:09:10.172748: validation loss: -0.7429
2022-07-08 08:09:10.204255: Average global foreground Dice: [0.8026]
2022-07-08 08:09:10.226879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:09:11.182984: Suus1 maybe_update_lr lr: 0.007848
2022-07-08 08:09:11.204084: This epoch took 77.213924 s

2022-07-08 08:09:11.211030: 
epoch:  118
2022-07-08 08:10:21.756967: train loss : -0.8340
2022-07-08 08:10:26.588735: validation loss: -0.7542
2022-07-08 08:10:26.637352: Average global foreground Dice: [0.8098]
2022-07-08 08:10:26.658872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:10:27.622094: Suus1 maybe_update_lr lr: 0.00783
2022-07-08 08:10:27.635867: This epoch took 76.422442 s

2022-07-08 08:10:27.644331: 
epoch:  119
2022-07-08 08:11:38.980033: train loss : -0.8317
2022-07-08 08:11:44.023400: validation loss: -0.7581
2022-07-08 08:11:44.057270: Average global foreground Dice: [0.8142]
2022-07-08 08:11:44.082187: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:11:44.618564: Suus1 maybe_update_lr lr: 0.007811
2022-07-08 08:11:44.637903: This epoch took 76.951817 s

2022-07-08 08:11:44.659852: 
epoch:  120
2022-07-08 08:12:57.706161: train loss : -0.8243
2022-07-08 08:13:02.841680: validation loss: -0.7514
2022-07-08 08:13:02.877316: Average global foreground Dice: [0.8081]
2022-07-08 08:13:02.898893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:13:03.529191: Suus1 maybe_update_lr lr: 0.007793
2022-07-08 08:13:03.546167: This epoch took 78.864295 s

2022-07-08 08:13:03.576853: 
epoch:  121
2022-07-08 08:14:16.726061: train loss : -0.8127
2022-07-08 08:14:22.245474: validation loss: -0.7383
2022-07-08 08:14:22.276209: Average global foreground Dice: [0.806]
2022-07-08 08:14:22.302847: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:14:23.165079: Suus1 maybe_update_lr lr: 0.007774
2022-07-08 08:14:23.186949: This epoch took 79.589704 s

2022-07-08 08:14:23.211567: 
epoch:  122
2022-07-08 08:15:35.650563: train loss : -0.8170
2022-07-08 08:15:41.242955: validation loss: -0.7567
2022-07-08 08:15:41.284746: Average global foreground Dice: [0.8126]
2022-07-08 08:15:41.304663: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:15:42.009022: Suus1 maybe_update_lr lr: 0.007756
2022-07-08 08:15:42.029895: This epoch took 78.787628 s

2022-07-08 08:15:42.042651: 
epoch:  123
2022-07-08 08:16:54.331949: train loss : -0.8288
2022-07-08 08:16:59.474381: validation loss: -0.7608
2022-07-08 08:16:59.505348: Average global foreground Dice: [0.8131]
2022-07-08 08:16:59.522065: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:17:00.221251: Suus1 maybe_update_lr lr: 0.007737
2022-07-08 08:17:00.232029: This epoch took 78.144885 s

2022-07-08 08:17:00.239426: 
epoch:  124
2022-07-08 08:18:11.678877: train loss : -0.8335
2022-07-08 08:18:16.505269: validation loss: -0.7418
2022-07-08 08:18:16.535286: Average global foreground Dice: [0.8019]
2022-07-08 08:18:16.567878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:18:17.305768: Suus1 maybe_update_lr lr: 0.007719
2022-07-08 08:18:17.318899: This epoch took 77.062279 s

2022-07-08 08:18:17.347149: 
epoch:  125
2022-07-08 08:19:29.266969: train loss : -0.8302
2022-07-08 08:19:34.670315: validation loss: -0.7564
2022-07-08 08:19:34.705214: Average global foreground Dice: [0.8133]
2022-07-08 08:19:34.737880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:19:35.237635: Suus1 maybe_update_lr lr: 0.0077
2022-07-08 08:19:35.246145: This epoch took 77.868287 s

2022-07-08 08:19:35.274131: 
epoch:  126
2022-07-08 08:20:47.729737: train loss : -0.8327
2022-07-08 08:20:53.006585: validation loss: -0.7667
2022-07-08 08:20:53.009773: Average global foreground Dice: [0.8239]
2022-07-08 08:20:53.021119: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:20:53.816296: Suus1 maybe_update_lr lr: 0.007682
2022-07-08 08:20:53.839908: This epoch took 78.544057 s

2022-07-08 08:20:53.860917: 
epoch:  127
2022-07-08 08:22:05.850897: train loss : -0.8297
2022-07-08 08:22:11.007533: validation loss: -0.7557
2022-07-08 08:22:11.036500: Average global foreground Dice: [0.8116]
2022-07-08 08:22:11.038801: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:22:11.960908: Suus1 maybe_update_lr lr: 0.007663
2022-07-08 08:22:11.969033: This epoch took 78.100670 s

2022-07-08 08:22:11.978623: 
epoch:  128
2022-07-08 08:23:23.465614: train loss : -0.8218
2022-07-08 08:23:28.362630: validation loss: -0.7665
2022-07-08 08:23:28.376604: Average global foreground Dice: [0.8191]
2022-07-08 08:23:28.386050: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:23:29.048058: Suus1 maybe_update_lr lr: 0.007645
2022-07-08 08:23:29.070010: This epoch took 77.084253 s

2022-07-08 08:23:29.100139: 
epoch:  129
2022-07-08 08:24:41.310047: train loss : -0.8293
2022-07-08 08:24:46.534152: validation loss: -0.7502
2022-07-08 08:24:46.558228: Average global foreground Dice: [0.8073]
2022-07-08 08:24:46.571699: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:24:47.293523: Suus1 maybe_update_lr lr: 0.007626
2022-07-08 08:24:47.322109: This epoch took 78.195524 s

2022-07-08 08:24:47.339856: 
epoch:  130
2022-07-08 08:25:59.200970: train loss : -0.8337
2022-07-08 08:26:04.165272: validation loss: -0.7586
2022-07-08 08:26:04.178313: Average global foreground Dice: [0.82]
2022-07-08 08:26:04.186744: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:26:04.861421: Suus1 maybe_update_lr lr: 0.007608
2022-07-08 08:26:04.886998: saving best epoch checkpoint...
2022-07-08 08:26:05.034282: saving checkpoint...
2022-07-08 08:26:06.847167: done, saving took 1.95 seconds
2022-07-08 08:26:06.864272: This epoch took 79.516372 s

2022-07-08 08:26:06.866267: 
epoch:  131
2022-07-08 08:27:17.810743: train loss : -0.8303
2022-07-08 08:27:22.572366: validation loss: -0.7657
2022-07-08 08:27:22.590451: Average global foreground Dice: [0.8219]
2022-07-08 08:27:22.598667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:27:23.360172: Suus1 maybe_update_lr lr: 0.007589
2022-07-08 08:27:23.375489: saving best epoch checkpoint...
2022-07-08 08:27:23.500948: saving checkpoint...
2022-07-08 08:27:25.131293: done, saving took 1.74 seconds
2022-07-08 08:27:25.147537: This epoch took 78.279048 s

2022-07-08 08:27:25.149862: 
epoch:  132
2022-07-08 08:28:34.828078: train loss : -0.8322
2022-07-08 08:28:40.334447: validation loss: -0.7485
2022-07-08 08:28:40.362534: Average global foreground Dice: [0.8044]
2022-07-08 08:28:40.387185: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:28:41.118593: Suus1 maybe_update_lr lr: 0.007571
2022-07-08 08:28:41.152477: This epoch took 76.000589 s

2022-07-08 08:28:41.185998: 
epoch:  133
2022-07-08 08:29:52.322919: train loss : -0.8372
2022-07-08 08:29:57.137823: validation loss: -0.7687
2022-07-08 08:29:57.168259: Average global foreground Dice: [0.8226]
2022-07-08 08:29:57.188767: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:29:57.958429: Suus1 maybe_update_lr lr: 0.007552
2022-07-08 08:29:57.978882: saving best epoch checkpoint...
2022-07-08 08:29:58.070555: saving checkpoint...
2022-07-08 08:30:00.036342: done, saving took 2.03 seconds
2022-07-08 08:30:00.055259: This epoch took 78.832370 s

2022-07-08 08:30:00.057384: 
epoch:  134
2022-07-08 08:31:10.930469: train loss : -0.8287
2022-07-08 08:31:15.745454: validation loss: -0.7311
2022-07-08 08:31:15.775411: Average global foreground Dice: [0.798]
2022-07-08 08:31:15.794890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:31:16.505708: Suus1 maybe_update_lr lr: 0.007533
2022-07-08 08:31:16.526915: This epoch took 76.467266 s

2022-07-08 08:31:16.547304: 
epoch:  135
2022-07-08 08:32:27.966832: train loss : -0.8362
2022-07-08 08:32:32.640023: validation loss: -0.7607
2022-07-08 08:32:32.670490: Average global foreground Dice: [0.8161]
2022-07-08 08:32:32.694701: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:32:33.308997: Suus1 maybe_update_lr lr: 0.007515
2022-07-08 08:32:33.335929: This epoch took 76.757067 s

2022-07-08 08:32:33.357911: 
epoch:  136
2022-07-08 08:33:46.706958: train loss : -0.8334
2022-07-08 08:33:51.912852: validation loss: -0.7649
2022-07-08 08:33:51.949304: Average global foreground Dice: [0.8199]
2022-07-08 08:33:51.981874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:33:52.869572: Suus1 maybe_update_lr lr: 0.007496
2022-07-08 08:33:52.879687: This epoch took 79.501696 s

2022-07-08 08:33:52.907401: 
epoch:  137
2022-07-08 08:35:03.438068: train loss : -0.8376
2022-07-08 08:35:08.377808: validation loss: -0.7546
2022-07-08 08:35:08.389709: Average global foreground Dice: [0.8062]
2022-07-08 08:35:08.392899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:35:09.043342: Suus1 maybe_update_lr lr: 0.007478
2022-07-08 08:35:09.062918: This epoch took 76.148118 s

2022-07-08 08:35:09.083271: 
epoch:  138
2022-07-08 08:36:21.789786: train loss : -0.8389
2022-07-08 08:36:26.884358: validation loss: -0.7474
2022-07-08 08:36:26.913327: Average global foreground Dice: [0.8067]
2022-07-08 08:36:26.933775: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:36:27.795171: Suus1 maybe_update_lr lr: 0.007459
2022-07-08 08:36:27.824619: This epoch took 78.728487 s

2022-07-08 08:36:27.829869: 
epoch:  139
2022-07-08 08:37:40.042254: train loss : -0.8368
2022-07-08 08:37:45.429101: validation loss: -0.7659
2022-07-08 08:37:45.439447: Average global foreground Dice: [0.8211]
2022-07-08 08:37:45.485889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:37:46.364267: Suus1 maybe_update_lr lr: 0.00744
2022-07-08 08:37:46.396923: This epoch took 78.548929 s

2022-07-08 08:37:46.429842: 
epoch:  140
2022-07-08 08:38:59.634013: train loss : -0.8415
2022-07-08 08:39:04.469967: validation loss: -0.7581
2022-07-08 08:39:04.510333: Average global foreground Dice: [0.8088]
2022-07-08 08:39:04.537580: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:39:05.341223: Suus1 maybe_update_lr lr: 0.007422
2022-07-08 08:39:05.366170: This epoch took 78.903301 s

2022-07-08 08:39:05.384007: 
epoch:  141
2022-07-08 08:40:18.154890: train loss : -0.8440
2022-07-08 08:40:23.451416: validation loss: -0.7544
2022-07-08 08:40:23.484270: Average global foreground Dice: [0.8095]
2022-07-08 08:40:23.512448: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:40:24.363060: Suus1 maybe_update_lr lr: 0.007403
2022-07-08 08:40:24.365851: This epoch took 78.938980 s

2022-07-08 08:40:24.368283: 
epoch:  142
2022-07-08 08:41:35.532008: train loss : -0.8458
2022-07-08 08:41:40.626924: validation loss: -0.7573
2022-07-08 08:41:40.653219: Average global foreground Dice: [0.8143]
2022-07-08 08:41:40.682418: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:41:41.415428: Suus1 maybe_update_lr lr: 0.007385
2022-07-08 08:41:41.436935: This epoch took 77.066374 s

2022-07-08 08:41:41.458861: 
epoch:  143
2022-07-08 08:42:54.497982: train loss : -0.8447
2022-07-08 08:43:00.047936: validation loss: -0.7360
2022-07-08 08:43:00.068275: Average global foreground Dice: [0.8048]
2022-07-08 08:43:00.079234: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:43:00.750412: Suus1 maybe_update_lr lr: 0.007366
2022-07-08 08:43:00.773016: This epoch took 79.295305 s

2022-07-08 08:43:00.797858: 
epoch:  144
2022-07-08 08:44:12.071129: train loss : -0.8414
2022-07-08 08:44:17.096775: validation loss: -0.7558
2022-07-08 08:44:17.151552: Average global foreground Dice: [0.8138]
2022-07-08 08:44:17.181865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:44:17.836382: Suus1 maybe_update_lr lr: 0.007347
2022-07-08 08:44:17.844304: This epoch took 77.024432 s

2022-07-08 08:44:17.853746: 
epoch:  145
2022-07-08 08:45:30.640192: train loss : -0.8316
2022-07-08 08:45:36.246688: validation loss: -0.7536
2022-07-08 08:45:36.271330: Average global foreground Dice: [0.8078]
2022-07-08 08:45:36.285222: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:45:37.116251: Suus1 maybe_update_lr lr: 0.007329
2022-07-08 08:45:37.137946: This epoch took 79.263871 s

2022-07-08 08:45:37.162004: 
epoch:  146
2022-07-08 08:46:48.182069: train loss : -0.8320
2022-07-08 08:46:52.879853: validation loss: -0.7704
2022-07-08 08:46:52.883600: Average global foreground Dice: [0.8264]
2022-07-08 08:46:52.886229: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:46:53.599353: Suus1 maybe_update_lr lr: 0.00731
2022-07-08 08:46:53.629906: This epoch took 76.435009 s

2022-07-08 08:46:53.642954: 
epoch:  147
2022-07-08 08:48:04.607733: train loss : -0.8422
2022-07-08 08:48:09.950187: validation loss: -0.7583
2022-07-08 08:48:09.981427: Average global foreground Dice: [0.8186]
2022-07-08 08:48:09.994861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:48:10.893758: Suus1 maybe_update_lr lr: 0.007291
2022-07-08 08:48:10.914898: This epoch took 77.251881 s

2022-07-08 08:48:10.947858: 
epoch:  148
2022-07-08 08:49:22.138061: train loss : -0.8365
2022-07-08 08:49:27.864041: validation loss: -0.7721
2022-07-08 08:49:27.888368: Average global foreground Dice: [0.8283]
2022-07-08 08:49:27.908696: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:49:28.625313: Suus1 maybe_update_lr lr: 0.007273
2022-07-08 08:49:28.656319: saving best epoch checkpoint...
2022-07-08 08:49:28.791240: saving checkpoint...
2022-07-08 08:49:30.250042: done, saving took 1.57 seconds
2022-07-08 08:49:30.266693: This epoch took 79.285829 s

2022-07-08 08:49:30.268694: 
epoch:  149
2022-07-08 08:50:41.831558: train loss : -0.8367
2022-07-08 08:50:46.709263: validation loss: -0.7638
2022-07-08 08:50:46.753411: Average global foreground Dice: [0.8196]
2022-07-08 08:50:46.784880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:50:47.884978: Suus1 maybe_update_lr lr: 0.007254
2022-07-08 08:50:47.891738: saving scheduled checkpoint file...
2022-07-08 08:50:47.989481: saving checkpoint...
2022-07-08 08:50:49.506895: done, saving took 1.59 seconds
2022-07-08 08:50:49.522377: done
2022-07-08 08:50:49.526745: saving best epoch checkpoint...
2022-07-08 08:50:49.567124: saving checkpoint...
2022-07-08 08:50:50.914108: done, saving took 1.38 seconds
2022-07-08 08:50:50.928039: This epoch took 80.657391 s

2022-07-08 08:50:50.930219: 
epoch:  150
2022-07-08 08:52:02.277780: train loss : -0.8353
2022-07-08 08:52:07.247088: validation loss: -0.7534
2022-07-08 08:52:07.276656: Average global foreground Dice: [0.8117]
2022-07-08 08:52:07.306067: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:52:08.192432: Suus1 maybe_update_lr lr: 0.007236
2022-07-08 08:52:08.212893: This epoch took 77.280520 s

2022-07-08 08:52:08.241872: 
epoch:  151
2022-07-08 08:53:18.368896: train loss : -0.8272
2022-07-08 08:53:23.375209: validation loss: -0.7600
2022-07-08 08:53:23.406504: Average global foreground Dice: [0.8156]
2022-07-08 08:53:23.420880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:53:24.139760: Suus1 maybe_update_lr lr: 0.007217
2022-07-08 08:53:24.176429: This epoch took 75.911572 s

2022-07-08 08:53:24.221871: 
epoch:  152
2022-07-08 08:54:36.116120: train loss : -0.8392
2022-07-08 08:54:41.134399: validation loss: -0.7397
2022-07-08 08:54:41.165553: Average global foreground Dice: [0.8026]
2022-07-08 08:54:41.188858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:54:42.145012: Suus1 maybe_update_lr lr: 0.007198
2022-07-08 08:54:42.173383: This epoch took 77.934329 s

2022-07-08 08:54:42.180371: 
epoch:  153
2022-07-08 08:55:54.018726: train loss : -0.8434
2022-07-08 08:55:59.126295: validation loss: -0.7737
2022-07-08 08:55:59.159299: Average global foreground Dice: [0.8188]
2022-07-08 08:55:59.180890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:55:59.917786: Suus1 maybe_update_lr lr: 0.00718
2022-07-08 08:55:59.920197: This epoch took 77.737722 s

2022-07-08 08:55:59.956383: 
epoch:  154
2022-07-08 08:57:09.871514: train loss : -0.8361
2022-07-08 08:57:14.963742: validation loss: -0.7401
2022-07-08 08:57:14.993252: Average global foreground Dice: [0.7909]
2022-07-08 08:57:15.015888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:57:15.824241: Suus1 maybe_update_lr lr: 0.007161
2022-07-08 08:57:15.845901: This epoch took 75.865020 s

2022-07-08 08:57:15.871022: 
epoch:  155
2022-07-08 08:58:27.097790: train loss : -0.8225
2022-07-08 08:58:32.567927: validation loss: -0.7500
2022-07-08 08:58:32.595811: Average global foreground Dice: [0.8072]
2022-07-08 08:58:32.611890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:58:33.331691: Suus1 maybe_update_lr lr: 0.007142
2022-07-08 08:58:33.355218: This epoch took 77.478784 s

2022-07-08 08:58:33.370887: 
epoch:  156
2022-07-08 08:59:45.292909: train loss : -0.8424
2022-07-08 08:59:50.251632: validation loss: -0.7616
2022-07-08 08:59:50.283207: Average global foreground Dice: [0.8182]
2022-07-08 08:59:50.302078: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:59:50.958241: Suus1 maybe_update_lr lr: 0.007123
2022-07-08 08:59:50.988576: This epoch took 77.596205 s

2022-07-08 08:59:51.017855: 
epoch:  157
2022-07-08 09:01:03.077004: train loss : -0.8453
2022-07-08 09:01:08.488373: validation loss: -0.7208
2022-07-08 09:01:08.532321: Average global foreground Dice: [0.7828]
2022-07-08 09:01:08.553981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:01:09.207308: Suus1 maybe_update_lr lr: 0.007105
2022-07-08 09:01:09.218429: This epoch took 78.183317 s

2022-07-08 09:01:09.220483: 
epoch:  158
2022-07-08 09:02:21.864270: train loss : -0.8495
2022-07-08 09:02:26.928583: validation loss: -0.7588
2022-07-08 09:02:26.957196: Average global foreground Dice: [0.8159]
2022-07-08 09:02:26.988870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:02:27.656921: Suus1 maybe_update_lr lr: 0.007086
2022-07-08 09:02:27.663720: This epoch took 78.421862 s

2022-07-08 09:02:27.693865: 
epoch:  159
2022-07-08 09:03:40.447099: train loss : -0.8483
2022-07-08 09:03:45.925283: validation loss: -0.7508
2022-07-08 09:03:45.960480: Average global foreground Dice: [0.809]
2022-07-08 09:03:45.970853: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:03:46.850430: Suus1 maybe_update_lr lr: 0.007067
2022-07-08 09:03:46.875377: This epoch took 79.151798 s

2022-07-08 09:03:46.905869: 
epoch:  160
2022-07-08 09:04:58.310368: train loss : -0.8479
2022-07-08 09:05:03.375484: validation loss: -0.7580
2022-07-08 09:05:03.406421: Average global foreground Dice: [0.8181]
2022-07-08 09:05:03.447232: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:05:04.047590: Suus1 maybe_update_lr lr: 0.007049
2022-07-08 09:05:04.068905: This epoch took 77.147895 s

2022-07-08 09:05:04.103856: 
epoch:  161
2022-07-08 09:06:17.358438: train loss : -0.8488
2022-07-08 09:06:22.668968: validation loss: -0.7556
2022-07-08 09:06:22.686579: Average global foreground Dice: [0.8151]
2022-07-08 09:06:22.716864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:06:23.423250: Suus1 maybe_update_lr lr: 0.00703
2022-07-08 09:06:23.455925: This epoch took 79.338047 s

2022-07-08 09:06:23.488935: 
epoch:  162
2022-07-08 09:07:33.636491: train loss : -0.8453
2022-07-08 09:07:39.188115: validation loss: -0.7721
2022-07-08 09:07:39.220412: Average global foreground Dice: [0.8258]
2022-07-08 09:07:39.228650: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:07:39.915379: Suus1 maybe_update_lr lr: 0.007011
2022-07-08 09:07:39.922891: This epoch took 76.403021 s

2022-07-08 09:07:39.952234: 
epoch:  163
2022-07-08 09:08:50.925084: train loss : -0.8508
2022-07-08 09:08:56.227476: validation loss: -0.7424
2022-07-08 09:08:56.263293: Average global foreground Dice: [0.8022]
2022-07-08 09:08:56.275874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:08:56.948758: Suus1 maybe_update_lr lr: 0.006992
2022-07-08 09:08:56.970067: This epoch took 76.986852 s

2022-07-08 09:08:56.994915: 
epoch:  164
2022-07-08 09:10:06.707053: train loss : -0.8551
2022-07-08 09:10:11.691888: validation loss: -0.7335
2022-07-08 09:10:11.738226: Average global foreground Dice: [0.7978]
2022-07-08 09:10:11.759863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:10:12.481958: Suus1 maybe_update_lr lr: 0.006974
2022-07-08 09:10:12.511374: This epoch took 75.500562 s

2022-07-08 09:10:12.532853: 
epoch:  165
2022-07-08 09:11:23.790773: train loss : -0.8569
2022-07-08 09:11:28.979213: validation loss: -0.7483
2022-07-08 09:11:29.007982: Average global foreground Dice: [0.8034]
2022-07-08 09:11:29.027730: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:11:29.654623: Suus1 maybe_update_lr lr: 0.006955
2022-07-08 09:11:29.683431: This epoch took 77.128564 s

2022-07-08 09:11:29.713918: 
epoch:  166
2022-07-08 09:12:42.095160: train loss : -0.8546
2022-07-08 09:12:47.826342: validation loss: -0.7563
2022-07-08 09:12:47.851680: Average global foreground Dice: [0.8153]
2022-07-08 09:12:47.871350: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:12:48.508859: Suus1 maybe_update_lr lr: 0.006936
2022-07-08 09:12:48.538298: This epoch took 78.812822 s

2022-07-08 09:12:48.578408: 
epoch:  167
2022-07-08 09:14:01.128928: train loss : -0.8566
2022-07-08 09:14:06.143750: validation loss: -0.7447
2022-07-08 09:14:06.177595: Average global foreground Dice: [0.8017]
2022-07-08 09:14:06.194925: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:14:06.790459: Suus1 maybe_update_lr lr: 0.006918
2022-07-08 09:14:06.812002: This epoch took 78.213468 s

2022-07-08 09:14:06.833852: 
epoch:  168
2022-07-08 09:15:18.151149: train loss : -0.8599
2022-07-08 09:15:23.018402: validation loss: -0.7599
2022-07-08 09:15:23.050689: Average global foreground Dice: [0.8155]
2022-07-08 09:15:23.070434: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:15:23.744355: Suus1 maybe_update_lr lr: 0.006899
2022-07-08 09:15:23.765930: This epoch took 76.911711 s

2022-07-08 09:15:23.787879: 
epoch:  169
2022-07-08 09:16:36.835490: train loss : -0.8561
2022-07-08 09:16:41.712535: validation loss: -0.7635
2022-07-08 09:16:41.759419: Average global foreground Dice: [0.8154]
2022-07-08 09:16:41.779226: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:16:42.326316: Suus1 maybe_update_lr lr: 0.00688
2022-07-08 09:16:42.347975: This epoch took 78.539785 s

2022-07-08 09:16:42.369989: 
epoch:  170
2022-07-08 09:17:55.969958: train loss : -0.8538
2022-07-08 09:18:00.940698: validation loss: -0.7565
2022-07-08 09:18:00.970338: Average global foreground Dice: [0.8141]
2022-07-08 09:18:00.994306: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:18:01.745556: Suus1 maybe_update_lr lr: 0.006861
2022-07-08 09:18:01.786456: This epoch took 79.394516 s

2022-07-08 09:18:01.807142: 
epoch:  171
2022-07-08 09:19:13.672741: train loss : -0.8588
2022-07-08 09:19:18.451536: validation loss: -0.7473
2022-07-08 09:19:18.495216: Average global foreground Dice: [0.8054]
2022-07-08 09:19:18.547364: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:19:19.191198: Suus1 maybe_update_lr lr: 0.006842
2022-07-08 09:19:19.212895: This epoch took 77.380730 s

2022-07-08 09:19:19.245861: 
epoch:  172
2022-07-08 09:20:29.347181: train loss : -0.8453
2022-07-08 09:20:34.335464: validation loss: -0.7391
2022-07-08 09:20:34.366508: Average global foreground Dice: [0.7984]
2022-07-08 09:20:34.396978: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:20:35.126595: Suus1 maybe_update_lr lr: 0.006824
2022-07-08 09:20:35.146378: This epoch took 75.878507 s

2022-07-08 09:20:35.169630: 
epoch:  173
2022-07-08 09:21:48.843115: train loss : -0.8364
2022-07-08 09:21:55.294749: validation loss: -0.7543
2022-07-08 09:21:55.319368: Average global foreground Dice: [0.8105]
2022-07-08 09:21:55.346172: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:21:56.004273: Suus1 maybe_update_lr lr: 0.006805
2022-07-08 09:21:56.036909: This epoch took 80.846033 s

2022-07-08 09:21:56.069870: 
epoch:  174
2022-07-08 09:23:07.860099: train loss : -0.8481
2022-07-08 09:23:12.991429: validation loss: -0.7406
2022-07-08 09:23:13.019255: Average global foreground Dice: [0.8015]
2022-07-08 09:23:13.040968: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:23:13.734613: Suus1 maybe_update_lr lr: 0.006786
2022-07-08 09:23:13.767912: This epoch took 77.665030 s

2022-07-08 09:23:13.800142: 
epoch:  175
2022-07-08 09:24:24.641602: train loss : -0.8546
2022-07-08 09:24:29.342922: validation loss: -0.7538
2022-07-08 09:24:29.368324: Average global foreground Dice: [0.8125]
2022-07-08 09:24:29.398868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:24:30.241325: Suus1 maybe_update_lr lr: 0.006767
2022-07-08 09:24:30.262900: This epoch took 76.432921 s

2022-07-08 09:24:30.286859: 
epoch:  176
2022-07-08 09:25:43.703184: train loss : -0.8521
2022-07-08 09:25:49.291986: validation loss: -0.7541
2022-07-08 09:25:49.317934: Average global foreground Dice: [0.807]
2022-07-08 09:25:49.347134: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:25:50.005254: Suus1 maybe_update_lr lr: 0.006749
2022-07-08 09:25:50.035923: This epoch took 79.723041 s

2022-07-08 09:25:50.057862: 
epoch:  177
2022-07-08 09:27:02.057686: train loss : -0.8473
2022-07-08 09:27:07.059234: validation loss: -0.7756
2022-07-08 09:27:07.093288: Average global foreground Dice: [0.8238]
2022-07-08 09:27:07.122862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:27:07.777163: Suus1 maybe_update_lr lr: 0.00673
2022-07-08 09:27:07.796821: This epoch took 77.714970 s

2022-07-08 09:27:07.816947: 
epoch:  178
2022-07-08 09:28:18.580133: train loss : -0.8565
2022-07-08 09:28:23.707436: validation loss: -0.7647
2022-07-08 09:28:23.751216: Average global foreground Dice: [0.8216]
2022-07-08 09:28:23.772873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:28:24.340155: Suus1 maybe_update_lr lr: 0.006711
2022-07-08 09:28:24.363183: This epoch took 76.526081 s

2022-07-08 09:28:24.403871: 
epoch:  179
2022-07-08 09:29:35.093306: train loss : -0.8592
2022-07-08 09:29:40.088683: validation loss: -0.7610
2022-07-08 09:29:40.120241: Average global foreground Dice: [0.8165]
2022-07-08 09:29:40.140593: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:29:40.814119: Suus1 maybe_update_lr lr: 0.006692
2022-07-08 09:29:40.853937: This epoch took 76.429125 s

2022-07-08 09:29:40.872650: 
epoch:  180
2022-07-08 09:30:52.235631: train loss : -0.8589
2022-07-08 09:30:57.706953: validation loss: -0.7498
2022-07-08 09:30:57.733259: Average global foreground Dice: [0.8053]
2022-07-08 09:30:57.772893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:30:58.630578: Suus1 maybe_update_lr lr: 0.006673
2022-07-08 09:30:58.660903: This epoch took 77.762172 s

2022-07-08 09:30:58.682865: 
epoch:  181
2022-07-08 09:32:09.182784: train loss : -0.8566
2022-07-08 09:32:14.102799: validation loss: -0.7650
2022-07-08 09:32:14.113266: Average global foreground Dice: [0.8176]
2022-07-08 09:32:14.155260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:32:14.992387: Suus1 maybe_update_lr lr: 0.006654
2022-07-08 09:32:15.013892: This epoch took 76.310694 s

2022-07-08 09:32:15.026423: 
epoch:  182
2022-07-08 09:33:26.777018: train loss : -0.8612
2022-07-08 09:33:31.679761: validation loss: -0.7685
2022-07-08 09:33:31.709267: Average global foreground Dice: [0.8203]
2022-07-08 09:33:31.724926: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:33:32.269369: Suus1 maybe_update_lr lr: 0.006636
2022-07-08 09:33:32.297190: This epoch took 77.249334 s

2022-07-08 09:33:32.317327: 
epoch:  183
2022-07-08 09:34:44.271026: train loss : -0.8578
2022-07-08 09:34:49.500607: validation loss: -0.7662
2022-07-08 09:34:49.532186: Average global foreground Dice: [0.8191]
2022-07-08 09:34:49.547877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:34:50.204216: Suus1 maybe_update_lr lr: 0.006617
2022-07-08 09:34:50.225871: This epoch took 77.888845 s

2022-07-08 09:34:50.247854: 
epoch:  184
2022-07-08 09:36:04.038779: train loss : -0.8565
2022-07-08 09:36:09.179312: validation loss: -0.7605
2022-07-08 09:36:09.204684: Average global foreground Dice: [0.8206]
2022-07-08 09:36:09.234873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:36:09.875605: Suus1 maybe_update_lr lr: 0.006598
2022-07-08 09:36:09.878392: This epoch took 79.599253 s

2022-07-08 09:36:09.901006: 
epoch:  185
2022-07-08 09:37:21.128627: train loss : -0.8593
2022-07-08 09:37:26.522110: validation loss: -0.7569
2022-07-08 09:37:26.528136: Average global foreground Dice: [0.8136]
2022-07-08 09:37:26.534733: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:37:27.254198: Suus1 maybe_update_lr lr: 0.006579
2022-07-08 09:37:27.286922: This epoch took 77.364060 s

2022-07-08 09:37:27.314833: 
epoch:  186
2022-07-08 09:38:39.673752: train loss : -0.8646
2022-07-08 09:38:46.137004: validation loss: -0.7533
2022-07-08 09:38:46.172223: Average global foreground Dice: [0.8123]
2022-07-08 09:38:46.204866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:38:47.006644: Suus1 maybe_update_lr lr: 0.00656
2022-07-08 09:38:47.049921: This epoch took 79.717108 s

2022-07-08 09:38:47.082853: 
epoch:  187
2022-07-08 09:39:58.964211: train loss : -0.8651
2022-07-08 09:40:04.997687: validation loss: -0.7520
2022-07-08 09:40:05.033293: Average global foreground Dice: [0.8113]
2022-07-08 09:40:05.040962: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:40:05.761987: Suus1 maybe_update_lr lr: 0.006541
2022-07-08 09:40:05.789346: This epoch took 78.685323 s

2022-07-08 09:40:05.817863: 
epoch:  188
2022-07-08 09:41:17.878901: train loss : -0.8623
2022-07-08 09:41:23.302708: validation loss: -0.7530
2022-07-08 09:41:23.328287: Average global foreground Dice: [0.814]
2022-07-08 09:41:23.339521: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:41:23.868737: Suus1 maybe_update_lr lr: 0.006522
2022-07-08 09:41:23.889964: This epoch took 78.053239 s

2022-07-08 09:41:23.911853: 
epoch:  189
2022-07-08 09:42:35.365036: train loss : -0.8635
2022-07-08 09:42:40.246189: validation loss: -0.7430
2022-07-08 09:42:40.280271: Average global foreground Dice: [0.8072]
2022-07-08 09:42:40.308900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:42:40.927295: Suus1 maybe_update_lr lr: 0.006504
2022-07-08 09:42:40.948915: This epoch took 77.016662 s

2022-07-08 09:42:40.970859: 
epoch:  190
2022-07-08 09:43:53.210147: train loss : -0.8648
2022-07-08 09:43:58.449452: validation loss: -0.7611
2022-07-08 09:43:58.485389: Average global foreground Dice: [0.8216]
2022-07-08 09:43:58.505225: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:43:59.098279: Suus1 maybe_update_lr lr: 0.006485
2022-07-08 09:43:59.151907: This epoch took 78.159023 s

2022-07-08 09:43:59.183000: 
epoch:  191
2022-07-08 09:45:11.180947: train loss : -0.8631
2022-07-08 09:45:17.058923: validation loss: -0.7523
2022-07-08 09:45:17.082850: Average global foreground Dice: [0.8107]
2022-07-08 09:45:17.099456: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:45:17.819240: Suus1 maybe_update_lr lr: 0.006466
2022-07-08 09:45:17.844920: This epoch took 78.634372 s

2022-07-08 09:45:17.866861: 
epoch:  192
2022-07-08 09:46:29.975765: train loss : -0.8653
2022-07-08 09:46:34.789507: validation loss: -0.7630
2022-07-08 09:46:34.828121: Average global foreground Dice: [0.8171]
2022-07-08 09:46:34.841161: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:46:35.494450: Suus1 maybe_update_lr lr: 0.006447
2022-07-08 09:46:35.523089: This epoch took 77.633210 s

2022-07-08 09:46:35.545030: 
epoch:  193
2022-07-08 09:47:46.685574: train loss : -0.8673
2022-07-08 09:47:52.196615: validation loss: -0.7605
2022-07-08 09:47:52.200875: Average global foreground Dice: [0.8214]
2022-07-08 09:47:52.207724: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:47:52.947603: Suus1 maybe_update_lr lr: 0.006428
2022-07-08 09:47:52.979926: This epoch took 77.405054 s

2022-07-08 09:47:53.001860: 
epoch:  194
2022-07-08 09:49:06.399798: train loss : -0.8660
2022-07-08 09:49:11.859467: validation loss: -0.7754
2022-07-08 09:49:11.871496: Average global foreground Dice: [0.8281]
2022-07-08 09:49:11.886878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:49:12.459192: Suus1 maybe_update_lr lr: 0.006409
2022-07-08 09:49:12.497158: saving best epoch checkpoint...
2022-07-08 09:49:12.603521: saving checkpoint...
2022-07-08 09:49:14.304699: done, saving took 1.79 seconds
2022-07-08 09:49:14.322578: This epoch took 81.304572 s

2022-07-08 09:49:14.324767: 
epoch:  195
2022-07-08 09:50:24.219221: train loss : -0.8706
2022-07-08 09:50:29.586948: validation loss: -0.7568
2022-07-08 09:50:29.613340: Average global foreground Dice: [0.8124]
2022-07-08 09:50:29.627899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:50:30.456886: Suus1 maybe_update_lr lr: 0.00639
2022-07-08 09:50:30.476543: This epoch took 76.149818 s

2022-07-08 09:50:30.495412: 
epoch:  196
2022-07-08 09:51:44.291967: train loss : -0.8684
2022-07-08 09:51:49.916019: validation loss: -0.7580
2022-07-08 09:51:49.938816: Average global foreground Dice: [0.8163]
2022-07-08 09:51:49.962272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:51:50.653209: Suus1 maybe_update_lr lr: 0.006371
2022-07-08 09:51:50.685915: This epoch took 80.157038 s

2022-07-08 09:51:50.718862: 
epoch:  197
2022-07-08 09:53:03.320195: train loss : -0.8731
2022-07-08 09:53:08.505042: validation loss: -0.7557
2022-07-08 09:53:08.529295: Average global foreground Dice: [0.8136]
2022-07-08 09:53:08.561943: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:53:09.262257: Suus1 maybe_update_lr lr: 0.006352
2022-07-08 09:53:09.279371: This epoch took 78.527500 s

2022-07-08 09:53:09.285385: 
epoch:  198
2022-07-08 09:54:20.233333: train loss : -0.8729
2022-07-08 09:54:24.931211: validation loss: -0.7559
2022-07-08 09:54:24.936958: Average global foreground Dice: [0.8137]
2022-07-08 09:54:24.939442: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:54:25.962581: Suus1 maybe_update_lr lr: 0.006333
2022-07-08 09:54:25.984028: This epoch took 76.682131 s

2022-07-08 09:54:26.002258: 
epoch:  199
2022-07-08 09:55:38.690043: train loss : -0.8712
2022-07-08 09:55:43.531473: validation loss: -0.7715
2022-07-08 09:55:43.562578: Average global foreground Dice: [0.8256]
2022-07-08 09:55:43.592884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:55:44.315327: Suus1 maybe_update_lr lr: 0.006314
2022-07-08 09:55:44.336863: saving scheduled checkpoint file...
2022-07-08 09:55:44.413293: saving checkpoint...
2022-07-08 09:55:46.097229: done, saving took 1.74 seconds
2022-07-08 09:55:46.114413: done
2022-07-08 09:55:46.116442: saving best epoch checkpoint...
2022-07-08 09:55:46.163408: saving checkpoint...
2022-07-08 09:55:47.480273: done, saving took 1.36 seconds
2022-07-08 09:55:47.494329: This epoch took 81.475463 s

2022-07-08 09:55:47.496392: 
epoch:  200
2022-07-08 09:56:57.207680: train loss : -0.8696
2022-07-08 09:57:02.987515: validation loss: -0.7668
2022-07-08 09:57:03.030311: Average global foreground Dice: [0.8203]
2022-07-08 09:57:03.047868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:57:03.723202: Suus1 maybe_update_lr lr: 0.006296
2022-07-08 09:57:03.752217: saving best epoch checkpoint...
2022-07-08 09:57:03.880849: saving checkpoint...
2022-07-08 09:57:05.509554: done, saving took 1.74 seconds
2022-07-08 09:57:05.525107: This epoch took 78.026629 s

2022-07-08 09:57:05.527314: 
epoch:  201
2022-07-08 09:58:16.657672: train loss : -0.8696
2022-07-08 09:58:21.495118: validation loss: -0.7668
2022-07-08 09:58:21.523410: Average global foreground Dice: [0.8242]
2022-07-08 09:58:21.543189: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:58:22.256459: Suus1 maybe_update_lr lr: 0.006277
2022-07-08 09:58:22.287772: saving best epoch checkpoint...
2022-07-08 09:58:22.361825: saving checkpoint...
2022-07-08 09:58:24.222275: done, saving took 1.92 seconds
2022-07-08 09:58:24.238437: This epoch took 78.709043 s

2022-07-08 09:58:24.240877: 
epoch:  202
2022-07-08 09:59:33.733204: train loss : -0.8722
2022-07-08 09:59:38.348655: validation loss: -0.7499
2022-07-08 09:59:38.387281: Average global foreground Dice: [0.81]
2022-07-08 09:59:38.399874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:59:38.956305: Suus1 maybe_update_lr lr: 0.006258
2022-07-08 09:59:38.976914: This epoch took 74.733659 s

2022-07-08 09:59:39.000454: 
epoch:  203
2022-07-08 10:00:50.378799: train loss : -0.8721
2022-07-08 10:00:55.567135: validation loss: -0.7531
2022-07-08 10:00:55.604325: Average global foreground Dice: [0.8127]
2022-07-08 10:00:55.634872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:00:56.261348: Suus1 maybe_update_lr lr: 0.006239
2022-07-08 10:00:56.281641: This epoch took 77.274911 s

2022-07-08 10:00:56.301708: 
epoch:  204
2022-07-08 10:02:07.396696: train loss : -0.8721
2022-07-08 10:02:12.016605: validation loss: -0.7715
2022-07-08 10:02:12.046946: Average global foreground Dice: [0.8189]
2022-07-08 10:02:12.061429: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:02:12.608160: Suus1 maybe_update_lr lr: 0.00622
2022-07-08 10:02:12.630084: This epoch took 76.308239 s

2022-07-08 10:02:12.651952: 
epoch:  205
2022-07-08 10:03:23.844128: train loss : -0.8698
2022-07-08 10:03:28.644178: validation loss: -0.7760
2022-07-08 10:03:28.684234: Average global foreground Dice: [0.8264]
2022-07-08 10:03:28.704525: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:03:29.595124: Suus1 maybe_update_lr lr: 0.006201
2022-07-08 10:03:29.616695: saving best epoch checkpoint...
2022-07-08 10:03:29.694127: saving checkpoint...
2022-07-08 10:03:31.372676: done, saving took 1.74 seconds
2022-07-08 10:03:31.387856: This epoch took 78.712192 s

2022-07-08 10:03:31.389951: 
epoch:  206
2022-07-08 10:04:42.686674: train loss : -0.8612
2022-07-08 10:04:47.481817: validation loss: -0.7277
2022-07-08 10:04:47.491640: Average global foreground Dice: [0.7958]
2022-07-08 10:04:47.495460: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:04:48.119756: Suus1 maybe_update_lr lr: 0.006182
2022-07-08 10:04:48.149909: This epoch took 76.757903 s

2022-07-08 10:04:48.166485: 
epoch:  207
2022-07-08 10:05:59.728126: train loss : -0.8643
2022-07-08 10:06:04.537709: validation loss: -0.7496
2022-07-08 10:06:04.567352: Average global foreground Dice: [0.8091]
2022-07-08 10:06:04.583011: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:06:05.245543: Suus1 maybe_update_lr lr: 0.006163
2022-07-08 10:06:05.265915: This epoch took 77.075041 s

2022-07-08 10:06:05.283186: 
epoch:  208
2022-07-08 10:07:17.022163: train loss : -0.8706
2022-07-08 10:07:22.515510: validation loss: -0.7402
2022-07-08 10:07:22.572286: Average global foreground Dice: [0.8027]
2022-07-08 10:07:22.604871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:07:23.499923: Suus1 maybe_update_lr lr: 0.006144
2022-07-08 10:07:23.529922: This epoch took 78.219663 s

2022-07-08 10:07:23.562867: 
epoch:  209
2022-07-08 10:08:35.348910: train loss : -0.8728
2022-07-08 10:08:40.432391: validation loss: -0.7570
2022-07-08 10:08:40.449616: Average global foreground Dice: [0.8148]
2022-07-08 10:08:40.466277: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:08:41.232445: Suus1 maybe_update_lr lr: 0.006125
2022-07-08 10:08:41.251913: This epoch took 77.656047 s

2022-07-08 10:08:41.283011: 
epoch:  210
2022-07-08 10:09:51.775834: train loss : -0.8717
2022-07-08 10:09:56.757364: validation loss: -0.7612
2022-07-08 10:09:56.788481: Average global foreground Dice: [0.8174]
2022-07-08 10:09:56.805920: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:09:57.531251: Suus1 maybe_update_lr lr: 0.006106
2022-07-08 10:09:57.561999: This epoch took 76.261125 s

2022-07-08 10:09:57.583848: 
epoch:  211
2022-07-08 10:11:08.125344: train loss : -0.8743
2022-07-08 10:11:13.550472: validation loss: -0.7552
2022-07-08 10:11:13.592764: Average global foreground Dice: [0.8148]
2022-07-08 10:11:13.612750: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:11:14.293052: Suus1 maybe_update_lr lr: 0.006087
2022-07-08 10:11:14.312909: This epoch took 76.708786 s

2022-07-08 10:11:14.330853: 
epoch:  212
2022-07-08 10:12:26.135280: train loss : -0.8695
2022-07-08 10:12:31.343428: validation loss: -0.7633
2022-07-08 10:12:31.368587: Average global foreground Dice: [0.8196]
2022-07-08 10:12:31.388353: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:12:32.249717: Suus1 maybe_update_lr lr: 0.006068
2022-07-08 10:12:32.268905: This epoch took 77.900036 s

2022-07-08 10:12:32.301860: 
epoch:  213
2022-07-08 10:13:44.008194: train loss : -0.8741
2022-07-08 10:13:48.899924: validation loss: -0.7452
2022-07-08 10:13:48.927219: Average global foreground Dice: [0.8059]
2022-07-08 10:13:48.934033: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:13:49.771330: Suus1 maybe_update_lr lr: 0.006049
2022-07-08 10:13:49.790901: This epoch took 77.467006 s

2022-07-08 10:13:49.812868: 
epoch:  214
2022-07-08 10:15:01.126807: train loss : -0.8728
2022-07-08 10:15:06.649336: validation loss: -0.7634
2022-07-08 10:15:06.693290: Average global foreground Dice: [0.8209]
2022-07-08 10:15:06.727883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:15:07.540704: Suus1 maybe_update_lr lr: 0.00603
2022-07-08 10:15:07.559900: This epoch took 77.723135 s

2022-07-08 10:15:07.581853: 
epoch:  215
2022-07-08 10:16:20.512820: train loss : -0.8730
2022-07-08 10:16:25.987826: validation loss: -0.7355
2022-07-08 10:16:26.029232: Average global foreground Dice: [0.8021]
2022-07-08 10:16:26.040601: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:16:26.643446: Suus1 maybe_update_lr lr: 0.006011
2022-07-08 10:16:26.646272: This epoch took 79.034086 s

2022-07-08 10:16:26.652877: 
epoch:  216
2022-07-08 10:17:38.174170: train loss : -0.8733
2022-07-08 10:17:44.006381: validation loss: -0.7511
2022-07-08 10:17:44.051281: Average global foreground Dice: [0.8113]
2022-07-08 10:17:44.083884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:17:44.814335: Suus1 maybe_update_lr lr: 0.005991
2022-07-08 10:17:44.835958: This epoch took 78.181139 s

2022-07-08 10:17:44.861856: 
epoch:  217
2022-07-08 10:18:56.966870: train loss : -0.8747
2022-07-08 10:19:01.812281: validation loss: -0.7594
2022-07-08 10:19:01.863800: Average global foreground Dice: [0.8179]
2022-07-08 10:19:01.890004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:19:02.637753: Suus1 maybe_update_lr lr: 0.005972
2022-07-08 10:19:02.675912: This epoch took 77.791872 s

2022-07-08 10:19:02.704866: 
epoch:  218
2022-07-08 10:20:15.860090: train loss : -0.8649
2022-07-08 10:20:21.049812: validation loss: -0.7504
2022-07-08 10:20:21.070481: Average global foreground Dice: [0.812]
2022-07-08 10:20:21.090229: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:20:21.790960: Suus1 maybe_update_lr lr: 0.005953
2022-07-08 10:20:21.801041: This epoch took 79.074173 s

2022-07-08 10:20:21.814523: 
epoch:  219
2022-07-08 10:21:33.060186: train loss : -0.8664
2022-07-08 10:21:37.888501: validation loss: -0.7618
2022-07-08 10:21:37.923232: Average global foreground Dice: [0.8173]
2022-07-08 10:21:37.931407: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:21:38.626924: Suus1 maybe_update_lr lr: 0.005934
2022-07-08 10:21:38.646910: This epoch took 76.800886 s

2022-07-08 10:21:38.662744: 
epoch:  220
2022-07-08 10:22:52.320054: train loss : -0.8674
2022-07-08 10:22:57.752886: validation loss: -0.7631
2022-07-08 10:22:57.789828: Average global foreground Dice: [0.8203]
2022-07-08 10:22:57.816489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:22:58.541764: Suus1 maybe_update_lr lr: 0.005915
2022-07-08 10:22:58.571903: This epoch took 79.882717 s

2022-07-08 10:22:58.597872: 
epoch:  221
2022-07-08 10:24:08.829706: train loss : -0.8711
2022-07-08 10:24:14.143379: validation loss: -0.7623
2022-07-08 10:24:14.160877: Average global foreground Dice: [0.8155]
2022-07-08 10:24:14.180623: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:24:14.834392: Suus1 maybe_update_lr lr: 0.005896
2022-07-08 10:24:14.864923: This epoch took 76.259355 s

2022-07-08 10:24:14.894486: 
epoch:  222
2022-07-08 10:25:27.636140: train loss : -0.8677
2022-07-08 10:25:33.003454: validation loss: -0.7554
2022-07-08 10:25:33.032455: Average global foreground Dice: [0.8121]
2022-07-08 10:25:33.051754: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:25:33.656229: Suus1 maybe_update_lr lr: 0.005877
2022-07-08 10:25:33.672827: This epoch took 78.765320 s

2022-07-08 10:25:33.701979: 
epoch:  223
2022-07-08 10:26:44.768338: train loss : -0.8562
2022-07-08 10:26:50.166254: validation loss: -0.7405
2022-07-08 10:26:50.216829: Average global foreground Dice: [0.8027]
2022-07-08 10:26:50.237871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:26:50.793192: Suus1 maybe_update_lr lr: 0.005858
2022-07-08 10:26:50.817908: This epoch took 77.084888 s

2022-07-08 10:26:50.847878: 
epoch:  224
2022-07-08 10:28:02.151397: train loss : -0.8218
2022-07-08 10:28:07.436889: validation loss: -0.7538
2022-07-08 10:28:07.472268: Average global foreground Dice: [0.8126]
2022-07-08 10:28:07.493877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:28:08.066393: Suus1 maybe_update_lr lr: 0.005839
2022-07-08 10:28:08.086991: This epoch took 77.217130 s

2022-07-08 10:28:08.116866: 
epoch:  225
2022-07-08 10:29:19.760845: train loss : -0.8416
2022-07-08 10:29:24.676506: validation loss: -0.7307
2022-07-08 10:29:24.680551: Average global foreground Dice: [0.7974]
2022-07-08 10:29:24.702686: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:29:25.412354: Suus1 maybe_update_lr lr: 0.00582
2022-07-08 10:29:25.431905: This epoch took 77.289052 s

2022-07-08 10:29:25.455854: 
epoch:  226
2022-07-08 10:30:37.033907: train loss : -0.8458
2022-07-08 10:30:41.951867: validation loss: -0.7568
2022-07-08 10:30:41.990541: Average global foreground Dice: [0.8132]
2022-07-08 10:30:41.993006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:30:42.532230: Suus1 maybe_update_lr lr: 0.005801
2022-07-08 10:30:42.560895: This epoch took 77.073665 s

2022-07-08 10:30:42.569300: 
epoch:  227
2022-07-08 10:31:56.200883: train loss : -0.8571
2022-07-08 10:32:01.475287: validation loss: -0.7178
2022-07-08 10:32:01.481697: Average global foreground Dice: [0.7931]
2022-07-08 10:32:01.512946: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:32:02.144001: Suus1 maybe_update_lr lr: 0.005781
2022-07-08 10:32:02.174891: This epoch took 79.588031 s

2022-07-08 10:32:02.192953: 
epoch:  228
2022-07-08 10:33:14.380328: train loss : -0.8542
2022-07-08 10:33:19.299227: validation loss: -0.7544
2022-07-08 10:33:19.316332: Average global foreground Dice: [0.8073]
2022-07-08 10:33:19.343263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:33:19.932022: Suus1 maybe_update_lr lr: 0.005762
2022-07-08 10:33:19.951899: This epoch took 77.743643 s

2022-07-08 10:33:19.973309: 
epoch:  229
2022-07-08 10:34:31.378461: train loss : -0.8643
2022-07-08 10:34:35.991816: validation loss: -0.7761
2022-07-08 10:34:36.023416: Average global foreground Dice: [0.8261]
2022-07-08 10:34:36.054877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:34:36.756163: Suus1 maybe_update_lr lr: 0.005743
2022-07-08 10:34:36.763629: This epoch took 76.763766 s

2022-07-08 10:34:36.782859: 
epoch:  230
2022-07-08 10:35:48.620775: train loss : -0.8663
2022-07-08 10:35:53.625505: validation loss: -0.7681
2022-07-08 10:35:53.660276: Average global foreground Dice: [0.8204]
2022-07-08 10:35:53.681880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:35:54.456254: Suus1 maybe_update_lr lr: 0.005724
2022-07-08 10:35:54.488909: This epoch took 77.684026 s

2022-07-08 10:35:54.510844: 
epoch:  231
2022-07-08 10:37:05.716255: train loss : -0.8673
2022-07-08 10:37:10.403719: validation loss: -0.7586
2022-07-08 10:37:10.422194: Average global foreground Dice: [0.8176]
2022-07-08 10:37:10.440692: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:37:11.294534: Suus1 maybe_update_lr lr: 0.005705
2022-07-08 10:37:11.297576: This epoch took 76.763690 s

2022-07-08 10:37:11.299699: 
epoch:  232
2022-07-08 10:38:23.918621: train loss : -0.8501
2022-07-08 10:38:29.339151: validation loss: -0.7536
2022-07-08 10:38:29.372927: Average global foreground Dice: [0.8139]
2022-07-08 10:38:29.381718: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:38:30.299128: Suus1 maybe_update_lr lr: 0.005686
2022-07-08 10:38:30.327910: This epoch took 79.026184 s

2022-07-08 10:38:30.345863: 
epoch:  233
2022-07-08 10:39:42.919277: train loss : -0.8609
2022-07-08 10:39:47.796355: validation loss: -0.7719
2022-07-08 10:39:47.814276: Average global foreground Dice: [0.83]
2022-07-08 10:39:47.841437: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:39:48.498369: Suus1 maybe_update_lr lr: 0.005667
2022-07-08 10:39:48.513069: This epoch took 78.137195 s

2022-07-08 10:39:48.522702: 
epoch:  234
2022-07-08 10:41:02.068355: train loss : -0.8617
2022-07-08 10:41:07.800327: validation loss: -0.7207
2022-07-08 10:41:07.818237: Average global foreground Dice: [0.7861]
2022-07-08 10:41:07.838085: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:41:08.566196: Suus1 maybe_update_lr lr: 0.005647
2022-07-08 10:41:08.580033: This epoch took 80.017221 s

2022-07-08 10:41:08.590372: 
epoch:  235
2022-07-08 10:42:21.937367: train loss : -0.8494
2022-07-08 10:42:27.351385: validation loss: -0.7637
2022-07-08 10:42:27.385272: Average global foreground Dice: [0.8159]
2022-07-08 10:42:27.420590: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:42:28.032258: Suus1 maybe_update_lr lr: 0.005628
2022-07-08 10:42:28.061057: This epoch took 79.457901 s

2022-07-08 10:42:28.079001: 
epoch:  236
2022-07-08 10:43:38.874927: train loss : -0.8650
2022-07-08 10:43:43.941294: validation loss: -0.7646
2022-07-08 10:43:43.977081: Average global foreground Dice: [0.82]
2022-07-08 10:43:43.992614: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:43:44.696241: Suus1 maybe_update_lr lr: 0.005609
2022-07-08 10:43:44.718893: This epoch took 76.618742 s

2022-07-08 10:43:44.728017: 
epoch:  237
2022-07-08 10:44:55.973450: train loss : -0.8707
2022-07-08 10:45:01.051545: validation loss: -0.7602
2022-07-08 10:45:01.091599: Average global foreground Dice: [0.8182]
2022-07-08 10:45:01.116879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:45:01.865334: Suus1 maybe_update_lr lr: 0.00559
2022-07-08 10:45:01.872216: This epoch took 77.133653 s

2022-07-08 10:45:01.902931: 
epoch:  238
2022-07-08 10:46:13.095703: train loss : -0.8702
2022-07-08 10:46:18.120258: validation loss: -0.7559
2022-07-08 10:46:18.152293: Average global foreground Dice: [0.8137]
2022-07-08 10:46:18.172032: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:46:18.727451: Suus1 maybe_update_lr lr: 0.005571
2022-07-08 10:46:18.734448: This epoch took 76.800476 s

2022-07-08 10:46:18.768941: 
epoch:  239
2022-07-08 10:47:29.947372: train loss : -0.8782
2022-07-08 10:47:34.931263: validation loss: -0.7641
2022-07-08 10:47:34.963289: Average global foreground Dice: [0.8156]
2022-07-08 10:47:34.975884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:47:35.712573: Suus1 maybe_update_lr lr: 0.005551
2022-07-08 10:47:35.725170: This epoch took 76.946159 s

2022-07-08 10:47:35.738840: 
epoch:  240
2022-07-08 10:48:48.607377: train loss : -0.8777
2022-07-08 10:48:53.556715: validation loss: -0.7587
2022-07-08 10:48:53.578594: Average global foreground Dice: [0.8172]
2022-07-08 10:48:53.608879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:48:54.326664: Suus1 maybe_update_lr lr: 0.005532
2022-07-08 10:48:54.347897: This epoch took 78.579032 s

2022-07-08 10:48:54.369871: 
epoch:  241
2022-07-08 10:50:06.188405: train loss : -0.8740
2022-07-08 10:50:12.211521: validation loss: -0.7517
2022-07-08 10:50:12.243282: Average global foreground Dice: [0.8099]
2022-07-08 10:50:12.264879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:50:13.008582: Suus1 maybe_update_lr lr: 0.005513
2022-07-08 10:50:13.029925: This epoch took 78.630063 s

2022-07-08 10:50:13.051854: 
epoch:  242
2022-07-08 10:51:24.449010: train loss : -0.8698
2022-07-08 10:51:29.675397: validation loss: -0.7398
2022-07-08 10:51:29.708296: Average global foreground Dice: [0.8042]
2022-07-08 10:51:29.740893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:51:30.412071: Suus1 maybe_update_lr lr: 0.005494
2022-07-08 10:51:30.445922: This epoch took 77.368040 s

2022-07-08 10:51:30.473086: 
epoch:  243
2022-07-08 10:52:42.760382: train loss : -0.8765
2022-07-08 10:52:47.746805: validation loss: -0.7541
2022-07-08 10:52:47.780285: Average global foreground Dice: [0.8143]
2022-07-08 10:52:47.811020: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:52:48.539441: Suus1 maybe_update_lr lr: 0.005474
2022-07-08 10:52:48.571905: This epoch took 78.078435 s

2022-07-08 10:52:48.593863: 
epoch:  244
2022-07-08 10:54:00.591227: train loss : -0.8758
2022-07-08 10:54:05.520888: validation loss: -0.7600
2022-07-08 10:54:05.552212: Average global foreground Dice: [0.8172]
2022-07-08 10:54:05.573999: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:54:06.212245: Suus1 maybe_update_lr lr: 0.005455
2022-07-08 10:54:06.239832: This epoch took 77.620942 s

2022-07-08 10:54:06.270849: 
epoch:  245
2022-07-08 10:55:17.452404: train loss : -0.8765
2022-07-08 10:55:22.819016: validation loss: -0.7639
2022-07-08 10:55:22.846210: Average global foreground Dice: [0.8223]
2022-07-08 10:55:22.872865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:55:23.506284: Suus1 maybe_update_lr lr: 0.005436
2022-07-08 10:55:23.532805: This epoch took 77.229915 s

2022-07-08 10:55:23.564875: 
epoch:  246
2022-07-08 10:56:36.549154: train loss : -0.8839
2022-07-08 10:56:41.947023: validation loss: -0.7591
2022-07-08 10:56:41.971378: Average global foreground Dice: [0.824]
2022-07-08 10:56:42.014875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:56:42.771070: Suus1 maybe_update_lr lr: 0.005417
2022-07-08 10:56:42.784546: This epoch took 79.209881 s

2022-07-08 10:56:42.804867: 
epoch:  247
2022-07-08 10:57:53.729155: train loss : -0.8846
2022-07-08 10:57:58.761830: validation loss: -0.7527
2022-07-08 10:57:58.786640: Average global foreground Dice: [0.8153]
2022-07-08 10:57:58.807887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:57:59.437287: Suus1 maybe_update_lr lr: 0.005397
2022-07-08 10:57:59.439725: This epoch took 76.612849 s

2022-07-08 10:57:59.456804: 
epoch:  248
2022-07-08 10:59:09.754040: train loss : -0.8861
2022-07-08 10:59:15.050895: validation loss: -0.7559
2022-07-08 10:59:15.094179: Average global foreground Dice: [0.8173]
2022-07-08 10:59:15.112880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:59:16.081338: Suus1 maybe_update_lr lr: 0.005378
2022-07-08 10:59:16.121909: This epoch took 76.655863 s

2022-07-08 10:59:16.155246: 
epoch:  249
2022-07-08 11:00:26.956827: train loss : -0.8859
2022-07-08 11:00:32.125588: validation loss: -0.7526
2022-07-08 11:00:32.148928: Average global foreground Dice: [0.8067]
2022-07-08 11:00:32.169165: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:00:32.899814: Suus1 maybe_update_lr lr: 0.005359
2022-07-08 11:00:32.938092: saving scheduled checkpoint file...
2022-07-08 11:00:33.119614: saving checkpoint...
2022-07-08 11:00:34.553850: done, saving took 1.60 seconds
2022-07-08 11:00:34.589027: done
2022-07-08 11:00:34.591489: This epoch took 78.414495 s

2022-07-08 11:00:34.593687: 
epoch:  250
2022-07-08 11:01:45.983053: train loss : -0.8856
2022-07-08 11:01:51.398048: validation loss: -0.7554
2022-07-08 11:01:51.408789: Average global foreground Dice: [0.8146]
2022-07-08 11:01:51.423835: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:01:52.148487: Suus1 maybe_update_lr lr: 0.00534
2022-07-08 11:01:52.175925: This epoch took 77.579932 s

2022-07-08 11:01:52.208868: 
epoch:  251
2022-07-08 11:03:03.568887: train loss : -0.8828
2022-07-08 11:03:08.882294: validation loss: -0.7599
2022-07-08 11:03:08.901461: Average global foreground Dice: [0.819]
2022-07-08 11:03:08.920757: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:03:09.637494: Suus1 maybe_update_lr lr: 0.00532
2022-07-08 11:03:09.662085: This epoch took 77.422209 s

2022-07-08 11:03:09.683856: 
epoch:  252
2022-07-08 11:04:22.066312: train loss : -0.8791
2022-07-08 11:04:27.155752: validation loss: -0.7591
2022-07-08 11:04:27.186080: Average global foreground Dice: [0.8169]
2022-07-08 11:04:27.211877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:04:28.551421: Suus1 maybe_update_lr lr: 0.005301
2022-07-08 11:04:28.572528: This epoch took 78.866660 s

2022-07-08 11:04:28.592501: 
epoch:  253
2022-07-08 11:05:39.638922: train loss : -0.8822
2022-07-08 11:05:45.118443: validation loss: -0.7796
2022-07-08 11:05:45.166097: Average global foreground Dice: [0.8327]
2022-07-08 11:05:45.172164: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:05:45.813174: Suus1 maybe_update_lr lr: 0.005282
2022-07-08 11:05:45.816240: This epoch took 77.221472 s

2022-07-08 11:05:45.842648: 
epoch:  254
2022-07-08 11:06:57.945152: train loss : -0.8826
2022-07-08 11:07:03.021236: validation loss: -0.7676
2022-07-08 11:07:03.052511: Average global foreground Dice: [0.825]
2022-07-08 11:07:03.071951: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:07:03.753220: Suus1 maybe_update_lr lr: 0.005262
2022-07-08 11:07:03.775038: saving best epoch checkpoint...
2022-07-08 11:07:03.909684: saving checkpoint...
2022-07-08 11:07:05.611217: done, saving took 1.82 seconds
2022-07-08 11:07:05.631804: This epoch took 79.777983 s

2022-07-08 11:07:05.634737: 
epoch:  255
2022-07-08 11:08:16.783576: train loss : -0.8847
2022-07-08 11:08:21.929806: validation loss: -0.7718
2022-07-08 11:08:21.947444: Average global foreground Dice: [0.8279]
2022-07-08 11:08:21.962200: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:08:22.665758: Suus1 maybe_update_lr lr: 0.005243
2022-07-08 11:08:22.684902: saving best epoch checkpoint...
2022-07-08 11:08:22.824148: saving checkpoint...
2022-07-08 11:08:24.573727: done, saving took 1.87 seconds
2022-07-08 11:08:24.590288: This epoch took 78.952936 s

2022-07-08 11:08:24.592501: 
epoch:  256
2022-07-08 11:09:35.006516: train loss : -0.8811
2022-07-08 11:09:40.069459: validation loss: -0.7465
2022-07-08 11:09:40.098300: Average global foreground Dice: [0.8086]
2022-07-08 11:09:40.126873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:09:40.881401: Suus1 maybe_update_lr lr: 0.005224
2022-07-08 11:09:40.886605: This epoch took 76.292063 s

2022-07-08 11:09:40.922400: 
epoch:  257
2022-07-08 11:10:52.466413: train loss : -0.8869
2022-07-08 11:10:57.617498: validation loss: -0.7789
2022-07-08 11:10:57.633870: Average global foreground Dice: [0.832]
2022-07-08 11:10:57.649380: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:10:58.378411: Suus1 maybe_update_lr lr: 0.005204
2022-07-08 11:10:58.380911: saving best epoch checkpoint...
2022-07-08 11:10:58.460696: saving checkpoint...
2022-07-08 11:10:59.930457: done, saving took 1.55 seconds
2022-07-08 11:10:59.945709: This epoch took 79.003208 s

2022-07-08 11:10:59.947864: 
epoch:  258
2022-07-08 11:12:11.696360: train loss : -0.8869
2022-07-08 11:12:16.670851: validation loss: -0.7762
2022-07-08 11:12:16.699318: Average global foreground Dice: [0.8315]
2022-07-08 11:12:16.728734: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:12:17.427587: Suus1 maybe_update_lr lr: 0.005185
2022-07-08 11:12:17.467853: saving best epoch checkpoint...
2022-07-08 11:12:17.561858: saving checkpoint...
2022-07-08 11:12:19.246724: done, saving took 1.77 seconds
2022-07-08 11:12:19.262270: This epoch took 79.312334 s

2022-07-08 11:12:19.264273: 
epoch:  259
2022-07-08 11:13:30.889517: train loss : -0.8879
2022-07-08 11:13:36.032341: validation loss: -0.7747
2022-07-08 11:13:36.069267: Average global foreground Dice: [0.8315]
2022-07-08 11:13:36.081875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:13:37.264397: Suus1 maybe_update_lr lr: 0.005166
2022-07-08 11:13:37.296898: saving best epoch checkpoint...
2022-07-08 11:13:37.402204: saving checkpoint...
2022-07-08 11:13:38.981036: done, saving took 1.65 seconds
2022-07-08 11:13:38.996628: This epoch took 79.730421 s

2022-07-08 11:13:38.999507: 
epoch:  260
2022-07-08 11:14:50.735262: train loss : -0.8838
2022-07-08 11:14:55.718883: validation loss: -0.7530
2022-07-08 11:14:55.766271: Average global foreground Dice: [0.8153]
2022-07-08 11:14:55.771726: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:14:56.417187: Suus1 maybe_update_lr lr: 0.005146
2022-07-08 11:14:56.437889: This epoch took 77.436032 s

2022-07-08 11:14:56.459852: 
epoch:  261
2022-07-08 11:16:09.212823: train loss : -0.8888
2022-07-08 11:16:14.528473: validation loss: -0.7540
2022-07-08 11:16:14.561273: Average global foreground Dice: [0.8168]
2022-07-08 11:16:14.587174: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:16:15.430309: Suus1 maybe_update_lr lr: 0.005127
2022-07-08 11:16:15.462879: This epoch took 78.975971 s

2022-07-08 11:16:15.494875: 
epoch:  262
2022-07-08 11:17:26.622377: train loss : -0.8892
2022-07-08 11:17:31.397455: validation loss: -0.7748
2022-07-08 11:17:31.437374: Average global foreground Dice: [0.8295]
2022-07-08 11:17:31.464889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:17:32.097291: Suus1 maybe_update_lr lr: 0.005107
2022-07-08 11:17:32.108403: This epoch took 76.580539 s

2022-07-08 11:17:32.132006: 
epoch:  263
2022-07-08 11:18:42.121298: train loss : -0.8876
2022-07-08 11:18:47.425400: validation loss: -0.7563
2022-07-08 11:18:47.465661: Average global foreground Dice: [0.8217]
2022-07-08 11:18:47.477878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:18:48.204215: Suus1 maybe_update_lr lr: 0.005088
2022-07-08 11:18:48.223887: This epoch took 76.085347 s

2022-07-08 11:18:48.245863: 
epoch:  264
2022-07-08 11:19:59.808057: train loss : -0.8907
2022-07-08 11:20:05.463021: validation loss: -0.7542
2022-07-08 11:20:05.501466: Average global foreground Dice: [0.8122]
2022-07-08 11:20:05.519888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:20:06.181483: Suus1 maybe_update_lr lr: 0.005069
2022-07-08 11:20:06.217247: This epoch took 77.946383 s

2022-07-08 11:20:06.231035: 
epoch:  265
2022-07-08 11:21:17.114726: train loss : -0.8877
2022-07-08 11:21:21.811504: validation loss: -0.7623
2022-07-08 11:21:21.832407: Average global foreground Dice: [0.8151]
2022-07-08 11:21:21.848871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:21:22.520405: Suus1 maybe_update_lr lr: 0.005049
2022-07-08 11:21:22.547909: This epoch took 76.305420 s

2022-07-08 11:21:22.563650: 
epoch:  266
2022-07-08 11:22:37.030366: train loss : -0.8888
2022-07-08 11:22:42.368522: validation loss: -0.7623
2022-07-08 11:22:42.397385: Average global foreground Dice: [0.8203]
2022-07-08 11:22:42.404710: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:22:42.999675: Suus1 maybe_update_lr lr: 0.00503
2022-07-08 11:22:43.042900: This epoch took 80.453141 s

2022-07-08 11:22:43.075349: 
epoch:  267
2022-07-08 11:23:55.626328: train loss : -0.8861
2022-07-08 11:24:01.056480: validation loss: -0.7681
2022-07-08 11:24:01.082905: Average global foreground Dice: [0.8214]
2022-07-08 11:24:01.115013: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:24:01.850582: Suus1 maybe_update_lr lr: 0.00501
2022-07-08 11:24:01.869919: This epoch took 78.759051 s

2022-07-08 11:24:01.893966: 
epoch:  268
2022-07-08 11:25:12.508306: train loss : -0.8859
2022-07-08 11:25:17.443307: validation loss: -0.7722
2022-07-08 11:25:17.479212: Average global foreground Dice: [0.825]
2022-07-08 11:25:17.505941: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:25:18.061077: Suus1 maybe_update_lr lr: 0.004991
2022-07-08 11:25:18.077546: This epoch took 76.163119 s

2022-07-08 11:25:18.105395: 
epoch:  269
2022-07-08 11:26:31.404767: train loss : -0.8823
2022-07-08 11:26:37.129965: validation loss: -0.7731
2022-07-08 11:26:37.163255: Average global foreground Dice: [0.8219]
2022-07-08 11:26:37.184876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:26:37.801022: Suus1 maybe_update_lr lr: 0.004971
2022-07-08 11:26:37.826903: This epoch took 79.689035 s

2022-07-08 11:26:37.848848: 
epoch:  270
2022-07-08 11:27:50.030387: train loss : -0.8778
2022-07-08 11:27:54.882668: validation loss: -0.7691
2022-07-08 11:27:54.925413: Average global foreground Dice: [0.8263]
2022-07-08 11:27:54.951308: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:27:55.492332: Suus1 maybe_update_lr lr: 0.004952
2022-07-08 11:27:55.517057: This epoch took 77.651440 s

2022-07-08 11:27:55.528944: 
epoch:  271
2022-07-08 11:29:06.671134: train loss : -0.8801
2022-07-08 11:29:11.757756: validation loss: -0.7664
2022-07-08 11:29:11.793280: Average global foreground Dice: [0.8226]
2022-07-08 11:29:11.814880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:29:12.490279: Suus1 maybe_update_lr lr: 0.004933
2022-07-08 11:29:12.512064: This epoch took 76.969919 s

2022-07-08 11:29:12.533852: 
epoch:  272
2022-07-08 11:30:24.580874: train loss : -0.8852
2022-07-08 11:30:29.999039: validation loss: -0.7623
2022-07-08 11:30:30.033256: Average global foreground Dice: [0.8195]
2022-07-08 11:30:30.042274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:30:30.734286: Suus1 maybe_update_lr lr: 0.004913
2022-07-08 11:30:30.767682: This epoch took 78.211812 s

2022-07-08 11:30:30.787919: 
epoch:  273
2022-07-08 11:31:43.230145: train loss : -0.8873
2022-07-08 11:31:49.087865: validation loss: -0.7835
2022-07-08 11:31:49.091653: Average global foreground Dice: [0.8338]
2022-07-08 11:31:49.093740: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:31:49.660485: Suus1 maybe_update_lr lr: 0.004894
2022-07-08 11:31:49.681910: saving best epoch checkpoint...
2022-07-08 11:31:49.773542: saving checkpoint...
2022-07-08 11:31:51.352144: done, saving took 1.65 seconds
2022-07-08 11:31:51.366099: This epoch took 80.551110 s

2022-07-08 11:31:51.368121: 
epoch:  274
2022-07-08 11:33:02.327169: train loss : -0.8887
2022-07-08 11:33:07.760617: validation loss: -0.7579
2022-07-08 11:33:07.785692: Average global foreground Dice: [0.8139]
2022-07-08 11:33:07.792042: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:33:08.548764: Suus1 maybe_update_lr lr: 0.004874
2022-07-08 11:33:08.555323: This epoch took 77.185386 s

2022-07-08 11:33:08.561736: 
epoch:  275
2022-07-08 11:34:19.546250: train loss : -0.8886
2022-07-08 11:34:24.601984: validation loss: -0.7627
2022-07-08 11:34:24.611261: Average global foreground Dice: [0.8202]
2022-07-08 11:34:24.617961: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:34:25.113399: Suus1 maybe_update_lr lr: 0.004855
2022-07-08 11:34:25.131913: This epoch took 76.559064 s

2022-07-08 11:34:25.154859: 
epoch:  276
2022-07-08 11:35:37.671339: train loss : -0.8936
2022-07-08 11:35:42.865330: validation loss: -0.7675
2022-07-08 11:35:42.899265: Average global foreground Dice: [0.8274]
2022-07-08 11:35:42.925872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:35:43.761804: Suus1 maybe_update_lr lr: 0.004835
2022-07-08 11:35:43.775594: This epoch took 78.589430 s

2022-07-08 11:35:43.801896: 
epoch:  277
2022-07-08 11:36:55.487000: train loss : -0.8892
2022-07-08 11:37:00.807539: validation loss: -0.7728
2022-07-08 11:37:00.851289: Average global foreground Dice: [0.8269]
2022-07-08 11:37:00.865782: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:37:01.730679: Suus1 maybe_update_lr lr: 0.004816
2022-07-08 11:37:01.751886: saving best epoch checkpoint...
2022-07-08 11:37:01.905191: saving checkpoint...
2022-07-08 11:37:03.350520: done, saving took 1.58 seconds
2022-07-08 11:37:03.366907: This epoch took 79.558485 s

2022-07-08 11:37:03.369018: 
epoch:  278
2022-07-08 11:38:14.418118: train loss : -0.8921
2022-07-08 11:38:19.624035: validation loss: -0.7703
2022-07-08 11:38:19.660603: Average global foreground Dice: [0.8255]
2022-07-08 11:38:19.675909: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:38:20.353322: Suus1 maybe_update_lr lr: 0.004796
2022-07-08 11:38:20.384887: saving best epoch checkpoint...
2022-07-08 11:38:20.486566: saving checkpoint...
2022-07-08 11:38:22.119044: done, saving took 1.72 seconds
2022-07-08 11:38:22.135023: This epoch took 78.764132 s

2022-07-08 11:38:22.137146: 
epoch:  279
2022-07-08 11:39:33.645492: train loss : -0.8911
2022-07-08 11:39:39.186250: validation loss: -0.7432
2022-07-08 11:39:39.213122: Average global foreground Dice: [0.808]
2022-07-08 11:39:39.244396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:39:40.106828: Suus1 maybe_update_lr lr: 0.004776
2022-07-08 11:39:40.130185: This epoch took 77.991115 s

2022-07-08 11:39:40.158010: 
epoch:  280
2022-07-08 11:40:51.859503: train loss : -0.8951
2022-07-08 11:40:57.256360: validation loss: -0.7505
2022-07-08 11:40:57.284648: Average global foreground Dice: [0.8112]
2022-07-08 11:40:57.296862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:40:57.924400: Suus1 maybe_update_lr lr: 0.004757
2022-07-08 11:40:57.942955: This epoch took 77.782525 s

2022-07-08 11:40:57.948885: 
epoch:  281
2022-07-08 11:42:09.979899: train loss : -0.8936
2022-07-08 11:42:15.943913: validation loss: -0.7673
2022-07-08 11:42:15.971207: Average global foreground Dice: [0.8204]
2022-07-08 11:42:15.999726: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:42:16.560898: Suus1 maybe_update_lr lr: 0.004737
2022-07-08 11:42:16.569191: This epoch took 78.589845 s

2022-07-08 11:42:16.600105: 
epoch:  282
2022-07-08 11:43:30.089984: train loss : -0.8948
2022-07-08 11:43:36.011471: validation loss: -0.7572
2022-07-08 11:43:36.054527: Average global foreground Dice: [0.8239]
2022-07-08 11:43:36.074934: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:43:36.730959: Suus1 maybe_update_lr lr: 0.004718
2022-07-08 11:43:36.755900: This epoch took 80.153341 s

2022-07-08 11:43:36.771637: 
epoch:  283
2022-07-08 11:44:48.624677: train loss : -0.8941
2022-07-08 11:44:53.584066: validation loss: -0.7746
2022-07-08 11:44:53.612272: Average global foreground Dice: [0.8302]
2022-07-08 11:44:53.624586: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:44:54.355388: Suus1 maybe_update_lr lr: 0.004698
2022-07-08 11:44:54.385916: This epoch took 77.608058 s

2022-07-08 11:44:54.410928: 
epoch:  284
2022-07-08 11:46:06.105164: train loss : -0.8935
2022-07-08 11:46:11.531535: validation loss: -0.7711
2022-07-08 11:46:11.552268: Average global foreground Dice: [0.8251]
2022-07-08 11:46:11.568885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:46:12.315249: Suus1 maybe_update_lr lr: 0.004679
2022-07-08 11:46:12.334924: This epoch took 77.903913 s

2022-07-08 11:46:12.349372: 
epoch:  285
2022-07-08 11:47:22.711236: train loss : -0.8940
2022-07-08 11:47:27.696346: validation loss: -0.7498
2022-07-08 11:47:27.718296: Average global foreground Dice: [0.8128]
2022-07-08 11:47:27.738006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:47:28.539386: Suus1 maybe_update_lr lr: 0.004659
2022-07-08 11:47:28.557915: This epoch took 76.179037 s

2022-07-08 11:47:28.576977: 
epoch:  286
2022-07-08 11:48:41.392916: train loss : -0.8972
2022-07-08 11:48:47.444326: validation loss: -0.7615
2022-07-08 11:48:47.476817: Average global foreground Dice: [0.8192]
2022-07-08 11:48:47.509898: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:48:48.074744: Suus1 maybe_update_lr lr: 0.004639
2022-07-08 11:48:48.107923: This epoch took 79.502924 s

2022-07-08 11:48:48.126801: 
epoch:  287
2022-07-08 11:50:00.159618: train loss : -0.8953
2022-07-08 11:50:05.240391: validation loss: -0.7674
2022-07-08 11:50:05.271340: Average global foreground Dice: [0.8206]
2022-07-08 11:50:05.292886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:50:06.255335: Suus1 maybe_update_lr lr: 0.00462
2022-07-08 11:50:06.287920: This epoch took 78.143511 s

2022-07-08 11:50:06.320876: 
epoch:  288
2022-07-08 11:51:17.749451: train loss : -0.8958
2022-07-08 11:51:23.268808: validation loss: -0.7714
2022-07-08 11:51:23.271834: Average global foreground Dice: [0.8271]
2022-07-08 11:51:23.273956: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:51:23.775788: Suus1 maybe_update_lr lr: 0.0046
2022-07-08 11:51:23.794895: This epoch took 77.457179 s

2022-07-08 11:51:23.813941: 
epoch:  289
2022-07-08 11:52:35.030914: train loss : -0.8975
2022-07-08 11:52:40.037626: validation loss: -0.7585
2022-07-08 11:52:40.075526: Average global foreground Dice: [0.8194]
2022-07-08 11:52:40.095374: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:52:40.763441: Suus1 maybe_update_lr lr: 0.004581
2022-07-08 11:52:40.786047: This epoch took 76.947170 s

2022-07-08 11:52:40.809932: 
epoch:  290
2022-07-08 11:53:53.290720: train loss : -0.8976
2022-07-08 11:53:58.552330: validation loss: -0.7598
2022-07-08 11:53:58.578318: Average global foreground Dice: [0.8217]
2022-07-08 11:53:58.590891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:53:59.162179: Suus1 maybe_update_lr lr: 0.004561
2022-07-08 11:53:59.193515: This epoch took 78.363517 s

2022-07-08 11:53:59.220164: 
epoch:  291
2022-07-08 11:55:10.804019: train loss : -0.8971
2022-07-08 11:55:16.450328: validation loss: -0.7572
2022-07-08 11:55:16.469126: Average global foreground Dice: [0.815]
2022-07-08 11:55:16.514855: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:55:17.316469: Suus1 maybe_update_lr lr: 0.004541
2022-07-08 11:55:17.330233: This epoch took 78.088351 s

2022-07-08 11:55:17.342596: 
epoch:  292
2022-07-08 11:56:29.829942: train loss : -0.8957
2022-07-08 11:56:34.403033: validation loss: -0.7504
2022-07-08 11:56:34.408615: Average global foreground Dice: [0.8086]
2022-07-08 11:56:34.436870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:56:35.060311: Suus1 maybe_update_lr lr: 0.004522
2022-07-08 11:56:35.069099: This epoch took 77.718603 s

2022-07-08 11:56:35.079113: 
epoch:  293
2022-07-08 11:57:48.133622: train loss : -0.8943
2022-07-08 11:57:52.941204: validation loss: -0.7529
2022-07-08 11:57:52.959500: Average global foreground Dice: [0.8142]
2022-07-08 11:57:52.979182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:57:53.877308: Suus1 maybe_update_lr lr: 0.004502
2022-07-08 11:57:53.909919: This epoch took 78.827664 s

2022-07-08 11:57:53.931851: 
epoch:  294
2022-07-08 11:59:04.806486: train loss : -0.8970
2022-07-08 11:59:09.736553: validation loss: -0.7604
2022-07-08 11:59:09.765530: Average global foreground Dice: [0.8212]
2022-07-08 11:59:09.779763: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:59:10.456569: Suus1 maybe_update_lr lr: 0.004482
2022-07-08 11:59:10.489912: This epoch took 76.536043 s

2022-07-08 11:59:10.502860: 
epoch:  295
2022-07-08 12:00:22.594262: train loss : -0.8916
2022-07-08 12:00:27.389057: validation loss: -0.7712
2022-07-08 12:00:27.421844: Average global foreground Dice: [0.8266]
2022-07-08 12:00:27.428521: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:00:28.171918: Suus1 maybe_update_lr lr: 0.004463
2022-07-08 12:00:28.196042: This epoch took 77.660167 s

2022-07-08 12:00:28.217891: 
epoch:  296
2022-07-08 12:01:40.439091: train loss : -0.8877
2022-07-08 12:01:46.081447: validation loss: -0.7567
2022-07-08 12:01:46.111133: Average global foreground Dice: [0.8187]
2022-07-08 12:01:46.141889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:01:47.044193: Suus1 maybe_update_lr lr: 0.004443
2022-07-08 12:01:47.065904: This epoch took 78.829672 s

2022-07-08 12:01:47.085450: 
epoch:  297
2022-07-08 12:02:58.690124: train loss : -0.8894
2022-07-08 12:03:03.669676: validation loss: -0.7366
2022-07-08 12:03:03.703274: Average global foreground Dice: [0.8002]
2022-07-08 12:03:03.746083: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:03:04.440064: Suus1 maybe_update_lr lr: 0.004423
2022-07-08 12:03:04.454905: This epoch took 77.355295 s

2022-07-08 12:03:04.481858: 
epoch:  298
2022-07-08 12:04:17.477627: train loss : -0.8901
2022-07-08 12:04:23.155881: validation loss: -0.7721
2022-07-08 12:04:23.180303: Average global foreground Dice: [0.8251]
2022-07-08 12:04:23.210912: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:04:24.030020: Suus1 maybe_update_lr lr: 0.004404
2022-07-08 12:04:24.060892: This epoch took 79.535934 s

2022-07-08 12:04:24.093874: 
epoch:  299
2022-07-08 12:05:37.317282: train loss : -0.8926
2022-07-08 12:05:42.593180: validation loss: -0.7486
2022-07-08 12:05:42.603632: Average global foreground Dice: [0.808]
2022-07-08 12:05:42.628930: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:05:43.237352: Suus1 maybe_update_lr lr: 0.004384
2022-07-08 12:05:43.239485: saving scheduled checkpoint file...
2022-07-08 12:05:43.337038: saving checkpoint...
2022-07-08 12:05:44.855331: done, saving took 1.59 seconds
2022-07-08 12:05:44.872247: done
2022-07-08 12:05:44.874317: This epoch took 80.747449 s

2022-07-08 12:05:44.876397: 
epoch:  300
2022-07-08 12:06:56.548506: train loss : -0.8970
2022-07-08 12:07:01.376701: validation loss: -0.7666
2022-07-08 12:07:01.408230: Average global foreground Dice: [0.8219]
2022-07-08 12:07:01.438886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:07:02.063092: Suus1 maybe_update_lr lr: 0.004364
2022-07-08 12:07:02.082853: This epoch took 77.204483 s

2022-07-08 12:07:02.104986: 
epoch:  301
2022-07-08 12:08:12.232567: train loss : -0.8941
2022-07-08 12:08:17.267689: validation loss: -0.7579
2022-07-08 12:08:17.288537: Average global foreground Dice: [0.8169]
2022-07-08 12:08:17.314990: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:08:17.945612: Suus1 maybe_update_lr lr: 0.004344
2022-07-08 12:08:17.966014: This epoch took 75.847927 s

2022-07-08 12:08:17.987868: 
epoch:  302
2022-07-08 12:09:29.824487: train loss : -0.8974
2022-07-08 12:09:34.824384: validation loss: -0.7486
2022-07-08 12:09:34.835388: Average global foreground Dice: [0.8122]
2022-07-08 12:09:34.867004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:09:35.481188: Suus1 maybe_update_lr lr: 0.004325
2022-07-08 12:09:35.499041: This epoch took 77.490801 s

2022-07-08 12:09:35.511847: 
epoch:  303
2022-07-08 12:10:48.821285: train loss : -0.8920
2022-07-08 12:10:53.646545: validation loss: -0.7353
2022-07-08 12:10:53.687296: Average global foreground Dice: [0.7955]
2022-07-08 12:10:53.704877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:10:54.362469: Suus1 maybe_update_lr lr: 0.004305
2022-07-08 12:10:54.382905: This epoch took 78.846478 s

2022-07-08 12:10:54.404848: 
epoch:  304
2022-07-08 12:12:06.637068: train loss : -0.8895
2022-07-08 12:12:11.827166: validation loss: -0.7439
2022-07-08 12:12:11.854056: Average global foreground Dice: [0.8075]
2022-07-08 12:12:11.863486: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:12:12.535226: Suus1 maybe_update_lr lr: 0.004285
2022-07-08 12:12:12.542506: This epoch took 78.112905 s

2022-07-08 12:12:12.561642: 
epoch:  305
2022-07-08 12:13:23.140096: train loss : -0.8945
2022-07-08 12:13:29.009165: validation loss: -0.7602
2022-07-08 12:13:29.029048: Average global foreground Dice: [0.8189]
2022-07-08 12:13:29.048844: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:13:29.834211: Suus1 maybe_update_lr lr: 0.004265
2022-07-08 12:13:29.856917: This epoch took 77.288796 s

2022-07-08 12:13:29.881875: 
epoch:  306
2022-07-08 12:14:41.354541: train loss : -0.8950
2022-07-08 12:14:46.773518: validation loss: -0.7597
2022-07-08 12:14:46.805305: Average global foreground Dice: [0.8199]
2022-07-08 12:14:46.826860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:14:47.558949: Suus1 maybe_update_lr lr: 0.004245
2022-07-08 12:14:47.569763: This epoch took 77.664889 s

2022-07-08 12:14:47.572038: 
epoch:  307
2022-07-08 12:15:59.336119: train loss : -0.8986
2022-07-08 12:16:04.574847: validation loss: -0.7635
2022-07-08 12:16:04.603286: Average global foreground Dice: [0.8202]
2022-07-08 12:16:04.623755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:16:05.449613: Suus1 maybe_update_lr lr: 0.004226
2022-07-08 12:16:05.486883: This epoch took 77.912650 s

2022-07-08 12:16:05.499868: 
epoch:  308
2022-07-08 12:17:17.443370: train loss : -0.9009
2022-07-08 12:17:22.527107: validation loss: -0.7499
2022-07-08 12:17:22.561244: Average global foreground Dice: [0.812]
2022-07-08 12:17:22.593881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:17:23.307930: Suus1 maybe_update_lr lr: 0.004206
2022-07-08 12:17:23.321091: This epoch took 77.799216 s

2022-07-08 12:17:23.328414: 
epoch:  309
2022-07-08 12:18:36.305591: train loss : -0.8980
2022-07-08 12:18:41.362880: validation loss: -0.7565
2022-07-08 12:18:41.379440: Average global foreground Dice: [0.8146]
2022-07-08 12:18:41.402689: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:18:42.142493: Suus1 maybe_update_lr lr: 0.004186
2022-07-08 12:18:42.164087: This epoch took 78.817003 s

2022-07-08 12:18:42.189862: 
epoch:  310
2022-07-08 12:19:53.380397: train loss : -0.8970
2022-07-08 12:19:58.051580: validation loss: -0.7463
2022-07-08 12:19:58.055654: Average global foreground Dice: [0.8084]
2022-07-08 12:19:58.072312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:19:58.623270: Suus1 maybe_update_lr lr: 0.004166
2022-07-08 12:19:58.644876: This epoch took 76.441007 s

2022-07-08 12:19:58.681870: 
epoch:  311
2022-07-08 12:21:09.949958: train loss : -0.8981
2022-07-08 12:21:15.387393: validation loss: -0.7654
2022-07-08 12:21:15.418943: Average global foreground Dice: [0.8229]
2022-07-08 12:21:15.432982: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:21:16.039340: Suus1 maybe_update_lr lr: 0.004146
2022-07-08 12:21:16.060916: This epoch took 77.361063 s

2022-07-08 12:21:16.074281: 
epoch:  312
2022-07-08 12:22:27.892947: train loss : -0.8945
2022-07-08 12:22:33.016914: validation loss: -0.7665
2022-07-08 12:22:33.047526: Average global foreground Dice: [0.8207]
2022-07-08 12:22:33.067163: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:22:33.744223: Suus1 maybe_update_lr lr: 0.004127
2022-07-08 12:22:33.752237: This epoch took 77.658024 s

2022-07-08 12:22:33.754660: 
epoch:  313
2022-07-08 12:23:45.371695: train loss : -0.8959
2022-07-08 12:23:50.414485: validation loss: -0.7549
2022-07-08 12:23:50.446501: Average global foreground Dice: [0.8104]
2022-07-08 12:23:50.466893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:23:51.274153: Suus1 maybe_update_lr lr: 0.004107
2022-07-08 12:23:51.285244: This epoch took 77.528352 s

2022-07-08 12:23:51.311882: 
epoch:  314
2022-07-08 12:25:03.878692: train loss : -0.8956
2022-07-08 12:25:09.418426: validation loss: -0.7510
2022-07-08 12:25:09.456245: Average global foreground Dice: [0.8062]
2022-07-08 12:25:09.469071: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:25:10.333775: Suus1 maybe_update_lr lr: 0.004087
2022-07-08 12:25:10.345649: This epoch took 79.011776 s

2022-07-08 12:25:10.365856: 
epoch:  315
2022-07-08 12:26:22.578941: train loss : -0.8972
2022-07-08 12:26:27.406850: validation loss: -0.7515
2022-07-08 12:26:27.438374: Average global foreground Dice: [0.8138]
2022-07-08 12:26:27.456883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:26:28.012218: Suus1 maybe_update_lr lr: 0.004067
2022-07-08 12:26:28.039926: This epoch took 77.641054 s

2022-07-08 12:26:28.060041: 
epoch:  316
2022-07-08 12:27:38.740807: train loss : -0.9012
2022-07-08 12:27:43.703758: validation loss: -0.7562
2022-07-08 12:27:43.741249: Average global foreground Dice: [0.8161]
2022-07-08 12:27:43.772233: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:27:44.352739: Suus1 maybe_update_lr lr: 0.004047
2022-07-08 12:27:44.382921: This epoch took 76.292056 s

2022-07-08 12:27:44.413867: 
epoch:  317
2022-07-08 12:28:56.610544: train loss : -0.9024
2022-07-08 12:29:01.555208: validation loss: -0.7680
2022-07-08 12:29:01.588342: Average global foreground Dice: [0.8244]
2022-07-08 12:29:01.605331: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:29:02.400349: Suus1 maybe_update_lr lr: 0.004027
2022-07-08 12:29:02.432906: This epoch took 78.005023 s

2022-07-08 12:29:02.502773: 
epoch:  318
2022-07-08 12:30:15.640470: train loss : -0.8977
2022-07-08 12:30:20.419472: validation loss: -0.7650
2022-07-08 12:30:20.443252: Average global foreground Dice: [0.8247]
2022-07-08 12:30:20.469295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:30:21.339413: Suus1 maybe_update_lr lr: 0.004007
2022-07-08 12:30:21.344489: This epoch took 78.826510 s

2022-07-08 12:30:21.379931: 
epoch:  319
2022-07-08 12:31:34.619940: train loss : -0.8965
2022-07-08 12:31:40.707538: validation loss: -0.7395
2022-07-08 12:31:40.730462: Average global foreground Dice: [0.8017]
2022-07-08 12:31:40.760244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:31:41.509463: Suus1 maybe_update_lr lr: 0.003987
2022-07-08 12:31:41.511805: This epoch took 80.109934 s

2022-07-08 12:31:41.537932: 
epoch:  320
2022-07-08 12:32:53.298242: train loss : -0.8956
2022-07-08 12:32:57.838715: validation loss: -0.7489
2022-07-08 12:32:57.874007: Average global foreground Dice: [0.8176]
2022-07-08 12:32:57.893847: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:32:58.472268: Suus1 maybe_update_lr lr: 0.003967
2022-07-08 12:32:58.494008: This epoch took 76.953820 s

2022-07-08 12:32:58.514078: 
epoch:  321
2022-07-08 12:34:10.284409: train loss : -0.9020
2022-07-08 12:34:15.638408: validation loss: -0.7500
2022-07-08 12:34:15.679380: Average global foreground Dice: [0.8165]
2022-07-08 12:34:15.699238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:34:16.387510: Suus1 maybe_update_lr lr: 0.003947
2022-07-08 12:34:16.391863: This epoch took 77.865005 s

2022-07-08 12:34:16.398293: 
epoch:  322
2022-07-08 12:35:26.848911: train loss : -0.9027
2022-07-08 12:35:32.390471: validation loss: -0.7515
2022-07-08 12:35:32.403464: Average global foreground Dice: [0.8101]
2022-07-08 12:35:32.423846: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:35:33.300238: Suus1 maybe_update_lr lr: 0.003927
2022-07-08 12:35:33.331476: This epoch took 76.931074 s

2022-07-08 12:35:33.338601: 
epoch:  323
2022-07-08 12:36:43.532172: train loss : -0.8986
2022-07-08 12:36:48.874133: validation loss: -0.7821
2022-07-08 12:36:48.891653: Average global foreground Dice: [0.8323]
2022-07-08 12:36:48.932010: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:36:49.595289: Suus1 maybe_update_lr lr: 0.003907
2022-07-08 12:36:49.637918: This epoch took 76.285958 s

2022-07-08 12:36:49.670867: 
epoch:  324
2022-07-08 12:38:01.797344: train loss : -0.8900
2022-07-08 12:38:07.401601: validation loss: -0.7492
2022-07-08 12:38:07.434860: Average global foreground Dice: [0.816]
2022-07-08 12:38:07.441073: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:38:08.346663: Suus1 maybe_update_lr lr: 0.003887
2022-07-08 12:38:08.368123: This epoch took 78.664237 s

2022-07-08 12:38:08.400853: 
epoch:  325
2022-07-08 12:39:19.356283: train loss : -0.8959
2022-07-08 12:39:24.552410: validation loss: -0.7611
2022-07-08 12:39:24.581447: Average global foreground Dice: [0.8221]
2022-07-08 12:39:24.617087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:39:25.241086: Suus1 maybe_update_lr lr: 0.003867
2022-07-08 12:39:25.245334: This epoch took 76.822480 s

2022-07-08 12:39:25.260921: 
epoch:  326
2022-07-08 12:40:37.397327: train loss : -0.9012
2022-07-08 12:40:42.383708: validation loss: -0.7564
2022-07-08 12:40:42.423325: Average global foreground Dice: [0.8142]
2022-07-08 12:40:42.455887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:40:43.107255: Suus1 maybe_update_lr lr: 0.003847
2022-07-08 12:40:43.121586: This epoch took 77.839710 s

2022-07-08 12:40:43.157368: 
epoch:  327
2022-07-08 12:41:55.392209: train loss : -0.9033
2022-07-08 12:42:00.925003: validation loss: -0.7655
2022-07-08 12:42:00.934833: Average global foreground Dice: [0.8296]
2022-07-08 12:42:00.946044: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:42:01.481245: Suus1 maybe_update_lr lr: 0.003827
2022-07-08 12:42:01.510046: This epoch took 78.332451 s

2022-07-08 12:42:01.528864: 
epoch:  328
2022-07-08 12:43:11.838762: train loss : -0.9055
2022-07-08 12:43:16.895904: validation loss: -0.7663
2022-07-08 12:43:16.900126: Average global foreground Dice: [0.829]
2022-07-08 12:43:16.915549: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:43:17.664236: Suus1 maybe_update_lr lr: 0.003807
2022-07-08 12:43:17.714059: This epoch took 76.158344 s

2022-07-08 12:43:17.736892: 
epoch:  329
2022-07-08 12:44:30.553464: train loss : -0.9050
2022-07-08 12:44:35.368382: validation loss: -0.7606
2022-07-08 12:44:35.386230: Average global foreground Dice: [0.8184]
2022-07-08 12:44:35.401518: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:44:36.226238: Suus1 maybe_update_lr lr: 0.003787
2022-07-08 12:44:36.237228: This epoch took 78.483069 s

2022-07-08 12:44:36.248806: 
epoch:  330
2022-07-08 12:45:48.601749: train loss : -0.9039
2022-07-08 12:45:53.593574: validation loss: -0.7675
2022-07-08 12:45:53.618736: Average global foreground Dice: [0.8232]
2022-07-08 12:45:53.644890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:45:54.276607: Suus1 maybe_update_lr lr: 0.003767
2022-07-08 12:45:54.306918: This epoch took 78.039127 s

2022-07-08 12:45:54.328957: 
epoch:  331
2022-07-08 12:47:05.208707: train loss : -0.9053
2022-07-08 12:47:10.573051: validation loss: -0.7608
2022-07-08 12:47:10.611291: Average global foreground Dice: [0.8212]
2022-07-08 12:47:10.650021: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:47:11.515382: Suus1 maybe_update_lr lr: 0.003747
2022-07-08 12:47:11.534925: This epoch took 77.185887 s

2022-07-08 12:47:11.556857: 
epoch:  332
2022-07-08 12:48:23.560568: train loss : -0.9028
2022-07-08 12:48:29.301016: validation loss: -0.7697
2022-07-08 12:48:29.328281: Average global foreground Dice: [0.8233]
2022-07-08 12:48:29.348564: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:48:29.902220: Suus1 maybe_update_lr lr: 0.003727
2022-07-08 12:48:29.923969: This epoch took 78.345096 s

2022-07-08 12:48:29.943992: 
epoch:  333
2022-07-08 12:49:40.660772: train loss : -0.9015
2022-07-08 12:49:45.613112: validation loss: -0.7633
2022-07-08 12:49:45.634571: Average global foreground Dice: [0.8237]
2022-07-08 12:49:45.636864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:49:46.209637: Suus1 maybe_update_lr lr: 0.003707
2022-07-08 12:49:46.231080: This epoch took 76.260201 s

2022-07-08 12:49:46.251192: 
epoch:  334
2022-07-08 12:50:58.170474: train loss : -0.9036
2022-07-08 12:51:02.878191: validation loss: -0.7716
2022-07-08 12:51:02.903551: Average global foreground Dice: [0.8261]
2022-07-08 12:51:02.949755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:51:03.685313: Suus1 maybe_update_lr lr: 0.003687
2022-07-08 12:51:03.695826: This epoch took 77.435535 s

2022-07-08 12:51:03.697888: 
epoch:  335
2022-07-08 12:52:15.255050: train loss : -0.9026
2022-07-08 12:52:20.458248: validation loss: -0.7451
2022-07-08 12:52:20.506251: Average global foreground Dice: [0.8089]
2022-07-08 12:52:20.545100: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:52:21.112532: Suus1 maybe_update_lr lr: 0.003667
2022-07-08 12:52:21.143166: This epoch took 77.443290 s

2022-07-08 12:52:21.154114: 
epoch:  336
2022-07-08 12:53:31.730046: train loss : -0.9040
2022-07-08 12:53:36.517288: validation loss: -0.7532
2022-07-08 12:53:36.556356: Average global foreground Dice: [0.8164]
2022-07-08 12:53:36.568882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:53:37.348253: Suus1 maybe_update_lr lr: 0.003647
2022-07-08 12:53:37.399396: This epoch took 76.243164 s

2022-07-08 12:53:37.413864: 
epoch:  337
2022-07-08 12:54:48.501892: train loss : -0.9073
2022-07-08 12:54:53.741708: validation loss: -0.7544
2022-07-08 12:54:53.798589: Average global foreground Dice: [0.8154]
2022-07-08 12:54:53.823882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:54:54.472316: Suus1 maybe_update_lr lr: 0.003627
2022-07-08 12:54:54.503269: This epoch took 77.067408 s

2022-07-08 12:54:54.535862: 
epoch:  338
2022-07-08 12:56:05.497086: train loss : -0.9087
2022-07-08 12:56:10.761931: validation loss: -0.7714
2022-07-08 12:56:10.789374: Average global foreground Dice: [0.8316]
2022-07-08 12:56:10.794591: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:56:11.471496: Suus1 maybe_update_lr lr: 0.003606
2022-07-08 12:56:11.499046: This epoch took 76.930173 s

2022-07-08 12:56:11.526198: 
epoch:  339
2022-07-08 12:57:23.160299: train loss : -0.9069
2022-07-08 12:57:29.069375: validation loss: -0.7511
2022-07-08 12:57:29.105217: Average global foreground Dice: [0.8143]
2022-07-08 12:57:29.127717: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:57:29.751290: Suus1 maybe_update_lr lr: 0.003586
2022-07-08 12:57:29.780468: This epoch took 78.247448 s

2022-07-08 12:57:29.800318: 
epoch:  340
2022-07-08 12:58:40.716724: train loss : -0.9079
2022-07-08 12:58:45.440759: validation loss: -0.7602
2022-07-08 12:58:45.462304: Average global foreground Dice: [0.8167]
2022-07-08 12:58:45.481884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:58:46.391417: Suus1 maybe_update_lr lr: 0.003566
2022-07-08 12:58:46.420923: This epoch took 76.614021 s

2022-07-08 12:58:46.438815: 
epoch:  341
2022-07-08 12:59:56.652015: train loss : -0.9091
2022-07-08 13:00:02.035397: validation loss: -0.7654
2022-07-08 13:00:02.051108: Average global foreground Dice: [0.8197]
2022-07-08 13:00:02.091954: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:00:02.849462: Suus1 maybe_update_lr lr: 0.003546
2022-07-08 13:00:02.863760: This epoch took 76.403883 s

2022-07-08 13:00:02.868811: 
epoch:  342
2022-07-08 13:01:14.740351: train loss : -0.9084
2022-07-08 13:01:19.904670: validation loss: -0.7552
2022-07-08 13:01:19.925275: Average global foreground Dice: [0.8154]
2022-07-08 13:01:19.951908: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:01:20.639465: Suus1 maybe_update_lr lr: 0.003526
2022-07-08 13:01:20.661010: This epoch took 77.769657 s

2022-07-08 13:01:20.687391: 
epoch:  343
2022-07-08 13:02:32.100566: train loss : -0.9093
2022-07-08 13:02:36.892137: validation loss: -0.7631
2022-07-08 13:02:36.920384: Average global foreground Dice: [0.8246]
2022-07-08 13:02:36.944354: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:02:37.643331: Suus1 maybe_update_lr lr: 0.003505
2022-07-08 13:02:37.666901: This epoch took 76.956018 s

2022-07-08 13:02:37.688854: 
epoch:  344
2022-07-08 13:03:49.138819: train loss : -0.9101
2022-07-08 13:03:54.732291: validation loss: -0.7659
2022-07-08 13:03:54.740236: Average global foreground Dice: [0.8228]
2022-07-08 13:03:54.754395: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:03:55.557477: Suus1 maybe_update_lr lr: 0.003485
2022-07-08 13:03:55.590925: This epoch took 77.869059 s

2022-07-08 13:03:55.606674: 
epoch:  345
2022-07-08 13:05:06.657057: train loss : -0.9103
2022-07-08 13:05:11.439198: validation loss: -0.7790
2022-07-08 13:05:11.482682: Average global foreground Dice: [0.8343]
2022-07-08 13:05:11.500006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:05:12.132604: Suus1 maybe_update_lr lr: 0.003465
2022-07-08 13:05:12.157928: This epoch took 76.548997 s

2022-07-08 13:05:12.187051: 
epoch:  346
2022-07-08 13:06:23.115864: train loss : -0.9117
2022-07-08 13:06:27.920648: validation loss: -0.7748
2022-07-08 13:06:27.951215: Average global foreground Dice: [0.8297]
2022-07-08 13:06:27.968359: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:06:28.703349: Suus1 maybe_update_lr lr: 0.003445
2022-07-08 13:06:28.737230: This epoch took 76.518680 s

2022-07-08 13:06:28.757184: 
epoch:  347
2022-07-08 13:07:41.375804: train loss : -0.9134
2022-07-08 13:07:46.333589: validation loss: -0.7770
2022-07-08 13:07:46.364254: Average global foreground Dice: [0.8305]
2022-07-08 13:07:46.376890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:07:47.010359: Suus1 maybe_update_lr lr: 0.003424
2022-07-08 13:07:47.031923: saving best epoch checkpoint...
2022-07-08 13:07:47.165672: saving checkpoint...
2022-07-08 13:07:48.702893: done, saving took 1.64 seconds
2022-07-08 13:07:48.719357: This epoch took 79.942064 s

2022-07-08 13:07:48.721768: 
epoch:  348
2022-07-08 13:08:58.928274: train loss : -0.9105
2022-07-08 13:09:03.656852: validation loss: -0.7535
2022-07-08 13:09:03.688315: Average global foreground Dice: [0.8168]
2022-07-08 13:09:03.702935: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:09:04.389855: Suus1 maybe_update_lr lr: 0.003404
2022-07-08 13:09:04.411379: This epoch took 75.687624 s

2022-07-08 13:09:04.426503: 
epoch:  349
2022-07-08 13:10:14.891765: train loss : -0.9107
2022-07-08 13:10:20.005772: validation loss: -0.7648
2022-07-08 13:10:20.037231: Average global foreground Dice: [0.8258]
2022-07-08 13:10:20.051862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:10:20.921889: Suus1 maybe_update_lr lr: 0.003384
2022-07-08 13:10:20.940867: saving scheduled checkpoint file...
2022-07-08 13:10:21.085186: saving checkpoint...
2022-07-08 13:10:22.650941: done, saving took 1.69 seconds
2022-07-08 13:10:22.668151: done
2022-07-08 13:10:22.670197: This epoch took 78.222551 s

2022-07-08 13:10:22.672167: 
epoch:  350
2022-07-08 13:11:33.233426: train loss : -0.9107
2022-07-08 13:11:38.018304: validation loss: -0.7706
2022-07-08 13:11:38.053307: Average global foreground Dice: [0.8297]
2022-07-08 13:11:38.085891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:11:38.812573: Suus1 maybe_update_lr lr: 0.003364
2022-07-08 13:11:38.857889: saving best epoch checkpoint...
2022-07-08 13:11:39.011971: saving checkpoint...
2022-07-08 13:11:40.548197: done, saving took 1.66 seconds
2022-07-08 13:11:40.563408: This epoch took 77.889252 s

2022-07-08 13:11:40.565476: 
epoch:  351
2022-07-08 13:12:51.962171: train loss : -0.9110
2022-07-08 13:12:56.962874: validation loss: -0.7631
2022-07-08 13:12:56.966435: Average global foreground Dice: [0.8211]
2022-07-08 13:12:56.968569: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:12:57.547515: Suus1 maybe_update_lr lr: 0.003343
2022-07-08 13:12:57.575901: This epoch took 77.008580 s

2022-07-08 13:12:57.604867: 
epoch:  352
2022-07-08 13:14:10.064374: train loss : -0.9107
2022-07-08 13:14:15.677673: validation loss: -0.7727
2022-07-08 13:14:15.710302: Average global foreground Dice: [0.8258]
2022-07-08 13:14:15.735624: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:14:16.419327: Suus1 maybe_update_lr lr: 0.003323
2022-07-08 13:14:16.438961: saving best epoch checkpoint...
2022-07-08 13:14:16.534392: saving checkpoint...
2022-07-08 13:14:18.456822: done, saving took 1.99 seconds
2022-07-08 13:14:18.472861: This epoch took 80.838698 s

2022-07-08 13:14:18.474983: 
epoch:  353
2022-07-08 13:15:28.910890: train loss : -0.9110
2022-07-08 13:15:34.183504: validation loss: -0.7579
2022-07-08 13:15:34.229384: Average global foreground Dice: [0.817]
2022-07-08 13:15:34.242486: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:15:35.218857: Suus1 maybe_update_lr lr: 0.003303
2022-07-08 13:15:35.224213: This epoch took 76.747202 s

2022-07-08 13:15:35.255197: 
epoch:  354
2022-07-08 13:16:48.317313: train loss : -0.9111
2022-07-08 13:16:53.493165: validation loss: -0.7642
2022-07-08 13:16:53.509531: Average global foreground Dice: [0.8222]
2022-07-08 13:16:53.524444: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:16:54.207118: Suus1 maybe_update_lr lr: 0.003282
2022-07-08 13:16:54.228818: This epoch took 78.961880 s

2022-07-08 13:16:54.238875: 
epoch:  355
2022-07-08 13:18:05.777340: train loss : -0.9125
2022-07-08 13:18:10.599724: validation loss: -0.7583
2022-07-08 13:18:10.635634: Average global foreground Dice: [0.8191]
2022-07-08 13:18:10.655246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:18:11.336635: Suus1 maybe_update_lr lr: 0.003262
2022-07-08 13:18:11.356901: This epoch took 77.101322 s

2022-07-08 13:18:11.368397: 
epoch:  356
2022-07-08 13:19:23.925472: train loss : -0.9116
2022-07-08 13:19:29.425206: validation loss: -0.7737
2022-07-08 13:19:29.451050: Average global foreground Dice: [0.8299]
2022-07-08 13:19:29.470854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:19:30.151076: Suus1 maybe_update_lr lr: 0.003241
2022-07-08 13:19:30.180223: This epoch took 78.795239 s

2022-07-08 13:19:30.199861: 
epoch:  357
2022-07-08 13:20:42.970371: train loss : -0.9097
2022-07-08 13:20:48.230058: validation loss: -0.7641
2022-07-08 13:20:48.247052: Average global foreground Dice: [0.8246]
2022-07-08 13:20:48.268044: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:20:49.073932: Suus1 maybe_update_lr lr: 0.003221
2022-07-08 13:20:49.106277: This epoch took 78.889397 s

2022-07-08 13:20:49.120853: 
epoch:  358
2022-07-08 13:22:01.525758: train loss : -0.9094
2022-07-08 13:22:06.456887: validation loss: -0.7614
2022-07-08 13:22:06.498517: Average global foreground Dice: [0.8232]
2022-07-08 13:22:06.519733: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:22:07.149729: Suus1 maybe_update_lr lr: 0.003201
2022-07-08 13:22:07.170908: This epoch took 78.015035 s

2022-07-08 13:22:07.199867: 
epoch:  359
2022-07-08 13:23:17.897434: train loss : -0.9106
2022-07-08 13:23:23.405169: validation loss: -0.7537
2022-07-08 13:23:23.448467: Average global foreground Dice: [0.8153]
2022-07-08 13:23:23.474866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:23:24.408638: Suus1 maybe_update_lr lr: 0.00318
2022-07-08 13:23:24.446909: This epoch took 77.217248 s

2022-07-08 13:23:24.468863: 
epoch:  360
2022-07-08 13:24:37.687675: train loss : -0.9120
2022-07-08 13:24:43.115141: validation loss: -0.7766
2022-07-08 13:24:43.157241: Average global foreground Dice: [0.8295]
2022-07-08 13:24:43.189902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:24:44.050467: Suus1 maybe_update_lr lr: 0.00316
2022-07-08 13:24:44.071946: This epoch took 79.578080 s

2022-07-08 13:24:44.091995: 
epoch:  361
2022-07-08 13:25:56.562643: train loss : -0.9098
2022-07-08 13:26:01.716704: validation loss: -0.7618
2022-07-08 13:26:01.734438: Average global foreground Dice: [0.8175]
2022-07-08 13:26:01.755869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:26:02.631472: Suus1 maybe_update_lr lr: 0.003139
2022-07-08 13:26:02.653915: This epoch took 78.541798 s

2022-07-08 13:26:02.671194: 
epoch:  362
2022-07-08 13:27:13.856782: train loss : -0.9103
2022-07-08 13:27:19.320012: validation loss: -0.7556
2022-07-08 13:27:19.345515: Average global foreground Dice: [0.8191]
2022-07-08 13:27:19.378312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:27:20.012949: Suus1 maybe_update_lr lr: 0.003119
2022-07-08 13:27:20.043915: This epoch took 77.352629 s

2022-07-08 13:27:20.058205: 
epoch:  363
2022-07-08 13:28:31.801117: train loss : -0.9125
2022-07-08 13:28:36.617904: validation loss: -0.7739
2022-07-08 13:28:36.647259: Average global foreground Dice: [0.8313]
2022-07-08 13:28:36.668951: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:28:37.422313: Suus1 maybe_update_lr lr: 0.003098
2022-07-08 13:28:37.433670: This epoch took 77.350617 s

2022-07-08 13:28:37.451692: 
epoch:  364
2022-07-08 13:29:49.186290: train loss : -0.9110
2022-07-08 13:29:54.324090: validation loss: -0.7600
2022-07-08 13:29:54.360394: Average global foreground Dice: [0.8174]
2022-07-08 13:29:54.374038: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:29:55.040365: Suus1 maybe_update_lr lr: 0.003078
2022-07-08 13:29:55.057284: This epoch took 77.603307 s

2022-07-08 13:29:55.076679: 
epoch:  365
2022-07-08 13:31:07.333802: train loss : -0.9125
2022-07-08 13:31:12.397282: validation loss: -0.7608
2022-07-08 13:31:12.427167: Average global foreground Dice: [0.8185]
2022-07-08 13:31:12.446865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:31:13.042809: Suus1 maybe_update_lr lr: 0.003057
2022-07-08 13:31:13.064119: This epoch took 77.959440 s

2022-07-08 13:31:13.092876: 
epoch:  366
2022-07-08 13:32:24.322110: train loss : -0.9116
2022-07-08 13:32:29.365040: validation loss: -0.7744
2022-07-08 13:32:29.417253: Average global foreground Dice: [0.8275]
2022-07-08 13:32:29.436887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:32:30.068002: Suus1 maybe_update_lr lr: 0.003037
2022-07-08 13:32:30.095926: This epoch took 76.982611 s

2022-07-08 13:32:30.110603: 
epoch:  367
2022-07-08 13:33:42.929056: train loss : -0.9139
2022-07-08 13:33:47.840091: validation loss: -0.7712
2022-07-08 13:33:47.878388: Average global foreground Dice: [0.8283]
2022-07-08 13:33:47.899894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:33:48.503330: Suus1 maybe_update_lr lr: 0.003016
2022-07-08 13:33:48.524981: This epoch took 78.397440 s

2022-07-08 13:33:48.552838: 
epoch:  368
2022-07-08 13:34:59.194965: train loss : -0.9148
2022-07-08 13:35:04.269213: validation loss: -0.7615
2022-07-08 13:35:04.313288: Average global foreground Dice: [0.8188]
2022-07-08 13:35:04.339874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:35:05.039323: Suus1 maybe_update_lr lr: 0.002996
2022-07-08 13:35:05.071896: This epoch took 76.498586 s

2022-07-08 13:35:05.093860: 
epoch:  369
2022-07-08 13:36:16.476097: train loss : -0.9100
2022-07-08 13:36:21.242315: validation loss: -0.7828
2022-07-08 13:36:21.276275: Average global foreground Dice: [0.8388]
2022-07-08 13:36:21.300538: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:36:21.961171: Suus1 maybe_update_lr lr: 0.002975
2022-07-08 13:36:21.972942: saving best epoch checkpoint...
2022-07-08 13:36:22.077424: saving checkpoint...
2022-07-08 13:36:23.769934: done, saving took 1.77 seconds
2022-07-08 13:36:23.786866: This epoch took 78.665559 s

2022-07-08 13:36:23.789203: 
epoch:  370
2022-07-08 13:37:34.489651: train loss : -0.9137
2022-07-08 13:37:39.974611: validation loss: -0.7618
2022-07-08 13:37:39.983522: Average global foreground Dice: [0.8219]
2022-07-08 13:37:40.011085: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:37:40.887210: Suus1 maybe_update_lr lr: 0.002954
2022-07-08 13:37:40.917203: This epoch took 77.125844 s

2022-07-08 13:37:40.945860: 
epoch:  371
2022-07-08 13:38:53.378945: train loss : -0.9111
2022-07-08 13:38:58.364467: validation loss: -0.7508
2022-07-08 13:38:58.388446: Average global foreground Dice: [0.8103]
2022-07-08 13:38:58.406653: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:38:59.164146: Suus1 maybe_update_lr lr: 0.002934
2022-07-08 13:38:59.182293: This epoch took 78.224630 s

2022-07-08 13:38:59.200857: 
epoch:  372
2022-07-08 13:40:10.683165: train loss : -0.9135
2022-07-08 13:40:15.666176: validation loss: -0.7507
2022-07-08 13:40:15.707220: Average global foreground Dice: [0.8138]
2022-07-08 13:40:15.724635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:40:16.635967: Suus1 maybe_update_lr lr: 0.002913
2022-07-08 13:40:16.653618: This epoch took 77.424749 s

2022-07-08 13:40:16.694869: 
epoch:  373
2022-07-08 13:41:27.983761: train loss : -0.9158
2022-07-08 13:41:33.295875: validation loss: -0.7652
2022-07-08 13:41:33.329681: Average global foreground Dice: [0.8215]
2022-07-08 13:41:33.359856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:41:33.948306: Suus1 maybe_update_lr lr: 0.002892
2022-07-08 13:41:33.967393: This epoch took 77.254517 s

2022-07-08 13:41:33.982676: 
epoch:  374
2022-07-08 13:42:46.753067: train loss : -0.9111
2022-07-08 13:42:53.036107: validation loss: -0.7608
2022-07-08 13:42:53.069849: Average global foreground Dice: [0.8211]
2022-07-08 13:42:53.099422: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:42:53.927675: Suus1 maybe_update_lr lr: 0.002872
2022-07-08 13:42:53.932631: This epoch took 79.940047 s

2022-07-08 13:42:53.964108: 
epoch:  375
2022-07-08 13:44:05.814824: train loss : -0.9128
2022-07-08 13:44:11.198960: validation loss: -0.7743
2022-07-08 13:44:11.235050: Average global foreground Dice: [0.8311]
2022-07-08 13:44:11.263874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:44:12.037104: Suus1 maybe_update_lr lr: 0.002851
2022-07-08 13:44:12.067924: This epoch took 78.072294 s

2022-07-08 13:44:12.089594: 
epoch:  376
2022-07-08 13:45:22.894242: train loss : -0.9150
2022-07-08 13:45:28.552670: validation loss: -0.7631
2022-07-08 13:45:28.588579: Average global foreground Dice: [0.8197]
2022-07-08 13:45:28.594809: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:45:29.412659: Suus1 maybe_update_lr lr: 0.00283
2022-07-08 13:45:29.424871: This epoch took 77.308960 s

2022-07-08 13:45:29.444857: 
epoch:  377
2022-07-08 13:46:40.141467: train loss : -0.9146
2022-07-08 13:46:45.344638: validation loss: -0.7686
2022-07-08 13:46:45.365358: Average global foreground Dice: [0.8285]
2022-07-08 13:46:45.388958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:46:46.232946: Suus1 maybe_update_lr lr: 0.00281
2022-07-08 13:46:46.246946: This epoch took 76.783905 s

2022-07-08 13:46:46.256316: 
epoch:  378
2022-07-08 13:47:56.684903: train loss : -0.9144
2022-07-08 13:48:01.830731: validation loss: -0.7718
2022-07-08 13:48:01.859286: Average global foreground Dice: [0.826]
2022-07-08 13:48:01.878993: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:48:02.531126: Suus1 maybe_update_lr lr: 0.002789
2022-07-08 13:48:02.555709: This epoch took 76.279207 s

2022-07-08 13:48:02.587993: 
epoch:  379
2022-07-08 13:49:14.137466: train loss : -0.9174
2022-07-08 13:49:19.048012: validation loss: -0.7718
2022-07-08 13:49:19.080405: Average global foreground Dice: [0.828]
2022-07-08 13:49:19.083002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:49:19.785206: Suus1 maybe_update_lr lr: 0.002768
2022-07-08 13:49:19.795712: This epoch took 77.190316 s

2022-07-08 13:49:19.816850: 
epoch:  380
2022-07-08 13:50:30.847138: train loss : -0.9181
2022-07-08 13:50:35.408404: validation loss: -0.7605
2022-07-08 13:50:35.439259: Average global foreground Dice: [0.8189]
2022-07-08 13:50:35.487886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:50:36.204855: Suus1 maybe_update_lr lr: 0.002747
2022-07-08 13:50:36.207520: This epoch took 76.362659 s

2022-07-08 13:50:36.242427: 
epoch:  381
2022-07-08 13:51:47.188287: train loss : -0.9158
2022-07-08 13:51:52.505765: validation loss: -0.7633
2022-07-08 13:51:52.528200: Average global foreground Dice: [0.8227]
2022-07-08 13:51:52.547914: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:51:53.208468: Suus1 maybe_update_lr lr: 0.002727
2022-07-08 13:51:53.227925: This epoch took 76.964504 s

2022-07-08 13:51:53.242865: 
epoch:  382
2022-07-08 13:53:04.620632: train loss : -0.9137
2022-07-08 13:53:09.437465: validation loss: -0.7721
2022-07-08 13:53:09.477234: Average global foreground Dice: [0.8299]
2022-07-08 13:53:09.489880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:53:10.212311: Suus1 maybe_update_lr lr: 0.002706
2022-07-08 13:53:10.244912: This epoch took 76.999347 s

2022-07-08 13:53:10.276872: 
epoch:  383
2022-07-08 13:54:21.723095: train loss : -0.9144
2022-07-08 13:54:26.463140: validation loss: -0.7597
2022-07-08 13:54:26.481881: Average global foreground Dice: [0.8226]
2022-07-08 13:54:26.514888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:54:27.295420: Suus1 maybe_update_lr lr: 0.002685
2022-07-08 13:54:27.317912: This epoch took 77.008030 s

2022-07-08 13:54:27.336869: 
epoch:  384
2022-07-08 13:55:38.296979: train loss : -0.9149
2022-07-08 13:55:43.498865: validation loss: -0.7734
2022-07-08 13:55:43.545224: Average global foreground Dice: [0.8296]
2022-07-08 13:55:43.577867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:55:44.306278: Suus1 maybe_update_lr lr: 0.002664
2022-07-08 13:55:44.332754: This epoch took 76.961262 s

2022-07-08 13:55:44.334847: 
epoch:  385
2022-07-08 13:56:56.832642: train loss : -0.9152
2022-07-08 13:57:02.034799: validation loss: -0.7758
2022-07-08 13:57:02.075676: Average global foreground Dice: [0.8292]
2022-07-08 13:57:02.105862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:57:02.924963: Suus1 maybe_update_lr lr: 0.002643
2022-07-08 13:57:02.939626: saving best epoch checkpoint...
2022-07-08 13:57:03.075403: saving checkpoint...
2022-07-08 13:57:04.614471: done, saving took 1.62 seconds
2022-07-08 13:57:04.630626: This epoch took 80.293647 s

2022-07-08 13:57:04.632744: 
epoch:  386
2022-07-08 13:58:14.452213: train loss : -0.9163
2022-07-08 13:58:19.524575: validation loss: -0.7590
2022-07-08 13:58:19.558244: Average global foreground Dice: [0.8208]
2022-07-08 13:58:19.579874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:58:20.402727: Suus1 maybe_update_lr lr: 0.002622
2022-07-08 13:58:20.431937: This epoch took 75.797280 s

2022-07-08 13:58:20.458788: 
epoch:  387
2022-07-08 13:59:31.625384: train loss : -0.9193
2022-07-08 13:59:36.506784: validation loss: -0.7531
2022-07-08 13:59:36.532250: Average global foreground Dice: [0.8145]
2022-07-08 13:59:36.561523: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:59:37.317603: Suus1 maybe_update_lr lr: 0.002601
2022-07-08 13:59:37.370907: This epoch took 76.904790 s

2022-07-08 13:59:37.376342: 
epoch:  388
2022-07-08 14:00:49.960343: train loss : -0.9145
2022-07-08 14:00:55.013354: validation loss: -0.7542
2022-07-08 14:00:55.046206: Average global foreground Dice: [0.8123]
2022-07-08 14:00:55.053524: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:00:55.861196: Suus1 maybe_update_lr lr: 0.002581
2022-07-08 14:00:55.880954: This epoch took 78.485499 s

2022-07-08 14:00:55.902848: 
epoch:  389
2022-07-08 14:02:08.237943: train loss : -0.9183
2022-07-08 14:02:13.139912: validation loss: -0.7491
2022-07-08 14:02:13.190395: Average global foreground Dice: [0.816]
2022-07-08 14:02:13.211876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:02:13.939560: Suus1 maybe_update_lr lr: 0.00256
2022-07-08 14:02:13.963017: This epoch took 78.039900 s

2022-07-08 14:02:13.991854: 
epoch:  390
2022-07-08 14:03:26.130885: train loss : -0.9167
2022-07-08 14:03:31.243466: validation loss: -0.7692
2022-07-08 14:03:31.274408: Average global foreground Dice: [0.8323]
2022-07-08 14:03:31.289430: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:03:32.135821: Suus1 maybe_update_lr lr: 0.002539
2022-07-08 14:03:32.154416: This epoch took 78.146355 s

2022-07-08 14:03:32.182866: 
epoch:  391
2022-07-08 14:04:43.170542: train loss : -0.9188
2022-07-08 14:04:48.405146: validation loss: -0.7448
2022-07-08 14:04:48.430273: Average global foreground Dice: [0.8161]
2022-07-08 14:04:48.440773: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:04:49.212301: Suus1 maybe_update_lr lr: 0.002518
2022-07-08 14:04:49.231878: This epoch took 77.033269 s

2022-07-08 14:04:49.264857: 
epoch:  392
2022-07-08 14:06:00.463186: train loss : -0.9169
2022-07-08 14:06:05.506323: validation loss: -0.7612
2022-07-08 14:06:05.537409: Average global foreground Dice: [0.824]
2022-07-08 14:06:05.561208: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:06:06.305020: Suus1 maybe_update_lr lr: 0.002497
2022-07-08 14:06:06.338086: This epoch took 77.050598 s

2022-07-08 14:06:06.352866: 
epoch:  393
2022-07-08 14:07:18.054042: train loss : -0.9177
2022-07-08 14:07:23.594320: validation loss: -0.7691
2022-07-08 14:07:23.622232: Average global foreground Dice: [0.826]
2022-07-08 14:07:23.640955: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:07:24.556496: Suus1 maybe_update_lr lr: 0.002476
2022-07-08 14:07:24.575318: This epoch took 78.213065 s

2022-07-08 14:07:24.617175: 
epoch:  394
2022-07-08 14:08:36.769395: train loss : -0.9174
2022-07-08 14:08:42.684213: validation loss: -0.7792
2022-07-08 14:08:42.715289: Average global foreground Dice: [0.8315]
2022-07-08 14:08:42.740973: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:08:43.433428: Suus1 maybe_update_lr lr: 0.002455
2022-07-08 14:08:43.460931: This epoch took 78.819293 s

2022-07-08 14:08:43.493879: 
epoch:  395
2022-07-08 14:09:55.154119: train loss : -0.9178
2022-07-08 14:10:00.246419: validation loss: -0.7607
2022-07-08 14:10:00.279231: Average global foreground Dice: [0.8224]
2022-07-08 14:10:00.311857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:10:01.034790: Suus1 maybe_update_lr lr: 0.002434
2022-07-08 14:10:01.047515: This epoch took 77.520648 s

2022-07-08 14:10:01.065347: 
epoch:  396
2022-07-08 14:11:13.403093: train loss : -0.9160
2022-07-08 14:11:18.199063: validation loss: -0.7446
2022-07-08 14:11:18.226363: Average global foreground Dice: [0.8065]
2022-07-08 14:11:18.260885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:11:19.200318: Suus1 maybe_update_lr lr: 0.002413
2022-07-08 14:11:19.232893: This epoch took 78.155241 s

2022-07-08 14:11:19.250848: 
epoch:  397
2022-07-08 14:12:31.193074: train loss : -0.9180
2022-07-08 14:12:36.459993: validation loss: -0.7705
2022-07-08 14:12:36.464012: Average global foreground Dice: [0.8267]
2022-07-08 14:12:36.511357: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:12:37.217970: Suus1 maybe_update_lr lr: 0.002391
2022-07-08 14:12:37.249888: This epoch took 77.989604 s

2022-07-08 14:12:37.268857: 
epoch:  398
2022-07-08 14:13:49.361580: train loss : -0.9201
2022-07-08 14:13:54.130566: validation loss: -0.7720
2022-07-08 14:13:54.146970: Average global foreground Dice: [0.8275]
2022-07-08 14:13:54.190886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:13:54.891255: Suus1 maybe_update_lr lr: 0.00237
2022-07-08 14:13:54.931949: This epoch took 77.652522 s

2022-07-08 14:13:54.953865: 
epoch:  399
2022-07-08 14:15:07.364528: train loss : -0.9202
2022-07-08 14:15:12.124145: validation loss: -0.7633
2022-07-08 14:15:12.135420: Average global foreground Dice: [0.8221]
2022-07-08 14:15:12.164240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:15:12.853293: Suus1 maybe_update_lr lr: 0.002349
2022-07-08 14:15:12.865876: saving scheduled checkpoint file...
2022-07-08 14:15:13.029787: saving checkpoint...
2022-07-08 14:15:14.624481: done, saving took 1.74 seconds
2022-07-08 14:15:14.646973: done
2022-07-08 14:15:14.649080: This epoch took 79.672124 s

2022-07-08 14:15:14.651053: 
epoch:  400
2022-07-08 14:16:24.831720: train loss : -0.9196
2022-07-08 14:16:29.550099: validation loss: -0.7736
2022-07-08 14:16:29.588482: Average global foreground Dice: [0.8324]
2022-07-08 14:16:29.604137: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:16:30.452913: Suus1 maybe_update_lr lr: 0.002328
2022-07-08 14:16:30.473919: This epoch took 75.820849 s

2022-07-08 14:16:30.495873: 
epoch:  401
2022-07-08 14:17:41.631599: train loss : -0.9185
2022-07-08 14:17:47.100370: validation loss: -0.7610
2022-07-08 14:17:47.131459: Average global foreground Dice: [0.8227]
2022-07-08 14:17:47.151140: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:17:47.789733: Suus1 maybe_update_lr lr: 0.002307
2022-07-08 14:17:47.808912: This epoch took 77.291047 s

2022-07-08 14:17:47.843856: 
epoch:  402
2022-07-08 14:18:58.346827: train loss : -0.9212
2022-07-08 14:19:03.330662: validation loss: -0.7692
2022-07-08 14:19:03.362243: Average global foreground Dice: [0.8267]
2022-07-08 14:19:03.389194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:19:04.202647: Suus1 maybe_update_lr lr: 0.002286
2022-07-08 14:19:04.221908: This epoch took 76.357799 s

2022-07-08 14:19:04.243861: 
epoch:  403
2022-07-08 14:20:16.336957: train loss : -0.9170
2022-07-08 14:20:21.559254: validation loss: -0.7772
2022-07-08 14:20:21.614239: Average global foreground Dice: [0.8291]
2022-07-08 14:20:21.634636: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:20:22.200597: Suus1 maybe_update_lr lr: 0.002264
2022-07-08 14:20:22.219904: This epoch took 77.950035 s

2022-07-08 14:20:22.238544: 
epoch:  404
2022-07-08 14:21:33.727087: train loss : -0.9195
2022-07-08 14:21:38.698243: validation loss: -0.7770
2022-07-08 14:21:38.729293: Average global foreground Dice: [0.8284]
2022-07-08 14:21:38.741888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:21:39.523636: Suus1 maybe_update_lr lr: 0.002243
2022-07-08 14:21:39.547917: This epoch took 77.301696 s

2022-07-08 14:21:39.569868: 
epoch:  405
2022-07-08 14:22:49.926705: train loss : -0.9211
2022-07-08 14:22:54.965858: validation loss: -0.7657
2022-07-08 14:22:54.973992: Average global foreground Dice: [0.8229]
2022-07-08 14:22:54.992861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:22:55.839123: Suus1 maybe_update_lr lr: 0.002222
2022-07-08 14:22:55.869938: This epoch took 76.278969 s

2022-07-08 14:22:55.902858: 
epoch:  406
2022-07-08 14:24:07.577960: train loss : -0.9192
2022-07-08 14:24:12.329089: validation loss: -0.7701
2022-07-08 14:24:12.355292: Average global foreground Dice: [0.8284]
2022-07-08 14:24:12.380414: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:24:13.113958: Suus1 maybe_update_lr lr: 0.002201
2022-07-08 14:24:13.156971: saving best epoch checkpoint...
2022-07-08 14:24:13.326210: saving checkpoint...
2022-07-08 14:24:14.833764: done, saving took 1.66 seconds
2022-07-08 14:24:14.849641: This epoch took 78.924781 s

2022-07-08 14:24:14.851698: 
epoch:  407
2022-07-08 14:25:25.602528: train loss : -0.9202
2022-07-08 14:25:30.815859: validation loss: -0.7693
2022-07-08 14:25:30.835313: Average global foreground Dice: [0.8298]
2022-07-08 14:25:30.837896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:25:31.624036: Suus1 maybe_update_lr lr: 0.002179
2022-07-08 14:25:31.654007: saving best epoch checkpoint...
2022-07-08 14:25:31.748560: saving checkpoint...
2022-07-08 14:25:33.245202: done, saving took 1.59 seconds
2022-07-08 14:25:33.259951: This epoch took 78.406382 s

2022-07-08 14:25:33.262116: 
epoch:  408
2022-07-08 14:26:42.653976: train loss : -0.9226
2022-07-08 14:26:48.307647: validation loss: -0.7511
2022-07-08 14:26:48.334332: Average global foreground Dice: [0.8111]
2022-07-08 14:26:48.361897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:26:48.939662: Suus1 maybe_update_lr lr: 0.002158
2022-07-08 14:26:48.960907: This epoch took 75.696671 s

2022-07-08 14:26:48.963238: 
epoch:  409
2022-07-08 14:27:59.653517: train loss : -0.9195
2022-07-08 14:28:04.696339: validation loss: -0.7643
2022-07-08 14:28:04.715399: Average global foreground Dice: [0.8199]
2022-07-08 14:28:04.735009: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:28:05.491480: Suus1 maybe_update_lr lr: 0.002137
2022-07-08 14:28:05.516628: This epoch took 76.523019 s

2022-07-08 14:28:05.536970: 
epoch:  410
2022-07-08 14:29:16.801668: train loss : -0.9224
2022-07-08 14:29:21.963311: validation loss: -0.7630
2022-07-08 14:29:21.994325: Average global foreground Dice: [0.8256]
2022-07-08 14:29:22.015368: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:29:22.696004: Suus1 maybe_update_lr lr: 0.002115
2022-07-08 14:29:22.736458: This epoch took 77.168597 s

2022-07-08 14:29:22.756937: 
epoch:  411
2022-07-08 14:30:34.513636: train loss : -0.9208
2022-07-08 14:30:39.391562: validation loss: -0.7480
2022-07-08 14:30:39.422664: Average global foreground Dice: [0.811]
2022-07-08 14:30:39.442518: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:30:40.037014: Suus1 maybe_update_lr lr: 0.002094
2022-07-08 14:30:40.067971: This epoch took 77.304583 s

2022-07-08 14:30:40.089862: 
epoch:  412
2022-07-08 14:31:51.468478: train loss : -0.9222
2022-07-08 14:31:56.797848: validation loss: -0.7525
2022-07-08 14:31:56.834638: Average global foreground Dice: [0.8202]
2022-07-08 14:31:56.857126: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:31:57.477419: Suus1 maybe_update_lr lr: 0.002072
2022-07-08 14:31:57.496903: This epoch took 77.385032 s

2022-07-08 14:31:57.518867: 
epoch:  413
2022-07-08 14:33:08.584895: train loss : -0.9193
2022-07-08 14:33:13.904576: validation loss: -0.7632
2022-07-08 14:33:13.908778: Average global foreground Dice: [0.8202]
2022-07-08 14:33:13.921871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:33:14.599731: Suus1 maybe_update_lr lr: 0.002051
2022-07-08 14:33:14.629905: This epoch took 77.097937 s

2022-07-08 14:33:14.661063: 
epoch:  414
2022-07-08 14:34:25.492965: train loss : -0.9216
2022-07-08 14:34:30.134738: validation loss: -0.7760
2022-07-08 14:34:30.152547: Average global foreground Dice: [0.836]
2022-07-08 14:34:30.182883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:34:30.943077: Suus1 maybe_update_lr lr: 0.00203
2022-07-08 14:34:30.950520: This epoch took 76.269656 s

2022-07-08 14:34:30.974664: 
epoch:  415
2022-07-08 14:35:41.697282: train loss : -0.9203
2022-07-08 14:35:46.541997: validation loss: -0.7647
2022-07-08 14:35:46.573048: Average global foreground Dice: [0.8241]
2022-07-08 14:35:46.596723: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:35:47.456135: Suus1 maybe_update_lr lr: 0.002008
2022-07-08 14:35:47.495894: This epoch took 76.501278 s

2022-07-08 14:35:47.519861: 
epoch:  416
2022-07-08 14:36:59.624583: train loss : -0.9222
2022-07-08 14:37:05.032275: validation loss: -0.7628
2022-07-08 14:37:05.067256: Average global foreground Dice: [0.8226]
2022-07-08 14:37:05.088882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:37:05.688411: Suus1 maybe_update_lr lr: 0.001987
2022-07-08 14:37:05.706935: This epoch took 78.165059 s

2022-07-08 14:37:05.734869: 
epoch:  417
2022-07-08 14:38:16.725713: train loss : -0.9225
2022-07-08 14:38:22.384817: validation loss: -0.7722
2022-07-08 14:38:22.405085: Average global foreground Dice: [0.833]
2022-07-08 14:38:22.430881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:38:23.054327: Suus1 maybe_update_lr lr: 0.001965
2022-07-08 14:38:23.084914: This epoch took 77.326947 s

2022-07-08 14:38:23.106869: 
epoch:  418
2022-07-08 14:39:34.355148: train loss : -0.9217
2022-07-08 14:39:39.899004: validation loss: -0.7765
2022-07-08 14:39:39.932216: Average global foreground Dice: [0.8348]
2022-07-08 14:39:39.960683: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:39:40.702852: Suus1 maybe_update_lr lr: 0.001943
2022-07-08 14:39:40.722916: This epoch took 77.594888 s

2022-07-08 14:39:40.744860: 
epoch:  419
2022-07-08 14:40:52.015778: train loss : -0.9230
2022-07-08 14:40:57.086047: validation loss: -0.7821
2022-07-08 14:40:57.114237: Average global foreground Dice: [0.838]
2022-07-08 14:40:57.134060: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:40:57.810208: Suus1 maybe_update_lr lr: 0.001922
2022-07-08 14:40:57.840923: saving best epoch checkpoint...
2022-07-08 14:40:57.989747: saving checkpoint...
2022-07-08 14:40:59.587118: done, saving took 1.72 seconds
2022-07-08 14:40:59.603313: This epoch took 78.842448 s

2022-07-08 14:40:59.605392: 
epoch:  420
2022-07-08 14:42:10.322958: train loss : -0.9232
2022-07-08 14:42:15.075361: validation loss: -0.7726
2022-07-08 14:42:15.105462: Average global foreground Dice: [0.8331]
2022-07-08 14:42:15.123858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:42:15.945328: Suus1 maybe_update_lr lr: 0.0019
2022-07-08 14:42:15.965900: saving best epoch checkpoint...
2022-07-08 14:42:16.081641: saving checkpoint...
2022-07-08 14:42:17.554268: done, saving took 1.57 seconds
2022-07-08 14:42:17.568568: This epoch took 77.961170 s

2022-07-08 14:42:17.570610: 
epoch:  421
2022-07-08 14:43:27.627313: train loss : -0.9223
2022-07-08 14:43:32.709430: validation loss: -0.7817
2022-07-08 14:43:32.753321: Average global foreground Dice: [0.8369]
2022-07-08 14:43:32.766221: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:43:33.489551: Suus1 maybe_update_lr lr: 0.001879
2022-07-08 14:43:33.509885: saving best epoch checkpoint...
2022-07-08 14:43:33.671343: saving checkpoint...
2022-07-08 14:43:35.414067: done, saving took 1.90 seconds
2022-07-08 14:43:35.430920: This epoch took 77.858278 s

2022-07-08 14:43:35.433219: 
epoch:  422
2022-07-08 14:44:46.773962: train loss : -0.9216
2022-07-08 14:44:51.548257: validation loss: -0.7777
2022-07-08 14:44:51.578257: Average global foreground Dice: [0.8337]
2022-07-08 14:44:51.595893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:44:52.207140: Suus1 maybe_update_lr lr: 0.001857
2022-07-08 14:44:52.223028: saving best epoch checkpoint...
2022-07-08 14:44:52.320091: saving checkpoint...
2022-07-08 14:44:53.822994: done, saving took 1.58 seconds
2022-07-08 14:44:53.838566: This epoch took 78.403241 s

2022-07-08 14:44:53.840526: 
epoch:  423
2022-07-08 14:46:03.701682: train loss : -0.9242
2022-07-08 14:46:09.378366: validation loss: -0.7552
2022-07-08 14:46:09.406211: Average global foreground Dice: [0.8203]
2022-07-08 14:46:09.423869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:46:10.290618: Suus1 maybe_update_lr lr: 0.001835
2022-07-08 14:46:10.311002: This epoch took 76.468512 s

2022-07-08 14:46:10.313221: 
epoch:  424
2022-07-08 14:47:22.498375: train loss : -0.9248
2022-07-08 14:47:28.134384: validation loss: -0.7837
2022-07-08 14:47:28.145184: Average global foreground Dice: [0.8409]
2022-07-08 14:47:28.147518: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:47:28.937172: Suus1 maybe_update_lr lr: 0.001813
2022-07-08 14:47:28.940169: saving best epoch checkpoint...
2022-07-08 14:47:29.024601: saving checkpoint...
2022-07-08 14:47:30.450301: done, saving took 1.50 seconds
2022-07-08 14:47:30.465459: This epoch took 80.150125 s

2022-07-08 14:47:30.467545: 
epoch:  425
2022-07-08 14:48:40.929183: train loss : -0.9243
2022-07-08 14:48:45.828012: validation loss: -0.7722
2022-07-08 14:48:45.857301: Average global foreground Dice: [0.8251]
2022-07-08 14:48:45.883880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:48:46.447496: Suus1 maybe_update_lr lr: 0.001792
2022-07-08 14:48:46.468928: This epoch took 75.999299 s

2022-07-08 14:48:46.490857: 
epoch:  426
2022-07-08 14:49:58.473872: train loss : -0.9244
2022-07-08 14:50:03.652355: validation loss: -0.7499
2022-07-08 14:50:03.694182: Average global foreground Dice: [0.8162]
2022-07-08 14:50:03.721543: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:50:04.332684: Suus1 maybe_update_lr lr: 0.00177
2022-07-08 14:50:04.380901: This epoch took 77.868025 s

2022-07-08 14:50:04.383179: 
epoch:  427
2022-07-08 14:51:18.483627: train loss : -0.9247
2022-07-08 14:51:24.427426: validation loss: -0.7586
2022-07-08 14:51:24.467372: Average global foreground Dice: [0.8224]
2022-07-08 14:51:24.488946: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:51:25.221163: Suus1 maybe_update_lr lr: 0.001748
2022-07-08 14:51:25.236263: This epoch took 80.839391 s

2022-07-08 14:51:25.238264: 
epoch:  428
2022-07-08 14:52:35.808667: train loss : -0.9235
2022-07-08 14:52:40.905066: validation loss: -0.7636
2022-07-08 14:52:40.955328: Average global foreground Dice: [0.8228]
2022-07-08 14:52:40.966608: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:52:41.820514: Suus1 maybe_update_lr lr: 0.001726
2022-07-08 14:52:41.832281: This epoch took 76.592031 s

2022-07-08 14:52:41.853854: 
epoch:  429
2022-07-08 14:53:53.054215: train loss : -0.9241
2022-07-08 14:53:58.063847: validation loss: -0.7606
2022-07-08 14:53:58.069315: Average global foreground Dice: [0.8198]
2022-07-08 14:53:58.079755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:53:58.784315: Suus1 maybe_update_lr lr: 0.001704
2022-07-08 14:53:58.804620: This epoch took 76.927735 s

2022-07-08 14:53:58.824669: 
epoch:  430
2022-07-08 14:55:09.792006: train loss : -0.9243
2022-07-08 14:55:15.198814: validation loss: -0.7565
2022-07-08 14:55:15.216387: Average global foreground Dice: [0.8221]
2022-07-08 14:55:15.242944: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:55:15.983863: Suus1 maybe_update_lr lr: 0.001682
2022-07-08 14:55:15.995849: This epoch took 77.143843 s

2022-07-08 14:55:16.015085: 
epoch:  431
2022-07-08 14:56:27.581471: train loss : -0.9211
2022-07-08 14:56:32.767260: validation loss: -0.7594
2022-07-08 14:56:32.794340: Average global foreground Dice: [0.8224]
2022-07-08 14:56:32.815885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:56:33.632525: Suus1 maybe_update_lr lr: 0.00166
2022-07-08 14:56:33.646848: This epoch took 77.600272 s

2022-07-08 14:56:33.673020: 
epoch:  432
2022-07-08 14:57:45.312566: train loss : -0.9251
2022-07-08 14:57:50.164361: validation loss: -0.7856
2022-07-08 14:57:50.196577: Average global foreground Dice: [0.8374]
2022-07-08 14:57:50.216358: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:57:50.836598: Suus1 maybe_update_lr lr: 0.001638
2022-07-08 14:57:50.856972: This epoch took 77.136107 s

2022-07-08 14:57:50.888553: 
epoch:  433
2022-07-08 14:59:02.751107: train loss : -0.9243
2022-07-08 14:59:08.009861: validation loss: -0.7530
2022-07-08 14:59:08.033092: Average global foreground Dice: [0.8151]
2022-07-08 14:59:08.059167: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:59:08.716648: Suus1 maybe_update_lr lr: 0.001616
2022-07-08 14:59:08.735916: This epoch took 77.819188 s

2022-07-08 14:59:08.743341: 
epoch:  434
2022-07-08 15:00:21.152070: train loss : -0.9242
2022-07-08 15:00:26.109214: validation loss: -0.7632
2022-07-08 15:00:26.156219: Average global foreground Dice: [0.8233]
2022-07-08 15:00:26.196880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:00:26.916368: Suus1 maybe_update_lr lr: 0.001594
2022-07-08 15:00:26.947929: This epoch took 78.171764 s

2022-07-08 15:00:26.960336: 
epoch:  435
2022-07-08 15:01:38.282899: train loss : -0.9259
2022-07-08 15:01:43.570012: validation loss: -0.7669
2022-07-08 15:01:43.579448: Average global foreground Dice: [0.8272]
2022-07-08 15:01:43.595002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:01:44.558339: Suus1 maybe_update_lr lr: 0.001572
2022-07-08 15:01:44.599905: This epoch took 77.615770 s

2022-07-08 15:01:44.621873: 
epoch:  436
2022-07-08 15:02:57.409770: train loss : -0.9246
2022-07-08 15:03:03.190013: validation loss: -0.7698
2022-07-08 15:03:03.213385: Average global foreground Dice: [0.8266]
2022-07-08 15:03:03.230439: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:03:03.852549: Suus1 maybe_update_lr lr: 0.00155
2022-07-08 15:03:03.878167: This epoch took 79.234303 s

2022-07-08 15:03:03.896868: 
epoch:  437
2022-07-08 15:04:15.758167: train loss : -0.9283
2022-07-08 15:04:21.317627: validation loss: -0.7648
2022-07-08 15:04:21.365276: Average global foreground Dice: [0.8244]
2022-07-08 15:04:21.385019: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:04:22.050012: Suus1 maybe_update_lr lr: 0.001528
2022-07-08 15:04:22.072914: This epoch took 78.161420 s

2022-07-08 15:04:22.094853: 
epoch:  438
2022-07-08 15:05:32.365966: train loss : -0.9271
2022-07-08 15:05:37.523485: validation loss: -0.7758
2022-07-08 15:05:37.541458: Average global foreground Dice: [0.8334]
2022-07-08 15:05:37.555931: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:05:38.339163: Suus1 maybe_update_lr lr: 0.001506
2022-07-08 15:05:38.366925: This epoch took 76.244064 s

2022-07-08 15:05:38.398288: 
epoch:  439
2022-07-08 15:06:49.250803: train loss : -0.9276
2022-07-08 15:06:54.118857: validation loss: -0.7624
2022-07-08 15:06:54.128294: Average global foreground Dice: [0.8192]
2022-07-08 15:06:54.176879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:06:54.854856: Suus1 maybe_update_lr lr: 0.001483
2022-07-08 15:06:54.880889: This epoch took 76.461035 s

2022-07-08 15:06:54.904740: 
epoch:  440
2022-07-08 15:08:07.035753: train loss : -0.9282
2022-07-08 15:08:12.440286: validation loss: -0.7823
2022-07-08 15:08:12.470666: Average global foreground Dice: [0.8397]
2022-07-08 15:08:12.497857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:08:13.225210: Suus1 maybe_update_lr lr: 0.001461
2022-07-08 15:08:13.244893: This epoch took 78.318008 s

2022-07-08 15:08:13.266864: 
epoch:  441
2022-07-08 15:09:24.019329: train loss : -0.9271
2022-07-08 15:09:29.203530: validation loss: -0.7531
2022-07-08 15:09:29.227264: Average global foreground Dice: [0.8176]
2022-07-08 15:09:29.248872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:09:29.919990: Suus1 maybe_update_lr lr: 0.001439
2022-07-08 15:09:29.953204: This epoch took 76.664347 s

2022-07-08 15:09:29.970403: 
epoch:  442
2022-07-08 15:10:41.076137: train loss : -0.9266
2022-07-08 15:10:46.558898: validation loss: -0.7649
2022-07-08 15:10:46.600488: Average global foreground Dice: [0.8238]
2022-07-08 15:10:46.621885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:10:47.225471: Suus1 maybe_update_lr lr: 0.001416
2022-07-08 15:10:47.244895: This epoch took 77.224741 s

2022-07-08 15:10:47.260561: 
epoch:  443
2022-07-08 15:11:59.632271: train loss : -0.9268
2022-07-08 15:12:04.333307: validation loss: -0.7436
2022-07-08 15:12:04.360317: Average global foreground Dice: [0.8105]
2022-07-08 15:12:04.380046: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:12:05.004772: Suus1 maybe_update_lr lr: 0.001394
2022-07-08 15:12:05.023907: This epoch took 77.752902 s

2022-07-08 15:12:05.045855: 
epoch:  444
2022-07-08 15:13:16.832308: train loss : -0.9292
2022-07-08 15:13:22.684515: validation loss: -0.7604
2022-07-08 15:13:22.708244: Average global foreground Dice: [0.8195]
2022-07-08 15:13:22.757491: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:13:23.442372: Suus1 maybe_update_lr lr: 0.001372
2022-07-08 15:13:23.444810: This epoch took 78.376892 s

2022-07-08 15:13:23.460844: 
epoch:  445
2022-07-08 15:14:35.217132: train loss : -0.9269
2022-07-08 15:14:41.600185: validation loss: -0.7544
2022-07-08 15:14:41.622297: Average global foreground Dice: [0.8172]
2022-07-08 15:14:41.643866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:14:42.367263: Suus1 maybe_update_lr lr: 0.001349
2022-07-08 15:14:42.387930: This epoch took 78.915779 s

2022-07-08 15:14:42.420865: 
epoch:  446
2022-07-08 15:15:53.749298: train loss : -0.9261
2022-07-08 15:15:59.074358: validation loss: -0.7546
2022-07-08 15:15:59.095023: Average global foreground Dice: [0.8161]
2022-07-08 15:15:59.111868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:15:59.777473: Suus1 maybe_update_lr lr: 0.001327
2022-07-08 15:15:59.796908: This epoch took 77.332049 s

2022-07-08 15:15:59.835462: 
epoch:  447
2022-07-08 15:17:10.302286: train loss : -0.9282
2022-07-08 15:17:15.012148: validation loss: -0.7404
2022-07-08 15:17:15.027384: Average global foreground Dice: [0.8084]
2022-07-08 15:17:15.051694: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:17:15.755124: Suus1 maybe_update_lr lr: 0.001304
2022-07-08 15:17:15.774881: This epoch took 75.919112 s

2022-07-08 15:17:15.793706: 
epoch:  448
2022-07-08 15:18:27.169923: train loss : -0.9271
2022-07-08 15:18:32.142604: validation loss: -0.7509
2022-07-08 15:18:32.182264: Average global foreground Dice: [0.8185]
2022-07-08 15:18:32.194886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:18:32.831906: Suus1 maybe_update_lr lr: 0.001282
2022-07-08 15:18:32.850919: This epoch took 77.025731 s

2022-07-08 15:18:32.887864: 
epoch:  449
2022-07-08 15:19:45.935136: train loss : -0.9255
2022-07-08 15:19:51.213083: validation loss: -0.7518
2022-07-08 15:19:51.233179: Average global foreground Dice: [0.8191]
2022-07-08 15:19:51.252952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:19:51.979561: Suus1 maybe_update_lr lr: 0.001259
2022-07-08 15:19:51.986706: saving scheduled checkpoint file...
2022-07-08 15:19:52.117547: saving checkpoint...
2022-07-08 15:19:53.609816: done, saving took 1.60 seconds
2022-07-08 15:19:53.635757: done
2022-07-08 15:19:53.637978: This epoch took 80.735145 s

2022-07-08 15:19:53.639894: 
epoch:  450
2022-07-08 15:21:06.297485: train loss : -0.9266
2022-07-08 15:21:11.746707: validation loss: -0.7655
2022-07-08 15:21:11.772107: Average global foreground Dice: [0.828]
2022-07-08 15:21:11.800888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:21:12.707661: Suus1 maybe_update_lr lr: 0.001236
2022-07-08 15:21:12.730925: This epoch took 79.088984 s

2022-07-08 15:21:12.759201: 
epoch:  451
2022-07-08 15:22:22.443153: train loss : -0.9287
2022-07-08 15:22:27.883421: validation loss: -0.7633
2022-07-08 15:22:27.913229: Average global foreground Dice: [0.823]
2022-07-08 15:22:27.925267: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:22:28.862297: Suus1 maybe_update_lr lr: 0.001214
2022-07-08 15:22:28.887054: This epoch took 76.092867 s

2022-07-08 15:22:28.903145: 
epoch:  452
2022-07-08 15:23:41.790298: train loss : -0.9278
2022-07-08 15:23:46.416104: validation loss: -0.7794
2022-07-08 15:23:46.439305: Average global foreground Dice: [0.8368]
2022-07-08 15:23:46.460695: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:23:47.239459: Suus1 maybe_update_lr lr: 0.001191
2022-07-08 15:23:47.279826: This epoch took 78.362603 s

2022-07-08 15:23:47.287228: 
epoch:  453
2022-07-08 15:24:59.178717: train loss : -0.9287
2022-07-08 15:25:04.106958: validation loss: -0.7656
2022-07-08 15:25:04.133213: Average global foreground Dice: [0.8251]
2022-07-08 15:25:04.175206: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:25:05.002202: Suus1 maybe_update_lr lr: 0.001168
2022-07-08 15:25:05.006706: This epoch took 77.699368 s

2022-07-08 15:25:05.025652: 
epoch:  454
2022-07-08 15:26:16.515741: train loss : -0.9261
2022-07-08 15:26:21.113645: validation loss: -0.7656
2022-07-08 15:26:21.145396: Average global foreground Dice: [0.8238]
2022-07-08 15:26:21.185197: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:26:21.783816: Suus1 maybe_update_lr lr: 0.001145
2022-07-08 15:26:21.797509: This epoch took 76.729108 s

2022-07-08 15:26:21.807001: 
epoch:  455
2022-07-08 15:27:33.036455: train loss : -0.9272
2022-07-08 15:27:38.042471: validation loss: -0.7828
2022-07-08 15:27:38.057416: Average global foreground Dice: [0.8371]
2022-07-08 15:27:38.064169: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:27:38.656142: Suus1 maybe_update_lr lr: 0.001122
2022-07-08 15:27:38.666273: This epoch took 76.845403 s

2022-07-08 15:27:38.698849: 
epoch:  456
2022-07-08 15:28:49.765519: train loss : -0.9290
2022-07-08 15:28:54.350671: validation loss: -0.7684
2022-07-08 15:28:54.356415: Average global foreground Dice: [0.8297]
2022-07-08 15:28:54.365536: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:28:55.029995: Suus1 maybe_update_lr lr: 0.001099
2022-07-08 15:28:55.050296: This epoch took 76.318272 s

2022-07-08 15:28:55.071864: 
epoch:  457
2022-07-08 15:30:07.694456: train loss : -0.9276
2022-07-08 15:30:13.118414: validation loss: -0.7729
2022-07-08 15:30:13.172920: Average global foreground Dice: [0.8294]
2022-07-08 15:30:13.175968: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:30:13.821747: Suus1 maybe_update_lr lr: 0.001076
2022-07-08 15:30:13.826642: This epoch took 78.727775 s

2022-07-08 15:30:13.837865: 
epoch:  458
2022-07-08 15:31:25.759191: train loss : -0.9288
2022-07-08 15:31:31.514562: validation loss: -0.7581
2022-07-08 15:31:31.543236: Average global foreground Dice: [0.8233]
2022-07-08 15:31:31.585183: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:31:32.226305: Suus1 maybe_update_lr lr: 0.001053
2022-07-08 15:31:32.256196: This epoch took 78.400181 s

2022-07-08 15:31:32.268870: 
epoch:  459
2022-07-08 15:32:42.709206: train loss : -0.9294
2022-07-08 15:32:48.290790: validation loss: -0.7554
2022-07-08 15:32:48.312632: Average global foreground Dice: [0.8174]
2022-07-08 15:32:48.322000: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:32:49.158590: Suus1 maybe_update_lr lr: 0.00103
2022-07-08 15:32:49.189115: This epoch took 76.895126 s

2022-07-08 15:32:49.191322: 
epoch:  460
2022-07-08 15:34:00.559376: train loss : -0.9296
2022-07-08 15:34:05.238549: validation loss: -0.7558
2022-07-08 15:34:05.298386: Average global foreground Dice: [0.821]
2022-07-08 15:34:05.319870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:34:05.952283: Suus1 maybe_update_lr lr: 0.001007
2022-07-08 15:34:05.973739: This epoch took 76.780334 s

2022-07-08 15:34:06.014019: 
epoch:  461
2022-07-08 15:35:18.728442: train loss : -0.9294
2022-07-08 15:35:23.708147: validation loss: -0.7556
2022-07-08 15:35:23.719854: Average global foreground Dice: [0.8205]
2022-07-08 15:35:23.742850: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:35:24.517847: Suus1 maybe_update_lr lr: 0.000983
2022-07-08 15:35:24.548922: This epoch took 78.515770 s

2022-07-08 15:35:24.577851: 
epoch:  462
2022-07-08 15:36:35.569040: train loss : -0.9304
2022-07-08 15:36:40.546036: validation loss: -0.7765
2022-07-08 15:36:40.577231: Average global foreground Dice: [0.8353]
2022-07-08 15:36:40.592038: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:36:41.197623: Suus1 maybe_update_lr lr: 0.00096
2022-07-08 15:36:41.209072: This epoch took 76.609197 s

2022-07-08 15:36:41.229847: 
epoch:  463
2022-07-08 15:37:52.482674: train loss : -0.9307
2022-07-08 15:37:57.141382: validation loss: -0.7330
2022-07-08 15:37:57.168273: Average global foreground Dice: [0.8091]
2022-07-08 15:37:57.177445: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:37:58.047250: Suus1 maybe_update_lr lr: 0.000937
2022-07-08 15:37:58.066930: This epoch took 76.834720 s

2022-07-08 15:37:58.095845: 
epoch:  464
2022-07-08 15:39:09.974284: train loss : -0.9299
2022-07-08 15:39:15.412423: validation loss: -0.7629
2022-07-08 15:39:15.439342: Average global foreground Dice: [0.8259]
2022-07-08 15:39:15.457105: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:39:16.234365: Suus1 maybe_update_lr lr: 0.000913
2022-07-08 15:39:16.263903: This epoch took 78.148177 s

2022-07-08 15:39:16.290357: 
epoch:  465
2022-07-08 15:40:27.993898: train loss : -0.9286
2022-07-08 15:40:32.942860: validation loss: -0.7815
2022-07-08 15:40:32.968423: Average global foreground Dice: [0.838]
2022-07-08 15:40:32.988244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:40:33.835315: Suus1 maybe_update_lr lr: 0.00089
2022-07-08 15:40:33.854901: This epoch took 77.558235 s

2022-07-08 15:40:33.876866: 
epoch:  466
2022-07-08 15:41:44.495829: train loss : -0.9280
2022-07-08 15:41:50.130708: validation loss: -0.7791
2022-07-08 15:41:50.143055: Average global foreground Dice: [0.8316]
2022-07-08 15:41:50.164865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:41:50.948546: Suus1 maybe_update_lr lr: 0.000866
2022-07-08 15:41:50.978904: This epoch took 77.080045 s

2022-07-08 15:41:50.996815: 
epoch:  467
2022-07-08 15:43:02.907981: train loss : -0.9293
2022-07-08 15:43:08.338560: validation loss: -0.7629
2022-07-08 15:43:08.391360: Average global foreground Dice: [0.8224]
2022-07-08 15:43:08.425876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:43:08.991143: Suus1 maybe_update_lr lr: 0.000842
2022-07-08 15:43:09.010922: This epoch took 78.010055 s

2022-07-08 15:43:09.034749: 
epoch:  468
2022-07-08 15:44:20.823019: train loss : -0.9290
2022-07-08 15:44:25.721497: validation loss: -0.7708
2022-07-08 15:44:25.763228: Average global foreground Dice: [0.8285]
2022-07-08 15:44:25.786886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:44:26.395837: Suus1 maybe_update_lr lr: 0.000819
2022-07-08 15:44:26.416780: This epoch took 77.373981 s

2022-07-08 15:44:26.419064: 
epoch:  469
2022-07-08 15:45:38.965432: train loss : -0.9305
2022-07-08 15:45:44.283003: validation loss: -0.7721
2022-07-08 15:45:44.293812: Average global foreground Dice: [0.8284]
2022-07-08 15:45:44.296234: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:45:44.964141: Suus1 maybe_update_lr lr: 0.000795
2022-07-08 15:45:44.986921: This epoch took 78.550779 s

2022-07-08 15:45:45.008930: 
epoch:  470
2022-07-08 15:46:57.028585: train loss : -0.9304
2022-07-08 15:47:02.027990: validation loss: -0.7451
2022-07-08 15:47:02.072613: Average global foreground Dice: [0.8104]
2022-07-08 15:47:02.089019: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:47:02.810424: Suus1 maybe_update_lr lr: 0.000771
2022-07-08 15:47:02.829145: This epoch took 77.789263 s

2022-07-08 15:47:02.862850: 
epoch:  471
2022-07-08 15:48:14.603200: train loss : -0.9292
2022-07-08 15:48:20.723127: validation loss: -0.7704
2022-07-08 15:48:20.761760: Average global foreground Dice: [0.8302]
2022-07-08 15:48:20.792879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:48:21.535747: Suus1 maybe_update_lr lr: 0.000747
2022-07-08 15:48:21.554911: This epoch took 78.654028 s

2022-07-08 15:48:21.581869: 
epoch:  472
2022-07-08 15:49:33.189178: train loss : -0.9301
2022-07-08 15:49:38.189592: validation loss: -0.7650
2022-07-08 15:49:38.223252: Average global foreground Dice: [0.8255]
2022-07-08 15:49:38.257892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:49:38.966232: Suus1 maybe_update_lr lr: 0.000723
2022-07-08 15:49:38.989127: This epoch took 77.374262 s

2022-07-08 15:49:39.014639: 
epoch:  473
2022-07-08 15:50:50.793720: train loss : -0.9319
2022-07-08 15:50:55.959601: validation loss: -0.7654
2022-07-08 15:50:55.999328: Average global foreground Dice: [0.8223]
2022-07-08 15:50:56.027774: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:50:56.676934: Suus1 maybe_update_lr lr: 0.000699
2022-07-08 15:50:56.706885: This epoch took 77.672086 s

2022-07-08 15:50:56.728840: 
epoch:  474
2022-07-08 15:52:08.397863: train loss : -0.9304
2022-07-08 15:52:13.326360: validation loss: -0.7561
2022-07-08 15:52:13.359264: Average global foreground Dice: [0.8173]
2022-07-08 15:52:13.370619: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:52:14.005473: Suus1 maybe_update_lr lr: 0.000675
2022-07-08 15:52:14.024911: This epoch took 77.272212 s

2022-07-08 15:52:14.046859: 
epoch:  475
2022-07-08 15:53:25.144159: train loss : -0.9284
2022-07-08 15:53:30.336808: validation loss: -0.7837
2022-07-08 15:53:30.375490: Average global foreground Dice: [0.8362]
2022-07-08 15:53:30.395249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:53:31.026957: Suus1 maybe_update_lr lr: 0.00065
2022-07-08 15:53:31.046901: This epoch took 76.978029 s

2022-07-08 15:53:31.068852: 
epoch:  476
2022-07-08 15:54:43.105585: train loss : -0.9294
2022-07-08 15:54:48.123636: validation loss: -0.7567
2022-07-08 15:54:48.162265: Average global foreground Dice: [0.8192]
2022-07-08 15:54:48.174894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:54:48.898638: Suus1 maybe_update_lr lr: 0.000626
2022-07-08 15:54:48.930908: This epoch took 77.825048 s

2022-07-08 15:54:48.944838: 
epoch:  477
2022-07-08 15:56:00.445244: train loss : -0.9322
2022-07-08 15:56:06.077221: validation loss: -0.7520
2022-07-08 15:56:06.101220: Average global foreground Dice: [0.8151]
2022-07-08 15:56:06.111378: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:56:06.839233: Suus1 maybe_update_lr lr: 0.000601
2022-07-08 15:56:06.872247: This epoch took 77.887937 s

2022-07-08 15:56:06.887130: 
epoch:  478
2022-07-08 15:57:18.235255: train loss : -0.9304
2022-07-08 15:57:23.443370: validation loss: -0.7658
2022-07-08 15:57:23.483258: Average global foreground Dice: [0.8289]
2022-07-08 15:57:23.495875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:57:24.123033: Suus1 maybe_update_lr lr: 0.000577
2022-07-08 15:57:24.153977: This epoch took 77.252275 s

2022-07-08 15:57:24.173986: 
epoch:  479
2022-07-08 15:58:35.177317: train loss : -0.9306
2022-07-08 15:58:40.617798: validation loss: -0.7741
2022-07-08 15:58:40.627869: Average global foreground Dice: [0.8356]
2022-07-08 15:58:40.641815: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:58:41.450930: Suus1 maybe_update_lr lr: 0.000552
2022-07-08 15:58:41.492908: This epoch took 77.298802 s

2022-07-08 15:58:41.525856: 
epoch:  480
2022-07-08 15:59:52.214127: train loss : -0.9325
2022-07-08 15:59:57.254732: validation loss: -0.7531
2022-07-08 15:59:57.284333: Average global foreground Dice: [0.8172]
2022-07-08 15:59:57.295881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:59:58.237486: Suus1 maybe_update_lr lr: 0.000527
2022-07-08 15:59:58.278906: This epoch took 76.740035 s

2022-07-08 15:59:58.322905: 
epoch:  481
2022-07-08 16:01:09.430899: train loss : -0.9322
2022-07-08 16:01:15.117871: validation loss: -0.7552
2022-07-08 16:01:15.174148: Average global foreground Dice: [0.8183]
2022-07-08 16:01:15.203260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:01:15.958907: Suus1 maybe_update_lr lr: 0.000502
2022-07-08 16:01:16.000905: This epoch took 77.656176 s

2022-07-08 16:01:16.044874: 
epoch:  482
2022-07-08 16:02:26.621471: train loss : -0.9304
2022-07-08 16:02:31.531430: validation loss: -0.7582
2022-07-08 16:02:31.562541: Average global foreground Dice: [0.819]
2022-07-08 16:02:31.582417: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:02:32.068414: Suus1 maybe_update_lr lr: 0.000477
2022-07-08 16:02:32.087903: This epoch took 76.010372 s

2022-07-08 16:02:32.106174: 
epoch:  483
2022-07-08 16:03:44.259954: train loss : -0.9324
2022-07-08 16:03:49.130603: validation loss: -0.7516
2022-07-08 16:03:49.158993: Average global foreground Dice: [0.818]
2022-07-08 16:03:49.189238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:03:50.049252: Suus1 maybe_update_lr lr: 0.000451
2022-07-08 16:03:50.070898: This epoch took 77.950013 s

2022-07-08 16:03:50.094865: 
epoch:  484
2022-07-08 16:05:02.617995: train loss : -0.9307
2022-07-08 16:05:07.437261: validation loss: -0.7572
2022-07-08 16:05:07.445090: Average global foreground Dice: [0.8193]
2022-07-08 16:05:07.466264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:05:08.308594: Suus1 maybe_update_lr lr: 0.000426
2022-07-08 16:05:08.344916: This epoch took 78.208051 s

2022-07-08 16:05:08.370857: 
epoch:  485
2022-07-08 16:06:19.299841: train loss : -0.9332
2022-07-08 16:06:24.088027: validation loss: -0.7592
2022-07-08 16:06:24.091880: Average global foreground Dice: [0.8262]
2022-07-08 16:06:24.121893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:06:24.883080: Suus1 maybe_update_lr lr: 0.0004
2022-07-08 16:06:24.902883: This epoch took 76.516644 s

2022-07-08 16:06:24.934859: 
epoch:  486
2022-07-08 16:07:37.875142: train loss : -0.9327
2022-07-08 16:07:42.861008: validation loss: -0.7745
2022-07-08 16:07:42.893303: Average global foreground Dice: [0.8312]
2022-07-08 16:07:42.906905: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:07:43.647876: Suus1 maybe_update_lr lr: 0.000375
2022-07-08 16:07:43.678970: This epoch took 78.730301 s

2022-07-08 16:07:43.698991: 
epoch:  487
2022-07-08 16:08:55.466749: train loss : -0.9323
2022-07-08 16:09:00.647382: validation loss: -0.7622
2022-07-08 16:09:00.678279: Average global foreground Dice: [0.8195]
2022-07-08 16:09:00.690891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:09:01.240511: Suus1 maybe_update_lr lr: 0.000348
2022-07-08 16:09:01.276089: This epoch took 77.556997 s

2022-07-08 16:09:01.304667: 
epoch:  488
2022-07-08 16:10:12.956439: train loss : -0.9311
2022-07-08 16:10:18.070324: validation loss: -0.7675
2022-07-08 16:10:18.106238: Average global foreground Dice: [0.8339]
2022-07-08 16:10:18.118889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:10:18.917886: Suus1 maybe_update_lr lr: 0.000322
2022-07-08 16:10:18.959925: This epoch took 77.635007 s

2022-07-08 16:10:18.983874: 
epoch:  489
2022-07-08 16:11:29.173956: train loss : -0.9336
2022-07-08 16:11:33.995763: validation loss: -0.7673
2022-07-08 16:11:34.019284: Average global foreground Dice: [0.8303]
2022-07-08 16:11:34.040867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:11:34.682104: Suus1 maybe_update_lr lr: 0.000296
2022-07-08 16:11:34.701919: This epoch took 75.696041 s

2022-07-08 16:11:34.723873: 
epoch:  490
2022-07-08 16:12:44.821140: train loss : -0.9319
2022-07-08 16:12:49.703408: validation loss: -0.7583
2022-07-08 16:12:49.740329: Average global foreground Dice: [0.8218]
2022-07-08 16:12:49.762002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:12:50.381806: Suus1 maybe_update_lr lr: 0.000269
2022-07-08 16:12:50.400123: This epoch took 75.650743 s

2022-07-08 16:12:50.431870: 
epoch:  491
2022-07-08 16:14:03.830270: train loss : -0.9303
2022-07-08 16:14:08.465712: validation loss: -0.7592
2022-07-08 16:14:08.499369: Average global foreground Dice: [0.821]
2022-07-08 16:14:08.528392: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:14:09.256446: Suus1 maybe_update_lr lr: 0.000242
2022-07-08 16:14:09.258921: This epoch took 78.799014 s

2022-07-08 16:14:09.287044: 
epoch:  492
2022-07-08 16:15:20.094839: train loss : -0.9339
2022-07-08 16:15:25.024908: validation loss: -0.7684
2022-07-08 16:15:25.031579: Average global foreground Dice: [0.8258]
2022-07-08 16:15:25.034312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:15:25.771446: Suus1 maybe_update_lr lr: 0.000215
2022-07-08 16:15:25.784048: This epoch took 76.475036 s

2022-07-08 16:15:25.827878: 
epoch:  493
2022-07-08 16:16:38.931823: train loss : -0.9327
2022-07-08 16:16:44.229915: validation loss: -0.7754
2022-07-08 16:16:44.271177: Average global foreground Dice: [0.8316]
2022-07-08 16:16:44.285885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:16:44.862040: Suus1 maybe_update_lr lr: 0.000187
2022-07-08 16:16:44.892898: This epoch took 79.035215 s

2022-07-08 16:16:44.906869: 
epoch:  494
2022-07-08 16:17:57.407743: train loss : -0.9338
2022-07-08 16:18:02.292098: validation loss: -0.7597
2022-07-08 16:18:02.324597: Average global foreground Dice: [0.822]
2022-07-08 16:18:02.345876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:18:03.090231: Suus1 maybe_update_lr lr: 0.000158
2022-07-08 16:18:03.113997: This epoch took 78.191797 s

2022-07-08 16:18:03.135940: 
epoch:  495
2022-07-08 16:19:14.884834: train loss : -0.9335
2022-07-08 16:19:20.107978: validation loss: -0.7556
2022-07-08 16:19:20.136490: Average global foreground Dice: [0.8166]
2022-07-08 16:19:20.156234: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:19:20.868825: Suus1 maybe_update_lr lr: 0.00013
2022-07-08 16:19:20.872087: This epoch took 77.705374 s

2022-07-08 16:19:20.885113: 
epoch:  496
2022-07-08 16:20:32.623724: train loss : -0.9315
2022-07-08 16:20:37.682164: validation loss: -0.7560
2022-07-08 16:20:37.701445: Average global foreground Dice: [0.8192]
2022-07-08 16:20:37.713502: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:20:38.462143: Suus1 maybe_update_lr lr: 0.0001
2022-07-08 16:20:38.480839: This epoch took 77.564968 s

2022-07-08 16:20:38.483279: 
epoch:  497
2022-07-08 16:21:49.529325: train loss : -0.9312
2022-07-08 16:21:54.262992: validation loss: -0.7549
2022-07-08 16:21:54.292358: Average global foreground Dice: [0.8194]
2022-07-08 16:21:54.321237: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:21:54.921702: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-08 16:21:54.933653: This epoch took 76.448232 s

2022-07-08 16:21:54.962976: 
epoch:  498
2022-07-08 16:23:06.735982: train loss : -0.9334
2022-07-08 16:23:11.941351: validation loss: -0.7596
2022-07-08 16:23:11.967264: Average global foreground Dice: [0.8178]
2022-07-08 16:23:11.987537: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:23:12.602102: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-08 16:23:12.622893: This epoch took 77.647009 s

2022-07-08 16:23:12.677862: 
epoch:  499
2022-07-08 16:24:24.600161: train loss : -0.9332
2022-07-08 16:24:29.532233: validation loss: -0.7558
2022-07-08 16:24:29.563983: Average global foreground Dice: [0.8212]
2022-07-08 16:24:29.582915: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:24:30.223381: Suus1 maybe_update_lr lr: 0.0
2022-07-08 16:24:30.254848: saving scheduled checkpoint file...
2022-07-08 16:24:30.374698: saving checkpoint...
2022-07-08 16:24:31.906301: done, saving took 1.63 seconds
2022-07-08 16:24:31.935730: done
2022-07-08 16:24:31.938205: This epoch took 79.244315 s

2022-07-08 16:24:32.002514: saving checkpoint...
2022-07-08 16:24:33.323186: done, saving took 1.38 seconds
panc_025 (2, 59, 186, 274)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 186, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 26], [0, 18]]
number of tiles: 8
computing Gaussian
done
prediction done
suus panc_025 transposed
suus panc_025 not saving softmax
suus panc_025 voeg toe aan pred_gt tuples voor later
panc_035 (2, 54, 143, 214)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_035 transposed
suus panc_035 not saving softmax
suus panc_035 voeg toe aan pred_gt tuples voor later
panc_041 (2, 49, 160, 302)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0, 46]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_041 transposed
suus panc_041 not saving softmax
suus panc_041 voeg toe aan pred_gt tuples voor later
panc_045 (2, 76, 155, 276)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0], [0, 20]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_045 transposed
suus panc_045 not saving softmax
suus panc_045 voeg toe aan pred_gt tuples voor later
panc_052 (2, 54, 172, 293)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_052 transposed
suus panc_052 not saving softmax
suus panc_052 voeg toe aan pred_gt tuples voor later
panc_056 (2, 56, 163, 275)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_056 transposed
suus panc_056 not saving softmax
suus panc_056 voeg toe aan pred_gt tuples voor later
panc_078 (2, 63, 170, 267)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 170, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 10], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_078 transposed
suus panc_078 not saving softmax
suus panc_078 voeg toe aan pred_gt tuples voor later
panc_091 (2, 53, 189, 297)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 189, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 29], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_091 transposed
suus panc_091 not saving softmax
suus panc_091 voeg toe aan pred_gt tuples voor later
panc_103 (2, 57, 174, 242)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_103 transposed
suus panc_103 not saving softmax
suus panc_103 voeg toe aan pred_gt tuples voor later
panc_106 (2, 70, 172, 293)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_106 transposed
suus panc_106 not saving softmax
suus panc_106 voeg toe aan pred_gt tuples voor later
panc_114 (2, 66, 159, 239)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_114 transposed
suus panc_114 not saving softmax
suus panc_114 voeg toe aan pred_gt tuples voor later
panc_117 (2, 71, 142, 281)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_117 transposed
suus panc_117 not saving softmax
suus panc_117 voeg toe aan pred_gt tuples voor later
panc_125 (2, 63, 211, 364)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 211, 364)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 51], [0, 108]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_125 transposed
suus panc_125 not saving softmax
suus panc_125 voeg toe aan pred_gt tuples voor later
panc_135 (2, 92, 189, 282)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 189, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 29], [0, 26]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_135 transposed
suus panc_135 not saving softmax
suus panc_135 voeg toe aan pred_gt tuples voor later
panc_140 (2, 76, 166, 316)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 166, 316)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 6], [0, 60]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_140 transposed
suus panc_140 not saving softmax
suus panc_140 voeg toe aan pred_gt tuples voor later
panc_166 (2, 58, 185, 307)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 185, 307)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 25], [0, 51]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_166 transposed
suus panc_166 not saving softmax
suus panc_166 voeg toe aan pred_gt tuples voor later
panc_178 (2, 53, 157, 249)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_178 transposed
suus panc_178 not saving softmax
suus panc_178 voeg toe aan pred_gt tuples voor later
panc_187 (2, 63, 162, 294)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 162, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 2], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_187 transposed
suus panc_187 not saving softmax
suus panc_187 voeg toe aan pred_gt tuples voor later
panc_199 (2, 59, 187, 287)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 287)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 31]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_199 transposed
suus panc_199 not saving softmax
suus panc_199 voeg toe aan pred_gt tuples voor later
panc_200 (2, 73, 239, 323)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 239, 323)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12, 25], [0, 79], [0, 67]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_200 transposed
suus panc_200 not saving softmax
suus panc_200 voeg toe aan pred_gt tuples voor later
panc_249 (2, 57, 206, 359)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 206, 359)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 46], [0, 103]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_249 transposed
suus panc_249 not saving softmax
suus panc_249 voeg toe aan pred_gt tuples voor later
panc_262 (2, 58, 175, 270)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_262 transposed
suus panc_262 not saving softmax
suus panc_262 voeg toe aan pred_gt tuples voor later
panc_264 (2, 55, 176, 268)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 176, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 16], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_264 transposed
suus panc_264 not saving softmax
suus panc_264 voeg toe aan pred_gt tuples voor later
panc_266 (2, 54, 176, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 176, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 16], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_266 transposed
suus panc_266 not saving softmax
suus panc_266 voeg toe aan pred_gt tuples voor later
panc_269 (2, 71, 157, 278)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_269 transposed
suus panc_269 not saving softmax
suus panc_269 voeg toe aan pred_gt tuples voor later
panc_280 (2, 60, 188, 334)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 188, 334)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 28], [0, 78]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_280 transposed
suus panc_280 not saving softmax
suus panc_280 voeg toe aan pred_gt tuples voor later
panc_283 (2, 62, 184, 261)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 184, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 24], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_283 transposed
suus panc_283 not saving softmax
suus panc_283 voeg toe aan pred_gt tuples voor later
panc_293 (2, 60, 202, 330)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_293 transposed
suus panc_293 not saving softmax
suus panc_293 voeg toe aan pred_gt tuples voor later
panc_301 (2, 46, 146, 309)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 53]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_301 transposed
suus panc_301 not saving softmax
suus panc_301 voeg toe aan pred_gt tuples voor later
panc_310 (2, 53, 175, 288)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 175, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 15], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_310 transposed
suus panc_310 not saving softmax
suus panc_310 voeg toe aan pred_gt tuples voor later
panc_312 (2, 50, 149, 258)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_312 transposed
suus panc_312 not saving softmax
suus panc_312 voeg toe aan pred_gt tuples voor later
panc_313 (2, 61, 162, 290)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_313 transposed
suus panc_313 not saving softmax
suus panc_313 voeg toe aan pred_gt tuples voor later
panc_323 (2, 61, 204, 290)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_323 transposed
suus panc_323 not saving softmax
suus panc_323 voeg toe aan pred_gt tuples voor later
panc_329 (2, 52, 210, 332)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 210, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 50], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_329 transposed
suus panc_329 not saving softmax
suus panc_329 voeg toe aan pred_gt tuples voor later
panc_342 (2, 63, 218, 304)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 218, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 58], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_342 transposed
suus panc_342 not saving softmax
suus panc_342 voeg toe aan pred_gt tuples voor later
panc_343 (2, 53, 156, 222)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_343 transposed
suus panc_343 not saving softmax
suus panc_343 voeg toe aan pred_gt tuples voor later
panc_351 (2, 53, 154, 224)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_351 transposed
suus panc_351 not saving softmax
suus panc_351 voeg toe aan pred_gt tuples voor later
panc_354 (2, 68, 156, 268)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 160, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0], [0, 12]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_354 transposed
suus panc_354 not saving softmax
suus panc_354 voeg toe aan pred_gt tuples voor later
panc_358 (2, 76, 161, 293)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 161, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 1], [0, 37]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_358 transposed
suus panc_358 not saving softmax
suus panc_358 voeg toe aan pred_gt tuples voor later
panc_361 (2, 86, 146, 261)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 5]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_361 transposed
suus panc_361 not saving softmax
suus panc_361 voeg toe aan pred_gt tuples voor later
panc_366 (2, 67, 202, 337)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 202, 337)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 42], [0, 81]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_366 transposed
suus panc_366 not saving softmax
suus panc_366 voeg toe aan pred_gt tuples voor later
panc_370 (2, 82, 127, 234)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
suus panc_370 transposed
suus panc_370 not saving softmax
suus panc_370 voeg toe aan pred_gt tuples voor later
panc_380 (2, 96, 165, 250)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 24, 48], [0, 5], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_380 transposed
suus panc_380 not saving softmax
suus panc_380 voeg toe aan pred_gt tuples voor later
panc_388 (2, 78, 141, 225)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
suus panc_388 transposed
suus panc_388 not saving softmax
suus panc_388 voeg toe aan pred_gt tuples voor later
panc_389 (2, 60, 180, 321)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 180, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 20], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_389 transposed
suus panc_389 not saving softmax
suus panc_389 voeg toe aan pred_gt tuples voor later
panc_405 (2, 62, 171, 254)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_405 transposed
suus panc_405 not saving softmax
suus panc_405 voeg toe aan pred_gt tuples voor later
panc_414 (2, 42, 210, 319)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 210, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 50], [0, 63]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_414 transposed
suus panc_414 not saving softmax
suus panc_414 voeg toe aan pred_gt tuples voor later
panc_421 (2, 63, 212, 351)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 212, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 52], [0, 95]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_421 transposed
suus panc_421 not saving softmax
suus panc_421 voeg toe aan pred_gt tuples voor later
2022-07-08 16:26:22.246369: finished prediction
2022-07-08 16:26:22.249866: evaluation of raw predictions
2022-07-08 16:26:35.384726: determining postprocessing
Foreground vs background
before: 0.8203400016413648
after:  0.8168355422202431
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_025.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_103.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_178.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_269.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_323.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_366.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_035.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_106.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_187.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_280.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_329.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_370.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_041.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_114.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_199.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_283.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_342.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_380.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_045.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_117.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_200.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_293.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_343.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_388.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_052.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_125.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_249.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_301.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_351.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_389.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_056.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_135.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_262.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_310.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_354.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_405.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_078.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_140.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_264.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_312.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_358.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_414.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_091.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_166.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_266.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_313.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_361.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_421.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='2', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-08 16:26:58.880781: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-08 16:26:59.437924: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-08 16:26:59.442180: The split file contains 5 splits.
2022-07-08 16:26:59.444235: Desired fold for training: 2
2022-07-08 16:26:59.446255: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-08 16:27:01.528152: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-08 16:27:15.861551: Unable to plot network architecture:
2022-07-08 16:27:15.905455: local variable 'g' referenced before assignment
2022-07-08 16:27:15.934839: 
printing the network instead:

2022-07-08 16:27:15.937085: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-08 16:27:15.941273: 

2022-07-08 16:27:15.943331: 
epoch:  0
2022-07-08 16:28:37.625111: train loss : -0.0491
2022-07-08 16:28:42.606842: validation loss: -0.3034
2022-07-08 16:28:42.638286: Average global foreground Dice: [0.4512]
2022-07-08 16:28:42.672340: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:28:43.525547: Suus1 maybe_update_lr lr: 0.009982
2022-07-08 16:28:43.566769: This epoch took 87.621592 s

2022-07-08 16:28:43.575209: 
epoch:  1
2022-07-08 16:29:56.399908: train loss : -0.3164
2022-07-08 16:30:01.417063: validation loss: -0.4521
2022-07-08 16:30:01.452756: Average global foreground Dice: [0.567]
2022-07-08 16:30:01.482886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:30:01.983460: Suus1 maybe_update_lr lr: 0.009964
2022-07-08 16:30:02.004881: saving best epoch checkpoint...
2022-07-08 16:30:02.122950: saving checkpoint...
2022-07-08 16:30:03.497725: done, saving took 1.47 seconds
2022-07-08 16:30:03.517657: This epoch took 79.935561 s

2022-07-08 16:30:03.520336: 
epoch:  2
2022-07-08 16:31:13.325097: train loss : -0.4177
2022-07-08 16:31:18.316272: validation loss: -0.4700
2022-07-08 16:31:18.347404: Average global foreground Dice: [0.5916]
2022-07-08 16:31:18.361860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:31:19.014776: Suus1 maybe_update_lr lr: 0.009946
2022-07-08 16:31:19.045887: saving best epoch checkpoint...
2022-07-08 16:31:19.252721: saving checkpoint...
2022-07-08 16:31:20.954750: done, saving took 1.89 seconds
2022-07-08 16:31:20.968761: This epoch took 77.446111 s

2022-07-08 16:31:20.970957: 
epoch:  3
2022-07-08 16:32:32.264109: train loss : -0.4749
2022-07-08 16:32:37.119202: validation loss: -0.5185
2022-07-08 16:32:37.147622: Average global foreground Dice: [0.6269]
2022-07-08 16:32:37.187261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:32:37.814876: Suus1 maybe_update_lr lr: 0.009928
2022-07-08 16:32:37.817490: saving best epoch checkpoint...
2022-07-08 16:32:37.939357: saving checkpoint...
2022-07-08 16:32:39.607358: done, saving took 1.77 seconds
2022-07-08 16:32:39.622131: This epoch took 78.649188 s

2022-07-08 16:32:39.624183: 
epoch:  4
2022-07-08 16:33:49.314104: train loss : -0.4995
2022-07-08 16:33:54.430150: validation loss: -0.5300
2022-07-08 16:33:54.460519: Average global foreground Dice: [0.6348]
2022-07-08 16:33:54.480769: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:33:55.354275: Suus1 maybe_update_lr lr: 0.00991
2022-07-08 16:33:55.361860: saving best epoch checkpoint...
2022-07-08 16:33:55.553982: saving checkpoint...
2022-07-08 16:33:57.206251: done, saving took 1.83 seconds
2022-07-08 16:33:57.222682: This epoch took 77.596645 s

2022-07-08 16:33:57.224597: 
epoch:  5
2022-07-08 16:35:07.862811: train loss : -0.5363
2022-07-08 16:35:13.209205: validation loss: -0.5768
2022-07-08 16:35:13.242262: Average global foreground Dice: [0.6733]
2022-07-08 16:35:13.260002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:35:13.860516: Suus1 maybe_update_lr lr: 0.009892
2022-07-08 16:35:13.885870: saving best epoch checkpoint...
2022-07-08 16:35:13.993221: saving checkpoint...
2022-07-08 16:35:15.603771: done, saving took 1.72 seconds
2022-07-08 16:35:15.620261: This epoch took 78.393639 s

2022-07-08 16:35:15.622359: 
epoch:  6
2022-07-08 16:36:26.407067: train loss : -0.5528
2022-07-08 16:36:31.115199: validation loss: -0.5654
2022-07-08 16:36:31.141756: Average global foreground Dice: [0.6615]
2022-07-08 16:36:31.157887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:36:31.922387: Suus1 maybe_update_lr lr: 0.009874
2022-07-08 16:36:31.927975: saving best epoch checkpoint...
2022-07-08 16:36:32.035813: saving checkpoint...
2022-07-08 16:36:33.576544: done, saving took 1.65 seconds
2022-07-08 16:36:33.593017: This epoch took 77.968728 s

2022-07-08 16:36:33.595441: 
epoch:  7
2022-07-08 16:37:43.793270: train loss : -0.5867
2022-07-08 16:37:49.552421: validation loss: -0.6276
2022-07-08 16:37:49.587634: Average global foreground Dice: [0.7186]
2022-07-08 16:37:49.601648: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:37:50.221546: Suus1 maybe_update_lr lr: 0.009856
2022-07-08 16:37:50.243878: saving best epoch checkpoint...
2022-07-08 16:37:50.456516: saving checkpoint...
2022-07-08 16:37:51.984187: done, saving took 1.73 seconds
2022-07-08 16:37:52.001169: This epoch took 78.403489 s

2022-07-08 16:37:52.003289: 
epoch:  8
2022-07-08 16:39:02.921999: train loss : -0.6011
2022-07-08 16:39:08.311004: validation loss: -0.5984
2022-07-08 16:39:08.335140: Average global foreground Dice: [0.6858]
2022-07-08 16:39:08.354341: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:39:09.195116: Suus1 maybe_update_lr lr: 0.009838
2022-07-08 16:39:09.197507: saving best epoch checkpoint...
2022-07-08 16:39:09.277010: saving checkpoint...
2022-07-08 16:39:10.726544: done, saving took 1.53 seconds
2022-07-08 16:39:10.742821: This epoch took 78.737603 s

2022-07-08 16:39:10.744915: 
epoch:  9
2022-07-08 16:40:20.930183: train loss : -0.6123
2022-07-08 16:40:26.187230: validation loss: -0.6443
2022-07-08 16:40:26.223319: Average global foreground Dice: [0.7199]
2022-07-08 16:40:26.234598: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:40:26.936638: Suus1 maybe_update_lr lr: 0.00982
2022-07-08 16:40:26.964049: saving best epoch checkpoint...
2022-07-08 16:40:27.130002: saving checkpoint...
2022-07-08 16:40:28.721271: done, saving took 1.73 seconds
2022-07-08 16:40:28.737795: This epoch took 77.990888 s

2022-07-08 16:40:28.739758: 
epoch:  10
2022-07-08 16:41:39.178698: train loss : -0.6142
2022-07-08 16:41:44.532926: validation loss: -0.6149
2022-07-08 16:41:44.566275: Average global foreground Dice: [0.692]
2022-07-08 16:41:44.596990: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:41:45.214505: Suus1 maybe_update_lr lr: 0.009802
2022-07-08 16:41:45.246895: saving best epoch checkpoint...
2022-07-08 16:41:45.374806: saving checkpoint...
2022-07-08 16:41:46.927919: done, saving took 1.66 seconds
2022-07-08 16:41:46.943173: This epoch took 78.201419 s

2022-07-08 16:41:46.945199: 
epoch:  11
2022-07-08 16:42:57.133195: train loss : -0.6169
2022-07-08 16:43:02.381818: validation loss: -0.6257
2022-07-08 16:43:02.417290: Average global foreground Dice: [0.7049]
2022-07-08 16:43:02.438868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:43:03.057471: Suus1 maybe_update_lr lr: 0.009784
2022-07-08 16:43:03.081399: saving best epoch checkpoint...
2022-07-08 16:43:03.201352: saving checkpoint...
2022-07-08 16:43:04.661139: done, saving took 1.54 seconds
2022-07-08 16:43:04.676466: This epoch took 77.729368 s

2022-07-08 16:43:04.678363: 
epoch:  12
2022-07-08 16:44:14.004719: train loss : -0.6389
2022-07-08 16:44:18.884550: validation loss: -0.6462
2022-07-08 16:44:18.909263: Average global foreground Dice: [0.7268]
2022-07-08 16:44:18.935831: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:44:19.934351: Suus1 maybe_update_lr lr: 0.009766
2022-07-08 16:44:19.942525: saving best epoch checkpoint...
2022-07-08 16:44:20.002316: saving checkpoint...
2022-07-08 16:44:21.474557: done, saving took 1.52 seconds
2022-07-08 16:44:21.491530: This epoch took 76.811291 s

2022-07-08 16:44:21.493674: 
epoch:  13
2022-07-08 16:45:32.226855: train loss : -0.6620
2022-07-08 16:45:37.609064: validation loss: -0.6394
2022-07-08 16:45:37.617151: Average global foreground Dice: [0.718]
2022-07-08 16:45:37.625538: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:45:38.092312: Suus1 maybe_update_lr lr: 0.009748
2022-07-08 16:45:38.112871: saving best epoch checkpoint...
2022-07-08 16:45:38.212350: saving checkpoint...
2022-07-08 16:45:39.812817: done, saving took 1.67 seconds
2022-07-08 16:45:39.826595: This epoch took 78.330891 s

2022-07-08 16:45:39.828657: 
epoch:  14
2022-07-08 16:46:52.090189: train loss : -0.6746
2022-07-08 16:46:56.719678: validation loss: -0.6569
2022-07-08 16:46:56.741444: Average global foreground Dice: [0.7288]
2022-07-08 16:46:56.757874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:46:57.223149: Suus1 maybe_update_lr lr: 0.00973
2022-07-08 16:46:57.242371: saving best epoch checkpoint...
2022-07-08 16:46:57.311080: saving checkpoint...
2022-07-08 16:46:58.919076: done, saving took 1.67 seconds
2022-07-08 16:46:58.982008: This epoch took 79.151414 s

2022-07-08 16:46:59.003858: 
epoch:  15
2022-07-08 16:48:09.164849: train loss : -0.6596
2022-07-08 16:48:13.652285: validation loss: -0.6365
2022-07-08 16:48:13.674451: Average global foreground Dice: [0.7175]
2022-07-08 16:48:13.702584: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:48:14.537676: Suus1 maybe_update_lr lr: 0.009712
2022-07-08 16:48:14.558893: saving best epoch checkpoint...
2022-07-08 16:48:14.650697: saving checkpoint...
2022-07-08 16:48:16.379852: done, saving took 1.79 seconds
2022-07-08 16:48:16.393394: This epoch took 77.371366 s

2022-07-08 16:48:16.395456: 
epoch:  16
2022-07-08 16:49:26.714163: train loss : -0.6776
2022-07-08 16:49:31.544276: validation loss: -0.6949
2022-07-08 16:49:31.578281: Average global foreground Dice: [0.7618]
2022-07-08 16:49:31.599880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:49:32.221406: Suus1 maybe_update_lr lr: 0.009693
2022-07-08 16:49:32.245873: saving best epoch checkpoint...
2022-07-08 16:49:32.343426: saving checkpoint...
2022-07-08 16:49:33.947863: done, saving took 1.68 seconds
2022-07-08 16:49:33.962503: This epoch took 77.565069 s

2022-07-08 16:49:33.964500: 
epoch:  17
2022-07-08 16:50:43.596225: train loss : -0.6927
2022-07-08 16:50:48.306129: validation loss: -0.6916
2022-07-08 16:50:48.348290: Average global foreground Dice: [0.759]
2022-07-08 16:50:48.360870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:50:49.249541: Suus1 maybe_update_lr lr: 0.009675
2022-07-08 16:50:49.281880: saving best epoch checkpoint...
2022-07-08 16:50:49.363132: saving checkpoint...
2022-07-08 16:50:51.133580: done, saving took 1.83 seconds
2022-07-08 16:50:51.149039: This epoch took 77.182730 s

2022-07-08 16:50:51.151081: 
epoch:  18
2022-07-08 16:52:01.325194: train loss : -0.6776
2022-07-08 16:52:06.265224: validation loss: -0.6840
2022-07-08 16:52:06.288869: Average global foreground Dice: [0.7477]
2022-07-08 16:52:06.318885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:52:06.936627: Suus1 maybe_update_lr lr: 0.009657
2022-07-08 16:52:06.954381: saving best epoch checkpoint...
2022-07-08 16:52:07.107997: saving checkpoint...
2022-07-08 16:52:08.773023: done, saving took 1.80 seconds
2022-07-08 16:52:08.787595: This epoch took 77.634624 s

2022-07-08 16:52:08.789529: 
epoch:  19
2022-07-08 16:53:21.009043: train loss : -0.6812
2022-07-08 16:53:26.270702: validation loss: -0.6820
2022-07-08 16:53:26.297965: Average global foreground Dice: [0.7483]
2022-07-08 16:53:26.313107: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:53:27.225533: Suus1 maybe_update_lr lr: 0.009639
2022-07-08 16:53:27.254344: saving best epoch checkpoint...
2022-07-08 16:53:27.368545: saving checkpoint...
2022-07-08 16:53:29.046947: done, saving took 1.76 seconds
2022-07-08 16:53:29.062014: This epoch took 80.270568 s

2022-07-08 16:53:29.064304: 
epoch:  20
2022-07-08 16:54:41.334983: train loss : -0.6944
2022-07-08 16:54:46.728475: validation loss: -0.7010
2022-07-08 16:54:46.746187: Average global foreground Dice: [0.7601]
2022-07-08 16:54:46.771873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:54:47.646005: Suus1 maybe_update_lr lr: 0.009621
2022-07-08 16:54:47.653739: saving best epoch checkpoint...
2022-07-08 16:54:47.744983: saving checkpoint...
2022-07-08 16:54:49.295027: done, saving took 1.62 seconds
2022-07-08 16:54:49.309296: This epoch took 80.242985 s

2022-07-08 16:54:49.311600: 
epoch:  21
2022-07-08 16:56:01.221094: train loss : -0.7023
2022-07-08 16:56:07.035401: validation loss: -0.6873
2022-07-08 16:56:07.057520: Average global foreground Dice: [0.7573]
2022-07-08 16:56:07.082299: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:56:07.936196: Suus1 maybe_update_lr lr: 0.009603
2022-07-08 16:56:07.956881: saving best epoch checkpoint...
2022-07-08 16:56:08.057393: saving checkpoint...
2022-07-08 16:56:09.526139: done, saving took 1.55 seconds
2022-07-08 16:56:09.540294: This epoch took 80.226628 s

2022-07-08 16:56:09.542204: 
epoch:  22
2022-07-08 16:57:19.884117: train loss : -0.7029
2022-07-08 16:57:25.253397: validation loss: -0.6955
2022-07-08 16:57:25.287311: Average global foreground Dice: [0.7645]
2022-07-08 16:57:25.305280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:57:26.006384: Suus1 maybe_update_lr lr: 0.009585
2022-07-08 16:57:26.032942: saving best epoch checkpoint...
2022-07-08 16:57:26.120580: saving checkpoint...
2022-07-08 16:57:27.919824: done, saving took 1.87 seconds
2022-07-08 16:57:27.934988: This epoch took 78.390860 s

2022-07-08 16:57:27.937232: 
epoch:  23
2022-07-08 16:58:38.232563: train loss : -0.6990
2022-07-08 16:58:43.305790: validation loss: -0.7175
2022-07-08 16:58:43.320870: Average global foreground Dice: [0.7787]
2022-07-08 16:58:43.360518: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:58:43.983547: Suus1 maybe_update_lr lr: 0.009567
2022-07-08 16:58:44.000641: saving best epoch checkpoint...
2022-07-08 16:58:44.084697: saving checkpoint...
2022-07-08 16:58:45.570022: done, saving took 1.54 seconds
2022-07-08 16:58:45.586009: This epoch took 77.646458 s

2022-07-08 16:58:45.588019: 
epoch:  24
2022-07-08 16:59:56.126799: train loss : -0.6932
2022-07-08 17:00:01.034526: validation loss: -0.6997
2022-07-08 17:00:01.077236: Average global foreground Dice: [0.763]
2022-07-08 17:00:01.111339: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:00:01.885816: Suus1 maybe_update_lr lr: 0.009549
2022-07-08 17:00:01.906882: saving best epoch checkpoint...
2022-07-08 17:00:01.979978: saving checkpoint...
2022-07-08 17:00:03.514882: done, saving took 1.59 seconds
2022-07-08 17:00:03.529651: This epoch took 77.939655 s

2022-07-08 17:00:03.531765: 
epoch:  25
2022-07-08 17:01:14.878824: train loss : -0.7102
2022-07-08 17:01:20.311312: validation loss: -0.7219
2022-07-08 17:01:20.350711: Average global foreground Dice: [0.7785]
2022-07-08 17:01:20.366863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:01:20.974910: Suus1 maybe_update_lr lr: 0.009531
2022-07-08 17:01:20.995846: saving best epoch checkpoint...
2022-07-08 17:01:21.104624: saving checkpoint...
2022-07-08 17:01:22.764980: done, saving took 1.74 seconds
2022-07-08 17:01:22.778920: This epoch took 79.244901 s

2022-07-08 17:01:22.780947: 
epoch:  26
2022-07-08 17:02:32.331439: train loss : -0.7136
2022-07-08 17:02:37.247266: validation loss: -0.6787
2022-07-08 17:02:37.280242: Average global foreground Dice: [0.7432]
2022-07-08 17:02:37.305736: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:02:37.909624: Suus1 maybe_update_lr lr: 0.009513
2022-07-08 17:02:37.930899: saving best epoch checkpoint...
2022-07-08 17:02:38.023701: saving checkpoint...
2022-07-08 17:02:39.975238: done, saving took 2.02 seconds
2022-07-08 17:02:39.989925: This epoch took 77.207011 s

2022-07-08 17:02:39.992251: 
epoch:  27
2022-07-08 17:03:53.442919: train loss : -0.7254
2022-07-08 17:03:58.354163: validation loss: -0.7027
2022-07-08 17:03:58.385378: Average global foreground Dice: [0.7639]
2022-07-08 17:03:58.405113: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:03:59.138427: Suus1 maybe_update_lr lr: 0.009495
2022-07-08 17:03:59.166306: saving best epoch checkpoint...
2022-07-08 17:03:59.215502: saving checkpoint...
2022-07-08 17:04:00.836055: done, saving took 1.67 seconds
2022-07-08 17:04:00.849475: This epoch took 80.855080 s

2022-07-08 17:04:00.851456: 
epoch:  28
2022-07-08 17:05:12.119690: train loss : -0.7227
2022-07-08 17:05:17.092215: validation loss: -0.7216
2022-07-08 17:05:17.113904: Average global foreground Dice: [0.7842]
2022-07-08 17:05:17.116359: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:05:18.186378: Suus1 maybe_update_lr lr: 0.009476
2022-07-08 17:05:18.218921: saving best epoch checkpoint...
2022-07-08 17:05:18.307087: saving checkpoint...
2022-07-08 17:05:19.764836: done, saving took 1.51 seconds
2022-07-08 17:05:19.778351: This epoch took 78.924949 s

2022-07-08 17:05:19.780577: 
epoch:  29
2022-07-08 17:06:31.125727: train loss : -0.7088
2022-07-08 17:06:36.283507: validation loss: -0.7073
2022-07-08 17:06:36.328736: Average global foreground Dice: [0.7714]
2022-07-08 17:06:36.361884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:06:37.175133: Suus1 maybe_update_lr lr: 0.009458
2022-07-08 17:06:37.211237: saving best epoch checkpoint...
2022-07-08 17:06:37.279483: saving checkpoint...
2022-07-08 17:06:38.960331: done, saving took 1.74 seconds
2022-07-08 17:06:38.974117: This epoch took 79.191483 s

2022-07-08 17:06:38.976161: 
epoch:  30
2022-07-08 17:07:50.217938: train loss : -0.7154
2022-07-08 17:07:55.234506: validation loss: -0.7232
2022-07-08 17:07:55.238378: Average global foreground Dice: [0.7875]
2022-07-08 17:07:55.264981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:07:55.871573: Suus1 maybe_update_lr lr: 0.00944
2022-07-08 17:07:55.892905: saving best epoch checkpoint...
2022-07-08 17:07:55.955376: saving checkpoint...
2022-07-08 17:07:57.391621: done, saving took 1.48 seconds
2022-07-08 17:07:57.406676: This epoch took 78.428392 s

2022-07-08 17:07:57.409101: 
epoch:  31
2022-07-08 17:09:07.631183: train loss : -0.7220
2022-07-08 17:09:12.271349: validation loss: -0.7224
2022-07-08 17:09:12.314386: Average global foreground Dice: [0.7815]
2022-07-08 17:09:12.343321: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:09:13.057577: Suus1 maybe_update_lr lr: 0.009422
2022-07-08 17:09:13.077172: saving best epoch checkpoint...
2022-07-08 17:09:13.166200: saving checkpoint...
2022-07-08 17:09:14.824416: done, saving took 1.73 seconds
2022-07-08 17:09:14.839363: This epoch took 77.427909 s

2022-07-08 17:09:14.841687: 
epoch:  32
2022-07-08 17:10:25.463985: train loss : -0.7191
2022-07-08 17:10:30.971325: validation loss: -0.7311
2022-07-08 17:10:30.994510: Average global foreground Dice: [0.7939]
2022-07-08 17:10:31.001129: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:10:31.781833: Suus1 maybe_update_lr lr: 0.009404
2022-07-08 17:10:31.805939: saving best epoch checkpoint...
2022-07-08 17:10:31.951981: saving checkpoint...
2022-07-08 17:10:33.509278: done, saving took 1.65 seconds
2022-07-08 17:10:33.523016: This epoch took 78.679268 s

2022-07-08 17:10:33.525008: 
epoch:  33
2022-07-08 17:11:43.663101: train loss : -0.7335
2022-07-08 17:11:49.237288: validation loss: -0.7168
2022-07-08 17:11:49.288283: Average global foreground Dice: [0.7759]
2022-07-08 17:11:49.304053: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:11:50.076613: Suus1 maybe_update_lr lr: 0.009386
2022-07-08 17:11:50.097892: saving best epoch checkpoint...
2022-07-08 17:11:50.213173: saving checkpoint...
2022-07-08 17:11:51.955971: done, saving took 1.84 seconds
2022-07-08 17:11:51.970890: This epoch took 78.443896 s

2022-07-08 17:11:51.973200: 
epoch:  34
2022-07-08 17:13:03.465734: train loss : -0.7077
2022-07-08 17:13:08.669194: validation loss: -0.7189
2022-07-08 17:13:08.702308: Average global foreground Dice: [0.7773]
2022-07-08 17:13:08.711205: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:13:09.481812: Suus1 maybe_update_lr lr: 0.009368
2022-07-08 17:13:09.502886: saving best epoch checkpoint...
2022-07-08 17:13:09.658204: saving checkpoint...
2022-07-08 17:13:11.447191: done, saving took 1.92 seconds
2022-07-08 17:13:11.463337: This epoch took 79.488063 s

2022-07-08 17:13:11.465617: 
epoch:  35
2022-07-08 17:14:22.016149: train loss : -0.7209
2022-07-08 17:14:27.023757: validation loss: -0.7261
2022-07-08 17:14:27.069211: Average global foreground Dice: [0.7826]
2022-07-08 17:14:27.085848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:14:27.724530: Suus1 maybe_update_lr lr: 0.00935
2022-07-08 17:14:27.727145: saving best epoch checkpoint...
2022-07-08 17:14:27.829993: saving checkpoint...
2022-07-08 17:14:29.563591: done, saving took 1.80 seconds
2022-07-08 17:14:29.579498: This epoch took 78.111828 s

2022-07-08 17:14:29.581606: 
epoch:  36
2022-07-08 17:15:41.049776: train loss : -0.7215
2022-07-08 17:15:45.849458: validation loss: -0.7070
2022-07-08 17:15:45.895338: Average global foreground Dice: [0.7722]
2022-07-08 17:15:45.908827: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:15:47.098396: Suus1 maybe_update_lr lr: 0.009331
2022-07-08 17:15:47.130891: saving best epoch checkpoint...
2022-07-08 17:15:47.220671: saving checkpoint...
2022-07-08 17:15:48.677846: done, saving took 1.52 seconds
2022-07-08 17:15:48.691808: This epoch took 79.108168 s

2022-07-08 17:15:48.693871: 
epoch:  37
2022-07-08 17:16:59.031395: train loss : -0.7470
2022-07-08 17:17:03.608247: validation loss: -0.7308
2022-07-08 17:17:03.652241: Average global foreground Dice: [0.7883]
2022-07-08 17:17:03.673887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:17:04.368554: Suus1 maybe_update_lr lr: 0.009313
2022-07-08 17:17:04.399877: saving best epoch checkpoint...
2022-07-08 17:17:04.523175: saving checkpoint...
2022-07-08 17:17:06.229748: done, saving took 1.81 seconds
2022-07-08 17:17:06.243386: This epoch took 77.547624 s

2022-07-08 17:17:06.245369: 
epoch:  38
2022-07-08 17:18:18.088177: train loss : -0.7303
2022-07-08 17:18:24.115328: validation loss: -0.7285
2022-07-08 17:18:24.143348: Average global foreground Dice: [0.7883]
2022-07-08 17:18:24.160868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:18:24.884688: Suus1 maybe_update_lr lr: 0.009295
2022-07-08 17:18:24.910281: saving best epoch checkpoint...
2022-07-08 17:18:25.033765: saving checkpoint...
2022-07-08 17:18:26.615524: done, saving took 1.66 seconds
2022-07-08 17:18:26.629339: This epoch took 80.382074 s

2022-07-08 17:18:26.631511: 
epoch:  39
2022-07-08 17:19:37.856771: train loss : -0.7337
2022-07-08 17:19:42.619699: validation loss: -0.7327
2022-07-08 17:19:42.634330: Average global foreground Dice: [0.79]
2022-07-08 17:19:42.654020: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:19:43.285997: Suus1 maybe_update_lr lr: 0.009277
2022-07-08 17:19:43.311579: saving best epoch checkpoint...
2022-07-08 17:19:43.415955: saving checkpoint...
2022-07-08 17:19:45.235704: done, saving took 1.90 seconds
2022-07-08 17:19:45.249604: This epoch took 78.616026 s

2022-07-08 17:19:45.252365: 
epoch:  40
2022-07-08 17:20:57.475743: train loss : -0.7383
2022-07-08 17:21:02.387263: validation loss: -0.7140
2022-07-08 17:21:02.422350: Average global foreground Dice: [0.7706]
2022-07-08 17:21:02.455863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:21:03.084994: Suus1 maybe_update_lr lr: 0.009259
2022-07-08 17:21:03.117903: saving best epoch checkpoint...
2022-07-08 17:21:03.217518: saving checkpoint...
2022-07-08 17:21:04.910405: done, saving took 1.77 seconds
2022-07-08 17:21:04.925242: This epoch took 79.670800 s

2022-07-08 17:21:04.927289: 
epoch:  41
2022-07-08 17:22:15.743295: train loss : -0.7458
2022-07-08 17:22:20.507140: validation loss: -0.7422
2022-07-08 17:22:20.529282: Average global foreground Dice: [0.7905]
2022-07-08 17:22:20.559961: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:22:21.107154: Suus1 maybe_update_lr lr: 0.009241
2022-07-08 17:22:21.109591: saving best epoch checkpoint...
2022-07-08 17:22:21.167219: saving checkpoint...
2022-07-08 17:22:22.959495: done, saving took 1.84 seconds
2022-07-08 17:22:22.973952: This epoch took 78.044671 s

2022-07-08 17:22:22.975909: 
epoch:  42
2022-07-08 17:23:34.373725: train loss : -0.7484
2022-07-08 17:23:39.595858: validation loss: -0.7233
2022-07-08 17:23:39.629285: Average global foreground Dice: [0.7774]
2022-07-08 17:23:39.661858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:23:40.443486: Suus1 maybe_update_lr lr: 0.009223
2022-07-08 17:23:40.464890: saving best epoch checkpoint...
2022-07-08 17:23:40.543033: saving checkpoint...
2022-07-08 17:23:42.178200: done, saving took 1.69 seconds
2022-07-08 17:23:42.191804: This epoch took 79.213982 s

2022-07-08 17:23:42.193960: 
epoch:  43
2022-07-08 17:24:53.303242: train loss : -0.7513
2022-07-08 17:24:58.047997: validation loss: -0.7501
2022-07-08 17:24:58.080609: Average global foreground Dice: [0.8037]
2022-07-08 17:24:58.107002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:24:58.728518: Suus1 maybe_update_lr lr: 0.009204
2022-07-08 17:24:58.756709: saving best epoch checkpoint...
2022-07-08 17:24:58.916009: saving checkpoint...
2022-07-08 17:25:00.420437: done, saving took 1.64 seconds
2022-07-08 17:25:00.435366: This epoch took 78.239424 s

2022-07-08 17:25:00.437420: 
epoch:  44
2022-07-08 17:26:11.156777: train loss : -0.7428
2022-07-08 17:26:16.001709: validation loss: -0.7113
2022-07-08 17:26:16.040210: Average global foreground Dice: [0.7762]
2022-07-08 17:26:16.080891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:26:16.914932: Suus1 maybe_update_lr lr: 0.009186
2022-07-08 17:26:16.933894: saving best epoch checkpoint...
2022-07-08 17:26:16.996140: saving checkpoint...
2022-07-08 17:26:18.729007: done, saving took 1.78 seconds
2022-07-08 17:26:18.743831: This epoch took 78.304477 s

2022-07-08 17:26:18.746055: 
epoch:  45
2022-07-08 17:27:29.530971: train loss : -0.7426
2022-07-08 17:27:34.146090: validation loss: -0.7459
2022-07-08 17:27:34.173835: Average global foreground Dice: [0.8023]
2022-07-08 17:27:34.180067: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:27:34.815968: Suus1 maybe_update_lr lr: 0.009168
2022-07-08 17:27:34.835069: saving best epoch checkpoint...
2022-07-08 17:27:34.936334: saving checkpoint...
2022-07-08 17:27:36.583924: done, saving took 1.72 seconds
2022-07-08 17:27:36.597706: This epoch took 77.849680 s

2022-07-08 17:27:36.599675: 
epoch:  46
2022-07-08 17:28:47.845804: train loss : -0.7507
2022-07-08 17:28:52.737345: validation loss: -0.7338
2022-07-08 17:28:52.780257: Average global foreground Dice: [0.7908]
2022-07-08 17:28:52.795889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:28:53.500299: Suus1 maybe_update_lr lr: 0.00915
2022-07-08 17:28:53.502459: saving best epoch checkpoint...
2022-07-08 17:28:53.548918: saving checkpoint...
2022-07-08 17:28:54.999536: done, saving took 1.50 seconds
2022-07-08 17:28:55.013530: This epoch took 78.411978 s

2022-07-08 17:28:55.015607: 
epoch:  47
2022-07-08 17:30:05.772677: train loss : -0.7641
2022-07-08 17:30:12.126344: validation loss: -0.7376
2022-07-08 17:30:12.157360: Average global foreground Dice: [0.792]
2022-07-08 17:30:12.169852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:30:12.746196: Suus1 maybe_update_lr lr: 0.009132
2022-07-08 17:30:12.768281: saving best epoch checkpoint...
2022-07-08 17:30:12.899613: saving checkpoint...
2022-07-08 17:30:14.450925: done, saving took 1.65 seconds
2022-07-08 17:30:14.500865: This epoch took 79.483392 s

2022-07-08 17:30:14.513875: 
epoch:  48
2022-07-08 17:31:24.964172: train loss : -0.7629
2022-07-08 17:31:31.408115: validation loss: -0.7215
2022-07-08 17:31:31.448298: Average global foreground Dice: [0.7735]
2022-07-08 17:31:31.450575: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:31:32.346504: Suus1 maybe_update_lr lr: 0.009114
2022-07-08 17:31:32.378915: This epoch took 77.853776 s

2022-07-08 17:31:32.411866: 
epoch:  49
2022-07-08 17:32:42.875449: train loss : -0.7509
2022-07-08 17:32:47.549280: validation loss: -0.7195
2022-07-08 17:32:47.582227: Average global foreground Dice: [0.7809]
2022-07-08 17:32:47.620860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:32:48.346722: Suus1 maybe_update_lr lr: 0.009095
2022-07-08 17:32:48.384055: saving scheduled checkpoint file...
2022-07-08 17:32:48.487356: saving checkpoint...
2022-07-08 17:32:50.008471: done, saving took 1.60 seconds
2022-07-08 17:32:50.029194: done
2022-07-08 17:32:50.032072: This epoch took 77.598081 s

2022-07-08 17:32:50.034479: 
epoch:  50
2022-07-08 17:34:00.715790: train loss : -0.7633
2022-07-08 17:34:05.886843: validation loss: -0.7373
2022-07-08 17:34:05.913274: Average global foreground Dice: [0.7924]
2022-07-08 17:34:05.938861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:34:06.710442: Suus1 maybe_update_lr lr: 0.009077
2022-07-08 17:34:06.742895: saving best epoch checkpoint...
2022-07-08 17:34:06.838720: saving checkpoint...
2022-07-08 17:34:08.515134: done, saving took 1.74 seconds
2022-07-08 17:34:08.530989: This epoch took 78.494357 s

2022-07-08 17:34:08.532996: 
epoch:  51
2022-07-08 17:35:19.431901: train loss : -0.7601
2022-07-08 17:35:24.705542: validation loss: -0.7289
2022-07-08 17:35:24.736403: Average global foreground Dice: [0.7871]
2022-07-08 17:35:24.751802: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:35:25.302474: Suus1 maybe_update_lr lr: 0.009059
2022-07-08 17:35:25.337952: saving best epoch checkpoint...
2022-07-08 17:35:25.479371: saving checkpoint...
2022-07-08 17:35:27.064117: done, saving took 1.69 seconds
2022-07-08 17:35:27.078963: This epoch took 78.544077 s

2022-07-08 17:35:27.081113: 
epoch:  52
2022-07-08 17:36:36.905788: train loss : -0.7677
2022-07-08 17:36:41.771043: validation loss: -0.7569
2022-07-08 17:36:41.785805: Average global foreground Dice: [0.8098]
2022-07-08 17:36:41.809250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:36:42.679644: Suus1 maybe_update_lr lr: 0.009041
2022-07-08 17:36:42.692903: saving best epoch checkpoint...
2022-07-08 17:36:42.790661: saving checkpoint...
2022-07-08 17:36:44.440903: done, saving took 1.70 seconds
2022-07-08 17:36:44.455075: This epoch took 77.371847 s

2022-07-08 17:36:44.457080: 
epoch:  53
2022-07-08 17:37:55.567988: train loss : -0.7688
2022-07-08 17:38:00.763278: validation loss: -0.7408
2022-07-08 17:38:00.786313: Average global foreground Dice: [0.7931]
2022-07-08 17:38:00.817042: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:38:01.555857: Suus1 maybe_update_lr lr: 0.009023
2022-07-08 17:38:01.576879: saving best epoch checkpoint...
2022-07-08 17:38:01.691877: saving checkpoint...
2022-07-08 17:38:03.477031: done, saving took 1.86 seconds
2022-07-08 17:38:03.491203: This epoch took 79.031893 s

2022-07-08 17:38:03.493346: 
epoch:  54
2022-07-08 17:39:13.751913: train loss : -0.7698
2022-07-08 17:39:19.154487: validation loss: -0.7452
2022-07-08 17:39:19.196913: Average global foreground Dice: [0.8016]
2022-07-08 17:39:19.209360: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:39:19.992811: Suus1 maybe_update_lr lr: 0.009004
2022-07-08 17:39:20.022166: saving best epoch checkpoint...
2022-07-08 17:39:20.150837: saving checkpoint...
2022-07-08 17:39:21.779656: done, saving took 1.72 seconds
2022-07-08 17:39:21.793271: This epoch took 78.297791 s

2022-07-08 17:39:21.795424: 
epoch:  55
2022-07-08 17:40:32.120634: train loss : -0.7727
2022-07-08 17:40:37.108372: validation loss: -0.7397
2022-07-08 17:40:37.124294: Average global foreground Dice: [0.796]
2022-07-08 17:40:37.140692: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:40:37.928368: Suus1 maybe_update_lr lr: 0.008986
2022-07-08 17:40:37.942883: saving best epoch checkpoint...
2022-07-08 17:40:38.083681: saving checkpoint...
2022-07-08 17:40:39.591264: done, saving took 1.61 seconds
2022-07-08 17:40:39.605406: This epoch took 77.807986 s

2022-07-08 17:40:39.607495: 
epoch:  56
2022-07-08 17:41:51.718167: train loss : -0.7680
2022-07-08 17:41:57.274927: validation loss: -0.7400
2022-07-08 17:41:57.278301: Average global foreground Dice: [0.7965]
2022-07-08 17:41:57.303290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:41:58.100726: Suus1 maybe_update_lr lr: 0.008968
2022-07-08 17:41:58.122876: saving best epoch checkpoint...
2022-07-08 17:41:58.196391: saving checkpoint...
2022-07-08 17:41:59.724114: done, saving took 1.58 seconds
2022-07-08 17:41:59.738484: This epoch took 80.129059 s

2022-07-08 17:41:59.740550: 
epoch:  57
2022-07-08 17:43:08.639783: train loss : -0.7759
2022-07-08 17:43:13.408575: validation loss: -0.7406
2022-07-08 17:43:13.439431: Average global foreground Dice: [0.7924]
2022-07-08 17:43:13.476190: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:43:14.056659: Suus1 maybe_update_lr lr: 0.00895
2022-07-08 17:43:14.077887: saving best epoch checkpoint...
2022-07-08 17:43:14.171039: saving checkpoint...
2022-07-08 17:43:15.724852: done, saving took 1.63 seconds
2022-07-08 17:43:15.740043: This epoch took 75.997457 s

2022-07-08 17:43:15.742171: 
epoch:  58
2022-07-08 17:44:25.884874: train loss : -0.7644
2022-07-08 17:44:31.058654: validation loss: -0.7298
2022-07-08 17:44:31.090362: Average global foreground Dice: [0.783]
2022-07-08 17:44:31.118879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:44:31.859508: Suus1 maybe_update_lr lr: 0.008931
2022-07-08 17:44:31.891901: This epoch took 76.147742 s

2022-07-08 17:44:31.920865: 
epoch:  59
2022-07-08 17:45:44.098956: train loss : -0.7722
2022-07-08 17:45:49.258889: validation loss: -0.7604
2022-07-08 17:45:49.285495: Average global foreground Dice: [0.8084]
2022-07-08 17:45:49.304998: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:45:49.948998: Suus1 maybe_update_lr lr: 0.008913
2022-07-08 17:45:49.965228: saving best epoch checkpoint...
2022-07-08 17:45:50.109845: saving checkpoint...
2022-07-08 17:45:51.792752: done, saving took 1.79 seconds
2022-07-08 17:45:51.807960: This epoch took 79.866055 s

2022-07-08 17:45:51.810687: 
epoch:  60
2022-07-08 17:47:04.170968: train loss : -0.7787
2022-07-08 17:47:09.071395: validation loss: -0.7635
2022-07-08 17:47:09.112881: Average global foreground Dice: [0.812]
2022-07-08 17:47:09.128459: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:47:10.123425: Suus1 maybe_update_lr lr: 0.008895
2022-07-08 17:47:10.143880: saving best epoch checkpoint...
2022-07-08 17:47:10.256446: saving checkpoint...
2022-07-08 17:47:11.759592: done, saving took 1.59 seconds
2022-07-08 17:47:11.773919: This epoch took 79.961217 s

2022-07-08 17:47:11.775988: 
epoch:  61
2022-07-08 17:48:22.123075: train loss : -0.7711
2022-07-08 17:48:27.138705: validation loss: -0.7527
2022-07-08 17:48:27.175392: Average global foreground Dice: [0.8056]
2022-07-08 17:48:27.196884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:48:27.855715: Suus1 maybe_update_lr lr: 0.008877
2022-07-08 17:48:27.875895: saving best epoch checkpoint...
2022-07-08 17:48:27.970635: saving checkpoint...
2022-07-08 17:48:29.418241: done, saving took 1.51 seconds
2022-07-08 17:48:29.433168: This epoch took 77.655145 s

2022-07-08 17:48:29.435426: 
epoch:  62
2022-07-08 17:49:38.647078: train loss : -0.7660
2022-07-08 17:49:43.711306: validation loss: -0.7345
2022-07-08 17:49:43.744305: Average global foreground Dice: [0.788]
2022-07-08 17:49:43.771875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:49:44.461589: Suus1 maybe_update_lr lr: 0.008859
2022-07-08 17:49:44.468933: This epoch took 75.031504 s

2022-07-08 17:49:44.479867: 
epoch:  63
2022-07-08 17:50:55.507079: train loss : -0.7777
2022-07-08 17:51:00.411569: validation loss: -0.7418
2022-07-08 17:51:00.444317: Average global foreground Dice: [0.7955]
2022-07-08 17:51:00.468871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:51:01.363767: Suus1 maybe_update_lr lr: 0.00884
2022-07-08 17:51:01.394910: This epoch took 76.890353 s

2022-07-08 17:51:01.428384: 
epoch:  64
2022-07-08 17:52:13.037388: train loss : -0.7815
2022-07-08 17:52:17.911460: validation loss: -0.7560
2022-07-08 17:52:17.948226: Average global foreground Dice: [0.8088]
2022-07-08 17:52:17.960113: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:52:18.780677: Suus1 maybe_update_lr lr: 0.008822
2022-07-08 17:52:18.783360: saving best epoch checkpoint...
2022-07-08 17:52:18.863019: saving checkpoint...
2022-07-08 17:52:20.551960: done, saving took 1.75 seconds
2022-07-08 17:52:20.567444: This epoch took 79.114224 s

2022-07-08 17:52:20.569395: 
epoch:  65
2022-07-08 17:53:31.617520: train loss : -0.7739
2022-07-08 17:53:36.548584: validation loss: -0.7485
2022-07-08 17:53:36.579417: Average global foreground Dice: [0.8039]
2022-07-08 17:53:36.603755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:53:37.382583: Suus1 maybe_update_lr lr: 0.008804
2022-07-08 17:53:37.396908: saving best epoch checkpoint...
2022-07-08 17:53:37.511009: saving checkpoint...
2022-07-08 17:53:39.084770: done, saving took 1.67 seconds
2022-07-08 17:53:39.100605: This epoch took 78.529274 s

2022-07-08 17:53:39.102801: 
epoch:  66
2022-07-08 17:54:50.384859: train loss : -0.7717
2022-07-08 17:54:55.442426: validation loss: -0.7420
2022-07-08 17:54:55.468282: Average global foreground Dice: [0.7928]
2022-07-08 17:54:55.497537: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:54:56.042178: Suus1 maybe_update_lr lr: 0.008785
2022-07-08 17:54:56.069921: This epoch took 76.965120 s

2022-07-08 17:54:56.094891: 
epoch:  67
2022-07-08 17:56:08.222958: train loss : -0.7759
2022-07-08 17:56:13.035606: validation loss: -0.7692
2022-07-08 17:56:13.067073: Average global foreground Dice: [0.8192]
2022-07-08 17:56:13.085636: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:56:13.932266: Suus1 maybe_update_lr lr: 0.008767
2022-07-08 17:56:13.948757: saving best epoch checkpoint...
2022-07-08 17:56:14.063413: saving checkpoint...
2022-07-08 17:56:15.976785: done, saving took 2.03 seconds
2022-07-08 17:56:15.994181: This epoch took 79.866301 s

2022-07-08 17:56:15.996488: 
epoch:  68
2022-07-08 17:57:26.133290: train loss : -0.7820
2022-07-08 17:57:31.387308: validation loss: -0.7368
2022-07-08 17:57:31.405215: Average global foreground Dice: [0.7888]
2022-07-08 17:57:31.425741: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:57:32.321710: Suus1 maybe_update_lr lr: 0.008749
2022-07-08 17:57:32.346924: This epoch took 76.348204 s

2022-07-08 17:57:32.378159: 
epoch:  69
2022-07-08 17:58:43.304256: train loss : -0.7846
2022-07-08 17:58:48.701384: validation loss: -0.7735
2022-07-08 17:58:48.735968: Average global foreground Dice: [0.8216]
2022-07-08 17:58:48.750613: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:58:49.456100: Suus1 maybe_update_lr lr: 0.008731
2022-07-08 17:58:49.458619: saving best epoch checkpoint...
2022-07-08 17:58:49.516473: saving checkpoint...
2022-07-08 17:58:51.042771: done, saving took 1.58 seconds
2022-07-08 17:58:51.056700: This epoch took 78.639840 s

2022-07-08 17:58:51.058732: 
epoch:  70
2022-07-08 18:00:01.727307: train loss : -0.7839
2022-07-08 18:00:06.432459: validation loss: -0.7411
2022-07-08 18:00:06.468244: Average global foreground Dice: [0.7972]
2022-07-08 18:00:06.489868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:00:07.092036: Suus1 maybe_update_lr lr: 0.008712
2022-07-08 18:00:07.139957: This epoch took 76.079354 s

2022-07-08 18:00:07.169292: 
epoch:  71
2022-07-08 18:01:19.500620: train loss : -0.7897
2022-07-08 18:01:25.251337: validation loss: -0.7531
2022-07-08 18:01:25.274541: Average global foreground Dice: [0.8022]
2022-07-08 18:01:25.282025: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:01:25.925335: Suus1 maybe_update_lr lr: 0.008694
2022-07-08 18:01:25.947895: saving best epoch checkpoint...
2022-07-08 18:01:26.047836: saving checkpoint...
2022-07-08 18:01:27.486956: done, saving took 1.52 seconds
2022-07-08 18:01:27.503058: This epoch took 80.319186 s

2022-07-08 18:01:27.505120: 
epoch:  72
2022-07-08 18:02:38.785157: train loss : -0.7909
2022-07-08 18:02:43.749063: validation loss: -0.7588
2022-07-08 18:02:43.784343: Average global foreground Dice: [0.8121]
2022-07-08 18:02:43.822870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:02:44.616438: Suus1 maybe_update_lr lr: 0.008676
2022-07-08 18:02:44.621114: saving best epoch checkpoint...
2022-07-08 18:02:44.747091: saving checkpoint...
2022-07-08 18:02:46.654747: done, saving took 2.01 seconds
2022-07-08 18:02:46.670898: This epoch took 79.163695 s

2022-07-08 18:02:46.672839: 
epoch:  73
2022-07-08 18:03:57.880869: train loss : -0.7858
2022-07-08 18:04:02.976146: validation loss: -0.7641
2022-07-08 18:04:03.007458: Average global foreground Dice: [0.8139]
2022-07-08 18:04:03.038084: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:04:03.802583: Suus1 maybe_update_lr lr: 0.008658
2022-07-08 18:04:03.823205: saving best epoch checkpoint...
2022-07-08 18:04:04.050074: saving checkpoint...
2022-07-08 18:04:05.887414: done, saving took 2.01 seconds
2022-07-08 18:04:05.903890: This epoch took 79.229154 s

2022-07-08 18:04:05.906253: 
epoch:  74
2022-07-08 18:05:17.290099: train loss : -0.7919
2022-07-08 18:05:22.494473: validation loss: -0.7557
2022-07-08 18:05:22.536349: Average global foreground Dice: [0.8065]
2022-07-08 18:05:22.554188: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:05:23.353522: Suus1 maybe_update_lr lr: 0.008639
2022-07-08 18:05:23.386031: saving best epoch checkpoint...
2022-07-08 18:05:23.474636: saving checkpoint...
2022-07-08 18:05:25.072864: done, saving took 1.66 seconds
2022-07-08 18:05:25.086867: This epoch took 79.178406 s

2022-07-08 18:05:25.089052: 
epoch:  75
2022-07-08 18:06:37.197269: train loss : -0.7932
2022-07-08 18:06:42.582255: validation loss: -0.7529
2022-07-08 18:06:42.605304: Average global foreground Dice: [0.8071]
2022-07-08 18:06:42.624904: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:06:43.374210: Suus1 maybe_update_lr lr: 0.008621
2022-07-08 18:06:43.404231: saving best epoch checkpoint...
2022-07-08 18:06:43.546979: saving checkpoint...
2022-07-08 18:06:45.241955: done, saving took 1.80 seconds
2022-07-08 18:06:45.256706: This epoch took 80.165538 s

2022-07-08 18:06:45.258974: 
epoch:  76
2022-07-08 18:07:55.857832: train loss : -0.7811
2022-07-08 18:08:00.998210: validation loss: -0.7616
2022-07-08 18:08:01.001936: Average global foreground Dice: [0.8135]
2022-07-08 18:08:01.009630: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:08:01.654933: Suus1 maybe_update_lr lr: 0.008603
2022-07-08 18:08:01.668749: saving best epoch checkpoint...
2022-07-08 18:08:01.795162: saving checkpoint...
2022-07-08 18:08:03.376196: done, saving took 1.68 seconds
2022-07-08 18:08:03.390083: This epoch took 78.128786 s

2022-07-08 18:08:03.392102: 
epoch:  77
2022-07-08 18:09:13.582066: train loss : -0.7831
2022-07-08 18:09:19.051955: validation loss: -0.7476
2022-07-08 18:09:19.076364: Average global foreground Dice: [0.8001]
2022-07-08 18:09:19.098700: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:09:19.612444: Suus1 maybe_update_lr lr: 0.008584
2022-07-08 18:09:19.639907: This epoch took 76.245882 s

2022-07-08 18:09:19.650235: 
epoch:  78
2022-07-08 18:10:31.796179: train loss : -0.7905
2022-07-08 18:10:37.208082: validation loss: -0.7475
2022-07-08 18:10:37.239299: Average global foreground Dice: [0.798]
2022-07-08 18:10:37.254887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:10:37.975471: Suus1 maybe_update_lr lr: 0.008566
2022-07-08 18:10:37.996904: This epoch took 78.333043 s

2022-07-08 18:10:38.018872: 
epoch:  79
2022-07-08 18:11:50.343174: train loss : -0.7914
2022-07-08 18:11:55.294362: validation loss: -0.7564
2022-07-08 18:11:55.313637: Average global foreground Dice: [0.8069]
2022-07-08 18:11:55.384881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:11:56.038538: Suus1 maybe_update_lr lr: 0.008548
2022-07-08 18:11:56.059945: This epoch took 78.019049 s

2022-07-08 18:11:56.081919: 
epoch:  80
2022-07-08 18:13:07.746163: train loss : -0.7881
2022-07-08 18:13:12.790208: validation loss: -0.7694
2022-07-08 18:13:12.793271: Average global foreground Dice: [0.8168]
2022-07-08 18:13:12.795275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:13:13.362194: Suus1 maybe_update_lr lr: 0.008529
2022-07-08 18:13:13.386935: saving best epoch checkpoint...
2022-07-08 18:13:13.517066: saving checkpoint...
2022-07-08 18:13:15.208855: done, saving took 1.80 seconds
2022-07-08 18:13:15.223914: This epoch took 79.135602 s

2022-07-08 18:13:15.225889: 
epoch:  81
2022-07-08 18:14:25.987156: train loss : -0.7876
2022-07-08 18:14:30.755654: validation loss: -0.7529
2022-07-08 18:14:30.789289: Average global foreground Dice: [0.8047]
2022-07-08 18:14:30.809582: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:14:31.458270: Suus1 maybe_update_lr lr: 0.008511
2022-07-08 18:14:31.471477: This epoch took 76.243695 s

2022-07-08 18:14:31.489434: 
epoch:  82
2022-07-08 18:15:44.032610: train loss : -0.7912
2022-07-08 18:15:49.904224: validation loss: -0.7664
2022-07-08 18:15:49.939899: Average global foreground Dice: [0.8158]
2022-07-08 18:15:49.955707: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:15:50.882562: Suus1 maybe_update_lr lr: 0.008493
2022-07-08 18:15:50.890069: saving best epoch checkpoint...
2022-07-08 18:15:51.082750: saving checkpoint...
2022-07-08 18:15:52.722078: done, saving took 1.81 seconds
2022-07-08 18:15:52.738844: This epoch took 81.240327 s

2022-07-08 18:15:52.741149: 
epoch:  83
2022-07-08 18:17:03.626910: train loss : -0.7855
2022-07-08 18:17:08.593865: validation loss: -0.7503
2022-07-08 18:17:08.630327: Average global foreground Dice: [0.8037]
2022-07-08 18:17:08.649879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:17:09.257973: Suus1 maybe_update_lr lr: 0.008474
2022-07-08 18:17:09.289922: This epoch took 76.546748 s

2022-07-08 18:17:09.312532: 
epoch:  84
2022-07-08 18:18:21.036476: train loss : -0.7964
2022-07-08 18:18:26.441311: validation loss: -0.7613
2022-07-08 18:18:26.462152: Average global foreground Dice: [0.8133]
2022-07-08 18:18:26.478863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:18:27.253986: Suus1 maybe_update_lr lr: 0.008456
2022-07-08 18:18:27.284927: saving best epoch checkpoint...
2022-07-08 18:18:27.444812: saving checkpoint...
2022-07-08 18:18:29.060436: done, saving took 1.74 seconds
2022-07-08 18:18:29.079496: This epoch took 79.754836 s

2022-07-08 18:18:29.081947: 
epoch:  85
2022-07-08 18:19:39.443643: train loss : -0.7982
2022-07-08 18:19:44.375859: validation loss: -0.7601
2022-07-08 18:19:44.417032: Average global foreground Dice: [0.8156]
2022-07-08 18:19:44.447881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:19:45.074819: Suus1 maybe_update_lr lr: 0.008438
2022-07-08 18:19:45.102906: saving best epoch checkpoint...
2022-07-08 18:19:45.262957: saving checkpoint...
2022-07-08 18:19:47.056260: done, saving took 1.93 seconds
2022-07-08 18:19:47.073265: This epoch took 77.989051 s

2022-07-08 18:19:47.075467: 
epoch:  86
2022-07-08 18:20:58.372319: train loss : -0.8003
2022-07-08 18:21:03.689062: validation loss: -0.7587
2022-07-08 18:21:03.722566: Average global foreground Dice: [0.8122]
2022-07-08 18:21:03.742325: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:21:04.612578: Suus1 maybe_update_lr lr: 0.008419
2022-07-08 18:21:04.628903: saving best epoch checkpoint...
2022-07-08 18:21:04.718246: saving checkpoint...
2022-07-08 18:21:06.313162: done, saving took 1.68 seconds
2022-07-08 18:21:06.329626: This epoch took 79.252037 s

2022-07-08 18:21:06.331804: 
epoch:  87
2022-07-08 18:22:17.750367: train loss : -0.8021
2022-07-08 18:22:23.800829: validation loss: -0.7624
2022-07-08 18:22:23.806461: Average global foreground Dice: [0.8128]
2022-07-08 18:22:23.836879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:22:24.824324: Suus1 maybe_update_lr lr: 0.008401
2022-07-08 18:22:24.848899: saving best epoch checkpoint...
2022-07-08 18:22:24.999368: saving checkpoint...
2022-07-08 18:22:26.545660: done, saving took 1.65 seconds
2022-07-08 18:22:26.561239: This epoch took 80.227367 s

2022-07-08 18:22:26.563457: 
epoch:  88
2022-07-08 18:23:37.720299: train loss : -0.7998
2022-07-08 18:23:43.023762: validation loss: -0.7494
2022-07-08 18:23:43.057263: Average global foreground Dice: [0.803]
2022-07-08 18:23:43.084898: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:23:43.737930: Suus1 maybe_update_lr lr: 0.008383
2022-07-08 18:23:43.758910: This epoch took 77.193540 s

2022-07-08 18:23:43.782849: 
epoch:  89
2022-07-08 18:24:54.940323: train loss : -0.8049
2022-07-08 18:25:00.304235: validation loss: -0.7664
2022-07-08 18:25:00.338262: Average global foreground Dice: [0.8138]
2022-07-08 18:25:00.367654: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:25:01.104925: Suus1 maybe_update_lr lr: 0.008364
2022-07-08 18:25:01.119929: saving best epoch checkpoint...
2022-07-08 18:25:01.236177: saving checkpoint...
2022-07-08 18:25:03.408162: done, saving took 2.27 seconds
2022-07-08 18:25:03.423656: This epoch took 79.620521 s

2022-07-08 18:25:03.425868: 
epoch:  90
2022-07-08 18:26:12.584546: train loss : -0.7988
2022-07-08 18:26:18.371809: validation loss: -0.7522
2022-07-08 18:26:18.401247: Average global foreground Dice: [0.8027]
2022-07-08 18:26:18.416887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:26:19.108851: Suus1 maybe_update_lr lr: 0.008346
2022-07-08 18:26:19.151885: This epoch took 75.723899 s

2022-07-08 18:26:19.191637: 
epoch:  91
2022-07-08 18:27:30.627547: train loss : -0.7883
2022-07-08 18:27:35.439809: validation loss: -0.7650
2022-07-08 18:27:35.471236: Average global foreground Dice: [0.8117]
2022-07-08 18:27:35.485402: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:27:36.387351: Suus1 maybe_update_lr lr: 0.008328
2022-07-08 18:27:36.396483: This epoch took 77.197535 s

2022-07-08 18:27:36.416698: 
epoch:  92
2022-07-08 18:28:47.070090: train loss : -0.8043
2022-07-08 18:28:52.091846: validation loss: -0.7452
2022-07-08 18:28:52.108784: Average global foreground Dice: [0.7949]
2022-07-08 18:28:52.140924: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:28:52.927105: Suus1 maybe_update_lr lr: 0.008309
2022-07-08 18:28:52.944876: This epoch took 76.501677 s

2022-07-08 18:28:52.961545: 
epoch:  93
2022-07-08 18:30:04.134824: train loss : -0.8092
2022-07-08 18:30:09.034658: validation loss: -0.7717
2022-07-08 18:30:09.059754: Average global foreground Dice: [0.8185]
2022-07-08 18:30:09.075882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:30:09.868300: Suus1 maybe_update_lr lr: 0.008291
2022-07-08 18:30:09.874136: This epoch took 76.904401 s

2022-07-08 18:30:09.912448: 
epoch:  94
2022-07-08 18:31:20.434772: train loss : -0.8109
2022-07-08 18:31:25.786676: validation loss: -0.7568
2022-07-08 18:31:25.819066: Average global foreground Dice: [0.8039]
2022-07-08 18:31:25.829310: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:31:26.503851: Suus1 maybe_update_lr lr: 0.008272
2022-07-08 18:31:26.533923: This epoch took 76.575061 s

2022-07-08 18:31:26.554020: 
epoch:  95
2022-07-08 18:32:36.572892: train loss : -0.8063
2022-07-08 18:32:41.485135: validation loss: -0.7673
2022-07-08 18:32:41.513585: Average global foreground Dice: [0.8122]
2022-07-08 18:32:41.533070: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:32:42.439395: Suus1 maybe_update_lr lr: 0.008254
2022-07-08 18:32:42.461901: This epoch took 75.888043 s

2022-07-08 18:32:42.494861: 
epoch:  96
2022-07-08 18:33:54.636688: train loss : -0.7988
2022-07-08 18:33:59.641982: validation loss: -0.7703
2022-07-08 18:33:59.666822: Average global foreground Dice: [0.8172]
2022-07-08 18:33:59.684283: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:34:00.275948: Suus1 maybe_update_lr lr: 0.008236
2022-07-08 18:34:00.304421: saving best epoch checkpoint...
2022-07-08 18:34:00.472186: saving checkpoint...
2022-07-08 18:34:02.149418: done, saving took 1.83 seconds
2022-07-08 18:34:02.166834: This epoch took 79.643961 s

2022-07-08 18:34:02.169309: 
epoch:  97
2022-07-08 18:35:12.769796: train loss : -0.8050
2022-07-08 18:35:17.543735: validation loss: -0.7680
2022-07-08 18:35:17.573277: Average global foreground Dice: [0.816]
2022-07-08 18:35:17.612480: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:35:18.626767: Suus1 maybe_update_lr lr: 0.008217
2022-07-08 18:35:18.650995: saving best epoch checkpoint...
2022-07-08 18:35:18.756900: saving checkpoint...
2022-07-08 18:35:20.440987: done, saving took 1.77 seconds
2022-07-08 18:35:20.472324: This epoch took 78.300712 s

2022-07-08 18:35:20.474575: 
epoch:  98
2022-07-08 18:36:31.744566: train loss : -0.8082
2022-07-08 18:36:37.090511: validation loss: -0.7659
2022-07-08 18:36:37.122599: Average global foreground Dice: [0.8178]
2022-07-08 18:36:37.142412: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:36:38.002254: Suus1 maybe_update_lr lr: 0.008199
2022-07-08 18:36:38.022962: saving best epoch checkpoint...
2022-07-08 18:36:38.094098: saving checkpoint...
2022-07-08 18:36:39.642829: done, saving took 1.61 seconds
2022-07-08 18:36:39.656178: This epoch took 79.179646 s

2022-07-08 18:36:39.658354: 
epoch:  99
2022-07-08 18:37:50.668858: train loss : -0.8081
2022-07-08 18:37:56.001069: validation loss: -0.7449
2022-07-08 18:37:56.023247: Average global foreground Dice: [0.7961]
2022-07-08 18:37:56.052889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:37:56.682191: Suus1 maybe_update_lr lr: 0.008181
2022-07-08 18:37:56.702862: saving scheduled checkpoint file...
2022-07-08 18:37:56.769471: saving checkpoint...
2022-07-08 18:37:58.269157: done, saving took 1.54 seconds
2022-07-08 18:37:58.285281: done
2022-07-08 18:37:58.287369: This epoch took 78.626941 s

2022-07-08 18:37:58.289316: 
epoch:  100
2022-07-08 18:39:08.907440: train loss : -0.7987
2022-07-08 18:39:13.789406: validation loss: -0.7634
2022-07-08 18:39:13.819296: Average global foreground Dice: [0.8097]
2022-07-08 18:39:13.850872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:39:14.608656: Suus1 maybe_update_lr lr: 0.008162
2022-07-08 18:39:14.629909: This epoch took 76.338690 s

2022-07-08 18:39:14.651855: 
epoch:  101
2022-07-08 18:40:27.415939: train loss : -0.7854
2022-07-08 18:40:32.830208: validation loss: -0.7569
2022-07-08 18:40:32.836520: Average global foreground Dice: [0.8096]
2022-07-08 18:40:32.849746: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:40:33.571992: Suus1 maybe_update_lr lr: 0.008144
2022-07-08 18:40:33.590918: This epoch took 78.915039 s

2022-07-08 18:40:33.612865: 
epoch:  102
2022-07-08 18:41:45.184894: train loss : -0.7974
2022-07-08 18:41:50.144715: validation loss: -0.7455
2022-07-08 18:41:50.178277: Average global foreground Dice: [0.7987]
2022-07-08 18:41:50.193104: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:41:50.869221: Suus1 maybe_update_lr lr: 0.008125
2022-07-08 18:41:50.888917: This epoch took 77.254032 s

2022-07-08 18:41:50.916404: 
epoch:  103
2022-07-08 18:43:03.439664: train loss : -0.8056
2022-07-08 18:43:08.228367: validation loss: -0.7741
2022-07-08 18:43:08.244147: Average global foreground Dice: [0.8215]
2022-07-08 18:43:08.263687: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:43:08.963512: Suus1 maybe_update_lr lr: 0.008107
2022-07-08 18:43:08.994909: This epoch took 78.066589 s

2022-07-08 18:43:09.022860: 
epoch:  104
2022-07-08 18:44:20.989445: train loss : -0.8140
2022-07-08 18:44:26.249191: validation loss: -0.7457
2022-07-08 18:44:26.284362: Average global foreground Dice: [0.7961]
2022-07-08 18:44:26.289099: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:44:26.978308: Suus1 maybe_update_lr lr: 0.008088
2022-07-08 18:44:27.007168: This epoch took 77.948955 s

2022-07-08 18:44:27.028856: 
epoch:  105
2022-07-08 18:45:38.406719: train loss : -0.8103
2022-07-08 18:45:43.614535: validation loss: -0.7603
2022-07-08 18:45:43.652298: Average global foreground Dice: [0.8116]
2022-07-08 18:45:43.673988: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:45:44.319264: Suus1 maybe_update_lr lr: 0.00807
2022-07-08 18:45:44.355892: This epoch took 77.301011 s

2022-07-08 18:45:44.375874: 
epoch:  106
2022-07-08 18:46:56.101947: train loss : -0.8094
2022-07-08 18:47:01.200936: validation loss: -0.7737
2022-07-08 18:47:01.237269: Average global foreground Dice: [0.8206]
2022-07-08 18:47:01.257611: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:47:01.908700: Suus1 maybe_update_lr lr: 0.008052
2022-07-08 18:47:01.916703: This epoch took 77.528692 s

2022-07-08 18:47:01.942008: 
epoch:  107
2022-07-08 18:48:13.457830: train loss : -0.8100
2022-07-08 18:48:19.779563: validation loss: -0.7806
2022-07-08 18:48:19.839265: Average global foreground Dice: [0.8244]
2022-07-08 18:48:19.845009: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:48:20.724324: Suus1 maybe_update_lr lr: 0.008033
2022-07-08 18:48:20.745954: saving best epoch checkpoint...
2022-07-08 18:48:20.848158: saving checkpoint...
2022-07-08 18:48:22.181227: done, saving took 1.42 seconds
2022-07-08 18:48:22.197937: This epoch took 80.230076 s

2022-07-08 18:48:22.200059: 
epoch:  108
2022-07-08 18:49:34.817537: train loss : -0.8148
2022-07-08 18:49:40.171804: validation loss: -0.7639
2022-07-08 18:49:40.205190: Average global foreground Dice: [0.8114]
2022-07-08 18:49:40.231112: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:49:40.918608: Suus1 maybe_update_lr lr: 0.008015
2022-07-08 18:49:40.925452: saving best epoch checkpoint...
2022-07-08 18:49:41.081540: saving checkpoint...
2022-07-08 18:49:42.545239: done, saving took 1.59 seconds
2022-07-08 18:49:42.562789: This epoch took 80.360802 s

2022-07-08 18:49:42.564821: 
epoch:  109
2022-07-08 18:50:52.581007: train loss : -0.8160
2022-07-08 18:50:57.657898: validation loss: -0.7692
2022-07-08 18:50:57.692313: Average global foreground Dice: [0.8142]
2022-07-08 18:50:57.723079: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:50:58.484644: Suus1 maybe_update_lr lr: 0.007996
2022-07-08 18:50:58.505895: saving best epoch checkpoint...
2022-07-08 18:50:58.717730: saving checkpoint...
2022-07-08 18:51:00.296509: done, saving took 1.75 seconds
2022-07-08 18:51:00.329791: This epoch took 77.762862 s

2022-07-08 18:51:00.332125: 
epoch:  110
2022-07-08 18:52:11.011600: train loss : -0.8188
2022-07-08 18:52:16.149563: validation loss: -0.7642
2022-07-08 18:52:16.180545: Average global foreground Dice: [0.8079]
2022-07-08 18:52:16.200279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:52:17.064440: Suus1 maybe_update_lr lr: 0.007978
2022-07-08 18:52:17.096893: This epoch took 76.762818 s

2022-07-08 18:52:17.138873: 
epoch:  111
2022-07-08 18:53:27.807484: train loss : -0.8166
2022-07-08 18:53:32.862180: validation loss: -0.7641
2022-07-08 18:53:32.870876: Average global foreground Dice: [0.8139]
2022-07-08 18:53:32.884674: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:53:33.805150: Suus1 maybe_update_lr lr: 0.007959
2022-07-08 18:53:33.836018: This epoch took 76.675272 s

2022-07-08 18:53:33.848819: 
epoch:  112
2022-07-08 18:54:44.389808: train loss : -0.8191
2022-07-08 18:54:49.742235: validation loss: -0.7711
2022-07-08 18:54:49.779330: Average global foreground Dice: [0.8186]
2022-07-08 18:54:49.798867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:54:50.408574: Suus1 maybe_update_lr lr: 0.007941
2022-07-08 18:54:50.430106: saving best epoch checkpoint...
2022-07-08 18:54:50.607918: saving checkpoint...
2022-07-08 18:54:52.469517: done, saving took 2.02 seconds
2022-07-08 18:54:52.489113: This epoch took 78.632789 s

2022-07-08 18:54:52.491642: 
epoch:  113
2022-07-08 18:56:02.378114: train loss : -0.8245
2022-07-08 18:56:08.039555: validation loss: -0.7683
2022-07-08 18:56:08.078770: Average global foreground Dice: [0.8162]
2022-07-08 18:56:08.107864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:56:08.755875: Suus1 maybe_update_lr lr: 0.007922
2022-07-08 18:56:08.787874: saving best epoch checkpoint...
2022-07-08 18:56:08.903446: saving checkpoint...
2022-07-08 18:56:10.602909: done, saving took 1.79 seconds
2022-07-08 18:56:10.619880: This epoch took 78.125868 s

2022-07-08 18:56:10.621913: 
epoch:  114
2022-07-08 18:57:21.807036: train loss : -0.8201
2022-07-08 18:57:27.394017: validation loss: -0.7654
2022-07-08 18:57:27.397252: Average global foreground Dice: [0.8187]
2022-07-08 18:57:27.399387: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:57:27.953508: Suus1 maybe_update_lr lr: 0.007904
2022-07-08 18:57:27.975203: saving best epoch checkpoint...
2022-07-08 18:57:28.083614: saving checkpoint...
2022-07-08 18:57:29.676691: done, saving took 1.69 seconds
2022-07-08 18:57:29.693037: This epoch took 79.069205 s

2022-07-08 18:57:29.695377: 
epoch:  115
2022-07-08 18:58:39.630851: train loss : -0.8239
2022-07-08 18:58:45.174038: validation loss: -0.7335
2022-07-08 18:58:45.202652: Average global foreground Dice: [0.7886]
2022-07-08 18:58:45.228805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:58:46.164565: Suus1 maybe_update_lr lr: 0.007885
2022-07-08 18:58:46.167076: This epoch took 76.469769 s

2022-07-08 18:58:46.187999: 
epoch:  116
2022-07-08 18:59:57.171376: train loss : -0.8247
2022-07-08 19:00:01.960646: validation loss: -0.7599
2022-07-08 19:00:01.963615: Average global foreground Dice: [0.8071]
2022-07-08 19:00:01.965670: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:00:02.577391: Suus1 maybe_update_lr lr: 0.007867
2022-07-08 19:00:02.599011: This epoch took 76.383137 s

2022-07-08 19:00:02.619062: 
epoch:  117
2022-07-08 19:01:13.757279: train loss : -0.8276
2022-07-08 19:01:19.006316: validation loss: -0.7547
2022-07-08 19:01:19.037327: Average global foreground Dice: [0.8034]
2022-07-08 19:01:19.049889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:01:19.782379: Suus1 maybe_update_lr lr: 0.007848
2022-07-08 19:01:19.804591: This epoch took 77.165434 s

2022-07-08 19:01:19.838305: 
epoch:  118
2022-07-08 19:02:32.078061: train loss : -0.8261
2022-07-08 19:02:37.108344: validation loss: -0.7702
2022-07-08 19:02:37.113997: Average global foreground Dice: [0.8188]
2022-07-08 19:02:37.120452: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:02:37.801212: Suus1 maybe_update_lr lr: 0.00783
2022-07-08 19:02:37.830352: This epoch took 77.987309 s

2022-07-08 19:02:37.850469: 
epoch:  119
2022-07-08 19:03:49.299155: train loss : -0.8244
2022-07-08 19:03:54.252637: validation loss: -0.7569
2022-07-08 19:03:54.286357: Average global foreground Dice: [0.8062]
2022-07-08 19:03:54.306188: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:03:55.052468: Suus1 maybe_update_lr lr: 0.007811
2022-07-08 19:03:55.056888: This epoch took 77.186242 s

2022-07-08 19:03:55.074769: 
epoch:  120
2022-07-08 19:05:05.810800: train loss : -0.8205
2022-07-08 19:05:11.390236: validation loss: -0.7673
2022-07-08 19:05:11.421124: Average global foreground Dice: [0.8122]
2022-07-08 19:05:11.441869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:05:12.228829: Suus1 maybe_update_lr lr: 0.007793
2022-07-08 19:05:12.261889: This epoch took 77.184875 s

2022-07-08 19:05:12.277847: 
epoch:  121
2022-07-08 19:06:24.433387: train loss : -0.8184
2022-07-08 19:06:29.691061: validation loss: -0.7721
2022-07-08 19:06:29.738260: Average global foreground Dice: [0.8202]
2022-07-08 19:06:29.763866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:06:30.570262: Suus1 maybe_update_lr lr: 0.007774
2022-07-08 19:06:30.597914: This epoch took 78.276022 s

2022-07-08 19:06:30.621845: 
epoch:  122
2022-07-08 19:07:42.457618: train loss : -0.8196
2022-07-08 19:07:47.809986: validation loss: -0.7570
2022-07-08 19:07:47.840245: Average global foreground Dice: [0.8031]
2022-07-08 19:07:47.855683: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:07:48.648396: Suus1 maybe_update_lr lr: 0.007756
2022-07-08 19:07:48.668059: This epoch took 78.026198 s

2022-07-08 19:07:48.676760: 
epoch:  123
2022-07-08 19:08:58.589981: train loss : -0.8201
2022-07-08 19:09:03.317155: validation loss: -0.7659
2022-07-08 19:09:03.335758: Average global foreground Dice: [0.8129]
2022-07-08 19:09:03.338109: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:09:04.063519: Suus1 maybe_update_lr lr: 0.007737
2022-07-08 19:09:04.080914: This epoch took 75.398402 s

2022-07-08 19:09:04.103870: 
epoch:  124
2022-07-08 19:10:16.217959: train loss : -0.8307
2022-07-08 19:10:21.693562: validation loss: -0.7627
2022-07-08 19:10:21.726337: Average global foreground Dice: [0.8113]
2022-07-08 19:10:21.746089: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:10:22.586292: Suus1 maybe_update_lr lr: 0.007719
2022-07-08 19:10:22.600951: This epoch took 78.476036 s

2022-07-08 19:10:22.616385: 
epoch:  125
2022-07-08 19:11:33.664753: train loss : -0.8297
2022-07-08 19:11:39.457619: validation loss: -0.7588
2022-07-08 19:11:39.504646: Average global foreground Dice: [0.8067]
2022-07-08 19:11:39.506866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:11:40.356112: Suus1 maybe_update_lr lr: 0.0077
2022-07-08 19:11:40.376908: This epoch took 77.745594 s

2022-07-08 19:11:40.383598: 
epoch:  126
2022-07-08 19:12:50.668608: train loss : -0.8312
2022-07-08 19:12:55.785281: validation loss: -0.7726
2022-07-08 19:12:55.815539: Average global foreground Dice: [0.8221]
2022-07-08 19:12:55.831809: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:12:56.527491: Suus1 maybe_update_lr lr: 0.007682
2022-07-08 19:12:56.543272: This epoch took 76.153015 s

2022-07-08 19:12:56.570923: 
epoch:  127
2022-07-08 19:14:08.545635: train loss : -0.8305
2022-07-08 19:14:13.446023: validation loss: -0.7589
2022-07-08 19:14:13.475320: Average global foreground Dice: [0.8111]
2022-07-08 19:14:13.496882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:14:14.335109: Suus1 maybe_update_lr lr: 0.007663
2022-07-08 19:14:14.352121: This epoch took 77.744239 s

2022-07-08 19:14:14.366524: 
epoch:  128
2022-07-08 19:15:25.961959: train loss : -0.8309
2022-07-08 19:15:30.720658: validation loss: -0.7590
2022-07-08 19:15:30.740305: Average global foreground Dice: [0.8099]
2022-07-08 19:15:30.785878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:15:31.347255: Suus1 maybe_update_lr lr: 0.007645
2022-07-08 19:15:31.365364: This epoch took 76.996051 s

2022-07-08 19:15:31.393876: 
epoch:  129
2022-07-08 19:16:42.732454: train loss : -0.8265
2022-07-08 19:16:47.667447: validation loss: -0.7868
2022-07-08 19:16:47.702252: Average global foreground Dice: [0.8325]
2022-07-08 19:16:47.734883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:16:48.497483: Suus1 maybe_update_lr lr: 0.007626
2022-07-08 19:16:48.540874: saving best epoch checkpoint...
2022-07-08 19:16:48.722298: saving checkpoint...
2022-07-08 19:16:50.366655: done, saving took 1.79 seconds
2022-07-08 19:16:50.394281: This epoch took 78.978406 s

2022-07-08 19:16:50.396629: 
epoch:  130
2022-07-08 19:18:01.507859: train loss : -0.8270
2022-07-08 19:18:06.183286: validation loss: -0.7722
2022-07-08 19:18:06.204111: Average global foreground Dice: [0.8217]
2022-07-08 19:18:06.220873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:18:06.710129: Suus1 maybe_update_lr lr: 0.007608
2022-07-08 19:18:06.731053: saving best epoch checkpoint...
2022-07-08 19:18:06.870646: saving checkpoint...
2022-07-08 19:18:08.612246: done, saving took 1.86 seconds
2022-07-08 19:18:08.629395: This epoch took 78.230490 s

2022-07-08 19:18:08.631507: 
epoch:  131
2022-07-08 19:19:18.729248: train loss : -0.8306
2022-07-08 19:19:23.215261: validation loss: -0.7844
2022-07-08 19:19:23.246848: Average global foreground Dice: [0.8296]
2022-07-08 19:19:23.250593: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:19:23.971753: Suus1 maybe_update_lr lr: 0.007589
2022-07-08 19:19:23.989927: saving best epoch checkpoint...
2022-07-08 19:19:24.086207: saving checkpoint...
2022-07-08 19:19:25.670978: done, saving took 1.66 seconds
2022-07-08 19:19:25.686503: This epoch took 77.053086 s

2022-07-08 19:19:25.688441: 
epoch:  132
2022-07-08 19:20:38.103696: train loss : -0.8191
2022-07-08 19:20:44.200446: validation loss: -0.7403
2022-07-08 19:20:44.208816: Average global foreground Dice: [0.7934]
2022-07-08 19:20:44.217863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:20:44.804845: Suus1 maybe_update_lr lr: 0.007571
2022-07-08 19:20:44.836920: This epoch took 79.146703 s

2022-07-08 19:20:44.858860: 
epoch:  133
2022-07-08 19:21:55.227337: train loss : -0.8234
2022-07-08 19:22:00.549729: validation loss: -0.7736
2022-07-08 19:22:00.581342: Average global foreground Dice: [0.8174]
2022-07-08 19:22:00.609901: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:22:01.477789: Suus1 maybe_update_lr lr: 0.007552
2022-07-08 19:22:01.487655: This epoch took 76.602274 s

2022-07-08 19:22:01.511866: 
epoch:  134
2022-07-08 19:23:11.445233: train loss : -0.8259
2022-07-08 19:23:16.852140: validation loss: -0.7436
2022-07-08 19:23:16.880584: Average global foreground Dice: [0.7975]
2022-07-08 19:23:16.903915: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:23:17.644961: Suus1 maybe_update_lr lr: 0.007533
2022-07-08 19:23:17.663891: This epoch took 76.130014 s

2022-07-08 19:23:17.684194: 
epoch:  135
2022-07-08 19:24:27.717326: train loss : -0.8091
2022-07-08 19:24:32.447446: validation loss: -0.7534
2022-07-08 19:24:32.460828: Average global foreground Dice: [0.8048]
2022-07-08 19:24:32.479764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:24:33.249592: Suus1 maybe_update_lr lr: 0.007515
2022-07-08 19:24:33.277892: This epoch took 75.578994 s

2022-07-08 19:24:33.288943: 
epoch:  136
2022-07-08 19:25:45.295449: train loss : -0.8239
2022-07-08 19:25:50.432173: validation loss: -0.7659
2022-07-08 19:25:50.463968: Average global foreground Dice: [0.8134]
2022-07-08 19:25:50.477425: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:25:51.207436: Suus1 maybe_update_lr lr: 0.007496
2022-07-08 19:25:51.232698: This epoch took 77.923128 s

2022-07-08 19:25:51.248858: 
epoch:  137
2022-07-08 19:27:03.792192: train loss : -0.8267
2022-07-08 19:27:09.566262: validation loss: -0.7597
2022-07-08 19:27:09.597291: Average global foreground Dice: [0.809]
2022-07-08 19:27:09.617883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:27:10.291645: Suus1 maybe_update_lr lr: 0.007478
2022-07-08 19:27:10.323928: This epoch took 79.052984 s

2022-07-08 19:27:10.355163: 
epoch:  138
2022-07-08 19:28:20.847784: train loss : -0.8149
2022-07-08 19:28:25.626029: validation loss: -0.7349
2022-07-08 19:28:25.662269: Average global foreground Dice: [0.7909]
2022-07-08 19:28:25.672627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:28:26.326826: Suus1 maybe_update_lr lr: 0.007459
2022-07-08 19:28:26.349199: This epoch took 75.980666 s

2022-07-08 19:28:26.365177: 
epoch:  139
2022-07-08 19:29:37.331604: train loss : -0.8142
2022-07-08 19:29:42.479018: validation loss: -0.7544
2022-07-08 19:29:42.502274: Average global foreground Dice: [0.8075]
2022-07-08 19:29:42.524055: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:29:43.110100: Suus1 maybe_update_lr lr: 0.00744
2022-07-08 19:29:43.120066: This epoch took 76.739507 s

2022-07-08 19:29:43.125880: 
epoch:  140
2022-07-08 19:30:57.084954: train loss : -0.8287
2022-07-08 19:31:02.104306: validation loss: -0.7569
2022-07-08 19:31:02.139254: Average global foreground Dice: [0.8091]
2022-07-08 19:31:02.158992: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:31:02.998043: Suus1 maybe_update_lr lr: 0.007422
2022-07-08 19:31:03.043057: This epoch took 79.895180 s

2022-07-08 19:31:03.053469: 
epoch:  141
2022-07-08 19:32:13.000080: train loss : -0.8357
2022-07-08 19:32:18.324039: validation loss: -0.7650
2022-07-08 19:32:18.357744: Average global foreground Dice: [0.8131]
2022-07-08 19:32:18.387931: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:32:19.290442: Suus1 maybe_update_lr lr: 0.007403
2022-07-08 19:32:19.311894: This epoch took 76.256064 s

2022-07-08 19:32:19.337148: 
epoch:  142
2022-07-08 19:33:30.341222: train loss : -0.8270
2022-07-08 19:33:35.305135: validation loss: -0.7674
2022-07-08 19:33:35.319991: Average global foreground Dice: [0.8137]
2022-07-08 19:33:35.327650: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:33:36.035089: Suus1 maybe_update_lr lr: 0.007385
2022-07-08 19:33:36.066707: This epoch took 76.718808 s

2022-07-08 19:33:36.086855: 
epoch:  143
2022-07-08 19:34:47.601942: train loss : -0.8375
2022-07-08 19:34:52.313568: validation loss: -0.7516
2022-07-08 19:34:52.346266: Average global foreground Dice: [0.8011]
2022-07-08 19:34:52.389264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:34:53.220832: Suus1 maybe_update_lr lr: 0.007366
2022-07-08 19:34:53.227616: This epoch took 77.118753 s

2022-07-08 19:34:53.245874: 
epoch:  144
2022-07-08 19:36:07.361834: train loss : -0.8314
2022-07-08 19:36:12.202421: validation loss: -0.7836
2022-07-08 19:36:12.235268: Average global foreground Dice: [0.8247]
2022-07-08 19:36:12.237748: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:36:12.978431: Suus1 maybe_update_lr lr: 0.007347
2022-07-08 19:36:12.984919: This epoch took 79.710948 s

2022-07-08 19:36:13.021864: 
epoch:  145
2022-07-08 19:37:26.139834: train loss : -0.8307
2022-07-08 19:37:32.126855: validation loss: -0.7487
2022-07-08 19:37:32.155206: Average global foreground Dice: [0.7975]
2022-07-08 19:37:32.186166: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:37:32.703669: Suus1 maybe_update_lr lr: 0.007329
2022-07-08 19:37:32.738190: This epoch took 79.693316 s

2022-07-08 19:37:32.752565: 
epoch:  146
2022-07-08 19:38:44.737438: train loss : -0.8320
2022-07-08 19:38:49.684015: validation loss: -0.7596
2022-07-08 19:38:49.703278: Average global foreground Dice: [0.8088]
2022-07-08 19:38:49.729221: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:38:50.393490: Suus1 maybe_update_lr lr: 0.00731
2022-07-08 19:38:50.415008: This epoch took 77.650489 s

2022-07-08 19:38:50.435135: 
epoch:  147
2022-07-08 19:40:00.922301: train loss : -0.8352
2022-07-08 19:40:06.441729: validation loss: -0.7590
2022-07-08 19:40:06.476247: Average global foreground Dice: [0.8097]
2022-07-08 19:40:06.500908: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:40:07.187703: Suus1 maybe_update_lr lr: 0.007291
2022-07-08 19:40:07.230940: This epoch took 76.783560 s

2022-07-08 19:40:07.263862: 
epoch:  148
2022-07-08 19:41:19.614702: train loss : -0.8370
2022-07-08 19:41:24.154433: validation loss: -0.7815
2022-07-08 19:41:24.188257: Average global foreground Dice: [0.8248]
2022-07-08 19:41:24.210021: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:41:25.027887: Suus1 maybe_update_lr lr: 0.007273
2022-07-08 19:41:25.058881: This epoch took 77.762014 s

2022-07-08 19:41:25.061116: 
epoch:  149
2022-07-08 19:42:37.132005: train loss : -0.8408
2022-07-08 19:42:42.564124: validation loss: -0.7734
2022-07-08 19:42:42.601261: Average global foreground Dice: [0.8224]
2022-07-08 19:42:42.622889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:42:43.330322: Suus1 maybe_update_lr lr: 0.007254
2022-07-08 19:42:43.353885: saving scheduled checkpoint file...
2022-07-08 19:42:43.483896: saving checkpoint...
2022-07-08 19:42:45.074896: done, saving took 1.70 seconds
2022-07-08 19:42:45.095551: done
2022-07-08 19:42:45.098241: This epoch took 80.035076 s

2022-07-08 19:42:45.100742: 
epoch:  150
2022-07-08 19:43:56.486753: train loss : -0.8269
2022-07-08 19:44:01.539459: validation loss: -0.7518
2022-07-08 19:44:01.573585: Average global foreground Dice: [0.8079]
2022-07-08 19:44:01.590079: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:44:02.415225: Suus1 maybe_update_lr lr: 0.007236
2022-07-08 19:44:02.439180: This epoch took 77.335986 s

2022-07-08 19:44:02.464815: 
epoch:  151
2022-07-08 19:45:16.417441: train loss : -0.8304
2022-07-08 19:45:21.896786: validation loss: -0.7636
2022-07-08 19:45:21.919459: Average global foreground Dice: [0.8152]
2022-07-08 19:45:21.942685: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:45:22.835376: Suus1 maybe_update_lr lr: 0.007217
2022-07-08 19:45:22.867930: This epoch took 80.383022 s

2022-07-08 19:45:22.893871: 
epoch:  152
2022-07-08 19:46:34.223206: train loss : -0.8326
2022-07-08 19:46:39.442226: validation loss: -0.7629
2022-07-08 19:46:39.474274: Average global foreground Dice: [0.8121]
2022-07-08 19:46:39.522284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:46:40.173571: Suus1 maybe_update_lr lr: 0.007198
2022-07-08 19:46:40.175804: This epoch took 77.261649 s

2022-07-08 19:46:40.187906: 
epoch:  153
2022-07-08 19:47:51.444484: train loss : -0.8358
2022-07-08 19:47:56.635993: validation loss: -0.7533
2022-07-08 19:47:56.667950: Average global foreground Dice: [0.8109]
2022-07-08 19:47:56.673173: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:47:57.345511: Suus1 maybe_update_lr lr: 0.00718
2022-07-08 19:47:57.367032: This epoch took 77.163151 s

2022-07-08 19:47:57.385170: 
epoch:  154
2022-07-08 19:49:08.177212: train loss : -0.8196
2022-07-08 19:49:13.464175: validation loss: -0.7908
2022-07-08 19:49:13.471668: Average global foreground Dice: [0.8382]
2022-07-08 19:49:13.521886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:49:14.395610: Suus1 maybe_update_lr lr: 0.007161
2022-07-08 19:49:14.419584: This epoch took 77.010704 s

2022-07-08 19:49:14.434522: 
epoch:  155
2022-07-08 19:50:24.137280: train loss : -0.8091
2022-07-08 19:50:29.557278: validation loss: -0.7590
2022-07-08 19:50:29.584334: Average global foreground Dice: [0.8054]
2022-07-08 19:50:29.603704: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:50:30.547472: Suus1 maybe_update_lr lr: 0.007142
2022-07-08 19:50:30.571556: This epoch took 76.120563 s

2022-07-08 19:50:30.595787: 
epoch:  156
2022-07-08 19:51:42.492645: train loss : -0.8228
2022-07-08 19:51:47.468840: validation loss: -0.7739
2022-07-08 19:51:47.511278: Average global foreground Dice: [0.8257]
2022-07-08 19:51:47.530034: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:51:48.152674: Suus1 maybe_update_lr lr: 0.007123
2022-07-08 19:51:48.174910: This epoch took 77.544905 s

2022-07-08 19:51:48.196861: 
epoch:  157
2022-07-08 19:52:58.873079: train loss : -0.8311
2022-07-08 19:53:03.553574: validation loss: -0.7624
2022-07-08 19:53:03.583249: Average global foreground Dice: [0.8132]
2022-07-08 19:53:03.608867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:53:04.156494: Suus1 maybe_update_lr lr: 0.007105
2022-07-08 19:53:04.176805: This epoch took 75.955915 s

2022-07-08 19:53:04.196069: 
epoch:  158
2022-07-08 19:54:15.761861: train loss : -0.8373
2022-07-08 19:54:20.482879: validation loss: -0.7638
2022-07-08 19:54:20.491560: Average global foreground Dice: [0.8142]
2022-07-08 19:54:20.493632: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:54:21.171269: Suus1 maybe_update_lr lr: 0.007086
2022-07-08 19:54:21.189266: This epoch took 76.971408 s

2022-07-08 19:54:21.220868: 
epoch:  159
2022-07-08 19:55:32.719630: train loss : -0.8395
2022-07-08 19:55:37.506088: validation loss: -0.7704
2022-07-08 19:55:37.515429: Average global foreground Dice: [0.8176]
2022-07-08 19:55:37.520010: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:55:38.123614: Suus1 maybe_update_lr lr: 0.007067
2022-07-08 19:55:38.130855: This epoch took 76.889930 s

2022-07-08 19:55:38.156991: 
epoch:  160
2022-07-08 19:56:49.800621: train loss : -0.8345
2022-07-08 19:56:54.989949: validation loss: -0.7739
2022-07-08 19:56:55.006412: Average global foreground Dice: [0.8219]
2022-07-08 19:56:55.024663: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:56:55.749458: Suus1 maybe_update_lr lr: 0.007049
2022-07-08 19:56:55.792893: This epoch took 77.614020 s

2022-07-08 19:56:55.822021: 
epoch:  161
2022-07-08 19:58:06.454401: train loss : -0.8404
2022-07-08 19:58:11.680809: validation loss: -0.7710
2022-07-08 19:58:11.704075: Average global foreground Dice: [0.8201]
2022-07-08 19:58:11.733878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:58:12.561344: Suus1 maybe_update_lr lr: 0.00703
2022-07-08 19:58:12.593904: saving best epoch checkpoint...
2022-07-08 19:58:12.734400: saving checkpoint...
2022-07-08 19:58:14.445565: done, saving took 1.82 seconds
2022-07-08 19:58:14.462258: This epoch took 78.619143 s

2022-07-08 19:58:14.464414: 
epoch:  162
2022-07-08 19:59:24.545120: train loss : -0.8376
2022-07-08 19:59:29.499022: validation loss: -0.7748
2022-07-08 19:59:29.532275: Average global foreground Dice: [0.8211]
2022-07-08 19:59:29.564888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:59:30.464420: Suus1 maybe_update_lr lr: 0.007011
2022-07-08 19:59:30.484877: saving best epoch checkpoint...
2022-07-08 19:59:30.555470: saving checkpoint...
2022-07-08 19:59:32.211368: done, saving took 1.70 seconds
2022-07-08 19:59:32.225455: This epoch took 77.758982 s

2022-07-08 19:59:32.227440: 
epoch:  163
2022-07-08 20:00:44.193952: train loss : -0.8451
2022-07-08 20:00:49.960166: validation loss: -0.7829
2022-07-08 20:00:50.003247: Average global foreground Dice: [0.827]
2022-07-08 20:00:50.024532: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:00:50.713600: Suus1 maybe_update_lr lr: 0.006992
2022-07-08 20:00:50.735905: saving best epoch checkpoint...
2022-07-08 20:00:50.826102: saving checkpoint...
2022-07-08 20:00:52.403583: done, saving took 1.64 seconds
2022-07-08 20:00:52.417665: This epoch took 80.188250 s

2022-07-08 20:00:52.419816: 
epoch:  164
2022-07-08 20:02:02.156429: train loss : -0.8517
2022-07-08 20:02:07.135671: validation loss: -0.7750
2022-07-08 20:02:07.179300: Average global foreground Dice: [0.8238]
2022-07-08 20:02:07.200877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:02:08.074545: Suus1 maybe_update_lr lr: 0.006974
2022-07-08 20:02:08.095886: saving best epoch checkpoint...
2022-07-08 20:02:08.187340: saving checkpoint...
2022-07-08 20:02:09.737189: done, saving took 1.62 seconds
2022-07-08 20:02:09.751629: This epoch took 77.329741 s

2022-07-08 20:02:09.753636: 
epoch:  165
2022-07-08 20:03:20.597789: train loss : -0.8471
2022-07-08 20:03:26.083091: validation loss: -0.7645
2022-07-08 20:03:26.131363: Average global foreground Dice: [0.8153]
2022-07-08 20:03:26.159518: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:03:26.749893: Suus1 maybe_update_lr lr: 0.006955
2022-07-08 20:03:26.770887: This epoch took 77.015050 s

2022-07-08 20:03:26.800866: 
epoch:  166
2022-07-08 20:04:37.222829: train loss : -0.8477
2022-07-08 20:04:42.432626: validation loss: -0.7658
2022-07-08 20:04:42.465645: Average global foreground Dice: [0.8136]
2022-07-08 20:04:42.480074: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:04:43.136445: Suus1 maybe_update_lr lr: 0.006936
2022-07-08 20:04:43.174226: This epoch took 76.351192 s

2022-07-08 20:04:43.180738: 
epoch:  167
2022-07-08 20:05:54.173114: train loss : -0.8524
2022-07-08 20:05:59.121192: validation loss: -0.7786
2022-07-08 20:05:59.147946: Average global foreground Dice: [0.8247]
2022-07-08 20:05:59.161512: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:05:59.989303: Suus1 maybe_update_lr lr: 0.006918
2022-07-08 20:06:00.010904: This epoch took 76.818478 s

2022-07-08 20:06:00.032861: 
epoch:  168
2022-07-08 20:07:11.717875: train loss : -0.8522
2022-07-08 20:07:16.520752: validation loss: -0.7595
2022-07-08 20:07:16.531350: Average global foreground Dice: [0.8076]
2022-07-08 20:07:16.537736: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:07:17.108500: Suus1 maybe_update_lr lr: 0.006899
2022-07-08 20:07:17.128157: This epoch took 77.073289 s

2022-07-08 20:07:17.145860: 
epoch:  169
2022-07-08 20:08:29.125944: train loss : -0.8508
2022-07-08 20:08:34.050992: validation loss: -0.7952
2022-07-08 20:08:34.077195: Average global foreground Dice: [0.8422]
2022-07-08 20:08:34.096874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:08:35.048657: Suus1 maybe_update_lr lr: 0.00688
2022-07-08 20:08:35.078900: saving best epoch checkpoint...
2022-07-08 20:08:35.170654: saving checkpoint...
2022-07-08 20:08:36.562519: done, saving took 1.47 seconds
2022-07-08 20:08:36.579757: This epoch took 79.415493 s

2022-07-08 20:08:36.581869: 
epoch:  170
2022-07-08 20:09:47.690858: train loss : -0.8475
2022-07-08 20:09:52.671561: validation loss: -0.7596
2022-07-08 20:09:52.709699: Average global foreground Dice: [0.81]
2022-07-08 20:09:52.718275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:09:53.636835: Suus1 maybe_update_lr lr: 0.006861
2022-07-08 20:09:53.657914: This epoch took 77.074088 s

2022-07-08 20:09:53.679870: 
epoch:  171
2022-07-08 20:11:04.515217: train loss : -0.8475
2022-07-08 20:11:10.026448: validation loss: -0.7691
2022-07-08 20:11:10.057642: Average global foreground Dice: [0.8181]
2022-07-08 20:11:10.072894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:11:10.860982: Suus1 maybe_update_lr lr: 0.006842
2022-07-08 20:11:10.881922: This epoch took 77.176002 s

2022-07-08 20:11:10.900416: 
epoch:  172
2022-07-08 20:12:22.510521: train loss : -0.8485
2022-07-08 20:12:27.838229: validation loss: -0.7848
2022-07-08 20:12:27.858900: Average global foreground Dice: [0.8309]
2022-07-08 20:12:27.878306: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:12:28.606592: Suus1 maybe_update_lr lr: 0.006824
2022-07-08 20:12:28.638900: saving best epoch checkpoint...
2022-07-08 20:12:28.789963: saving checkpoint...
2022-07-08 20:12:30.501507: done, saving took 1.84 seconds
2022-07-08 20:12:30.519062: This epoch took 79.603158 s

2022-07-08 20:12:30.521129: 
epoch:  173
2022-07-08 20:13:41.304326: train loss : -0.8465
2022-07-08 20:13:46.113924: validation loss: -0.7640
2022-07-08 20:13:46.133592: Average global foreground Dice: [0.8104]
2022-07-08 20:13:46.158573: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:13:46.891811: Suus1 maybe_update_lr lr: 0.006805
2022-07-08 20:13:46.931906: This epoch took 76.408786 s

2022-07-08 20:13:46.975049: 
epoch:  174
2022-07-08 20:14:58.593035: train loss : -0.8506
2022-07-08 20:15:04.322730: validation loss: -0.7692
2022-07-08 20:15:04.337433: Average global foreground Dice: [0.8178]
2022-07-08 20:15:04.365092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:15:05.114550: Suus1 maybe_update_lr lr: 0.006786
2022-07-08 20:15:05.136042: This epoch took 78.139311 s

2022-07-08 20:15:05.166871: 
epoch:  175
2022-07-08 20:16:16.821990: train loss : -0.8518
2022-07-08 20:16:21.543186: validation loss: -0.7714
2022-07-08 20:16:21.592661: Average global foreground Dice: [0.8203]
2022-07-08 20:16:21.607888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:16:22.254466: Suus1 maybe_update_lr lr: 0.006767
2022-07-08 20:16:22.262930: This epoch took 77.079360 s

2022-07-08 20:16:22.276857: 
epoch:  176
2022-07-08 20:17:33.926804: train loss : -0.8551
2022-07-08 20:17:39.276603: validation loss: -0.7777
2022-07-08 20:17:39.297342: Average global foreground Dice: [0.8255]
2022-07-08 20:17:39.323971: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:17:40.125813: Suus1 maybe_update_lr lr: 0.006749
2022-07-08 20:17:40.138496: This epoch took 77.855838 s

2022-07-08 20:17:40.166007: 
epoch:  177
2022-07-08 20:18:51.649858: train loss : -0.8539
2022-07-08 20:18:56.547364: validation loss: -0.7619
2022-07-08 20:18:56.577381: Average global foreground Dice: [0.8128]
2022-07-08 20:18:56.587922: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:18:57.563065: Suus1 maybe_update_lr lr: 0.00673
2022-07-08 20:18:57.590925: This epoch took 77.421854 s

2022-07-08 20:18:57.621867: 
epoch:  178
2022-07-08 20:20:08.772306: train loss : -0.8538
2022-07-08 20:20:13.995866: validation loss: -0.7903
2022-07-08 20:20:14.028945: Average global foreground Dice: [0.8352]
2022-07-08 20:20:14.051583: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:20:15.080502: Suus1 maybe_update_lr lr: 0.006711
2022-07-08 20:20:15.109144: saving best epoch checkpoint...
2022-07-08 20:20:15.287709: saving checkpoint...
2022-07-08 20:20:16.775038: done, saving took 1.64 seconds
2022-07-08 20:20:16.789973: This epoch took 79.146032 s

2022-07-08 20:20:16.792137: 
epoch:  179
2022-07-08 20:21:26.573907: train loss : -0.8580
2022-07-08 20:21:31.383587: validation loss: -0.7758
2022-07-08 20:21:31.412264: Average global foreground Dice: [0.8236]
2022-07-08 20:21:31.431874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:21:31.977061: Suus1 maybe_update_lr lr: 0.006692
2022-07-08 20:21:32.000326: saving best epoch checkpoint...
2022-07-08 20:21:32.152382: saving checkpoint...
2022-07-08 20:21:33.669023: done, saving took 1.66 seconds
2022-07-08 20:21:33.688851: This epoch took 76.894723 s

2022-07-08 20:21:33.691077: 
epoch:  180
2022-07-08 20:22:45.822056: train loss : -0.8563
2022-07-08 20:22:51.198657: validation loss: -0.7642
2022-07-08 20:22:51.226316: Average global foreground Dice: [0.8133]
2022-07-08 20:22:51.242882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:22:52.075668: Suus1 maybe_update_lr lr: 0.006673
2022-07-08 20:22:52.091299: This epoch took 78.398168 s

2022-07-08 20:22:52.098526: 
epoch:  181
2022-07-08 20:24:01.403604: train loss : -0.8606
2022-07-08 20:24:06.400523: validation loss: -0.7773
2022-07-08 20:24:06.428857: Average global foreground Dice: [0.8215]
2022-07-08 20:24:06.435147: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:24:07.118406: Suus1 maybe_update_lr lr: 0.006654
2022-07-08 20:24:07.154886: This epoch took 75.054236 s

2022-07-08 20:24:07.187853: 
epoch:  182
2022-07-08 20:25:18.706833: train loss : -0.8551
2022-07-08 20:25:24.894426: validation loss: -0.7615
2022-07-08 20:25:24.929219: Average global foreground Dice: [0.8151]
2022-07-08 20:25:24.960861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:25:25.739498: Suus1 maybe_update_lr lr: 0.006636
2022-07-08 20:25:25.769961: This epoch took 78.567412 s

2022-07-08 20:25:25.799150: 
epoch:  183
2022-07-08 20:26:35.938537: train loss : -0.8508
2022-07-08 20:26:41.223117: validation loss: -0.7349
2022-07-08 20:26:41.260591: Average global foreground Dice: [0.7909]
2022-07-08 20:26:41.262914: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:26:42.118672: Suus1 maybe_update_lr lr: 0.006617
2022-07-08 20:26:42.129091: This epoch took 76.306242 s

2022-07-08 20:26:42.153876: 
epoch:  184
2022-07-08 20:27:53.602153: train loss : -0.8490
2022-07-08 20:27:58.456465: validation loss: -0.7677
2022-07-08 20:27:58.477913: Average global foreground Dice: [0.8109]
2022-07-08 20:27:58.485627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:27:59.069600: Suus1 maybe_update_lr lr: 0.006598
2022-07-08 20:27:59.071834: This epoch took 76.895971 s

2022-07-08 20:27:59.091859: 
epoch:  185
2022-07-08 20:29:12.310771: train loss : -0.8578
2022-07-08 20:29:17.133774: validation loss: -0.7598
2022-07-08 20:29:17.164181: Average global foreground Dice: [0.808]
2022-07-08 20:29:17.167312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:29:17.746675: Suus1 maybe_update_lr lr: 0.006579
2022-07-08 20:29:17.777294: This epoch took 78.659746 s

2022-07-08 20:29:17.796852: 
epoch:  186
2022-07-08 20:30:30.276003: train loss : -0.8573
2022-07-08 20:30:35.287559: validation loss: -0.7827
2022-07-08 20:30:35.290999: Average global foreground Dice: [0.8309]
2022-07-08 20:30:35.293098: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:30:35.947593: Suus1 maybe_update_lr lr: 0.00656
2022-07-08 20:30:35.969023: This epoch took 78.142674 s

2022-07-08 20:30:35.990854: 
epoch:  187
2022-07-08 20:31:48.833725: train loss : -0.8557
2022-07-08 20:31:53.855357: validation loss: -0.7626
2022-07-08 20:31:53.876503: Average global foreground Dice: [0.8122]
2022-07-08 20:31:53.893871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:31:54.690361: Suus1 maybe_update_lr lr: 0.006541
2022-07-08 20:31:54.712925: This epoch took 78.700059 s

2022-07-08 20:31:54.738864: 
epoch:  188
2022-07-08 20:33:07.111372: train loss : -0.8573
2022-07-08 20:33:12.196276: validation loss: -0.7581
2022-07-08 20:33:12.224527: Average global foreground Dice: [0.8111]
2022-07-08 20:33:12.244151: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:33:12.883553: Suus1 maybe_update_lr lr: 0.006522
2022-07-08 20:33:12.915905: This epoch took 78.146029 s

2022-07-08 20:33:12.936275: 
epoch:  189
2022-07-08 20:34:24.848994: train loss : -0.8594
2022-07-08 20:34:29.911431: validation loss: -0.7758
2022-07-08 20:34:29.955054: Average global foreground Dice: [0.8238]
2022-07-08 20:34:29.969995: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:34:30.888184: Suus1 maybe_update_lr lr: 0.006504
2022-07-08 20:34:30.923705: This epoch took 77.965841 s

2022-07-08 20:34:30.958865: 
epoch:  190
2022-07-08 20:35:42.258744: train loss : -0.8558
2022-07-08 20:35:47.561639: validation loss: -0.7645
2022-07-08 20:35:47.600297: Average global foreground Dice: [0.8164]
2022-07-08 20:35:47.618861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:35:48.411336: Suus1 maybe_update_lr lr: 0.006485
2022-07-08 20:35:48.430755: This epoch took 77.447085 s

2022-07-08 20:35:48.440186: 
epoch:  191
2022-07-08 20:36:58.302891: train loss : -0.8527
2022-07-08 20:37:03.343948: validation loss: -0.7627
2022-07-08 20:37:03.373317: Average global foreground Dice: [0.8164]
2022-07-08 20:37:03.397880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:37:04.055155: Suus1 maybe_update_lr lr: 0.006466
2022-07-08 20:37:04.061707: This epoch took 75.606545 s

2022-07-08 20:37:04.064145: 
epoch:  192
2022-07-08 20:38:15.622027: train loss : -0.8583
2022-07-08 20:38:21.152346: validation loss: -0.7827
2022-07-08 20:38:21.174315: Average global foreground Dice: [0.8345]
2022-07-08 20:38:21.188607: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:38:21.969238: Suus1 maybe_update_lr lr: 0.006447
2022-07-08 20:38:21.993432: This epoch took 77.927415 s

2022-07-08 20:38:22.021875: 
epoch:  193
2022-07-08 20:39:34.190662: train loss : -0.8600
2022-07-08 20:39:39.594535: validation loss: -0.7652
2022-07-08 20:39:39.627188: Average global foreground Dice: [0.8155]
2022-07-08 20:39:39.659887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:39:40.555368: Suus1 maybe_update_lr lr: 0.006428
2022-07-08 20:39:40.575904: This epoch took 78.544883 s

2022-07-08 20:39:40.609870: 
epoch:  194
2022-07-08 20:40:52.502172: train loss : -0.8590
2022-07-08 20:40:57.317927: validation loss: -0.7875
2022-07-08 20:40:57.349300: Average global foreground Dice: [0.8316]
2022-07-08 20:40:57.355655: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:40:57.923025: Suus1 maybe_update_lr lr: 0.006409
2022-07-08 20:40:57.954910: This epoch took 77.322039 s

2022-07-08 20:40:58.002575: 
epoch:  195
2022-07-08 20:42:09.355310: train loss : -0.8618
2022-07-08 20:42:14.038926: validation loss: -0.7682
2022-07-08 20:42:14.056611: Average global foreground Dice: [0.8108]
2022-07-08 20:42:14.080877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:42:14.916183: Suus1 maybe_update_lr lr: 0.00639
2022-07-08 20:42:14.936957: This epoch took 76.917531 s

2022-07-08 20:42:14.955743: 
epoch:  196
2022-07-08 20:43:25.298498: train loss : -0.8645
2022-07-08 20:43:29.702425: validation loss: -0.7713
2022-07-08 20:43:29.723383: Average global foreground Dice: [0.8207]
2022-07-08 20:43:29.749422: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:43:30.583308: Suus1 maybe_update_lr lr: 0.006371
2022-07-08 20:43:30.605902: This epoch took 75.638041 s

2022-07-08 20:43:30.625865: 
epoch:  197
2022-07-08 20:44:41.768074: train loss : -0.8655
2022-07-08 20:44:46.690229: validation loss: -0.7680
2022-07-08 20:44:46.727246: Average global foreground Dice: [0.8147]
2022-07-08 20:44:46.738779: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:44:47.465498: Suus1 maybe_update_lr lr: 0.006352
2022-07-08 20:44:47.486920: This epoch took 76.839061 s

2022-07-08 20:44:47.508876: 
epoch:  198
2022-07-08 20:45:58.788352: train loss : -0.8654
2022-07-08 20:46:04.241242: validation loss: -0.7509
2022-07-08 20:46:04.273590: Average global foreground Dice: [0.8037]
2022-07-08 20:46:04.299860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:46:05.028367: Suus1 maybe_update_lr lr: 0.006333
2022-07-08 20:46:05.053349: This epoch took 77.522475 s

2022-07-08 20:46:05.064850: 
epoch:  199
2022-07-08 20:47:15.831507: train loss : -0.8666
2022-07-08 20:47:21.036674: validation loss: -0.7793
2022-07-08 20:47:21.054896: Average global foreground Dice: [0.8251]
2022-07-08 20:47:21.070826: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:47:22.018799: Suus1 maybe_update_lr lr: 0.006314
2022-07-08 20:47:22.023603: saving scheduled checkpoint file...
2022-07-08 20:47:22.150202: saving checkpoint...
2022-07-08 20:47:23.812559: done, saving took 1.77 seconds
2022-07-08 20:47:23.828805: done
2022-07-08 20:47:23.831236: This epoch took 78.764127 s

2022-07-08 20:47:23.833094: 
epoch:  200
2022-07-08 20:48:35.921543: train loss : -0.8640
2022-07-08 20:48:41.261309: validation loss: -0.7755
2022-07-08 20:48:41.293323: Average global foreground Dice: [0.8243]
2022-07-08 20:48:41.311869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:48:42.038175: Suus1 maybe_update_lr lr: 0.006296
2022-07-08 20:48:42.052635: This epoch took 78.217356 s

2022-07-08 20:48:42.091161: 
epoch:  201
2022-07-08 20:49:53.549077: train loss : -0.8636
2022-07-08 20:49:58.638375: validation loss: -0.7676
2022-07-08 20:49:58.667269: Average global foreground Dice: [0.8143]
2022-07-08 20:49:58.682446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:49:59.498867: Suus1 maybe_update_lr lr: 0.006277
2022-07-08 20:49:59.556910: This epoch took 77.463289 s

2022-07-08 20:49:59.578853: 
epoch:  202
2022-07-08 20:51:12.311712: train loss : -0.8643
2022-07-08 20:51:17.184444: validation loss: -0.7701
2022-07-08 20:51:17.217229: Average global foreground Dice: [0.8179]
2022-07-08 20:51:17.238305: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:51:18.034526: Suus1 maybe_update_lr lr: 0.006258
2022-07-08 20:51:18.066904: This epoch took 78.466046 s

2022-07-08 20:51:18.093864: 
epoch:  203
2022-07-08 20:52:28.963120: train loss : -0.8621
2022-07-08 20:52:33.990497: validation loss: -0.7771
2022-07-08 20:52:34.013595: Average global foreground Dice: [0.8259]
2022-07-08 20:52:34.049863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:52:34.839414: Suus1 maybe_update_lr lr: 0.006239
2022-07-08 20:52:34.851373: This epoch took 76.724478 s

2022-07-08 20:52:34.862016: 
epoch:  204
2022-07-08 20:53:46.874916: train loss : -0.8635
2022-07-08 20:53:51.914578: validation loss: -0.7708
2022-07-08 20:53:51.929930: Average global foreground Dice: [0.8179]
2022-07-08 20:53:51.959248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:53:52.577174: Suus1 maybe_update_lr lr: 0.00622
2022-07-08 20:53:52.579716: This epoch took 77.686583 s

2022-07-08 20:53:52.590308: 
epoch:  205
2022-07-08 20:55:04.766093: train loss : -0.8663
2022-07-08 20:55:10.010063: validation loss: -0.7872
2022-07-08 20:55:10.057908: Average global foreground Dice: [0.8333]
2022-07-08 20:55:10.073635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:55:10.661240: Suus1 maybe_update_lr lr: 0.006201
2022-07-08 20:55:10.663722: This epoch took 78.066237 s

2022-07-08 20:55:10.665945: 
epoch:  206
2022-07-08 20:56:21.647522: train loss : -0.8664
2022-07-08 20:56:28.128641: validation loss: -0.7754
2022-07-08 20:56:28.173240: Average global foreground Dice: [0.8325]
2022-07-08 20:56:28.194873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:56:28.799528: Suus1 maybe_update_lr lr: 0.006182
2022-07-08 20:56:28.820995: saving best epoch checkpoint...
2022-07-08 20:56:28.948288: saving checkpoint...
2022-07-08 20:56:30.825853: done, saving took 1.99 seconds
2022-07-08 20:56:30.841745: This epoch took 80.173745 s

2022-07-08 20:56:30.843928: 
epoch:  207
2022-07-08 20:57:41.781614: train loss : -0.8355
2022-07-08 20:57:47.462622: validation loss: -0.7431
2022-07-08 20:57:47.534755: Average global foreground Dice: [0.7905]
2022-07-08 20:57:47.553975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:57:48.345011: Suus1 maybe_update_lr lr: 0.006163
2022-07-08 20:57:48.371965: This epoch took 77.525879 s

2022-07-08 20:57:48.402923: 
epoch:  208
2022-07-08 20:59:00.106175: train loss : -0.8359
2022-07-08 20:59:05.462133: validation loss: -0.7690
2022-07-08 20:59:05.500263: Average global foreground Dice: [0.8171]
2022-07-08 20:59:05.506385: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:59:06.266418: Suus1 maybe_update_lr lr: 0.006144
2022-07-08 20:59:06.285367: This epoch took 77.879459 s

2022-07-08 20:59:06.294282: 
epoch:  209
2022-07-08 21:00:19.350916: train loss : -0.8385
2022-07-08 21:00:24.924274: validation loss: -0.7607
2022-07-08 21:00:24.930701: Average global foreground Dice: [0.8121]
2022-07-08 21:00:24.955877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:00:25.749204: Suus1 maybe_update_lr lr: 0.006125
2022-07-08 21:00:25.790896: This epoch took 79.484271 s

2022-07-08 21:00:25.812991: 
epoch:  210
2022-07-08 21:01:36.687540: train loss : -0.8437
2022-07-08 21:01:41.957046: validation loss: -0.7739
2022-07-08 21:01:41.987277: Average global foreground Dice: [0.8214]
2022-07-08 21:01:41.997632: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:01:42.636425: Suus1 maybe_update_lr lr: 0.006106
2022-07-08 21:01:42.657897: This epoch took 76.829005 s

2022-07-08 21:01:42.676252: 
epoch:  211
2022-07-08 21:02:53.429816: train loss : -0.8524
2022-07-08 21:02:58.454192: validation loss: -0.7608
2022-07-08 21:02:58.486333: Average global foreground Dice: [0.8138]
2022-07-08 21:02:58.506105: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:02:59.222550: Suus1 maybe_update_lr lr: 0.006087
2022-07-08 21:02:59.242891: This epoch took 76.538026 s

2022-07-08 21:02:59.263132: 
epoch:  212
2022-07-08 21:04:09.695225: train loss : -0.8496
2022-07-08 21:04:14.552856: validation loss: -0.7604
2022-07-08 21:04:14.556933: Average global foreground Dice: [0.8115]
2022-07-08 21:04:14.572916: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:04:15.252122: Suus1 maybe_update_lr lr: 0.006068
2022-07-08 21:04:15.278155: This epoch took 75.988277 s

2022-07-08 21:04:15.280677: 
epoch:  213
2022-07-08 21:05:26.556430: train loss : -0.8507
2022-07-08 21:05:31.432425: validation loss: -0.7724
2022-07-08 21:05:31.458453: Average global foreground Dice: [0.8203]
2022-07-08 21:05:31.477877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:05:32.165458: Suus1 maybe_update_lr lr: 0.006049
2022-07-08 21:05:32.168745: This epoch took 76.885878 s

2022-07-08 21:05:32.184997: 
epoch:  214
2022-07-08 21:06:45.426490: train loss : -0.8499
2022-07-08 21:06:51.370587: validation loss: -0.7657
2022-07-08 21:06:51.420342: Average global foreground Dice: [0.8159]
2022-07-08 21:06:51.442876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:06:52.124164: Suus1 maybe_update_lr lr: 0.00603
2022-07-08 21:06:52.145212: This epoch took 79.930331 s

2022-07-08 21:06:52.158949: 
epoch:  215
2022-07-08 21:08:04.212981: train loss : -0.8606
2022-07-08 21:08:08.923892: validation loss: -0.7727
2022-07-08 21:08:08.928419: Average global foreground Dice: [0.8234]
2022-07-08 21:08:08.954314: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:08:09.695939: Suus1 maybe_update_lr lr: 0.006011
2022-07-08 21:08:09.698696: This epoch took 77.519664 s

2022-07-08 21:08:09.703153: 
epoch:  216
2022-07-08 21:09:21.866157: train loss : -0.8603
2022-07-08 21:09:27.085316: validation loss: -0.7792
2022-07-08 21:09:27.104319: Average global foreground Dice: [0.8212]
2022-07-08 21:09:27.132811: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:09:27.850411: Suus1 maybe_update_lr lr: 0.005991
2022-07-08 21:09:27.871907: This epoch took 78.153568 s

2022-07-08 21:09:27.903987: 
epoch:  217
2022-07-08 21:10:40.894520: train loss : -0.8645
2022-07-08 21:10:45.935654: validation loss: -0.7597
2022-07-08 21:10:45.953228: Average global foreground Dice: [0.8111]
2022-07-08 21:10:45.968869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:10:46.605587: Suus1 maybe_update_lr lr: 0.005972
2022-07-08 21:10:46.614385: This epoch took 78.675799 s

2022-07-08 21:10:46.651273: 
epoch:  218
2022-07-08 21:11:58.111383: train loss : -0.8556
2022-07-08 21:12:03.659850: validation loss: -0.7745
2022-07-08 21:12:03.668921: Average global foreground Dice: [0.8258]
2022-07-08 21:12:03.698691: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:12:04.406301: Suus1 maybe_update_lr lr: 0.005953
2022-07-08 21:12:04.412645: This epoch took 77.746554 s

2022-07-08 21:12:04.414645: 
epoch:  219
2022-07-08 21:13:14.956310: train loss : -0.8585
2022-07-08 21:13:20.420594: validation loss: -0.7853
2022-07-08 21:13:20.450304: Average global foreground Dice: [0.8293]
2022-07-08 21:13:20.477516: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:13:21.118487: Suus1 maybe_update_lr lr: 0.005934
2022-07-08 21:13:21.138177: This epoch took 76.717010 s

2022-07-08 21:13:21.164642: 
epoch:  220
2022-07-08 21:14:34.038078: train loss : -0.8539
2022-07-08 21:14:38.922650: validation loss: -0.7663
2022-07-08 21:14:38.934706: Average global foreground Dice: [0.817]
2022-07-08 21:14:38.960998: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:14:39.878854: Suus1 maybe_update_lr lr: 0.005915
2022-07-08 21:14:39.885785: This epoch took 78.681851 s

2022-07-08 21:14:39.912857: 
epoch:  221
2022-07-08 21:15:50.367142: train loss : -0.8599
2022-07-08 21:15:55.291020: validation loss: -0.7733
2022-07-08 21:15:55.324317: Average global foreground Dice: [0.8195]
2022-07-08 21:15:55.356949: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:15:56.003326: Suus1 maybe_update_lr lr: 0.005896
2022-07-08 21:15:56.016916: This epoch took 76.091037 s

2022-07-08 21:15:56.039866: 
epoch:  222
2022-07-08 21:17:08.627675: train loss : -0.8608
2022-07-08 21:17:13.862976: validation loss: -0.7654
2022-07-08 21:17:13.885680: Average global foreground Dice: [0.8189]
2022-07-08 21:17:13.916065: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:17:14.578535: Suus1 maybe_update_lr lr: 0.005877
2022-07-08 21:17:14.599898: This epoch took 78.537903 s

2022-07-08 21:17:14.626865: 
epoch:  223
2022-07-08 21:18:26.367867: train loss : -0.8628
2022-07-08 21:18:31.297861: validation loss: -0.7747
2022-07-08 21:18:31.334335: Average global foreground Dice: [0.8219]
2022-07-08 21:18:31.346865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:18:32.382560: Suus1 maybe_update_lr lr: 0.005858
2022-07-08 21:18:32.406375: This epoch took 77.755502 s

2022-07-08 21:18:32.420364: 
epoch:  224
2022-07-08 21:19:44.337984: train loss : -0.8665
2022-07-08 21:19:49.112391: validation loss: -0.7837
2022-07-08 21:19:49.138347: Average global foreground Dice: [0.8282]
2022-07-08 21:19:49.158675: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:19:49.731990: Suus1 maybe_update_lr lr: 0.005839
2022-07-08 21:19:49.755142: This epoch took 77.315310 s

2022-07-08 21:19:49.770174: 
epoch:  225
2022-07-08 21:21:00.585940: train loss : -0.8680
2022-07-08 21:21:05.482249: validation loss: -0.7784
2022-07-08 21:21:05.499567: Average global foreground Dice: [0.8291]
2022-07-08 21:21:05.522939: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:21:06.212046: Suus1 maybe_update_lr lr: 0.00582
2022-07-08 21:21:06.234866: This epoch took 76.447895 s

2022-07-08 21:21:06.253870: 
epoch:  226
2022-07-08 21:22:19.607443: train loss : -0.8696
2022-07-08 21:22:24.871565: validation loss: -0.7825
2022-07-08 21:22:24.903248: Average global foreground Dice: [0.8263]
2022-07-08 21:22:24.915892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:22:25.549373: Suus1 maybe_update_lr lr: 0.005801
2022-07-08 21:22:25.569928: saving best epoch checkpoint...
2022-07-08 21:22:25.689441: saving checkpoint...
2022-07-08 21:22:27.254830: done, saving took 1.65 seconds
2022-07-08 21:22:27.272128: This epoch took 81.009305 s

2022-07-08 21:22:27.274326: 
epoch:  227
2022-07-08 21:23:39.123855: train loss : -0.8708
2022-07-08 21:23:44.160613: validation loss: -0.7772
2022-07-08 21:23:44.187242: Average global foreground Dice: [0.82]
2022-07-08 21:23:44.206859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:23:45.165471: Suus1 maybe_update_lr lr: 0.005781
2022-07-08 21:23:45.175977: This epoch took 77.899601 s

2022-07-08 21:23:45.190846: 
epoch:  228
2022-07-08 21:24:57.410363: train loss : -0.8721
2022-07-08 21:25:03.437566: validation loss: -0.7539
2022-07-08 21:25:03.451574: Average global foreground Dice: [0.8065]
2022-07-08 21:25:03.464829: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:25:04.210680: Suus1 maybe_update_lr lr: 0.005762
2022-07-08 21:25:04.237536: This epoch took 79.023355 s

2022-07-08 21:25:04.267973: 
epoch:  229
2022-07-08 21:26:15.943016: train loss : -0.8757
2022-07-08 21:26:21.304704: validation loss: -0.7870
2022-07-08 21:26:21.317947: Average global foreground Dice: [0.837]
2022-07-08 21:26:21.331535: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:26:21.940186: Suus1 maybe_update_lr lr: 0.005743
2022-07-08 21:26:21.959872: saving best epoch checkpoint...
2022-07-08 21:26:22.107517: saving checkpoint...
2022-07-08 21:26:23.642787: done, saving took 1.66 seconds
2022-07-08 21:26:23.658824: This epoch took 79.368922 s

2022-07-08 21:26:23.660934: 
epoch:  230
2022-07-08 21:27:33.460108: train loss : -0.8720
2022-07-08 21:27:38.427066: validation loss: -0.7723
2022-07-08 21:27:38.469821: Average global foreground Dice: [0.823]
2022-07-08 21:27:38.484872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:27:39.283880: Suus1 maybe_update_lr lr: 0.005724
2022-07-08 21:27:39.310293: saving best epoch checkpoint...
2022-07-08 21:27:39.499870: saving checkpoint...
2022-07-08 21:27:41.160407: done, saving took 1.83 seconds
2022-07-08 21:27:41.176841: This epoch took 77.514066 s

2022-07-08 21:27:41.179008: 
epoch:  231
2022-07-08 21:28:50.941377: train loss : -0.8775
2022-07-08 21:28:55.977615: validation loss: -0.7737
2022-07-08 21:28:56.012302: Average global foreground Dice: [0.8206]
2022-07-08 21:28:56.047889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:28:56.725725: Suus1 maybe_update_lr lr: 0.005705
2022-07-08 21:28:56.729861: This epoch took 75.548778 s

2022-07-08 21:28:56.780198: 
epoch:  232
2022-07-08 21:30:07.126482: train loss : -0.8710
2022-07-08 21:30:12.397853: validation loss: -0.7567
2022-07-08 21:30:12.414887: Average global foreground Dice: [0.8117]
2022-07-08 21:30:12.435179: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:30:13.298687: Suus1 maybe_update_lr lr: 0.005686
2022-07-08 21:30:13.320066: This epoch took 76.519875 s

2022-07-08 21:30:13.336683: 
epoch:  233
2022-07-08 21:31:24.845979: train loss : -0.8586
2022-07-08 21:31:30.058608: validation loss: -0.7835
2022-07-08 21:31:30.108497: Average global foreground Dice: [0.8296]
2022-07-08 21:31:30.128107: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:31:30.974247: Suus1 maybe_update_lr lr: 0.005667
2022-07-08 21:31:30.996622: This epoch took 77.657735 s

2022-07-08 21:31:31.008026: 
epoch:  234
2022-07-08 21:32:42.717304: train loss : -0.8611
2022-07-08 21:32:47.525651: validation loss: -0.7636
2022-07-08 21:32:47.559313: Average global foreground Dice: [0.8104]
2022-07-08 21:32:47.594875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:32:48.292087: Suus1 maybe_update_lr lr: 0.005647
2022-07-08 21:32:48.313561: This epoch took 77.297398 s

2022-07-08 21:32:48.334948: 
epoch:  235
2022-07-08 21:33:59.463539: train loss : -0.8631
2022-07-08 21:34:04.479215: validation loss: -0.7623
2022-07-08 21:34:04.504621: Average global foreground Dice: [0.8074]
2022-07-08 21:34:04.539865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:34:05.035806: Suus1 maybe_update_lr lr: 0.005628
2022-07-08 21:34:05.054906: This epoch took 76.699823 s

2022-07-08 21:34:05.094866: 
epoch:  236
2022-07-08 21:35:17.428101: train loss : -0.8674
2022-07-08 21:35:22.892173: validation loss: -0.7803
2022-07-08 21:35:22.925276: Average global foreground Dice: [0.8287]
2022-07-08 21:35:22.957892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:35:23.662905: Suus1 maybe_update_lr lr: 0.005609
2022-07-08 21:35:23.687922: This epoch took 78.580054 s

2022-07-08 21:35:23.714079: 
epoch:  237
2022-07-08 21:36:35.408751: train loss : -0.8668
2022-07-08 21:36:40.578367: validation loss: -0.7658
2022-07-08 21:36:40.617229: Average global foreground Dice: [0.8167]
2022-07-08 21:36:40.630538: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:36:41.505016: Suus1 maybe_update_lr lr: 0.00559
2022-07-08 21:36:41.524921: This epoch took 77.808314 s

2022-07-08 21:36:41.557873: 
epoch:  238
2022-07-08 21:37:52.775235: train loss : -0.8718
2022-07-08 21:37:58.075733: validation loss: -0.7792
2022-07-08 21:37:58.103256: Average global foreground Dice: [0.8244]
2022-07-08 21:37:58.122880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:37:58.956240: Suus1 maybe_update_lr lr: 0.005571
2022-07-08 21:37:58.975893: This epoch took 77.395941 s

2022-07-08 21:37:58.998185: 
epoch:  239
2022-07-08 21:39:11.343110: train loss : -0.8746
2022-07-08 21:39:16.711871: validation loss: -0.7833
2022-07-08 21:39:16.748389: Average global foreground Dice: [0.8262]
2022-07-08 21:39:16.777886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:39:17.621256: Suus1 maybe_update_lr lr: 0.005551
2022-07-08 21:39:17.645913: This epoch took 78.636707 s

2022-07-08 21:39:17.667861: 
epoch:  240
2022-07-08 21:40:29.307799: train loss : -0.8742
2022-07-08 21:40:34.511361: validation loss: -0.7716
2022-07-08 21:40:34.542340: Average global foreground Dice: [0.821]
2022-07-08 21:40:34.560889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:40:35.291290: Suus1 maybe_update_lr lr: 0.005532
2022-07-08 21:40:35.311709: This epoch took 77.635284 s

2022-07-08 21:40:35.331816: 
epoch:  241
2022-07-08 21:41:45.624744: train loss : -0.8782
2022-07-08 21:41:50.430490: validation loss: -0.7620
2022-07-08 21:41:50.451219: Average global foreground Dice: [0.8115]
2022-07-08 21:41:50.467875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:41:51.018573: Suus1 maybe_update_lr lr: 0.005513
2022-07-08 21:41:51.045221: This epoch took 75.693260 s

2022-07-08 21:41:51.065244: 
epoch:  242
2022-07-08 21:43:03.283161: train loss : -0.8793
2022-07-08 21:43:08.717554: validation loss: -0.7937
2022-07-08 21:43:08.730014: Average global foreground Dice: [0.8411]
2022-07-08 21:43:08.735975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:43:09.415363: Suus1 maybe_update_lr lr: 0.005494
2022-07-08 21:43:09.447900: saving best epoch checkpoint...
2022-07-08 21:43:09.619696: saving checkpoint...
2022-07-08 21:43:11.255875: done, saving took 1.77 seconds
2022-07-08 21:43:11.271820: This epoch took 80.186457 s

2022-07-08 21:43:11.274077: 
epoch:  243
2022-07-08 21:44:22.415609: train loss : -0.8839
2022-07-08 21:44:27.349244: validation loss: -0.7806
2022-07-08 21:44:27.381459: Average global foreground Dice: [0.8253]
2022-07-08 21:44:27.393881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:44:28.218771: Suus1 maybe_update_lr lr: 0.005474
2022-07-08 21:44:28.239903: saving best epoch checkpoint...
2022-07-08 21:44:28.330976: saving checkpoint...
2022-07-08 21:44:29.946645: done, saving took 1.68 seconds
2022-07-08 21:44:29.962630: This epoch took 78.685749 s

2022-07-08 21:44:29.965057: 
epoch:  244
2022-07-08 21:45:41.048325: train loss : -0.8801
2022-07-08 21:45:46.022524: validation loss: -0.7670
2022-07-08 21:45:46.069015: Average global foreground Dice: [0.8201]
2022-07-08 21:45:46.115865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:45:46.750592: Suus1 maybe_update_lr lr: 0.005455
2022-07-08 21:45:46.785257: This epoch took 76.817882 s

2022-07-08 21:45:46.818391: 
epoch:  245
2022-07-08 21:46:57.681317: train loss : -0.8776
2022-07-08 21:47:02.688954: validation loss: -0.7819
2022-07-08 21:47:02.716343: Average global foreground Dice: [0.8259]
2022-07-08 21:47:02.740556: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:47:03.365787: Suus1 maybe_update_lr lr: 0.005436
2022-07-08 21:47:03.397022: saving best epoch checkpoint...
2022-07-08 21:47:03.485851: saving checkpoint...
2022-07-08 21:47:05.213768: done, saving took 1.79 seconds
2022-07-08 21:47:05.227062: This epoch took 78.396582 s

2022-07-08 21:47:05.229031: 
epoch:  246
2022-07-08 21:48:14.542829: train loss : -0.8781
2022-07-08 21:48:19.727214: validation loss: -0.7797
2022-07-08 21:48:19.757409: Average global foreground Dice: [0.8284]
2022-07-08 21:48:19.759883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:48:20.471013: Suus1 maybe_update_lr lr: 0.005417
2022-07-08 21:48:20.483476: saving best epoch checkpoint...
2022-07-08 21:48:20.598332: saving checkpoint...
2022-07-08 21:48:22.143109: done, saving took 1.63 seconds
2022-07-08 21:48:22.156751: This epoch took 76.925733 s

2022-07-08 21:48:22.158921: 
epoch:  247
2022-07-08 21:49:32.810178: train loss : -0.8785
2022-07-08 21:49:37.678549: validation loss: -0.7647
2022-07-08 21:49:37.703963: Average global foreground Dice: [0.8127]
2022-07-08 21:49:37.722883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:49:38.430418: Suus1 maybe_update_lr lr: 0.005397
2022-07-08 21:49:38.450984: This epoch took 76.290189 s

2022-07-08 21:49:38.483875: 
epoch:  248
2022-07-08 21:50:49.960628: train loss : -0.8809
2022-07-08 21:50:55.201210: validation loss: -0.7604
2022-07-08 21:50:55.240445: Average global foreground Dice: [0.8118]
2022-07-08 21:50:55.252882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:50:55.916616: Suus1 maybe_update_lr lr: 0.005378
2022-07-08 21:50:55.945924: This epoch took 77.438060 s

2022-07-08 21:50:55.967436: 
epoch:  249
2022-07-08 21:52:08.094742: train loss : -0.8826
2022-07-08 21:52:13.149002: validation loss: -0.7748
2022-07-08 21:52:13.193211: Average global foreground Dice: [0.8216]
2022-07-08 21:52:13.225877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:52:13.983652: Suus1 maybe_update_lr lr: 0.005359
2022-07-08 21:52:14.002965: saving scheduled checkpoint file...
2022-07-08 21:52:14.085665: saving checkpoint...
2022-07-08 21:52:15.676878: done, saving took 1.65 seconds
2022-07-08 21:52:15.693522: done
2022-07-08 21:52:15.695767: This epoch took 79.685783 s

2022-07-08 21:52:15.697829: 
epoch:  250
2022-07-08 21:53:26.768711: train loss : -0.8853
2022-07-08 21:53:32.044057: validation loss: -0.7774
2022-07-08 21:53:32.076518: Average global foreground Dice: [0.8233]
2022-07-08 21:53:32.096099: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:53:32.750481: Suus1 maybe_update_lr lr: 0.00534
2022-07-08 21:53:32.777655: This epoch took 77.077822 s

2022-07-08 21:53:32.815860: 
epoch:  251
2022-07-08 21:54:44.793590: train loss : -0.8785
2022-07-08 21:54:50.486761: validation loss: -0.7771
2022-07-08 21:54:50.524554: Average global foreground Dice: [0.8235]
2022-07-08 21:54:50.547876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:54:51.295314: Suus1 maybe_update_lr lr: 0.00532
2022-07-08 21:54:51.314935: This epoch took 78.483286 s

2022-07-08 21:54:51.347847: 
epoch:  252
2022-07-08 21:56:03.937181: train loss : -0.8798
2022-07-08 21:56:09.342566: validation loss: -0.7740
2022-07-08 21:56:09.388279: Average global foreground Dice: [0.8227]
2022-07-08 21:56:09.403865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:56:10.078051: Suus1 maybe_update_lr lr: 0.005301
2022-07-08 21:56:10.112899: This epoch took 78.743040 s

2022-07-08 21:56:10.129866: 
epoch:  253
2022-07-08 21:57:23.663819: train loss : -0.8783
2022-07-08 21:57:29.313872: validation loss: -0.7745
2022-07-08 21:57:29.336631: Average global foreground Dice: [0.8239]
2022-07-08 21:57:29.365810: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:57:30.027134: Suus1 maybe_update_lr lr: 0.005282
2022-07-08 21:57:30.052909: This epoch took 79.890009 s

2022-07-08 21:57:30.096867: 
epoch:  254
2022-07-08 21:58:41.355519: train loss : -0.8777
2022-07-08 21:58:46.538989: validation loss: -0.7681
2022-07-08 21:58:46.559361: Average global foreground Dice: [0.8228]
2022-07-08 21:58:46.578857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:58:47.248621: Suus1 maybe_update_lr lr: 0.005262
2022-07-08 21:58:47.270121: This epoch took 77.143273 s

2022-07-08 21:58:47.298438: 
epoch:  255
2022-07-08 21:59:58.818804: train loss : -0.8812
2022-07-08 22:00:03.780360: validation loss: -0.7555
2022-07-08 22:00:03.809258: Average global foreground Dice: [0.8063]
2022-07-08 22:00:03.828188: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:00:04.355549: Suus1 maybe_update_lr lr: 0.005243
2022-07-08 22:00:04.384389: This epoch took 77.047785 s

2022-07-08 22:00:04.404547: 
epoch:  256
2022-07-08 22:01:16.717044: train loss : -0.8837
2022-07-08 22:01:21.545683: validation loss: -0.7676
2022-07-08 22:01:21.577372: Average global foreground Dice: [0.817]
2022-07-08 22:01:21.607851: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:01:22.358485: Suus1 maybe_update_lr lr: 0.005224
2022-07-08 22:01:22.390896: This epoch took 77.964020 s

2022-07-08 22:01:22.414865: 
epoch:  257
2022-07-08 22:02:34.848137: train loss : -0.8838
2022-07-08 22:02:40.795453: validation loss: -0.7613
2022-07-08 22:02:40.828301: Average global foreground Dice: [0.8139]
2022-07-08 22:02:40.860889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:02:41.601969: Suus1 maybe_update_lr lr: 0.005204
2022-07-08 22:02:41.630051: This epoch took 79.193180 s

2022-07-08 22:02:41.659944: 
epoch:  258
2022-07-08 22:03:54.100757: train loss : -0.8817
2022-07-08 22:03:59.892650: validation loss: -0.7720
2022-07-08 22:03:59.924491: Average global foreground Dice: [0.8205]
2022-07-08 22:03:59.958873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:04:00.528611: Suus1 maybe_update_lr lr: 0.005185
2022-07-08 22:04:00.548908: This epoch took 78.868909 s

2022-07-08 22:04:00.571862: 
epoch:  259
2022-07-08 22:05:11.494677: train loss : -0.8826
2022-07-08 22:05:16.713420: validation loss: -0.7629
2022-07-08 22:05:16.756616: Average global foreground Dice: [0.8171]
2022-07-08 22:05:16.780972: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:05:17.663115: Suus1 maybe_update_lr lr: 0.005166
2022-07-08 22:05:17.696903: This epoch took 77.103028 s

2022-07-08 22:05:17.723908: 
epoch:  260
2022-07-08 22:06:31.239036: train loss : -0.8848
2022-07-08 22:06:36.000587: validation loss: -0.7749
2022-07-08 22:06:36.041715: Average global foreground Dice: [0.8212]
2022-07-08 22:06:36.056875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:06:36.623305: Suus1 maybe_update_lr lr: 0.005146
2022-07-08 22:06:36.643800: This epoch took 78.909112 s

2022-07-08 22:06:36.657354: 
epoch:  261
2022-07-08 22:07:48.658266: train loss : -0.8806
2022-07-08 22:07:53.742147: validation loss: -0.7807
2022-07-08 22:07:53.764947: Average global foreground Dice: [0.8297]
2022-07-08 22:07:53.794866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:07:54.500951: Suus1 maybe_update_lr lr: 0.005127
2022-07-08 22:07:54.516564: This epoch took 77.837699 s

2022-07-08 22:07:54.528830: 
epoch:  262
2022-07-08 22:09:06.486653: train loss : -0.8870
2022-07-08 22:09:11.640751: validation loss: -0.7757
2022-07-08 22:09:11.663146: Average global foreground Dice: [0.8246]
2022-07-08 22:09:11.683872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:09:12.347323: Suus1 maybe_update_lr lr: 0.005107
2022-07-08 22:09:12.368937: This epoch took 77.817359 s

2022-07-08 22:09:12.395228: 
epoch:  263
2022-07-08 22:10:22.889472: train loss : -0.8864
2022-07-08 22:10:27.592112: validation loss: -0.7977
2022-07-08 22:10:27.631296: Average global foreground Dice: [0.8421]
2022-07-08 22:10:27.643886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:10:28.577222: Suus1 maybe_update_lr lr: 0.005088
2022-07-08 22:10:28.610993: This epoch took 76.194082 s

2022-07-08 22:10:28.632869: 
epoch:  264
2022-07-08 22:11:38.849166: train loss : -0.8862
2022-07-08 22:11:44.186282: validation loss: -0.7790
2022-07-08 22:11:44.212054: Average global foreground Dice: [0.8264]
2022-07-08 22:11:44.232565: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:11:45.057398: Suus1 maybe_update_lr lr: 0.005069
2022-07-08 22:11:45.076900: saving best epoch checkpoint...
2022-07-08 22:11:45.235300: saving checkpoint...
2022-07-08 22:11:46.848540: done, saving took 1.75 seconds
2022-07-08 22:11:46.867408: This epoch took 78.214102 s

2022-07-08 22:11:46.869690: 
epoch:  265
2022-07-08 22:12:56.957551: train loss : -0.8866
2022-07-08 22:13:02.439311: validation loss: -0.7925
2022-07-08 22:13:02.468197: Average global foreground Dice: [0.8385]
2022-07-08 22:13:02.489866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:13:03.228863: Suus1 maybe_update_lr lr: 0.005049
2022-07-08 22:13:03.231441: saving best epoch checkpoint...
2022-07-08 22:13:03.395607: saving checkpoint...
2022-07-08 22:13:05.070622: done, saving took 1.82 seconds
2022-07-08 22:13:05.088068: This epoch took 78.216298 s

2022-07-08 22:13:05.090303: 
epoch:  266
2022-07-08 22:14:16.614027: train loss : -0.8845
2022-07-08 22:14:22.562132: validation loss: -0.7611
2022-07-08 22:14:22.575381: Average global foreground Dice: [0.8155]
2022-07-08 22:14:22.615861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:14:23.314410: Suus1 maybe_update_lr lr: 0.00503
2022-07-08 22:14:23.346921: This epoch took 78.254451 s

2022-07-08 22:14:23.368875: 
epoch:  267
2022-07-08 22:15:34.926121: train loss : -0.8790
2022-07-08 22:15:40.945331: validation loss: -0.7893
2022-07-08 22:15:40.978702: Average global foreground Dice: [0.8328]
2022-07-08 22:15:41.016891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:15:41.702268: Suus1 maybe_update_lr lr: 0.00501
2022-07-08 22:15:41.715235: This epoch took 78.324355 s

2022-07-08 22:15:41.718910: 
epoch:  268
2022-07-08 22:16:53.784566: train loss : -0.8821
2022-07-08 22:16:58.656111: validation loss: -0.7583
2022-07-08 22:16:58.692502: Average global foreground Dice: [0.8114]
2022-07-08 22:16:58.712550: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:16:59.212257: Suus1 maybe_update_lr lr: 0.004991
2022-07-08 22:16:59.239938: This epoch took 77.499950 s

2022-07-08 22:16:59.261942: 
epoch:  269
2022-07-08 22:18:09.161486: train loss : -0.8845
2022-07-08 22:18:14.161013: validation loss: -0.7785
2022-07-08 22:18:14.195984: Average global foreground Dice: [0.83]
2022-07-08 22:18:14.198283: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:18:14.935954: Suus1 maybe_update_lr lr: 0.004971
2022-07-08 22:18:14.955917: This epoch took 75.672058 s

2022-07-08 22:18:14.980865: 
epoch:  270
2022-07-08 22:19:26.228069: train loss : -0.8883
2022-07-08 22:19:31.265182: validation loss: -0.7882
2022-07-08 22:19:31.310247: Average global foreground Dice: [0.8339]
2022-07-08 22:19:31.342882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:19:32.230750: Suus1 maybe_update_lr lr: 0.004952
2022-07-08 22:19:32.254952: saving best epoch checkpoint...
2022-07-08 22:19:32.366948: saving checkpoint...
2022-07-08 22:19:34.046307: done, saving took 1.76 seconds
2022-07-08 22:19:34.071845: This epoch took 79.068831 s

2022-07-08 22:19:34.074360: 
epoch:  271
2022-07-08 22:20:44.782682: train loss : -0.8882
2022-07-08 22:20:50.222562: validation loss: -0.7660
2022-07-08 22:20:50.257347: Average global foreground Dice: [0.8182]
2022-07-08 22:20:50.279869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:20:51.045993: Suus1 maybe_update_lr lr: 0.004933
2022-07-08 22:20:51.063512: This epoch took 76.986766 s

2022-07-08 22:20:51.096475: 
epoch:  272
2022-07-08 22:22:02.427258: train loss : -0.8898
2022-07-08 22:22:07.863157: validation loss: -0.7696
2022-07-08 22:22:07.898116: Average global foreground Dice: [0.82]
2022-07-08 22:22:07.926122: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:22:08.601996: Suus1 maybe_update_lr lr: 0.004913
2022-07-08 22:22:08.631910: This epoch took 77.528514 s

2022-07-08 22:22:08.647868: 
epoch:  273
2022-07-08 22:23:19.211753: train loss : -0.8870
2022-07-08 22:23:24.294187: validation loss: -0.7680
2022-07-08 22:23:24.325250: Average global foreground Dice: [0.8174]
2022-07-08 22:23:24.337986: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:23:25.155473: Suus1 maybe_update_lr lr: 0.004894
2022-07-08 22:23:25.196914: This epoch took 76.514383 s

2022-07-08 22:23:25.218858: 
epoch:  274
2022-07-08 22:24:36.079989: train loss : -0.8887
2022-07-08 22:24:41.343176: validation loss: -0.7718
2022-07-08 22:24:41.359395: Average global foreground Dice: [0.8213]
2022-07-08 22:24:41.426882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:24:42.100891: Suus1 maybe_update_lr lr: 0.004874
2022-07-08 22:24:42.117804: This epoch took 76.865928 s

2022-07-08 22:24:42.137769: 
epoch:  275
2022-07-08 22:25:53.589581: train loss : -0.8845
2022-07-08 22:25:58.756981: validation loss: -0.7639
2022-07-08 22:25:58.788474: Average global foreground Dice: [0.8122]
2022-07-08 22:25:58.808257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:25:59.561241: Suus1 maybe_update_lr lr: 0.004855
2022-07-08 22:25:59.590228: This epoch took 77.417352 s

2022-07-08 22:25:59.610274: 
epoch:  276
2022-07-08 22:27:11.577492: train loss : -0.8862
2022-07-08 22:27:16.517607: validation loss: -0.7699
2022-07-08 22:27:16.549403: Average global foreground Dice: [0.8188]
2022-07-08 22:27:16.569117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:27:17.295365: Suus1 maybe_update_lr lr: 0.004835
2022-07-08 22:27:17.317886: This epoch took 77.696111 s

2022-07-08 22:27:17.335250: 
epoch:  277
2022-07-08 22:28:27.338295: train loss : -0.8892
2022-07-08 22:28:32.622552: validation loss: -0.7574
2022-07-08 22:28:32.653358: Average global foreground Dice: [0.8083]
2022-07-08 22:28:32.677889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:28:33.628956: Suus1 maybe_update_lr lr: 0.004816
2022-07-08 22:28:33.659906: This epoch took 76.301029 s

2022-07-08 22:28:33.692860: 
epoch:  278
2022-07-08 22:29:44.515341: train loss : -0.8899
2022-07-08 22:29:49.734929: validation loss: -0.7694
2022-07-08 22:29:49.768625: Average global foreground Dice: [0.8209]
2022-07-08 22:29:49.798874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:29:50.474300: Suus1 maybe_update_lr lr: 0.004796
2022-07-08 22:29:50.496001: This epoch took 76.781125 s

2022-07-08 22:29:50.528853: 
epoch:  279
2022-07-08 22:31:03.220816: train loss : -0.8906
2022-07-08 22:31:08.069035: validation loss: -0.7646
2022-07-08 22:31:08.073594: Average global foreground Dice: [0.8148]
2022-07-08 22:31:08.102108: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:31:08.780174: Suus1 maybe_update_lr lr: 0.004776
2022-07-08 22:31:08.797896: This epoch took 78.247019 s

2022-07-08 22:31:08.814866: 
epoch:  280
2022-07-08 22:32:19.767757: train loss : -0.8912
2022-07-08 22:32:24.628171: validation loss: -0.7696
2022-07-08 22:32:24.632168: Average global foreground Dice: [0.8159]
2022-07-08 22:32:24.662878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:32:25.406184: Suus1 maybe_update_lr lr: 0.004757
2022-07-08 22:32:25.436974: This epoch took 76.608811 s

2022-07-08 22:32:25.458847: 
epoch:  281
2022-07-08 22:33:36.985836: train loss : -0.8912
2022-07-08 22:33:42.749760: validation loss: -0.7777
2022-07-08 22:33:42.768057: Average global foreground Dice: [0.8284]
2022-07-08 22:33:42.792860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:33:43.534691: Suus1 maybe_update_lr lr: 0.004737
2022-07-08 22:33:43.556491: This epoch took 78.075630 s

2022-07-08 22:33:43.579888: 
epoch:  282
2022-07-08 22:34:54.697867: train loss : -0.8906
2022-07-08 22:34:59.192322: validation loss: -0.7861
2022-07-08 22:34:59.228454: Average global foreground Dice: [0.833]
2022-07-08 22:34:59.241869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:35:00.029456: Suus1 maybe_update_lr lr: 0.004718
2022-07-08 22:35:00.050998: This epoch took 76.449138 s

2022-07-08 22:35:00.083871: 
epoch:  283
2022-07-08 22:36:12.001042: train loss : -0.8921
2022-07-08 22:36:17.498448: validation loss: -0.7751
2022-07-08 22:36:17.533939: Average global foreground Dice: [0.8209]
2022-07-08 22:36:17.561952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:36:18.135064: Suus1 maybe_update_lr lr: 0.004698
2022-07-08 22:36:18.154911: This epoch took 78.044041 s

2022-07-08 22:36:18.177853: 
epoch:  284
2022-07-08 22:37:29.533959: train loss : -0.8890
2022-07-08 22:37:34.407073: validation loss: -0.7755
2022-07-08 22:37:34.444867: Average global foreground Dice: [0.8258]
2022-07-08 22:37:34.464620: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:37:35.136153: Suus1 maybe_update_lr lr: 0.004679
2022-07-08 22:37:35.168892: This epoch took 76.969027 s

2022-07-08 22:37:35.201864: 
epoch:  285
2022-07-08 22:38:46.660997: train loss : -0.8897
2022-07-08 22:38:51.488885: validation loss: -0.7754
2022-07-08 22:38:51.494375: Average global foreground Dice: [0.8286]
2022-07-08 22:38:51.522136: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:38:52.199005: Suus1 maybe_update_lr lr: 0.004659
2022-07-08 22:38:52.218918: This epoch took 76.995067 s

2022-07-08 22:38:52.239864: 
epoch:  286
2022-07-08 22:40:04.236206: train loss : -0.8942
2022-07-08 22:40:09.241085: validation loss: -0.7641
2022-07-08 22:40:09.258863: Average global foreground Dice: [0.8127]
2022-07-08 22:40:09.274751: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:40:09.784193: Suus1 maybe_update_lr lr: 0.004639
2022-07-08 22:40:09.803906: This epoch took 77.561157 s

2022-07-08 22:40:09.825877: 
epoch:  287
2022-07-08 22:41:21.525221: train loss : -0.8906
2022-07-08 22:41:26.640777: validation loss: -0.7748
2022-07-08 22:41:26.663661: Average global foreground Dice: [0.822]
2022-07-08 22:41:26.683337: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:41:27.479697: Suus1 maybe_update_lr lr: 0.00462
2022-07-08 22:41:27.508877: This epoch took 77.661004 s

2022-07-08 22:41:27.516629: 
epoch:  288
2022-07-08 22:42:38.353210: train loss : -0.8926
2022-07-08 22:42:43.806550: validation loss: -0.7794
2022-07-08 22:42:43.827307: Average global foreground Dice: [0.8268]
2022-07-08 22:42:43.847174: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:42:44.503983: Suus1 maybe_update_lr lr: 0.0046
2022-07-08 22:42:44.520039: This epoch took 76.975750 s

2022-07-08 22:42:44.537543: 
epoch:  289
2022-07-08 22:43:56.325466: train loss : -0.8932
2022-07-08 22:44:01.117206: validation loss: -0.7721
2022-07-08 22:44:01.156273: Average global foreground Dice: [0.8212]
2022-07-08 22:44:01.180886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:44:02.021199: Suus1 maybe_update_lr lr: 0.004581
2022-07-08 22:44:02.048133: This epoch took 77.493249 s

2022-07-08 22:44:02.069857: 
epoch:  290
2022-07-08 22:45:13.325838: train loss : -0.8932
2022-07-08 22:45:18.269577: validation loss: -0.7754
2022-07-08 22:45:18.303392: Average global foreground Dice: [0.8251]
2022-07-08 22:45:18.320960: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:45:18.888276: Suus1 maybe_update_lr lr: 0.004561
2022-07-08 22:45:18.899443: This epoch took 76.801463 s

2022-07-08 22:45:18.926867: 
epoch:  291
2022-07-08 22:46:29.356052: train loss : -0.8934
2022-07-08 22:46:34.223186: validation loss: -0.7746
2022-07-08 22:46:34.241312: Average global foreground Dice: [0.8215]
2022-07-08 22:46:34.258826: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:46:34.959274: Suus1 maybe_update_lr lr: 0.004541
2022-07-08 22:46:34.996022: This epoch took 76.036150 s

2022-07-08 22:46:35.001825: 
epoch:  292
2022-07-08 22:47:45.986518: train loss : -0.8913
2022-07-08 22:47:51.222095: validation loss: -0.7741
2022-07-08 22:47:51.246599: Average global foreground Dice: [0.8211]
2022-07-08 22:47:51.276893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:47:52.055197: Suus1 maybe_update_lr lr: 0.004522
2022-07-08 22:47:52.088049: This epoch took 77.041176 s

2022-07-08 22:47:52.108083: 
epoch:  293
2022-07-08 22:49:04.055440: train loss : -0.8876
2022-07-08 22:49:08.786502: validation loss: -0.7756
2022-07-08 22:49:08.793964: Average global foreground Dice: [0.8298]
2022-07-08 22:49:08.820893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:49:09.481236: Suus1 maybe_update_lr lr: 0.004502
2022-07-08 22:49:09.506261: This epoch took 77.378063 s

2022-07-08 22:49:09.542863: 
epoch:  294
2022-07-08 22:50:20.532331: train loss : -0.8947
2022-07-08 22:50:25.807471: validation loss: -0.7854
2022-07-08 22:50:25.834296: Average global foreground Dice: [0.8323]
2022-07-08 22:50:25.866886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:50:26.650352: Suus1 maybe_update_lr lr: 0.004482
2022-07-08 22:50:26.672548: This epoch took 77.118857 s

2022-07-08 22:50:26.696036: 
epoch:  295
2022-07-08 22:51:37.411452: train loss : -0.8957
2022-07-08 22:51:42.965462: validation loss: -0.7693
2022-07-08 22:51:43.000016: Average global foreground Dice: [0.8172]
2022-07-08 22:51:43.040256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:51:43.889197: Suus1 maybe_update_lr lr: 0.004463
2022-07-08 22:51:43.913515: This epoch took 77.187635 s

2022-07-08 22:51:43.940877: 
epoch:  296
2022-07-08 22:52:56.245297: train loss : -0.8932
2022-07-08 22:53:01.455772: validation loss: -0.7562
2022-07-08 22:53:01.476186: Average global foreground Dice: [0.8097]
2022-07-08 22:53:01.499683: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:53:02.416131: Suus1 maybe_update_lr lr: 0.004443
2022-07-08 22:53:02.443039: This epoch took 78.476051 s

2022-07-08 22:53:02.457130: 
epoch:  297
2022-07-08 22:54:13.074961: train loss : -0.8918
2022-07-08 22:54:18.376985: validation loss: -0.7746
2022-07-08 22:54:18.402938: Average global foreground Dice: [0.8266]
2022-07-08 22:54:18.434983: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:54:19.161256: Suus1 maybe_update_lr lr: 0.004423
2022-07-08 22:54:19.181180: This epoch took 76.696291 s

2022-07-08 22:54:19.201275: 
epoch:  298
2022-07-08 22:55:31.437486: train loss : -0.8917
2022-07-08 22:55:36.505278: validation loss: -0.7862
2022-07-08 22:55:36.529994: Average global foreground Dice: [0.8352]
2022-07-08 22:55:36.537760: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:55:37.307238: Suus1 maybe_update_lr lr: 0.004404
2022-07-08 22:55:37.339037: This epoch took 78.118170 s

2022-07-08 22:55:37.378299: 
epoch:  299
2022-07-08 22:56:48.309477: train loss : -0.8920
2022-07-08 22:56:54.233563: validation loss: -0.7756
2022-07-08 22:56:54.253330: Average global foreground Dice: [0.8198]
2022-07-08 22:56:54.274872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:56:54.920349: Suus1 maybe_update_lr lr: 0.004384
2022-07-08 22:56:54.947882: saving scheduled checkpoint file...
2022-07-08 22:56:55.090574: saving checkpoint...
2022-07-08 22:56:56.755061: done, saving took 1.78 seconds
2022-07-08 22:56:56.772877: done
2022-07-08 22:56:56.775009: This epoch took 79.352138 s

2022-07-08 22:56:56.776957: 
epoch:  300
2022-07-08 22:58:07.553619: train loss : -0.8937
2022-07-08 22:58:12.375623: validation loss: -0.7844
2022-07-08 22:58:12.414356: Average global foreground Dice: [0.8337]
2022-07-08 22:58:12.443196: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:58:13.392730: Suus1 maybe_update_lr lr: 0.004364
2022-07-08 22:58:13.413908: This epoch took 76.634905 s

2022-07-08 22:58:13.435850: 
epoch:  301
2022-07-08 22:59:25.167052: train loss : -0.8966
2022-07-08 22:59:30.169208: validation loss: -0.7781
2022-07-08 22:59:30.205219: Average global foreground Dice: [0.8244]
2022-07-08 22:59:30.231026: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:59:31.009387: Suus1 maybe_update_lr lr: 0.004344
2022-07-08 22:59:31.041917: This epoch took 77.580040 s

2022-07-08 22:59:31.072900: 
epoch:  302
2022-07-08 23:00:40.833962: train loss : -0.8948
2022-07-08 23:00:45.594648: validation loss: -0.7757
2022-07-08 23:00:45.600299: Average global foreground Dice: [0.827]
2022-07-08 23:00:45.602754: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:00:46.236463: Suus1 maybe_update_lr lr: 0.004325
2022-07-08 23:00:46.238917: This epoch took 75.134028 s

2022-07-08 23:00:46.241093: 
epoch:  303
2022-07-08 23:01:57.447833: train loss : -0.8916
2022-07-08 23:02:02.220927: validation loss: -0.7684
2022-07-08 23:02:02.247433: Average global foreground Dice: [0.8199]
2022-07-08 23:02:02.272848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:02:03.133058: Suus1 maybe_update_lr lr: 0.004305
2022-07-08 23:02:03.172533: This epoch took 76.929226 s

2022-07-08 23:02:03.193931: 
epoch:  304
2022-07-08 23:03:13.721025: train loss : -0.8943
2022-07-08 23:03:18.719074: validation loss: -0.7856
2022-07-08 23:03:18.746263: Average global foreground Dice: [0.8366]
2022-07-08 23:03:18.776307: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:03:19.658979: Suus1 maybe_update_lr lr: 0.004285
2022-07-08 23:03:19.690907: saving best epoch checkpoint...
2022-07-08 23:03:19.773164: saving checkpoint...
2022-07-08 23:03:21.613898: done, saving took 1.91 seconds
2022-07-08 23:03:21.629542: This epoch took 78.425936 s

2022-07-08 23:03:21.631811: 
epoch:  305
2022-07-08 23:04:31.552689: train loss : -0.8931
2022-07-08 23:04:36.896369: validation loss: -0.7842
2022-07-08 23:04:36.905352: Average global foreground Dice: [0.8341]
2022-07-08 23:04:36.914049: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:04:37.596522: Suus1 maybe_update_lr lr: 0.004265
2022-07-08 23:04:37.633433: saving best epoch checkpoint...
2022-07-08 23:04:37.728724: saving checkpoint...
2022-07-08 23:04:39.252772: done, saving took 1.59 seconds
2022-07-08 23:04:39.270428: This epoch took 77.636469 s

2022-07-08 23:04:39.272611: 
epoch:  306
2022-07-08 23:05:49.704539: train loss : -0.8957
2022-07-08 23:05:54.599555: validation loss: -0.7849
2022-07-08 23:05:54.632489: Average global foreground Dice: [0.8316]
2022-07-08 23:05:54.647875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:05:55.437855: Suus1 maybe_update_lr lr: 0.004245
2022-07-08 23:05:55.458928: saving best epoch checkpoint...
2022-07-08 23:05:55.562584: saving checkpoint...
2022-07-08 23:05:57.329844: done, saving took 1.84 seconds
2022-07-08 23:05:57.346615: This epoch took 78.072028 s

2022-07-08 23:05:57.349046: 
epoch:  307
2022-07-08 23:07:08.314478: train loss : -0.8974
2022-07-08 23:07:13.465961: validation loss: -0.7604
2022-07-08 23:07:13.507301: Average global foreground Dice: [0.8138]
2022-07-08 23:07:13.519891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:07:14.175033: Suus1 maybe_update_lr lr: 0.004226
2022-07-08 23:07:14.177783: This epoch took 76.826608 s

2022-07-08 23:07:14.202968: 
epoch:  308
2022-07-08 23:08:24.890497: train loss : -0.8975
2022-07-08 23:08:29.731236: validation loss: -0.7812
2022-07-08 23:08:29.756417: Average global foreground Dice: [0.8293]
2022-07-08 23:08:29.776886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:08:30.409519: Suus1 maybe_update_lr lr: 0.004206
2022-07-08 23:08:30.421508: This epoch took 76.196633 s

2022-07-08 23:08:30.435710: 
epoch:  309
2022-07-08 23:09:41.700764: train loss : -0.8978
2022-07-08 23:09:47.237514: validation loss: -0.7552
2022-07-08 23:09:47.283038: Average global foreground Dice: [0.8057]
2022-07-08 23:09:47.287771: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:09:47.917135: Suus1 maybe_update_lr lr: 0.004186
2022-07-08 23:09:47.936913: This epoch took 77.483899 s

2022-07-08 23:09:47.963862: 
epoch:  310
2022-07-08 23:10:59.099173: train loss : -0.8985
2022-07-08 23:11:04.853336: validation loss: -0.7598
2022-07-08 23:11:04.877618: Average global foreground Dice: [0.8116]
2022-07-08 23:11:04.903814: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:11:05.608360: Suus1 maybe_update_lr lr: 0.004166
2022-07-08 23:11:05.639020: This epoch took 77.647038 s

2022-07-08 23:11:05.661043: 
epoch:  311
2022-07-08 23:12:17.111820: train loss : -0.8970
2022-07-08 23:12:22.000553: validation loss: -0.7846
2022-07-08 23:12:22.035259: Average global foreground Dice: [0.8371]
2022-07-08 23:12:22.058874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:12:22.723981: Suus1 maybe_update_lr lr: 0.004146
2022-07-08 23:12:22.728754: This epoch took 77.044528 s

2022-07-08 23:12:22.771873: 
epoch:  312
2022-07-08 23:13:33.113761: train loss : -0.8984
2022-07-08 23:13:38.039062: validation loss: -0.7771
2022-07-08 23:13:38.070268: Average global foreground Dice: [0.8217]
2022-07-08 23:13:38.084880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:13:38.804689: Suus1 maybe_update_lr lr: 0.004127
2022-07-08 23:13:38.824887: This epoch took 76.022608 s

2022-07-08 23:13:38.846878: 
epoch:  313
2022-07-08 23:14:50.866003: train loss : -0.9004
2022-07-08 23:14:55.963494: validation loss: -0.7718
2022-07-08 23:14:56.003305: Average global foreground Dice: [0.8254]
2022-07-08 23:14:56.018875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:14:56.804401: Suus1 maybe_update_lr lr: 0.004107
2022-07-08 23:14:56.836926: This epoch took 77.967922 s

2022-07-08 23:14:56.866028: 
epoch:  314
2022-07-08 23:16:09.602143: train loss : -0.8987
2022-07-08 23:16:14.757604: validation loss: -0.7776
2022-07-08 23:16:14.776199: Average global foreground Dice: [0.8259]
2022-07-08 23:16:14.782499: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:16:15.490775: Suus1 maybe_update_lr lr: 0.004087
2022-07-08 23:16:15.493236: This epoch took 78.605358 s

2022-07-08 23:16:15.495307: 
epoch:  315
2022-07-08 23:17:26.596666: train loss : -0.8954
2022-07-08 23:17:31.403271: validation loss: -0.7671
2022-07-08 23:17:31.423201: Average global foreground Dice: [0.8178]
2022-07-08 23:17:31.439780: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:17:32.138881: Suus1 maybe_update_lr lr: 0.004067
2022-07-08 23:17:32.157927: This epoch took 76.660599 s

2022-07-08 23:17:32.174863: 
epoch:  316
2022-07-08 23:18:43.724121: train loss : -0.8957
2022-07-08 23:18:49.391310: validation loss: -0.7684
2022-07-08 23:18:49.416601: Average global foreground Dice: [0.8184]
2022-07-08 23:18:49.430880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:18:50.083879: Suus1 maybe_update_lr lr: 0.004047
2022-07-08 23:18:50.097907: This epoch took 77.891699 s

2022-07-08 23:18:50.118536: 
epoch:  317
2022-07-08 23:20:01.514037: train loss : -0.8963
2022-07-08 23:20:06.684973: validation loss: -0.7750
2022-07-08 23:20:06.707307: Average global foreground Dice: [0.8247]
2022-07-08 23:20:06.749876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:20:07.600371: Suus1 maybe_update_lr lr: 0.004027
2022-07-08 23:20:07.631775: This epoch took 77.473005 s

2022-07-08 23:20:07.657863: 
epoch:  318
2022-07-08 23:21:18.217386: train loss : -0.8982
2022-07-08 23:21:23.356308: validation loss: -0.7825
2022-07-08 23:21:23.377893: Average global foreground Dice: [0.831]
2022-07-08 23:21:23.380330: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:21:23.982418: Suus1 maybe_update_lr lr: 0.004007
2022-07-08 23:21:24.001906: This epoch took 76.334268 s

2022-07-08 23:21:24.023860: 
epoch:  319
2022-07-08 23:22:34.515126: train loss : -0.8979
2022-07-08 23:22:39.860593: validation loss: -0.7835
2022-07-08 23:22:39.912245: Average global foreground Dice: [0.8293]
2022-07-08 23:22:39.928740: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:22:40.580300: Suus1 maybe_update_lr lr: 0.003987
2022-07-08 23:22:40.598192: This epoch took 76.552312 s

2022-07-08 23:22:40.620903: 
epoch:  320
2022-07-08 23:23:51.700255: train loss : -0.9018
2022-07-08 23:23:56.444481: validation loss: -0.7722
2022-07-08 23:23:56.471169: Average global foreground Dice: [0.828]
2022-07-08 23:23:56.479869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:23:57.388264: Suus1 maybe_update_lr lr: 0.003967
2022-07-08 23:23:57.409893: This epoch took 76.779030 s

2022-07-08 23:23:57.442921: 
epoch:  321
2022-07-08 23:25:10.543784: train loss : -0.8985
2022-07-08 23:25:15.996504: validation loss: -0.7896
2022-07-08 23:25:16.048426: Average global foreground Dice: [0.8327]
2022-07-08 23:25:16.080869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:25:16.926247: Suus1 maybe_update_lr lr: 0.003947
2022-07-08 23:25:16.968048: This epoch took 79.478024 s

2022-07-08 23:25:16.989893: 
epoch:  322
2022-07-08 23:26:29.356745: train loss : -0.9003
2022-07-08 23:26:34.246437: validation loss: -0.7607
2022-07-08 23:26:34.251366: Average global foreground Dice: [0.8152]
2022-07-08 23:26:34.255627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:26:35.160322: Suus1 maybe_update_lr lr: 0.003927
2022-07-08 23:26:35.246917: This epoch took 78.243177 s

2022-07-08 23:26:35.268857: 
epoch:  323
2022-07-08 23:27:46.806279: train loss : -0.8897
2022-07-08 23:27:51.713255: validation loss: -0.7674
2022-07-08 23:27:51.757124: Average global foreground Dice: [0.8139]
2022-07-08 23:27:51.771541: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:27:52.443224: Suus1 maybe_update_lr lr: 0.003907
2022-07-08 23:27:52.466348: This epoch took 77.175489 s

2022-07-08 23:27:52.492254: 
epoch:  324
2022-07-08 23:29:04.193008: train loss : -0.8902
2022-07-08 23:29:09.009854: validation loss: -0.7631
2022-07-08 23:29:09.020381: Average global foreground Dice: [0.8144]
2022-07-08 23:29:09.023725: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:29:09.868248: Suus1 maybe_update_lr lr: 0.003887
2022-07-08 23:29:09.889876: This epoch took 77.367549 s

2022-07-08 23:29:09.902403: 
epoch:  325
2022-07-08 23:30:20.392868: train loss : -0.8982
2022-07-08 23:30:25.126708: validation loss: -0.7747
2022-07-08 23:30:25.156281: Average global foreground Dice: [0.8195]
2022-07-08 23:30:25.181985: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:30:25.749677: Suus1 maybe_update_lr lr: 0.003867
2022-07-08 23:30:25.776769: This epoch took 75.861810 s

2022-07-08 23:30:25.797013: 
epoch:  326
2022-07-08 23:31:38.743187: train loss : -0.8999
2022-07-08 23:31:43.730210: validation loss: -0.7660
2022-07-08 23:31:43.761254: Average global foreground Dice: [0.8197]
2022-07-08 23:31:43.773867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:31:44.396094: Suus1 maybe_update_lr lr: 0.003847
2022-07-08 23:31:44.413371: This epoch took 78.596262 s

2022-07-08 23:31:44.439249: 
epoch:  327
2022-07-08 23:32:56.070675: train loss : -0.8963
2022-07-08 23:33:00.899384: validation loss: -0.7602
2022-07-08 23:33:00.903031: Average global foreground Dice: [0.8107]
2022-07-08 23:33:00.916040: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:33:01.474851: Suus1 maybe_update_lr lr: 0.003827
2022-07-08 23:33:01.483438: This epoch took 77.024069 s

2022-07-08 23:33:01.505900: 
epoch:  328
2022-07-08 23:34:13.894902: train loss : -0.8986
2022-07-08 23:34:19.338287: validation loss: -0.7560
2022-07-08 23:34:19.373302: Average global foreground Dice: [0.8142]
2022-07-08 23:34:19.412142: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:34:20.094044: Suus1 maybe_update_lr lr: 0.003807
2022-07-08 23:34:20.121965: This epoch took 78.593867 s

2022-07-08 23:34:20.151075: 
epoch:  329
2022-07-08 23:35:31.845891: train loss : -0.9024
2022-07-08 23:35:36.753688: validation loss: -0.7815
2022-07-08 23:35:36.780028: Average global foreground Dice: [0.8352]
2022-07-08 23:35:36.804139: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:35:37.319857: Suus1 maybe_update_lr lr: 0.003787
2022-07-08 23:35:37.338893: This epoch took 77.160002 s

2022-07-08 23:35:37.360865: 
epoch:  330
2022-07-08 23:36:49.159601: train loss : -0.9026
2022-07-08 23:36:54.445982: validation loss: -0.7772
2022-07-08 23:36:54.475820: Average global foreground Dice: [0.8297]
2022-07-08 23:36:54.505871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:36:55.302010: Suus1 maybe_update_lr lr: 0.003767
2022-07-08 23:36:55.329125: This epoch took 77.945016 s

2022-07-08 23:36:55.361866: 
epoch:  331
2022-07-08 23:38:04.826542: train loss : -0.9031
2022-07-08 23:38:10.304150: validation loss: -0.7764
2022-07-08 23:38:10.331408: Average global foreground Dice: [0.8222]
2022-07-08 23:38:10.352888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:38:11.150275: Suus1 maybe_update_lr lr: 0.003747
2022-07-08 23:38:11.180019: This epoch took 75.785144 s

2022-07-08 23:38:11.201981: 
epoch:  332
2022-07-08 23:39:23.546306: train loss : -0.9021
2022-07-08 23:39:29.254229: validation loss: -0.7811
2022-07-08 23:39:29.284227: Average global foreground Dice: [0.832]
2022-07-08 23:39:29.295882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:39:29.833764: Suus1 maybe_update_lr lr: 0.003727
2022-07-08 23:39:29.852900: This epoch took 78.630904 s

2022-07-08 23:39:29.876870: 
epoch:  333
2022-07-08 23:40:41.483245: train loss : -0.9046
2022-07-08 23:40:47.299541: validation loss: -0.7831
2022-07-08 23:40:47.332284: Average global foreground Dice: [0.833]
2022-07-08 23:40:47.353895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:40:47.894302: Suus1 maybe_update_lr lr: 0.003707
2022-07-08 23:40:47.918896: This epoch took 78.021560 s

2022-07-08 23:40:47.940873: 
epoch:  334
2022-07-08 23:41:59.412336: train loss : -0.9036
2022-07-08 23:42:04.549398: validation loss: -0.7722
2022-07-08 23:42:04.583977: Average global foreground Dice: [0.8243]
2022-07-08 23:42:04.612875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:42:05.366731: Suus1 maybe_update_lr lr: 0.003687
2022-07-08 23:42:05.378759: This epoch took 77.431134 s

2022-07-08 23:42:05.391440: 
epoch:  335
2022-07-08 23:43:18.603747: train loss : -0.9026
2022-07-08 23:43:23.787032: validation loss: -0.7756
2022-07-08 23:43:23.818282: Average global foreground Dice: [0.8271]
2022-07-08 23:43:23.852344: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:43:24.429343: Suus1 maybe_update_lr lr: 0.003667
2022-07-08 23:43:24.461910: This epoch took 79.065139 s

2022-07-08 23:43:24.484870: 
epoch:  336
2022-07-08 23:44:35.414164: train loss : -0.9028
2022-07-08 23:44:40.015521: validation loss: -0.7909
2022-07-08 23:44:40.044300: Average global foreground Dice: [0.8385]
2022-07-08 23:44:40.075232: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:44:40.729828: Suus1 maybe_update_lr lr: 0.003647
2022-07-08 23:44:40.732394: This epoch took 76.235055 s

2022-07-08 23:44:40.736899: 
epoch:  337
2022-07-08 23:45:52.299026: train loss : -0.9003
2022-07-08 23:45:57.418121: validation loss: -0.7747
2022-07-08 23:45:57.454560: Average global foreground Dice: [0.8202]
2022-07-08 23:45:57.469541: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:45:58.217235: Suus1 maybe_update_lr lr: 0.003627
2022-07-08 23:45:58.249912: This epoch took 77.510776 s

2022-07-08 23:45:58.282887: 
epoch:  338
2022-07-08 23:47:09.810084: train loss : -0.9037
2022-07-08 23:47:14.605430: validation loss: -0.7863
2022-07-08 23:47:14.619832: Average global foreground Dice: [0.8382]
2022-07-08 23:47:14.656957: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:47:15.441253: Suus1 maybe_update_lr lr: 0.003606
2022-07-08 23:47:15.463922: This epoch took 77.148060 s

2022-07-08 23:47:15.487877: 
epoch:  339
2022-07-08 23:48:27.024359: train loss : -0.9032
2022-07-08 23:48:32.225464: validation loss: -0.7889
2022-07-08 23:48:32.252527: Average global foreground Dice: [0.8349]
2022-07-08 23:48:32.279871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:48:33.111230: Suus1 maybe_update_lr lr: 0.003586
2022-07-08 23:48:33.118571: saving best epoch checkpoint...
2022-07-08 23:48:33.272103: saving checkpoint...
2022-07-08 23:48:34.880201: done, saving took 1.73 seconds
2022-07-08 23:48:34.897645: This epoch took 79.387785 s

2022-07-08 23:48:34.899881: 
epoch:  340
2022-07-08 23:49:45.025069: train loss : -0.9032
2022-07-08 23:49:50.234405: validation loss: -0.7776
2022-07-08 23:49:50.268315: Average global foreground Dice: [0.8264]
2022-07-08 23:49:50.293021: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:49:50.904284: Suus1 maybe_update_lr lr: 0.003566
2022-07-08 23:49:50.924911: This epoch took 76.022890 s

2022-07-08 23:49:50.949949: 
epoch:  341
2022-07-08 23:51:02.635258: train loss : -0.9038
2022-07-08 23:51:07.795698: validation loss: -0.7544
2022-07-08 23:51:07.832908: Average global foreground Dice: [0.8033]
2022-07-08 23:51:07.866981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:51:08.453105: Suus1 maybe_update_lr lr: 0.003546
2022-07-08 23:51:08.480591: This epoch took 77.510404 s

2022-07-08 23:51:08.494856: 
epoch:  342
2022-07-08 23:52:18.541736: train loss : -0.9008
2022-07-08 23:52:23.730609: validation loss: -0.7771
2022-07-08 23:52:23.757937: Average global foreground Dice: [0.8277]
2022-07-08 23:52:23.761345: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:52:24.445094: Suus1 maybe_update_lr lr: 0.003526
2022-07-08 23:52:24.481950: This epoch took 75.964444 s

2022-07-08 23:52:24.494868: 
epoch:  343
2022-07-08 23:53:36.835083: train loss : -0.9044
2022-07-08 23:53:41.898305: validation loss: -0.7615
2022-07-08 23:53:41.939733: Average global foreground Dice: [0.8164]
2022-07-08 23:53:41.949745: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:53:42.548519: Suus1 maybe_update_lr lr: 0.003505
2022-07-08 23:53:42.571903: This epoch took 78.060685 s

2022-07-08 23:53:42.587998: 
epoch:  344
2022-07-08 23:54:53.268002: train loss : -0.9065
2022-07-08 23:54:59.188025: validation loss: -0.7781
2022-07-08 23:54:59.205500: Average global foreground Dice: [0.8273]
2022-07-08 23:54:59.213001: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:54:59.860363: Suus1 maybe_update_lr lr: 0.003485
2022-07-08 23:54:59.881925: This epoch took 77.261749 s

2022-07-08 23:54:59.903852: 
epoch:  345
2022-07-08 23:56:12.347945: train loss : -0.9037
2022-07-08 23:56:17.699997: validation loss: -0.7783
2022-07-08 23:56:17.729227: Average global foreground Dice: [0.8273]
2022-07-08 23:56:17.756856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:56:18.458810: Suus1 maybe_update_lr lr: 0.003465
2022-07-08 23:56:18.479950: This epoch took 78.554069 s

2022-07-08 23:56:18.498636: 
epoch:  346
2022-07-08 23:57:29.924976: train loss : -0.9054
2022-07-08 23:57:35.384905: validation loss: -0.7815
2022-07-08 23:57:35.415281: Average global foreground Dice: [0.8242]
2022-07-08 23:57:35.436986: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:57:36.177277: Suus1 maybe_update_lr lr: 0.003445
2022-07-08 23:57:36.198911: This epoch took 77.674040 s

2022-07-08 23:57:36.217093: 
epoch:  347
2022-07-08 23:58:47.248961: train loss : -0.9078
2022-07-08 23:58:52.680040: validation loss: -0.7989
2022-07-08 23:58:52.719455: Average global foreground Dice: [0.8418]
2022-07-08 23:58:52.747761: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:58:53.429556: Suus1 maybe_update_lr lr: 0.003424
2022-07-08 23:58:53.450949: This epoch took 77.216069 s

2022-07-08 23:58:53.472862: 
epoch:  348
2022-07-09 00:00:04.756021: train loss : -0.9077
2022-07-09 00:00:09.992635: validation loss: -0.7776
2022-07-09 00:00:10.041255: Average global foreground Dice: [0.8278]
2022-07-09 00:00:10.060064: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:00:10.682258: Suus1 maybe_update_lr lr: 0.003404
2022-07-09 00:00:10.703901: This epoch took 77.198032 s

2022-07-09 00:00:10.725864: 
epoch:  349
2022-07-09 00:01:22.735428: train loss : -0.9034
2022-07-09 00:01:27.521908: validation loss: -0.7661
2022-07-09 00:01:27.553654: Average global foreground Dice: [0.8148]
2022-07-09 00:01:27.588893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:01:28.328579: Suus1 maybe_update_lr lr: 0.003384
2022-07-09 00:01:28.368714: saving scheduled checkpoint file...
2022-07-09 00:01:28.474118: saving checkpoint...
2022-07-09 00:01:30.559402: done, saving took 2.17 seconds
2022-07-09 00:01:30.577016: done
2022-07-09 00:01:30.579239: This epoch took 79.828204 s

2022-07-09 00:01:30.581398: 
epoch:  350
2022-07-09 00:02:41.058694: train loss : -0.9067
2022-07-09 00:02:46.166618: validation loss: -0.7723
2022-07-09 00:02:46.220975: Average global foreground Dice: [0.8227]
2022-07-09 00:02:46.242560: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:02:47.071784: Suus1 maybe_update_lr lr: 0.003364
2022-07-09 00:02:47.102917: This epoch took 76.519333 s

2022-07-09 00:02:47.120603: 
epoch:  351
2022-07-09 00:03:57.720300: train loss : -0.9027
2022-07-09 00:04:02.584290: validation loss: -0.7734
2022-07-09 00:04:02.592015: Average global foreground Dice: [0.8214]
2022-07-09 00:04:02.596105: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:04:03.209184: Suus1 maybe_update_lr lr: 0.003343
2022-07-09 00:04:03.228887: This epoch took 76.105977 s

2022-07-09 00:04:03.250859: 
epoch:  352
2022-07-09 00:05:14.353112: train loss : -0.9064
2022-07-09 00:05:19.330027: validation loss: -0.7662
2022-07-09 00:05:19.356678: Average global foreground Dice: [0.8197]
2022-07-09 00:05:19.387002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:05:19.980893: Suus1 maybe_update_lr lr: 0.003323
2022-07-09 00:05:19.997561: This epoch took 76.713692 s

2022-07-09 00:05:19.999697: 
epoch:  353
2022-07-09 00:06:30.886623: train loss : -0.9052
2022-07-09 00:06:35.621348: validation loss: -0.7821
2022-07-09 00:06:35.656160: Average global foreground Dice: [0.8298]
2022-07-09 00:06:35.686870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:06:36.568340: Suus1 maybe_update_lr lr: 0.003303
2022-07-09 00:06:36.598899: This epoch took 76.579993 s

2022-07-09 00:06:36.631851: 
epoch:  354
2022-07-09 00:07:47.705857: train loss : -0.9073
2022-07-09 00:07:52.476355: validation loss: -0.7738
2022-07-09 00:07:52.486974: Average global foreground Dice: [0.8251]
2022-07-09 00:07:52.508151: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:07:53.122322: Suus1 maybe_update_lr lr: 0.003282
2022-07-09 00:07:53.143951: This epoch took 76.468099 s

2022-07-09 00:07:53.164011: 
epoch:  355
2022-07-09 00:09:04.399502: train loss : -0.9100
2022-07-09 00:09:09.507901: validation loss: -0.7773
2022-07-09 00:09:09.544330: Average global foreground Dice: [0.8296]
2022-07-09 00:09:09.549441: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:09:10.264441: Suus1 maybe_update_lr lr: 0.003262
2022-07-09 00:09:10.288190: This epoch took 77.104106 s

2022-07-09 00:09:10.324976: 
epoch:  356
2022-07-09 00:10:20.884532: train loss : -0.9102
2022-07-09 00:10:25.685236: validation loss: -0.7900
2022-07-09 00:10:25.723235: Average global foreground Dice: [0.8367]
2022-07-09 00:10:25.760371: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:10:26.593305: Suus1 maybe_update_lr lr: 0.003241
2022-07-09 00:10:26.596826: This epoch took 76.250273 s

2022-07-09 00:10:26.622492: 
epoch:  357
2022-07-09 00:11:38.088757: train loss : -0.9068
2022-07-09 00:11:43.540944: validation loss: -0.7809
2022-07-09 00:11:43.587325: Average global foreground Dice: [0.8301]
2022-07-09 00:11:43.614120: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:11:44.301161: Suus1 maybe_update_lr lr: 0.003221
2022-07-09 00:11:44.338051: This epoch took 77.693075 s

2022-07-09 00:11:44.372133: 
epoch:  358
2022-07-09 00:12:56.305703: train loss : -0.9093
2022-07-09 00:13:01.631830: validation loss: -0.7647
2022-07-09 00:13:01.661493: Average global foreground Dice: [0.8144]
2022-07-09 00:13:01.675875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:13:02.232696: Suus1 maybe_update_lr lr: 0.003201
2022-07-09 00:13:02.272662: This epoch took 77.890281 s

2022-07-09 00:13:02.291806: 
epoch:  359
2022-07-09 00:14:14.755911: train loss : -0.9077
2022-07-09 00:14:20.874482: validation loss: -0.7702
2022-07-09 00:14:20.915134: Average global foreground Dice: [0.8209]
2022-07-09 00:14:20.921261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:14:21.482328: Suus1 maybe_update_lr lr: 0.00318
2022-07-09 00:14:21.503913: This epoch took 79.181036 s

2022-07-09 00:14:21.525853: 
epoch:  360
2022-07-09 00:15:35.006883: train loss : -0.9063
2022-07-09 00:15:40.243871: validation loss: -0.7773
2022-07-09 00:15:40.272266: Average global foreground Dice: [0.8262]
2022-07-09 00:15:40.311861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:15:41.035261: Suus1 maybe_update_lr lr: 0.00316
2022-07-09 00:15:41.067915: This epoch took 79.520045 s

2022-07-09 00:15:41.100906: 
epoch:  361
2022-07-09 00:16:52.642132: train loss : -0.9089
2022-07-09 00:16:57.598467: validation loss: -0.7889
2022-07-09 00:16:57.632278: Average global foreground Dice: [0.8353]
2022-07-09 00:16:57.664892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:16:58.424357: Suus1 maybe_update_lr lr: 0.003139
2022-07-09 00:16:58.456912: This epoch took 77.347549 s

2022-07-09 00:16:58.487866: 
epoch:  362
2022-07-09 00:18:08.187631: train loss : -0.9114
2022-07-09 00:18:13.682937: validation loss: -0.7793
2022-07-09 00:18:13.721351: Average global foreground Dice: [0.8295]
2022-07-09 00:18:13.742892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:18:14.587151: Suus1 maybe_update_lr lr: 0.003119
2022-07-09 00:18:14.607936: This epoch took 76.087070 s

2022-07-09 00:18:14.629853: 
epoch:  363
2022-07-09 00:19:25.342347: train loss : -0.9105
2022-07-09 00:19:30.531026: validation loss: -0.7788
2022-07-09 00:19:30.570214: Average global foreground Dice: [0.8288]
2022-07-09 00:19:30.602172: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:19:31.299248: Suus1 maybe_update_lr lr: 0.003098
2022-07-09 00:19:31.321889: This epoch took 76.684431 s

2022-07-09 00:19:31.343847: 
epoch:  364
2022-07-09 00:20:42.246349: train loss : -0.9115
2022-07-09 00:20:47.039624: validation loss: -0.7702
2022-07-09 00:20:47.060484: Average global foreground Dice: [0.8222]
2022-07-09 00:20:47.077877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:20:47.652054: Suus1 maybe_update_lr lr: 0.003078
2022-07-09 00:20:47.673287: This epoch took 76.307426 s

2022-07-09 00:20:47.703285: 
epoch:  365
2022-07-09 00:21:59.994992: train loss : -0.9110
2022-07-09 00:22:05.035112: validation loss: -0.7896
2022-07-09 00:22:05.067379: Average global foreground Dice: [0.837]
2022-07-09 00:22:05.101887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:22:06.093374: Suus1 maybe_update_lr lr: 0.003057
2022-07-09 00:22:06.114920: This epoch took 78.381048 s

2022-07-09 00:22:06.141955: 
epoch:  366
2022-07-09 00:23:17.056853: train loss : -0.9133
2022-07-09 00:23:22.351295: validation loss: -0.7815
2022-07-09 00:23:22.375354: Average global foreground Dice: [0.8308]
2022-07-09 00:23:22.399952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:23:23.142245: Suus1 maybe_update_lr lr: 0.003037
2022-07-09 00:23:23.158602: saving best epoch checkpoint...
2022-07-09 00:23:23.227380: saving checkpoint...
2022-07-09 00:23:25.073048: done, saving took 1.89 seconds
2022-07-09 00:23:25.088065: This epoch took 78.918185 s

2022-07-09 00:23:25.090204: 
epoch:  367
2022-07-09 00:24:36.561708: train loss : -0.9099
2022-07-09 00:24:41.498833: validation loss: -0.7938
2022-07-09 00:24:41.531266: Average global foreground Dice: [0.8396]
2022-07-09 00:24:41.557854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:24:42.385281: Suus1 maybe_update_lr lr: 0.003016
2022-07-09 00:24:42.405895: saving best epoch checkpoint...
2022-07-09 00:24:42.485572: saving checkpoint...
2022-07-09 00:24:43.998465: done, saving took 1.56 seconds
2022-07-09 00:24:44.014602: This epoch took 78.922208 s

2022-07-09 00:24:44.016787: 
epoch:  368
2022-07-09 00:25:55.670134: train loss : -0.9098
2022-07-09 00:26:00.546547: validation loss: -0.7676
2022-07-09 00:26:00.575275: Average global foreground Dice: [0.8248]
2022-07-09 00:26:00.596874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:26:01.267535: Suus1 maybe_update_lr lr: 0.002996
2022-07-09 00:26:01.288901: This epoch took 77.269907 s

2022-07-09 00:26:01.311868: 
epoch:  369
2022-07-09 00:27:12.939760: train loss : -0.9110
2022-07-09 00:27:18.243398: validation loss: -0.7819
2022-07-09 00:27:18.266385: Average global foreground Dice: [0.8307]
2022-07-09 00:27:18.298872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:27:18.963189: Suus1 maybe_update_lr lr: 0.002975
2022-07-09 00:27:18.982908: This epoch took 77.647038 s

2022-07-09 00:27:18.996615: 
epoch:  370
2022-07-09 00:28:29.142566: train loss : -0.9120
2022-07-09 00:28:34.170329: validation loss: -0.7761
2022-07-09 00:28:34.200276: Average global foreground Dice: [0.8273]
2022-07-09 00:28:34.215972: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:28:34.840632: Suus1 maybe_update_lr lr: 0.002954
2022-07-09 00:28:34.853096: This epoch took 75.854151 s

2022-07-09 00:28:34.888259: 
epoch:  371
2022-07-09 00:29:45.622846: train loss : -0.9091
2022-07-09 00:29:50.463866: validation loss: -0.7782
2022-07-09 00:29:50.510416: Average global foreground Dice: [0.8284]
2022-07-09 00:29:50.530219: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:29:51.460807: Suus1 maybe_update_lr lr: 0.002934
2022-07-09 00:29:51.483741: This epoch took 76.575397 s

2022-07-09 00:29:51.508426: 
epoch:  372
2022-07-09 00:31:02.814111: train loss : -0.9130
2022-07-09 00:31:07.958691: validation loss: -0.7681
2022-07-09 00:31:07.992320: Average global foreground Dice: [0.8194]
2022-07-09 00:31:08.009915: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:31:08.721494: Suus1 maybe_update_lr lr: 0.002913
2022-07-09 00:31:08.740959: This epoch took 77.206083 s

2022-07-09 00:31:08.749259: 
epoch:  373
2022-07-09 00:32:20.746709: train loss : -0.9099
2022-07-09 00:32:25.969763: validation loss: -0.7740
2022-07-09 00:32:25.981970: Average global foreground Dice: [0.8215]
2022-07-09 00:32:26.003975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:32:26.860981: Suus1 maybe_update_lr lr: 0.002892
2022-07-09 00:32:26.891556: This epoch took 78.117633 s

2022-07-09 00:32:26.924859: 
epoch:  374
2022-07-09 00:33:38.145563: train loss : -0.9149
2022-07-09 00:33:43.232238: validation loss: -0.7776
2022-07-09 00:33:43.264665: Average global foreground Dice: [0.8224]
2022-07-09 00:33:43.281030: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:33:44.041373: Suus1 maybe_update_lr lr: 0.002872
2022-07-09 00:33:44.062889: This epoch took 77.105011 s

2022-07-09 00:33:44.086863: 
epoch:  375
2022-07-09 00:34:55.919122: train loss : -0.9119
2022-07-09 00:35:00.968999: validation loss: -0.7716
2022-07-09 00:35:00.998779: Average global foreground Dice: [0.8241]
2022-07-09 00:35:01.028920: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:35:01.691593: Suus1 maybe_update_lr lr: 0.002851
2022-07-09 00:35:01.723902: This epoch took 77.604043 s

2022-07-09 00:35:01.760870: 
epoch:  376
2022-07-09 00:36:13.918209: train loss : -0.9121
2022-07-09 00:36:19.156322: validation loss: -0.7721
2022-07-09 00:36:19.175676: Average global foreground Dice: [0.8203]
2022-07-09 00:36:19.208585: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:36:20.042602: Suus1 maybe_update_lr lr: 0.00283
2022-07-09 00:36:20.065858: This epoch took 78.271999 s

2022-07-09 00:36:20.087034: 
epoch:  377
2022-07-09 00:37:30.951185: train loss : -0.9118
2022-07-09 00:37:36.849167: validation loss: -0.7703
2022-07-09 00:37:36.871893: Average global foreground Dice: [0.825]
2022-07-09 00:37:36.883710: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:37:37.736303: Suus1 maybe_update_lr lr: 0.00281
2022-07-09 00:37:37.765145: This epoch took 77.675531 s

2022-07-09 00:37:37.786836: 
epoch:  378
2022-07-09 00:38:49.893743: train loss : -0.9106
2022-07-09 00:38:55.007395: validation loss: -0.7733
2022-07-09 00:38:55.053868: Average global foreground Dice: [0.8242]
2022-07-09 00:38:55.056882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:38:55.969398: Suus1 maybe_update_lr lr: 0.002789
2022-07-09 00:38:55.999888: This epoch took 78.195249 s

2022-07-09 00:38:56.038897: 
epoch:  379
2022-07-09 00:40:07.451126: train loss : -0.9131
2022-07-09 00:40:12.787582: validation loss: -0.7841
2022-07-09 00:40:12.841439: Average global foreground Dice: [0.8323]
2022-07-09 00:40:12.865602: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:40:13.610199: Suus1 maybe_update_lr lr: 0.002768
2022-07-09 00:40:13.641215: This epoch took 77.571336 s

2022-07-09 00:40:13.661282: 
epoch:  380
2022-07-09 00:41:24.482892: train loss : -0.9139
2022-07-09 00:41:29.390457: validation loss: -0.7621
2022-07-09 00:41:29.393451: Average global foreground Dice: [0.8171]
2022-07-09 00:41:29.416897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:41:30.103307: Suus1 maybe_update_lr lr: 0.002747
2022-07-09 00:41:30.126902: This epoch took 76.449047 s

2022-07-09 00:41:30.149907: 
epoch:  381
2022-07-09 00:42:41.455074: train loss : -0.9118
2022-07-09 00:42:46.846734: validation loss: -0.7765
2022-07-09 00:42:46.853253: Average global foreground Dice: [0.8317]
2022-07-09 00:42:46.871600: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:42:47.616204: Suus1 maybe_update_lr lr: 0.002727
2022-07-09 00:42:47.648917: This epoch took 77.483599 s

2022-07-09 00:42:47.670871: 
epoch:  382
2022-07-09 00:43:59.342778: train loss : -0.9137
2022-07-09 00:44:05.200027: validation loss: -0.7776
2022-07-09 00:44:05.252243: Average global foreground Dice: [0.8286]
2022-07-09 00:44:05.283979: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:44:05.902843: Suus1 maybe_update_lr lr: 0.002706
2022-07-09 00:44:05.922577: This epoch took 78.223705 s

2022-07-09 00:44:05.938862: 
epoch:  383
2022-07-09 00:45:16.668711: train loss : -0.9158
2022-07-09 00:45:21.768493: validation loss: -0.7809
2022-07-09 00:45:21.778820: Average global foreground Dice: [0.8324]
2022-07-09 00:45:21.798875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:45:22.715294: Suus1 maybe_update_lr lr: 0.002685
2022-07-09 00:45:22.736887: This epoch took 76.766722 s

2022-07-09 00:45:22.742152: 
epoch:  384
2022-07-09 00:46:35.224131: train loss : -0.9109
2022-07-09 00:46:40.491132: validation loss: -0.7816
2022-07-09 00:46:40.524246: Average global foreground Dice: [0.834]
2022-07-09 00:46:40.556882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:46:41.464168: Suus1 maybe_update_lr lr: 0.002664
2022-07-09 00:46:41.493334: This epoch took 78.722425 s

2022-07-09 00:46:41.501722: 
epoch:  385
2022-07-09 00:47:54.215427: train loss : -0.9131
2022-07-09 00:47:59.428821: validation loss: -0.7786
2022-07-09 00:47:59.462225: Average global foreground Dice: [0.8302]
2022-07-09 00:47:59.483855: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:48:00.336427: Suus1 maybe_update_lr lr: 0.002643
2022-07-09 00:48:00.374887: This epoch took 78.848252 s

2022-07-09 00:48:00.388095: 
epoch:  386
2022-07-09 00:49:11.481840: train loss : -0.9135
2022-07-09 00:49:16.246760: validation loss: -0.7863
2022-07-09 00:49:16.284274: Average global foreground Dice: [0.8356]
2022-07-09 00:49:16.319877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:49:16.992546: Suus1 maybe_update_lr lr: 0.002622
2022-07-09 00:49:17.016900: This epoch took 76.586707 s

2022-07-09 00:49:17.038932: 
epoch:  387
2022-07-09 00:50:28.248082: train loss : -0.9165
2022-07-09 00:50:33.255172: validation loss: -0.7794
2022-07-09 00:50:33.259436: Average global foreground Dice: [0.8271]
2022-07-09 00:50:33.280017: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:50:34.029315: Suus1 maybe_update_lr lr: 0.002601
2022-07-09 00:50:34.039172: This epoch took 76.980113 s

2022-07-09 00:50:34.052402: 
epoch:  388
2022-07-09 00:51:45.746922: train loss : -0.9154
2022-07-09 00:51:50.967410: validation loss: -0.7726
2022-07-09 00:51:50.998665: Average global foreground Dice: [0.8263]
2022-07-09 00:51:51.013865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:51:51.935185: Suus1 maybe_update_lr lr: 0.002581
2022-07-09 00:51:51.956931: This epoch took 77.901775 s

2022-07-09 00:51:51.982870: 
epoch:  389
2022-07-09 00:53:02.171033: train loss : -0.9155
2022-07-09 00:53:07.113596: validation loss: -0.7720
2022-07-09 00:53:07.116910: Average global foreground Dice: [0.8241]
2022-07-09 00:53:07.118993: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:53:07.747353: Suus1 maybe_update_lr lr: 0.00256
2022-07-09 00:53:07.768976: This epoch took 75.760076 s

2022-07-09 00:53:07.786697: 
epoch:  390
2022-07-09 00:54:19.660303: train loss : -0.9137
2022-07-09 00:54:24.660671: validation loss: -0.7656
2022-07-09 00:54:24.680154: Average global foreground Dice: [0.8188]
2022-07-09 00:54:24.704891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:54:25.379398: Suus1 maybe_update_lr lr: 0.002539
2022-07-09 00:54:25.411914: This epoch took 77.614144 s

2022-07-09 00:54:25.433001: 
epoch:  391
2022-07-09 00:55:37.048257: train loss : -0.9136
2022-07-09 00:55:41.982487: validation loss: -0.7618
2022-07-09 00:55:42.023616: Average global foreground Dice: [0.8154]
2022-07-09 00:55:42.053528: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:55:42.780385: Suus1 maybe_update_lr lr: 0.002518
2022-07-09 00:55:42.801908: This epoch took 77.346792 s

2022-07-09 00:55:42.830869: 
epoch:  392
2022-07-09 00:56:53.421945: train loss : -0.9157
2022-07-09 00:56:58.409856: validation loss: -0.7976
2022-07-09 00:56:58.444252: Average global foreground Dice: [0.8417]
2022-07-09 00:56:58.474865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:56:59.172034: Suus1 maybe_update_lr lr: 0.002497
2022-07-09 00:56:59.198230: This epoch took 76.343494 s

2022-07-09 00:56:59.223845: 
epoch:  393
2022-07-09 00:58:11.051243: train loss : -0.9154
2022-07-09 00:58:15.896354: validation loss: -0.7715
2022-07-09 00:58:15.928297: Average global foreground Dice: [0.8268]
2022-07-09 00:58:15.942863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:58:16.585137: Suus1 maybe_update_lr lr: 0.002476
2022-07-09 00:58:16.593866: This epoch took 77.336986 s

2022-07-09 00:58:16.623887: 
epoch:  394
2022-07-09 00:59:27.820999: train loss : -0.9160
2022-07-09 00:59:32.958127: validation loss: -0.7820
2022-07-09 00:59:32.978302: Average global foreground Dice: [0.832]
2022-07-09 00:59:32.987974: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:59:33.648319: Suus1 maybe_update_lr lr: 0.002455
2022-07-09 00:59:33.651014: This epoch took 77.005147 s

2022-07-09 00:59:33.655361: 
epoch:  395
2022-07-09 01:00:44.169605: train loss : -0.9169
2022-07-09 01:00:49.284194: validation loss: -0.7718
2022-07-09 01:00:49.287263: Average global foreground Dice: [0.824]
2022-07-09 01:00:49.314100: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:00:50.043211: Suus1 maybe_update_lr lr: 0.002434
2022-07-09 01:00:50.075902: This epoch took 76.401683 s

2022-07-09 01:00:50.101863: 
epoch:  396
2022-07-09 01:02:03.678308: train loss : -0.9126
2022-07-09 01:02:08.892345: validation loss: -0.7638
2022-07-09 01:02:08.924135: Average global foreground Dice: [0.8166]
2022-07-09 01:02:08.935117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:02:09.602516: Suus1 maybe_update_lr lr: 0.002413
2022-07-09 01:02:09.605533: This epoch took 79.476550 s

2022-07-09 01:02:09.633253: 
epoch:  397
2022-07-09 01:03:20.101347: train loss : -0.9168
2022-07-09 01:03:24.638885: validation loss: -0.7782
2022-07-09 01:03:24.645244: Average global foreground Dice: [0.8254]
2022-07-09 01:03:24.647556: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:03:25.219320: Suus1 maybe_update_lr lr: 0.002391
2022-07-09 01:03:25.250031: This epoch took 75.586061 s

2022-07-09 01:03:25.271859: 
epoch:  398
2022-07-09 01:04:36.092532: train loss : -0.9160
2022-07-09 01:04:41.115567: validation loss: -0.7677
2022-07-09 01:04:41.156401: Average global foreground Dice: [0.8156]
2022-07-09 01:04:41.186279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:04:41.966346: Suus1 maybe_update_lr lr: 0.00237
2022-07-09 01:04:41.995243: This epoch took 76.703100 s

2022-07-09 01:04:41.997595: 
epoch:  399
2022-07-09 01:05:54.531841: train loss : -0.9165
2022-07-09 01:06:00.339206: validation loss: -0.7778
2022-07-09 01:06:00.373180: Average global foreground Dice: [0.8294]
2022-07-09 01:06:00.396764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:06:01.333328: Suus1 maybe_update_lr lr: 0.002349
2022-07-09 01:06:01.365877: saving scheduled checkpoint file...
2022-07-09 01:06:01.530486: saving checkpoint...
2022-07-09 01:06:03.175138: done, saving took 1.78 seconds
2022-07-09 01:06:03.194257: done
2022-07-09 01:06:03.196422: This epoch took 81.196491 s

2022-07-09 01:06:03.198439: 
epoch:  400
2022-07-09 01:07:12.679720: train loss : -0.9174
2022-07-09 01:07:17.758321: validation loss: -0.7745
2022-07-09 01:07:17.789633: Average global foreground Dice: [0.8218]
2022-07-09 01:07:17.801884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:07:18.468369: Suus1 maybe_update_lr lr: 0.002328
2022-07-09 01:07:18.483865: This epoch took 75.282171 s

2022-07-09 01:07:18.505046: 
epoch:  401
2022-07-09 01:08:30.855115: train loss : -0.9197
2022-07-09 01:08:36.612223: validation loss: -0.7809
2022-07-09 01:08:36.657417: Average global foreground Dice: [0.8322]
2022-07-09 01:08:36.691903: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:08:37.228044: Suus1 maybe_update_lr lr: 0.002307
2022-07-09 01:08:37.247888: This epoch took 78.715014 s

2022-07-09 01:08:37.275182: 
epoch:  402
2022-07-09 01:09:50.148689: train loss : -0.9175
2022-07-09 01:09:55.485667: validation loss: -0.7552
2022-07-09 01:09:55.525446: Average global foreground Dice: [0.8094]
2022-07-09 01:09:55.530453: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:09:56.347957: Suus1 maybe_update_lr lr: 0.002286
2022-07-09 01:09:56.356224: This epoch took 79.059220 s

2022-07-09 01:09:56.376443: 
epoch:  403
2022-07-09 01:11:07.439112: train loss : -0.9182
2022-07-09 01:11:12.519841: validation loss: -0.7708
2022-07-09 01:11:12.546184: Average global foreground Dice: [0.8184]
2022-07-09 01:11:12.563871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:11:13.532663: Suus1 maybe_update_lr lr: 0.002264
2022-07-09 01:11:13.562890: This epoch took 77.172025 s

2022-07-09 01:11:13.574366: 
epoch:  404
2022-07-09 01:12:25.171473: train loss : -0.9172
2022-07-09 01:12:30.239345: validation loss: -0.7692
2022-07-09 01:12:30.275311: Average global foreground Dice: [0.8209]
2022-07-09 01:12:30.289905: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:12:31.244581: Suus1 maybe_update_lr lr: 0.002243
2022-07-09 01:12:31.264904: This epoch took 77.672141 s

2022-07-09 01:12:31.298313: 
epoch:  405
2022-07-09 01:13:41.893834: train loss : -0.9166
2022-07-09 01:13:47.501820: validation loss: -0.7851
2022-07-09 01:13:47.521136: Average global foreground Dice: [0.8339]
2022-07-09 01:13:47.526182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:13:48.202289: Suus1 maybe_update_lr lr: 0.002222
2022-07-09 01:13:48.227058: This epoch took 76.908638 s

2022-07-09 01:13:48.259861: 
epoch:  406
2022-07-09 01:15:00.389959: train loss : -0.9143
2022-07-09 01:15:05.039921: validation loss: -0.7689
2022-07-09 01:15:05.086200: Average global foreground Dice: [0.8214]
2022-07-09 01:15:05.104446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:15:05.686833: Suus1 maybe_update_lr lr: 0.002201
2022-07-09 01:15:05.697689: This epoch took 77.415823 s

2022-07-09 01:15:05.730036: 
epoch:  407
2022-07-09 01:16:18.263835: train loss : -0.9157
2022-07-09 01:16:23.512507: validation loss: -0.7750
2022-07-09 01:16:23.534953: Average global foreground Dice: [0.826]
2022-07-09 01:16:23.540756: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:16:24.314582: Suus1 maybe_update_lr lr: 0.002179
2022-07-09 01:16:24.344470: This epoch took 78.588715 s

2022-07-09 01:16:24.353713: 
epoch:  408
2022-07-09 01:17:36.254190: train loss : -0.9135
2022-07-09 01:17:41.479258: validation loss: -0.7825
2022-07-09 01:17:41.510388: Average global foreground Dice: [0.8297]
2022-07-09 01:17:41.539729: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:17:42.405009: Suus1 maybe_update_lr lr: 0.002158
2022-07-09 01:17:42.423383: This epoch took 78.049521 s

2022-07-09 01:17:42.443543: 
epoch:  409
2022-07-09 01:18:53.819349: train loss : -0.9166
2022-07-09 01:18:58.723444: validation loss: -0.7867
2022-07-09 01:18:58.772369: Average global foreground Dice: [0.8329]
2022-07-09 01:18:58.787806: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:18:59.508327: Suus1 maybe_update_lr lr: 0.002137
2022-07-09 01:18:59.527050: This epoch took 77.046045 s

2022-07-09 01:18:59.557035: 
epoch:  410
2022-07-09 01:20:12.539860: train loss : -0.9165
2022-07-09 01:20:17.885632: validation loss: -0.7787
2022-07-09 01:20:17.917255: Average global foreground Dice: [0.8261]
2022-07-09 01:20:17.929379: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:20:18.624125: Suus1 maybe_update_lr lr: 0.002115
2022-07-09 01:20:18.632789: This epoch took 79.062254 s

2022-07-09 01:20:18.664645: 
epoch:  411
2022-07-09 01:21:28.798199: train loss : -0.9183
2022-07-09 01:21:34.188128: validation loss: -0.7831
2022-07-09 01:21:34.208809: Average global foreground Dice: [0.8348]
2022-07-09 01:21:34.230536: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:21:34.881163: Suus1 maybe_update_lr lr: 0.002094
2022-07-09 01:21:34.900907: This epoch took 76.225287 s

2022-07-09 01:21:34.922849: 
epoch:  412
2022-07-09 01:22:47.366746: train loss : -0.9201
2022-07-09 01:22:52.341359: validation loss: -0.7853
2022-07-09 01:22:52.380391: Average global foreground Dice: [0.8367]
2022-07-09 01:22:52.401882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:22:53.200593: Suus1 maybe_update_lr lr: 0.002072
2022-07-09 01:22:53.228586: This epoch took 78.283729 s

2022-07-09 01:22:53.248840: 
epoch:  413
2022-07-09 01:24:04.530403: train loss : -0.9162
2022-07-09 01:24:09.762603: validation loss: -0.7684
2022-07-09 01:24:09.804277: Average global foreground Dice: [0.8186]
2022-07-09 01:24:09.836892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:24:10.695159: Suus1 maybe_update_lr lr: 0.002051
2022-07-09 01:24:10.725898: This epoch took 77.451020 s

2022-07-09 01:24:10.745864: 
epoch:  414
2022-07-09 01:25:21.416996: train loss : -0.9157
2022-07-09 01:25:26.476808: validation loss: -0.7716
2022-07-09 01:25:26.513222: Average global foreground Dice: [0.8183]
2022-07-09 01:25:26.534866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:25:27.278860: Suus1 maybe_update_lr lr: 0.00203
2022-07-09 01:25:27.290279: This epoch took 76.524407 s

2022-07-09 01:25:27.306533: 
epoch:  415
2022-07-09 01:26:38.312374: train loss : -0.9166
2022-07-09 01:26:42.961507: validation loss: -0.7859
2022-07-09 01:26:43.000635: Average global foreground Dice: [0.8405]
2022-07-09 01:26:43.019080: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:26:43.742135: Suus1 maybe_update_lr lr: 0.002008
2022-07-09 01:26:43.763905: This epoch took 76.455199 s

2022-07-09 01:26:43.789861: 
epoch:  416
2022-07-09 01:27:55.320918: train loss : -0.9195
2022-07-09 01:28:00.209022: validation loss: -0.7945
2022-07-09 01:28:00.234491: Average global foreground Dice: [0.8407]
2022-07-09 01:28:00.249087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:28:01.020438: Suus1 maybe_update_lr lr: 0.001987
2022-07-09 01:28:01.039886: This epoch took 77.217000 s

2022-07-09 01:28:01.063874: 
epoch:  417
2022-07-09 01:29:11.671759: train loss : -0.9169
2022-07-09 01:29:16.466924: validation loss: -0.7791
2022-07-09 01:29:16.502239: Average global foreground Dice: [0.8296]
2022-07-09 01:29:16.534873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:29:17.547925: Suus1 maybe_update_lr lr: 0.001965
2022-07-09 01:29:17.558533: This epoch took 76.461673 s

2022-07-09 01:29:17.583017: 
epoch:  418
2022-07-09 01:30:28.557230: train loss : -0.9154
2022-07-09 01:30:34.242398: validation loss: -0.7631
2022-07-09 01:30:34.290287: Average global foreground Dice: [0.8131]
2022-07-09 01:30:34.329860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:30:35.164103: Suus1 maybe_update_lr lr: 0.001943
2022-07-09 01:30:35.177563: This epoch took 77.571688 s

2022-07-09 01:30:35.205881: 
epoch:  419
2022-07-09 01:31:47.219143: train loss : -0.9175
2022-07-09 01:31:52.252340: validation loss: -0.7812
2022-07-09 01:31:52.280450: Average global foreground Dice: [0.8357]
2022-07-09 01:31:52.300114: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:31:53.123159: Suus1 maybe_update_lr lr: 0.001922
2022-07-09 01:31:53.166899: This epoch took 77.936982 s

2022-07-09 01:31:53.182457: 
epoch:  420
2022-07-09 01:33:04.395342: train loss : -0.9196
2022-07-09 01:33:10.375282: validation loss: -0.7621
2022-07-09 01:33:10.414637: Average global foreground Dice: [0.8171]
2022-07-09 01:33:10.430870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:33:11.377961: Suus1 maybe_update_lr lr: 0.0019
2022-07-09 01:33:11.408923: This epoch took 78.187032 s

2022-07-09 01:33:11.441874: 
epoch:  421
2022-07-09 01:34:21.100289: train loss : -0.9200
2022-07-09 01:34:26.188601: validation loss: -0.7715
2022-07-09 01:34:26.217436: Average global foreground Dice: [0.8236]
2022-07-09 01:34:26.238853: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:34:26.994329: Suus1 maybe_update_lr lr: 0.001879
2022-07-09 01:34:27.021492: This epoch took 75.546631 s

2022-07-09 01:34:27.047473: 
epoch:  422
2022-07-09 01:35:38.286271: train loss : -0.9195
2022-07-09 01:35:43.582104: validation loss: -0.7606
2022-07-09 01:35:43.602499: Average global foreground Dice: [0.8179]
2022-07-09 01:35:43.626656: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:35:44.227638: Suus1 maybe_update_lr lr: 0.001857
2022-07-09 01:35:44.246903: This epoch took 77.166679 s

2022-07-09 01:35:44.268064: 
epoch:  423
2022-07-09 01:36:55.044502: train loss : -0.9213
2022-07-09 01:37:00.316495: validation loss: -0.7835
2022-07-09 01:37:00.344480: Average global foreground Dice: [0.8338]
2022-07-09 01:37:00.354038: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:37:01.033237: Suus1 maybe_update_lr lr: 0.001835
2022-07-09 01:37:01.052902: This epoch took 76.772346 s

2022-07-09 01:37:01.074860: 
epoch:  424
2022-07-09 01:38:13.867757: train loss : -0.9204
2022-07-09 01:38:18.895168: validation loss: -0.7877
2022-07-09 01:38:18.933435: Average global foreground Dice: [0.837]
2022-07-09 01:38:18.969155: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:38:19.661690: Suus1 maybe_update_lr lr: 0.001813
2022-07-09 01:38:19.682925: This epoch took 78.586050 s

2022-07-09 01:38:19.712857: 
epoch:  425
2022-07-09 01:39:30.273368: train loss : -0.9214
2022-07-09 01:39:35.231804: validation loss: -0.7773
2022-07-09 01:39:35.260316: Average global foreground Dice: [0.8328]
2022-07-09 01:39:35.273976: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:39:35.943479: Suus1 maybe_update_lr lr: 0.001792
2022-07-09 01:39:35.968222: This epoch took 76.233369 s

2022-07-09 01:39:35.985689: 
epoch:  426
2022-07-09 01:40:46.626064: train loss : -0.9203
2022-07-09 01:40:51.802657: validation loss: -0.7807
2022-07-09 01:40:51.823479: Average global foreground Dice: [0.8299]
2022-07-09 01:40:51.836865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:40:52.546045: Suus1 maybe_update_lr lr: 0.00177
2022-07-09 01:40:52.552840: This epoch took 76.551399 s

2022-07-09 01:40:52.590909: 
epoch:  427
2022-07-09 01:42:05.819889: train loss : -0.9196
2022-07-09 01:42:11.376653: validation loss: -0.7848
2022-07-09 01:42:11.403358: Average global foreground Dice: [0.8375]
2022-07-09 01:42:11.415850: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:42:12.098061: Suus1 maybe_update_lr lr: 0.001748
2022-07-09 01:42:12.138122: saving best epoch checkpoint...
2022-07-09 01:42:12.329532: saving checkpoint...
2022-07-09 01:42:14.162713: done, saving took 2.00 seconds
2022-07-09 01:42:14.182994: This epoch took 81.559139 s

2022-07-09 01:42:14.185951: 
epoch:  428
2022-07-09 01:43:25.125990: train loss : -0.9201
2022-07-09 01:43:30.318688: validation loss: -0.7693
2022-07-09 01:43:30.328479: Average global foreground Dice: [0.8225]
2022-07-09 01:43:30.333482: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:43:31.222702: Suus1 maybe_update_lr lr: 0.001726
2022-07-09 01:43:31.236897: This epoch took 77.048131 s

2022-07-09 01:43:31.244145: 
epoch:  429
2022-07-09 01:44:42.604417: train loss : -0.9230
2022-07-09 01:44:47.754778: validation loss: -0.7818
2022-07-09 01:44:47.791704: Average global foreground Dice: [0.833]
2022-07-09 01:44:47.850049: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:44:48.707183: Suus1 maybe_update_lr lr: 0.001704
2022-07-09 01:44:48.728896: This epoch took 77.454079 s

2022-07-09 01:44:48.750865: 
epoch:  430
2022-07-09 01:45:58.682883: train loss : -0.9234
2022-07-09 01:46:03.918420: validation loss: -0.7738
2022-07-09 01:46:03.939376: Average global foreground Dice: [0.8237]
2022-07-09 01:46:03.959089: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:46:04.642193: Suus1 maybe_update_lr lr: 0.001682
2022-07-09 01:46:04.671772: This epoch took 75.909106 s

2022-07-09 01:46:04.693971: 
epoch:  431
2022-07-09 01:47:15.695325: train loss : -0.9225
2022-07-09 01:47:21.380906: validation loss: -0.7606
2022-07-09 01:47:21.408082: Average global foreground Dice: [0.8168]
2022-07-09 01:47:21.437879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:47:22.072407: Suus1 maybe_update_lr lr: 0.00166
2022-07-09 01:47:22.091899: This epoch took 77.377903 s

2022-07-09 01:47:22.117864: 
epoch:  432
2022-07-09 01:48:33.122231: train loss : -0.9228
2022-07-09 01:48:38.012332: validation loss: -0.7832
2022-07-09 01:48:38.043262: Average global foreground Dice: [0.8285]
2022-07-09 01:48:38.067080: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:48:38.762305: Suus1 maybe_update_lr lr: 0.001638
2022-07-09 01:48:38.794922: This epoch took 76.656787 s

2022-07-09 01:48:38.820421: 
epoch:  433
2022-07-09 01:49:50.431988: train loss : -0.9226
2022-07-09 01:49:55.826921: validation loss: -0.7677
2022-07-09 01:49:55.831175: Average global foreground Dice: [0.818]
2022-07-09 01:49:55.852178: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:49:56.513251: Suus1 maybe_update_lr lr: 0.001616
2022-07-09 01:49:56.530891: This epoch took 77.689002 s

2022-07-09 01:49:56.562759: 
epoch:  434
2022-07-09 01:51:07.778673: train loss : -0.9221
2022-07-09 01:51:12.844890: validation loss: -0.7647
2022-07-09 01:51:12.863623: Average global foreground Dice: [0.8192]
2022-07-09 01:51:12.879409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:51:13.692072: Suus1 maybe_update_lr lr: 0.001594
2022-07-09 01:51:13.703282: This epoch took 77.114092 s

2022-07-09 01:51:13.721859: 
epoch:  435
2022-07-09 01:52:24.543099: train loss : -0.9225
2022-07-09 01:52:29.828333: validation loss: -0.7773
2022-07-09 01:52:29.840971: Average global foreground Dice: [0.8309]
2022-07-09 01:52:29.885906: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:52:30.647010: Suus1 maybe_update_lr lr: 0.001572
2022-07-09 01:52:30.677145: This epoch took 76.926276 s

2022-07-09 01:52:30.709003: 
epoch:  436
2022-07-09 01:53:41.026685: train loss : -0.9249
2022-07-09 01:53:45.618802: validation loss: -0.7845
2022-07-09 01:53:45.638101: Average global foreground Dice: [0.8397]
2022-07-09 01:53:45.669336: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:53:46.447962: Suus1 maybe_update_lr lr: 0.00155
2022-07-09 01:53:46.461189: This epoch took 75.741517 s

2022-07-09 01:53:46.472609: 
epoch:  437
2022-07-09 01:54:57.911937: train loss : -0.9218
2022-07-09 01:55:03.127043: validation loss: -0.7786
2022-07-09 01:55:03.172448: Average global foreground Dice: [0.8284]
2022-07-09 01:55:03.203236: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:55:04.038406: Suus1 maybe_update_lr lr: 0.001528
2022-07-09 01:55:04.058065: This epoch took 77.571673 s

2022-07-09 01:55:04.079995: 
epoch:  438
2022-07-09 01:56:14.319718: train loss : -0.9212
2022-07-09 01:56:19.081316: validation loss: -0.7613
2022-07-09 01:56:19.114824: Average global foreground Dice: [0.8148]
2022-07-09 01:56:19.140006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:56:19.893713: Suus1 maybe_update_lr lr: 0.001506
2022-07-09 01:56:19.915895: This epoch took 75.803004 s

2022-07-09 01:56:19.937950: 
epoch:  439
2022-07-09 01:57:31.961313: train loss : -0.9235
2022-07-09 01:57:37.411301: validation loss: -0.7728
2022-07-09 01:57:37.422810: Average global foreground Dice: [0.8248]
2022-07-09 01:57:37.475780: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:57:38.230030: Suus1 maybe_update_lr lr: 0.001483
2022-07-09 01:57:38.270433: This epoch took 78.296558 s

2022-07-09 01:57:38.293523: 
epoch:  440
2022-07-09 01:58:49.378207: train loss : -0.9250
2022-07-09 01:58:54.091998: validation loss: -0.7721
2022-07-09 01:58:54.129377: Average global foreground Dice: [0.8299]
2022-07-09 01:58:54.161884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:58:55.070186: Suus1 maybe_update_lr lr: 0.001461
2022-07-09 01:58:55.118865: This epoch took 76.795995 s

2022-07-09 01:58:55.139077: 
epoch:  441
2022-07-09 02:00:06.586483: train loss : -0.9249
2022-07-09 02:00:11.693983: validation loss: -0.7697
2022-07-09 02:00:11.722433: Average global foreground Dice: [0.8233]
2022-07-09 02:00:11.745880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:00:12.555205: Suus1 maybe_update_lr lr: 0.001439
2022-07-09 02:00:12.574898: This epoch took 77.406032 s

2022-07-09 02:00:12.600042: 
epoch:  442
2022-07-09 02:01:23.916258: train loss : -0.9229
2022-07-09 02:01:29.541202: validation loss: -0.7793
2022-07-09 02:01:29.572475: Average global foreground Dice: [0.8298]
2022-07-09 02:01:29.586359: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:01:30.235155: Suus1 maybe_update_lr lr: 0.001416
2022-07-09 02:01:30.257908: This epoch took 77.635997 s

2022-07-09 02:01:30.277864: 
epoch:  443
2022-07-09 02:02:39.725233: train loss : -0.9254
2022-07-09 02:02:45.165716: validation loss: -0.7824
2022-07-09 02:02:45.186384: Average global foreground Dice: [0.8375]
2022-07-09 02:02:45.210892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:02:45.916064: Suus1 maybe_update_lr lr: 0.001394
2022-07-09 02:02:45.954034: This epoch took 75.646332 s

2022-07-09 02:02:45.988131: 
epoch:  444
2022-07-09 02:03:57.055769: train loss : -0.9239
2022-07-09 02:04:02.140340: validation loss: -0.7728
2022-07-09 02:04:02.167413: Average global foreground Dice: [0.8251]
2022-07-09 02:04:02.183902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:04:02.997365: Suus1 maybe_update_lr lr: 0.001372
2022-07-09 02:04:03.015828: This epoch took 77.016811 s

2022-07-09 02:04:03.037059: 
epoch:  445
2022-07-09 02:05:14.967304: train loss : -0.9212
2022-07-09 02:05:20.075390: validation loss: -0.7681
2022-07-09 02:05:20.121357: Average global foreground Dice: [0.8247]
2022-07-09 02:05:20.142862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:05:20.814976: Suus1 maybe_update_lr lr: 0.001349
2022-07-09 02:05:20.845956: This epoch took 77.791990 s

2022-07-09 02:05:20.860991: 
epoch:  446
2022-07-09 02:06:31.917455: train loss : -0.9261
2022-07-09 02:06:36.936522: validation loss: -0.7676
2022-07-09 02:06:36.953634: Average global foreground Dice: [0.8224]
2022-07-09 02:06:36.978884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:06:37.608191: Suus1 maybe_update_lr lr: 0.001327
2022-07-09 02:06:37.635144: This epoch took 76.766063 s

2022-07-09 02:06:37.664858: 
epoch:  447
2022-07-09 02:07:50.326227: train loss : -0.9253
2022-07-09 02:07:56.767150: validation loss: -0.7768
2022-07-09 02:07:56.799274: Average global foreground Dice: [0.8285]
2022-07-09 02:07:56.834117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:07:57.528838: Suus1 maybe_update_lr lr: 0.001304
2022-07-09 02:07:57.551896: This epoch took 79.865024 s

2022-07-09 02:07:57.573772: 
epoch:  448
2022-07-09 02:09:08.657980: train loss : -0.9237
2022-07-09 02:09:13.418470: validation loss: -0.7735
2022-07-09 02:09:13.468493: Average global foreground Dice: [0.8293]
2022-07-09 02:09:13.492560: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:09:14.349014: Suus1 maybe_update_lr lr: 0.001282
2022-07-09 02:09:14.377967: This epoch took 76.784742 s

2022-07-09 02:09:14.398232: 
epoch:  449
2022-07-09 02:10:26.204038: train loss : -0.9221
2022-07-09 02:10:31.229146: validation loss: -0.7670
2022-07-09 02:10:31.262180: Average global foreground Dice: [0.8235]
2022-07-09 02:10:31.292390: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:10:32.129623: Suus1 maybe_update_lr lr: 0.001259
2022-07-09 02:10:32.155873: saving scheduled checkpoint file...
2022-07-09 02:10:32.283489: saving checkpoint...
2022-07-09 02:10:34.468295: done, saving took 2.29 seconds
2022-07-09 02:10:34.486496: done
2022-07-09 02:10:34.488993: This epoch took 80.073034 s

2022-07-09 02:10:34.491089: 
epoch:  450
2022-07-09 02:11:44.272022: train loss : -0.9265
2022-07-09 02:11:49.105219: validation loss: -0.7790
2022-07-09 02:11:49.131763: Average global foreground Dice: [0.8299]
2022-07-09 02:11:49.151548: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:11:49.848333: Suus1 maybe_update_lr lr: 0.001236
2022-07-09 02:11:49.878049: This epoch took 75.384913 s

2022-07-09 02:11:49.885978: 
epoch:  451
2022-07-09 02:13:00.565962: train loss : -0.9258
2022-07-09 02:13:05.344655: validation loss: -0.7680
2022-07-09 02:13:05.388309: Average global foreground Dice: [0.8208]
2022-07-09 02:13:05.409864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:13:06.132675: Suus1 maybe_update_lr lr: 0.001214
2022-07-09 02:13:06.147051: This epoch took 76.245028 s

2022-07-09 02:13:06.161870: 
epoch:  452
2022-07-09 02:14:19.160165: train loss : -0.9245
2022-07-09 02:14:24.142622: validation loss: -0.7841
2022-07-09 02:14:24.177461: Average global foreground Dice: [0.8371]
2022-07-09 02:14:24.209948: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:14:24.877640: Suus1 maybe_update_lr lr: 0.001191
2022-07-09 02:14:24.906274: This epoch took 78.728455 s

2022-07-09 02:14:24.924287: 
epoch:  453
2022-07-09 02:15:37.249630: train loss : -0.9281
2022-07-09 02:15:42.533834: validation loss: -0.7778
2022-07-09 02:15:42.564761: Average global foreground Dice: [0.8274]
2022-07-09 02:15:42.594215: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:15:43.244014: Suus1 maybe_update_lr lr: 0.001168
2022-07-09 02:15:43.274936: This epoch took 78.326702 s

2022-07-09 02:15:43.301851: 
epoch:  454
2022-07-09 02:16:54.597098: train loss : -0.9264
2022-07-09 02:16:59.490190: validation loss: -0.7693
2022-07-09 02:16:59.525702: Average global foreground Dice: [0.8198]
2022-07-09 02:16:59.555855: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:17:00.318636: Suus1 maybe_update_lr lr: 0.001145
2022-07-09 02:17:00.338007: This epoch took 77.010685 s

2022-07-09 02:17:00.356123: 
epoch:  455
2022-07-09 02:18:11.963497: train loss : -0.9269
2022-07-09 02:18:16.841809: validation loss: -0.7714
2022-07-09 02:18:16.876229: Average global foreground Dice: [0.8255]
2022-07-09 02:18:16.882708: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:18:17.654905: Suus1 maybe_update_lr lr: 0.001122
2022-07-09 02:18:17.690620: This epoch took 77.290953 s

2022-07-09 02:18:17.711859: 
epoch:  456
2022-07-09 02:19:28.480349: train loss : -0.9272
2022-07-09 02:19:34.034641: validation loss: -0.7764
2022-07-09 02:19:34.082238: Average global foreground Dice: [0.8292]
2022-07-09 02:19:34.105873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:19:34.872637: Suus1 maybe_update_lr lr: 0.001099
2022-07-09 02:19:34.883273: This epoch took 77.149417 s

2022-07-09 02:19:34.924077: 
epoch:  457
2022-07-09 02:20:45.524007: train loss : -0.9268
2022-07-09 02:20:50.894208: validation loss: -0.7694
2022-07-09 02:20:50.934274: Average global foreground Dice: [0.8231]
2022-07-09 02:20:50.966894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:20:51.851449: Suus1 maybe_update_lr lr: 0.001076
2022-07-09 02:20:51.870870: This epoch took 76.904836 s

2022-07-09 02:20:51.895836: 
epoch:  458
2022-07-09 02:22:02.435324: train loss : -0.9270
2022-07-09 02:22:07.240973: validation loss: -0.7549
2022-07-09 02:22:07.254128: Average global foreground Dice: [0.8119]
2022-07-09 02:22:07.256580: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:22:07.991277: Suus1 maybe_update_lr lr: 0.001053
2022-07-09 02:22:08.012887: This epoch took 76.095006 s

2022-07-09 02:22:08.045882: 
epoch:  459
2022-07-09 02:23:18.885979: train loss : -0.9283
2022-07-09 02:23:24.064421: validation loss: -0.7775
2022-07-09 02:23:24.100417: Average global foreground Dice: [0.8286]
2022-07-09 02:23:24.130734: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:23:24.843559: Suus1 maybe_update_lr lr: 0.00103
2022-07-09 02:23:24.873462: This epoch took 76.815681 s

2022-07-09 02:23:24.890858: 
epoch:  460
2022-07-09 02:24:37.422673: train loss : -0.9270
2022-07-09 02:24:42.475981: validation loss: -0.7838
2022-07-09 02:24:42.520225: Average global foreground Dice: [0.8351]
2022-07-09 02:24:42.535892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:24:43.124585: Suus1 maybe_update_lr lr: 0.001007
2022-07-09 02:24:43.150912: This epoch took 78.238025 s

2022-07-09 02:24:43.172860: 
epoch:  461
2022-07-09 02:25:54.544149: train loss : -0.9241
2022-07-09 02:25:59.027999: validation loss: -0.7691
2022-07-09 02:25:59.053229: Average global foreground Dice: [0.8216]
2022-07-09 02:25:59.077858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:25:59.900443: Suus1 maybe_update_lr lr: 0.000983
2022-07-09 02:25:59.922579: This epoch took 76.731291 s

2022-07-09 02:25:59.925128: 
epoch:  462
2022-07-09 02:27:10.792031: train loss : -0.9283
2022-07-09 02:27:16.044674: validation loss: -0.7818
2022-07-09 02:27:16.070316: Average global foreground Dice: [0.8323]
2022-07-09 02:27:16.095879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:27:16.888119: Suus1 maybe_update_lr lr: 0.00096
2022-07-09 02:27:16.929926: This epoch took 76.976059 s

2022-07-09 02:27:16.951846: 
epoch:  463
2022-07-09 02:28:27.193761: train loss : -0.9256
2022-07-09 02:28:32.248312: validation loss: -0.7633
2022-07-09 02:28:32.269293: Average global foreground Dice: [0.8179]
2022-07-09 02:28:32.301615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:28:33.169631: Suus1 maybe_update_lr lr: 0.000937
2022-07-09 02:28:33.186328: This epoch took 76.215895 s

2022-07-09 02:28:33.210870: 
epoch:  464
2022-07-09 02:29:45.167150: train loss : -0.9288
2022-07-09 02:29:50.306569: validation loss: -0.7797
2022-07-09 02:29:50.336264: Average global foreground Dice: [0.8338]
2022-07-09 02:29:50.356532: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:29:51.087385: Suus1 maybe_update_lr lr: 0.000913
2022-07-09 02:29:51.110410: This epoch took 77.873537 s

2022-07-09 02:29:51.113514: 
epoch:  465
2022-07-09 02:31:03.023315: train loss : -0.9271
2022-07-09 02:31:09.065539: validation loss: -0.7667
2022-07-09 02:31:09.100144: Average global foreground Dice: [0.8209]
2022-07-09 02:31:09.120881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:31:09.935234: Suus1 maybe_update_lr lr: 0.00089
2022-07-09 02:31:09.955911: This epoch took 78.811028 s

2022-07-09 02:31:09.977867: 
epoch:  466
2022-07-09 02:32:20.048052: train loss : -0.9254
2022-07-09 02:32:25.211373: validation loss: -0.7765
2022-07-09 02:32:25.234561: Average global foreground Dice: [0.824]
2022-07-09 02:32:25.260955: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:32:25.897553: Suus1 maybe_update_lr lr: 0.000866
2022-07-09 02:32:25.928311: This epoch took 75.930450 s

2022-07-09 02:32:25.937004: 
epoch:  467
2022-07-09 02:33:37.164985: train loss : -0.9278
2022-07-09 02:33:42.538683: validation loss: -0.7672
2022-07-09 02:33:42.571085: Average global foreground Dice: [0.8218]
2022-07-09 02:33:42.601488: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:33:43.378108: Suus1 maybe_update_lr lr: 0.000842
2022-07-09 02:33:43.397921: This epoch took 77.440797 s

2022-07-09 02:33:43.415760: 
epoch:  468
2022-07-09 02:34:54.389268: train loss : -0.9264
2022-07-09 02:34:59.196424: validation loss: -0.7842
2022-07-09 02:34:59.218253: Average global foreground Dice: [0.8348]
2022-07-09 02:34:59.235604: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:35:00.026324: Suus1 maybe_update_lr lr: 0.000819
2022-07-09 02:35:00.067915: This epoch took 76.649762 s

2022-07-09 02:35:00.087491: 
epoch:  469
2022-07-09 02:36:10.787953: train loss : -0.9295
2022-07-09 02:36:16.820153: validation loss: -0.7758
2022-07-09 02:36:16.845279: Average global foreground Dice: [0.827]
2022-07-09 02:36:16.864896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:36:17.560836: Suus1 maybe_update_lr lr: 0.000795
2022-07-09 02:36:17.590920: This epoch took 77.499200 s

2022-07-09 02:36:17.623855: 
epoch:  470
2022-07-09 02:37:29.951219: train loss : -0.9257
2022-07-09 02:37:34.836961: validation loss: -0.7775
2022-07-09 02:37:34.852512: Average global foreground Dice: [0.8286]
2022-07-09 02:37:34.871871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:37:35.631327: Suus1 maybe_update_lr lr: 0.000771
2022-07-09 02:37:35.661891: This epoch took 78.005015 s

2022-07-09 02:37:35.669764: 
epoch:  471
2022-07-09 02:38:47.112654: train loss : -0.9276
2022-07-09 02:38:52.181965: validation loss: -0.7663
2022-07-09 02:38:52.212460: Average global foreground Dice: [0.8237]
2022-07-09 02:38:52.229064: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:38:52.888096: Suus1 maybe_update_lr lr: 0.000747
2022-07-09 02:38:52.896047: This epoch took 77.210084 s

2022-07-09 02:38:52.924519: 
epoch:  472
2022-07-09 02:40:05.127398: train loss : -0.9285
2022-07-09 02:40:10.358773: validation loss: -0.7720
2022-07-09 02:40:10.392226: Average global foreground Dice: [0.8247]
2022-07-09 02:40:10.413891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:40:11.101985: Suus1 maybe_update_lr lr: 0.000723
2022-07-09 02:40:11.136970: This epoch took 78.180099 s

2022-07-09 02:40:11.156242: 
epoch:  473
2022-07-09 02:41:21.321248: train loss : -0.9298
2022-07-09 02:41:26.687542: validation loss: -0.7697
2022-07-09 02:41:26.722308: Average global foreground Dice: [0.8233]
2022-07-09 02:41:26.742067: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:41:27.342670: Suus1 maybe_update_lr lr: 0.000699
2022-07-09 02:41:27.358907: This epoch took 76.182084 s

2022-07-09 02:41:27.376849: 
epoch:  474
2022-07-09 02:42:40.662279: train loss : -0.9278
2022-07-09 02:42:46.284297: validation loss: -0.7800
2022-07-09 02:42:46.323809: Average global foreground Dice: [0.8323]
2022-07-09 02:42:46.336866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:42:47.202832: Suus1 maybe_update_lr lr: 0.000675
2022-07-09 02:42:47.210010: This epoch took 79.817137 s

2022-07-09 02:42:47.236863: 
epoch:  475
2022-07-09 02:43:57.559228: train loss : -0.9293
2022-07-09 02:44:02.440637: validation loss: -0.7753
2022-07-09 02:44:02.465615: Average global foreground Dice: [0.8266]
2022-07-09 02:44:02.481883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:44:03.242935: Suus1 maybe_update_lr lr: 0.00065
2022-07-09 02:44:03.270878: This epoch took 76.021003 s

2022-07-09 02:44:03.290145: 
epoch:  476
2022-07-09 02:45:15.537132: train loss : -0.9296
2022-07-09 02:45:21.400626: validation loss: -0.7846
2022-07-09 02:45:21.446566: Average global foreground Dice: [0.8325]
2022-07-09 02:45:21.482250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:45:22.366459: Suus1 maybe_update_lr lr: 0.000626
2022-07-09 02:45:22.402808: This epoch took 79.106162 s

2022-07-09 02:45:22.423857: 
epoch:  477
2022-07-09 02:46:34.427264: train loss : -0.9285
2022-07-09 02:46:39.300400: validation loss: -0.7716
2022-07-09 02:46:39.324230: Average global foreground Dice: [0.8253]
2022-07-09 02:46:39.336677: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:46:39.890033: Suus1 maybe_update_lr lr: 0.000601
2022-07-09 02:46:39.915901: This epoch took 77.468037 s

2022-07-09 02:46:39.937864: 
epoch:  478
2022-07-09 02:47:50.314008: train loss : -0.9292
2022-07-09 02:47:55.208988: validation loss: -0.7913
2022-07-09 02:47:55.219099: Average global foreground Dice: [0.8401]
2022-07-09 02:47:55.234604: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:47:56.060049: Suus1 maybe_update_lr lr: 0.000577
2022-07-09 02:47:56.090902: This epoch took 76.134651 s

2022-07-09 02:47:56.109736: 
epoch:  479
2022-07-09 02:49:09.896041: train loss : -0.9287
2022-07-09 02:49:15.321226: validation loss: -0.7798
2022-07-09 02:49:15.330660: Average global foreground Dice: [0.8303]
2022-07-09 02:49:15.362306: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:49:16.085376: Suus1 maybe_update_lr lr: 0.000552
2022-07-09 02:49:16.112892: This epoch took 79.992170 s

2022-07-09 02:49:16.151608: 
epoch:  480
2022-07-09 02:50:27.500458: train loss : -0.9293
2022-07-09 02:50:32.949422: validation loss: -0.7778
2022-07-09 02:50:32.969298: Average global foreground Dice: [0.8333]
2022-07-09 02:50:32.989349: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:50:33.700265: Suus1 maybe_update_lr lr: 0.000527
2022-07-09 02:50:33.714933: This epoch took 77.536071 s

2022-07-09 02:50:33.743875: 
epoch:  481
2022-07-09 02:51:44.527574: train loss : -0.9314
2022-07-09 02:51:49.317892: validation loss: -0.7742
2022-07-09 02:51:49.359085: Average global foreground Dice: [0.8255]
2022-07-09 02:51:49.366545: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:51:50.066265: Suus1 maybe_update_lr lr: 0.000502
2022-07-09 02:51:50.087924: This epoch took 76.311050 s

2022-07-09 02:51:50.117857: 
epoch:  482
2022-07-09 02:53:00.272538: train loss : -0.9310
2022-07-09 02:53:05.274125: validation loss: -0.7792
2022-07-09 02:53:05.304895: Average global foreground Dice: [0.8312]
2022-07-09 02:53:05.316288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:53:05.954603: Suus1 maybe_update_lr lr: 0.000477
2022-07-09 02:53:05.973890: This epoch took 75.828503 s

2022-07-09 02:53:06.009964: 
epoch:  483
2022-07-09 02:54:17.893333: train loss : -0.9279
2022-07-09 02:54:23.003572: validation loss: -0.7755
2022-07-09 02:54:23.028352: Average global foreground Dice: [0.8245]
2022-07-09 02:54:23.065899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:54:23.702889: Suus1 maybe_update_lr lr: 0.000451
2022-07-09 02:54:23.728859: This epoch took 77.687872 s

2022-07-09 02:54:23.768309: 
epoch:  484
2022-07-09 02:55:34.839832: train loss : -0.9298
2022-07-09 02:55:40.769410: validation loss: -0.7675
2022-07-09 02:55:40.808290: Average global foreground Dice: [0.8231]
2022-07-09 02:55:40.828559: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:55:41.616310: Suus1 maybe_update_lr lr: 0.000426
2022-07-09 02:55:41.631920: This epoch took 77.850769 s

2022-07-09 02:55:41.648290: 
epoch:  485
2022-07-09 02:56:52.424296: train loss : -0.9290
2022-07-09 02:56:57.392396: validation loss: -0.7666
2022-07-09 02:56:57.420184: Average global foreground Dice: [0.8243]
2022-07-09 02:56:57.439551: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:56:58.164395: Suus1 maybe_update_lr lr: 0.0004
2022-07-09 02:56:58.175071: This epoch took 76.505130 s

2022-07-09 02:56:58.195716: 
epoch:  486
2022-07-09 02:58:10.522326: train loss : -0.9316
2022-07-09 02:58:16.021422: validation loss: -0.7881
2022-07-09 02:58:16.027043: Average global foreground Dice: [0.8343]
2022-07-09 02:58:16.037640: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:58:16.717247: Suus1 maybe_update_lr lr: 0.000375
2022-07-09 02:58:16.727268: This epoch took 78.521721 s

2022-07-09 02:58:16.730101: 
epoch:  487
2022-07-09 02:59:29.873008: train loss : -0.9307
2022-07-09 02:59:35.248915: validation loss: -0.7732
2022-07-09 02:59:35.273965: Average global foreground Dice: [0.8275]
2022-07-09 02:59:35.293634: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:59:36.011362: Suus1 maybe_update_lr lr: 0.000348
2022-07-09 02:59:36.014002: This epoch took 79.256130 s

2022-07-09 02:59:36.016422: 
epoch:  488
2022-07-09 03:00:47.416045: train loss : -0.9307
2022-07-09 03:00:52.627602: validation loss: -0.7878
2022-07-09 03:00:52.665300: Average global foreground Dice: [0.8402]
2022-07-09 03:00:52.683111: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:00:53.338579: Suus1 maybe_update_lr lr: 0.000322
2022-07-09 03:00:53.367100: saving best epoch checkpoint...
2022-07-09 03:00:53.472954: saving checkpoint...
2022-07-09 03:00:55.118258: done, saving took 1.74 seconds
2022-07-09 03:00:55.135772: This epoch took 79.117131 s

2022-07-09 03:00:55.137927: 
epoch:  489
2022-07-09 03:02:06.168462: train loss : -0.9313
2022-07-09 03:02:11.590328: validation loss: -0.7804
2022-07-09 03:02:11.621420: Average global foreground Dice: [0.8325]
2022-07-09 03:02:11.637880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:02:12.431820: Suus1 maybe_update_lr lr: 0.000296
2022-07-09 03:02:12.463882: saving best epoch checkpoint...
2022-07-09 03:02:12.539349: saving checkpoint...
2022-07-09 03:02:14.307961: done, saving took 1.84 seconds
2022-07-09 03:02:14.364523: This epoch took 79.224602 s

2022-07-09 03:02:14.367152: 
epoch:  490
2022-07-09 03:03:25.432118: train loss : -0.9308
2022-07-09 03:03:30.459908: validation loss: -0.7739
2022-07-09 03:03:30.464889: Average global foreground Dice: [0.827]
2022-07-09 03:03:30.486066: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:03:31.038999: Suus1 maybe_update_lr lr: 0.000269
2022-07-09 03:03:31.070893: This epoch took 76.701588 s

2022-07-09 03:03:31.095858: 
epoch:  491
2022-07-09 03:04:42.012859: train loss : -0.9301
2022-07-09 03:04:47.366728: validation loss: -0.7807
2022-07-09 03:04:47.411097: Average global foreground Dice: [0.8328]
2022-07-09 03:04:47.419044: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:04:48.227786: Suus1 maybe_update_lr lr: 0.000242
2022-07-09 03:04:48.288877: saving best epoch checkpoint...
2022-07-09 03:04:48.373842: saving checkpoint...
2022-07-09 03:04:49.929420: done, saving took 1.62 seconds
2022-07-09 03:04:49.944811: This epoch took 78.826946 s

2022-07-09 03:04:49.946840: 
epoch:  492
2022-07-09 03:06:01.469203: train loss : -0.9285
2022-07-09 03:06:05.973840: validation loss: -0.7804
2022-07-09 03:06:06.016247: Average global foreground Dice: [0.8348]
2022-07-09 03:06:06.061894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:06:06.990914: Suus1 maybe_update_lr lr: 0.000215
2022-07-09 03:06:07.006685: saving best epoch checkpoint...
2022-07-09 03:06:07.079980: saving checkpoint...
2022-07-09 03:06:09.172226: done, saving took 2.16 seconds
2022-07-09 03:06:09.189259: This epoch took 79.240584 s

2022-07-09 03:06:09.191355: 
epoch:  493
2022-07-09 03:07:19.460427: train loss : -0.9307
2022-07-09 03:07:24.483502: validation loss: -0.7631
2022-07-09 03:07:24.514341: Average global foreground Dice: [0.8192]
2022-07-09 03:07:24.531876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:07:25.151537: Suus1 maybe_update_lr lr: 0.000187
2022-07-09 03:07:25.183937: This epoch took 75.990391 s

2022-07-09 03:07:25.205860: 
epoch:  494
2022-07-09 03:08:37.447678: train loss : -0.9317
2022-07-09 03:08:43.958607: validation loss: -0.7781
2022-07-09 03:08:43.976814: Average global foreground Dice: [0.8293]
2022-07-09 03:08:43.987888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:08:44.639024: Suus1 maybe_update_lr lr: 0.000158
2022-07-09 03:08:44.648257: This epoch took 79.422090 s

2022-07-09 03:08:44.684400: 
epoch:  495
2022-07-09 03:09:56.215539: train loss : -0.9303
2022-07-09 03:10:01.136631: validation loss: -0.7774
2022-07-09 03:10:01.166728: Average global foreground Dice: [0.8318]
2022-07-09 03:10:01.191066: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:10:01.883250: Suus1 maybe_update_lr lr: 0.00013
2022-07-09 03:10:01.902940: This epoch took 77.198359 s

2022-07-09 03:10:01.926867: 
epoch:  496
2022-07-09 03:11:13.651811: train loss : -0.9308
2022-07-09 03:11:18.681927: validation loss: -0.7763
2022-07-09 03:11:18.722304: Average global foreground Dice: [0.8288]
2022-07-09 03:11:18.735865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:11:19.578547: Suus1 maybe_update_lr lr: 0.0001
2022-07-09 03:11:19.591837: This epoch took 77.631977 s

2022-07-09 03:11:19.614539: 
epoch:  497
2022-07-09 03:12:31.190853: train loss : -0.9285
2022-07-09 03:12:36.925611: validation loss: -0.7704
2022-07-09 03:12:36.959231: Average global foreground Dice: [0.8263]
2022-07-09 03:12:36.989363: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:12:37.492199: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-09 03:12:37.512899: This epoch took 77.882084 s

2022-07-09 03:12:37.534858: 
epoch:  498
2022-07-09 03:13:47.439279: train loss : -0.9296
2022-07-09 03:13:52.557724: validation loss: -0.7523
2022-07-09 03:13:52.571343: Average global foreground Dice: [0.8107]
2022-07-09 03:13:52.592886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:13:53.417809: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-09 03:13:53.420349: This epoch took 75.863492 s

2022-07-09 03:13:53.469776: 
epoch:  499
2022-07-09 03:15:04.402668: train loss : -0.9320
2022-07-09 03:15:09.583008: validation loss: -0.7744
2022-07-09 03:15:09.623353: Average global foreground Dice: [0.8297]
2022-07-09 03:15:09.638872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:15:10.379574: Suus1 maybe_update_lr lr: 0.0
2022-07-09 03:15:10.401044: saving scheduled checkpoint file...
2022-07-09 03:15:10.574423: saving checkpoint...
2022-07-09 03:15:12.331420: done, saving took 1.91 seconds
2022-07-09 03:15:12.349749: done
2022-07-09 03:15:12.352247: This epoch took 78.873751 s

2022-07-09 03:15:12.425979: saving checkpoint...
2022-07-09 03:15:13.838199: done, saving took 1.48 seconds
panc_005 (2, 66, 207, 294)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 207, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 47], [0, 38]]
number of tiles: 8
computing Gaussian
done
prediction done
suus panc_005 transposed
suus panc_005 not saving softmax
suus panc_005 voeg toe aan pred_gt tuples voor later
panc_015 (2, 56, 185, 258)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_015 transposed
suus panc_015 not saving softmax
suus panc_015 voeg toe aan pred_gt tuples voor later
panc_021 (2, 55, 186, 275)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 186, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 26], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_021 transposed
suus panc_021 not saving softmax
suus panc_021 voeg toe aan pred_gt tuples voor later
panc_032 (2, 52, 192, 303)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 192, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 32], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_032 transposed
suus panc_032 not saving softmax
suus panc_032 voeg toe aan pred_gt tuples voor later
panc_037 (2, 47, 165, 252)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 5], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_037 transposed
suus panc_037 not saving softmax
suus panc_037 voeg toe aan pred_gt tuples voor later
panc_043 (2, 78, 166, 291)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 166, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 6], [0, 35]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_043 transposed
suus panc_043 not saving softmax
suus panc_043 voeg toe aan pred_gt tuples voor later
panc_055 (2, 66, 202, 292)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 202, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 42], [0, 36]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_055 transposed
suus panc_055 not saving softmax
suus panc_055 voeg toe aan pred_gt tuples voor later
panc_061 (2, 62, 207, 356)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 207, 356)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 47], [0, 100]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_061 transposed
suus panc_061 not saving softmax
suus panc_061 voeg toe aan pred_gt tuples voor later
panc_084 (2, 61, 163, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 163, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 3], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_084 transposed
suus panc_084 not saving softmax
suus panc_084 voeg toe aan pred_gt tuples voor later
panc_094 (2, 70, 213, 311)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 213, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 53], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_094 transposed
suus panc_094 not saving softmax
suus panc_094 voeg toe aan pred_gt tuples voor later
panc_096 (2, 60, 193, 345)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_096 transposed
suus panc_096 not saving softmax
suus panc_096 voeg toe aan pred_gt tuples voor later
panc_102 (2, 61, 179, 314)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 179, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 19], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_102 transposed
suus panc_102 not saving softmax
suus panc_102 voeg toe aan pred_gt tuples voor later
panc_124 (2, 62, 181, 360)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 360)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 104]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_124 transposed
suus panc_124 not saving softmax
suus panc_124 voeg toe aan pred_gt tuples voor later
panc_138 (2, 62, 227, 345)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 227, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 67], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_138 transposed
suus panc_138 not saving softmax
suus panc_138 voeg toe aan pred_gt tuples voor later
panc_167 (2, 62, 162, 258)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 162, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 2], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_167 transposed
suus panc_167 not saving softmax
suus panc_167 voeg toe aan pred_gt tuples voor later
panc_175 (2, 59, 173, 311)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 173, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 13], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_175 transposed
suus panc_175 not saving softmax
suus panc_175 voeg toe aan pred_gt tuples voor later
panc_179 (2, 53, 153, 260)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_179 transposed
suus panc_179 not saving softmax
suus panc_179 voeg toe aan pred_gt tuples voor later
panc_183 (2, 49, 151, 247)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_183 transposed
suus panc_183 not saving softmax
suus panc_183 voeg toe aan pred_gt tuples voor later
panc_196 (2, 51, 146, 271)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 271)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 15]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_196 transposed
suus panc_196 not saving softmax
suus panc_196 voeg toe aan pred_gt tuples voor later
panc_198 (2, 50, 168, 330)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 168, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0, 8], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_198 transposed
suus panc_198 not saving softmax
suus panc_198 voeg toe aan pred_gt tuples voor later
panc_203 (2, 60, 156, 309)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 53]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_203 transposed
suus panc_203 not saving softmax
suus panc_203 voeg toe aan pred_gt tuples voor later
panc_222 (2, 59, 137, 198)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_222 transposed
suus panc_222 not saving softmax
suus panc_222 voeg toe aan pred_gt tuples voor later
panc_230 (2, 52, 135, 256)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_230 transposed
suus panc_230 not saving softmax
suus panc_230 voeg toe aan pred_gt tuples voor later
panc_231 (2, 55, 177, 289)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 177, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 17], [0, 33]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_231 transposed
suus panc_231 not saving softmax
suus panc_231 voeg toe aan pred_gt tuples voor later
panc_239 (2, 46, 145, 275)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 19]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_239 transposed
suus panc_239 not saving softmax
suus panc_239 voeg toe aan pred_gt tuples voor later
panc_244 (2, 64, 182, 313)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 182, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 22], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_244 transposed
suus panc_244 not saving softmax
suus panc_244 voeg toe aan pred_gt tuples voor later
panc_247 (2, 59, 171, 190)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_247 transposed
suus panc_247 not saving softmax
suus panc_247 voeg toe aan pred_gt tuples voor later
panc_254 (2, 62, 190, 277)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 190, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 30], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_254 transposed
suus panc_254 not saving softmax
suus panc_254 voeg toe aan pred_gt tuples voor later
panc_267 (2, 60, 160, 296)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 40]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_267 transposed
suus panc_267 not saving softmax
suus panc_267 voeg toe aan pred_gt tuples voor later
panc_270 (2, 57, 177, 300)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 177, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 17], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_270 transposed
suus panc_270 not saving softmax
suus panc_270 voeg toe aan pred_gt tuples voor later
panc_274 (2, 66, 135, 288)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 32]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_274 transposed
suus panc_274 not saving softmax
suus panc_274 voeg toe aan pred_gt tuples voor later
panc_277 (2, 57, 184, 325)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 184, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 24], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_277 transposed
suus panc_277 not saving softmax
suus panc_277 voeg toe aan pred_gt tuples voor later
panc_278 (2, 58, 181, 298)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 181, 298)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 21], [0, 42]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_278 transposed
suus panc_278 not saving softmax
suus panc_278 voeg toe aan pred_gt tuples voor later
panc_289 (2, 57, 141, 278)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_289 transposed
suus panc_289 not saving softmax
suus panc_289 voeg toe aan pred_gt tuples voor later
panc_290 (2, 61, 168, 296)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_290 transposed
suus panc_290 not saving softmax
suus panc_290 voeg toe aan pred_gt tuples voor later
panc_291 (2, 61, 168, 296)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_291 transposed
suus panc_291 not saving softmax
suus panc_291 voeg toe aan pred_gt tuples voor later
panc_297 (2, 64, 209, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 209, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 49], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_297 transposed
suus panc_297 not saving softmax
suus panc_297 voeg toe aan pred_gt tuples voor later
panc_299 (2, 58, 157, 273)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 273)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 17]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_299 transposed
suus panc_299 not saving softmax
suus panc_299 voeg toe aan pred_gt tuples voor later
panc_303 (2, 62, 170, 322)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 66]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_303 transposed
suus panc_303 not saving softmax
suus panc_303 voeg toe aan pred_gt tuples voor later
panc_320 (2, 54, 165, 288)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 165, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 5], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_320 transposed
suus panc_320 not saving softmax
suus panc_320 voeg toe aan pred_gt tuples voor later
panc_328 (2, 60, 179, 279)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 179, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 19], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_328 transposed
suus panc_328 not saving softmax
suus panc_328 voeg toe aan pred_gt tuples voor later
panc_331 (2, 61, 189, 250)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 189, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 29], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_331 transposed
suus panc_331 not saving softmax
suus panc_331 voeg toe aan pred_gt tuples voor later
panc_339 (2, 56, 179, 319)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_339 transposed
suus panc_339 not saving softmax
suus panc_339 voeg toe aan pred_gt tuples voor later
panc_344 (2, 62, 159, 250)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_344 transposed
suus panc_344 not saving softmax
suus panc_344 voeg toe aan pred_gt tuples voor later
panc_355 (2, 76, 168, 300)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 168, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 8], [0, 44]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_355 transposed
suus panc_355 not saving softmax
suus panc_355 voeg toe aan pred_gt tuples voor later
panc_387 (2, 86, 155, 299)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 43]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_387 transposed
suus panc_387 not saving softmax
suus panc_387 voeg toe aan pred_gt tuples voor later
panc_392 (2, 90, 170, 261)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 170, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 10], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_392 transposed
suus panc_392 not saving softmax
suus panc_392 voeg toe aan pred_gt tuples voor later
panc_395 (2, 55, 167, 283)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 167, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 7], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_395 transposed
suus panc_395 not saving softmax
suus panc_395 voeg toe aan pred_gt tuples voor later
2022-07-09 03:17:04.330172: finished prediction
2022-07-09 03:17:04.334019: evaluation of raw predictions
2022-07-09 03:17:14.165844: determining postprocessing
Foreground vs background
before: 0.8330166034625629
after:  0.8329951752809489
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_005.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_084.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_179.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_239.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_278.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_328.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_015.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_094.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_183.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_244.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_289.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_331.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_021.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_096.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_196.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_247.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_290.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_339.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_032.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_102.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_198.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_254.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_291.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_344.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_037.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_124.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_203.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_267.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_297.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_355.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_043.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_138.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_222.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_270.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_299.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_387.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_055.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_167.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_230.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_274.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_303.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_392.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_061.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_175.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_231.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_277.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_320.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_395.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='3', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 03:17:36.747579: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-09 03:17:37.665591: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-09 03:17:37.670027: The split file contains 5 splits.
2022-07-09 03:17:37.672216: Desired fold for training: 3
2022-07-09 03:17:37.674280: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-09 03:17:39.986949: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-09 03:17:53.720158: Unable to plot network architecture:
2022-07-09 03:17:53.760667: local variable 'g' referenced before assignment
2022-07-09 03:17:53.802174: 
printing the network instead:

2022-07-09 03:17:53.804624: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-09 03:17:53.809684: 

2022-07-09 03:17:53.812169: 
epoch:  0
2022-07-09 03:19:18.217709: train loss : -0.1094
2022-07-09 03:19:23.891936: validation loss: -0.3001
2022-07-09 03:19:23.938058: Average global foreground Dice: [0.4502]
2022-07-09 03:19:23.948390: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:19:24.995115: Suus1 maybe_update_lr lr: 0.009982
2022-07-09 03:19:25.025494: This epoch took 91.211091 s

2022-07-09 03:19:25.048859: 
epoch:  1
2022-07-09 03:20:37.284815: train loss : -0.3673
2022-07-09 03:20:43.440781: validation loss: -0.4053
2022-07-09 03:20:43.466556: Average global foreground Dice: [0.5386]
2022-07-09 03:20:43.486238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:20:44.111298: Suus1 maybe_update_lr lr: 0.009964
2022-07-09 03:20:44.131054: saving best epoch checkpoint...
2022-07-09 03:20:44.273512: saving checkpoint...
2022-07-09 03:20:45.763612: done, saving took 1.61 seconds
2022-07-09 03:20:45.780504: This epoch took 80.729314 s

2022-07-09 03:20:45.783629: 
epoch:  2
2022-07-09 03:21:56.934104: train loss : -0.4299
2022-07-09 03:22:03.154926: validation loss: -0.4424
2022-07-09 03:22:03.163169: Average global foreground Dice: [0.5632]
2022-07-09 03:22:03.169458: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:22:03.833933: Suus1 maybe_update_lr lr: 0.009946
2022-07-09 03:22:03.854880: saving best epoch checkpoint...
2022-07-09 03:22:03.969216: saving checkpoint...
2022-07-09 03:22:05.527092: done, saving took 1.65 seconds
2022-07-09 03:22:05.604879: This epoch took 79.818781 s

2022-07-09 03:22:05.635003: 
epoch:  3
2022-07-09 03:23:17.561318: train loss : -0.5059
2022-07-09 03:23:22.752241: validation loss: -0.5205
2022-07-09 03:23:22.786999: Average global foreground Dice: [0.6313]
2022-07-09 03:23:22.801198: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:23:23.455215: Suus1 maybe_update_lr lr: 0.009928
2022-07-09 03:23:23.465066: saving best epoch checkpoint...
2022-07-09 03:23:23.596298: saving checkpoint...
2022-07-09 03:23:25.429064: done, saving took 1.96 seconds
2022-07-09 03:23:25.447057: This epoch took 79.776199 s

2022-07-09 03:23:25.449322: 
epoch:  4
2022-07-09 03:24:36.144974: train loss : -0.5405
2022-07-09 03:24:42.309327: validation loss: -0.5132
2022-07-09 03:24:42.338328: Average global foreground Dice: [0.6213]
2022-07-09 03:24:42.398860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:24:43.402726: Suus1 maybe_update_lr lr: 0.00991
2022-07-09 03:24:43.411199: saving best epoch checkpoint...
2022-07-09 03:24:43.564503: saving checkpoint...
2022-07-09 03:24:45.302719: done, saving took 1.89 seconds
2022-07-09 03:24:45.318727: This epoch took 79.867097 s

2022-07-09 03:24:45.320965: 
epoch:  5
2022-07-09 03:25:55.498643: train loss : -0.5657
2022-07-09 03:26:01.156161: validation loss: -0.5299
2022-07-09 03:26:01.190254: Average global foreground Dice: [0.6382]
2022-07-09 03:26:01.210506: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:26:02.055755: Suus1 maybe_update_lr lr: 0.009892
2022-07-09 03:26:02.076890: saving best epoch checkpoint...
2022-07-09 03:26:02.203238: saving checkpoint...
2022-07-09 03:26:03.816705: done, saving took 1.71 seconds
2022-07-09 03:26:03.833398: This epoch took 78.510240 s

2022-07-09 03:26:03.835645: 
epoch:  6
2022-07-09 03:27:13.461234: train loss : -0.5961
2022-07-09 03:27:19.366730: validation loss: -0.5809
2022-07-09 03:27:19.390192: Average global foreground Dice: [0.6795]
2022-07-09 03:27:19.413881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:27:20.100444: Suus1 maybe_update_lr lr: 0.009874
2022-07-09 03:27:20.121886: saving best epoch checkpoint...
2022-07-09 03:27:20.283840: saving checkpoint...
2022-07-09 03:27:21.886749: done, saving took 1.74 seconds
2022-07-09 03:27:21.904241: This epoch took 78.066432 s

2022-07-09 03:27:21.906640: 
epoch:  7
2022-07-09 03:28:33.348448: train loss : -0.6165
2022-07-09 03:28:39.571782: validation loss: -0.6311
2022-07-09 03:28:39.607239: Average global foreground Dice: [0.7212]
2022-07-09 03:28:39.638060: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:28:40.370542: Suus1 maybe_update_lr lr: 0.009856
2022-07-09 03:28:40.402901: saving best epoch checkpoint...
2022-07-09 03:28:40.508255: saving checkpoint...
2022-07-09 03:28:42.166891: done, saving took 1.73 seconds
2022-07-09 03:28:42.184002: This epoch took 80.275169 s

2022-07-09 03:28:42.186255: 
epoch:  8
2022-07-09 03:29:53.355335: train loss : -0.6401
2022-07-09 03:29:59.395241: validation loss: -0.6055
2022-07-09 03:29:59.419264: Average global foreground Dice: [0.6966]
2022-07-09 03:29:59.447879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:30:00.059728: Suus1 maybe_update_lr lr: 0.009838
2022-07-09 03:30:00.086005: saving best epoch checkpoint...
2022-07-09 03:30:00.300222: saving checkpoint...
2022-07-09 03:30:01.894072: done, saving took 1.79 seconds
2022-07-09 03:30:01.932758: This epoch took 79.744265 s

2022-07-09 03:30:01.935165: 
epoch:  9
2022-07-09 03:31:13.758277: train loss : -0.6471
2022-07-09 03:31:19.189134: validation loss: -0.5785
2022-07-09 03:31:19.222266: Average global foreground Dice: [0.6799]
2022-07-09 03:31:19.243874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:31:20.178364: Suus1 maybe_update_lr lr: 0.00982
2022-07-09 03:31:20.210894: saving best epoch checkpoint...
2022-07-09 03:31:20.367315: saving checkpoint...
2022-07-09 03:31:22.076175: done, saving took 1.83 seconds
2022-07-09 03:31:22.092038: This epoch took 80.154458 s

2022-07-09 03:31:22.094244: 
epoch:  10
2022-07-09 03:32:34.846224: train loss : -0.6523
2022-07-09 03:32:41.129857: validation loss: -0.6039
2022-07-09 03:32:41.140176: Average global foreground Dice: [0.7042]
2022-07-09 03:32:41.154418: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:32:42.007569: Suus1 maybe_update_lr lr: 0.009802
2022-07-09 03:32:42.017286: saving best epoch checkpoint...
2022-07-09 03:32:42.197002: saving checkpoint...
2022-07-09 03:32:43.801214: done, saving took 1.75 seconds
2022-07-09 03:32:43.823607: This epoch took 81.727331 s

2022-07-09 03:32:43.825691: 
epoch:  11
2022-07-09 03:33:54.476345: train loss : -0.6676
2022-07-09 03:34:00.177510: validation loss: -0.6215
2022-07-09 03:34:00.197393: Average global foreground Dice: [0.7194]
2022-07-09 03:34:00.218918: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:34:00.871376: Suus1 maybe_update_lr lr: 0.009784
2022-07-09 03:34:00.892902: saving best epoch checkpoint...
2022-07-09 03:34:01.022445: saving checkpoint...
2022-07-09 03:34:02.859540: done, saving took 1.94 seconds
2022-07-09 03:34:02.878822: This epoch took 79.050946 s

2022-07-09 03:34:02.882250: 
epoch:  12
2022-07-09 03:35:15.248175: train loss : -0.6814
2022-07-09 03:35:21.173491: validation loss: -0.5596
2022-07-09 03:35:21.198809: Average global foreground Dice: [0.6791]
2022-07-09 03:35:21.214864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:35:22.144619: Suus1 maybe_update_lr lr: 0.009766
2022-07-09 03:35:22.165886: saving best epoch checkpoint...
2022-07-09 03:35:22.259076: saving checkpoint...
2022-07-09 03:35:23.971983: done, saving took 1.79 seconds
2022-07-09 03:35:23.987140: This epoch took 81.101976 s

2022-07-09 03:35:23.989287: 
epoch:  13
2022-07-09 03:36:37.004974: train loss : -0.6789
2022-07-09 03:36:43.456356: validation loss: -0.6457
2022-07-09 03:36:43.490420: Average global foreground Dice: [0.736]
2022-07-09 03:36:43.510724: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:36:44.147061: Suus1 maybe_update_lr lr: 0.009748
2022-07-09 03:36:44.149736: saving best epoch checkpoint...
2022-07-09 03:36:44.224637: saving checkpoint...
2022-07-09 03:36:45.845629: done, saving took 1.69 seconds
2022-07-09 03:36:45.904872: This epoch took 81.913603 s

2022-07-09 03:36:45.924963: 
epoch:  14
2022-07-09 03:37:57.947550: train loss : -0.6780
2022-07-09 03:38:03.481998: validation loss: -0.6416
2022-07-09 03:38:03.515268: Average global foreground Dice: [0.7264]
2022-07-09 03:38:03.547900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:38:04.259603: Suus1 maybe_update_lr lr: 0.00973
2022-07-09 03:38:04.268366: saving best epoch checkpoint...
2022-07-09 03:38:04.346652: saving checkpoint...
2022-07-09 03:38:06.089244: done, saving took 1.80 seconds
2022-07-09 03:38:06.104964: This epoch took 80.167099 s

2022-07-09 03:38:06.107188: 
epoch:  15
2022-07-09 03:39:18.578888: train loss : -0.6897
2022-07-09 03:39:24.183744: validation loss: -0.6226
2022-07-09 03:39:24.219398: Average global foreground Dice: [0.7227]
2022-07-09 03:39:24.240955: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:39:24.878401: Suus1 maybe_update_lr lr: 0.009712
2022-07-09 03:39:24.899877: saving best epoch checkpoint...
2022-07-09 03:39:24.964411: saving checkpoint...
2022-07-09 03:39:26.661935: done, saving took 1.74 seconds
2022-07-09 03:39:26.744667: This epoch took 80.635240 s

2022-07-09 03:39:26.748202: 
epoch:  16
2022-07-09 03:40:37.598353: train loss : -0.6966
2022-07-09 03:40:43.138201: validation loss: -0.6205
2022-07-09 03:40:43.160743: Average global foreground Dice: [0.7253]
2022-07-09 03:40:43.180582: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:40:43.774486: Suus1 maybe_update_lr lr: 0.009693
2022-07-09 03:40:43.795877: saving best epoch checkpoint...
2022-07-09 03:40:43.884880: saving checkpoint...
2022-07-09 03:40:45.760257: done, saving took 1.94 seconds
2022-07-09 03:40:45.795758: This epoch took 79.025815 s

2022-07-09 03:40:45.819064: 
epoch:  17
2022-07-09 03:41:57.268852: train loss : -0.7120
2022-07-09 03:42:03.082254: validation loss: -0.6379
2022-07-09 03:42:03.107584: Average global foreground Dice: [0.7319]
2022-07-09 03:42:03.120839: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:42:03.756541: Suus1 maybe_update_lr lr: 0.009675
2022-07-09 03:42:03.795853: saving best epoch checkpoint...
2022-07-09 03:42:03.931919: saving checkpoint...
2022-07-09 03:42:05.477491: done, saving took 1.65 seconds
2022-07-09 03:42:05.493914: This epoch took 79.672529 s

2022-07-09 03:42:05.496293: 
epoch:  18
2022-07-09 03:43:16.133603: train loss : -0.7026
2022-07-09 03:43:21.544094: validation loss: -0.6312
2022-07-09 03:43:21.570191: Average global foreground Dice: [0.7241]
2022-07-09 03:43:21.600952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:43:22.337178: Suus1 maybe_update_lr lr: 0.009657
2022-07-09 03:43:22.356748: saving best epoch checkpoint...
2022-07-09 03:43:22.421672: saving checkpoint...
2022-07-09 03:43:24.093897: done, saving took 1.73 seconds
2022-07-09 03:43:24.111069: This epoch took 78.612709 s

2022-07-09 03:43:24.113618: 
epoch:  19
2022-07-09 03:44:36.385076: train loss : -0.6894
2022-07-09 03:44:42.799690: validation loss: -0.6379
2022-07-09 03:44:42.837837: Average global foreground Dice: [0.7331]
2022-07-09 03:44:42.870889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:44:43.618541: Suus1 maybe_update_lr lr: 0.009639
2022-07-09 03:44:43.639919: saving best epoch checkpoint...
2022-07-09 03:44:43.780665: saving checkpoint...
2022-07-09 03:44:45.538145: done, saving took 1.86 seconds
2022-07-09 03:44:45.557324: This epoch took 81.440990 s

2022-07-09 03:44:45.560750: 
epoch:  20
2022-07-09 03:45:57.825010: train loss : -0.7011
2022-07-09 03:46:04.172211: validation loss: -0.6449
2022-07-09 03:46:04.200108: Average global foreground Dice: [0.7246]
2022-07-09 03:46:04.208748: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:46:05.226114: Suus1 maybe_update_lr lr: 0.009621
2022-07-09 03:46:05.257881: saving best epoch checkpoint...
2022-07-09 03:46:05.358196: saving checkpoint...
2022-07-09 03:46:07.120882: done, saving took 1.84 seconds
2022-07-09 03:46:07.135468: This epoch took 81.571250 s

2022-07-09 03:46:07.137653: 
epoch:  21
2022-07-09 03:47:17.005044: train loss : -0.7188
2022-07-09 03:47:22.602098: validation loss: -0.6633
2022-07-09 03:47:22.624235: Average global foreground Dice: [0.75]
2022-07-09 03:47:22.641176: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:47:23.368819: Suus1 maybe_update_lr lr: 0.009603
2022-07-09 03:47:23.400921: saving best epoch checkpoint...
2022-07-09 03:47:23.499577: saving checkpoint...
2022-07-09 03:47:25.433435: done, saving took 2.01 seconds
2022-07-09 03:47:25.448103: This epoch took 78.308334 s

2022-07-09 03:47:25.450218: 
epoch:  22
2022-07-09 03:48:36.261664: train loss : -0.7234
2022-07-09 03:48:42.538580: validation loss: -0.6257
2022-07-09 03:48:42.560908: Average global foreground Dice: [0.7253]
2022-07-09 03:48:42.594744: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:48:43.370892: Suus1 maybe_update_lr lr: 0.009585
2022-07-09 03:48:43.383897: saving best epoch checkpoint...
2022-07-09 03:48:43.473900: saving checkpoint...
2022-07-09 03:48:44.985054: done, saving took 1.58 seconds
2022-07-09 03:48:44.999464: This epoch took 79.547029 s

2022-07-09 03:48:45.001857: 
epoch:  23
2022-07-09 03:49:55.786036: train loss : -0.7206
2022-07-09 03:50:01.506011: validation loss: -0.6747
2022-07-09 03:50:01.545225: Average global foreground Dice: [0.756]
2022-07-09 03:50:01.565022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:50:02.159366: Suus1 maybe_update_lr lr: 0.009567
2022-07-09 03:50:02.188354: saving best epoch checkpoint...
2022-07-09 03:50:02.291067: saving checkpoint...
2022-07-09 03:50:03.794930: done, saving took 1.59 seconds
2022-07-09 03:50:03.867194: This epoch took 78.863076 s

2022-07-09 03:50:03.888867: 
epoch:  24
2022-07-09 03:51:14.359970: train loss : -0.7428
2022-07-09 03:51:19.889808: validation loss: -0.6832
2022-07-09 03:51:19.932313: Average global foreground Dice: [0.7644]
2022-07-09 03:51:19.953860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:51:20.526370: Suus1 maybe_update_lr lr: 0.009549
2022-07-09 03:51:20.555885: saving best epoch checkpoint...
2022-07-09 03:51:20.665308: saving checkpoint...
2022-07-09 03:51:22.499775: done, saving took 1.92 seconds
2022-07-09 03:51:22.514820: This epoch took 78.609576 s

2022-07-09 03:51:22.516926: 
epoch:  25
2022-07-09 03:52:33.222979: train loss : -0.7376
2022-07-09 03:52:39.038811: validation loss: -0.6614
2022-07-09 03:52:39.072307: Average global foreground Dice: [0.7392]
2022-07-09 03:52:39.097884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:52:39.745760: Suus1 maybe_update_lr lr: 0.009531
2022-07-09 03:52:39.766821: saving best epoch checkpoint...
2022-07-09 03:52:39.849535: saving checkpoint...
2022-07-09 03:52:41.699097: done, saving took 1.90 seconds
2022-07-09 03:52:41.804343: This epoch took 79.285225 s

2022-07-09 03:52:41.825862: 
epoch:  26
2022-07-09 03:53:53.819178: train loss : -0.7282
2022-07-09 03:54:00.390088: validation loss: -0.6582
2022-07-09 03:54:00.420375: Average global foreground Dice: [0.735]
2022-07-09 03:54:00.428399: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:54:01.156533: Suus1 maybe_update_lr lr: 0.009513
2022-07-09 03:54:01.189893: saving best epoch checkpoint...
2022-07-09 03:54:01.306048: saving checkpoint...
2022-07-09 03:54:02.832939: done, saving took 1.62 seconds
2022-07-09 03:54:02.849462: This epoch took 80.998603 s

2022-07-09 03:54:02.851962: 
epoch:  27
2022-07-09 03:55:15.723929: train loss : -0.7385
2022-07-09 03:55:20.776063: validation loss: -0.6781
2022-07-09 03:55:20.809446: Average global foreground Dice: [0.7617]
2022-07-09 03:55:20.829201: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:55:21.698840: Suus1 maybe_update_lr lr: 0.009495
2022-07-09 03:55:21.719893: saving best epoch checkpoint...
2022-07-09 03:55:21.818955: saving checkpoint...
2022-07-09 03:55:23.538001: done, saving took 1.80 seconds
2022-07-09 03:55:23.555403: This epoch took 80.700896 s

2022-07-09 03:55:23.557747: 
epoch:  28
2022-07-09 03:56:34.425095: train loss : -0.7275
2022-07-09 03:56:40.538996: validation loss: -0.7076
2022-07-09 03:56:40.575261: Average global foreground Dice: [0.783]
2022-07-09 03:56:40.587895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:56:41.331629: Suus1 maybe_update_lr lr: 0.009476
2022-07-09 03:56:41.339857: saving best epoch checkpoint...
2022-07-09 03:56:41.443450: saving checkpoint...
2022-07-09 03:56:43.120259: done, saving took 1.78 seconds
2022-07-09 03:56:43.135440: This epoch took 79.575552 s

2022-07-09 03:56:43.137489: 
epoch:  29
2022-07-09 03:57:53.932137: train loss : -0.7505
2022-07-09 03:57:59.348963: validation loss: -0.6635
2022-07-09 03:57:59.378845: Average global foreground Dice: [0.752]
2022-07-09 03:57:59.396897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:58:00.113998: Suus1 maybe_update_lr lr: 0.009458
2022-07-09 03:58:00.145879: saving best epoch checkpoint...
2022-07-09 03:58:00.221529: saving checkpoint...
2022-07-09 03:58:01.845271: done, saving took 1.67 seconds
2022-07-09 03:58:01.901873: This epoch took 78.762240 s

2022-07-09 03:58:01.923865: 
epoch:  30
2022-07-09 03:59:13.034457: train loss : -0.7431
2022-07-09 03:59:19.199620: validation loss: -0.6901
2022-07-09 03:59:19.232247: Average global foreground Dice: [0.7636]
2022-07-09 03:59:19.280199: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:59:20.164453: Suus1 maybe_update_lr lr: 0.00944
2022-07-09 03:59:20.196910: saving best epoch checkpoint...
2022-07-09 03:59:20.272493: saving checkpoint...
2022-07-09 03:59:21.921374: done, saving took 1.69 seconds
2022-07-09 03:59:21.935889: This epoch took 79.988012 s

2022-07-09 03:59:21.938022: 
epoch:  31
2022-07-09 04:00:33.086324: train loss : -0.7408
2022-07-09 04:00:38.969242: validation loss: -0.6932
2022-07-09 04:00:39.000463: Average global foreground Dice: [0.7663]
2022-07-09 04:00:39.015928: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:00:39.607527: Suus1 maybe_update_lr lr: 0.009422
2022-07-09 04:00:39.628883: saving best epoch checkpoint...
2022-07-09 04:00:39.693037: saving checkpoint...
2022-07-09 04:00:41.401142: done, saving took 1.75 seconds
2022-07-09 04:00:41.441875: This epoch took 79.501678 s

2022-07-09 04:00:41.463861: 
epoch:  32
2022-07-09 04:01:52.486856: train loss : -0.7487
2022-07-09 04:01:57.835334: validation loss: -0.6860
2022-07-09 04:01:57.871177: Average global foreground Dice: [0.7663]
2022-07-09 04:01:57.915940: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:01:58.825517: Suus1 maybe_update_lr lr: 0.009404
2022-07-09 04:01:58.857897: saving best epoch checkpoint...
2022-07-09 04:01:58.946492: saving checkpoint...
2022-07-09 04:02:00.580857: done, saving took 1.69 seconds
2022-07-09 04:02:00.595596: This epoch took 79.100352 s

2022-07-09 04:02:00.597880: 
epoch:  33
2022-07-09 04:03:13.164428: train loss : -0.7526
2022-07-09 04:03:19.592497: validation loss: -0.7059
2022-07-09 04:03:19.613909: Average global foreground Dice: [0.7777]
2022-07-09 04:03:19.616878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:03:20.186095: Suus1 maybe_update_lr lr: 0.009386
2022-07-09 04:03:20.194055: saving best epoch checkpoint...
2022-07-09 04:03:20.282490: saving checkpoint...
2022-07-09 04:03:22.046852: done, saving took 1.83 seconds
2022-07-09 04:03:22.062607: This epoch took 81.462499 s

2022-07-09 04:03:22.064961: 
epoch:  34
2022-07-09 04:04:32.794824: train loss : -0.7433
2022-07-09 04:04:38.442991: validation loss: -0.6427
2022-07-09 04:04:38.460292: Average global foreground Dice: [0.7322]
2022-07-09 04:04:38.489829: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:04:39.285610: Suus1 maybe_update_lr lr: 0.009368
2022-07-09 04:04:39.316154: This epoch took 77.249054 s

2022-07-09 04:04:39.337856: 
epoch:  35
2022-07-09 04:05:52.369350: train loss : -0.7483
2022-07-09 04:05:57.610021: validation loss: -0.6625
2022-07-09 04:05:57.645236: Average global foreground Dice: [0.7533]
2022-07-09 04:05:57.677882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:05:58.340508: Suus1 maybe_update_lr lr: 0.00935
2022-07-09 04:05:58.368062: saving best epoch checkpoint...
2022-07-09 04:05:58.471249: saving checkpoint...
2022-07-09 04:06:00.153939: done, saving took 1.76 seconds
2022-07-09 04:06:00.221262: This epoch took 80.861386 s

2022-07-09 04:06:00.243052: 
epoch:  36
2022-07-09 04:07:10.903389: train loss : -0.7587
2022-07-09 04:07:17.030620: validation loss: -0.6679
2022-07-09 04:07:17.054284: Average global foreground Dice: [0.759]
2022-07-09 04:07:17.073879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:07:17.952187: Suus1 maybe_update_lr lr: 0.009331
2022-07-09 04:07:17.991033: saving best epoch checkpoint...
2022-07-09 04:07:18.060148: saving checkpoint...
2022-07-09 04:07:19.970538: done, saving took 1.96 seconds
2022-07-09 04:07:19.985279: This epoch took 79.715415 s

2022-07-09 04:07:19.987446: 
epoch:  37
2022-07-09 04:08:31.345881: train loss : -0.7560
2022-07-09 04:08:37.086262: validation loss: -0.7109
2022-07-09 04:08:37.121204: Average global foreground Dice: [0.7883]
2022-07-09 04:08:37.142875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:08:37.810328: Suus1 maybe_update_lr lr: 0.009313
2022-07-09 04:08:37.827036: saving best epoch checkpoint...
2022-07-09 04:08:37.916679: saving checkpoint...
2022-07-09 04:08:39.946987: done, saving took 2.10 seconds
2022-07-09 04:08:39.961649: This epoch took 79.971981 s

2022-07-09 04:08:39.963751: 
epoch:  38
2022-07-09 04:09:50.066192: train loss : -0.7466
2022-07-09 04:09:55.978265: validation loss: -0.7180
2022-07-09 04:09:56.014255: Average global foreground Dice: [0.7864]
2022-07-09 04:09:56.061513: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:09:56.824445: Suus1 maybe_update_lr lr: 0.009295
2022-07-09 04:09:56.845881: saving best epoch checkpoint...
2022-07-09 04:09:56.943265: saving checkpoint...
2022-07-09 04:09:58.436049: done, saving took 1.57 seconds
2022-07-09 04:09:58.452967: This epoch took 78.487243 s

2022-07-09 04:09:58.455396: 
epoch:  39
2022-07-09 04:11:08.901521: train loss : -0.7622
2022-07-09 04:11:15.363888: validation loss: -0.6733
2022-07-09 04:11:15.377994: Average global foreground Dice: [0.7542]
2022-07-09 04:11:15.386437: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:11:16.028827: Suus1 maybe_update_lr lr: 0.009277
2022-07-09 04:11:16.049928: saving best epoch checkpoint...
2022-07-09 04:11:16.141853: saving checkpoint...
2022-07-09 04:11:17.855528: done, saving took 1.76 seconds
2022-07-09 04:11:17.869708: This epoch took 79.412114 s

2022-07-09 04:11:17.872438: 
epoch:  40
2022-07-09 04:12:28.462077: train loss : -0.7438
2022-07-09 04:12:34.403994: validation loss: -0.6839
2022-07-09 04:12:34.446574: Average global foreground Dice: [0.7648]
2022-07-09 04:12:34.465885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:12:35.245832: Suus1 maybe_update_lr lr: 0.009259
2022-07-09 04:12:35.277875: saving best epoch checkpoint...
2022-07-09 04:12:35.381137: saving checkpoint...
2022-07-09 04:12:36.992270: done, saving took 1.69 seconds
2022-07-09 04:12:37.007181: This epoch took 79.131522 s

2022-07-09 04:12:37.009938: 
epoch:  41
2022-07-09 04:13:47.533066: train loss : -0.7588
2022-07-09 04:13:52.742047: validation loss: -0.6991
2022-07-09 04:13:52.775461: Average global foreground Dice: [0.7722]
2022-07-09 04:13:52.795220: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:13:53.415339: Suus1 maybe_update_lr lr: 0.009241
2022-07-09 04:13:53.418025: saving best epoch checkpoint...
2022-07-09 04:13:53.502857: saving checkpoint...
2022-07-09 04:13:55.005951: done, saving took 1.57 seconds
2022-07-09 04:13:55.066874: This epoch took 78.054952 s

2022-07-09 04:13:55.098187: 
epoch:  42
2022-07-09 04:15:07.103408: train loss : -0.7639
2022-07-09 04:15:12.657558: validation loss: -0.7257
2022-07-09 04:15:12.664836: Average global foreground Dice: [0.7984]
2022-07-09 04:15:12.690872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:15:13.436632: Suus1 maybe_update_lr lr: 0.009223
2022-07-09 04:15:13.457941: saving best epoch checkpoint...
2022-07-09 04:15:13.542560: saving checkpoint...
2022-07-09 04:15:15.353392: done, saving took 1.88 seconds
2022-07-09 04:15:15.371541: This epoch took 80.253243 s

2022-07-09 04:15:15.373743: 
epoch:  43
2022-07-09 04:16:25.995137: train loss : -0.7607
2022-07-09 04:16:32.465263: validation loss: -0.6715
2022-07-09 04:16:32.490280: Average global foreground Dice: [0.775]
2022-07-09 04:16:32.515028: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:16:33.153623: Suus1 maybe_update_lr lr: 0.009204
2022-07-09 04:16:33.185910: saving best epoch checkpoint...
2022-07-09 04:16:33.317371: saving checkpoint...
2022-07-09 04:16:34.904723: done, saving took 1.69 seconds
2022-07-09 04:16:34.922691: This epoch took 79.546782 s

2022-07-09 04:16:34.924757: 
epoch:  44
2022-07-09 04:17:46.590182: train loss : -0.7683
2022-07-09 04:17:51.804712: validation loss: -0.7052
2022-07-09 04:17:51.822291: Average global foreground Dice: [0.7799]
2022-07-09 04:17:51.841348: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:17:52.877409: Suus1 maybe_update_lr lr: 0.009186
2022-07-09 04:17:52.899075: saving best epoch checkpoint...
2022-07-09 04:17:52.979437: saving checkpoint...
2022-07-09 04:17:54.671988: done, saving took 1.75 seconds
2022-07-09 04:17:54.687261: This epoch took 79.760459 s

2022-07-09 04:17:54.689515: 
epoch:  45
2022-07-09 04:19:06.751981: train loss : -0.7699
2022-07-09 04:19:13.162125: validation loss: -0.7050
2022-07-09 04:19:13.194395: Average global foreground Dice: [0.7767]
2022-07-09 04:19:13.212871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:19:13.945983: Suus1 maybe_update_lr lr: 0.009168
2022-07-09 04:19:13.966881: saving best epoch checkpoint...
2022-07-09 04:19:14.031721: saving checkpoint...
2022-07-09 04:19:15.741900: done, saving took 1.75 seconds
2022-07-09 04:19:15.756628: This epoch took 81.064966 s

2022-07-09 04:19:15.758901: 
epoch:  46
2022-07-09 04:20:26.248264: train loss : -0.7729
2022-07-09 04:20:31.573647: validation loss: -0.7364
2022-07-09 04:20:31.576735: Average global foreground Dice: [0.7991]
2022-07-09 04:20:31.578897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:20:32.322937: Suus1 maybe_update_lr lr: 0.00915
2022-07-09 04:20:32.334006: saving best epoch checkpoint...
2022-07-09 04:20:32.443345: saving checkpoint...
2022-07-09 04:20:33.991289: done, saving took 1.64 seconds
2022-07-09 04:20:34.007536: This epoch took 78.246378 s

2022-07-09 04:20:34.009760: 
epoch:  47
2022-07-09 04:21:45.051789: train loss : -0.7712
2022-07-09 04:21:50.436640: validation loss: -0.7189
2022-07-09 04:21:50.478567: Average global foreground Dice: [0.7902]
2022-07-09 04:21:50.500868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:21:51.183241: Suus1 maybe_update_lr lr: 0.009132
2022-07-09 04:21:51.185515: saving best epoch checkpoint...
2022-07-09 04:21:51.294672: saving checkpoint...
2022-07-09 04:21:53.109042: done, saving took 1.90 seconds
2022-07-09 04:21:53.122975: This epoch took 79.111011 s

2022-07-09 04:21:53.125080: 
epoch:  48
2022-07-09 04:23:04.228219: train loss : -0.7821
2022-07-09 04:23:10.302237: validation loss: -0.6880
2022-07-09 04:23:10.333718: Average global foreground Dice: [0.7662]
2022-07-09 04:23:10.353489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:23:10.994490: Suus1 maybe_update_lr lr: 0.009114
2022-07-09 04:23:11.016931: This epoch took 77.889734 s

2022-07-09 04:23:11.048173: 
epoch:  49
2022-07-09 04:24:22.690962: train loss : -0.7721
2022-07-09 04:24:29.221474: validation loss: -0.7131
2022-07-09 04:24:29.238816: Average global foreground Dice: [0.7852]
2022-07-09 04:24:29.243919: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:24:29.927091: Suus1 maybe_update_lr lr: 0.009095
2022-07-09 04:24:29.932626: saving scheduled checkpoint file...
2022-07-09 04:24:30.011948: saving checkpoint...
2022-07-09 04:24:31.553695: done, saving took 1.61 seconds
2022-07-09 04:24:31.573066: done
2022-07-09 04:24:31.576193: saving best epoch checkpoint...
2022-07-09 04:24:31.626670: saving checkpoint...
2022-07-09 04:24:33.038222: done, saving took 1.46 seconds
2022-07-09 04:24:33.053598: This epoch took 82.002866 s

2022-07-09 04:24:33.055636: 
epoch:  50
2022-07-09 04:25:42.837862: train loss : -0.7812
2022-07-09 04:25:48.240786: validation loss: -0.7012
2022-07-09 04:25:48.272577: Average global foreground Dice: [0.7812]
2022-07-09 04:25:48.292134: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:25:48.922851: Suus1 maybe_update_lr lr: 0.009077
2022-07-09 04:25:48.948890: saving best epoch checkpoint...
2022-07-09 04:25:49.059766: saving checkpoint...
2022-07-09 04:25:50.772091: done, saving took 1.81 seconds
2022-07-09 04:25:50.808726: This epoch took 77.751044 s

2022-07-09 04:25:50.834052: 
epoch:  51
2022-07-09 04:27:02.227071: train loss : -0.7594
2022-07-09 04:27:08.179585: validation loss: -0.6939
2022-07-09 04:27:08.217514: Average global foreground Dice: [0.7723]
2022-07-09 04:27:08.226516: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:27:08.989537: Suus1 maybe_update_lr lr: 0.009059
2022-07-09 04:27:09.010912: saving best epoch checkpoint...
2022-07-09 04:27:09.095938: saving checkpoint...
2022-07-09 04:27:10.637198: done, saving took 1.60 seconds
2022-07-09 04:27:10.654026: This epoch took 79.799875 s

2022-07-09 04:27:10.656343: 
epoch:  52
2022-07-09 04:28:22.641199: train loss : -0.7597
2022-07-09 04:28:28.500427: validation loss: -0.6556
2022-07-09 04:28:28.541633: Average global foreground Dice: [0.7538]
2022-07-09 04:28:28.550024: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:28:29.366493: Suus1 maybe_update_lr lr: 0.009041
2022-07-09 04:28:29.387910: This epoch took 78.729295 s

2022-07-09 04:28:29.429974: 
epoch:  53
2022-07-09 04:29:40.834163: train loss : -0.7734
2022-07-09 04:29:46.581586: validation loss: -0.6977
2022-07-09 04:29:46.606592: Average global foreground Dice: [0.7697]
2022-07-09 04:29:46.628006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:29:47.315650: Suus1 maybe_update_lr lr: 0.009023
2022-07-09 04:29:47.341892: This epoch took 77.889995 s

2022-07-09 04:29:47.349626: 
epoch:  54
2022-07-09 04:30:59.968190: train loss : -0.7780
2022-07-09 04:31:06.289651: validation loss: -0.7046
2022-07-09 04:31:06.329221: Average global foreground Dice: [0.7859]
2022-07-09 04:31:06.356094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:31:07.228285: Suus1 maybe_update_lr lr: 0.009004
2022-07-09 04:31:07.249891: This epoch took 79.893304 s

2022-07-09 04:31:07.271858: 
epoch:  55
2022-07-09 04:32:18.235062: train loss : -0.7719
2022-07-09 04:32:24.702610: validation loss: -0.6953
2022-07-09 04:32:24.726899: Average global foreground Dice: [0.7734]
2022-07-09 04:32:24.745386: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:32:25.404679: Suus1 maybe_update_lr lr: 0.008986
2022-07-09 04:32:25.426903: This epoch took 78.133034 s

2022-07-09 04:32:25.468561: 
epoch:  56
2022-07-09 04:33:38.026347: train loss : -0.7790
2022-07-09 04:33:43.991559: validation loss: -0.7210
2022-07-09 04:33:44.004990: Average global foreground Dice: [0.789]
2022-07-09 04:33:44.019583: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:33:44.784040: Suus1 maybe_update_lr lr: 0.008968
2022-07-09 04:33:44.814104: saving best epoch checkpoint...
2022-07-09 04:33:44.882993: saving checkpoint...
2022-07-09 04:33:46.818364: done, saving took 2.00 seconds
2022-07-09 04:33:46.832695: This epoch took 81.357040 s

2022-07-09 04:33:46.834791: 
epoch:  57
2022-07-09 04:34:59.110111: train loss : -0.7802
2022-07-09 04:35:04.511035: validation loss: -0.7211
2022-07-09 04:35:04.538020: Average global foreground Dice: [0.7952]
2022-07-09 04:35:04.555886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:35:05.119877: Suus1 maybe_update_lr lr: 0.00895
2022-07-09 04:35:05.151038: saving best epoch checkpoint...
2022-07-09 04:35:05.267016: saving checkpoint...
2022-07-09 04:35:06.954799: done, saving took 1.78 seconds
2022-07-09 04:35:06.968720: This epoch took 80.131935 s

2022-07-09 04:35:06.970989: 
epoch:  58
2022-07-09 04:36:18.709034: train loss : -0.7824
2022-07-09 04:36:24.543383: validation loss: -0.7237
2022-07-09 04:36:24.574406: Average global foreground Dice: [0.7937]
2022-07-09 04:36:24.594119: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:36:25.155387: Suus1 maybe_update_lr lr: 0.008931
2022-07-09 04:36:25.187882: saving best epoch checkpoint...
2022-07-09 04:36:25.276670: saving checkpoint...
2022-07-09 04:36:27.024906: done, saving took 1.81 seconds
2022-07-09 04:36:27.066624: This epoch took 80.093600 s

2022-07-09 04:36:27.087848: 
epoch:  59
2022-07-09 04:37:37.337386: train loss : -0.7767
2022-07-09 04:37:43.400654: validation loss: -0.7059
2022-07-09 04:37:43.414530: Average global foreground Dice: [0.7768]
2022-07-09 04:37:43.443080: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:37:44.281232: Suus1 maybe_update_lr lr: 0.008913
2022-07-09 04:37:44.309359: This epoch took 77.202398 s

2022-07-09 04:37:44.327218: 
epoch:  60
2022-07-09 04:38:57.084226: train loss : -0.7739
2022-07-09 04:39:02.595028: validation loss: -0.7130
2022-07-09 04:39:02.661268: Average global foreground Dice: [0.7775]
2022-07-09 04:39:02.672581: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:39:03.615152: Suus1 maybe_update_lr lr: 0.008895
2022-07-09 04:39:03.635223: This epoch took 79.277360 s

2022-07-09 04:39:03.659955: 
epoch:  61
2022-07-09 04:40:15.980425: train loss : -0.7915
2022-07-09 04:40:21.677931: validation loss: -0.7162
2022-07-09 04:40:21.714284: Average global foreground Dice: [0.7992]
2022-07-09 04:40:21.740102: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:40:22.221575: Suus1 maybe_update_lr lr: 0.008877
2022-07-09 04:40:22.224225: saving best epoch checkpoint...
2022-07-09 04:40:22.302220: saving checkpoint...
2022-07-09 04:40:23.881072: done, saving took 1.65 seconds
2022-07-09 04:40:23.918208: This epoch took 80.243647 s

2022-07-09 04:40:23.926109: 
epoch:  62
2022-07-09 04:41:34.676527: train loss : -0.7903
2022-07-09 04:41:40.060435: validation loss: -0.7336
2022-07-09 04:41:40.089285: Average global foreground Dice: [0.8019]
2022-07-09 04:41:40.121874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:41:40.980918: Suus1 maybe_update_lr lr: 0.008859
2022-07-09 04:41:41.012907: saving best epoch checkpoint...
2022-07-09 04:41:41.136467: saving checkpoint...
2022-07-09 04:41:42.914052: done, saving took 1.88 seconds
2022-07-09 04:41:42.959102: This epoch took 79.021807 s

2022-07-09 04:41:42.961365: 
epoch:  63
2022-07-09 04:42:53.676216: train loss : -0.7829
2022-07-09 04:42:59.189234: validation loss: -0.7273
2022-07-09 04:42:59.223160: Average global foreground Dice: [0.7955]
2022-07-09 04:42:59.255878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:43:00.038455: Suus1 maybe_update_lr lr: 0.00884
2022-07-09 04:43:00.059892: saving best epoch checkpoint...
2022-07-09 04:43:00.198678: saving checkpoint...
2022-07-09 04:43:01.746152: done, saving took 1.66 seconds
2022-07-09 04:43:01.815849: This epoch took 78.852342 s

2022-07-09 04:43:01.830030: 
epoch:  64
2022-07-09 04:44:12.666252: train loss : -0.7885
2022-07-09 04:44:18.196728: validation loss: -0.7304
2022-07-09 04:44:18.228266: Average global foreground Dice: [0.7984]
2022-07-09 04:44:18.240864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:44:19.035526: Suus1 maybe_update_lr lr: 0.008822
2022-07-09 04:44:19.056470: saving best epoch checkpoint...
2022-07-09 04:44:19.158127: saving checkpoint...
2022-07-09 04:44:21.142235: done, saving took 2.06 seconds
2022-07-09 04:44:21.158900: This epoch took 79.295010 s

2022-07-09 04:44:21.161144: 
epoch:  65
2022-07-09 04:45:31.827317: train loss : -0.7947
2022-07-09 04:45:38.211933: validation loss: -0.7411
2022-07-09 04:45:38.253343: Average global foreground Dice: [0.806]
2022-07-09 04:45:38.265887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:45:39.095557: Suus1 maybe_update_lr lr: 0.008804
2022-07-09 04:45:39.125996: saving best epoch checkpoint...
2022-07-09 04:45:39.256733: saving checkpoint...
2022-07-09 04:45:40.993963: done, saving took 1.85 seconds
2022-07-09 04:45:41.010457: This epoch took 79.847197 s

2022-07-09 04:45:41.012553: 
epoch:  66
2022-07-09 04:46:50.637899: train loss : -0.7888
2022-07-09 04:46:56.984854: validation loss: -0.6878
2022-07-09 04:46:57.005802: Average global foreground Dice: [0.7718]
2022-07-09 04:46:57.027891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:46:57.676943: Suus1 maybe_update_lr lr: 0.008785
2022-07-09 04:46:57.697981: This epoch took 76.683406 s

2022-07-09 04:46:57.720845: 
epoch:  67
2022-07-09 04:48:11.116076: train loss : -0.7785
2022-07-09 04:48:17.049901: validation loss: -0.7237
2022-07-09 04:48:17.085289: Average global foreground Dice: [0.7822]
2022-07-09 04:48:17.117881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:48:17.753264: Suus1 maybe_update_lr lr: 0.008767
2022-07-09 04:48:17.772908: This epoch took 80.031792 s

2022-07-09 04:48:17.792848: 
epoch:  68
2022-07-09 04:49:28.996152: train loss : -0.7959
2022-07-09 04:49:35.548334: validation loss: -0.7153
2022-07-09 04:49:35.583656: Average global foreground Dice: [0.7838]
2022-07-09 04:49:35.603014: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:49:36.541179: Suus1 maybe_update_lr lr: 0.008749
2022-07-09 04:49:36.560902: This epoch took 78.754406 s

2022-07-09 04:49:36.582859: 
epoch:  69
2022-07-09 04:50:49.509691: train loss : -0.7938
2022-07-09 04:50:55.948284: validation loss: -0.7462
2022-07-09 04:50:55.985759: Average global foreground Dice: [0.8138]
2022-07-09 04:50:56.013882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:50:56.635477: Suus1 maybe_update_lr lr: 0.008731
2022-07-09 04:50:56.655666: saving best epoch checkpoint...
2022-07-09 04:50:56.838477: saving checkpoint...
2022-07-09 04:50:58.379643: done, saving took 1.68 seconds
2022-07-09 04:50:58.397811: This epoch took 81.792958 s

2022-07-09 04:50:58.399983: 
epoch:  70
2022-07-09 04:52:08.991337: train loss : -0.7955
2022-07-09 04:52:15.061575: validation loss: -0.7311
2022-07-09 04:52:15.096198: Average global foreground Dice: [0.8028]
2022-07-09 04:52:15.112868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:52:15.765975: Suus1 maybe_update_lr lr: 0.008712
2022-07-09 04:52:15.786909: saving best epoch checkpoint...
2022-07-09 04:52:15.948026: saving checkpoint...
2022-07-09 04:52:17.485996: done, saving took 1.67 seconds
2022-07-09 04:52:17.504711: This epoch took 79.102636 s

2022-07-09 04:52:17.507141: 
epoch:  71
2022-07-09 04:53:29.105076: train loss : -0.7992
2022-07-09 04:53:34.812848: validation loss: -0.7142
2022-07-09 04:53:34.843297: Average global foreground Dice: [0.7847]
2022-07-09 04:53:34.862870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:53:35.594097: Suus1 maybe_update_lr lr: 0.008694
2022-07-09 04:53:35.614910: This epoch took 78.105564 s

2022-07-09 04:53:35.639880: 
epoch:  72
2022-07-09 04:54:47.392141: train loss : -0.7864
2022-07-09 04:54:52.910820: validation loss: -0.7246
2022-07-09 04:54:52.925879: Average global foreground Dice: [0.7846]
2022-07-09 04:54:52.935980: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:54:53.812287: Suus1 maybe_update_lr lr: 0.008676
2022-07-09 04:54:53.833912: This epoch took 78.163119 s

2022-07-09 04:54:53.853664: 
epoch:  73
2022-07-09 04:56:06.063691: train loss : -0.7845
2022-07-09 04:56:11.170820: validation loss: -0.7132
2022-07-09 04:56:11.202896: Average global foreground Dice: [0.78]
2022-07-09 04:56:11.232893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:56:11.814648: Suus1 maybe_update_lr lr: 0.008658
2022-07-09 04:56:11.823421: This epoch took 77.954553 s

2022-07-09 04:56:11.833597: 
epoch:  74
2022-07-09 04:57:25.582214: train loss : -0.7940
2022-07-09 04:57:31.566471: validation loss: -0.7200
2022-07-09 04:57:31.591280: Average global foreground Dice: [0.788]
2022-07-09 04:57:31.602190: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:57:32.409353: Suus1 maybe_update_lr lr: 0.008639
2022-07-09 04:57:32.441912: This epoch took 80.581804 s

2022-07-09 04:57:32.463850: 
epoch:  75
2022-07-09 04:58:43.320925: train loss : -0.7925
2022-07-09 04:58:48.919034: validation loss: -0.7183
2022-07-09 04:58:48.947993: Average global foreground Dice: [0.7867]
2022-07-09 04:58:48.966881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 04:58:49.574231: Suus1 maybe_update_lr lr: 0.008621
2022-07-09 04:58:49.606915: This epoch took 77.121047 s

2022-07-09 04:58:49.638338: 
epoch:  76
2022-07-09 05:00:01.077848: train loss : -0.7965
2022-07-09 05:00:07.205963: validation loss: -0.7065
2022-07-09 05:00:07.227371: Average global foreground Dice: [0.7854]
2022-07-09 05:00:07.240857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:00:07.987541: Suus1 maybe_update_lr lr: 0.008603
2022-07-09 05:00:08.008956: This epoch took 78.350385 s

2022-07-09 05:00:08.030846: 
epoch:  77
2022-07-09 05:01:19.787393: train loss : -0.7879
2022-07-09 05:01:26.095878: validation loss: -0.6766
2022-07-09 05:01:26.138353: Average global foreground Dice: [0.7663]
2022-07-09 05:01:26.170888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:01:26.907314: Suus1 maybe_update_lr lr: 0.008584
2022-07-09 05:01:26.928202: This epoch took 78.881336 s

2022-07-09 05:01:26.946531: 
epoch:  78
2022-07-09 05:02:37.744187: train loss : -0.8003
2022-07-09 05:02:42.745446: validation loss: -0.7199
2022-07-09 05:02:42.785548: Average global foreground Dice: [0.7922]
2022-07-09 05:02:42.797592: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:02:43.574583: Suus1 maybe_update_lr lr: 0.008566
2022-07-09 05:02:43.606915: This epoch took 76.658114 s

2022-07-09 05:02:43.624866: 
epoch:  79
2022-07-09 05:03:57.037042: train loss : -0.8045
2022-07-09 05:04:02.271918: validation loss: -0.7252
2022-07-09 05:04:02.305301: Average global foreground Dice: [0.7972]
2022-07-09 05:04:02.327869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:04:03.010568: Suus1 maybe_update_lr lr: 0.008548
2022-07-09 05:04:03.031911: This epoch took 79.387896 s

2022-07-09 05:04:03.052175: 
epoch:  80
2022-07-09 05:05:14.536439: train loss : -0.8026
2022-07-09 05:05:20.188739: validation loss: -0.7273
2022-07-09 05:05:20.227306: Average global foreground Dice: [0.7947]
2022-07-09 05:05:20.250883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:05:21.064300: Suus1 maybe_update_lr lr: 0.008529
2022-07-09 05:05:21.085908: This epoch took 78.013636 s

2022-07-09 05:05:21.110873: 
epoch:  81
2022-07-09 05:06:32.988727: train loss : -0.7974
2022-07-09 05:06:38.926490: validation loss: -0.7373
2022-07-09 05:06:38.940250: Average global foreground Dice: [0.8089]
2022-07-09 05:06:38.958037: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:06:39.839448: Suus1 maybe_update_lr lr: 0.008511
2022-07-09 05:06:39.872112: saving best epoch checkpoint...
2022-07-09 05:06:40.060010: saving checkpoint...
2022-07-09 05:06:41.921562: done, saving took 2.03 seconds
2022-07-09 05:06:41.936033: This epoch took 80.801218 s

2022-07-09 05:06:41.938448: 
epoch:  82
2022-07-09 05:07:52.755242: train loss : -0.7972
2022-07-09 05:07:58.249157: validation loss: -0.7216
2022-07-09 05:07:58.262162: Average global foreground Dice: [0.795]
2022-07-09 05:07:58.282863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:07:58.821864: Suus1 maybe_update_lr lr: 0.008493
2022-07-09 05:07:58.864571: saving best epoch checkpoint...
2022-07-09 05:07:59.068178: saving checkpoint...
2022-07-09 05:08:01.018468: done, saving took 2.14 seconds
2022-07-09 05:08:01.037862: This epoch took 79.097214 s

2022-07-09 05:08:01.040235: 
epoch:  83
2022-07-09 05:09:14.015000: train loss : -0.8030
2022-07-09 05:09:19.851982: validation loss: -0.7100
2022-07-09 05:09:19.877734: Average global foreground Dice: [0.7772]
2022-07-09 05:09:19.891865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:09:20.589274: Suus1 maybe_update_lr lr: 0.008474
2022-07-09 05:09:20.620887: This epoch took 79.578367 s

2022-07-09 05:09:20.636598: 
epoch:  84
2022-07-09 05:10:34.578649: train loss : -0.8111
2022-07-09 05:10:40.000959: validation loss: -0.7530
2022-07-09 05:10:40.040287: Average global foreground Dice: [0.8073]
2022-07-09 05:10:40.072910: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:10:40.986324: Suus1 maybe_update_lr lr: 0.008456
2022-07-09 05:10:41.026709: saving best epoch checkpoint...
2022-07-09 05:10:41.170926: saving checkpoint...
2022-07-09 05:10:42.783931: done, saving took 1.74 seconds
2022-07-09 05:10:42.801898: This epoch took 82.147877 s

2022-07-09 05:10:42.803936: 
epoch:  85
2022-07-09 05:11:53.117487: train loss : -0.8120
2022-07-09 05:11:59.787108: validation loss: -0.7380
2022-07-09 05:11:59.825235: Average global foreground Dice: [0.8015]
2022-07-09 05:11:59.838899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:12:00.754546: Suus1 maybe_update_lr lr: 0.008438
2022-07-09 05:12:00.786906: saving best epoch checkpoint...
2022-07-09 05:12:00.933534: saving checkpoint...
2022-07-09 05:12:02.610453: done, saving took 1.80 seconds
2022-07-09 05:12:02.628056: This epoch took 79.822011 s

2022-07-09 05:12:02.630272: 
epoch:  86
2022-07-09 05:13:12.623636: train loss : -0.8072
2022-07-09 05:13:17.788686: validation loss: -0.7175
2022-07-09 05:13:17.810153: Average global foreground Dice: [0.7971]
2022-07-09 05:13:17.812624: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:13:18.492666: Suus1 maybe_update_lr lr: 0.008419
2022-07-09 05:13:18.513986: saving best epoch checkpoint...
2022-07-09 05:13:18.647754: saving checkpoint...
2022-07-09 05:13:20.343645: done, saving took 1.79 seconds
2022-07-09 05:13:20.361028: This epoch took 77.728511 s

2022-07-09 05:13:20.363296: 
epoch:  87
2022-07-09 05:14:32.918051: train loss : -0.7972
2022-07-09 05:14:37.899768: validation loss: -0.7265
2022-07-09 05:14:37.931269: Average global foreground Dice: [0.7947]
2022-07-09 05:14:37.952770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:14:38.632855: Suus1 maybe_update_lr lr: 0.008401
2022-07-09 05:14:38.654041: saving best epoch checkpoint...
2022-07-09 05:14:38.786831: saving checkpoint...
2022-07-09 05:14:40.452935: done, saving took 1.78 seconds
2022-07-09 05:14:40.500585: This epoch took 80.135056 s

2022-07-09 05:14:40.543854: 
epoch:  88
2022-07-09 05:15:50.429614: train loss : -0.8057
2022-07-09 05:15:55.906959: validation loss: -0.7456
2022-07-09 05:15:55.936370: Average global foreground Dice: [0.8106]
2022-07-09 05:15:55.957873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:15:56.640534: Suus1 maybe_update_lr lr: 0.008383
2022-07-09 05:15:56.663885: saving best epoch checkpoint...
2022-07-09 05:15:56.759260: saving checkpoint...
2022-07-09 05:15:58.482276: done, saving took 1.80 seconds
2022-07-09 05:15:58.498564: This epoch took 77.934442 s

2022-07-09 05:15:58.500710: 
epoch:  89
2022-07-09 05:17:09.225471: train loss : -0.8094
2022-07-09 05:17:14.963269: validation loss: -0.7135
2022-07-09 05:17:14.988760: Average global foreground Dice: [0.7919]
2022-07-09 05:17:14.992768: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:17:15.694867: Suus1 maybe_update_lr lr: 0.008364
2022-07-09 05:17:15.698349: This epoch took 77.195275 s

2022-07-09 05:17:15.726043: 
epoch:  90
2022-07-09 05:18:29.894035: train loss : -0.8037
2022-07-09 05:18:35.464369: validation loss: -0.7309
2022-07-09 05:18:35.503381: Average global foreground Dice: [0.7981]
2022-07-09 05:18:35.524882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:18:36.369241: Suus1 maybe_update_lr lr: 0.008346
2022-07-09 05:18:36.402895: saving best epoch checkpoint...
2022-07-09 05:18:36.494315: saving checkpoint...
2022-07-09 05:18:38.806119: done, saving took 2.40 seconds
2022-07-09 05:18:38.823642: This epoch took 83.073611 s

2022-07-09 05:18:38.826050: 
epoch:  91
2022-07-09 05:19:52.589803: train loss : -0.8066
2022-07-09 05:19:57.985177: validation loss: -0.7420
2022-07-09 05:19:57.996396: Average global foreground Dice: [0.8106]
2022-07-09 05:19:57.998743: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:19:58.623975: Suus1 maybe_update_lr lr: 0.008328
2022-07-09 05:19:58.626551: saving best epoch checkpoint...
2022-07-09 05:19:58.713943: saving checkpoint...
2022-07-09 05:20:00.460427: done, saving took 1.82 seconds
2022-07-09 05:20:00.476233: This epoch took 81.647946 s

2022-07-09 05:20:00.478424: 
epoch:  92
2022-07-09 05:21:11.632923: train loss : -0.8083
2022-07-09 05:21:18.493118: validation loss: -0.7518
2022-07-09 05:21:18.523295: Average global foreground Dice: [0.8185]
2022-07-09 05:21:18.543567: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:21:19.374697: Suus1 maybe_update_lr lr: 0.008309
2022-07-09 05:21:19.395895: saving best epoch checkpoint...
2022-07-09 05:21:19.474949: saving checkpoint...
2022-07-09 05:21:20.917678: done, saving took 1.50 seconds
2022-07-09 05:21:20.933003: This epoch took 80.452481 s

2022-07-09 05:21:20.935340: 
epoch:  93
2022-07-09 05:22:31.700925: train loss : -0.8126
2022-07-09 05:22:37.690182: validation loss: -0.7344
2022-07-09 05:22:37.721449: Average global foreground Dice: [0.7977]
2022-07-09 05:22:37.741131: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:22:38.374440: Suus1 maybe_update_lr lr: 0.008291
2022-07-09 05:22:38.389611: This epoch took 77.450873 s

2022-07-09 05:22:38.414866: 
epoch:  94
2022-07-09 05:23:51.166111: train loss : -0.8152
2022-07-09 05:23:57.380034: validation loss: -0.7266
2022-07-09 05:23:57.419355: Average global foreground Dice: [0.7971]
2022-07-09 05:23:57.446223: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:23:58.126946: Suus1 maybe_update_lr lr: 0.008272
2022-07-09 05:23:58.156929: This epoch took 79.723707 s

2022-07-09 05:23:58.167923: 
epoch:  95
2022-07-09 05:25:11.024608: train loss : -0.8113
2022-07-09 05:25:16.591929: validation loss: -0.7273
2022-07-09 05:25:16.616364: Average global foreground Dice: [0.7943]
2022-07-09 05:25:16.650265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:25:17.462437: Suus1 maybe_update_lr lr: 0.008254
2022-07-09 05:25:17.502888: This epoch took 79.312036 s

2022-07-09 05:25:17.524858: 
epoch:  96
2022-07-09 05:26:29.512825: train loss : -0.8100
2022-07-09 05:26:34.879606: validation loss: -0.7332
2022-07-09 05:26:34.912221: Average global foreground Dice: [0.8108]
2022-07-09 05:26:34.916466: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:26:35.682247: Suus1 maybe_update_lr lr: 0.008236
2022-07-09 05:26:35.707141: saving best epoch checkpoint...
2022-07-09 05:26:35.786700: saving checkpoint...
2022-07-09 05:26:37.331033: done, saving took 1.60 seconds
2022-07-09 05:26:37.405877: This epoch took 79.870672 s

2022-07-09 05:26:37.427855: 
epoch:  97
2022-07-09 05:27:47.906098: train loss : -0.8108
2022-07-09 05:27:53.268353: validation loss: -0.7118
2022-07-09 05:27:53.303226: Average global foreground Dice: [0.7856]
2022-07-09 05:27:53.335861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:27:54.055018: Suus1 maybe_update_lr lr: 0.008217
2022-07-09 05:27:54.075918: This epoch took 76.626042 s

2022-07-09 05:27:54.098004: 
epoch:  98
2022-07-09 05:29:05.140047: train loss : -0.8097
2022-07-09 05:29:11.288065: validation loss: -0.7457
2022-07-09 05:29:11.326312: Average global foreground Dice: [0.8138]
2022-07-09 05:29:11.349875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:29:12.074274: Suus1 maybe_update_lr lr: 0.008199
2022-07-09 05:29:12.091989: saving best epoch checkpoint...
2022-07-09 05:29:12.170709: saving checkpoint...
2022-07-09 05:29:13.949871: done, saving took 1.84 seconds
2022-07-09 05:29:13.968188: This epoch took 79.841321 s

2022-07-09 05:29:13.970515: 
epoch:  99
2022-07-09 05:30:23.686327: train loss : -0.8117
2022-07-09 05:30:29.129569: validation loss: -0.7310
2022-07-09 05:30:29.141644: Average global foreground Dice: [0.8046]
2022-07-09 05:30:29.151848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:30:29.929085: Suus1 maybe_update_lr lr: 0.008181
2022-07-09 05:30:29.949900: saving scheduled checkpoint file...
2022-07-09 05:30:30.095997: saving checkpoint...
2022-07-09 05:30:31.796770: done, saving took 1.82 seconds
2022-07-09 05:30:31.814375: done
2022-07-09 05:30:31.816602: saving best epoch checkpoint...
2022-07-09 05:30:31.877376: saving checkpoint...
2022-07-09 05:30:33.280091: done, saving took 1.46 seconds
2022-07-09 05:30:33.295139: This epoch took 79.322533 s

2022-07-09 05:30:33.297563: 
epoch:  100
2022-07-09 05:31:44.469069: train loss : -0.8068
2022-07-09 05:31:50.154527: validation loss: -0.6872
2022-07-09 05:31:50.189290: Average global foreground Dice: [0.763]
2022-07-09 05:31:50.201649: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:31:50.988297: Suus1 maybe_update_lr lr: 0.008162
2022-07-09 05:31:51.008906: This epoch took 77.708933 s

2022-07-09 05:31:51.032988: 
epoch:  101
2022-07-09 05:33:02.377282: train loss : -0.8066
2022-07-09 05:33:08.446482: validation loss: -0.7164
2022-07-09 05:33:08.472279: Average global foreground Dice: [0.7884]
2022-07-09 05:33:08.491896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:33:09.216052: Suus1 maybe_update_lr lr: 0.008144
2022-07-09 05:33:09.232917: This epoch took 78.184058 s

2022-07-09 05:33:09.251711: 
epoch:  102
2022-07-09 05:34:21.528113: train loss : -0.8125
2022-07-09 05:34:27.778719: validation loss: -0.7196
2022-07-09 05:34:27.814646: Average global foreground Dice: [0.7869]
2022-07-09 05:34:27.831332: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:34:28.544338: Suus1 maybe_update_lr lr: 0.008125
2022-07-09 05:34:28.574922: This epoch took 79.305996 s

2022-07-09 05:34:28.587499: 
epoch:  103
2022-07-09 05:35:41.648831: train loss : -0.8043
2022-07-09 05:35:48.161280: validation loss: -0.7357
2022-07-09 05:35:48.195299: Average global foreground Dice: [0.7994]
2022-07-09 05:35:48.215019: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:35:48.863660: Suus1 maybe_update_lr lr: 0.008107
2022-07-09 05:35:48.900786: This epoch took 80.290235 s

2022-07-09 05:35:48.925320: 
epoch:  104
2022-07-09 05:37:00.974026: train loss : -0.8013
2022-07-09 05:37:07.683744: validation loss: -0.7498
2022-07-09 05:37:07.722337: Average global foreground Dice: [0.8135]
2022-07-09 05:37:07.736892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:37:08.355278: Suus1 maybe_update_lr lr: 0.008088
2022-07-09 05:37:08.376923: This epoch took 79.428890 s

2022-07-09 05:37:08.399865: 
epoch:  105
2022-07-09 05:38:20.020089: train loss : -0.8130
2022-07-09 05:38:25.981064: validation loss: -0.7491
2022-07-09 05:38:26.007493: Average global foreground Dice: [0.8127]
2022-07-09 05:38:26.021889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:38:26.706288: Suus1 maybe_update_lr lr: 0.00807
2022-07-09 05:38:26.727930: This epoch took 78.306058 s

2022-07-09 05:38:26.747979: 
epoch:  106
2022-07-09 05:39:40.554305: train loss : -0.8119
2022-07-09 05:39:46.660083: validation loss: -0.7112
2022-07-09 05:39:46.680818: Average global foreground Dice: [0.7909]
2022-07-09 05:39:46.695516: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:39:47.672853: Suus1 maybe_update_lr lr: 0.008052
2022-07-09 05:39:47.686721: This epoch took 80.925843 s

2022-07-09 05:39:47.717587: 
epoch:  107
2022-07-09 05:40:58.351881: train loss : -0.8197
2022-07-09 05:41:04.576210: validation loss: -0.7157
2022-07-09 05:41:04.608272: Average global foreground Dice: [0.7914]
2022-07-09 05:41:04.620952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:41:05.486804: Suus1 maybe_update_lr lr: 0.008033
2022-07-09 05:41:05.522916: This epoch took 77.788602 s

2022-07-09 05:41:05.530643: 
epoch:  108
2022-07-09 05:42:18.551390: train loss : -0.8181
2022-07-09 05:42:24.504171: validation loss: -0.7630
2022-07-09 05:42:24.535303: Average global foreground Dice: [0.8196]
2022-07-09 05:42:24.547878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:42:25.163088: Suus1 maybe_update_lr lr: 0.008015
2022-07-09 05:42:25.183921: This epoch took 79.620062 s

2022-07-09 05:42:25.205849: 
epoch:  109
2022-07-09 05:43:36.757281: train loss : -0.8198
2022-07-09 05:43:42.230982: validation loss: -0.7504
2022-07-09 05:43:42.241788: Average global foreground Dice: [0.8147]
2022-07-09 05:43:42.249812: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:43:42.965551: Suus1 maybe_update_lr lr: 0.007996
2022-07-09 05:43:42.994218: saving best epoch checkpoint...
2022-07-09 05:43:43.096232: saving checkpoint...
2022-07-09 05:43:44.770344: done, saving took 1.74 seconds
2022-07-09 05:43:44.787231: This epoch took 79.555362 s

2022-07-09 05:43:44.789287: 
epoch:  110
2022-07-09 05:44:56.364331: train loss : -0.8259
2022-07-09 05:45:02.215845: validation loss: -0.7252
2022-07-09 05:45:02.246283: Average global foreground Dice: [0.7949]
2022-07-09 05:45:02.273174: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:45:02.951697: Suus1 maybe_update_lr lr: 0.007978
2022-07-09 05:45:02.972906: This epoch took 78.181632 s

2022-07-09 05:45:02.993177: 
epoch:  111
2022-07-09 05:46:15.456221: train loss : -0.8232
2022-07-09 05:46:21.081023: validation loss: -0.7428
2022-07-09 05:46:21.135418: Average global foreground Dice: [0.8094]
2022-07-09 05:46:21.164111: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:46:22.053281: Suus1 maybe_update_lr lr: 0.007959
2022-07-09 05:46:22.080137: saving best epoch checkpoint...
2022-07-09 05:46:22.236093: saving checkpoint...
2022-07-09 05:46:23.790154: done, saving took 1.68 seconds
2022-07-09 05:46:23.856873: This epoch took 80.837891 s

2022-07-09 05:46:23.867855: 
epoch:  112
2022-07-09 05:47:36.594572: train loss : -0.8198
2022-07-09 05:47:42.787247: validation loss: -0.7447
2022-07-09 05:47:42.820363: Average global foreground Dice: [0.8007]
2022-07-09 05:47:42.840021: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:47:43.552572: Suus1 maybe_update_lr lr: 0.007941
2022-07-09 05:47:43.573923: This epoch took 79.703611 s

2022-07-09 05:47:43.592097: 
epoch:  113
2022-07-09 05:48:55.392410: train loss : -0.8247
2022-07-09 05:49:01.900196: validation loss: -0.7377
2022-07-09 05:49:01.935371: Average global foreground Dice: [0.8029]
2022-07-09 05:49:01.962881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:49:02.490341: Suus1 maybe_update_lr lr: 0.007922
2022-07-09 05:49:02.505883: saving best epoch checkpoint...
2022-07-09 05:49:02.659219: saving checkpoint...
2022-07-09 05:49:04.492403: done, saving took 1.96 seconds
2022-07-09 05:49:04.509434: This epoch took 80.888549 s

2022-07-09 05:49:04.511532: 
epoch:  114
2022-07-09 05:50:15.237960: train loss : -0.8199
2022-07-09 05:50:21.556199: validation loss: -0.7309
2022-07-09 05:50:21.595125: Average global foreground Dice: [0.809]
2022-07-09 05:50:21.622144: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:50:22.712713: Suus1 maybe_update_lr lr: 0.007904
2022-07-09 05:50:22.728894: saving best epoch checkpoint...
2022-07-09 05:50:22.814041: saving checkpoint...
2022-07-09 05:50:24.505772: done, saving took 1.75 seconds
2022-07-09 05:50:24.519946: This epoch took 80.006467 s

2022-07-09 05:50:24.521830: 
epoch:  115
2022-07-09 05:51:35.805711: train loss : -0.8291
2022-07-09 05:51:41.726052: validation loss: -0.7674
2022-07-09 05:51:41.749181: Average global foreground Dice: [0.8299]
2022-07-09 05:51:41.769458: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:51:42.571291: Suus1 maybe_update_lr lr: 0.007885
2022-07-09 05:51:42.591882: saving best epoch checkpoint...
2022-07-09 05:51:42.685397: saving checkpoint...
2022-07-09 05:51:44.180097: done, saving took 1.56 seconds
2022-07-09 05:51:44.217543: This epoch took 79.693922 s

2022-07-09 05:51:44.220371: 
epoch:  116
2022-07-09 05:52:55.903764: train loss : -0.8238
2022-07-09 05:53:01.579677: validation loss: -0.7535
2022-07-09 05:53:01.599325: Average global foreground Dice: [0.8114]
2022-07-09 05:53:01.620893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:53:02.310225: Suus1 maybe_update_lr lr: 0.007867
2022-07-09 05:53:02.312489: saving best epoch checkpoint...
2022-07-09 05:53:02.359852: saving checkpoint...
2022-07-09 05:53:03.984937: done, saving took 1.67 seconds
2022-07-09 05:53:04.045027: This epoch took 79.802691 s

2022-07-09 05:53:04.059850: 
epoch:  117
2022-07-09 05:54:15.171980: train loss : -0.8276
2022-07-09 05:54:21.121511: validation loss: -0.7404
2022-07-09 05:54:21.146309: Average global foreground Dice: [0.8015]
2022-07-09 05:54:21.166591: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:54:21.982862: Suus1 maybe_update_lr lr: 0.007848
2022-07-09 05:54:22.003933: This epoch took 77.926316 s

2022-07-09 05:54:22.020972: 
epoch:  118
2022-07-09 05:55:34.785591: train loss : -0.8288
2022-07-09 05:55:40.808037: validation loss: -0.7361
2022-07-09 05:55:40.852354: Average global foreground Dice: [0.8053]
2022-07-09 05:55:40.884866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:55:41.495504: Suus1 maybe_update_lr lr: 0.00783
2022-07-09 05:55:41.516267: This epoch took 79.468360 s

2022-07-09 05:55:41.521909: 
epoch:  119
2022-07-09 05:56:53.691974: train loss : -0.8294
2022-07-09 05:56:59.325240: validation loss: -0.7240
2022-07-09 05:56:59.350566: Average global foreground Dice: [0.7941]
2022-07-09 05:56:59.372092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:57:00.142320: Suus1 maybe_update_lr lr: 0.007811
2022-07-09 05:57:00.163907: This epoch took 78.618659 s

2022-07-09 05:57:00.185859: 
epoch:  120
2022-07-09 05:58:11.086049: train loss : -0.8330
2022-07-09 05:58:16.436347: validation loss: -0.7237
2022-07-09 05:58:16.467513: Average global foreground Dice: [0.8086]
2022-07-09 05:58:16.487317: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:58:17.116907: Suus1 maybe_update_lr lr: 0.007793
2022-07-09 05:58:17.137291: This epoch took 76.934472 s

2022-07-09 05:58:17.148066: 
epoch:  121
2022-07-09 05:59:27.967734: train loss : -0.8350
2022-07-09 05:59:33.839096: validation loss: -0.7286
2022-07-09 05:59:33.877283: Average global foreground Dice: [0.7989]
2022-07-09 05:59:33.886874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 05:59:34.540291: Suus1 maybe_update_lr lr: 0.007774
2022-07-09 05:59:34.563560: This epoch took 77.402959 s

2022-07-09 05:59:34.583779: 
epoch:  122
2022-07-09 06:00:46.724147: train loss : -0.8349
2022-07-09 06:00:53.165025: validation loss: -0.7285
2022-07-09 06:00:53.196668: Average global foreground Dice: [0.7985]
2022-07-09 06:00:53.204419: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:00:54.116511: Suus1 maybe_update_lr lr: 0.007756
2022-07-09 06:00:54.137911: This epoch took 79.538505 s

2022-07-09 06:00:54.160845: 
epoch:  123
2022-07-09 06:02:04.993760: train loss : -0.8336
2022-07-09 06:02:11.086127: validation loss: -0.7176
2022-07-09 06:02:11.117359: Average global foreground Dice: [0.7881]
2022-07-09 06:02:11.135865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:02:11.659417: Suus1 maybe_update_lr lr: 0.007737
2022-07-09 06:02:11.684919: This epoch took 77.497043 s

2022-07-09 06:02:11.706866: 
epoch:  124
2022-07-09 06:03:24.135901: train loss : -0.8348
2022-07-09 06:03:29.446867: validation loss: -0.7247
2022-07-09 06:03:29.478262: Average global foreground Dice: [0.7973]
2022-07-09 06:03:29.493870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:03:30.240368: Suus1 maybe_update_lr lr: 0.007719
2022-07-09 06:03:30.261936: This epoch took 78.533070 s

2022-07-09 06:03:30.281981: 
epoch:  125
2022-07-09 06:04:42.330213: train loss : -0.8328
2022-07-09 06:04:48.076322: validation loss: -0.7070
2022-07-09 06:04:48.092753: Average global foreground Dice: [0.779]
2022-07-09 06:04:48.095241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:04:48.764516: Suus1 maybe_update_lr lr: 0.0077
2022-07-09 06:04:48.793215: This epoch took 78.497361 s

2022-07-09 06:04:48.797777: 
epoch:  126
2022-07-09 06:06:02.331003: train loss : -0.8358
2022-07-09 06:06:08.268303: validation loss: -0.7269
2022-07-09 06:06:08.307244: Average global foreground Dice: [0.7957]
2022-07-09 06:06:08.319872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:06:08.881147: Suus1 maybe_update_lr lr: 0.007682
2022-07-09 06:06:08.902959: This epoch took 80.103065 s

2022-07-09 06:06:08.905263: 
epoch:  127
2022-07-09 06:07:20.274765: train loss : -0.8345
2022-07-09 06:07:25.689224: validation loss: -0.7339
2022-07-09 06:07:25.712769: Average global foreground Dice: [0.7988]
2022-07-09 06:07:25.744979: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:07:26.452371: Suus1 maybe_update_lr lr: 0.007663
2022-07-09 06:07:26.473910: This epoch took 77.549043 s

2022-07-09 06:07:26.501633: 
epoch:  128
2022-07-09 06:08:39.748330: train loss : -0.8366
2022-07-09 06:08:45.719097: validation loss: -0.7215
2022-07-09 06:08:45.749230: Average global foreground Dice: [0.7941]
2022-07-09 06:08:45.777867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:08:46.628469: Suus1 maybe_update_lr lr: 0.007645
2022-07-09 06:08:46.644959: This epoch took 80.097091 s

2022-07-09 06:08:46.651128: 
epoch:  129
2022-07-09 06:09:59.332884: train loss : -0.8331
2022-07-09 06:10:05.906687: validation loss: -0.7223
2022-07-09 06:10:05.932506: Average global foreground Dice: [0.7953]
2022-07-09 06:10:05.951870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:10:06.491209: Suus1 maybe_update_lr lr: 0.007626
2022-07-09 06:10:06.513107: This epoch took 79.851845 s

2022-07-09 06:10:06.533209: 
epoch:  130
2022-07-09 06:11:19.287841: train loss : -0.8370
2022-07-09 06:11:25.192849: validation loss: -0.7359
2022-07-09 06:11:25.231366: Average global foreground Dice: [0.8051]
2022-07-09 06:11:25.253859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:11:26.122797: Suus1 maybe_update_lr lr: 0.007608
2022-07-09 06:11:26.145897: This epoch took 79.592487 s

2022-07-09 06:11:26.168061: 
epoch:  131
2022-07-09 06:12:37.140881: train loss : -0.8353
2022-07-09 06:12:43.269710: validation loss: -0.7259
2022-07-09 06:12:43.303280: Average global foreground Dice: [0.798]
2022-07-09 06:12:43.318876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:12:43.949433: Suus1 maybe_update_lr lr: 0.007589
2022-07-09 06:12:43.981911: This epoch took 77.792044 s

2022-07-09 06:12:44.014863: 
epoch:  132
2022-07-09 06:13:56.820341: train loss : -0.8362
2022-07-09 06:14:02.646589: validation loss: -0.7296
2022-07-09 06:14:02.680505: Average global foreground Dice: [0.8057]
2022-07-09 06:14:02.701861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:14:03.572952: Suus1 maybe_update_lr lr: 0.007571
2022-07-09 06:14:03.580824: This epoch took 79.532951 s

2022-07-09 06:14:03.606866: 
epoch:  133
2022-07-09 06:15:15.828247: train loss : -0.8370
2022-07-09 06:15:21.186037: validation loss: -0.7222
2022-07-09 06:15:21.222519: Average global foreground Dice: [0.7799]
2022-07-09 06:15:21.251440: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:15:22.074527: Suus1 maybe_update_lr lr: 0.007552
2022-07-09 06:15:22.091084: This epoch took 78.462218 s

2022-07-09 06:15:22.105011: 
epoch:  134
2022-07-09 06:16:35.395318: train loss : -0.8365
2022-07-09 06:16:40.678329: validation loss: -0.7169
2022-07-09 06:16:40.711289: Average global foreground Dice: [0.7884]
2022-07-09 06:16:40.741881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:16:41.584191: Suus1 maybe_update_lr lr: 0.007533
2022-07-09 06:16:41.603454: This epoch took 79.485188 s

2022-07-09 06:16:41.606845: 
epoch:  135
2022-07-09 06:17:52.573600: train loss : -0.8301
2022-07-09 06:17:58.078086: validation loss: -0.7318
2022-07-09 06:17:58.114254: Average global foreground Dice: [0.7994]
2022-07-09 06:17:58.141449: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:17:59.009259: Suus1 maybe_update_lr lr: 0.007515
2022-07-09 06:17:59.030071: This epoch took 77.405995 s

2022-07-09 06:17:59.052855: 
epoch:  136
2022-07-09 06:19:12.226727: train loss : -0.8375
2022-07-09 06:19:18.071522: validation loss: -0.7068
2022-07-09 06:19:18.103241: Average global foreground Dice: [0.7837]
2022-07-09 06:19:18.122888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:19:18.906307: Suus1 maybe_update_lr lr: 0.007496
2022-07-09 06:19:18.914384: This epoch took 79.843075 s

2022-07-09 06:19:18.948452: 
epoch:  137
2022-07-09 06:20:30.647150: train loss : -0.8328
2022-07-09 06:20:36.349466: validation loss: -0.7381
2022-07-09 06:20:36.374602: Average global foreground Dice: [0.7967]
2022-07-09 06:20:36.403139: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:20:37.170318: Suus1 maybe_update_lr lr: 0.007478
2022-07-09 06:20:37.191916: This epoch took 78.176911 s

2022-07-09 06:20:37.213853: 
epoch:  138
2022-07-09 06:21:50.433157: train loss : -0.8355
2022-07-09 06:21:56.923828: validation loss: -0.7304
2022-07-09 06:21:56.946790: Average global foreground Dice: [0.7923]
2022-07-09 06:21:56.978269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:21:57.893323: Suus1 maybe_update_lr lr: 0.007459
2022-07-09 06:21:57.914881: This epoch took 80.679018 s

2022-07-09 06:21:57.940847: 
epoch:  139
2022-07-09 06:23:12.066603: train loss : -0.8369
2022-07-09 06:23:17.981232: validation loss: -0.7375
2022-07-09 06:23:18.005227: Average global foreground Dice: [0.7951]
2022-07-09 06:23:18.022640: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:23:18.725818: Suus1 maybe_update_lr lr: 0.00744
2022-07-09 06:23:18.738886: This epoch took 80.781033 s

2022-07-09 06:23:18.746870: 
epoch:  140
2022-07-09 06:24:29.859217: train loss : -0.8411
2022-07-09 06:24:35.035127: validation loss: -0.7566
2022-07-09 06:24:35.084291: Average global foreground Dice: [0.8112]
2022-07-09 06:24:35.106894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:24:35.763469: Suus1 maybe_update_lr lr: 0.007422
2022-07-09 06:24:35.788852: This epoch took 77.010987 s

2022-07-09 06:24:35.804891: 
epoch:  141
2022-07-09 06:25:48.459285: train loss : -0.8512
2022-07-09 06:25:54.407043: validation loss: -0.7206
2022-07-09 06:25:54.433542: Average global foreground Dice: [0.7902]
2022-07-09 06:25:54.460890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:25:55.170599: Suus1 maybe_update_lr lr: 0.007403
2022-07-09 06:25:55.199935: This epoch took 79.364065 s

2022-07-09 06:25:55.221865: 
epoch:  142
2022-07-09 06:27:06.492761: train loss : -0.8448
2022-07-09 06:27:11.684860: validation loss: -0.7389
2022-07-09 06:27:11.718045: Average global foreground Dice: [0.8062]
2022-07-09 06:27:11.748877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:27:12.718391: Suus1 maybe_update_lr lr: 0.007385
2022-07-09 06:27:12.750926: This epoch took 77.504932 s

2022-07-09 06:27:12.783849: 
epoch:  143
2022-07-09 06:28:25.165862: train loss : -0.8408
2022-07-09 06:28:30.652805: validation loss: -0.7299
2022-07-09 06:28:30.681219: Average global foreground Dice: [0.7901]
2022-07-09 06:28:30.692217: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:28:31.533484: Suus1 maybe_update_lr lr: 0.007366
2022-07-09 06:28:31.554968: This epoch took 78.738094 s

2022-07-09 06:28:31.576863: 
epoch:  144
2022-07-09 06:29:44.263991: train loss : -0.8356
2022-07-09 06:29:49.820973: validation loss: -0.7138
2022-07-09 06:29:49.839189: Average global foreground Dice: [0.7819]
2022-07-09 06:29:49.854873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:29:50.733432: Suus1 maybe_update_lr lr: 0.007347
2022-07-09 06:29:50.762038: This epoch took 79.168726 s

2022-07-09 06:29:50.764423: 
epoch:  145
2022-07-09 06:31:03.280627: train loss : -0.8359
2022-07-09 06:31:08.910244: validation loss: -0.7223
2022-07-09 06:31:08.929660: Average global foreground Dice: [0.794]
2022-07-09 06:31:08.952916: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:31:09.902367: Suus1 maybe_update_lr lr: 0.007329
2022-07-09 06:31:09.923915: This epoch took 79.142041 s

2022-07-09 06:31:09.944858: 
epoch:  146
2022-07-09 06:32:20.813377: train loss : -0.8402
2022-07-09 06:32:26.076001: validation loss: -0.7454
2022-07-09 06:32:26.094310: Average global foreground Dice: [0.8043]
2022-07-09 06:32:26.124877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:32:26.860441: Suus1 maybe_update_lr lr: 0.00731
2022-07-09 06:32:26.891061: This epoch took 76.939286 s

2022-07-09 06:32:26.912860: 
epoch:  147
2022-07-09 06:33:39.070526: train loss : -0.8439
2022-07-09 06:33:44.954414: validation loss: -0.7169
2022-07-09 06:33:44.995505: Average global foreground Dice: [0.786]
2022-07-09 06:33:45.020357: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:33:45.685341: Suus1 maybe_update_lr lr: 0.007291
2022-07-09 06:33:45.687853: This epoch took 78.752985 s

2022-07-09 06:33:45.706857: 
epoch:  148
2022-07-09 06:35:00.354637: train loss : -0.8392
2022-07-09 06:35:05.928077: validation loss: -0.7216
2022-07-09 06:35:05.955876: Average global foreground Dice: [0.7925]
2022-07-09 06:35:05.983886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:35:06.630613: Suus1 maybe_update_lr lr: 0.007273
2022-07-09 06:35:06.652046: This epoch took 80.923179 s

2022-07-09 06:35:06.677865: 
epoch:  149
2022-07-09 06:36:17.988721: train loss : -0.8437
2022-07-09 06:36:23.363679: validation loss: -0.7273
2022-07-09 06:36:23.397264: Average global foreground Dice: [0.7958]
2022-07-09 06:36:23.414206: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:36:24.156372: Suus1 maybe_update_lr lr: 0.007254
2022-07-09 06:36:24.177865: saving scheduled checkpoint file...
2022-07-09 06:36:24.323628: saving checkpoint...
2022-07-09 06:36:25.894696: done, saving took 1.69 seconds
2022-07-09 06:36:25.912737: done
2022-07-09 06:36:25.914851: This epoch took 79.209797 s

2022-07-09 06:36:25.916697: 
epoch:  150
2022-07-09 06:37:36.250586: train loss : -0.8476
2022-07-09 06:37:41.840763: validation loss: -0.7529
2022-07-09 06:37:41.894301: Average global foreground Dice: [0.8115]
2022-07-09 06:37:41.931070: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:37:42.562042: Suus1 maybe_update_lr lr: 0.007236
2022-07-09 06:37:42.602730: This epoch took 76.684159 s

2022-07-09 06:37:42.623855: 
epoch:  151
2022-07-09 06:38:54.542272: train loss : -0.8445
2022-07-09 06:39:00.214169: validation loss: -0.7499
2022-07-09 06:39:00.255482: Average global foreground Dice: [0.8161]
2022-07-09 06:39:00.276873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:39:01.108210: Suus1 maybe_update_lr lr: 0.007217
2022-07-09 06:39:01.145907: This epoch took 78.502791 s

2022-07-09 06:39:01.175444: 
epoch:  152
2022-07-09 06:40:14.603459: train loss : -0.8325
2022-07-09 06:40:20.103061: validation loss: -0.6999
2022-07-09 06:40:20.136242: Average global foreground Dice: [0.766]
2022-07-09 06:40:20.168896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:40:20.918517: Suus1 maybe_update_lr lr: 0.007198
2022-07-09 06:40:20.970923: This epoch took 79.770222 s

2022-07-09 06:40:20.990923: 
epoch:  153
2022-07-09 06:41:33.156822: train loss : -0.8384
2022-07-09 06:41:39.049299: validation loss: -0.7129
2022-07-09 06:41:39.080287: Average global foreground Dice: [0.7957]
2022-07-09 06:41:39.100600: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:41:39.861788: Suus1 maybe_update_lr lr: 0.00718
2022-07-09 06:41:39.887179: This epoch took 78.893949 s

2022-07-09 06:41:39.904860: 
epoch:  154
2022-07-09 06:42:51.710164: train loss : -0.8385
2022-07-09 06:42:57.301829: validation loss: -0.7489
2022-07-09 06:42:57.345263: Average global foreground Dice: [0.8113]
2022-07-09 06:42:57.357885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:42:58.124557: Suus1 maybe_update_lr lr: 0.007161
2022-07-09 06:42:58.146997: This epoch took 78.216799 s

2022-07-09 06:42:58.172849: 
epoch:  155
2022-07-09 06:44:10.173313: train loss : -0.8398
2022-07-09 06:44:16.273762: validation loss: -0.7512
2022-07-09 06:44:16.296386: Average global foreground Dice: [0.8129]
2022-07-09 06:44:16.326896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:44:17.063499: Suus1 maybe_update_lr lr: 0.007142
2022-07-09 06:44:17.090895: This epoch took 78.899107 s

2022-07-09 06:44:17.111238: 
epoch:  156
2022-07-09 06:45:28.682214: train loss : -0.8409
2022-07-09 06:45:34.402016: validation loss: -0.7552
2022-07-09 06:45:34.431288: Average global foreground Dice: [0.812]
2022-07-09 06:45:34.456883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:45:35.283573: Suus1 maybe_update_lr lr: 0.007123
2022-07-09 06:45:35.304895: This epoch took 78.179855 s

2022-07-09 06:45:35.326408: 
epoch:  157
2022-07-09 06:46:46.425267: train loss : -0.8364
2022-07-09 06:46:51.740549: validation loss: -0.7391
2022-07-09 06:46:51.773326: Average global foreground Dice: [0.8021]
2022-07-09 06:46:51.805867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:46:52.435989: Suus1 maybe_update_lr lr: 0.007105
2022-07-09 06:46:52.456904: This epoch took 77.112042 s

2022-07-09 06:46:52.478862: 
epoch:  158
2022-07-09 06:48:04.646208: train loss : -0.8422
2022-07-09 06:48:09.980600: validation loss: -0.7295
2022-07-09 06:48:10.004088: Average global foreground Dice: [0.7966]
2022-07-09 06:48:10.013866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:48:10.724394: Suus1 maybe_update_lr lr: 0.007086
2022-07-09 06:48:10.745903: This epoch took 78.249881 s

2022-07-09 06:48:10.777125: 
epoch:  159
2022-07-09 06:49:21.788442: train loss : -0.8452
2022-07-09 06:49:27.590342: validation loss: -0.7382
2022-07-09 06:49:27.628294: Average global foreground Dice: [0.8114]
2022-07-09 06:49:27.649880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:49:28.283652: Suus1 maybe_update_lr lr: 0.007067
2022-07-09 06:49:28.304727: This epoch took 77.476857 s

2022-07-09 06:49:28.306976: 
epoch:  160
2022-07-09 06:50:41.200927: train loss : -0.8475
2022-07-09 06:50:47.039981: validation loss: -0.7366
2022-07-09 06:50:47.049245: Average global foreground Dice: [0.8005]
2022-07-09 06:50:47.067879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:50:47.791436: Suus1 maybe_update_lr lr: 0.007049
2022-07-09 06:50:47.812911: This epoch took 79.487030 s

2022-07-09 06:50:47.834873: 
epoch:  161
2022-07-09 06:52:00.627398: train loss : -0.8494
2022-07-09 06:52:06.390944: validation loss: -0.7298
2022-07-09 06:52:06.422335: Average global foreground Dice: [0.8087]
2022-07-09 06:52:06.434882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:52:07.230471: Suus1 maybe_update_lr lr: 0.00703
2022-07-09 06:52:07.251894: This epoch took 79.393012 s

2022-07-09 06:52:07.277779: 
epoch:  162
2022-07-09 06:53:19.946253: train loss : -0.8531
2022-07-09 06:53:26.041453: validation loss: -0.7582
2022-07-09 06:53:26.071290: Average global foreground Dice: [0.824]
2022-07-09 06:53:26.099997: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:53:27.016618: Suus1 maybe_update_lr lr: 0.007011
2022-07-09 06:53:27.043914: This epoch took 79.748017 s

2022-07-09 06:53:27.065867: 
epoch:  163
2022-07-09 06:54:37.803031: train loss : -0.8560
2022-07-09 06:54:43.452940: validation loss: -0.7348
2022-07-09 06:54:43.495895: Average global foreground Dice: [0.8029]
2022-07-09 06:54:43.547007: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:54:44.165408: Suus1 maybe_update_lr lr: 0.006992
2022-07-09 06:54:44.186901: This epoch took 77.113194 s

2022-07-09 06:54:44.208859: 
epoch:  164
2022-07-09 06:55:56.119167: train loss : -0.8485
2022-07-09 06:56:01.202024: validation loss: -0.7012
2022-07-09 06:56:01.232070: Average global foreground Dice: [0.775]
2022-07-09 06:56:01.260877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:56:01.911340: Suus1 maybe_update_lr lr: 0.006974
2022-07-09 06:56:01.932886: This epoch took 77.702015 s

2022-07-09 06:56:01.954867: 
epoch:  165
2022-07-09 06:57:15.538921: train loss : -0.8536
2022-07-09 06:57:21.427534: validation loss: -0.7328
2022-07-09 06:57:21.441223: Average global foreground Dice: [0.7953]
2022-07-09 06:57:21.456351: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:57:22.301219: Suus1 maybe_update_lr lr: 0.006955
2022-07-09 06:57:22.340889: This epoch took 80.362024 s

2022-07-09 06:57:22.348265: 
epoch:  166
2022-07-09 06:58:35.359123: train loss : -0.8580
2022-07-09 06:58:40.460432: validation loss: -0.7649
2022-07-09 06:58:40.499313: Average global foreground Dice: [0.823]
2022-07-09 06:58:40.511870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 06:58:41.256615: Suus1 maybe_update_lr lr: 0.006936
2022-07-09 06:58:41.278938: This epoch took 78.918052 s

2022-07-09 06:58:41.298998: 
epoch:  167
2022-07-09 06:59:55.756237: train loss : -0.8566
2022-07-09 07:00:02.304223: validation loss: -0.7362
2022-07-09 07:00:02.329560: Average global foreground Dice: [0.8054]
2022-07-09 07:00:02.331997: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:00:03.131639: Suus1 maybe_update_lr lr: 0.006918
2022-07-09 07:00:03.154999: This epoch took 81.835925 s

2022-07-09 07:00:03.176847: 
epoch:  168
2022-07-09 07:01:17.119027: train loss : -0.8510
2022-07-09 07:01:22.804565: validation loss: -0.7535
2022-07-09 07:01:22.830083: Average global foreground Dice: [0.8114]
2022-07-09 07:01:22.855337: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:01:23.397336: Suus1 maybe_update_lr lr: 0.006899
2022-07-09 07:01:23.430357: This epoch took 80.231479 s

2022-07-09 07:01:23.461159: 
epoch:  169
2022-07-09 07:02:36.331414: train loss : -0.8511
2022-07-09 07:02:43.486269: validation loss: -0.7512
2022-07-09 07:02:43.515209: Average global foreground Dice: [0.8088]
2022-07-09 07:02:43.543164: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:02:44.299367: Suus1 maybe_update_lr lr: 0.00688
2022-07-09 07:02:44.326456: This epoch took 80.859980 s

2022-07-09 07:02:44.340756: 
epoch:  170
2022-07-09 07:03:56.395758: train loss : -0.8505
2022-07-09 07:04:02.094363: validation loss: -0.7371
2022-07-09 07:04:02.114368: Average global foreground Dice: [0.8005]
2022-07-09 07:04:02.135906: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:04:02.813459: Suus1 maybe_update_lr lr: 0.006861
2022-07-09 07:04:02.835903: This epoch took 78.473211 s

2022-07-09 07:04:02.853120: 
epoch:  171
2022-07-09 07:05:14.487053: train loss : -0.8551
2022-07-09 07:05:20.304991: validation loss: -0.7548
2022-07-09 07:05:20.337218: Average global foreground Dice: [0.8159]
2022-07-09 07:05:20.359876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:05:21.324535: Suus1 maybe_update_lr lr: 0.006842
2022-07-09 07:05:21.327426: This epoch took 78.434561 s

2022-07-09 07:05:21.336635: 
epoch:  172
2022-07-09 07:06:34.747232: train loss : -0.8569
2022-07-09 07:06:40.433091: validation loss: -0.7093
2022-07-09 07:06:40.472339: Average global foreground Dice: [0.7861]
2022-07-09 07:06:40.492115: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:06:41.218967: Suus1 maybe_update_lr lr: 0.006824
2022-07-09 07:06:41.248908: This epoch took 79.910155 s

2022-07-09 07:06:41.265992: 
epoch:  173
2022-07-09 07:07:53.228234: train loss : -0.8559
2022-07-09 07:07:59.631584: validation loss: -0.7139
2022-07-09 07:07:59.675189: Average global foreground Dice: [0.783]
2022-07-09 07:07:59.707871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:08:00.323288: Suus1 maybe_update_lr lr: 0.006805
2022-07-09 07:08:00.325624: This epoch took 79.051129 s

2022-07-09 07:08:00.337534: 
epoch:  174
2022-07-09 07:09:12.712139: train loss : -0.8522
2022-07-09 07:09:18.533110: validation loss: -0.7521
2022-07-09 07:09:18.561318: Average global foreground Dice: [0.8182]
2022-07-09 07:09:18.587868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:09:19.266320: Suus1 maybe_update_lr lr: 0.006786
2022-07-09 07:09:19.284280: This epoch took 78.944623 s

2022-07-09 07:09:19.314512: 
epoch:  175
2022-07-09 07:10:31.898535: train loss : -0.8564
2022-07-09 07:10:37.384278: validation loss: -0.7379
2022-07-09 07:10:37.427324: Average global foreground Dice: [0.8027]
2022-07-09 07:10:37.459871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:10:38.378316: Suus1 maybe_update_lr lr: 0.006767
2022-07-09 07:10:38.400056: This epoch took 79.078526 s

2022-07-09 07:10:38.420001: 
epoch:  176
2022-07-09 07:11:51.887355: train loss : -0.8587
2022-07-09 07:11:57.897249: validation loss: -0.7111
2022-07-09 07:11:57.923312: Average global foreground Dice: [0.7817]
2022-07-09 07:11:57.946543: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:11:58.695288: Suus1 maybe_update_lr lr: 0.006749
2022-07-09 07:11:58.716918: This epoch took 80.270932 s

2022-07-09 07:11:58.741849: 
epoch:  177
2022-07-09 07:13:10.244735: train loss : -0.8634
2022-07-09 07:13:15.458062: validation loss: -0.7312
2022-07-09 07:13:15.487299: Average global foreground Dice: [0.7986]
2022-07-09 07:13:15.510293: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:13:16.558948: Suus1 maybe_update_lr lr: 0.00673
2022-07-09 07:13:16.590907: This epoch took 77.832044 s

2022-07-09 07:13:16.612857: 
epoch:  178
2022-07-09 07:14:28.578664: train loss : -0.8623
2022-07-09 07:14:34.273566: validation loss: -0.7411
2022-07-09 07:14:34.291218: Average global foreground Dice: [0.8014]
2022-07-09 07:14:34.310496: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:14:35.291327: Suus1 maybe_update_lr lr: 0.006711
2022-07-09 07:14:35.312909: This epoch took 78.674030 s

2022-07-09 07:14:35.334853: 
epoch:  179
2022-07-09 07:15:47.738502: train loss : -0.8625
2022-07-09 07:15:53.652527: validation loss: -0.7364
2022-07-09 07:15:53.655699: Average global foreground Dice: [0.7839]
2022-07-09 07:15:53.658064: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:15:54.202261: Suus1 maybe_update_lr lr: 0.006692
2022-07-09 07:15:54.227144: This epoch took 78.870278 s

2022-07-09 07:15:54.252860: 
epoch:  180
2022-07-09 07:17:07.249001: train loss : -0.8546
2022-07-09 07:17:13.358078: validation loss: -0.7344
2022-07-09 07:17:13.383253: Average global foreground Dice: [0.804]
2022-07-09 07:17:13.403933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:17:14.240521: Suus1 maybe_update_lr lr: 0.006673
2022-07-09 07:17:14.268371: This epoch took 79.993497 s

2022-07-09 07:17:14.288439: 
epoch:  181
2022-07-09 07:18:26.328889: train loss : -0.8557
2022-07-09 07:18:32.406312: validation loss: -0.7396
2022-07-09 07:18:32.437651: Average global foreground Dice: [0.8108]
2022-07-09 07:18:32.457473: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:18:33.044622: Suus1 maybe_update_lr lr: 0.006654
2022-07-09 07:18:33.065902: This epoch took 78.757356 s

2022-07-09 07:18:33.087638: 
epoch:  182
2022-07-09 07:19:44.603071: train loss : -0.8543
2022-07-09 07:19:50.383282: validation loss: -0.7165
2022-07-09 07:19:50.408684: Average global foreground Dice: [0.7957]
2022-07-09 07:19:50.438856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:19:51.215284: Suus1 maybe_update_lr lr: 0.006636
2022-07-09 07:19:51.224193: This epoch took 78.103330 s

2022-07-09 07:19:51.238374: 
epoch:  183
2022-07-09 07:21:03.960320: train loss : -0.8452
2022-07-09 07:21:09.758399: validation loss: -0.7260
2022-07-09 07:21:09.786277: Average global foreground Dice: [0.7954]
2022-07-09 07:21:09.798872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:21:10.460535: Suus1 maybe_update_lr lr: 0.006617
2022-07-09 07:21:10.481483: This epoch took 79.209519 s

2022-07-09 07:21:10.483657: 
epoch:  184
2022-07-09 07:22:21.639869: train loss : -0.8469
2022-07-09 07:22:26.877720: validation loss: -0.7038
2022-07-09 07:22:26.929848: Average global foreground Dice: [0.797]
2022-07-09 07:22:26.959860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:22:27.803388: Suus1 maybe_update_lr lr: 0.006598
2022-07-09 07:22:27.824913: This epoch took 77.339203 s

2022-07-09 07:22:27.852856: 
epoch:  185
2022-07-09 07:23:39.371968: train loss : -0.8509
2022-07-09 07:23:44.829097: validation loss: -0.7130
2022-07-09 07:23:44.849858: Average global foreground Dice: [0.786]
2022-07-09 07:23:44.865248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:23:45.760944: Suus1 maybe_update_lr lr: 0.006579
2022-07-09 07:23:45.782677: This epoch took 77.909556 s

2022-07-09 07:23:45.789139: 
epoch:  186
2022-07-09 07:24:57.384427: train loss : -0.8546
2022-07-09 07:25:02.714683: validation loss: -0.7161
2022-07-09 07:25:02.746430: Average global foreground Dice: [0.7905]
2022-07-09 07:25:02.766130: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:25:03.403300: Suus1 maybe_update_lr lr: 0.00656
2022-07-09 07:25:03.409707: This epoch took 77.617611 s

2022-07-09 07:25:03.444617: 
epoch:  187
2022-07-09 07:26:15.008162: train loss : -0.8558
2022-07-09 07:26:20.722387: validation loss: -0.7280
2022-07-09 07:26:20.760260: Average global foreground Dice: [0.7942]
2022-07-09 07:26:20.774987: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:26:21.426302: Suus1 maybe_update_lr lr: 0.006541
2022-07-09 07:26:21.446633: This epoch took 77.986245 s

2022-07-09 07:26:21.465955: 
epoch:  188
2022-07-09 07:27:33.818725: train loss : -0.8525
2022-07-09 07:27:39.030330: validation loss: -0.7414
2022-07-09 07:27:39.057842: Average global foreground Dice: [0.8019]
2022-07-09 07:27:39.078104: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:27:40.086669: Suus1 maybe_update_lr lr: 0.006522
2022-07-09 07:27:40.106243: This epoch took 78.619352 s

2022-07-09 07:27:40.121909: 
epoch:  189
2022-07-09 07:28:51.413400: train loss : -0.8588
2022-07-09 07:28:56.981375: validation loss: -0.7420
2022-07-09 07:28:57.022287: Average global foreground Dice: [0.8138]
2022-07-09 07:28:57.036872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:28:57.843340: Suus1 maybe_update_lr lr: 0.006504
2022-07-09 07:28:57.864902: This epoch took 77.732039 s

2022-07-09 07:28:57.888855: 
epoch:  190
2022-07-09 07:30:11.559366: train loss : -0.8601
2022-07-09 07:30:16.847141: validation loss: -0.7412
2022-07-09 07:30:16.883313: Average global foreground Dice: [0.8033]
2022-07-09 07:30:16.900950: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:30:17.713360: Suus1 maybe_update_lr lr: 0.006485
2022-07-09 07:30:17.738188: This epoch took 79.827317 s

2022-07-09 07:30:17.757863: 
epoch:  191
2022-07-09 07:31:29.500141: train loss : -0.8601
2022-07-09 07:31:35.764050: validation loss: -0.7288
2022-07-09 07:31:35.812984: Average global foreground Dice: [0.7986]
2022-07-09 07:31:35.828534: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:31:36.421354: Suus1 maybe_update_lr lr: 0.006466
2022-07-09 07:31:36.442898: This epoch took 78.653715 s

2022-07-09 07:31:36.461729: 
epoch:  192
2022-07-09 07:32:49.019340: train loss : -0.8613
2022-07-09 07:32:54.638468: validation loss: -0.7532
2022-07-09 07:32:54.659202: Average global foreground Dice: [0.8103]
2022-07-09 07:32:54.675883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:32:55.312340: Suus1 maybe_update_lr lr: 0.006447
2022-07-09 07:32:55.333912: This epoch took 78.858028 s

2022-07-09 07:32:55.355859: 
epoch:  193
2022-07-09 07:34:07.790389: train loss : -0.8611
2022-07-09 07:34:13.148410: validation loss: -0.6983
2022-07-09 07:34:13.196262: Average global foreground Dice: [0.7927]
2022-07-09 07:34:13.211048: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:34:13.810473: Suus1 maybe_update_lr lr: 0.006428
2022-07-09 07:34:13.832916: This epoch took 78.451049 s

2022-07-09 07:34:13.865873: 
epoch:  194
2022-07-09 07:35:27.315101: train loss : -0.8595
2022-07-09 07:35:33.949937: validation loss: -0.7385
2022-07-09 07:35:33.995306: Average global foreground Dice: [0.8072]
2022-07-09 07:35:34.017009: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:35:35.097620: Suus1 maybe_update_lr lr: 0.006409
2022-07-09 07:35:35.129917: This epoch took 81.231051 s

2022-07-09 07:35:35.160991: 
epoch:  195
2022-07-09 07:36:45.407396: train loss : -0.8579
2022-07-09 07:36:51.214869: validation loss: -0.7445
2022-07-09 07:36:51.219527: Average global foreground Dice: [0.8073]
2022-07-09 07:36:51.221642: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:36:52.094407: Suus1 maybe_update_lr lr: 0.00639
2022-07-09 07:36:52.104273: This epoch took 76.921269 s

2022-07-09 07:36:52.106601: 
epoch:  196
2022-07-09 07:38:04.374509: train loss : -0.8638
2022-07-09 07:38:09.940186: validation loss: -0.7207
2022-07-09 07:38:09.971409: Average global foreground Dice: [0.7915]
2022-07-09 07:38:09.997871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:38:10.867344: Suus1 maybe_update_lr lr: 0.006371
2022-07-09 07:38:10.889903: This epoch took 78.781208 s

2022-07-09 07:38:10.911845: 
epoch:  197
2022-07-09 07:39:23.243806: train loss : -0.8675
2022-07-09 07:39:28.901460: validation loss: -0.7474
2022-07-09 07:39:28.934619: Average global foreground Dice: [0.8075]
2022-07-09 07:39:28.946876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:39:29.802507: Suus1 maybe_update_lr lr: 0.006352
2022-07-09 07:39:29.826817: This epoch took 78.892397 s

2022-07-09 07:39:29.844427: 
epoch:  198
2022-07-09 07:40:41.882243: train loss : -0.8558
2022-07-09 07:40:47.365134: validation loss: -0.7263
2022-07-09 07:40:47.395246: Average global foreground Dice: [0.7936]
2022-07-09 07:40:47.421858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:40:48.214374: Suus1 maybe_update_lr lr: 0.006333
2022-07-09 07:40:48.245062: This epoch took 78.372613 s

2022-07-09 07:40:48.265086: 
epoch:  199
2022-07-09 07:41:59.868011: train loss : -0.8583
2022-07-09 07:42:05.268863: validation loss: -0.7288
2022-07-09 07:42:05.295421: Average global foreground Dice: [0.7983]
2022-07-09 07:42:05.307552: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:42:05.860492: Suus1 maybe_update_lr lr: 0.006314
2022-07-09 07:42:05.893878: saving scheduled checkpoint file...
2022-07-09 07:42:06.075693: saving checkpoint...
2022-07-09 07:42:08.160741: done, saving took 2.23 seconds
2022-07-09 07:42:08.199613: done
2022-07-09 07:42:08.201737: This epoch took 79.916537 s

2022-07-09 07:42:08.203642: 
epoch:  200
2022-07-09 07:43:20.154087: train loss : -0.8671
2022-07-09 07:43:25.946011: validation loss: -0.7407
2022-07-09 07:43:25.971378: Average global foreground Dice: [0.7965]
2022-07-09 07:43:25.975327: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:43:26.972329: Suus1 maybe_update_lr lr: 0.006296
2022-07-09 07:43:26.992913: This epoch took 78.787392 s

2022-07-09 07:43:27.014849: 
epoch:  201
2022-07-09 07:44:39.537223: train loss : -0.8672
2022-07-09 07:44:44.866835: validation loss: -0.7383
2022-07-09 07:44:44.887042: Average global foreground Dice: [0.7986]
2022-07-09 07:44:44.907573: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:44:45.598330: Suus1 maybe_update_lr lr: 0.006277
2022-07-09 07:44:45.608646: This epoch took 78.573533 s

2022-07-09 07:44:45.610796: 
epoch:  202
2022-07-09 07:45:58.374717: train loss : -0.8709
2022-07-09 07:46:04.064745: validation loss: -0.7362
2022-07-09 07:46:04.100591: Average global foreground Dice: [0.8013]
2022-07-09 07:46:04.121129: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:46:04.961315: Suus1 maybe_update_lr lr: 0.006258
2022-07-09 07:46:04.985034: This epoch took 79.372168 s

2022-07-09 07:46:04.997855: 
epoch:  203
2022-07-09 07:47:17.078395: train loss : -0.8684
2022-07-09 07:47:22.351008: validation loss: -0.7419
2022-07-09 07:47:22.357908: Average global foreground Dice: [0.8016]
2022-07-09 07:47:22.369880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:47:23.167695: Suus1 maybe_update_lr lr: 0.006239
2022-07-09 07:47:23.183257: This epoch took 78.163270 s

2022-07-09 07:47:23.193225: 
epoch:  204
2022-07-09 07:48:34.430727: train loss : -0.8655
2022-07-09 07:48:40.170104: validation loss: -0.7305
2022-07-09 07:48:40.173224: Average global foreground Dice: [0.7994]
2022-07-09 07:48:40.200004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:48:41.082624: Suus1 maybe_update_lr lr: 0.00622
2022-07-09 07:48:41.096254: This epoch took 77.892523 s

2022-07-09 07:48:41.102053: 
epoch:  205
2022-07-09 07:49:53.354187: train loss : -0.8680
2022-07-09 07:49:58.918438: validation loss: -0.7421
2022-07-09 07:49:58.960388: Average global foreground Dice: [0.8094]
2022-07-09 07:49:58.996857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:49:59.682432: Suus1 maybe_update_lr lr: 0.006201
2022-07-09 07:49:59.704945: This epoch took 78.588932 s

2022-07-09 07:49:59.726861: 
epoch:  206
2022-07-09 07:51:12.579729: train loss : -0.8698
2022-07-09 07:51:18.407354: validation loss: -0.7606
2022-07-09 07:51:18.436511: Average global foreground Dice: [0.8189]
2022-07-09 07:51:18.462567: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:51:19.251204: Suus1 maybe_update_lr lr: 0.006182
2022-07-09 07:51:19.276887: This epoch took 79.518543 s

2022-07-09 07:51:19.296145: 
epoch:  207
2022-07-09 07:52:32.647047: train loss : -0.8704
2022-07-09 07:52:38.492297: validation loss: -0.7281
2022-07-09 07:52:38.537663: Average global foreground Dice: [0.8013]
2022-07-09 07:52:38.568861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:52:39.254448: Suus1 maybe_update_lr lr: 0.006163
2022-07-09 07:52:39.275908: This epoch took 79.959652 s

2022-07-09 07:52:39.298489: 
epoch:  208
2022-07-09 07:53:51.968804: train loss : -0.8708
2022-07-09 07:53:58.023092: validation loss: -0.7482
2022-07-09 07:53:58.037274: Average global foreground Dice: [0.8087]
2022-07-09 07:53:58.039502: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:53:58.929288: Suus1 maybe_update_lr lr: 0.006144
2022-07-09 07:53:58.961900: This epoch took 79.661434 s

2022-07-09 07:53:58.994859: 
epoch:  209
2022-07-09 07:55:10.897894: train loss : -0.8715
2022-07-09 07:55:16.293298: validation loss: -0.7584
2022-07-09 07:55:16.324275: Average global foreground Dice: [0.8128]
2022-07-09 07:55:16.337897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:55:17.034364: Suus1 maybe_update_lr lr: 0.006125
2022-07-09 07:55:17.055166: This epoch took 78.027303 s

2022-07-09 07:55:17.086023: 
epoch:  210
2022-07-09 07:56:30.207648: train loss : -0.8692
2022-07-09 07:56:35.827204: validation loss: -0.7356
2022-07-09 07:56:35.855993: Average global foreground Dice: [0.8034]
2022-07-09 07:56:35.873097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:56:36.697328: Suus1 maybe_update_lr lr: 0.006106
2022-07-09 07:56:36.718925: This epoch took 79.613064 s

2022-07-09 07:56:36.742854: 
epoch:  211
2022-07-09 07:57:48.360096: train loss : -0.8576
2022-07-09 07:57:54.663058: validation loss: -0.7423
2022-07-09 07:57:54.698311: Average global foreground Dice: [0.8028]
2022-07-09 07:57:54.733025: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:57:55.258413: Suus1 maybe_update_lr lr: 0.006087
2022-07-09 07:57:55.290040: This epoch took 78.514149 s

2022-07-09 07:57:55.310083: 
epoch:  212
2022-07-09 07:59:09.103074: train loss : -0.8575
2022-07-09 07:59:14.674634: validation loss: -0.7547
2022-07-09 07:59:14.701486: Average global foreground Dice: [0.8158]
2022-07-09 07:59:14.731022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 07:59:15.288539: Suus1 maybe_update_lr lr: 0.006068
2022-07-09 07:59:15.310068: This epoch took 79.982205 s

2022-07-09 07:59:15.331851: 
epoch:  213
2022-07-09 08:00:26.434136: train loss : -0.8628
2022-07-09 08:00:32.650403: validation loss: -0.7352
2022-07-09 08:00:32.667193: Average global foreground Dice: [0.7965]
2022-07-09 08:00:32.684865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:00:33.387548: Suus1 maybe_update_lr lr: 0.006049
2022-07-09 08:00:33.408907: This epoch took 78.056794 s

2022-07-09 08:00:33.427266: 
epoch:  214
2022-07-09 08:01:44.899083: train loss : -0.8701
2022-07-09 08:01:50.513815: validation loss: -0.7452
2022-07-09 08:01:50.547232: Average global foreground Dice: [0.809]
2022-07-09 08:01:50.557071: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:01:51.311137: Suus1 maybe_update_lr lr: 0.00603
2022-07-09 08:01:51.331910: This epoch took 77.884560 s

2022-07-09 08:01:51.353554: 
epoch:  215
2022-07-09 08:03:04.956135: train loss : -0.8708
2022-07-09 08:03:09.993002: validation loss: -0.7057
2022-07-09 08:03:10.024777: Average global foreground Dice: [0.7784]
2022-07-09 08:03:10.054863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:03:10.886506: Suus1 maybe_update_lr lr: 0.006011
2022-07-09 08:03:10.922708: This epoch took 79.547842 s

2022-07-09 08:03:10.957685: 
epoch:  216
2022-07-09 08:04:22.534982: train loss : -0.8716
2022-07-09 08:04:28.435277: validation loss: -0.7338
2022-07-09 08:04:28.467366: Average global foreground Dice: [0.8046]
2022-07-09 08:04:28.488014: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:04:29.302545: Suus1 maybe_update_lr lr: 0.005991
2022-07-09 08:04:29.325399: This epoch took 78.358843 s

2022-07-09 08:04:29.361876: 
epoch:  217
2022-07-09 08:05:40.323600: train loss : -0.8721
2022-07-09 08:05:45.962834: validation loss: -0.7276
2022-07-09 08:05:46.000308: Average global foreground Dice: [0.8015]
2022-07-09 08:05:46.015050: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:05:46.933219: Suus1 maybe_update_lr lr: 0.005972
2022-07-09 08:05:46.965912: This epoch took 77.593259 s

2022-07-09 08:05:46.998837: 
epoch:  218
2022-07-09 08:06:58.625124: train loss : -0.8702
2022-07-09 08:07:04.568228: validation loss: -0.7502
2022-07-09 08:07:04.607612: Average global foreground Dice: [0.814]
2022-07-09 08:07:04.619431: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:07:05.382902: Suus1 maybe_update_lr lr: 0.005953
2022-07-09 08:07:05.401027: This epoch took 78.380149 s

2022-07-09 08:07:05.427313: 
epoch:  219
2022-07-09 08:08:18.280388: train loss : -0.8707
2022-07-09 08:08:24.717914: validation loss: -0.7527
2022-07-09 08:08:24.766951: Average global foreground Dice: [0.8083]
2022-07-09 08:08:24.792011: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:08:25.517747: Suus1 maybe_update_lr lr: 0.005934
2022-07-09 08:08:25.525019: This epoch took 80.063141 s

2022-07-09 08:08:25.527324: 
epoch:  220
2022-07-09 08:09:36.082966: train loss : -0.8736
2022-07-09 08:09:41.926513: validation loss: -0.7317
2022-07-09 08:09:41.934981: Average global foreground Dice: [0.8009]
2022-07-09 08:09:41.952861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:09:42.712925: Suus1 maybe_update_lr lr: 0.005915
2022-07-09 08:09:42.748905: This epoch took 77.219601 s

2022-07-09 08:09:42.769160: 
epoch:  221
2022-07-09 08:10:54.227838: train loss : -0.8785
2022-07-09 08:10:59.706287: validation loss: -0.7476
2022-07-09 08:10:59.735312: Average global foreground Dice: [0.8159]
2022-07-09 08:10:59.767911: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:11:00.553411: Suus1 maybe_update_lr lr: 0.005896
2022-07-09 08:11:00.574901: This epoch took 77.783031 s

2022-07-09 08:11:00.593269: 
epoch:  222
2022-07-09 08:12:11.623222: train loss : -0.8767
2022-07-09 08:12:17.621886: validation loss: -0.7409
2022-07-09 08:12:17.651540: Average global foreground Dice: [0.8117]
2022-07-09 08:12:17.673364: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:12:18.303371: Suus1 maybe_update_lr lr: 0.005877
2022-07-09 08:12:18.338896: This epoch took 77.714984 s

2022-07-09 08:12:18.365858: 
epoch:  223
2022-07-09 08:13:30.512457: train loss : -0.8751
2022-07-09 08:13:36.709854: validation loss: -0.7499
2022-07-09 08:13:36.733377: Average global foreground Dice: [0.816]
2022-07-09 08:13:36.738318: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:13:37.629273: Suus1 maybe_update_lr lr: 0.005858
2022-07-09 08:13:37.650885: saving best epoch checkpoint...
2022-07-09 08:13:37.763610: saving checkpoint...
2022-07-09 08:13:39.259281: done, saving took 1.58 seconds
2022-07-09 08:13:39.276916: This epoch took 80.878046 s

2022-07-09 08:13:39.279031: 
epoch:  224
2022-07-09 08:14:50.304454: train loss : -0.8762
2022-07-09 08:14:55.989732: validation loss: -0.7315
2022-07-09 08:14:56.010432: Average global foreground Dice: [0.8009]
2022-07-09 08:14:56.030169: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:14:56.708068: Suus1 maybe_update_lr lr: 0.005839
2022-07-09 08:14:56.729931: This epoch took 77.448353 s

2022-07-09 08:14:56.751845: 
epoch:  225
2022-07-09 08:16:06.786867: train loss : -0.8803
2022-07-09 08:16:12.425858: validation loss: -0.7068
2022-07-09 08:16:12.457274: Average global foreground Dice: [0.7825]
2022-07-09 08:16:12.491627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:16:13.155504: Suus1 maybe_update_lr lr: 0.00582
2022-07-09 08:16:13.187013: This epoch took 76.399144 s

2022-07-09 08:16:13.219896: 
epoch:  226
2022-07-09 08:17:25.110734: train loss : -0.8795
2022-07-09 08:17:31.127159: validation loss: -0.7300
2022-07-09 08:17:31.151276: Average global foreground Dice: [0.7958]
2022-07-09 08:17:31.168882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:17:31.950198: Suus1 maybe_update_lr lr: 0.005801
2022-07-09 08:17:31.982918: This epoch took 78.741045 s

2022-07-09 08:17:32.015866: 
epoch:  227
2022-07-09 08:18:43.916812: train loss : -0.8801
2022-07-09 08:18:49.517185: validation loss: -0.7481
2022-07-09 08:18:49.548230: Average global foreground Dice: [0.8206]
2022-07-09 08:18:49.560266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:18:50.150392: Suus1 maybe_update_lr lr: 0.005781
2022-07-09 08:18:50.171916: This epoch took 78.123051 s

2022-07-09 08:18:50.195868: 
epoch:  228
2022-07-09 08:20:03.672497: train loss : -0.8842
2022-07-09 08:20:10.131385: validation loss: -0.7562
2022-07-09 08:20:10.158284: Average global foreground Dice: [0.8127]
2022-07-09 08:20:10.179874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:20:10.799541: Suus1 maybe_update_lr lr: 0.005762
2022-07-09 08:20:10.824920: This epoch took 80.612000 s

2022-07-09 08:20:10.843860: 
epoch:  229
2022-07-09 08:21:24.142988: train loss : -0.8798
2022-07-09 08:21:29.458105: validation loss: -0.7453
2022-07-09 08:21:29.483756: Average global foreground Dice: [0.8169]
2022-07-09 08:21:29.503401: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:21:30.283337: Suus1 maybe_update_lr lr: 0.005743
2022-07-09 08:21:30.324885: saving best epoch checkpoint...
2022-07-09 08:21:30.487616: saving checkpoint...
2022-07-09 08:21:32.017947: done, saving took 1.67 seconds
2022-07-09 08:21:32.093871: This epoch took 81.231189 s

2022-07-09 08:21:32.115860: 
epoch:  230
2022-07-09 08:22:43.381731: train loss : -0.8840
2022-07-09 08:22:49.111105: validation loss: -0.7563
2022-07-09 08:22:49.119523: Average global foreground Dice: [0.8125]
2022-07-09 08:22:49.168044: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:22:50.199705: Suus1 maybe_update_lr lr: 0.005724
2022-07-09 08:22:50.237900: saving best epoch checkpoint...
2022-07-09 08:22:50.310529: saving checkpoint...
2022-07-09 08:22:52.046589: done, saving took 1.78 seconds
2022-07-09 08:22:52.060492: This epoch took 79.919810 s

2022-07-09 08:22:52.062584: 
epoch:  231
2022-07-09 08:24:02.582770: train loss : -0.8830
2022-07-09 08:24:08.248981: validation loss: -0.7401
2022-07-09 08:24:08.273283: Average global foreground Dice: [0.8037]
2022-07-09 08:24:08.308002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:24:09.055143: Suus1 maybe_update_lr lr: 0.005705
2022-07-09 08:24:09.075919: This epoch took 77.011280 s

2022-07-09 08:24:09.096174: 
epoch:  232
2022-07-09 08:25:20.568283: train loss : -0.8808
2022-07-09 08:25:26.029798: validation loss: -0.7099
2022-07-09 08:25:26.045209: Average global foreground Dice: [0.787]
2022-07-09 08:25:26.064854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:25:26.781170: Suus1 maybe_update_lr lr: 0.005686
2022-07-09 08:25:26.812904: This epoch took 77.689060 s

2022-07-09 08:25:26.834864: 
epoch:  233
2022-07-09 08:26:38.767982: train loss : -0.8802
2022-07-09 08:26:44.206967: validation loss: -0.7375
2022-07-09 08:26:44.227604: Average global foreground Dice: [0.8139]
2022-07-09 08:26:44.248867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:26:44.859124: Suus1 maybe_update_lr lr: 0.005667
2022-07-09 08:26:44.878915: This epoch took 78.027048 s

2022-07-09 08:26:44.900871: 
epoch:  234
2022-07-09 08:27:57.657526: train loss : -0.8785
2022-07-09 08:28:04.830017: validation loss: -0.7014
2022-07-09 08:28:04.855210: Average global foreground Dice: [0.7764]
2022-07-09 08:28:04.885891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:28:05.722241: Suus1 maybe_update_lr lr: 0.005647
2022-07-09 08:28:05.732844: This epoch took 80.809965 s

2022-07-09 08:28:05.735720: 
epoch:  235
2022-07-09 08:29:17.523281: train loss : -0.8785
2022-07-09 08:29:23.407181: validation loss: -0.7325
2022-07-09 08:29:23.440358: Average global foreground Dice: [0.7973]
2022-07-09 08:29:23.460666: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:29:24.100382: Suus1 maybe_update_lr lr: 0.005628
2022-07-09 08:29:24.129912: This epoch took 78.359044 s

2022-07-09 08:29:24.162858: 
epoch:  236
2022-07-09 08:30:35.627292: train loss : -0.8823
2022-07-09 08:30:40.922990: validation loss: -0.7617
2022-07-09 08:30:40.954376: Average global foreground Dice: [0.8227]
2022-07-09 08:30:40.974115: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:30:41.752839: Suus1 maybe_update_lr lr: 0.005609
2022-07-09 08:30:41.779926: This epoch took 77.592061 s

2022-07-09 08:30:41.801850: 
epoch:  237
2022-07-09 08:31:52.801935: train loss : -0.8754
2022-07-09 08:31:57.671726: validation loss: -0.7079
2022-07-09 08:31:57.699781: Average global foreground Dice: [0.7819]
2022-07-09 08:31:57.707542: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:31:58.531581: Suus1 maybe_update_lr lr: 0.00559
2022-07-09 08:31:58.562908: This epoch took 76.739039 s

2022-07-09 08:31:58.597875: 
epoch:  238
2022-07-09 08:33:10.682313: train loss : -0.8787
2022-07-09 08:33:17.043335: validation loss: -0.7483
2022-07-09 08:33:17.076210: Average global foreground Dice: [0.8036]
2022-07-09 08:33:17.106544: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:33:17.880857: Suus1 maybe_update_lr lr: 0.005571
2022-07-09 08:33:17.909912: This epoch took 79.270021 s

2022-07-09 08:33:17.935844: 
epoch:  239
2022-07-09 08:34:29.224823: train loss : -0.8752
2022-07-09 08:34:34.753665: validation loss: -0.7133
2022-07-09 08:34:34.778280: Average global foreground Dice: [0.79]
2022-07-09 08:34:34.793929: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:34:35.506160: Suus1 maybe_update_lr lr: 0.005551
2022-07-09 08:34:35.536032: This epoch took 77.593810 s

2022-07-09 08:34:35.557705: 
epoch:  240
2022-07-09 08:35:46.330290: train loss : -0.8727
2022-07-09 08:35:51.394346: validation loss: -0.6946
2022-07-09 08:35:51.397830: Average global foreground Dice: [0.7757]
2022-07-09 08:35:51.416886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:35:52.419647: Suus1 maybe_update_lr lr: 0.005532
2022-07-09 08:35:52.440928: This epoch took 76.829045 s

2022-07-09 08:35:52.459366: 
epoch:  241
2022-07-09 08:37:05.283897: train loss : -0.8734
2022-07-09 08:37:11.157246: validation loss: -0.7428
2022-07-09 08:37:11.189548: Average global foreground Dice: [0.8159]
2022-07-09 08:37:11.209376: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:37:11.801872: Suus1 maybe_update_lr lr: 0.005513
2022-07-09 08:37:11.824563: This epoch took 79.337705 s

2022-07-09 08:37:11.859855: 
epoch:  242
2022-07-09 08:38:23.932352: train loss : -0.8730
2022-07-09 08:38:30.402046: validation loss: -0.7249
2022-07-09 08:38:30.436268: Average global foreground Dice: [0.7912]
2022-07-09 08:38:30.448875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:38:31.237431: Suus1 maybe_update_lr lr: 0.005494
2022-07-09 08:38:31.258919: This epoch took 79.377044 s

2022-07-09 08:38:31.284855: 
epoch:  243
2022-07-09 08:39:42.432495: train loss : -0.8708
2022-07-09 08:39:47.968551: validation loss: -0.7510
2022-07-09 08:39:47.990388: Average global foreground Dice: [0.8112]
2022-07-09 08:39:48.012003: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:39:48.618315: Suus1 maybe_update_lr lr: 0.005474
2022-07-09 08:39:48.628027: This epoch took 77.319151 s

2022-07-09 08:39:48.649850: 
epoch:  244
2022-07-09 08:40:59.976521: train loss : -0.8824
2022-07-09 08:41:05.597484: validation loss: -0.7313
2022-07-09 08:41:05.615314: Average global foreground Dice: [0.8001]
2022-07-09 08:41:05.634867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:41:06.469229: Suus1 maybe_update_lr lr: 0.005455
2022-07-09 08:41:06.513918: This epoch took 77.831051 s

2022-07-09 08:41:06.543999: 
epoch:  245
2022-07-09 08:42:20.188096: train loss : -0.8737
2022-07-09 08:42:26.761386: validation loss: -0.7404
2022-07-09 08:42:26.793251: Average global foreground Dice: [0.8014]
2022-07-09 08:42:26.805886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:42:27.571363: Suus1 maybe_update_lr lr: 0.005436
2022-07-09 08:42:27.603906: This epoch took 81.039817 s

2022-07-09 08:42:27.621971: 
epoch:  246
2022-07-09 08:43:39.845207: train loss : -0.8765
2022-07-09 08:43:45.298770: validation loss: -0.7192
2022-07-09 08:43:45.330270: Average global foreground Dice: [0.7851]
2022-07-09 08:43:45.346892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:43:45.939374: Suus1 maybe_update_lr lr: 0.005417
2022-07-09 08:43:45.960907: This epoch took 78.318931 s

2022-07-09 08:43:45.982869: 
epoch:  247
2022-07-09 08:44:57.749018: train loss : -0.8791
2022-07-09 08:45:03.894422: validation loss: -0.7449
2022-07-09 08:45:03.922185: Average global foreground Dice: [0.8095]
2022-07-09 08:45:03.947286: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:45:04.692917: Suus1 maybe_update_lr lr: 0.005397
2022-07-09 08:45:04.713881: This epoch took 78.711022 s

2022-07-09 08:45:04.732775: 
epoch:  248
2022-07-09 08:46:17.480584: train loss : -0.8786
2022-07-09 08:46:22.516654: validation loss: -0.7245
2022-07-09 08:46:22.552299: Average global foreground Dice: [0.7933]
2022-07-09 08:46:22.581311: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:46:23.262726: Suus1 maybe_update_lr lr: 0.005378
2022-07-09 08:46:23.309229: This epoch took 78.558375 s

2022-07-09 08:46:23.325401: 
epoch:  249
2022-07-09 08:47:36.344005: train loss : -0.8793
2022-07-09 08:47:42.341344: validation loss: -0.7635
2022-07-09 08:47:42.385313: Average global foreground Dice: [0.819]
2022-07-09 08:47:42.406872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:47:43.108249: Suus1 maybe_update_lr lr: 0.005359
2022-07-09 08:47:43.130570: saving scheduled checkpoint file...
2022-07-09 08:47:43.268969: saving checkpoint...
2022-07-09 08:47:44.738753: done, saving took 1.61 seconds
2022-07-09 08:47:44.757249: done
2022-07-09 08:47:44.759307: This epoch took 81.412447 s

2022-07-09 08:47:44.761202: 
epoch:  250
2022-07-09 08:48:55.977003: train loss : -0.8816
2022-07-09 08:49:02.770158: validation loss: -0.7196
2022-07-09 08:49:02.802231: Average global foreground Dice: [0.7934]
2022-07-09 08:49:02.814878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:49:03.734803: Suus1 maybe_update_lr lr: 0.00534
2022-07-09 08:49:03.777883: This epoch took 79.014742 s

2022-07-09 08:49:03.810871: 
epoch:  251
2022-07-09 08:50:14.657714: train loss : -0.8820
2022-07-09 08:50:20.634939: validation loss: -0.7409
2022-07-09 08:50:20.638204: Average global foreground Dice: [0.8032]
2022-07-09 08:50:20.640760: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:50:21.235032: Suus1 maybe_update_lr lr: 0.00532
2022-07-09 08:50:21.254905: This epoch took 77.414893 s

2022-07-09 08:50:21.297574: 
epoch:  252
2022-07-09 08:51:34.774044: train loss : -0.8802
2022-07-09 08:51:41.447379: validation loss: -0.7504
2022-07-09 08:51:41.473310: Average global foreground Dice: [0.8094]
2022-07-09 08:51:41.506174: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:51:42.220648: Suus1 maybe_update_lr lr: 0.005301
2022-07-09 08:51:42.231512: This epoch took 80.918768 s

2022-07-09 08:51:42.251851: 
epoch:  253
2022-07-09 08:52:54.765315: train loss : -0.8830
2022-07-09 08:53:00.087487: validation loss: -0.7444
2022-07-09 08:53:00.122342: Average global foreground Dice: [0.8042]
2022-07-09 08:53:00.143884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:53:01.029154: Suus1 maybe_update_lr lr: 0.005282
2022-07-09 08:53:01.058962: This epoch took 78.788301 s

2022-07-09 08:53:01.080847: 
epoch:  254
2022-07-09 08:54:13.545232: train loss : -0.8828
2022-07-09 08:54:19.446213: validation loss: -0.7312
2022-07-09 08:54:19.487280: Average global foreground Dice: [0.7901]
2022-07-09 08:54:19.513468: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:54:20.419104: Suus1 maybe_update_lr lr: 0.005262
2022-07-09 08:54:20.450285: This epoch took 79.351188 s

2022-07-09 08:54:20.469860: 
epoch:  255
2022-07-09 08:55:32.875214: train loss : -0.8744
2022-07-09 08:55:38.336188: validation loss: -0.7517
2022-07-09 08:55:38.372270: Average global foreground Dice: [0.8072]
2022-07-09 08:55:38.384876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:55:39.136361: Suus1 maybe_update_lr lr: 0.005243
2022-07-09 08:55:39.157912: This epoch took 78.677238 s

2022-07-09 08:55:39.192964: 
epoch:  256
2022-07-09 08:56:50.269011: train loss : -0.8785
2022-07-09 08:56:56.493138: validation loss: -0.7327
2022-07-09 08:56:56.509624: Average global foreground Dice: [0.8052]
2022-07-09 08:56:56.539150: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:56:57.212030: Suus1 maybe_update_lr lr: 0.005224
2022-07-09 08:56:57.232895: This epoch took 78.018023 s

2022-07-09 08:56:57.258461: 
epoch:  257
2022-07-09 08:58:11.077108: train loss : -0.8828
2022-07-09 08:58:17.207221: validation loss: -0.7437
2022-07-09 08:58:17.237765: Average global foreground Dice: [0.8052]
2022-07-09 08:58:17.250999: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:58:17.919186: Suus1 maybe_update_lr lr: 0.005204
2022-07-09 08:58:17.950073: This epoch took 80.681088 s

2022-07-09 08:58:17.971955: 
epoch:  258
2022-07-09 08:59:30.761476: train loss : -0.8849
2022-07-09 08:59:36.271076: validation loss: -0.7548
2022-07-09 08:59:36.304412: Average global foreground Dice: [0.8103]
2022-07-09 08:59:36.338876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 08:59:36.923342: Suus1 maybe_update_lr lr: 0.005185
2022-07-09 08:59:36.944968: This epoch took 78.954764 s

2022-07-09 08:59:36.963942: 
epoch:  259
2022-07-09 09:00:49.660948: train loss : -0.8830
2022-07-09 09:00:55.165446: validation loss: -0.7455
2022-07-09 09:00:55.198338: Average global foreground Dice: [0.8076]
2022-07-09 09:00:55.219868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:00:56.040471: Suus1 maybe_update_lr lr: 0.005166
2022-07-09 09:00:56.072928: This epoch took 79.093856 s

2022-07-09 09:00:56.105856: 
epoch:  260
2022-07-09 09:02:08.958907: train loss : -0.8826
2022-07-09 09:02:14.963206: validation loss: -0.7551
2022-07-09 09:02:14.988650: Average global foreground Dice: [0.8123]
2022-07-09 09:02:15.002869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:02:15.546560: Suus1 maybe_update_lr lr: 0.005146
2022-07-09 09:02:15.575896: This epoch took 79.424222 s

2022-07-09 09:02:15.605665: 
epoch:  261
2022-07-09 09:03:27.570907: train loss : -0.8850
2022-07-09 09:03:33.221476: validation loss: -0.7507
2022-07-09 09:03:33.237206: Average global foreground Dice: [0.8088]
2022-07-09 09:03:33.241805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:03:34.224583: Suus1 maybe_update_lr lr: 0.005127
2022-07-09 09:03:34.245913: This epoch took 78.608058 s

2022-07-09 09:03:34.267866: 
epoch:  262
2022-07-09 09:04:47.388542: train loss : -0.8871
2022-07-09 09:04:53.031360: validation loss: -0.7204
2022-07-09 09:04:53.062277: Average global foreground Dice: [0.7945]
2022-07-09 09:04:53.095805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:04:53.851925: Suus1 maybe_update_lr lr: 0.005107
2022-07-09 09:04:53.873892: This epoch took 79.578032 s

2022-07-09 09:04:53.906865: 
epoch:  263
2022-07-09 09:06:06.255215: train loss : -0.8862
2022-07-09 09:06:11.657257: validation loss: -0.7487
2022-07-09 09:06:11.682684: Average global foreground Dice: [0.8129]
2022-07-09 09:06:11.702439: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:06:12.280413: Suus1 maybe_update_lr lr: 0.005088
2022-07-09 09:06:12.301941: This epoch took 78.373078 s

2022-07-09 09:06:12.316865: 
epoch:  264
2022-07-09 09:07:25.122255: train loss : -0.8909
2022-07-09 09:07:31.085288: validation loss: -0.7457
2022-07-09 09:07:31.126335: Average global foreground Dice: [0.8065]
2022-07-09 09:07:31.139858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:07:31.923814: Suus1 maybe_update_lr lr: 0.005069
2022-07-09 09:07:31.951989: This epoch took 79.612921 s

2022-07-09 09:07:31.968403: 
epoch:  265
2022-07-09 09:08:44.430194: train loss : -0.8895
2022-07-09 09:08:50.339731: validation loss: -0.7473
2022-07-09 09:08:50.364396: Average global foreground Dice: [0.8158]
2022-07-09 09:08:50.377845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:08:51.045486: Suus1 maybe_update_lr lr: 0.005049
2022-07-09 09:08:51.061198: This epoch took 79.082695 s

2022-07-09 09:08:51.088246: 
epoch:  266
2022-07-09 09:10:02.505753: train loss : -0.8899
2022-07-09 09:10:07.738253: validation loss: -0.7694
2022-07-09 09:10:07.764542: Average global foreground Dice: [0.8233]
2022-07-09 09:10:07.796888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:10:08.686755: Suus1 maybe_update_lr lr: 0.00503
2022-07-09 09:10:08.710930: saving best epoch checkpoint...
2022-07-09 09:10:08.869779: saving checkpoint...
2022-07-09 09:10:10.623093: done, saving took 1.90 seconds
2022-07-09 09:10:10.640620: This epoch took 79.528352 s

2022-07-09 09:10:10.642610: 
epoch:  267
2022-07-09 09:11:21.187439: train loss : -0.8915
2022-07-09 09:11:27.503987: validation loss: -0.7238
2022-07-09 09:11:27.524193: Average global foreground Dice: [0.7988]
2022-07-09 09:11:27.553869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:11:28.387388: Suus1 maybe_update_lr lr: 0.00501
2022-07-09 09:11:28.396909: This epoch took 77.752131 s

2022-07-09 09:11:28.414937: 
epoch:  268
2022-07-09 09:12:40.129657: train loss : -0.8916
2022-07-09 09:12:46.035600: validation loss: -0.7191
2022-07-09 09:12:46.068381: Average global foreground Dice: [0.7923]
2022-07-09 09:12:46.100902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:12:46.979999: Suus1 maybe_update_lr lr: 0.004991
2022-07-09 09:12:47.005635: This epoch took 78.569474 s

2022-07-09 09:12:47.029861: 
epoch:  269
2022-07-09 09:13:59.569880: train loss : -0.8896
2022-07-09 09:14:05.312352: validation loss: -0.7337
2022-07-09 09:14:05.332406: Average global foreground Dice: [0.8006]
2022-07-09 09:14:05.356885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:14:06.101419: Suus1 maybe_update_lr lr: 0.004971
2022-07-09 09:14:06.141909: This epoch took 79.109620 s

2022-07-09 09:14:06.157451: 
epoch:  270
2022-07-09 09:15:19.609279: train loss : -0.8929
2022-07-09 09:15:25.620144: validation loss: -0.7235
2022-07-09 09:15:25.657244: Average global foreground Dice: [0.7969]
2022-07-09 09:15:25.679964: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:15:26.476213: Suus1 maybe_update_lr lr: 0.004952
2022-07-09 09:15:26.494811: This epoch took 80.298918 s

2022-07-09 09:15:26.497173: 
epoch:  271
2022-07-09 09:16:38.811421: train loss : -0.8923
2022-07-09 09:16:44.703696: validation loss: -0.7543
2022-07-09 09:16:44.723666: Average global foreground Dice: [0.8126]
2022-07-09 09:16:44.731764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:16:45.595003: Suus1 maybe_update_lr lr: 0.004933
2022-07-09 09:16:45.602908: This epoch took 79.103721 s

2022-07-09 09:16:45.614519: 
epoch:  272
2022-07-09 09:17:56.566108: train loss : -0.8960
2022-07-09 09:18:02.198590: validation loss: -0.7341
2022-07-09 09:18:02.243379: Average global foreground Dice: [0.8045]
2022-07-09 09:18:02.264871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:18:03.236705: Suus1 maybe_update_lr lr: 0.004913
2022-07-09 09:18:03.252911: This epoch took 77.634833 s

2022-07-09 09:18:03.284244: 
epoch:  273
2022-07-09 09:19:14.570638: train loss : -0.8992
2022-07-09 09:19:20.403644: validation loss: -0.7213
2022-07-09 09:19:20.432144: Average global foreground Dice: [0.7945]
2022-07-09 09:19:20.441842: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:19:21.188381: Suus1 maybe_update_lr lr: 0.004894
2022-07-09 09:19:21.209893: This epoch took 77.905469 s

2022-07-09 09:19:21.244855: 
epoch:  274
2022-07-09 09:20:33.199501: train loss : -0.8934
2022-07-09 09:20:38.994273: validation loss: -0.7532
2022-07-09 09:20:39.033458: Average global foreground Dice: [0.8157]
2022-07-09 09:20:39.054872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:20:39.799298: Suus1 maybe_update_lr lr: 0.004874
2022-07-09 09:20:39.828909: This epoch took 78.576168 s

2022-07-09 09:20:39.867537: 
epoch:  275
2022-07-09 09:21:50.429295: train loss : -0.8921
2022-07-09 09:21:56.019682: validation loss: -0.7526
2022-07-09 09:21:56.054237: Average global foreground Dice: [0.8073]
2022-07-09 09:21:56.066863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:21:56.728168: Suus1 maybe_update_lr lr: 0.004855
2022-07-09 09:21:56.749892: This epoch took 76.862107 s

2022-07-09 09:21:56.772858: 
epoch:  276
2022-07-09 09:23:08.974162: train loss : -0.8944
2022-07-09 09:23:14.360496: validation loss: -0.7206
2022-07-09 09:23:14.394575: Average global foreground Dice: [0.7948]
2022-07-09 09:23:14.414937: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:23:15.138482: Suus1 maybe_update_lr lr: 0.004835
2022-07-09 09:23:15.159914: This epoch took 78.375057 s

2022-07-09 09:23:15.180857: 
epoch:  277
2022-07-09 09:24:25.744066: train loss : -0.8941
2022-07-09 09:24:30.951045: validation loss: -0.7311
2022-07-09 09:24:30.978376: Average global foreground Dice: [0.7997]
2022-07-09 09:24:30.998101: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:24:31.817939: Suus1 maybe_update_lr lr: 0.004816
2022-07-09 09:24:31.826217: This epoch took 76.623339 s

2022-07-09 09:24:31.852937: 
epoch:  278
2022-07-09 09:25:44.478198: train loss : -0.8938
2022-07-09 09:25:49.871740: validation loss: -0.7601
2022-07-09 09:25:49.917808: Average global foreground Dice: [0.8175]
2022-07-09 09:25:49.940879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:25:50.797349: Suus1 maybe_update_lr lr: 0.004796
2022-07-09 09:25:50.829887: This epoch took 78.954586 s

2022-07-09 09:25:50.862860: 
epoch:  279
2022-07-09 09:27:02.852396: train loss : -0.8951
2022-07-09 09:27:08.419582: validation loss: -0.7440
2022-07-09 09:27:08.450843: Average global foreground Dice: [0.8127]
2022-07-09 09:27:08.475881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:27:09.311410: Suus1 maybe_update_lr lr: 0.004776
2022-07-09 09:27:09.314711: This epoch took 78.418854 s

2022-07-09 09:27:09.336530: 
epoch:  280
2022-07-09 09:28:21.957932: train loss : -0.8892
2022-07-09 09:28:27.815210: validation loss: -0.7309
2022-07-09 09:28:27.851259: Average global foreground Dice: [0.8028]
2022-07-09 09:28:27.872868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:28:28.583050: Suus1 maybe_update_lr lr: 0.004757
2022-07-09 09:28:28.603880: This epoch took 79.235737 s

2022-07-09 09:28:28.607459: 
epoch:  281
2022-07-09 09:29:40.469315: train loss : -0.8921
2022-07-09 09:29:46.040469: validation loss: -0.7431
2022-07-09 09:29:46.067219: Average global foreground Dice: [0.8161]
2022-07-09 09:29:46.082160: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:29:46.769890: Suus1 maybe_update_lr lr: 0.004737
2022-07-09 09:29:46.798141: This epoch took 78.159264 s

2022-07-09 09:29:46.812681: 
epoch:  282
2022-07-09 09:30:58.703018: train loss : -0.8923
2022-07-09 09:31:04.281005: validation loss: -0.7468
2022-07-09 09:31:04.337390: Average global foreground Dice: [0.8086]
2022-07-09 09:31:04.368206: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:31:04.846639: Suus1 maybe_update_lr lr: 0.004718
2022-07-09 09:31:04.868054: This epoch took 78.047535 s

2022-07-09 09:31:04.889855: 
epoch:  283
2022-07-09 09:32:17.979780: train loss : -0.8882
2022-07-09 09:32:23.389985: validation loss: -0.7538
2022-07-09 09:32:23.427087: Average global foreground Dice: [0.8148]
2022-07-09 09:32:23.447562: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:32:24.368520: Suus1 maybe_update_lr lr: 0.004698
2022-07-09 09:32:24.390023: This epoch took 79.479896 s

2022-07-09 09:32:24.412511: 
epoch:  284
2022-07-09 09:33:36.557808: train loss : -0.8916
2022-07-09 09:33:42.127556: validation loss: -0.7466
2022-07-09 09:33:42.158332: Average global foreground Dice: [0.8023]
2022-07-09 09:33:42.178120: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:33:42.966450: Suus1 maybe_update_lr lr: 0.004679
2022-07-09 09:33:42.987973: This epoch took 78.546214 s

2022-07-09 09:33:43.009870: 
epoch:  285
2022-07-09 09:34:55.532438: train loss : -0.8943
2022-07-09 09:35:01.862828: validation loss: -0.6921
2022-07-09 09:35:01.903268: Average global foreground Dice: [0.7818]
2022-07-09 09:35:01.915875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:35:02.513026: Suus1 maybe_update_lr lr: 0.004659
2022-07-09 09:35:02.527947: This epoch took 79.497817 s

2022-07-09 09:35:02.555860: 
epoch:  286
2022-07-09 09:36:15.423046: train loss : -0.8920
2022-07-09 09:36:21.254012: validation loss: -0.7335
2022-07-09 09:36:21.281639: Average global foreground Dice: [0.7975]
2022-07-09 09:36:21.309885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:36:21.939965: Suus1 maybe_update_lr lr: 0.004639
2022-07-09 09:36:21.982903: This epoch took 79.397986 s

2022-07-09 09:36:21.987048: 
epoch:  287
2022-07-09 09:37:34.312893: train loss : -0.8954
2022-07-09 09:37:40.359468: validation loss: -0.7287
2022-07-09 09:37:40.394242: Average global foreground Dice: [0.7942]
2022-07-09 09:37:40.423138: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:37:41.032626: Suus1 maybe_update_lr lr: 0.00462
2022-07-09 09:37:41.054782: This epoch took 79.055564 s

2022-07-09 09:37:41.075892: 
epoch:  288
2022-07-09 09:38:54.110274: train loss : -0.8937
2022-07-09 09:38:59.705917: validation loss: -0.7279
2022-07-09 09:38:59.749262: Average global foreground Dice: [0.7985]
2022-07-09 09:38:59.772867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:39:00.496220: Suus1 maybe_update_lr lr: 0.0046
2022-07-09 09:39:00.528895: This epoch took 79.440022 s

2022-07-09 09:39:00.550847: 
epoch:  289
2022-07-09 09:40:15.561403: train loss : -0.8958
2022-07-09 09:40:22.367246: validation loss: -0.7755
2022-07-09 09:40:22.370309: Average global foreground Dice: [0.83]
2022-07-09 09:40:22.372399: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:40:22.946318: Suus1 maybe_update_lr lr: 0.004581
2022-07-09 09:40:22.957782: This epoch took 82.387873 s

2022-07-09 09:40:22.983483: 
epoch:  290
2022-07-09 09:41:36.400449: train loss : -0.8924
2022-07-09 09:41:41.879183: validation loss: -0.7330
2022-07-09 09:41:41.908300: Average global foreground Dice: [0.8015]
2022-07-09 09:41:41.940875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:41:42.784955: Suus1 maybe_update_lr lr: 0.004561
2022-07-09 09:41:42.804546: This epoch took 79.799679 s

2022-07-09 09:41:42.806949: 
epoch:  291
2022-07-09 09:42:55.613932: train loss : -0.8953
2022-07-09 09:43:01.784154: validation loss: -0.7438
2022-07-09 09:43:01.819219: Average global foreground Dice: [0.8161]
2022-07-09 09:43:01.840312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:43:02.637505: Suus1 maybe_update_lr lr: 0.004541
2022-07-09 09:43:02.658983: This epoch took 79.849895 s

2022-07-09 09:43:02.680859: 
epoch:  292
2022-07-09 09:44:13.896581: train loss : -0.8985
2022-07-09 09:44:19.811798: validation loss: -0.7199
2022-07-09 09:44:19.835267: Average global foreground Dice: [0.7953]
2022-07-09 09:44:19.858109: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:44:20.522593: Suus1 maybe_update_lr lr: 0.004522
2022-07-09 09:44:20.544099: This epoch took 77.842975 s

2022-07-09 09:44:20.569860: 
epoch:  293
2022-07-09 09:45:33.182018: train loss : -0.8973
2022-07-09 09:45:38.486881: validation loss: -0.7203
2022-07-09 09:45:38.525239: Average global foreground Dice: [0.7899]
2022-07-09 09:45:38.543902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:45:39.326264: Suus1 maybe_update_lr lr: 0.004502
2022-07-09 09:45:39.346900: This epoch took 78.755016 s

2022-07-09 09:45:39.368790: 
epoch:  294
2022-07-09 09:46:51.352915: train loss : -0.8931
2022-07-09 09:46:57.272493: validation loss: -0.7439
2022-07-09 09:46:57.319786: Average global foreground Dice: [0.8047]
2022-07-09 09:46:57.340870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:46:58.030817: Suus1 maybe_update_lr lr: 0.004482
2022-07-09 09:46:58.058976: This epoch took 78.660110 s

2022-07-09 09:46:58.080890: 
epoch:  295
2022-07-09 09:48:09.098929: train loss : -0.8957
2022-07-09 09:48:15.353811: validation loss: -0.7237
2022-07-09 09:48:15.387264: Average global foreground Dice: [0.8032]
2022-07-09 09:48:15.408881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:48:16.285826: Suus1 maybe_update_lr lr: 0.004463
2022-07-09 09:48:16.315901: This epoch took 78.202046 s

2022-07-09 09:48:16.335026: 
epoch:  296
2022-07-09 09:49:27.876615: train loss : -0.8979
2022-07-09 09:49:33.943182: validation loss: -0.7453
2022-07-09 09:49:33.974249: Average global foreground Dice: [0.8119]
2022-07-09 09:49:34.015886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:49:34.787288: Suus1 maybe_update_lr lr: 0.004443
2022-07-09 09:49:34.811278: This epoch took 78.445524 s

2022-07-09 09:49:34.820368: 
epoch:  297
2022-07-09 09:50:46.215887: train loss : -0.9001
2022-07-09 09:50:51.799238: validation loss: -0.7347
2022-07-09 09:50:51.846275: Average global foreground Dice: [0.8061]
2022-07-09 09:50:51.868615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:50:52.543701: Suus1 maybe_update_lr lr: 0.004423
2022-07-09 09:50:52.564937: This epoch took 77.742632 s

2022-07-09 09:50:52.586848: 
epoch:  298
2022-07-09 09:52:05.658849: train loss : -0.9000
2022-07-09 09:52:11.775989: validation loss: -0.7467
2022-07-09 09:52:11.809261: Average global foreground Dice: [0.8104]
2022-07-09 09:52:11.825828: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:52:12.495322: Suus1 maybe_update_lr lr: 0.004404
2022-07-09 09:52:12.516930: This epoch took 79.908067 s

2022-07-09 09:52:12.538869: 
epoch:  299
2022-07-09 09:53:23.091376: train loss : -0.8973
2022-07-09 09:53:28.401922: validation loss: -0.7168
2022-07-09 09:53:28.442846: Average global foreground Dice: [0.8008]
2022-07-09 09:53:28.472865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:53:29.265517: Suus1 maybe_update_lr lr: 0.004384
2022-07-09 09:53:29.286859: saving scheduled checkpoint file...
2022-07-09 09:53:29.421845: saving checkpoint...
2022-07-09 09:53:30.866941: done, saving took 1.55 seconds
2022-07-09 09:53:30.933929: done
2022-07-09 09:53:30.951349: This epoch took 78.390472 s

2022-07-09 09:53:30.954249: 
epoch:  300
2022-07-09 09:54:41.564022: train loss : -0.9015
2022-07-09 09:54:47.717809: validation loss: -0.7104
2022-07-09 09:54:47.745487: Average global foreground Dice: [0.7865]
2022-07-09 09:54:47.764593: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:54:48.412163: Suus1 maybe_update_lr lr: 0.004364
2022-07-09 09:54:48.462937: This epoch took 77.485940 s

2022-07-09 09:54:48.484879: 
epoch:  301
2022-07-09 09:55:59.187895: train loss : -0.8986
2022-07-09 09:56:05.276074: validation loss: -0.7367
2022-07-09 09:56:05.305229: Average global foreground Dice: [0.8102]
2022-07-09 09:56:05.324866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:56:05.939255: Suus1 maybe_update_lr lr: 0.004344
2022-07-09 09:56:05.960926: This epoch took 77.467283 s

2022-07-09 09:56:05.980985: 
epoch:  302
2022-07-09 09:57:17.761589: train loss : -0.9007
2022-07-09 09:57:23.170447: validation loss: -0.7406
2022-07-09 09:57:23.226246: Average global foreground Dice: [0.8047]
2022-07-09 09:57:23.258875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:57:23.981326: Suus1 maybe_update_lr lr: 0.004325
2022-07-09 09:57:23.986616: This epoch took 77.992735 s

2022-07-09 09:57:24.015865: 
epoch:  303
2022-07-09 09:58:34.664025: train loss : -0.9033
2022-07-09 09:58:40.232140: validation loss: -0.7496
2022-07-09 09:58:40.259295: Average global foreground Dice: [0.811]
2022-07-09 09:58:40.285883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:58:41.024425: Suus1 maybe_update_lr lr: 0.004305
2022-07-09 09:58:41.035809: This epoch took 76.986942 s

2022-07-09 09:58:41.041928: 
epoch:  304
2022-07-09 09:59:52.915973: train loss : -0.9020
2022-07-09 09:59:58.736863: validation loss: -0.7401
2022-07-09 09:59:58.760292: Average global foreground Dice: [0.8141]
2022-07-09 09:59:58.777866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 09:59:59.473824: Suus1 maybe_update_lr lr: 0.004285
2022-07-09 09:59:59.490912: This epoch took 78.441917 s

2022-07-09 09:59:59.512512: 
epoch:  305
2022-07-09 10:01:11.945164: train loss : -0.8980
2022-07-09 10:01:17.385998: validation loss: -0.7586
2022-07-09 10:01:17.414452: Average global foreground Dice: [0.8181]
2022-07-09 10:01:17.430012: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:01:18.106387: Suus1 maybe_update_lr lr: 0.004265
2022-07-09 10:01:18.146896: This epoch took 78.610060 s

2022-07-09 10:01:18.179859: 
epoch:  306
2022-07-09 10:02:31.173019: train loss : -0.8979
2022-07-09 10:02:37.836358: validation loss: -0.7316
2022-07-09 10:02:37.873198: Average global foreground Dice: [0.8062]
2022-07-09 10:02:37.882691: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:02:38.491387: Suus1 maybe_update_lr lr: 0.004245
2022-07-09 10:02:38.510914: This epoch took 80.298050 s

2022-07-09 10:02:38.535861: 
epoch:  307
2022-07-09 10:03:50.395557: train loss : -0.8982
2022-07-09 10:03:55.913287: validation loss: -0.7302
2022-07-09 10:03:55.952391: Average global foreground Dice: [0.8077]
2022-07-09 10:03:55.973883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:03:56.744174: Suus1 maybe_update_lr lr: 0.004226
2022-07-09 10:03:56.773905: This epoch took 78.216039 s

2022-07-09 10:03:56.780664: 
epoch:  308
2022-07-09 10:05:09.673356: train loss : -0.9001
2022-07-09 10:05:15.436394: validation loss: -0.7471
2022-07-09 10:05:15.471251: Average global foreground Dice: [0.8103]
2022-07-09 10:05:15.492867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:05:16.105049: Suus1 maybe_update_lr lr: 0.004206
2022-07-09 10:05:16.107745: This epoch took 79.324609 s

2022-07-09 10:05:16.137843: 
epoch:  309
2022-07-09 10:06:28.672988: train loss : -0.9021
2022-07-09 10:06:34.691015: validation loss: -0.7373
2022-07-09 10:06:34.721611: Average global foreground Dice: [0.8065]
2022-07-09 10:06:34.757879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:06:35.637337: Suus1 maybe_update_lr lr: 0.004186
2022-07-09 10:06:35.658893: This epoch took 79.488017 s

2022-07-09 10:06:35.680862: 
epoch:  310
2022-07-09 10:07:49.513788: train loss : -0.9023
2022-07-09 10:07:54.883006: validation loss: -0.7318
2022-07-09 10:07:54.914321: Average global foreground Dice: [0.8096]
2022-07-09 10:07:54.926873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:07:55.759888: Suus1 maybe_update_lr lr: 0.004166
2022-07-09 10:07:55.791922: This epoch took 80.087045 s

2022-07-09 10:07:55.813859: 
epoch:  311
2022-07-09 10:09:08.111247: train loss : -0.9002
2022-07-09 10:09:13.726524: validation loss: -0.7544
2022-07-09 10:09:13.773297: Average global foreground Dice: [0.822]
2022-07-09 10:09:13.775701: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:09:14.873451: Suus1 maybe_update_lr lr: 0.004146
2022-07-09 10:09:14.894878: saving best epoch checkpoint...
2022-07-09 10:09:14.999220: saving checkpoint...
2022-07-09 10:09:16.552027: done, saving took 1.64 seconds
2022-07-09 10:09:16.567536: This epoch took 80.737539 s

2022-07-09 10:09:16.569616: 
epoch:  312
2022-07-09 10:10:27.430977: train loss : -0.8981
2022-07-09 10:10:32.922093: validation loss: -0.6992
2022-07-09 10:10:32.963400: Average global foreground Dice: [0.7825]
2022-07-09 10:10:32.988578: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:10:33.768002: Suus1 maybe_update_lr lr: 0.004127
2022-07-09 10:10:33.785938: This epoch took 77.214449 s

2022-07-09 10:10:33.809242: 
epoch:  313
2022-07-09 10:11:46.369023: train loss : -0.8991
2022-07-09 10:11:52.532820: validation loss: -0.7235
2022-07-09 10:11:52.553669: Average global foreground Dice: [0.7938]
2022-07-09 10:11:52.568372: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:11:53.135314: Suus1 maybe_update_lr lr: 0.004107
2022-07-09 10:11:53.167921: This epoch took 79.336978 s

2022-07-09 10:11:53.200867: 
epoch:  314
2022-07-09 10:13:05.220976: train loss : -0.9003
2022-07-09 10:13:11.228964: validation loss: -0.7578
2022-07-09 10:13:11.249292: Average global foreground Dice: [0.8188]
2022-07-09 10:13:11.279882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:13:11.903299: Suus1 maybe_update_lr lr: 0.004087
2022-07-09 10:13:11.945068: This epoch took 78.712088 s

2022-07-09 10:13:11.959085: 
epoch:  315
2022-07-09 10:14:23.910328: train loss : -0.9023
2022-07-09 10:14:30.087683: validation loss: -0.7211
2022-07-09 10:14:30.108522: Average global foreground Dice: [0.7981]
2022-07-09 10:14:30.148226: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:14:31.107718: Suus1 maybe_update_lr lr: 0.004067
2022-07-09 10:14:31.128999: This epoch took 79.134287 s

2022-07-09 10:14:31.150863: 
epoch:  316
2022-07-09 10:15:43.229870: train loss : -0.9033
2022-07-09 10:15:49.832242: validation loss: -0.7466
2022-07-09 10:15:49.863324: Average global foreground Dice: [0.8063]
2022-07-09 10:15:49.890860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:15:50.451203: Suus1 maybe_update_lr lr: 0.004047
2022-07-09 10:15:50.488903: This epoch took 79.321309 s

2022-07-09 10:15:50.509693: 
epoch:  317
2022-07-09 10:17:01.345803: train loss : -0.9038
2022-07-09 10:17:07.731210: validation loss: -0.7460
2022-07-09 10:17:07.800367: Average global foreground Dice: [0.8049]
2022-07-09 10:17:07.821877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:17:08.555594: Suus1 maybe_update_lr lr: 0.004027
2022-07-09 10:17:08.576967: This epoch took 78.055091 s

2022-07-09 10:17:08.598862: 
epoch:  318
2022-07-09 10:18:20.921392: train loss : -0.9036
2022-07-09 10:18:26.491619: validation loss: -0.7276
2022-07-09 10:18:26.527279: Average global foreground Dice: [0.7981]
2022-07-09 10:18:26.558890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:18:27.425625: Suus1 maybe_update_lr lr: 0.004007
2022-07-09 10:18:27.463903: This epoch took 78.834769 s

2022-07-09 10:18:27.483854: 
epoch:  319
2022-07-09 10:19:39.491005: train loss : -0.9056
2022-07-09 10:19:45.720338: validation loss: -0.7591
2022-07-09 10:19:45.745269: Average global foreground Dice: [0.819]
2022-07-09 10:19:45.750863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:19:46.399714: Suus1 maybe_update_lr lr: 0.003987
2022-07-09 10:19:46.420901: This epoch took 78.917031 s

2022-07-09 10:19:46.446851: 
epoch:  320
2022-07-09 10:20:58.537254: train loss : -0.9049
2022-07-09 10:21:04.618120: validation loss: -0.7347
2022-07-09 10:21:04.643734: Average global foreground Dice: [0.8078]
2022-07-09 10:21:04.671929: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:21:05.464785: Suus1 maybe_update_lr lr: 0.003967
2022-07-09 10:21:05.502503: This epoch took 79.042642 s

2022-07-09 10:21:05.529851: 
epoch:  321
2022-07-09 10:22:17.182104: train loss : -0.9030
2022-07-09 10:22:23.079380: validation loss: -0.7395
2022-07-09 10:22:23.108346: Average global foreground Dice: [0.8048]
2022-07-09 10:22:23.140011: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:22:23.768360: Suus1 maybe_update_lr lr: 0.003947
2022-07-09 10:22:23.791127: This epoch took 78.248358 s

2022-07-09 10:22:23.813993: 
epoch:  322
2022-07-09 10:23:35.363216: train loss : -0.9067
2022-07-09 10:23:41.013219: validation loss: -0.7173
2022-07-09 10:23:41.051341: Average global foreground Dice: [0.7885]
2022-07-09 10:23:41.070508: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:23:42.018805: Suus1 maybe_update_lr lr: 0.003927
2022-07-09 10:23:42.039993: This epoch took 78.207125 s

2022-07-09 10:23:42.059988: 
epoch:  323
2022-07-09 10:24:53.968244: train loss : -0.9050
2022-07-09 10:25:00.267159: validation loss: -0.7324
2022-07-09 10:25:00.294290: Average global foreground Dice: [0.8136]
2022-07-09 10:25:00.325301: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:25:01.053437: Suus1 maybe_update_lr lr: 0.003907
2022-07-09 10:25:01.069922: This epoch took 78.999207 s

2022-07-09 10:25:01.072104: 
epoch:  324
2022-07-09 10:26:13.426135: train loss : -0.9004
2022-07-09 10:26:18.510413: validation loss: -0.7359
2022-07-09 10:26:18.535281: Average global foreground Dice: [0.7991]
2022-07-09 10:26:18.555694: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:26:19.420454: Suus1 maybe_update_lr lr: 0.003887
2022-07-09 10:26:19.436898: This epoch took 78.362727 s

2022-07-09 10:26:19.447855: 
epoch:  325
2022-07-09 10:27:30.647887: train loss : -0.9001
2022-07-09 10:27:36.123552: validation loss: -0.7410
2022-07-09 10:27:36.160678: Average global foreground Dice: [0.8163]
2022-07-09 10:27:36.187882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:27:37.093010: Suus1 maybe_update_lr lr: 0.003867
2022-07-09 10:27:37.110041: This epoch took 77.647815 s

2022-07-09 10:27:37.120852: 
epoch:  326
2022-07-09 10:28:48.096153: train loss : -0.9035
2022-07-09 10:28:53.553093: validation loss: -0.7348
2022-07-09 10:28:53.605586: Average global foreground Dice: [0.8075]
2022-07-09 10:28:53.622318: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:28:54.303304: Suus1 maybe_update_lr lr: 0.003847
2022-07-09 10:28:54.324921: This epoch took 77.201885 s

2022-07-09 10:28:54.346860: 
epoch:  327
2022-07-09 10:30:05.996513: train loss : -0.9050
2022-07-09 10:30:12.403349: validation loss: -0.7343
2022-07-09 10:30:12.439779: Average global foreground Dice: [0.7993]
2022-07-09 10:30:12.455099: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:30:13.441276: Suus1 maybe_update_lr lr: 0.003827
2022-07-09 10:30:13.467434: This epoch took 79.098556 s

2022-07-09 10:30:13.487546: 
epoch:  328
2022-07-09 10:31:24.043290: train loss : -0.9055
2022-07-09 10:31:29.833639: validation loss: -0.7130
2022-07-09 10:31:29.867652: Average global foreground Dice: [0.7936]
2022-07-09 10:31:29.882874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:31:30.638552: Suus1 maybe_update_lr lr: 0.003807
2022-07-09 10:31:30.652860: This epoch took 77.162427 s

2022-07-09 10:31:30.676193: 
epoch:  329
2022-07-09 10:32:42.401849: train loss : -0.9024
2022-07-09 10:32:48.699857: validation loss: -0.7588
2022-07-09 10:32:48.731219: Average global foreground Dice: [0.8162]
2022-07-09 10:32:48.746876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:32:49.551336: Suus1 maybe_update_lr lr: 0.003787
2022-07-09 10:32:49.584038: This epoch took 78.895449 s

2022-07-09 10:32:49.627862: 
epoch:  330
2022-07-09 10:34:01.729290: train loss : -0.9042
2022-07-09 10:34:06.760907: validation loss: -0.7376
2022-07-09 10:34:06.800184: Average global foreground Dice: [0.8073]
2022-07-09 10:34:06.828879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:34:07.528001: Suus1 maybe_update_lr lr: 0.003767
2022-07-09 10:34:07.546891: This epoch took 77.875028 s

2022-07-09 10:34:07.559864: 
epoch:  331
2022-07-09 10:35:20.547118: train loss : -0.9035
2022-07-09 10:35:26.192158: validation loss: -0.7468
2022-07-09 10:35:26.195157: Average global foreground Dice: [0.8091]
2022-07-09 10:35:26.231994: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:35:26.939287: Suus1 maybe_update_lr lr: 0.003747
2022-07-09 10:35:26.963977: This epoch took 79.382104 s

2022-07-09 10:35:26.985859: 
epoch:  332
2022-07-09 10:36:38.205368: train loss : -0.9014
2022-07-09 10:36:44.494313: validation loss: -0.6979
2022-07-09 10:36:44.503273: Average global foreground Dice: [0.7809]
2022-07-09 10:36:44.518961: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:36:45.489035: Suus1 maybe_update_lr lr: 0.003727
2022-07-09 10:36:45.536049: This epoch took 78.529424 s

2022-07-09 10:36:45.538417: 
epoch:  333
2022-07-09 10:37:56.324335: train loss : -0.8969
2022-07-09 10:38:01.726815: validation loss: -0.7361
2022-07-09 10:38:01.758296: Average global foreground Dice: [0.7969]
2022-07-09 10:38:01.770908: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:38:02.550364: Suus1 maybe_update_lr lr: 0.003707
2022-07-09 10:38:02.571915: This epoch took 77.031252 s

2022-07-09 10:38:02.601412: 
epoch:  334
2022-07-09 10:39:15.653198: train loss : -0.8993
2022-07-09 10:39:21.828059: validation loss: -0.7270
2022-07-09 10:39:21.856098: Average global foreground Dice: [0.7961]
2022-07-09 10:39:21.865705: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:39:22.755208: Suus1 maybe_update_lr lr: 0.003687
2022-07-09 10:39:22.775910: This epoch took 80.154357 s

2022-07-09 10:39:22.792858: 
epoch:  335
2022-07-09 10:40:35.173371: train loss : -0.9023
2022-07-09 10:40:40.950018: validation loss: -0.7358
2022-07-09 10:40:40.976297: Average global foreground Dice: [0.8048]
2022-07-09 10:40:40.999011: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:40:42.038738: Suus1 maybe_update_lr lr: 0.003667
2022-07-09 10:40:42.059930: This epoch took 79.250903 s

2022-07-09 10:40:42.081857: 
epoch:  336
2022-07-09 10:41:53.954130: train loss : -0.9025
2022-07-09 10:41:59.349832: validation loss: -0.7108
2022-07-09 10:41:59.390631: Average global foreground Dice: [0.7923]
2022-07-09 10:41:59.422226: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:42:00.102504: Suus1 maybe_update_lr lr: 0.003647
2022-07-09 10:42:00.123900: This epoch took 78.025860 s

2022-07-09 10:42:00.152853: 
epoch:  337
2022-07-09 10:43:13.225896: train loss : -0.9037
2022-07-09 10:43:19.120926: validation loss: -0.7255
2022-07-09 10:43:19.181248: Average global foreground Dice: [0.7989]
2022-07-09 10:43:19.205446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:43:19.960746: Suus1 maybe_update_lr lr: 0.003627
2022-07-09 10:43:19.988984: This epoch took 79.813113 s

2022-07-09 10:43:20.016970: 
epoch:  338
2022-07-09 10:44:32.470517: train loss : -0.9045
2022-07-09 10:44:38.303446: validation loss: -0.7580
2022-07-09 10:44:38.338246: Average global foreground Dice: [0.8149]
2022-07-09 10:44:38.369876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:44:39.131813: Suus1 maybe_update_lr lr: 0.003606
2022-07-09 10:44:39.154127: This epoch took 79.121886 s

2022-07-09 10:44:39.179590: 
epoch:  339
2022-07-09 10:45:49.866621: train loss : -0.9045
2022-07-09 10:45:55.751068: validation loss: -0.7420
2022-07-09 10:45:55.782427: Average global foreground Dice: [0.8141]
2022-07-09 10:45:55.802182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:45:56.526561: Suus1 maybe_update_lr lr: 0.003586
2022-07-09 10:45:56.547891: This epoch took 77.348375 s

2022-07-09 10:45:56.572860: 
epoch:  340
2022-07-09 10:47:07.539698: train loss : -0.9061
2022-07-09 10:47:14.252314: validation loss: -0.7279
2022-07-09 10:47:14.300286: Average global foreground Dice: [0.8022]
2022-07-09 10:47:14.306525: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:47:15.078476: Suus1 maybe_update_lr lr: 0.003566
2022-07-09 10:47:15.093583: This epoch took 78.493696 s

2022-07-09 10:47:15.113550: 
epoch:  341
2022-07-09 10:48:25.892115: train loss : -0.9054
2022-07-09 10:48:31.034367: validation loss: -0.7572
2022-07-09 10:48:31.074339: Average global foreground Dice: [0.8124]
2022-07-09 10:48:31.089222: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:48:32.218175: Suus1 maybe_update_lr lr: 0.003546
2022-07-09 10:48:32.239918: This epoch took 77.121137 s

2022-07-09 10:48:32.272851: 
epoch:  342
2022-07-09 10:49:43.934563: train loss : -0.9069
2022-07-09 10:49:49.405571: validation loss: -0.7098
2022-07-09 10:49:49.432178: Average global foreground Dice: [0.7784]
2022-07-09 10:49:49.448474: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:49:50.409340: Suus1 maybe_update_lr lr: 0.003526
2022-07-09 10:49:50.430904: This epoch took 78.136041 s

2022-07-09 10:49:50.452848: 
epoch:  343
2022-07-09 10:51:02.919599: train loss : -0.9037
2022-07-09 10:51:07.886420: validation loss: -0.7145
2022-07-09 10:51:07.903311: Average global foreground Dice: [0.7906]
2022-07-09 10:51:07.913538: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:51:08.577858: Suus1 maybe_update_lr lr: 0.003505
2022-07-09 10:51:08.599001: This epoch took 78.129599 s

2022-07-09 10:51:08.619878: 
epoch:  344
2022-07-09 10:52:20.953245: train loss : -0.9051
2022-07-09 10:52:26.305026: validation loss: -0.7221
2022-07-09 10:52:26.339652: Average global foreground Dice: [0.7997]
2022-07-09 10:52:26.360866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:52:27.282783: Suus1 maybe_update_lr lr: 0.003485
2022-07-09 10:52:27.313173: This epoch took 78.660283 s

2022-07-09 10:52:27.334852: 
epoch:  345
2022-07-09 10:53:40.248720: train loss : -0.9089
2022-07-09 10:53:45.225575: validation loss: -0.7327
2022-07-09 10:53:45.228589: Average global foreground Dice: [0.8041]
2022-07-09 10:53:45.230770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:53:45.766962: Suus1 maybe_update_lr lr: 0.003465
2022-07-09 10:53:45.780922: This epoch took 78.420059 s

2022-07-09 10:53:45.794626: 
epoch:  346
2022-07-09 10:54:58.456878: train loss : -0.9085
2022-07-09 10:55:03.892360: validation loss: -0.7465
2022-07-09 10:55:03.917697: Average global foreground Dice: [0.8063]
2022-07-09 10:55:03.947872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:55:04.685836: Suus1 maybe_update_lr lr: 0.003445
2022-07-09 10:55:04.699070: This epoch took 78.902250 s

2022-07-09 10:55:04.725765: 
epoch:  347
2022-07-09 10:56:16.428075: train loss : -0.9064
2022-07-09 10:56:22.075381: validation loss: -0.7478
2022-07-09 10:56:22.106280: Average global foreground Dice: [0.8105]
2022-07-09 10:56:22.132786: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:56:22.837565: Suus1 maybe_update_lr lr: 0.003424
2022-07-09 10:56:22.857327: This epoch took 78.129343 s

2022-07-09 10:56:22.877519: 
epoch:  348
2022-07-09 10:57:35.799367: train loss : -0.9084
2022-07-09 10:57:41.282505: validation loss: -0.7412
2022-07-09 10:57:41.308257: Average global foreground Dice: [0.8062]
2022-07-09 10:57:41.327773: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:57:42.048411: Suus1 maybe_update_lr lr: 0.003404
2022-07-09 10:57:42.075910: This epoch took 79.180046 s

2022-07-09 10:57:42.096709: 
epoch:  349
2022-07-09 10:58:54.728973: train loss : -0.9077
2022-07-09 10:59:00.165450: validation loss: -0.7090
2022-07-09 10:59:00.196327: Average global foreground Dice: [0.798]
2022-07-09 10:59:00.208882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 10:59:01.016972: Suus1 maybe_update_lr lr: 0.003384
2022-07-09 10:59:01.055818: saving scheduled checkpoint file...
2022-07-09 10:59:01.302788: saving checkpoint...
2022-07-09 10:59:03.057355: done, saving took 1.97 seconds
2022-07-09 10:59:03.078134: done
2022-07-09 10:59:03.080501: This epoch took 80.958793 s

2022-07-09 10:59:03.082774: 
epoch:  350
2022-07-09 11:00:13.786159: train loss : -0.9125
2022-07-09 11:00:19.975239: validation loss: -0.7462
2022-07-09 11:00:20.007581: Average global foreground Dice: [0.8135]
2022-07-09 11:00:20.027880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:00:20.712519: Suus1 maybe_update_lr lr: 0.003364
2022-07-09 11:00:20.730040: This epoch took 77.645050 s

2022-07-09 11:00:20.756861: 
epoch:  351
2022-07-09 11:01:31.647577: train loss : -0.9094
2022-07-09 11:01:37.487477: validation loss: -0.7422
2022-07-09 11:01:37.512787: Average global foreground Dice: [0.8129]
2022-07-09 11:01:37.532508: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:01:38.273785: Suus1 maybe_update_lr lr: 0.003343
2022-07-09 11:01:38.296098: This epoch took 77.517208 s

2022-07-09 11:01:38.298487: 
epoch:  352
2022-07-09 11:02:50.051263: train loss : -0.9073
2022-07-09 11:02:56.686275: validation loss: -0.7392
2022-07-09 11:02:56.713386: Average global foreground Dice: [0.8092]
2022-07-09 11:02:56.729883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:02:57.278335: Suus1 maybe_update_lr lr: 0.003323
2022-07-09 11:02:57.308907: This epoch took 79.008296 s

2022-07-09 11:02:57.311250: 
epoch:  353
2022-07-09 11:04:08.837892: train loss : -0.9114
2022-07-09 11:04:14.539717: validation loss: -0.7471
2022-07-09 11:04:14.563527: Average global foreground Dice: [0.8151]
2022-07-09 11:04:14.593893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:04:15.332459: Suus1 maybe_update_lr lr: 0.003303
2022-07-09 11:04:15.355003: This epoch took 78.041000 s

2022-07-09 11:04:15.375079: 
epoch:  354
2022-07-09 11:05:27.389177: train loss : -0.9100
2022-07-09 11:05:33.083983: validation loss: -0.7429
2022-07-09 11:05:33.118207: Average global foreground Dice: [0.805]
2022-07-09 11:05:33.150879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:05:33.877098: Suus1 maybe_update_lr lr: 0.003282
2022-07-09 11:05:33.897925: This epoch took 78.502673 s

2022-07-09 11:05:33.908040: 
epoch:  355
2022-07-09 11:06:46.882331: train loss : -0.9098
2022-07-09 11:06:52.429256: validation loss: -0.7241
2022-07-09 11:06:52.462363: Average global foreground Dice: [0.8039]
2022-07-09 11:06:52.494884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:06:53.217547: Suus1 maybe_update_lr lr: 0.003262
2022-07-09 11:06:53.237192: This epoch took 79.313331 s

2022-07-09 11:06:53.257229: 
epoch:  356
2022-07-09 11:08:05.105953: train loss : -0.9097
2022-07-09 11:08:10.695142: validation loss: -0.7119
2022-07-09 11:08:10.708994: Average global foreground Dice: [0.7933]
2022-07-09 11:08:10.749890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:08:11.611530: Suus1 maybe_update_lr lr: 0.003241
2022-07-09 11:08:11.633857: This epoch took 78.356545 s

2022-07-09 11:08:11.649858: 
epoch:  357
2022-07-09 11:09:25.133273: train loss : -0.9103
2022-07-09 11:09:30.530399: validation loss: -0.7356
2022-07-09 11:09:30.551121: Average global foreground Dice: [0.7988]
2022-07-09 11:09:30.570798: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:09:31.302263: Suus1 maybe_update_lr lr: 0.003221
2022-07-09 11:09:31.334899: This epoch took 79.653769 s

2022-07-09 11:09:31.366005: 
epoch:  358
2022-07-09 11:10:43.821191: train loss : -0.9103
2022-07-09 11:10:49.772585: validation loss: -0.7465
2022-07-09 11:10:49.803331: Average global foreground Dice: [0.8077]
2022-07-09 11:10:49.821141: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:10:50.579489: Suus1 maybe_update_lr lr: 0.003201
2022-07-09 11:10:50.600194: This epoch took 79.212291 s

2022-07-09 11:10:50.620089: 
epoch:  359
2022-07-09 11:12:01.196451: train loss : -0.9101
2022-07-09 11:12:07.114823: validation loss: -0.7313
2022-07-09 11:12:07.141166: Average global foreground Dice: [0.8073]
2022-07-09 11:12:07.164869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:12:07.911294: Suus1 maybe_update_lr lr: 0.00318
2022-07-09 11:12:07.941069: This epoch took 77.317597 s

2022-07-09 11:12:07.974973: 
epoch:  360
2022-07-09 11:13:20.006964: train loss : -0.9079
2022-07-09 11:13:25.258311: validation loss: -0.7405
2022-07-09 11:13:25.287511: Average global foreground Dice: [0.807]
2022-07-09 11:13:25.299870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:13:25.914649: Suus1 maybe_update_lr lr: 0.00316
2022-07-09 11:13:25.934957: This epoch took 77.910731 s

2022-07-09 11:13:25.963850: 
epoch:  361
2022-07-09 11:14:37.056321: train loss : -0.9109
2022-07-09 11:14:43.496277: validation loss: -0.7245
2022-07-09 11:14:43.535265: Average global foreground Dice: [0.8037]
2022-07-09 11:14:43.570865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:14:44.194551: Suus1 maybe_update_lr lr: 0.003139
2022-07-09 11:14:44.234224: This epoch took 78.250116 s

2022-07-09 11:14:44.254272: 
epoch:  362
2022-07-09 11:15:55.900134: train loss : -0.9120
2022-07-09 11:16:01.650995: validation loss: -0.7507
2022-07-09 11:16:01.694379: Average global foreground Dice: [0.8119]
2022-07-09 11:16:01.714088: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:16:02.600504: Suus1 maybe_update_lr lr: 0.003119
2022-07-09 11:16:02.629135: This epoch took 78.353270 s

2022-07-09 11:16:02.655973: 
epoch:  363
2022-07-09 11:17:12.890205: train loss : -0.9099
2022-07-09 11:17:18.558413: validation loss: -0.7215
2022-07-09 11:17:18.598429: Average global foreground Dice: [0.7936]
2022-07-09 11:17:18.619888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:17:19.391947: Suus1 maybe_update_lr lr: 0.003098
2022-07-09 11:17:19.423912: This epoch took 76.747133 s

2022-07-09 11:17:19.442277: 
epoch:  364
2022-07-09 11:18:32.980269: train loss : -0.9089
2022-07-09 11:18:39.570663: validation loss: -0.7460
2022-07-09 11:18:39.597317: Average global foreground Dice: [0.8182]
2022-07-09 11:18:39.614879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:18:40.398556: Suus1 maybe_update_lr lr: 0.003078
2022-07-09 11:18:40.418884: This epoch took 80.955716 s

2022-07-09 11:18:40.440866: 
epoch:  365
2022-07-09 11:19:52.803756: train loss : -0.9093
2022-07-09 11:19:58.095093: validation loss: -0.7628
2022-07-09 11:19:58.123408: Average global foreground Dice: [0.8263]
2022-07-09 11:19:58.144467: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:19:58.798744: Suus1 maybe_update_lr lr: 0.003057
2022-07-09 11:19:58.826279: This epoch took 78.346997 s

2022-07-09 11:19:58.847854: 
epoch:  366
2022-07-09 11:21:09.920946: train loss : -0.9128
2022-07-09 11:21:15.292223: validation loss: -0.7459
2022-07-09 11:21:15.296446: Average global foreground Dice: [0.8083]
2022-07-09 11:21:15.317157: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:21:16.031414: Suus1 maybe_update_lr lr: 0.003037
2022-07-09 11:21:16.063164: This epoch took 77.193300 s

2022-07-09 11:21:16.077054: 
epoch:  367
2022-07-09 11:22:28.068198: train loss : -0.9120
2022-07-09 11:22:34.444153: validation loss: -0.7298
2022-07-09 11:22:34.475911: Average global foreground Dice: [0.7988]
2022-07-09 11:22:34.502878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:22:35.206424: Suus1 maybe_update_lr lr: 0.003016
2022-07-09 11:22:35.238913: This epoch took 79.143009 s

2022-07-09 11:22:35.271863: 
epoch:  368
2022-07-09 11:23:47.686398: train loss : -0.9138
2022-07-09 11:23:52.958042: validation loss: -0.7545
2022-07-09 11:23:52.990468: Average global foreground Dice: [0.8118]
2022-07-09 11:23:53.010187: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:23:53.756506: Suus1 maybe_update_lr lr: 0.002996
2022-07-09 11:23:53.788901: This epoch took 78.484033 s

2022-07-09 11:23:53.814862: 
epoch:  369
2022-07-09 11:25:04.626919: train loss : -0.9125
2022-07-09 11:25:10.598889: validation loss: -0.7281
2022-07-09 11:25:10.629245: Average global foreground Dice: [0.7963]
2022-07-09 11:25:10.651968: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:25:11.315338: Suus1 maybe_update_lr lr: 0.002975
2022-07-09 11:25:11.347913: This epoch took 77.511060 s

2022-07-09 11:25:11.354234: 
epoch:  370
2022-07-09 11:26:22.397231: train loss : -0.9128
2022-07-09 11:26:27.775854: validation loss: -0.7075
2022-07-09 11:26:27.797930: Average global foreground Dice: [0.7891]
2022-07-09 11:26:27.809896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:26:28.930714: Suus1 maybe_update_lr lr: 0.002954
2022-07-09 11:26:28.951919: This epoch took 77.577171 s

2022-07-09 11:26:28.973856: 
epoch:  371
2022-07-09 11:27:40.635238: train loss : -0.9157
2022-07-09 11:27:46.777612: validation loss: -0.7211
2022-07-09 11:27:46.812303: Average global foreground Dice: [0.8009]
2022-07-09 11:27:46.841935: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:27:47.697175: Suus1 maybe_update_lr lr: 0.002934
2022-07-09 11:27:47.707632: This epoch took 78.711775 s

2022-07-09 11:27:47.730147: 
epoch:  372
2022-07-09 11:28:59.531402: train loss : -0.9118
2022-07-09 11:29:05.222216: validation loss: -0.7363
2022-07-09 11:29:05.258473: Average global foreground Dice: [0.8092]
2022-07-09 11:29:05.290872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:29:06.131345: Suus1 maybe_update_lr lr: 0.002913
2022-07-09 11:29:06.152908: This epoch took 78.403023 s

2022-07-09 11:29:06.179858: 
epoch:  373
2022-07-09 11:30:17.743614: train loss : -0.9143
2022-07-09 11:30:24.264163: validation loss: -0.7463
2022-07-09 11:30:24.315289: Average global foreground Dice: [0.811]
2022-07-09 11:30:24.344850: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:30:25.146345: Suus1 maybe_update_lr lr: 0.002892
2022-07-09 11:30:25.155864: This epoch took 78.956017 s

2022-07-09 11:30:25.185866: 
epoch:  374
2022-07-09 11:31:37.112084: train loss : -0.9140
2022-07-09 11:31:42.690290: validation loss: -0.7402
2022-07-09 11:31:42.700300: Average global foreground Dice: [0.8071]
2022-07-09 11:31:42.719676: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:31:43.475742: Suus1 maybe_update_lr lr: 0.002872
2022-07-09 11:31:43.478247: This epoch took 78.271188 s

2022-07-09 11:31:43.497595: 
epoch:  375
2022-07-09 11:32:57.383255: train loss : -0.9163
2022-07-09 11:33:03.091718: validation loss: -0.7289
2022-07-09 11:33:03.127244: Average global foreground Dice: [0.8046]
2022-07-09 11:33:03.147681: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:33:03.727277: Suus1 maybe_update_lr lr: 0.002851
2022-07-09 11:33:03.759932: This epoch took 80.256116 s

2022-07-09 11:33:03.792873: 
epoch:  376
2022-07-09 11:34:15.839037: train loss : -0.9148
2022-07-09 11:34:21.716747: validation loss: -0.7150
2022-07-09 11:34:21.743540: Average global foreground Dice: [0.7986]
2022-07-09 11:34:21.763185: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:34:22.508226: Suus1 maybe_update_lr lr: 0.00283
2022-07-09 11:34:22.516761: This epoch took 78.690892 s

2022-07-09 11:34:22.533414: 
epoch:  377
2022-07-09 11:35:32.931282: train loss : -0.9153
2022-07-09 11:35:37.909199: validation loss: -0.7398
2022-07-09 11:35:37.945364: Average global foreground Dice: [0.8061]
2022-07-09 11:35:37.965020: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:35:38.691480: Suus1 maybe_update_lr lr: 0.00281
2022-07-09 11:35:38.712925: This epoch took 76.172785 s

2022-07-09 11:35:38.734875: 
epoch:  378
2022-07-09 11:36:49.484763: train loss : -0.9170
2022-07-09 11:36:55.206378: validation loss: -0.7064
2022-07-09 11:36:55.239236: Average global foreground Dice: [0.7969]
2022-07-09 11:36:55.263204: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:36:55.941690: Suus1 maybe_update_lr lr: 0.002789
2022-07-09 11:36:55.946104: This epoch took 77.199177 s

2022-07-09 11:36:55.987974: 
epoch:  379
2022-07-09 11:38:06.806407: train loss : -0.9169
2022-07-09 11:38:12.159067: validation loss: -0.7166
2022-07-09 11:38:12.179740: Average global foreground Dice: [0.7988]
2022-07-09 11:38:12.196879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:38:12.698761: Suus1 maybe_update_lr lr: 0.002768
2022-07-09 11:38:12.712126: This epoch took 76.706265 s

2022-07-09 11:38:12.730100: 
epoch:  380
2022-07-09 11:39:24.588252: train loss : -0.9142
2022-07-09 11:39:30.391236: validation loss: -0.7259
2022-07-09 11:39:30.426343: Average global foreground Dice: [0.8001]
2022-07-09 11:39:30.454866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:39:31.398383: Suus1 maybe_update_lr lr: 0.002747
2022-07-09 11:39:31.420518: This epoch took 78.657661 s

2022-07-09 11:39:31.440487: 
epoch:  381
2022-07-09 11:40:42.835144: train loss : -0.9164
2022-07-09 11:40:48.986351: validation loss: -0.7262
2022-07-09 11:40:49.009462: Average global foreground Dice: [0.7958]
2022-07-09 11:40:49.012217: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:40:49.686400: Suus1 maybe_update_lr lr: 0.002727
2022-07-09 11:40:49.707876: This epoch took 78.259026 s

2022-07-09 11:40:49.733870: 
epoch:  382
2022-07-09 11:41:59.850687: train loss : -0.9159
2022-07-09 11:42:05.813500: validation loss: -0.7179
2022-07-09 11:42:05.845444: Average global foreground Dice: [0.797]
2022-07-09 11:42:05.871899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:42:06.634221: Suus1 maybe_update_lr lr: 0.002706
2022-07-09 11:42:06.654900: This epoch took 76.891302 s

2022-07-09 11:42:06.676858: 
epoch:  383
2022-07-09 11:43:18.409429: train loss : -0.9156
2022-07-09 11:43:24.048338: validation loss: -0.7292
2022-07-09 11:43:24.094307: Average global foreground Dice: [0.8034]
2022-07-09 11:43:24.115862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:43:25.113481: Suus1 maybe_update_lr lr: 0.002685
2022-07-09 11:43:25.148190: This epoch took 78.438274 s

2022-07-09 11:43:25.158487: 
epoch:  384
2022-07-09 11:44:37.533327: train loss : -0.9170
2022-07-09 11:44:43.125811: validation loss: -0.7423
2022-07-09 11:44:43.163077: Average global foreground Dice: [0.8097]
2022-07-09 11:44:43.184776: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:44:43.820427: Suus1 maybe_update_lr lr: 0.002664
2022-07-09 11:44:43.841900: This epoch took 78.663301 s

2022-07-09 11:44:43.860138: 
epoch:  385
2022-07-09 11:45:55.683867: train loss : -0.9172
2022-07-09 11:46:01.826041: validation loss: -0.7518
2022-07-09 11:46:01.860239: Average global foreground Dice: [0.8178]
2022-07-09 11:46:01.894959: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:46:02.756372: Suus1 maybe_update_lr lr: 0.002643
2022-07-09 11:46:02.788912: This epoch took 78.914041 s

2022-07-09 11:46:02.799458: 
epoch:  386
2022-07-09 11:47:14.615075: train loss : -0.9181
2022-07-09 11:47:20.832248: validation loss: -0.7299
2022-07-09 11:47:20.875815: Average global foreground Dice: [0.8011]
2022-07-09 11:47:20.877910: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:47:21.591057: Suus1 maybe_update_lr lr: 0.002622
2022-07-09 11:47:21.619142: This epoch took 78.799358 s

2022-07-09 11:47:21.642926: 
epoch:  387
2022-07-09 11:48:32.180401: train loss : -0.9192
2022-07-09 11:48:37.434228: validation loss: -0.7184
2022-07-09 11:48:37.465456: Average global foreground Dice: [0.7961]
2022-07-09 11:48:37.485170: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:48:38.223364: Suus1 maybe_update_lr lr: 0.002601
2022-07-09 11:48:38.248360: This epoch took 76.590672 s

2022-07-09 11:48:38.259985: 
epoch:  388
2022-07-09 11:49:51.235355: train loss : -0.9175
2022-07-09 11:49:56.821168: validation loss: -0.7359
2022-07-09 11:49:56.848061: Average global foreground Dice: [0.8033]
2022-07-09 11:49:56.850500: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:49:57.615342: Suus1 maybe_update_lr lr: 0.002581
2022-07-09 11:49:57.649900: This epoch took 79.371039 s

2022-07-09 11:49:57.663824: 
epoch:  389
2022-07-09 11:51:09.613365: train loss : -0.9183
2022-07-09 11:51:15.291519: validation loss: -0.7142
2022-07-09 11:51:15.322619: Average global foreground Dice: [0.8016]
2022-07-09 11:51:15.342456: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:51:15.984639: Suus1 maybe_update_lr lr: 0.00256
2022-07-09 11:51:16.006074: This epoch took 78.334975 s

2022-07-09 11:51:16.038867: 
epoch:  390
2022-07-09 11:52:28.943250: train loss : -0.9156
2022-07-09 11:52:34.765461: validation loss: -0.7179
2022-07-09 11:52:34.804207: Average global foreground Dice: [0.7939]
2022-07-09 11:52:34.836955: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:52:35.798594: Suus1 maybe_update_lr lr: 0.002539
2022-07-09 11:52:35.818940: This epoch took 79.758040 s

2022-07-09 11:52:35.849329: 
epoch:  391
2022-07-09 11:53:47.646206: train loss : -0.9155
2022-07-09 11:53:53.047413: validation loss: -0.7462
2022-07-09 11:53:53.074514: Average global foreground Dice: [0.8148]
2022-07-09 11:53:53.084367: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:53:54.113449: Suus1 maybe_update_lr lr: 0.002518
2022-07-09 11:53:54.133060: This epoch took 78.269261 s

2022-07-09 11:53:54.147851: 
epoch:  392
2022-07-09 11:55:06.523133: train loss : -0.9160
2022-07-09 11:55:11.797679: validation loss: -0.7449
2022-07-09 11:55:11.833319: Average global foreground Dice: [0.8128]
2022-07-09 11:55:11.858877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:55:12.357259: Suus1 maybe_update_lr lr: 0.002497
2022-07-09 11:55:12.375916: This epoch took 78.206039 s

2022-07-09 11:55:12.397852: 
epoch:  393
2022-07-09 11:56:24.024201: train loss : -0.9177
2022-07-09 11:56:30.224982: validation loss: -0.7202
2022-07-09 11:56:30.252140: Average global foreground Dice: [0.8033]
2022-07-09 11:56:30.271739: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:56:30.994586: Suus1 maybe_update_lr lr: 0.002476
2022-07-09 11:56:30.998891: This epoch took 78.579013 s

2022-07-09 11:56:31.032865: 
epoch:  394
2022-07-09 11:57:43.354410: train loss : -0.9179
2022-07-09 11:57:49.436629: validation loss: -0.7402
2022-07-09 11:57:49.468319: Average global foreground Dice: [0.8037]
2022-07-09 11:57:49.481040: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:57:50.302972: Suus1 maybe_update_lr lr: 0.002455
2022-07-09 11:57:50.316962: This epoch took 79.272394 s

2022-07-09 11:57:50.338683: 
epoch:  395
2022-07-09 11:59:02.023072: train loss : -0.9188
2022-07-09 11:59:07.772574: validation loss: -0.7223
2022-07-09 11:59:07.822929: Average global foreground Dice: [0.7993]
2022-07-09 11:59:07.837329: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 11:59:08.443331: Suus1 maybe_update_lr lr: 0.002434
2022-07-09 11:59:08.476040: This epoch took 78.135080 s

2022-07-09 11:59:08.503859: 
epoch:  396
2022-07-09 12:00:20.358500: train loss : -0.9173
2022-07-09 12:00:26.517916: validation loss: -0.7257
2022-07-09 12:00:26.551226: Average global foreground Dice: [0.7969]
2022-07-09 12:00:26.573992: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:00:27.227763: Suus1 maybe_update_lr lr: 0.002413
2022-07-09 12:00:27.248892: This epoch took 78.733023 s

2022-07-09 12:00:27.266696: 
epoch:  397
2022-07-09 12:01:38.019910: train loss : -0.9173
2022-07-09 12:01:43.511353: validation loss: -0.7252
2022-07-09 12:01:43.551589: Average global foreground Dice: [0.8025]
2022-07-09 12:01:43.560355: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:01:44.470527: Suus1 maybe_update_lr lr: 0.002391
2022-07-09 12:01:44.491907: This epoch took 77.209462 s

2022-07-09 12:01:44.518162: 
epoch:  398
2022-07-09 12:02:55.880395: train loss : -0.9201
2022-07-09 12:03:01.614841: validation loss: -0.7367
2022-07-09 12:03:01.638969: Average global foreground Dice: [0.8093]
2022-07-09 12:03:01.657988: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:03:02.625350: Suus1 maybe_update_lr lr: 0.00237
2022-07-09 12:03:02.669863: This epoch took 78.128892 s

2022-07-09 12:03:02.680252: 
epoch:  399
2022-07-09 12:04:14.640991: train loss : -0.9172
2022-07-09 12:04:20.092633: validation loss: -0.7511
2022-07-09 12:04:20.115266: Average global foreground Dice: [0.813]
2022-07-09 12:04:20.134425: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:04:21.029919: Suus1 maybe_update_lr lr: 0.002349
2022-07-09 12:04:21.042804: saving scheduled checkpoint file...
2022-07-09 12:04:21.176398: saving checkpoint...
2022-07-09 12:04:22.778503: done, saving took 1.73 seconds
2022-07-09 12:04:22.798834: done
2022-07-09 12:04:22.801124: This epoch took 80.101249 s

2022-07-09 12:04:22.803106: 
epoch:  400
2022-07-09 12:05:33.343134: train loss : -0.9192
2022-07-09 12:05:38.735570: validation loss: -0.7330
2022-07-09 12:05:38.767286: Average global foreground Dice: [0.808]
2022-07-09 12:05:38.769493: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:05:39.399508: Suus1 maybe_update_lr lr: 0.002328
2022-07-09 12:05:39.443929: This epoch took 76.638821 s

2022-07-09 12:05:39.475012: 
epoch:  401
2022-07-09 12:06:51.403476: train loss : -0.9163
2022-07-09 12:06:57.030374: validation loss: -0.7279
2022-07-09 12:06:57.061497: Average global foreground Dice: [0.7959]
2022-07-09 12:06:57.081305: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:06:57.787595: Suus1 maybe_update_lr lr: 0.002307
2022-07-09 12:06:57.806904: This epoch took 78.311802 s

2022-07-09 12:06:57.828907: 
epoch:  402
2022-07-09 12:08:08.897272: train loss : -0.9195
2022-07-09 12:08:14.551461: validation loss: -0.7444
2022-07-09 12:08:14.574270: Average global foreground Dice: [0.8097]
2022-07-09 12:08:14.582983: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:08:15.374472: Suus1 maybe_update_lr lr: 0.002286
2022-07-09 12:08:15.377279: This epoch took 77.526429 s

2022-07-09 12:08:15.406876: 
epoch:  403
2022-07-09 12:09:26.256032: train loss : -0.9219
2022-07-09 12:09:32.471860: validation loss: -0.7204
2022-07-09 12:09:32.485339: Average global foreground Dice: [0.7982]
2022-07-09 12:09:32.496552: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:09:33.182408: Suus1 maybe_update_lr lr: 0.002264
2022-07-09 12:09:33.214936: This epoch took 77.783057 s

2022-07-09 12:09:33.247855: 
epoch:  404
2022-07-09 12:10:44.142917: train loss : -0.9210
2022-07-09 12:10:50.184211: validation loss: -0.7288
2022-07-09 12:10:50.211214: Average global foreground Dice: [0.8]
2022-07-09 12:10:50.246744: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:10:51.221367: Suus1 maybe_update_lr lr: 0.002243
2022-07-09 12:10:51.253920: This epoch took 77.973048 s

2022-07-09 12:10:51.294416: 
epoch:  405
2022-07-09 12:12:03.263886: train loss : -0.9223
2022-07-09 12:12:08.489173: validation loss: -0.7378
2022-07-09 12:12:08.519291: Average global foreground Dice: [0.8082]
2022-07-09 12:12:08.535975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:12:09.779369: Suus1 maybe_update_lr lr: 0.002222
2022-07-09 12:12:09.800909: This epoch took 78.472032 s

2022-07-09 12:12:09.833869: 
epoch:  406
2022-07-09 12:13:22.132324: train loss : -0.9200
2022-07-09 12:13:27.805074: validation loss: -0.6964
2022-07-09 12:13:27.835470: Average global foreground Dice: [0.7856]
2022-07-09 12:13:27.861014: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:13:28.786377: Suus1 maybe_update_lr lr: 0.002201
2022-07-09 12:13:28.818926: This epoch took 78.963053 s

2022-07-09 12:13:28.851850: 
epoch:  407
2022-07-09 12:14:39.591296: train loss : -0.9198
2022-07-09 12:14:45.686044: validation loss: -0.7357
2022-07-09 12:14:45.738809: Average global foreground Dice: [0.8082]
2022-07-09 12:14:45.783042: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:14:46.462409: Suus1 maybe_update_lr lr: 0.002179
2022-07-09 12:14:46.483914: This epoch took 77.591822 s

2022-07-09 12:14:46.504284: 
epoch:  408
2022-07-09 12:15:58.490350: train loss : -0.9197
2022-07-09 12:16:03.617358: validation loss: -0.7458
2022-07-09 12:16:03.644235: Average global foreground Dice: [0.8164]
2022-07-09 12:16:03.660881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:16:04.320027: Suus1 maybe_update_lr lr: 0.002158
2022-07-09 12:16:04.340912: This epoch took 77.817506 s

2022-07-09 12:16:04.362854: 
epoch:  409
2022-07-09 12:17:17.810687: train loss : -0.9187
2022-07-09 12:17:23.207205: validation loss: -0.7360
2022-07-09 12:17:23.238237: Average global foreground Dice: [0.8081]
2022-07-09 12:17:23.263879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:17:24.041486: Suus1 maybe_update_lr lr: 0.002137
2022-07-09 12:17:24.072498: This epoch took 79.689332 s

2022-07-09 12:17:24.091810: 
epoch:  410
2022-07-09 12:18:34.930074: train loss : -0.9202
2022-07-09 12:18:40.307895: validation loss: -0.7470
2022-07-09 12:18:40.342242: Average global foreground Dice: [0.816]
2022-07-09 12:18:40.367873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:18:41.262846: Suus1 maybe_update_lr lr: 0.002115
2022-07-09 12:18:41.282541: This epoch took 77.170490 s

2022-07-09 12:18:41.288675: 
epoch:  411
2022-07-09 12:19:52.795847: train loss : -0.9213
2022-07-09 12:19:58.429272: validation loss: -0.7158
2022-07-09 12:19:58.460531: Average global foreground Dice: [0.8077]
2022-07-09 12:19:58.480127: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:19:59.357324: Suus1 maybe_update_lr lr: 0.002094
2022-07-09 12:19:59.375110: This epoch took 78.084285 s

2022-07-09 12:19:59.392318: 
epoch:  412
2022-07-09 12:21:11.629050: train loss : -0.9196
2022-07-09 12:21:17.439049: validation loss: -0.7255
2022-07-09 12:21:17.465319: Average global foreground Dice: [0.8051]
2022-07-09 12:21:17.501280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:21:18.218219: Suus1 maybe_update_lr lr: 0.002072
2022-07-09 12:21:18.249900: This epoch took 78.851421 s

2022-07-09 12:21:18.271869: 
epoch:  413
2022-07-09 12:22:31.286177: train loss : -0.9205
2022-07-09 12:22:37.828693: validation loss: -0.7166
2022-07-09 12:22:37.836761: Average global foreground Dice: [0.792]
2022-07-09 12:22:37.839005: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:22:38.485453: Suus1 maybe_update_lr lr: 0.002051
2022-07-09 12:22:38.507001: This epoch took 80.213138 s

2022-07-09 12:22:38.527112: 
epoch:  414
2022-07-09 12:23:51.042965: train loss : -0.9202
2022-07-09 12:23:57.026426: validation loss: -0.7434
2022-07-09 12:23:57.057363: Average global foreground Dice: [0.8087]
2022-07-09 12:23:57.077215: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:23:57.884420: Suus1 maybe_update_lr lr: 0.00203
2022-07-09 12:23:57.913347: This epoch took 79.359463 s

2022-07-09 12:23:57.933463: 
epoch:  415
2022-07-09 12:25:10.149657: train loss : -0.9218
2022-07-09 12:25:16.058680: validation loss: -0.7178
2022-07-09 12:25:16.096683: Average global foreground Dice: [0.8039]
2022-07-09 12:25:16.124957: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:25:17.061090: Suus1 maybe_update_lr lr: 0.002008
2022-07-09 12:25:17.069060: This epoch took 79.111100 s

2022-07-09 12:25:17.101448: 
epoch:  416
2022-07-09 12:26:28.882221: train loss : -0.9213
2022-07-09 12:26:34.526947: validation loss: -0.7398
2022-07-09 12:26:34.555532: Average global foreground Dice: [0.8122]
2022-07-09 12:26:34.580586: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:26:35.241615: Suus1 maybe_update_lr lr: 0.001987
2022-07-09 12:26:35.254043: This epoch took 78.150152 s

2022-07-09 12:26:35.271861: 
epoch:  417
2022-07-09 12:27:47.615671: train loss : -0.9224
2022-07-09 12:27:53.521317: validation loss: -0.7186
2022-07-09 12:27:53.556355: Average global foreground Dice: [0.7972]
2022-07-09 12:27:53.576209: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:27:54.523267: Suus1 maybe_update_lr lr: 0.001965
2022-07-09 12:27:54.547904: This epoch took 79.263043 s

2022-07-09 12:27:54.569105: 
epoch:  418
2022-07-09 12:29:08.000820: train loss : -0.9207
2022-07-09 12:29:14.587312: validation loss: -0.7348
2022-07-09 12:29:14.613255: Average global foreground Dice: [0.7983]
2022-07-09 12:29:14.621627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:29:15.373198: Suus1 maybe_update_lr lr: 0.001943
2022-07-09 12:29:15.406925: This epoch took 80.796044 s

2022-07-09 12:29:15.428896: 
epoch:  419
2022-07-09 12:30:26.208504: train loss : -0.9223
2022-07-09 12:30:32.057242: validation loss: -0.7051
2022-07-09 12:30:32.090283: Average global foreground Dice: [0.7958]
2022-07-09 12:30:32.111864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:30:32.976432: Suus1 maybe_update_lr lr: 0.001922
2022-07-09 12:30:33.020083: This epoch took 77.571089 s

2022-07-09 12:30:33.069562: 
epoch:  420
2022-07-09 12:31:44.138771: train loss : -0.9233
2022-07-09 12:31:49.153961: validation loss: -0.7183
2022-07-09 12:31:49.185623: Average global foreground Dice: [0.8]
2022-07-09 12:31:49.205424: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:31:50.038398: Suus1 maybe_update_lr lr: 0.0019
2022-07-09 12:31:50.060021: This epoch took 76.961081 s

2022-07-09 12:31:50.081849: 
epoch:  421
2022-07-09 12:33:03.767668: train loss : -0.9226
2022-07-09 12:33:09.522753: validation loss: -0.7359
2022-07-09 12:33:09.543253: Average global foreground Dice: [0.8019]
2022-07-09 12:33:09.558488: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:33:10.501951: Suus1 maybe_update_lr lr: 0.001879
2022-07-09 12:33:10.504524: This epoch took 80.402411 s

2022-07-09 12:33:10.531876: 
epoch:  422
2022-07-09 12:34:22.713789: train loss : -0.9241
2022-07-09 12:34:28.147563: validation loss: -0.7525
2022-07-09 12:34:28.192288: Average global foreground Dice: [0.8193]
2022-07-09 12:34:28.224848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:34:28.827194: Suus1 maybe_update_lr lr: 0.001857
2022-07-09 12:34:28.859933: This epoch took 78.308025 s

2022-07-09 12:34:28.881870: 
epoch:  423
2022-07-09 12:35:40.225019: train loss : -0.9235
2022-07-09 12:35:46.163215: validation loss: -0.7051
2022-07-09 12:35:46.206581: Average global foreground Dice: [0.7955]
2022-07-09 12:35:46.218866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:35:47.002324: Suus1 maybe_update_lr lr: 0.001835
2022-07-09 12:35:47.033021: This epoch took 78.127296 s

2022-07-09 12:35:47.057553: 
epoch:  424
2022-07-09 12:36:58.794739: train loss : -0.9238
2022-07-09 12:37:04.213008: validation loss: -0.7247
2022-07-09 12:37:04.249293: Average global foreground Dice: [0.8048]
2022-07-09 12:37:04.268872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:37:05.056636: Suus1 maybe_update_lr lr: 0.001813
2022-07-09 12:37:05.084290: This epoch took 77.993419 s

2022-07-09 12:37:05.106857: 
epoch:  425
2022-07-09 12:38:17.804308: train loss : -0.9229
2022-07-09 12:38:23.142594: validation loss: -0.7409
2022-07-09 12:38:23.187390: Average global foreground Dice: [0.8126]
2022-07-09 12:38:23.208952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:38:23.804667: Suus1 maybe_update_lr lr: 0.001792
2022-07-09 12:38:23.824724: This epoch took 78.699689 s

2022-07-09 12:38:23.827703: 
epoch:  426
2022-07-09 12:39:37.348531: train loss : -0.9243
2022-07-09 12:39:42.945390: validation loss: -0.7297
2022-07-09 12:39:42.975533: Average global foreground Dice: [0.8115]
2022-07-09 12:39:43.005886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:39:43.750283: Suus1 maybe_update_lr lr: 0.00177
2022-07-09 12:39:43.772068: This epoch took 79.932129 s

2022-07-09 12:39:43.790663: 
epoch:  427
2022-07-09 12:40:54.789931: train loss : -0.9235
2022-07-09 12:40:59.940557: validation loss: -0.7425
2022-07-09 12:40:59.982305: Average global foreground Dice: [0.8056]
2022-07-09 12:40:59.994866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:41:00.607303: Suus1 maybe_update_lr lr: 0.001748
2022-07-09 12:41:00.637918: This epoch took 76.820588 s

2022-07-09 12:41:00.657620: 
epoch:  428
2022-07-09 12:42:12.239405: train loss : -0.9249
2022-07-09 12:42:18.263283: validation loss: -0.7502
2022-07-09 12:42:18.296295: Average global foreground Dice: [0.8197]
2022-07-09 12:42:18.328879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:42:19.029429: Suus1 maybe_update_lr lr: 0.001726
2022-07-09 12:42:19.056335: This epoch took 78.390412 s

2022-07-09 12:42:19.080317: 
epoch:  429
2022-07-09 12:43:30.997080: train loss : -0.9242
2022-07-09 12:43:37.273750: validation loss: -0.7204
2022-07-09 12:43:37.308322: Average global foreground Dice: [0.7952]
2022-07-09 12:43:37.329865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:43:38.348171: Suus1 maybe_update_lr lr: 0.001704
2022-07-09 12:43:38.364727: This epoch took 79.251781 s

2022-07-09 12:43:38.374660: 
epoch:  430
2022-07-09 12:44:49.891490: train loss : -0.9243
2022-07-09 12:44:55.506186: validation loss: -0.7159
2022-07-09 12:44:55.509548: Average global foreground Dice: [0.7949]
2022-07-09 12:44:55.511781: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:44:55.992331: Suus1 maybe_update_lr lr: 0.001682
2022-07-09 12:44:55.994741: This epoch took 77.591868 s

2022-07-09 12:44:56.023856: 
epoch:  431
2022-07-09 12:46:09.263200: train loss : -0.9256
2022-07-09 12:46:16.056899: validation loss: -0.7312
2022-07-09 12:46:16.084459: Average global foreground Dice: [0.8022]
2022-07-09 12:46:16.104153: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:46:16.742212: Suus1 maybe_update_lr lr: 0.00166
2022-07-09 12:46:16.760888: This epoch took 80.704007 s

2022-07-09 12:46:16.762982: 
epoch:  432
2022-07-09 12:47:28.325850: train loss : -0.9243
2022-07-09 12:47:34.486608: validation loss: -0.7264
2022-07-09 12:47:34.520295: Average global foreground Dice: [0.8066]
2022-07-09 12:47:34.545885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:47:35.490306: Suus1 maybe_update_lr lr: 0.001638
2022-07-09 12:47:35.522921: This epoch took 78.735057 s

2022-07-09 12:47:35.555844: 
epoch:  433
2022-07-09 12:48:46.597344: train loss : -0.9241
2022-07-09 12:48:52.472113: validation loss: -0.7013
2022-07-09 12:48:52.512344: Average global foreground Dice: [0.7967]
2022-07-09 12:48:52.523849: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:48:53.060012: Suus1 maybe_update_lr lr: 0.001616
2022-07-09 12:48:53.078894: This epoch took 77.501014 s

2022-07-09 12:48:53.100864: 
epoch:  434
2022-07-09 12:50:05.274572: train loss : -0.9258
2022-07-09 12:50:11.451825: validation loss: -0.7182
2022-07-09 12:50:11.455277: Average global foreground Dice: [0.7979]
2022-07-09 12:50:11.497874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:50:12.317651: Suus1 maybe_update_lr lr: 0.001594
2022-07-09 12:50:12.342101: This epoch took 79.216424 s

2022-07-09 12:50:12.383541: 
epoch:  435
2022-07-09 12:51:23.220076: train loss : -0.9266
2022-07-09 12:51:28.590199: validation loss: -0.7247
2022-07-09 12:51:28.621268: Average global foreground Dice: [0.8066]
2022-07-09 12:51:28.641018: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:51:29.454288: Suus1 maybe_update_lr lr: 0.001572
2022-07-09 12:51:29.476903: This epoch took 77.069622 s

2022-07-09 12:51:29.498873: 
epoch:  436
2022-07-09 12:52:41.843119: train loss : -0.9248
2022-07-09 12:52:48.043232: validation loss: -0.7467
2022-07-09 12:52:48.075433: Average global foreground Dice: [0.8156]
2022-07-09 12:52:48.095288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:52:48.710555: Suus1 maybe_update_lr lr: 0.00155
2022-07-09 12:52:48.719614: This epoch took 79.205628 s

2022-07-09 12:52:48.721580: 
epoch:  437
2022-07-09 12:54:00.017667: train loss : -0.9251
2022-07-09 12:54:06.259378: validation loss: -0.7368
2022-07-09 12:54:06.280537: Average global foreground Dice: [0.8077]
2022-07-09 12:54:06.298113: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:54:07.291514: Suus1 maybe_update_lr lr: 0.001528
2022-07-09 12:54:07.310269: This epoch took 78.553427 s

2022-07-09 12:54:07.330613: 
epoch:  438
2022-07-09 12:55:17.742489: train loss : -0.9245
2022-07-09 12:55:23.486371: validation loss: -0.7401
2022-07-09 12:55:23.501899: Average global foreground Dice: [0.8064]
2022-07-09 12:55:23.519911: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:55:24.442159: Suus1 maybe_update_lr lr: 0.001506
2022-07-09 12:55:24.464057: This epoch took 77.105815 s

2022-07-09 12:55:24.495885: 
epoch:  439
2022-07-09 12:56:38.347988: train loss : -0.9232
2022-07-09 12:56:45.187141: validation loss: -0.7257
2022-07-09 12:56:45.218478: Average global foreground Dice: [0.8062]
2022-07-09 12:56:45.238290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:56:45.853838: Suus1 maybe_update_lr lr: 0.001483
2022-07-09 12:56:45.886927: This epoch took 81.354448 s

2022-07-09 12:56:45.920854: 
epoch:  440
2022-07-09 12:57:57.371281: train loss : -0.9274
2022-07-09 12:58:02.927148: validation loss: -0.7093
2022-07-09 12:58:02.958603: Average global foreground Dice: [0.7917]
2022-07-09 12:58:02.961798: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:58:03.713341: Suus1 maybe_update_lr lr: 0.001461
2022-07-09 12:58:03.734907: This epoch took 77.792052 s

2022-07-09 12:58:03.757873: 
epoch:  441
2022-07-09 12:59:14.743765: train loss : -0.9260
2022-07-09 12:59:20.095930: validation loss: -0.7269
2022-07-09 12:59:20.123844: Average global foreground Dice: [0.8062]
2022-07-09 12:59:20.150195: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 12:59:20.911272: Suus1 maybe_update_lr lr: 0.001439
2022-07-09 12:59:20.913749: This epoch took 77.133887 s

2022-07-09 12:59:20.932861: 
epoch:  442
2022-07-09 13:00:32.482735: train loss : -0.9250
2022-07-09 13:00:37.870834: validation loss: -0.7070
2022-07-09 13:00:37.882241: Average global foreground Dice: [0.7942]
2022-07-09 13:00:37.898884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:00:38.657426: Suus1 maybe_update_lr lr: 0.001416
2022-07-09 13:00:38.678987: This epoch took 77.737452 s

2022-07-09 13:00:38.699061: 
epoch:  443
2022-07-09 13:01:50.724049: train loss : -0.9264
2022-07-09 13:01:57.119404: validation loss: -0.7521
2022-07-09 13:01:57.164329: Average global foreground Dice: [0.818]
2022-07-09 13:01:57.199606: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:01:57.851972: Suus1 maybe_update_lr lr: 0.001394
2022-07-09 13:01:57.874134: This epoch took 79.164109 s

2022-07-09 13:01:57.909875: 
epoch:  444
2022-07-09 13:03:09.503621: train loss : -0.9244
2022-07-09 13:03:15.361403: validation loss: -0.7259
2022-07-09 13:03:15.405204: Average global foreground Dice: [0.8035]
2022-07-09 13:03:15.434017: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:03:16.111277: Suus1 maybe_update_lr lr: 0.001372
2022-07-09 13:03:16.125281: This epoch took 78.182418 s

2022-07-09 13:03:16.135326: 
epoch:  445
2022-07-09 13:04:27.764148: train loss : -0.9265
2022-07-09 13:04:33.561909: validation loss: -0.7436
2022-07-09 13:04:33.603924: Average global foreground Dice: [0.8146]
2022-07-09 13:04:33.654878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:04:34.553256: Suus1 maybe_update_lr lr: 0.001349
2022-07-09 13:04:34.585900: This epoch took 78.444080 s

2022-07-09 13:04:34.618868: 
epoch:  446
2022-07-09 13:05:47.425947: train loss : -0.9274
2022-07-09 13:05:52.767291: validation loss: -0.7300
2022-07-09 13:05:52.801215: Average global foreground Dice: [0.804]
2022-07-09 13:05:52.833879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:05:53.695660: Suus1 maybe_update_lr lr: 0.001327
2022-07-09 13:05:53.710194: This epoch took 79.058335 s

2022-07-09 13:05:53.715570: 
epoch:  447
2022-07-09 13:07:05.911136: train loss : -0.9262
2022-07-09 13:07:12.551404: validation loss: -0.7534
2022-07-09 13:07:12.578305: Average global foreground Dice: [0.8181]
2022-07-09 13:07:12.604875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:07:13.366880: Suus1 maybe_update_lr lr: 0.001304
2022-07-09 13:07:13.387912: This epoch took 79.659043 s

2022-07-09 13:07:13.411862: 
epoch:  448
2022-07-09 13:08:24.073781: train loss : -0.9264
2022-07-09 13:08:29.746521: validation loss: -0.7347
2022-07-09 13:08:29.787519: Average global foreground Dice: [0.8034]
2022-07-09 13:08:29.799854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:08:30.609349: Suus1 maybe_update_lr lr: 0.001282
2022-07-09 13:08:30.620528: This epoch took 77.177655 s

2022-07-09 13:08:30.622540: 
epoch:  449
2022-07-09 13:09:42.187210: train loss : -0.9274
2022-07-09 13:09:47.810893: validation loss: -0.7077
2022-07-09 13:09:47.853246: Average global foreground Dice: [0.7892]
2022-07-09 13:09:47.878867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:09:48.811680: Suus1 maybe_update_lr lr: 0.001259
2022-07-09 13:09:48.831971: saving scheduled checkpoint file...
2022-07-09 13:09:49.007361: saving checkpoint...
2022-07-09 13:09:50.767851: done, saving took 1.91 seconds
2022-07-09 13:09:50.785075: done
2022-07-09 13:09:50.787214: This epoch took 80.162728 s

2022-07-09 13:09:50.789123: 
epoch:  450
2022-07-09 13:11:01.652711: train loss : -0.9285
2022-07-09 13:11:07.216997: validation loss: -0.7151
2022-07-09 13:11:07.239419: Average global foreground Dice: [0.8028]
2022-07-09 13:11:07.251071: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:11:08.023000: Suus1 maybe_update_lr lr: 0.001236
2022-07-09 13:11:08.043705: This epoch took 77.252632 s

2022-07-09 13:11:08.045903: 
epoch:  451
2022-07-09 13:12:20.996410: train loss : -0.9285
2022-07-09 13:12:26.704431: validation loss: -0.7391
2022-07-09 13:12:26.735552: Average global foreground Dice: [0.8109]
2022-07-09 13:12:26.750896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:12:27.496259: Suus1 maybe_update_lr lr: 0.001214
2022-07-09 13:12:27.515888: This epoch took 79.467913 s

2022-07-09 13:12:27.541153: 
epoch:  452
2022-07-09 13:13:38.933361: train loss : -0.9276
2022-07-09 13:13:44.712562: validation loss: -0.7269
2022-07-09 13:13:44.744279: Average global foreground Dice: [0.809]
2022-07-09 13:13:44.756861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:13:45.485122: Suus1 maybe_update_lr lr: 0.001191
2022-07-09 13:13:45.504913: This epoch took 77.942015 s

2022-07-09 13:13:45.516958: 
epoch:  453
2022-07-09 13:14:56.169389: train loss : -0.9280
2022-07-09 13:15:01.582163: validation loss: -0.7466
2022-07-09 13:15:01.602960: Average global foreground Dice: [0.8122]
2022-07-09 13:15:01.622591: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:15:02.325828: Suus1 maybe_update_lr lr: 0.001168
2022-07-09 13:15:02.356181: This epoch took 76.798907 s

2022-07-09 13:15:02.381003: 
epoch:  454
2022-07-09 13:16:14.653736: train loss : -0.9285
2022-07-09 13:16:20.637288: validation loss: -0.7252
2022-07-09 13:16:20.681312: Average global foreground Dice: [0.801]
2022-07-09 13:16:20.692548: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:16:21.482049: Suus1 maybe_update_lr lr: 0.001145
2022-07-09 13:16:21.511766: This epoch took 79.106881 s

2022-07-09 13:16:21.528706: 
epoch:  455
2022-07-09 13:17:34.342026: train loss : -0.9286
2022-07-09 13:17:40.318275: validation loss: -0.7445
2022-07-09 13:17:40.346240: Average global foreground Dice: [0.8163]
2022-07-09 13:17:40.365858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:17:41.087350: Suus1 maybe_update_lr lr: 0.001122
2022-07-09 13:17:41.091461: This epoch took 79.536598 s

2022-07-09 13:17:41.102724: 
epoch:  456
2022-07-09 13:18:52.999640: train loss : -0.9277
2022-07-09 13:18:59.457301: validation loss: -0.7358
2022-07-09 13:18:59.490360: Average global foreground Dice: [0.8092]
2022-07-09 13:18:59.510186: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:19:00.333119: Suus1 maybe_update_lr lr: 0.001099
2022-07-09 13:19:00.353948: This epoch took 79.229929 s

2022-07-09 13:19:00.375883: 
epoch:  457
2022-07-09 13:20:12.285645: train loss : -0.9285
2022-07-09 13:20:17.982242: validation loss: -0.7176
2022-07-09 13:20:18.003048: Average global foreground Dice: [0.7953]
2022-07-09 13:20:18.022902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:20:18.586620: Suus1 maybe_update_lr lr: 0.001076
2022-07-09 13:20:18.618892: This epoch took 78.221006 s

2022-07-09 13:20:18.651873: 
epoch:  458
2022-07-09 13:21:30.953085: train loss : -0.9274
2022-07-09 13:21:36.511581: validation loss: -0.7489
2022-07-09 13:21:36.537718: Average global foreground Dice: [0.8185]
2022-07-09 13:21:36.557515: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:21:37.188487: Suus1 maybe_update_lr lr: 0.001053
2022-07-09 13:21:37.207902: This epoch took 78.523034 s

2022-07-09 13:21:37.226843: 
epoch:  459
2022-07-09 13:22:51.142215: train loss : -0.9291
2022-07-09 13:22:56.462319: validation loss: -0.7401
2022-07-09 13:22:56.496368: Average global foreground Dice: [0.81]
2022-07-09 13:22:56.524003: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:22:57.147458: Suus1 maybe_update_lr lr: 0.00103
2022-07-09 13:22:57.171314: This epoch took 79.927445 s

2022-07-09 13:22:57.193878: 
epoch:  460
2022-07-09 13:24:09.004283: train loss : -0.9291
2022-07-09 13:24:14.635374: validation loss: -0.7528
2022-07-09 13:24:14.661339: Average global foreground Dice: [0.8121]
2022-07-09 13:24:14.681153: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:24:15.405186: Suus1 maybe_update_lr lr: 0.001007
2022-07-09 13:24:15.437928: This epoch took 78.221956 s

2022-07-09 13:24:15.470845: 
epoch:  461
2022-07-09 13:25:27.679634: train loss : -0.9302
2022-07-09 13:25:33.445415: validation loss: -0.7323
2022-07-09 13:25:33.480294: Average global foreground Dice: [0.8087]
2022-07-09 13:25:33.501877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:25:34.258544: Suus1 maybe_update_lr lr: 0.000983
2022-07-09 13:25:34.274010: This epoch took 78.770136 s

2022-07-09 13:25:34.292103: 
epoch:  462
2022-07-09 13:26:46.029190: train loss : -0.9292
2022-07-09 13:26:51.852963: validation loss: -0.7211
2022-07-09 13:26:51.881732: Average global foreground Dice: [0.8058]
2022-07-09 13:26:51.911859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:26:52.718623: Suus1 maybe_update_lr lr: 0.00096
2022-07-09 13:26:52.735903: This epoch took 78.406035 s

2022-07-09 13:26:52.771260: 
epoch:  463
2022-07-09 13:28:04.684296: train loss : -0.9290
2022-07-09 13:28:09.823328: validation loss: -0.7349
2022-07-09 13:28:09.845234: Average global foreground Dice: [0.8104]
2022-07-09 13:28:09.876376: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:28:10.620040: Suus1 maybe_update_lr lr: 0.000937
2022-07-09 13:28:10.650903: This epoch took 77.839366 s

2022-07-09 13:28:10.678343: 
epoch:  464
2022-07-09 13:29:23.745385: train loss : -0.9300
2022-07-09 13:29:29.177454: validation loss: -0.7271
2022-07-09 13:29:29.211300: Average global foreground Dice: [0.8035]
2022-07-09 13:29:29.241879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:29:30.045386: Suus1 maybe_update_lr lr: 0.000913
2022-07-09 13:29:30.076070: This epoch took 79.381210 s

2022-07-09 13:29:30.097849: 
epoch:  465
2022-07-09 13:30:41.778856: train loss : -0.9291
2022-07-09 13:30:47.605011: validation loss: -0.7153
2022-07-09 13:30:47.625363: Average global foreground Dice: [0.8038]
2022-07-09 13:30:47.645092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:30:48.269253: Suus1 maybe_update_lr lr: 0.00089
2022-07-09 13:30:48.299910: This epoch took 78.173044 s

2022-07-09 13:30:48.324854: 
epoch:  466
2022-07-09 13:32:00.338767: train loss : -0.9304
2022-07-09 13:32:06.317407: validation loss: -0.7490
2022-07-09 13:32:06.335459: Average global foreground Dice: [0.8163]
2022-07-09 13:32:06.337660: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:32:07.089292: Suus1 maybe_update_lr lr: 0.000866
2022-07-09 13:32:07.091918: This epoch took 78.746959 s

2022-07-09 13:32:07.111952: 
epoch:  467
2022-07-09 13:33:19.878839: train loss : -0.9299
2022-07-09 13:33:25.835234: validation loss: -0.7290
2022-07-09 13:33:25.862595: Average global foreground Dice: [0.8033]
2022-07-09 13:33:25.892895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:33:26.622237: Suus1 maybe_update_lr lr: 0.000842
2022-07-09 13:33:26.654907: This epoch took 79.507035 s

2022-07-09 13:33:26.687865: 
epoch:  468
2022-07-09 13:34:39.542861: train loss : -0.9307
2022-07-09 13:34:45.821535: validation loss: -0.7417
2022-07-09 13:34:45.832725: Average global foreground Dice: [0.8117]
2022-07-09 13:34:45.875048: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:34:46.563237: Suus1 maybe_update_lr lr: 0.000819
2022-07-09 13:34:46.596913: This epoch took 79.876051 s

2022-07-09 13:34:46.618852: 
epoch:  469
2022-07-09 13:35:58.343754: train loss : -0.9296
2022-07-09 13:36:04.142907: validation loss: -0.7361
2022-07-09 13:36:04.173400: Average global foreground Dice: [0.8076]
2022-07-09 13:36:04.219846: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:36:04.817035: Suus1 maybe_update_lr lr: 0.000795
2022-07-09 13:36:04.845590: This epoch took 78.204720 s

2022-07-09 13:36:04.865638: 
epoch:  470
2022-07-09 13:37:16.606873: train loss : -0.9304
2022-07-09 13:37:22.553136: validation loss: -0.7350
2022-07-09 13:37:22.584231: Average global foreground Dice: [0.8042]
2022-07-09 13:37:22.631856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:37:23.226359: Suus1 maybe_update_lr lr: 0.000771
2022-07-09 13:37:23.245895: This epoch took 78.360162 s

2022-07-09 13:37:23.267877: 
epoch:  471
2022-07-09 13:38:34.481777: train loss : -0.9309
2022-07-09 13:38:40.554750: validation loss: -0.7493
2022-07-09 13:38:40.599242: Average global foreground Dice: [0.8227]
2022-07-09 13:38:40.620859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:38:41.274180: Suus1 maybe_update_lr lr: 0.000747
2022-07-09 13:38:41.293876: saving best epoch checkpoint...
2022-07-09 13:38:41.400492: saving checkpoint...
2022-07-09 13:38:43.113976: done, saving took 1.80 seconds
2022-07-09 13:38:43.147328: This epoch took 79.857455 s

2022-07-09 13:38:43.149497: 
epoch:  472
2022-07-09 13:39:54.514715: train loss : -0.9298
2022-07-09 13:40:00.827098: validation loss: -0.7410
2022-07-09 13:40:00.837662: Average global foreground Dice: [0.8169]
2022-07-09 13:40:00.855689: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:40:01.537204: Suus1 maybe_update_lr lr: 0.000723
2022-07-09 13:40:01.568225: saving best epoch checkpoint...
2022-07-09 13:40:01.658962: saving checkpoint...
2022-07-09 13:40:03.039392: done, saving took 1.45 seconds
2022-07-09 13:40:03.055155: This epoch took 79.903622 s

2022-07-09 13:40:03.057339: 
epoch:  473
2022-07-09 13:41:13.595443: train loss : -0.9319
2022-07-09 13:41:19.644813: validation loss: -0.7331
2022-07-09 13:41:19.659810: Average global foreground Dice: [0.8108]
2022-07-09 13:41:19.688875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:41:20.510987: Suus1 maybe_update_lr lr: 0.000699
2022-07-09 13:41:20.513525: saving best epoch checkpoint...
2022-07-09 13:41:20.701075: saving checkpoint...
2022-07-09 13:41:22.330534: done, saving took 1.81 seconds
2022-07-09 13:41:22.345719: This epoch took 79.286319 s

2022-07-09 13:41:22.347658: 
epoch:  474
2022-07-09 13:42:33.910477: train loss : -0.9309
2022-07-09 13:42:39.770700: validation loss: -0.7179
2022-07-09 13:42:39.796211: Average global foreground Dice: [0.802]
2022-07-09 13:42:39.798558: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:42:40.584589: Suus1 maybe_update_lr lr: 0.000675
2022-07-09 13:42:40.616923: This epoch took 78.267228 s

2022-07-09 13:42:40.638845: 
epoch:  475
2022-07-09 13:43:52.787225: train loss : -0.9308
2022-07-09 13:43:58.496498: validation loss: -0.7327
2022-07-09 13:43:58.546264: Average global foreground Dice: [0.8113]
2022-07-09 13:43:58.558922: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:43:59.220883: Suus1 maybe_update_lr lr: 0.00065
2022-07-09 13:43:59.232995: This epoch took 78.572113 s

2022-07-09 13:43:59.240331: 
epoch:  476
2022-07-09 13:45:11.632775: train loss : -0.9306
2022-07-09 13:45:17.796579: validation loss: -0.7146
2022-07-09 13:45:17.825284: Average global foreground Dice: [0.8013]
2022-07-09 13:45:17.846873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:45:18.671600: Suus1 maybe_update_lr lr: 0.000626
2022-07-09 13:45:18.694691: This epoch took 79.428655 s

2022-07-09 13:45:18.715921: 
epoch:  477
2022-07-09 13:46:31.033000: train loss : -0.9304
2022-07-09 13:46:36.624556: validation loss: -0.7154
2022-07-09 13:46:36.655254: Average global foreground Dice: [0.7982]
2022-07-09 13:46:36.678664: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:46:37.292580: Suus1 maybe_update_lr lr: 0.000601
2022-07-09 13:46:37.319924: This epoch took 78.599887 s

2022-07-09 13:46:37.343870: 
epoch:  478
2022-07-09 13:47:48.612221: train loss : -0.9308
2022-07-09 13:47:54.512932: validation loss: -0.7488
2022-07-09 13:47:54.544250: Average global foreground Dice: [0.8112]
2022-07-09 13:47:54.565882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:47:55.388784: Suus1 maybe_update_lr lr: 0.000577
2022-07-09 13:47:55.405053: This epoch took 78.039178 s

2022-07-09 13:47:55.430858: 
epoch:  479
2022-07-09 13:49:07.274438: train loss : -0.9304
2022-07-09 13:49:13.708123: validation loss: -0.7196
2022-07-09 13:49:13.746198: Average global foreground Dice: [0.8034]
2022-07-09 13:49:13.762065: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:49:14.633011: Suus1 maybe_update_lr lr: 0.000552
2022-07-09 13:49:14.653423: This epoch took 79.206309 s

2022-07-09 13:49:14.662071: 
epoch:  480
2022-07-09 13:50:27.053032: train loss : -0.9309
2022-07-09 13:50:32.644851: validation loss: -0.7521
2022-07-09 13:50:32.681727: Average global foreground Dice: [0.8261]
2022-07-09 13:50:32.701647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:50:33.564919: Suus1 maybe_update_lr lr: 0.000527
2022-07-09 13:50:33.584887: This epoch took 78.902557 s

2022-07-09 13:50:33.606873: 
epoch:  481
2022-07-09 13:51:45.337801: train loss : -0.9320
2022-07-09 13:51:51.460713: validation loss: -0.7374
2022-07-09 13:51:51.494285: Average global foreground Dice: [0.803]
2022-07-09 13:51:51.515015: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:51:52.131157: Suus1 maybe_update_lr lr: 0.000502
2022-07-09 13:51:52.150891: This epoch took 78.527644 s

2022-07-09 13:51:52.174871: 
epoch:  482
2022-07-09 13:53:05.829913: train loss : -0.9305
2022-07-09 13:53:11.231645: validation loss: -0.7401
2022-07-09 13:53:11.254432: Average global foreground Dice: [0.8098]
2022-07-09 13:53:11.275891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:53:11.904161: Suus1 maybe_update_lr lr: 0.000477
2022-07-09 13:53:11.936029: This epoch took 79.729788 s

2022-07-09 13:53:11.962051: 
epoch:  483
2022-07-09 13:54:24.184558: train loss : -0.9339
2022-07-09 13:54:29.693057: validation loss: -0.7229
2022-07-09 13:54:29.736288: Average global foreground Dice: [0.8049]
2022-07-09 13:54:29.763501: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:54:30.687213: Suus1 maybe_update_lr lr: 0.000451
2022-07-09 13:54:30.718431: This epoch took 78.719552 s

2022-07-09 13:54:30.744018: 
epoch:  484
2022-07-09 13:55:41.695581: train loss : -0.9332
2022-07-09 13:55:47.809233: validation loss: -0.7356
2022-07-09 13:55:47.840503: Average global foreground Dice: [0.8071]
2022-07-09 13:55:47.860415: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:55:48.751436: Suus1 maybe_update_lr lr: 0.000426
2022-07-09 13:55:48.756930: This epoch took 77.992821 s

2022-07-09 13:55:48.780863: 
epoch:  485
2022-07-09 13:57:00.154479: train loss : -0.9325
2022-07-09 13:57:06.174091: validation loss: -0.7196
2022-07-09 13:57:06.208242: Average global foreground Dice: [0.8051]
2022-07-09 13:57:06.240107: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:57:06.973217: Suus1 maybe_update_lr lr: 0.0004
2022-07-09 13:57:06.992910: This epoch took 78.190034 s

2022-07-09 13:57:07.014861: 
epoch:  486
2022-07-09 13:58:17.725621: train loss : -0.9334
2022-07-09 13:58:23.215376: validation loss: -0.7477
2022-07-09 13:58:23.240730: Average global foreground Dice: [0.8085]
2022-07-09 13:58:23.261872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:58:23.974967: Suus1 maybe_update_lr lr: 0.000375
2022-07-09 13:58:24.008148: This epoch took 76.976890 s

2022-07-09 13:58:24.028171: 
epoch:  487
2022-07-09 13:59:35.037443: train loss : -0.9324
2022-07-09 13:59:40.416781: validation loss: -0.7357
2022-07-09 13:59:40.453449: Average global foreground Dice: [0.809]
2022-07-09 13:59:40.465870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 13:59:41.255342: Suus1 maybe_update_lr lr: 0.000348
2022-07-09 13:59:41.276922: This epoch took 77.218029 s

2022-07-09 13:59:41.298863: 
epoch:  488
2022-07-09 14:00:53.666703: train loss : -0.9322
2022-07-09 14:00:58.731112: validation loss: -0.7257
2022-07-09 14:00:58.761441: Average global foreground Dice: [0.8003]
2022-07-09 14:00:58.779870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:00:59.374718: Suus1 maybe_update_lr lr: 0.000322
2022-07-09 14:00:59.377183: This epoch took 78.061329 s

2022-07-09 14:00:59.410751: 
epoch:  489
2022-07-09 14:02:12.573243: train loss : -0.9331
2022-07-09 14:02:18.654562: validation loss: -0.7464
2022-07-09 14:02:18.685917: Average global foreground Dice: [0.8165]
2022-07-09 14:02:18.692573: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:02:19.400120: Suus1 maybe_update_lr lr: 0.000296
2022-07-09 14:02:19.419916: This epoch took 79.987473 s

2022-07-09 14:02:19.444852: 
epoch:  490
2022-07-09 14:03:31.655042: train loss : -0.9337
2022-07-09 14:03:38.265464: validation loss: -0.7423
2022-07-09 14:03:38.290320: Average global foreground Dice: [0.8132]
2022-07-09 14:03:38.306181: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:03:39.101018: Suus1 maybe_update_lr lr: 0.000269
2022-07-09 14:03:39.132027: This epoch took 79.671153 s

2022-07-09 14:03:39.158982: 
epoch:  491
2022-07-09 14:04:51.382542: train loss : -0.9319
2022-07-09 14:04:57.005184: validation loss: -0.7297
2022-07-09 14:04:57.036279: Average global foreground Dice: [0.807]
2022-07-09 14:04:57.048888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:04:57.702245: Suus1 maybe_update_lr lr: 0.000242
2022-07-09 14:04:57.731127: This epoch took 78.550250 s

2022-07-09 14:04:57.751195: 
epoch:  492
2022-07-09 14:06:09.452950: train loss : -0.9320
2022-07-09 14:06:15.173190: validation loss: -0.7424
2022-07-09 14:06:15.204354: Average global foreground Dice: [0.8201]
2022-07-09 14:06:15.234875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:06:15.874012: Suus1 maybe_update_lr lr: 0.000215
2022-07-09 14:06:15.894965: This epoch took 78.122091 s

2022-07-09 14:06:15.916900: 
epoch:  493
2022-07-09 14:07:27.800692: train loss : -0.9341
2022-07-09 14:07:34.324763: validation loss: -0.7166
2022-07-09 14:07:34.333841: Average global foreground Dice: [0.799]
2022-07-09 14:07:34.377574: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:07:35.033185: Suus1 maybe_update_lr lr: 0.000187
2022-07-09 14:07:35.052943: This epoch took 79.117064 s

2022-07-09 14:07:35.084851: 
epoch:  494
2022-07-09 14:08:47.374126: train loss : -0.9333
2022-07-09 14:08:52.619924: validation loss: -0.7130
2022-07-09 14:08:52.646600: Average global foreground Dice: [0.7898]
2022-07-09 14:08:52.675854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:08:53.287233: Suus1 maybe_update_lr lr: 0.000158
2022-07-09 14:08:53.308898: This epoch took 78.201016 s

2022-07-09 14:08:53.327573: 
epoch:  495
2022-07-09 14:10:07.122970: train loss : -0.9321
2022-07-09 14:10:12.940182: validation loss: -0.7439
2022-07-09 14:10:12.984201: Average global foreground Dice: [0.8128]
2022-07-09 14:10:12.999461: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:10:13.555231: Suus1 maybe_update_lr lr: 0.00013
2022-07-09 14:10:13.593625: This epoch took 80.245942 s

2022-07-09 14:10:13.619008: 
epoch:  496
2022-07-09 14:11:26.432151: train loss : -0.9339
2022-07-09 14:11:32.447742: validation loss: -0.7555
2022-07-09 14:11:32.475285: Average global foreground Dice: [0.8234]
2022-07-09 14:11:32.487869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:11:33.221049: Suus1 maybe_update_lr lr: 0.0001
2022-07-09 14:11:33.252912: This epoch took 79.623453 s

2022-07-09 14:11:33.281986: 
epoch:  497
2022-07-09 14:12:45.204859: train loss : -0.9338
2022-07-09 14:12:51.220307: validation loss: -0.7272
2022-07-09 14:12:51.251454: Average global foreground Dice: [0.8031]
2022-07-09 14:12:51.271095: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:12:52.119117: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-09 14:12:52.137000: This epoch took 78.829654 s

2022-07-09 14:12:52.155064: 
epoch:  498
2022-07-09 14:14:03.954072: train loss : -0.9347
2022-07-09 14:14:10.698826: validation loss: -0.7244
2022-07-09 14:14:10.728283: Average global foreground Dice: [0.7935]
2022-07-09 14:14:10.737200: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:14:11.340148: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-09 14:14:11.359892: This epoch took 79.180006 s

2022-07-09 14:14:11.378269: 
epoch:  499
2022-07-09 14:15:22.792370: train loss : -0.9331
2022-07-09 14:15:28.713358: validation loss: -0.7571
2022-07-09 14:15:28.732272: Average global foreground Dice: [0.82]
2022-07-09 14:15:28.763976: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:15:29.439977: Suus1 maybe_update_lr lr: 0.0
2022-07-09 14:15:29.460112: saving scheduled checkpoint file...
2022-07-09 14:15:29.601254: saving checkpoint...
2022-07-09 14:15:31.222189: done, saving took 1.74 seconds
2022-07-09 14:15:31.239622: done
2022-07-09 14:15:31.241746: This epoch took 79.842884 s

2022-07-09 14:15:31.310745: saving checkpoint...
2022-07-09 14:15:32.592465: done, saving took 1.35 seconds
panc_001 (2, 46, 136, 219)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
suus panc_001 transposed
suus panc_001 not saving softmax
suus panc_001 voeg toe aan pred_gt tuples voor later
panc_010 (2, 59, 218, 339)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 218, 339)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 58], [0, 83]]
number of tiles: 8
computing Gaussian
done
prediction done
suus panc_010 transposed
suus panc_010 not saving softmax
suus panc_010 voeg toe aan pred_gt tuples voor later
panc_016 (2, 57, 172, 277)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 172, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 12], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_016 transposed
suus panc_016 not saving softmax
suus panc_016 voeg toe aan pred_gt tuples voor later
panc_018 (2, 58, 159, 227)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_018 transposed
suus panc_018 not saving softmax
suus panc_018 voeg toe aan pred_gt tuples voor later
panc_029 (2, 66, 204, 317)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 204, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 44], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_029 transposed
suus panc_029 not saving softmax
suus panc_029 voeg toe aan pred_gt tuples voor later
panc_049 (2, 67, 232, 324)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 232, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 72], [0, 68]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_049 transposed
suus panc_049 not saving softmax
suus panc_049 voeg toe aan pred_gt tuples voor later
panc_050 (2, 44, 176, 228)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 176, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 16], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_050 transposed
suus panc_050 not saving softmax
suus panc_050 voeg toe aan pred_gt tuples voor later
panc_070 (2, 67, 181, 263)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 181, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 21], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_070 transposed
suus panc_070 not saving softmax
suus panc_070 voeg toe aan pred_gt tuples voor later
panc_081 (2, 80, 125, 199)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
suus panc_081 transposed
suus panc_081 not saving softmax
suus panc_081 voeg toe aan pred_gt tuples voor later
panc_083 (2, 68, 180, 283)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 180, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 20], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_083 transposed
suus panc_083 not saving softmax
suus panc_083 voeg toe aan pred_gt tuples voor later
panc_087 (2, 84, 162, 246)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 162, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 2], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_087 transposed
suus panc_087 not saving softmax
suus panc_087 voeg toe aan pred_gt tuples voor later
panc_098 (2, 66, 157, 333)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 77]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_098 transposed
suus panc_098 not saving softmax
suus panc_098 voeg toe aan pred_gt tuples voor later
panc_110 (2, 56, 185, 331)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 75]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_110 transposed
suus panc_110 not saving softmax
suus panc_110 voeg toe aan pred_gt tuples voor later
panc_120 (2, 64, 172, 266)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_120 transposed
suus panc_120 not saving softmax
suus panc_120 voeg toe aan pred_gt tuples voor later
panc_126 (2, 56, 196, 282)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 196, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 36], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_126 transposed
suus panc_126 not saving softmax
suus panc_126 voeg toe aan pred_gt tuples voor later
panc_127 (2, 60, 170, 343)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 343)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 87]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_127 transposed
suus panc_127 not saving softmax
suus panc_127 voeg toe aan pred_gt tuples voor later
panc_130 (2, 64, 158, 264)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_130 transposed
suus panc_130 not saving softmax
suus panc_130 voeg toe aan pred_gt tuples voor later
panc_149 (2, 55, 162, 297)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 162, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 2], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_149 transposed
suus panc_149 not saving softmax
suus panc_149 voeg toe aan pred_gt tuples voor later
panc_158 (2, 94, 209, 322)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 209, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 49], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_158 transposed
suus panc_158 not saving softmax
suus panc_158 voeg toe aan pred_gt tuples voor later
panc_160 (2, 54, 146, 276)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 20]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_160 transposed
suus panc_160 not saving softmax
suus panc_160 voeg toe aan pred_gt tuples voor later
panc_169 (2, 60, 160, 233)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_169 transposed
suus panc_169 not saving softmax
suus panc_169 voeg toe aan pred_gt tuples voor later
panc_172 (2, 66, 179, 315)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 179, 315)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 19], [0, 59]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_172 transposed
suus panc_172 not saving softmax
suus panc_172 voeg toe aan pred_gt tuples voor later
panc_173 (2, 67, 168, 272)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 168, 272)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 8], [0, 16]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_173 transposed
suus panc_173 not saving softmax
suus panc_173 voeg toe aan pred_gt tuples voor later
panc_181 (2, 59, 164, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 164, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 4], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_181 transposed
suus panc_181 not saving softmax
suus panc_181 voeg toe aan pred_gt tuples voor later
panc_212 (2, 62, 178, 295)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_212 transposed
suus panc_212 not saving softmax
suus panc_212 voeg toe aan pred_gt tuples voor later
panc_214 (2, 55, 150, 308)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 52]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_214 transposed
suus panc_214 not saving softmax
suus panc_214 voeg toe aan pred_gt tuples voor later
panc_229 (2, 54, 166, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 166, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 6], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_229 transposed
suus panc_229 not saving softmax
suus panc_229 voeg toe aan pred_gt tuples voor later
panc_242 (2, 58, 180, 314)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 180, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 20], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_242 transposed
suus panc_242 not saving softmax
suus panc_242 voeg toe aan pred_gt tuples voor later
panc_279 (2, 53, 180, 251)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 20], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_279 transposed
suus panc_279 not saving softmax
suus panc_279 voeg toe aan pred_gt tuples voor later
panc_284 (2, 64, 172, 296)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_284 transposed
suus panc_284 not saving softmax
suus panc_284 voeg toe aan pred_gt tuples voor later
panc_292 (2, 58, 158, 293)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 37]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_292 transposed
suus panc_292 not saving softmax
suus panc_292 voeg toe aan pred_gt tuples voor later
panc_309 (2, 58, 155, 283)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 27]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_309 transposed
suus panc_309 not saving softmax
suus panc_309 voeg toe aan pred_gt tuples voor later
panc_316 (2, 56, 138, 230)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_316 transposed
suus panc_316 not saving softmax
suus panc_316 voeg toe aan pred_gt tuples voor later
panc_326 (2, 55, 199, 308)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 199, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 39], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_326 transposed
suus panc_326 not saving softmax
suus panc_326 voeg toe aan pred_gt tuples voor later
panc_327 (2, 59, 217, 336)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 217, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 57], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_327 transposed
suus panc_327 not saving softmax
suus panc_327 voeg toe aan pred_gt tuples voor later
panc_330 (2, 59, 182, 237)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 182, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 22], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_330 transposed
suus panc_330 not saving softmax
suus panc_330 voeg toe aan pred_gt tuples voor later
panc_347 (2, 62, 165, 290)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 165, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 5], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_347 transposed
suus panc_347 not saving softmax
suus panc_347 voeg toe aan pred_gt tuples voor later
panc_348 (2, 57, 151, 247)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_348 transposed
suus panc_348 not saving softmax
suus panc_348 voeg toe aan pred_gt tuples voor later
panc_350 (2, 61, 170, 278)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 170, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 10], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_350 transposed
suus panc_350 not saving softmax
suus panc_350 voeg toe aan pred_gt tuples voor later
panc_356 (2, 82, 186, 261)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 186, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 26], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_356 transposed
suus panc_356 not saving softmax
suus panc_356 voeg toe aan pred_gt tuples voor later
panc_357 (2, 80, 169, 259)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 169, 259)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 9], [0, 3]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_357 transposed
suus panc_357 not saving softmax
suus panc_357 voeg toe aan pred_gt tuples voor later
panc_372 (2, 61, 224, 387)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 224, 387)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 64], [0, 66, 131]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_372 transposed
suus panc_372 not saving softmax
suus panc_372 voeg toe aan pred_gt tuples voor later
panc_376 (2, 63, 183, 303)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 183, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 23], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_376 transposed
suus panc_376 not saving softmax
suus panc_376 voeg toe aan pred_gt tuples voor later
panc_379 (2, 44, 160, 243)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
suus panc_379 transposed
suus panc_379 not saving softmax
suus panc_379 voeg toe aan pred_gt tuples voor later
panc_382 (2, 60, 171, 295)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_382 transposed
suus panc_382 not saving softmax
suus panc_382 voeg toe aan pred_gt tuples voor later
panc_385 (2, 90, 201, 286)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 201, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 41], [0, 30]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_385 transposed
suus panc_385 not saving softmax
suus panc_385 voeg toe aan pred_gt tuples voor later
panc_401 (2, 62, 153, 260)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_401 transposed
suus panc_401 not saving softmax
suus panc_401 voeg toe aan pred_gt tuples voor later
panc_409 (2, 17, 166, 297)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 41]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_409 transposed
suus panc_409 not saving softmax
suus panc_409 voeg toe aan pred_gt tuples voor later
2022-07-09 14:17:20.424409: finished prediction
2022-07-09 14:17:20.427622: evaluation of raw predictions
2022-07-09 14:17:27.911505: determining postprocessing
Foreground vs background
before: 0.8014626640389227
after:  0.7980517635003669
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_001.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_081.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_130.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_212.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_316.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_357.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_010.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_083.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_149.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_214.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_326.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_372.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_016.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_087.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_158.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_229.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_327.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_376.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_018.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_098.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_160.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_242.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_330.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_379.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_029.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_110.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_169.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_279.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_347.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_382.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_049.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_120.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_172.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_284.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_348.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_385.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_050.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_126.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_173.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_292.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_350.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_401.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_070.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_127.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_181.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_309.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_356.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_409.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='4', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 14:17:48.446018: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-09 14:17:49.251061: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-09 14:17:49.255159: The split file contains 5 splits.
2022-07-09 14:17:49.257147: Desired fold for training: 4
2022-07-09 14:17:49.259043: This split has 192 training and 47 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-09 14:17:51.528383: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-09 14:18:04.214595: Unable to plot network architecture:
2022-07-09 14:18:04.225840: local variable 'g' referenced before assignment
2022-07-09 14:18:04.243436: 
printing the network instead:

2022-07-09 14:18:04.264853: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-09 14:18:04.287893: 

2022-07-09 14:18:04.296581: 
epoch:  0
2022-07-09 14:19:28.958868: train loss : -0.0231
2022-07-09 14:19:34.051141: validation loss: -0.1598
2022-07-09 14:19:34.080881: Average global foreground Dice: [0.3224]
2022-07-09 14:19:34.105930: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:19:34.941440: Suus1 maybe_update_lr lr: 0.009982
2022-07-09 14:19:34.985011: This epoch took 90.686304 s

2022-07-09 14:19:35.006873: 
epoch:  1
2022-07-09 14:20:47.775797: train loss : -0.2638
2022-07-09 14:20:53.625091: validation loss: -0.3023
2022-07-09 14:20:53.649378: Average global foreground Dice: [0.4334]
2022-07-09 14:20:53.655087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:20:54.227989: Suus1 maybe_update_lr lr: 0.009964
2022-07-09 14:20:54.251909: saving best epoch checkpoint...
2022-07-09 14:20:54.402219: saving checkpoint...
2022-07-09 14:20:55.933937: done, saving took 1.66 seconds
2022-07-09 14:20:55.950436: This epoch took 80.922539 s

2022-07-09 14:20:55.953101: 
epoch:  2
2022-07-09 14:22:06.595953: train loss : -0.4097
2022-07-09 14:22:11.400100: validation loss: -0.4088
2022-07-09 14:22:11.440907: Average global foreground Dice: [0.5399]
2022-07-09 14:22:11.461987: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:22:12.028011: Suus1 maybe_update_lr lr: 0.009946
2022-07-09 14:22:12.046877: saving best epoch checkpoint...
2022-07-09 14:22:12.186304: saving checkpoint...
2022-07-09 14:22:13.833931: done, saving took 1.77 seconds
2022-07-09 14:22:13.854948: This epoch took 77.899699 s

2022-07-09 14:22:13.856975: 
epoch:  3
2022-07-09 14:23:24.559365: train loss : -0.4735
2022-07-09 14:23:30.396095: validation loss: -0.4572
2022-07-09 14:23:30.412355: Average global foreground Dice: [0.5702]
2022-07-09 14:23:30.433865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:23:31.137336: Suus1 maybe_update_lr lr: 0.009928
2022-07-09 14:23:31.156889: saving best epoch checkpoint...
2022-07-09 14:23:31.232541: saving checkpoint...
2022-07-09 14:23:32.848706: done, saving took 1.67 seconds
2022-07-09 14:23:32.863140: This epoch took 79.004046 s

2022-07-09 14:23:32.865113: 
epoch:  4
2022-07-09 14:24:44.221747: train loss : -0.4910
2022-07-09 14:24:49.431001: validation loss: -0.5357
2022-07-09 14:24:49.461669: Average global foreground Dice: [0.6383]
2022-07-09 14:24:49.475935: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:24:50.259719: Suus1 maybe_update_lr lr: 0.00991
2022-07-09 14:24:50.279306: saving best epoch checkpoint...
2022-07-09 14:24:50.399363: saving checkpoint...
2022-07-09 14:24:51.927916: done, saving took 1.62 seconds
2022-07-09 14:24:51.941606: This epoch took 79.074531 s

2022-07-09 14:24:51.943535: 
epoch:  5
2022-07-09 14:26:03.374653: train loss : -0.5513
2022-07-09 14:26:08.418252: validation loss: -0.5335
2022-07-09 14:26:08.458306: Average global foreground Dice: [0.6399]
2022-07-09 14:26:08.470869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:26:09.156862: Suus1 maybe_update_lr lr: 0.009892
2022-07-09 14:26:09.164036: saving best epoch checkpoint...
2022-07-09 14:26:09.253030: saving checkpoint...
2022-07-09 14:26:11.360884: done, saving took 2.17 seconds
2022-07-09 14:26:11.377125: This epoch took 79.431733 s

2022-07-09 14:26:11.379282: 
epoch:  6
2022-07-09 14:27:21.863900: train loss : -0.5538
2022-07-09 14:27:26.924885: validation loss: -0.5427
2022-07-09 14:27:26.958244: Average global foreground Dice: [0.6511]
2022-07-09 14:27:26.990890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:27:27.698379: Suus1 maybe_update_lr lr: 0.009874
2022-07-09 14:27:27.719901: saving best epoch checkpoint...
2022-07-09 14:27:27.796859: saving checkpoint...
2022-07-09 14:27:29.318692: done, saving took 1.58 seconds
2022-07-09 14:27:29.333095: This epoch took 77.951641 s

2022-07-09 14:27:29.335070: 
epoch:  7
2022-07-09 14:28:41.290004: train loss : -0.5727
2022-07-09 14:28:46.440368: validation loss: -0.6137
2022-07-09 14:28:46.470464: Average global foreground Dice: [0.7021]
2022-07-09 14:28:46.497882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:28:47.185725: Suus1 maybe_update_lr lr: 0.009856
2022-07-09 14:28:47.218890: saving best epoch checkpoint...
2022-07-09 14:28:47.379749: saving checkpoint...
2022-07-09 14:28:48.995420: done, saving took 1.75 seconds
2022-07-09 14:28:49.011659: This epoch took 79.674585 s

2022-07-09 14:28:49.013844: 
epoch:  8
2022-07-09 14:29:59.919828: train loss : -0.5906
2022-07-09 14:30:05.368356: validation loss: -0.6181
2022-07-09 14:30:05.400708: Average global foreground Dice: [0.706]
2022-07-09 14:30:05.429872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:30:05.989621: Suus1 maybe_update_lr lr: 0.009838
2022-07-09 14:30:06.006451: saving best epoch checkpoint...
2022-07-09 14:30:06.076045: saving checkpoint...
2022-07-09 14:30:07.912995: done, saving took 1.90 seconds
2022-07-09 14:30:07.928476: This epoch took 78.912642 s

2022-07-09 14:30:07.930514: 
epoch:  9
2022-07-09 14:31:17.384913: train loss : -0.6294
2022-07-09 14:31:22.549568: validation loss: -0.6209
2022-07-09 14:31:22.557802: Average global foreground Dice: [0.7129]
2022-07-09 14:31:22.589235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:31:23.369486: Suus1 maybe_update_lr lr: 0.00982
2022-07-09 14:31:23.405910: saving best epoch checkpoint...
2022-07-09 14:31:23.511075: saving checkpoint...
2022-07-09 14:31:25.144771: done, saving took 1.72 seconds
2022-07-09 14:31:25.159550: This epoch took 77.227079 s

2022-07-09 14:31:25.161510: 
epoch:  10
2022-07-09 14:32:37.848950: train loss : -0.6262
2022-07-09 14:32:43.337316: validation loss: -0.6443
2022-07-09 14:32:43.369281: Average global foreground Dice: [0.7246]
2022-07-09 14:32:43.381863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:32:44.069644: Suus1 maybe_update_lr lr: 0.009802
2022-07-09 14:32:44.090884: saving best epoch checkpoint...
2022-07-09 14:32:44.224238: saving checkpoint...
2022-07-09 14:32:46.036291: done, saving took 1.92 seconds
2022-07-09 14:32:46.051838: This epoch took 80.888409 s

2022-07-09 14:32:46.053929: 
epoch:  11
2022-07-09 14:33:56.575243: train loss : -0.6476
2022-07-09 14:34:01.507250: validation loss: -0.6707
2022-07-09 14:34:01.538451: Average global foreground Dice: [0.7471]
2022-07-09 14:34:01.558123: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:34:02.255995: Suus1 maybe_update_lr lr: 0.009784
2022-07-09 14:34:02.277065: saving best epoch checkpoint...
2022-07-09 14:34:02.440911: saving checkpoint...
2022-07-09 14:34:03.920823: done, saving took 1.63 seconds
2022-07-09 14:34:03.936773: This epoch took 77.880813 s

2022-07-09 14:34:03.938803: 
epoch:  12
2022-07-09 14:35:13.644980: train loss : -0.6475
2022-07-09 14:35:18.444091: validation loss: -0.5867
2022-07-09 14:35:18.468287: Average global foreground Dice: [0.6643]
2022-07-09 14:35:18.471660: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:35:19.399839: Suus1 maybe_update_lr lr: 0.009766
2022-07-09 14:35:19.417124: saving best epoch checkpoint...
2022-07-09 14:35:19.542829: saving checkpoint...
2022-07-09 14:35:21.116341: done, saving took 1.67 seconds
2022-07-09 14:35:21.130347: This epoch took 77.189653 s

2022-07-09 14:35:21.132298: 
epoch:  13
2022-07-09 14:36:33.084137: train loss : -0.6415
2022-07-09 14:36:38.565647: validation loss: -0.6277
2022-07-09 14:36:38.605175: Average global foreground Dice: [0.7185]
2022-07-09 14:36:38.624100: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:36:39.310780: Suus1 maybe_update_lr lr: 0.009748
2022-07-09 14:36:39.343109: saving best epoch checkpoint...
2022-07-09 14:36:39.458219: saving checkpoint...
2022-07-09 14:36:41.230057: done, saving took 1.87 seconds
2022-07-09 14:36:41.243925: This epoch took 80.109681 s

2022-07-09 14:36:41.245743: 
epoch:  14
2022-07-09 14:37:51.821904: train loss : -0.6572
2022-07-09 14:37:57.062118: validation loss: -0.6699
2022-07-09 14:37:57.080179: Average global foreground Dice: [0.7476]
2022-07-09 14:37:57.107678: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:37:58.055434: Suus1 maybe_update_lr lr: 0.00973
2022-07-09 14:37:58.076896: saving best epoch checkpoint...
2022-07-09 14:37:58.146669: saving checkpoint...
2022-07-09 14:37:59.863683: done, saving took 1.76 seconds
2022-07-09 14:37:59.878096: This epoch took 78.630362 s

2022-07-09 14:37:59.880310: 
epoch:  15
2022-07-09 14:39:10.020063: train loss : -0.6532
2022-07-09 14:39:14.908874: validation loss: -0.6769
2022-07-09 14:39:14.929694: Average global foreground Dice: [0.754]
2022-07-09 14:39:14.949288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:39:15.570141: Suus1 maybe_update_lr lr: 0.009712
2022-07-09 14:39:15.599883: saving best epoch checkpoint...
2022-07-09 14:39:15.698821: saving checkpoint...
2022-07-09 14:39:17.240432: done, saving took 1.61 seconds
2022-07-09 14:39:17.254386: This epoch took 77.371955 s

2022-07-09 14:39:17.256450: 
epoch:  16
2022-07-09 14:40:29.691302: train loss : -0.6802
2022-07-09 14:40:35.841058: validation loss: -0.6925
2022-07-09 14:40:35.848690: Average global foreground Dice: [0.7641]
2022-07-09 14:40:35.878629: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:40:36.589665: Suus1 maybe_update_lr lr: 0.009693
2022-07-09 14:40:36.610910: saving best epoch checkpoint...
2022-07-09 14:40:36.695052: saving checkpoint...
2022-07-09 14:40:38.247495: done, saving took 1.61 seconds
2022-07-09 14:40:38.261990: This epoch took 81.003591 s

2022-07-09 14:40:38.263966: 
epoch:  17
2022-07-09 14:41:48.381560: train loss : -0.6700
2022-07-09 14:41:53.911142: validation loss: -0.6653
2022-07-09 14:41:53.965184: Average global foreground Dice: [0.7425]
2022-07-09 14:41:53.980433: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:41:54.745544: Suus1 maybe_update_lr lr: 0.009675
2022-07-09 14:41:54.766927: saving best epoch checkpoint...
2022-07-09 14:41:54.867764: saving checkpoint...
2022-07-09 14:41:56.463397: done, saving took 1.67 seconds
2022-07-09 14:41:56.477778: This epoch took 78.212000 s

2022-07-09 14:41:56.480069: 
epoch:  18
2022-07-09 14:43:07.906017: train loss : -0.6789
2022-07-09 14:43:13.099028: validation loss: -0.6711
2022-07-09 14:43:13.130308: Average global foreground Dice: [0.7497]
2022-07-09 14:43:13.154896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:43:13.890500: Suus1 maybe_update_lr lr: 0.009657
2022-07-09 14:43:13.897628: saving best epoch checkpoint...
2022-07-09 14:43:13.989474: saving checkpoint...
2022-07-09 14:43:15.537822: done, saving took 1.61 seconds
2022-07-09 14:43:15.551215: This epoch took 79.069160 s

2022-07-09 14:43:15.553283: 
epoch:  19
2022-07-09 14:44:26.629423: train loss : -0.6806
2022-07-09 14:44:31.326599: validation loss: -0.6993
2022-07-09 14:44:31.351256: Average global foreground Dice: [0.7661]
2022-07-09 14:44:31.382230: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:44:32.101512: Suus1 maybe_update_lr lr: 0.009639
2022-07-09 14:44:32.122882: saving best epoch checkpoint...
2022-07-09 14:44:32.184983: saving checkpoint...
2022-07-09 14:44:33.711673: done, saving took 1.57 seconds
2022-07-09 14:44:33.726039: This epoch took 78.170817 s

2022-07-09 14:44:33.727995: 
epoch:  20
2022-07-09 14:45:44.879861: train loss : -0.6871
2022-07-09 14:45:50.402454: validation loss: -0.6830
2022-07-09 14:45:50.426893: Average global foreground Dice: [0.754]
2022-07-09 14:45:50.434250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:45:51.432291: Suus1 maybe_update_lr lr: 0.009621
2022-07-09 14:45:51.463213: saving best epoch checkpoint...
2022-07-09 14:45:51.566138: saving checkpoint...
2022-07-09 14:45:53.227854: done, saving took 1.74 seconds
2022-07-09 14:45:53.241490: This epoch took 79.511485 s

2022-07-09 14:45:53.243554: 
epoch:  21
2022-07-09 14:47:03.667220: train loss : -0.6859
2022-07-09 14:47:08.653802: validation loss: -0.6837
2022-07-09 14:47:08.661429: Average global foreground Dice: [0.7522]
2022-07-09 14:47:08.665373: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:47:09.497054: Suus1 maybe_update_lr lr: 0.009603
2022-07-09 14:47:09.511325: saving best epoch checkpoint...
2022-07-09 14:47:09.645917: saving checkpoint...
2022-07-09 14:47:11.721563: done, saving took 2.19 seconds
2022-07-09 14:47:11.737504: This epoch took 78.491998 s

2022-07-09 14:47:11.739558: 
epoch:  22
2022-07-09 14:48:23.839420: train loss : -0.6864
2022-07-09 14:48:29.123984: validation loss: -0.7091
2022-07-09 14:48:29.126986: Average global foreground Dice: [0.7788]
2022-07-09 14:48:29.131927: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:48:30.107514: Suus1 maybe_update_lr lr: 0.009585
2022-07-09 14:48:30.138888: saving best epoch checkpoint...
2022-07-09 14:48:30.251768: saving checkpoint...
2022-07-09 14:48:31.702372: done, saving took 1.54 seconds
2022-07-09 14:48:31.716221: This epoch took 79.974719 s

2022-07-09 14:48:31.718276: 
epoch:  23
2022-07-09 14:49:42.934391: train loss : -0.7093
2022-07-09 14:49:48.191387: validation loss: -0.7107
2022-07-09 14:49:48.196461: Average global foreground Dice: [0.7778]
2022-07-09 14:49:48.203317: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:49:48.868650: Suus1 maybe_update_lr lr: 0.009567
2022-07-09 14:49:48.898886: saving best epoch checkpoint...
2022-07-09 14:49:48.947619: saving checkpoint...
2022-07-09 14:49:50.593378: done, saving took 1.69 seconds
2022-07-09 14:49:50.607111: This epoch took 78.886759 s

2022-07-09 14:49:50.609140: 
epoch:  24
2022-07-09 14:51:01.313662: train loss : -0.6997
2022-07-09 14:51:06.445648: validation loss: -0.6961
2022-07-09 14:51:06.454640: Average global foreground Dice: [0.7641]
2022-07-09 14:51:06.484047: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:51:07.119057: Suus1 maybe_update_lr lr: 0.009549
2022-07-09 14:51:07.148458: saving best epoch checkpoint...
2022-07-09 14:51:07.244028: saving checkpoint...
2022-07-09 14:51:08.921807: done, saving took 1.74 seconds
2022-07-09 14:51:08.935890: This epoch took 78.324867 s

2022-07-09 14:51:08.937932: 
epoch:  25
2022-07-09 14:52:20.102401: train loss : -0.7087
2022-07-09 14:52:24.970321: validation loss: -0.6965
2022-07-09 14:52:24.978496: Average global foreground Dice: [0.7573]
2022-07-09 14:52:25.003886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:52:25.694845: Suus1 maybe_update_lr lr: 0.009531
2022-07-09 14:52:25.721094: saving best epoch checkpoint...
2022-07-09 14:52:25.857223: saving checkpoint...
2022-07-09 14:52:27.634811: done, saving took 1.87 seconds
2022-07-09 14:52:27.649286: This epoch took 78.709417 s

2022-07-09 14:52:27.651681: 
epoch:  26
2022-07-09 14:53:39.414779: train loss : -0.7216
2022-07-09 14:53:44.614371: validation loss: -0.7155
2022-07-09 14:53:44.647301: Average global foreground Dice: [0.7763]
2022-07-09 14:53:44.679870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:53:45.274606: Suus1 maybe_update_lr lr: 0.009513
2022-07-09 14:53:45.287874: saving best epoch checkpoint...
2022-07-09 14:53:45.450799: saving checkpoint...
2022-07-09 14:53:47.079663: done, saving took 1.77 seconds
2022-07-09 14:53:47.094194: This epoch took 79.440494 s

2022-07-09 14:53:47.096365: 
epoch:  27
2022-07-09 14:54:57.180524: train loss : -0.7233
2022-07-09 14:55:02.341184: validation loss: -0.7205
2022-07-09 14:55:02.378276: Average global foreground Dice: [0.7865]
2022-07-09 14:55:02.388712: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:55:03.037576: Suus1 maybe_update_lr lr: 0.009495
2022-07-09 14:55:03.071101: saving best epoch checkpoint...
2022-07-09 14:55:03.253373: saving checkpoint...
2022-07-09 14:55:04.840968: done, saving took 1.74 seconds
2022-07-09 14:55:04.856329: This epoch took 77.757999 s

2022-07-09 14:55:04.858346: 
epoch:  28
2022-07-09 14:56:15.928898: train loss : -0.7162
2022-07-09 14:56:21.044851: validation loss: -0.7320
2022-07-09 14:56:21.047837: Average global foreground Dice: [0.7954]
2022-07-09 14:56:21.057095: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:56:22.057417: Suus1 maybe_update_lr lr: 0.009476
2022-07-09 14:56:22.078876: saving best epoch checkpoint...
2022-07-09 14:56:22.145249: saving checkpoint...
2022-07-09 14:56:23.929464: done, saving took 1.83 seconds
2022-07-09 14:56:23.943330: This epoch took 79.082956 s

2022-07-09 14:56:23.945601: 
epoch:  29
2022-07-09 14:57:34.630626: train loss : -0.7273
2022-07-09 14:57:40.828988: validation loss: -0.7181
2022-07-09 14:57:40.883248: Average global foreground Dice: [0.7771]
2022-07-09 14:57:40.899142: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:57:41.467037: Suus1 maybe_update_lr lr: 0.009458
2022-07-09 14:57:41.477081: saving best epoch checkpoint...
2022-07-09 14:57:41.537167: saving checkpoint...
2022-07-09 14:57:43.150158: done, saving took 1.67 seconds
2022-07-09 14:57:43.163870: This epoch took 79.216313 s

2022-07-09 14:57:43.165846: 
epoch:  30
2022-07-09 14:58:53.400503: train loss : -0.7279
2022-07-09 14:58:58.933989: validation loss: -0.7365
2022-07-09 14:58:58.974855: Average global foreground Dice: [0.7947]
2022-07-09 14:58:59.004877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 14:58:59.666460: Suus1 maybe_update_lr lr: 0.00944
2022-07-09 14:58:59.693898: saving best epoch checkpoint...
2022-07-09 14:58:59.800180: saving checkpoint...
2022-07-09 14:59:01.313246: done, saving took 1.60 seconds
2022-07-09 14:59:01.326602: This epoch took 78.158838 s

2022-07-09 14:59:01.328614: 
epoch:  31
2022-07-09 15:00:11.262700: train loss : -0.7210
2022-07-09 15:00:17.077682: validation loss: -0.7249
2022-07-09 15:00:17.087437: Average global foreground Dice: [0.7871]
2022-07-09 15:00:17.105723: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:00:17.738302: Suus1 maybe_update_lr lr: 0.009422
2022-07-09 15:00:17.751890: saving best epoch checkpoint...
2022-07-09 15:00:17.830451: saving checkpoint...
2022-07-09 15:00:19.292188: done, saving took 1.51 seconds
2022-07-09 15:00:19.309582: This epoch took 77.978817 s

2022-07-09 15:00:19.312302: 
epoch:  32
2022-07-09 15:01:30.163237: train loss : -0.7252
2022-07-09 15:01:34.894578: validation loss: -0.7265
2022-07-09 15:01:34.925920: Average global foreground Dice: [0.7943]
2022-07-09 15:01:34.949014: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:01:35.820576: Suus1 maybe_update_lr lr: 0.009404
2022-07-09 15:01:35.852894: saving best epoch checkpoint...
2022-07-09 15:01:35.945434: saving checkpoint...
2022-07-09 15:01:37.706004: done, saving took 1.82 seconds
2022-07-09 15:01:37.719308: This epoch took 78.404611 s

2022-07-09 15:01:37.721430: 
epoch:  33
2022-07-09 15:02:48.214065: train loss : -0.7302
2022-07-09 15:02:53.819110: validation loss: -0.7244
2022-07-09 15:02:53.853260: Average global foreground Dice: [0.7896]
2022-07-09 15:02:53.885909: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:02:54.591659: Suus1 maybe_update_lr lr: 0.009386
2022-07-09 15:02:54.626984: saving best epoch checkpoint...
2022-07-09 15:02:54.738975: saving checkpoint...
2022-07-09 15:02:56.278087: done, saving took 1.62 seconds
2022-07-09 15:02:56.292322: This epoch took 78.568942 s

2022-07-09 15:02:56.294287: 
epoch:  34
2022-07-09 15:04:07.603837: train loss : -0.7294
2022-07-09 15:04:12.694216: validation loss: -0.6971
2022-07-09 15:04:12.717889: Average global foreground Dice: [0.7618]
2022-07-09 15:04:12.721754: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:04:13.424521: Suus1 maybe_update_lr lr: 0.009368
2022-07-09 15:04:13.441271: saving best epoch checkpoint...
2022-07-09 15:04:13.573248: saving checkpoint...
2022-07-09 15:04:15.253584: done, saving took 1.78 seconds
2022-07-09 15:04:15.268389: This epoch took 78.972184 s

2022-07-09 15:04:15.270540: 
epoch:  35
2022-07-09 15:05:27.039470: train loss : -0.7376
2022-07-09 15:05:32.279559: validation loss: -0.7096
2022-07-09 15:05:32.282843: Average global foreground Dice: [0.7747]
2022-07-09 15:05:32.285000: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:05:33.173539: Suus1 maybe_update_lr lr: 0.00935
2022-07-09 15:05:33.202225: saving best epoch checkpoint...
2022-07-09 15:05:33.310851: saving checkpoint...
2022-07-09 15:05:34.788388: done, saving took 1.58 seconds
2022-07-09 15:05:34.803733: This epoch took 79.531191 s

2022-07-09 15:05:34.805748: 
epoch:  36
2022-07-09 15:06:47.647783: train loss : -0.7431
2022-07-09 15:06:53.272151: validation loss: -0.7132
2022-07-09 15:06:53.319355: Average global foreground Dice: [0.7759]
2022-07-09 15:06:53.342861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:06:54.261659: Suus1 maybe_update_lr lr: 0.009331
2022-07-09 15:06:54.283031: saving best epoch checkpoint...
2022-07-09 15:06:54.378919: saving checkpoint...
2022-07-09 15:06:55.994723: done, saving took 1.68 seconds
2022-07-09 15:06:56.009064: This epoch took 81.201198 s

2022-07-09 15:06:56.011215: 
epoch:  37
2022-07-09 15:08:06.852973: train loss : -0.7408
2022-07-09 15:08:12.266324: validation loss: -0.7264
2022-07-09 15:08:12.296371: Average global foreground Dice: [0.7859]
2022-07-09 15:08:12.318937: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:08:12.928248: Suus1 maybe_update_lr lr: 0.009313
2022-07-09 15:08:12.941880: saving best epoch checkpoint...
2022-07-09 15:08:13.040821: saving checkpoint...
2022-07-09 15:08:14.705986: done, saving took 1.74 seconds
2022-07-09 15:08:14.719315: This epoch took 78.706181 s

2022-07-09 15:08:14.721312: 
epoch:  38
2022-07-09 15:09:26.665006: train loss : -0.7471
2022-07-09 15:09:31.595382: validation loss: -0.7028
2022-07-09 15:09:31.621261: Average global foreground Dice: [0.7715]
2022-07-09 15:09:31.630477: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:09:32.427452: Suus1 maybe_update_lr lr: 0.009295
2022-07-09 15:09:32.455472: saving best epoch checkpoint...
2022-07-09 15:09:32.592955: saving checkpoint...
2022-07-09 15:09:34.367992: done, saving took 1.89 seconds
2022-07-09 15:09:34.382173: This epoch took 79.658941 s

2022-07-09 15:09:34.384328: 
epoch:  39
2022-07-09 15:10:44.440048: train loss : -0.7434
2022-07-09 15:10:49.335468: validation loss: -0.7272
2022-07-09 15:10:49.361928: Average global foreground Dice: [0.789]
2022-07-09 15:10:49.372763: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:10:49.961651: Suus1 maybe_update_lr lr: 0.009277
2022-07-09 15:10:49.981138: saving best epoch checkpoint...
2022-07-09 15:10:50.057532: saving checkpoint...
2022-07-09 15:10:51.583932: done, saving took 1.58 seconds
2022-07-09 15:10:51.660882: This epoch took 77.274531 s

2022-07-09 15:10:51.704934: 
epoch:  40
2022-07-09 15:12:01.931993: train loss : -0.7451
2022-07-09 15:12:06.962488: validation loss: -0.7354
2022-07-09 15:12:06.992405: Average global foreground Dice: [0.7931]
2022-07-09 15:12:07.011879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:12:07.675613: Suus1 maybe_update_lr lr: 0.009259
2022-07-09 15:12:07.707891: saving best epoch checkpoint...
2022-07-09 15:12:07.845454: saving checkpoint...
2022-07-09 15:12:09.431095: done, saving took 1.71 seconds
2022-07-09 15:12:09.445567: This epoch took 77.718856 s

2022-07-09 15:12:09.447758: 
epoch:  41
2022-07-09 15:13:19.882251: train loss : -0.7472
2022-07-09 15:13:25.229930: validation loss: -0.7478
2022-07-09 15:13:25.251657: Average global foreground Dice: [0.8069]
2022-07-09 15:13:25.254086: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:13:26.148519: Suus1 maybe_update_lr lr: 0.009241
2022-07-09 15:13:26.180907: saving best epoch checkpoint...
2022-07-09 15:13:26.276862: saving checkpoint...
2022-07-09 15:13:28.002431: done, saving took 1.80 seconds
2022-07-09 15:13:28.020027: This epoch took 78.570174 s

2022-07-09 15:13:28.022074: 
epoch:  42
2022-07-09 15:14:39.907218: train loss : -0.7465
2022-07-09 15:14:45.520825: validation loss: -0.7220
2022-07-09 15:14:45.544607: Average global foreground Dice: [0.782]
2022-07-09 15:14:45.568689: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:14:46.466366: Suus1 maybe_update_lr lr: 0.009223
2022-07-09 15:14:46.490147: saving best epoch checkpoint...
2022-07-09 15:14:46.571842: saving checkpoint...
2022-07-09 15:14:48.277788: done, saving took 1.77 seconds
2022-07-09 15:14:48.293145: This epoch took 80.269155 s

2022-07-09 15:14:48.295296: 
epoch:  43
2022-07-09 15:16:00.461396: train loss : -0.7497
2022-07-09 15:16:05.250476: validation loss: -0.7250
2022-07-09 15:16:05.281265: Average global foreground Dice: [0.7875]
2022-07-09 15:16:05.296888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:16:05.990723: Suus1 maybe_update_lr lr: 0.009204
2022-07-09 15:16:06.010237: saving best epoch checkpoint...
2022-07-09 15:16:06.168298: saving checkpoint...
2022-07-09 15:16:07.837626: done, saving took 1.80 seconds
2022-07-09 15:16:07.853523: This epoch took 79.556212 s

2022-07-09 15:16:07.855577: 
epoch:  44
2022-07-09 15:17:20.252358: train loss : -0.7447
2022-07-09 15:17:25.084435: validation loss: -0.7278
2022-07-09 15:17:25.120307: Average global foreground Dice: [0.7848]
2022-07-09 15:17:25.131226: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:17:25.907345: Suus1 maybe_update_lr lr: 0.009186
2022-07-09 15:17:25.928981: saving best epoch checkpoint...
2022-07-09 15:17:26.030775: saving checkpoint...
2022-07-09 15:17:27.527878: done, saving took 1.58 seconds
2022-07-09 15:17:27.541237: This epoch took 79.683705 s

2022-07-09 15:17:27.543221: 
epoch:  45
2022-07-09 15:18:37.869036: train loss : -0.7432
2022-07-09 15:18:43.126497: validation loss: -0.7350
2022-07-09 15:18:43.186233: Average global foreground Dice: [0.7986]
2022-07-09 15:18:43.218854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:18:43.968769: Suus1 maybe_update_lr lr: 0.009168
2022-07-09 15:18:43.996233: saving best epoch checkpoint...
2022-07-09 15:18:44.105579: saving checkpoint...
2022-07-09 15:18:45.695114: done, saving took 1.67 seconds
2022-07-09 15:18:45.708704: This epoch took 78.163604 s

2022-07-09 15:18:45.710655: 
epoch:  46
2022-07-09 15:19:58.573286: train loss : -0.7419
2022-07-09 15:20:04.185181: validation loss: -0.7348
2022-07-09 15:20:04.189528: Average global foreground Dice: [0.7967]
2022-07-09 15:20:04.191899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:20:04.781524: Suus1 maybe_update_lr lr: 0.00915
2022-07-09 15:20:04.812059: saving best epoch checkpoint...
2022-07-09 15:20:04.902625: saving checkpoint...
2022-07-09 15:20:06.369918: done, saving took 1.54 seconds
2022-07-09 15:20:06.439029: This epoch took 80.726571 s

2022-07-09 15:20:06.460852: 
epoch:  47
2022-07-09 15:21:18.719135: train loss : -0.7429
2022-07-09 15:21:24.192380: validation loss: -0.7435
2022-07-09 15:21:24.198890: Average global foreground Dice: [0.801]
2022-07-09 15:21:24.225895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:21:24.746721: Suus1 maybe_update_lr lr: 0.009132
2022-07-09 15:21:24.767892: saving best epoch checkpoint...
2022-07-09 15:21:24.915611: saving checkpoint...
2022-07-09 15:21:26.559240: done, saving took 1.77 seconds
2022-07-09 15:21:26.572741: This epoch took 80.081866 s

2022-07-09 15:21:26.574725: 
epoch:  48
2022-07-09 15:22:37.696628: train loss : -0.7588
2022-07-09 15:22:43.095509: validation loss: -0.7553
2022-07-09 15:22:43.135870: Average global foreground Dice: [0.8114]
2022-07-09 15:22:43.166995: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:22:44.026418: Suus1 maybe_update_lr lr: 0.009114
2022-07-09 15:22:44.058903: saving best epoch checkpoint...
2022-07-09 15:22:44.147823: saving checkpoint...
2022-07-09 15:22:45.663744: done, saving took 1.57 seconds
2022-07-09 15:22:45.678391: This epoch took 79.101793 s

2022-07-09 15:22:45.680513: 
epoch:  49
2022-07-09 15:23:57.033077: train loss : -0.7629
2022-07-09 15:24:03.079967: validation loss: -0.7443
2022-07-09 15:24:03.088849: Average global foreground Dice: [0.8008]
2022-07-09 15:24:03.090926: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:24:03.755201: Suus1 maybe_update_lr lr: 0.009095
2022-07-09 15:24:03.771885: saving scheduled checkpoint file...
2022-07-09 15:24:03.897238: saving checkpoint...
2022-07-09 15:24:05.655244: done, saving took 1.86 seconds
2022-07-09 15:24:05.669924: done
2022-07-09 15:24:05.672689: saving best epoch checkpoint...
2022-07-09 15:24:05.712531: saving checkpoint...
2022-07-09 15:24:07.008106: done, saving took 1.33 seconds
2022-07-09 15:24:07.023183: This epoch took 81.340701 s

2022-07-09 15:24:07.025246: 
epoch:  50
2022-07-09 15:25:18.158606: train loss : -0.7597
2022-07-09 15:25:22.988618: validation loss: -0.7429
2022-07-09 15:25:23.007295: Average global foreground Dice: [0.7979]
2022-07-09 15:25:23.028884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:25:23.628211: Suus1 maybe_update_lr lr: 0.009077
2022-07-09 15:25:23.659902: saving best epoch checkpoint...
2022-07-09 15:25:23.779372: saving checkpoint...
2022-07-09 15:25:25.273337: done, saving took 1.59 seconds
2022-07-09 15:25:25.289184: This epoch took 78.262060 s

2022-07-09 15:25:25.291287: 
epoch:  51
2022-07-09 15:26:37.272408: train loss : -0.7599
2022-07-09 15:26:42.554741: validation loss: -0.7347
2022-07-09 15:26:42.575429: Average global foreground Dice: [0.7991]
2022-07-09 15:26:42.605137: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:26:43.315412: Suus1 maybe_update_lr lr: 0.009059
2022-07-09 15:26:43.325115: saving best epoch checkpoint...
2022-07-09 15:26:43.466845: saving checkpoint...
2022-07-09 15:26:45.013407: done, saving took 1.65 seconds
2022-07-09 15:26:45.028957: This epoch took 79.735707 s

2022-07-09 15:26:45.031178: 
epoch:  52
2022-07-09 15:27:56.498137: train loss : -0.7575
2022-07-09 15:28:01.387243: validation loss: -0.7468
2022-07-09 15:28:01.420351: Average global foreground Dice: [0.8017]
2022-07-09 15:28:01.441877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:28:02.431864: Suus1 maybe_update_lr lr: 0.009041
2022-07-09 15:28:02.445001: saving best epoch checkpoint...
2022-07-09 15:28:02.561756: saving checkpoint...
2022-07-09 15:28:04.035155: done, saving took 1.55 seconds
2022-07-09 15:28:04.049184: This epoch took 79.015938 s

2022-07-09 15:28:04.051317: 
epoch:  53
2022-07-09 15:29:15.663771: train loss : -0.7658
2022-07-09 15:29:20.754318: validation loss: -0.7372
2022-07-09 15:29:20.790230: Average global foreground Dice: [0.7963]
2022-07-09 15:29:20.801457: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:29:21.569879: Suus1 maybe_update_lr lr: 0.009023
2022-07-09 15:29:21.590912: saving best epoch checkpoint...
2022-07-09 15:29:21.682772: saving checkpoint...
2022-07-09 15:29:23.427222: done, saving took 1.81 seconds
2022-07-09 15:29:23.441305: This epoch took 79.387990 s

2022-07-09 15:29:23.443511: 
epoch:  54
2022-07-09 15:30:34.812266: train loss : -0.7692
2022-07-09 15:30:40.079382: validation loss: -0.7324
2022-07-09 15:30:40.110193: Average global foreground Dice: [0.7888]
2022-07-09 15:30:40.130011: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:30:40.764679: Suus1 maybe_update_lr lr: 0.009004
2022-07-09 15:30:40.794014: This epoch took 77.348487 s

2022-07-09 15:30:40.808197: 
epoch:  55
2022-07-09 15:31:51.308303: train loss : -0.7708
2022-07-09 15:31:55.971261: validation loss: -0.7419
2022-07-09 15:31:56.003875: Average global foreground Dice: [0.7989]
2022-07-09 15:31:56.028700: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:31:56.720543: Suus1 maybe_update_lr lr: 0.008986
2022-07-09 15:31:56.740013: saving best epoch checkpoint...
2022-07-09 15:31:56.833982: saving checkpoint...
2022-07-09 15:31:58.256713: done, saving took 1.47 seconds
2022-07-09 15:31:58.270533: This epoch took 77.453965 s

2022-07-09 15:31:58.272670: 
epoch:  56
2022-07-09 15:33:08.767882: train loss : -0.7811
2022-07-09 15:33:14.714873: validation loss: -0.7238
2022-07-09 15:33:14.720904: Average global foreground Dice: [0.7838]
2022-07-09 15:33:14.740079: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:33:15.391503: Suus1 maybe_update_lr lr: 0.008968
2022-07-09 15:33:15.407392: This epoch took 77.132764 s

2022-07-09 15:33:15.409676: 
epoch:  57
2022-07-09 15:34:27.665349: train loss : -0.7763
2022-07-09 15:34:32.905386: validation loss: -0.7537
2022-07-09 15:34:32.908221: Average global foreground Dice: [0.8087]
2022-07-09 15:34:32.912094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:34:33.602751: Suus1 maybe_update_lr lr: 0.00895
2022-07-09 15:34:33.613419: saving best epoch checkpoint...
2022-07-09 15:34:33.748251: saving checkpoint...
2022-07-09 15:34:35.606234: done, saving took 1.98 seconds
2022-07-09 15:34:35.620271: This epoch took 80.208407 s

2022-07-09 15:34:35.622283: 
epoch:  58
2022-07-09 15:35:47.740364: train loss : -0.7676
2022-07-09 15:35:52.497374: validation loss: -0.7278
2022-07-09 15:35:52.535240: Average global foreground Dice: [0.7858]
2022-07-09 15:35:52.563583: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:35:53.183667: Suus1 maybe_update_lr lr: 0.008931
2022-07-09 15:35:53.204909: This epoch took 77.580614 s

2022-07-09 15:35:53.232853: 
epoch:  59
2022-07-09 15:37:03.833539: train loss : -0.7735
2022-07-09 15:37:09.273528: validation loss: -0.7308
2022-07-09 15:37:09.300246: Average global foreground Dice: [0.7902]
2022-07-09 15:37:09.328877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:37:09.981454: Suus1 maybe_update_lr lr: 0.008913
2022-07-09 15:37:10.029049: This epoch took 76.783180 s

2022-07-09 15:37:10.054853: 
epoch:  60
2022-07-09 15:38:20.570045: train loss : -0.7664
2022-07-09 15:38:25.609512: validation loss: -0.7569
2022-07-09 15:38:25.636208: Average global foreground Dice: [0.8113]
2022-07-09 15:38:25.662243: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:38:26.426362: Suus1 maybe_update_lr lr: 0.008895
2022-07-09 15:38:26.445895: saving best epoch checkpoint...
2022-07-09 15:38:26.553766: saving checkpoint...
2022-07-09 15:38:28.518620: done, saving took 2.05 seconds
2022-07-09 15:38:28.534135: This epoch took 78.444270 s

2022-07-09 15:38:28.536161: 
epoch:  61
2022-07-09 15:39:40.763472: train loss : -0.7770
2022-07-09 15:39:46.061948: validation loss: -0.7383
2022-07-09 15:39:46.089262: Average global foreground Dice: [0.7939]
2022-07-09 15:39:46.105625: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:39:46.682180: Suus1 maybe_update_lr lr: 0.008877
2022-07-09 15:39:46.726065: saving best epoch checkpoint...
2022-07-09 15:39:46.822174: saving checkpoint...
2022-07-09 15:39:48.610803: done, saving took 1.85 seconds
2022-07-09 15:39:48.626971: This epoch took 80.088848 s

2022-07-09 15:39:48.629264: 
epoch:  62
2022-07-09 15:41:00.326153: train loss : -0.7810
2022-07-09 15:41:05.522170: validation loss: -0.7459
2022-07-09 15:41:05.549399: Average global foreground Dice: [0.7989]
2022-07-09 15:41:05.556732: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:41:06.268671: Suus1 maybe_update_lr lr: 0.008859
2022-07-09 15:41:06.289902: saving best epoch checkpoint...
2022-07-09 15:41:06.388060: saving checkpoint...
2022-07-09 15:41:07.886363: done, saving took 1.57 seconds
2022-07-09 15:41:07.900235: This epoch took 79.268741 s

2022-07-09 15:41:07.902246: 
epoch:  63
2022-07-09 15:42:19.384316: train loss : -0.7818
2022-07-09 15:42:24.518211: validation loss: -0.7556
2022-07-09 15:42:24.546238: Average global foreground Dice: [0.8077]
2022-07-09 15:42:24.570876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:42:25.311864: Suus1 maybe_update_lr lr: 0.00884
2022-07-09 15:42:25.343901: saving best epoch checkpoint...
2022-07-09 15:42:25.424632: saving checkpoint...
2022-07-09 15:42:27.044081: done, saving took 1.68 seconds
2022-07-09 15:42:27.058627: This epoch took 79.154490 s

2022-07-09 15:42:27.061979: 
epoch:  64
2022-07-09 15:43:37.918086: train loss : -0.7919
2022-07-09 15:43:42.872831: validation loss: -0.7577
2022-07-09 15:43:42.911321: Average global foreground Dice: [0.8096]
2022-07-09 15:43:42.939646: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:43:43.756578: Suus1 maybe_update_lr lr: 0.008822
2022-07-09 15:43:43.758926: saving best epoch checkpoint...
2022-07-09 15:43:43.801964: saving checkpoint...
2022-07-09 15:43:45.321814: done, saving took 1.56 seconds
2022-07-09 15:43:45.336189: This epoch took 78.271955 s

2022-07-09 15:43:45.338177: 
epoch:  65
2022-07-09 15:44:57.998574: train loss : -0.7884
2022-07-09 15:45:02.898083: validation loss: -0.7315
2022-07-09 15:45:02.929286: Average global foreground Dice: [0.7899]
2022-07-09 15:45:02.957869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:45:03.771964: Suus1 maybe_update_lr lr: 0.008804
2022-07-09 15:45:03.803887: This epoch took 78.463676 s

2022-07-09 15:45:03.823850: 
epoch:  66
2022-07-09 15:46:15.578217: train loss : -0.7882
2022-07-09 15:46:20.497690: validation loss: -0.7404
2022-07-09 15:46:20.513220: Average global foreground Dice: [0.7969]
2022-07-09 15:46:20.537876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:46:21.406142: Suus1 maybe_update_lr lr: 0.008785
2022-07-09 15:46:21.436948: This epoch took 77.596190 s

2022-07-09 15:46:21.469871: 
epoch:  67
2022-07-09 15:47:34.056869: train loss : -0.7880
2022-07-09 15:47:39.499041: validation loss: -0.7523
2022-07-09 15:47:39.534331: Average global foreground Dice: [0.8029]
2022-07-09 15:47:39.554709: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:47:40.330396: Suus1 maybe_update_lr lr: 0.008767
2022-07-09 15:47:40.362985: saving best epoch checkpoint...
2022-07-09 15:47:40.457060: saving checkpoint...
2022-07-09 15:47:42.175239: done, saving took 1.78 seconds
2022-07-09 15:47:42.189634: This epoch took 80.705317 s

2022-07-09 15:47:42.191829: 
epoch:  68
2022-07-09 15:48:53.981045: train loss : -0.7847
2022-07-09 15:48:59.211374: validation loss: -0.7533
2022-07-09 15:48:59.235348: Average global foreground Dice: [0.8058]
2022-07-09 15:48:59.265038: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:48:59.997158: Suus1 maybe_update_lr lr: 0.008749
2022-07-09 15:49:00.017900: saving best epoch checkpoint...
2022-07-09 15:49:00.096099: saving checkpoint...
2022-07-09 15:49:01.541190: done, saving took 1.50 seconds
2022-07-09 15:49:01.555086: This epoch took 79.361214 s

2022-07-09 15:49:01.557200: 
epoch:  69
2022-07-09 15:50:13.352178: train loss : -0.7873
2022-07-09 15:50:18.527610: validation loss: -0.7568
2022-07-09 15:50:18.560053: Average global foreground Dice: [0.8093]
2022-07-09 15:50:18.575659: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:50:19.258295: Suus1 maybe_update_lr lr: 0.008731
2022-07-09 15:50:19.264513: saving best epoch checkpoint...
2022-07-09 15:50:19.371676: saving checkpoint...
2022-07-09 15:50:20.916703: done, saving took 1.64 seconds
2022-07-09 15:50:20.930354: This epoch took 79.371214 s

2022-07-09 15:50:20.932379: 
epoch:  70
2022-07-09 15:51:32.132188: train loss : -0.7934
2022-07-09 15:51:37.230043: validation loss: -0.7661
2022-07-09 15:51:37.243510: Average global foreground Dice: [0.8198]
2022-07-09 15:51:37.252324: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:51:37.892905: Suus1 maybe_update_lr lr: 0.008712
2022-07-09 15:51:37.913877: saving best epoch checkpoint...
2022-07-09 15:51:37.973238: saving checkpoint...
2022-07-09 15:51:39.438925: done, saving took 1.51 seconds
2022-07-09 15:51:39.506233: This epoch took 78.572005 s

2022-07-09 15:51:39.526557: 
epoch:  71
2022-07-09 15:52:51.043182: train loss : -0.7925
2022-07-09 15:52:56.110989: validation loss: -0.7551
2022-07-09 15:52:56.142783: Average global foreground Dice: [0.8103]
2022-07-09 15:52:56.159087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:52:56.911554: Suus1 maybe_update_lr lr: 0.008694
2022-07-09 15:52:56.943892: saving best epoch checkpoint...
2022-07-09 15:52:57.021672: saving checkpoint...
2022-07-09 15:52:58.526836: done, saving took 1.55 seconds
2022-07-09 15:52:58.540750: This epoch took 79.012119 s

2022-07-09 15:52:58.542727: 
epoch:  72
2022-07-09 15:54:09.163265: train loss : -0.7953
2022-07-09 15:54:14.450220: validation loss: -0.7443
2022-07-09 15:54:14.481302: Average global foreground Dice: [0.8017]
2022-07-09 15:54:14.497878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:54:15.138480: Suus1 maybe_update_lr lr: 0.008676
2022-07-09 15:54:15.151089: This epoch took 76.606394 s

2022-07-09 15:54:15.173824: 
epoch:  73
2022-07-09 15:55:28.281322: train loss : -0.8008
2022-07-09 15:55:33.148542: validation loss: -0.7543
2022-07-09 15:55:33.157923: Average global foreground Dice: [0.8122]
2022-07-09 15:55:33.166712: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:55:33.833703: Suus1 maybe_update_lr lr: 0.008658
2022-07-09 15:55:33.843356: saving best epoch checkpoint...
2022-07-09 15:55:33.960205: saving checkpoint...
2022-07-09 15:55:35.558948: done, saving took 1.70 seconds
2022-07-09 15:55:35.610011: This epoch took 80.417123 s

2022-07-09 15:55:35.622322: 
epoch:  74
2022-07-09 15:56:46.420250: train loss : -0.8021
2022-07-09 15:56:52.023964: validation loss: -0.7643
2022-07-09 15:56:52.051293: Average global foreground Dice: [0.8161]
2022-07-09 15:56:52.070175: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:56:52.849730: Suus1 maybe_update_lr lr: 0.008639
2022-07-09 15:56:52.870897: saving best epoch checkpoint...
2022-07-09 15:56:52.989420: saving checkpoint...
2022-07-09 15:56:54.778718: done, saving took 1.89 seconds
2022-07-09 15:56:54.792659: This epoch took 79.168138 s

2022-07-09 15:56:54.794824: 
epoch:  75
2022-07-09 15:58:07.224104: train loss : -0.7995
2022-07-09 15:58:13.438298: validation loss: -0.7527
2022-07-09 15:58:13.468160: Average global foreground Dice: [0.8075]
2022-07-09 15:58:13.497858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:58:14.218787: Suus1 maybe_update_lr lr: 0.008621
2022-07-09 15:58:14.233403: saving best epoch checkpoint...
2022-07-09 15:58:14.316773: saving checkpoint...
2022-07-09 15:58:15.795531: done, saving took 1.55 seconds
2022-07-09 15:58:15.809148: This epoch took 81.012269 s

2022-07-09 15:58:15.811440: 
epoch:  76
2022-07-09 15:59:28.164642: train loss : -0.7943
2022-07-09 15:59:33.408832: validation loss: -0.7561
2022-07-09 15:59:33.425962: Average global foreground Dice: [0.8108]
2022-07-09 15:59:33.440638: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 15:59:34.129716: Suus1 maybe_update_lr lr: 0.008603
2022-07-09 15:59:34.159885: saving best epoch checkpoint...
2022-07-09 15:59:34.241789: saving checkpoint...
2022-07-09 15:59:35.764910: done, saving took 1.58 seconds
2022-07-09 15:59:35.778525: This epoch took 79.964961 s

2022-07-09 15:59:35.780485: 
epoch:  77
2022-07-09 16:00:46.154202: train loss : -0.7928
2022-07-09 16:00:51.522958: validation loss: -0.7525
2022-07-09 16:00:51.560396: Average global foreground Dice: [0.8057]
2022-07-09 16:00:51.585134: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:00:52.303691: Suus1 maybe_update_lr lr: 0.008584
2022-07-09 16:00:52.313990: saving best epoch checkpoint...
2022-07-09 16:00:52.402505: saving checkpoint...
2022-07-09 16:00:54.343637: done, saving took 2.02 seconds
2022-07-09 16:00:54.357759: This epoch took 78.575300 s

2022-07-09 16:00:54.359828: 
epoch:  78
2022-07-09 16:02:04.162193: train loss : -0.7963
2022-07-09 16:02:09.241543: validation loss: -0.7576
2022-07-09 16:02:09.295647: Average global foreground Dice: [0.8099]
2022-07-09 16:02:09.313866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:02:10.056454: Suus1 maybe_update_lr lr: 0.008566
2022-07-09 16:02:10.102026: saving best epoch checkpoint...
2022-07-09 16:02:10.169663: saving checkpoint...
2022-07-09 16:02:11.678762: done, saving took 1.57 seconds
2022-07-09 16:02:11.692829: This epoch took 77.330990 s

2022-07-09 16:02:11.694837: 
epoch:  79
2022-07-09 16:03:21.372363: train loss : -0.8009
2022-07-09 16:03:26.571135: validation loss: -0.7632
2022-07-09 16:03:26.582385: Average global foreground Dice: [0.817]
2022-07-09 16:03:26.598956: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:03:27.369525: Suus1 maybe_update_lr lr: 0.008548
2022-07-09 16:03:27.401891: saving best epoch checkpoint...
2022-07-09 16:03:27.500136: saving checkpoint...
2022-07-09 16:03:29.003742: done, saving took 1.58 seconds
2022-07-09 16:03:29.017694: This epoch took 77.320875 s

2022-07-09 16:03:29.019816: 
epoch:  80
2022-07-09 16:04:39.238080: train loss : -0.7878
2022-07-09 16:04:44.174589: validation loss: -0.7400
2022-07-09 16:04:44.214265: Average global foreground Dice: [0.8022]
2022-07-09 16:04:44.226882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:04:44.978129: Suus1 maybe_update_lr lr: 0.008529
2022-07-09 16:04:44.985042: This epoch took 75.963283 s

2022-07-09 16:04:44.996165: 
epoch:  81
2022-07-09 16:05:57.584882: train loss : -0.7800
2022-07-09 16:06:02.733011: validation loss: -0.7669
2022-07-09 16:06:02.772281: Average global foreground Dice: [0.8212]
2022-07-09 16:06:02.780778: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:06:03.554032: Suus1 maybe_update_lr lr: 0.008511
2022-07-09 16:06:03.574597: saving best epoch checkpoint...
2022-07-09 16:06:03.677417: saving checkpoint...
2022-07-09 16:06:05.783525: done, saving took 2.21 seconds
2022-07-09 16:06:05.797212: This epoch took 80.779749 s

2022-07-09 16:06:05.799304: 
epoch:  82
2022-07-09 16:07:15.064181: train loss : -0.7911
2022-07-09 16:07:20.649671: validation loss: -0.7438
2022-07-09 16:07:20.674851: Average global foreground Dice: [0.7994]
2022-07-09 16:07:20.687566: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:07:21.368951: Suus1 maybe_update_lr lr: 0.008493
2022-07-09 16:07:21.385042: This epoch took 75.583649 s

2022-07-09 16:07:21.406853: 
epoch:  83
2022-07-09 16:08:32.388933: train loss : -0.7815
2022-07-09 16:08:37.485165: validation loss: -0.7584
2022-07-09 16:08:37.509185: Average global foreground Dice: [0.8147]
2022-07-09 16:08:37.515515: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:08:38.336193: Suus1 maybe_update_lr lr: 0.008474
2022-07-09 16:08:38.352500: This epoch took 76.920460 s

2022-07-09 16:08:38.357863: 
epoch:  84
2022-07-09 16:09:50.104070: train loss : -0.7811
2022-07-09 16:09:55.852525: validation loss: -0.7584
2022-07-09 16:09:55.883725: Average global foreground Dice: [0.8144]
2022-07-09 16:09:55.913929: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:09:56.831259: Suus1 maybe_update_lr lr: 0.008456
2022-07-09 16:09:56.862035: saving best epoch checkpoint...
2022-07-09 16:09:56.964281: saving checkpoint...
2022-07-09 16:09:58.566641: done, saving took 1.68 seconds
2022-07-09 16:09:58.581234: This epoch took 80.221268 s

2022-07-09 16:09:58.583319: 
epoch:  85
2022-07-09 16:11:10.764046: train loss : -0.7880
2022-07-09 16:11:16.291409: validation loss: -0.7397
2022-07-09 16:11:16.300512: Average global foreground Dice: [0.8]
2022-07-09 16:11:16.330879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:11:17.122992: Suus1 maybe_update_lr lr: 0.008438
2022-07-09 16:11:17.154949: This epoch took 78.569567 s

2022-07-09 16:11:17.176843: 
epoch:  86
2022-07-09 16:12:28.948555: train loss : -0.8004
2022-07-09 16:12:33.815002: validation loss: -0.7605
2022-07-09 16:12:33.845231: Average global foreground Dice: [0.8161]
2022-07-09 16:12:33.859891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:12:34.431005: Suus1 maybe_update_lr lr: 0.008419
2022-07-09 16:12:34.447952: saving best epoch checkpoint...
2022-07-09 16:12:34.510004: saving checkpoint...
2022-07-09 16:12:36.395458: done, saving took 1.94 seconds
2022-07-09 16:12:36.410301: This epoch took 79.207529 s

2022-07-09 16:12:36.412442: 
epoch:  87
2022-07-09 16:13:47.249761: train loss : -0.8080
2022-07-09 16:13:53.006311: validation loss: -0.7501
2022-07-09 16:13:53.053279: Average global foreground Dice: [0.8049]
2022-07-09 16:13:53.085894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:13:54.063682: Suus1 maybe_update_lr lr: 0.008401
2022-07-09 16:13:54.088920: This epoch took 77.674456 s

2022-07-09 16:13:54.109917: 
epoch:  88
2022-07-09 16:15:04.964164: train loss : -0.8036
2022-07-09 16:15:10.140550: validation loss: -0.7587
2022-07-09 16:15:10.174484: Average global foreground Dice: [0.8138]
2022-07-09 16:15:10.184703: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:15:10.919217: Suus1 maybe_update_lr lr: 0.008383
2022-07-09 16:15:10.938898: saving best epoch checkpoint...
2022-07-09 16:15:11.011365: saving checkpoint...
2022-07-09 16:15:12.553453: done, saving took 1.59 seconds
2022-07-09 16:15:12.570431: This epoch took 78.454557 s

2022-07-09 16:15:12.572509: 
epoch:  89
2022-07-09 16:16:22.563298: train loss : -0.8024
2022-07-09 16:16:27.625029: validation loss: -0.7514
2022-07-09 16:16:27.662446: Average global foreground Dice: [0.8055]
2022-07-09 16:16:27.688071: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:16:28.605508: Suus1 maybe_update_lr lr: 0.008364
2022-07-09 16:16:28.615387: This epoch took 76.040966 s

2022-07-09 16:16:28.636955: 
epoch:  90
2022-07-09 16:17:42.367326: train loss : -0.8013
2022-07-09 16:17:47.327924: validation loss: -0.7506
2022-07-09 16:17:47.360221: Average global foreground Dice: [0.8073]
2022-07-09 16:17:47.364823: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:17:47.834299: Suus1 maybe_update_lr lr: 0.008346
2022-07-09 16:17:47.856014: This epoch took 79.212707 s

2022-07-09 16:17:47.876180: 
epoch:  91
2022-07-09 16:19:00.945238: train loss : -0.7992
2022-07-09 16:19:07.225347: validation loss: -0.7461
2022-07-09 16:19:07.260278: Average global foreground Dice: [0.8026]
2022-07-09 16:19:07.321872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:19:08.099418: Suus1 maybe_update_lr lr: 0.008328
2022-07-09 16:19:08.120908: This epoch took 80.230933 s

2022-07-09 16:19:08.144956: 
epoch:  92
2022-07-09 16:20:20.154023: train loss : -0.8010
2022-07-09 16:20:25.109423: validation loss: -0.7557
2022-07-09 16:20:25.152259: Average global foreground Dice: [0.8066]
2022-07-09 16:20:25.166759: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:20:25.870276: Suus1 maybe_update_lr lr: 0.008309
2022-07-09 16:20:25.891905: This epoch took 77.736271 s

2022-07-09 16:20:25.913873: 
epoch:  93
2022-07-09 16:21:37.784034: train loss : -0.7961
2022-07-09 16:21:42.847902: validation loss: -0.7524
2022-07-09 16:21:42.882387: Average global foreground Dice: [0.811]
2022-07-09 16:21:42.914886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:21:43.803581: Suus1 maybe_update_lr lr: 0.008291
2022-07-09 16:21:43.822925: This epoch took 77.887071 s

2022-07-09 16:21:43.837949: 
epoch:  94
2022-07-09 16:22:55.730436: train loss : -0.8044
2022-07-09 16:23:01.026238: validation loss: -0.7479
2022-07-09 16:23:01.030526: Average global foreground Dice: [0.8058]
2022-07-09 16:23:01.032815: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:23:01.780249: Suus1 maybe_update_lr lr: 0.008272
2022-07-09 16:23:01.819030: This epoch took 77.976416 s

2022-07-09 16:23:01.843874: 
epoch:  95
2022-07-09 16:24:14.769466: train loss : -0.7995
2022-07-09 16:24:19.816466: validation loss: -0.7591
2022-07-09 16:24:19.838611: Average global foreground Dice: [0.8142]
2022-07-09 16:24:19.842552: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:24:20.650403: Suus1 maybe_update_lr lr: 0.008254
2022-07-09 16:24:20.672915: This epoch took 78.807043 s

2022-07-09 16:24:20.694859: 
epoch:  96
2022-07-09 16:25:32.685406: train loss : -0.7924
2022-07-09 16:25:38.270045: validation loss: -0.7498
2022-07-09 16:25:38.299259: Average global foreground Dice: [0.8033]
2022-07-09 16:25:38.330190: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:25:39.049267: Suus1 maybe_update_lr lr: 0.008236
2022-07-09 16:25:39.066897: This epoch took 78.350024 s

2022-07-09 16:25:39.092985: 
epoch:  97
2022-07-09 16:26:51.645514: train loss : -0.8043
2022-07-09 16:26:57.134690: validation loss: -0.7324
2022-07-09 16:26:57.170193: Average global foreground Dice: [0.7943]
2022-07-09 16:26:57.204520: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:26:57.936522: Suus1 maybe_update_lr lr: 0.008217
2022-07-09 16:26:57.957921: This epoch took 78.844828 s

2022-07-09 16:26:57.990856: 
epoch:  98
2022-07-09 16:28:09.203541: train loss : -0.8021
2022-07-09 16:28:14.086333: validation loss: -0.7543
2022-07-09 16:28:14.111526: Average global foreground Dice: [0.8131]
2022-07-09 16:28:14.131263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:28:14.803194: Suus1 maybe_update_lr lr: 0.008199
2022-07-09 16:28:14.824921: This epoch took 76.801047 s

2022-07-09 16:28:14.846863: 
epoch:  99
2022-07-09 16:29:26.122374: train loss : -0.7947
2022-07-09 16:29:31.671917: validation loss: -0.7497
2022-07-09 16:29:31.695561: Average global foreground Dice: [0.8012]
2022-07-09 16:29:31.712881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:29:32.457627: Suus1 maybe_update_lr lr: 0.008181
2022-07-09 16:29:32.487864: saving scheduled checkpoint file...
2022-07-09 16:29:32.589106: saving checkpoint...
2022-07-09 16:29:34.296269: done, saving took 1.79 seconds
2022-07-09 16:29:34.310981: done
2022-07-09 16:29:34.312911: This epoch took 79.444027 s

2022-07-09 16:29:34.314652: 
epoch:  100
2022-07-09 16:30:43.924086: train loss : -0.8059
2022-07-09 16:30:49.309661: validation loss: -0.7592
2022-07-09 16:30:49.356419: Average global foreground Dice: [0.8139]
2022-07-09 16:30:49.363422: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:30:49.932684: Suus1 maybe_update_lr lr: 0.008162
2022-07-09 16:30:49.960588: This epoch took 75.644078 s

2022-07-09 16:30:49.998855: 
epoch:  101
2022-07-09 16:32:01.251412: train loss : -0.8055
2022-07-09 16:32:06.814399: validation loss: -0.7610
2022-07-09 16:32:06.841464: Average global foreground Dice: [0.8152]
2022-07-09 16:32:06.880873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:32:07.722402: Suus1 maybe_update_lr lr: 0.008144
2022-07-09 16:32:07.741901: This epoch took 77.723033 s

2022-07-09 16:32:07.770900: 
epoch:  102
2022-07-09 16:33:20.028134: train loss : -0.8083
2022-07-09 16:33:25.163150: validation loss: -0.7674
2022-07-09 16:33:25.166674: Average global foreground Dice: [0.8152]
2022-07-09 16:33:25.168764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:33:25.947583: Suus1 maybe_update_lr lr: 0.008125
2022-07-09 16:33:25.975613: saving best epoch checkpoint...
2022-07-09 16:33:26.090471: saving checkpoint...
2022-07-09 16:33:27.595834: done, saving took 1.60 seconds
2022-07-09 16:33:27.610658: This epoch took 79.817790 s

2022-07-09 16:33:27.612598: 
epoch:  103
2022-07-09 16:34:38.217684: train loss : -0.8056
2022-07-09 16:34:42.980485: validation loss: -0.7463
2022-07-09 16:34:43.014432: Average global foreground Dice: [0.8026]
2022-07-09 16:34:43.034219: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:34:43.860780: Suus1 maybe_update_lr lr: 0.008107
2022-07-09 16:34:43.883921: This epoch took 76.269564 s

2022-07-09 16:34:43.905006: 
epoch:  104
2022-07-09 16:35:56.303149: train loss : -0.7971
2022-07-09 16:36:01.256695: validation loss: -0.7440
2022-07-09 16:36:01.291288: Average global foreground Dice: [0.802]
2022-07-09 16:36:01.321953: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:36:01.953433: Suus1 maybe_update_lr lr: 0.008088
2022-07-09 16:36:01.972898: This epoch took 78.047799 s

2022-07-09 16:36:01.994885: 
epoch:  105
2022-07-09 16:37:13.127316: train loss : -0.8067
2022-07-09 16:37:18.632107: validation loss: -0.7637
2022-07-09 16:37:18.665279: Average global foreground Dice: [0.8163]
2022-07-09 16:37:18.700531: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:37:19.374922: Suus1 maybe_update_lr lr: 0.00807
2022-07-09 16:37:19.378303: This epoch took 77.366655 s

2022-07-09 16:37:19.412881: 
epoch:  106
2022-07-09 16:38:31.553155: train loss : -0.8056
2022-07-09 16:38:36.516166: validation loss: -0.7468
2022-07-09 16:38:36.533163: Average global foreground Dice: [0.7982]
2022-07-09 16:38:36.546756: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:38:37.454016: Suus1 maybe_update_lr lr: 0.008052
2022-07-09 16:38:37.484999: This epoch took 78.051738 s

2022-07-09 16:38:37.517869: 
epoch:  107
2022-07-09 16:39:50.439834: train loss : -0.8137
2022-07-09 16:39:55.723181: validation loss: -0.7549
2022-07-09 16:39:55.754690: Average global foreground Dice: [0.8075]
2022-07-09 16:39:55.788888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:39:56.372953: Suus1 maybe_update_lr lr: 0.008033
2022-07-09 16:39:56.404907: This epoch took 78.855721 s

2022-07-09 16:39:56.436229: 
epoch:  108
2022-07-09 16:41:07.592959: train loss : -0.8136
2022-07-09 16:41:12.961301: validation loss: -0.7511
2022-07-09 16:41:12.992439: Average global foreground Dice: [0.8059]
2022-07-09 16:41:13.012141: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:41:13.686389: Suus1 maybe_update_lr lr: 0.008015
2022-07-09 16:41:13.707907: This epoch took 77.251561 s

2022-07-09 16:41:13.719995: 
epoch:  109
2022-07-09 16:42:25.657126: train loss : -0.8259
2022-07-09 16:42:31.417412: validation loss: -0.7556
2022-07-09 16:42:31.458203: Average global foreground Dice: [0.8089]
2022-07-09 16:42:31.470867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:42:32.135420: Suus1 maybe_update_lr lr: 0.007996
2022-07-09 16:42:32.155352: This epoch took 78.402194 s

2022-07-09 16:42:32.175485: 
epoch:  110
2022-07-09 16:43:42.593387: train loss : -0.8236
2022-07-09 16:43:47.434115: validation loss: -0.7431
2022-07-09 16:43:47.458346: Average global foreground Dice: [0.8028]
2022-07-09 16:43:47.469880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:43:48.155214: Suus1 maybe_update_lr lr: 0.007978
2022-07-09 16:43:48.165318: This epoch took 75.975458 s

2022-07-09 16:43:48.185375: 
epoch:  111
2022-07-09 16:44:59.311249: train loss : -0.8260
2022-07-09 16:45:04.480307: validation loss: -0.7512
2022-07-09 16:45:04.510279: Average global foreground Dice: [0.8034]
2022-07-09 16:45:04.529197: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:45:05.155216: Suus1 maybe_update_lr lr: 0.007959
2022-07-09 16:45:05.176901: This epoch took 76.989217 s

2022-07-09 16:45:05.198868: 
epoch:  112
2022-07-09 16:46:16.952294: train loss : -0.8067
2022-07-09 16:46:22.750448: validation loss: -0.7506
2022-07-09 16:46:22.803447: Average global foreground Dice: [0.8071]
2022-07-09 16:46:22.824867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:46:23.483527: Suus1 maybe_update_lr lr: 0.007941
2022-07-09 16:46:23.521911: This epoch took 78.301033 s

2022-07-09 16:46:23.547957: 
epoch:  113
2022-07-09 16:47:34.985346: train loss : -0.8067
2022-07-09 16:47:39.645255: validation loss: -0.7538
2022-07-09 16:47:39.677464: Average global foreground Dice: [0.8064]
2022-07-09 16:47:39.717195: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:47:40.417412: Suus1 maybe_update_lr lr: 0.007922
2022-07-09 16:47:40.457146: This epoch took 76.897805 s

2022-07-09 16:47:40.477219: 
epoch:  114
2022-07-09 16:48:51.784533: train loss : -0.8143
2022-07-09 16:48:56.752544: validation loss: -0.7632
2022-07-09 16:48:56.775073: Average global foreground Dice: [0.8166]
2022-07-09 16:48:56.801206: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:48:57.404980: Suus1 maybe_update_lr lr: 0.007904
2022-07-09 16:48:57.423898: This epoch took 76.924969 s

2022-07-09 16:48:57.439059: 
epoch:  115
2022-07-09 16:50:09.294273: train loss : -0.8221
2022-07-09 16:50:13.862416: validation loss: -0.7640
2022-07-09 16:50:13.884200: Average global foreground Dice: [0.8153]
2022-07-09 16:50:13.886641: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:50:14.496166: Suus1 maybe_update_lr lr: 0.007885
2022-07-09 16:50:14.521990: This epoch took 77.044761 s

2022-07-09 16:50:14.542855: 
epoch:  116
2022-07-09 16:51:27.010216: train loss : -0.8296
2022-07-09 16:51:32.378033: validation loss: -0.7710
2022-07-09 16:51:32.417196: Average global foreground Dice: [0.8265]
2022-07-09 16:51:32.446864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:51:33.058512: Suus1 maybe_update_lr lr: 0.007867
2022-07-09 16:51:33.101903: saving best epoch checkpoint...
2022-07-09 16:51:33.223645: saving checkpoint...
2022-07-09 16:51:34.643920: done, saving took 1.51 seconds
2022-07-09 16:51:34.685305: This epoch took 80.123071 s

2022-07-09 16:51:34.687317: 
epoch:  117
2022-07-09 16:52:46.101418: train loss : -0.8241
2022-07-09 16:52:51.496428: validation loss: -0.7669
2022-07-09 16:52:51.513275: Average global foreground Dice: [0.8201]
2022-07-09 16:52:51.539886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:52:52.297668: Suus1 maybe_update_lr lr: 0.007848
2022-07-09 16:52:52.327014: saving best epoch checkpoint...
2022-07-09 16:52:52.437656: saving checkpoint...
2022-07-09 16:52:53.918060: done, saving took 1.57 seconds
2022-07-09 16:52:53.932357: This epoch took 79.242954 s

2022-07-09 16:52:53.934376: 
epoch:  118
2022-07-09 16:54:04.458339: train loss : -0.8237
2022-07-09 16:54:10.568050: validation loss: -0.7421
2022-07-09 16:54:10.591267: Average global foreground Dice: [0.7996]
2022-07-09 16:54:10.606818: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:54:11.213497: Suus1 maybe_update_lr lr: 0.00783
2022-07-09 16:54:11.242850: This epoch took 77.306543 s

2022-07-09 16:54:11.246166: 
epoch:  119
2022-07-09 16:55:23.092853: train loss : -0.8234
2022-07-09 16:55:28.035149: validation loss: -0.7609
2022-07-09 16:55:28.061293: Average global foreground Dice: [0.8135]
2022-07-09 16:55:28.085876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:55:28.867199: Suus1 maybe_update_lr lr: 0.007811
2022-07-09 16:55:28.888895: This epoch took 77.639480 s

2022-07-09 16:55:28.907852: 
epoch:  120
2022-07-09 16:56:39.937046: train loss : -0.8177
2022-07-09 16:56:45.420240: validation loss: -0.7294
2022-07-09 16:56:45.448313: Average global foreground Dice: [0.7903]
2022-07-09 16:56:45.468036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:56:46.117176: Suus1 maybe_update_lr lr: 0.007793
2022-07-09 16:56:46.151062: This epoch took 77.227202 s

2022-07-09 16:56:46.180863: 
epoch:  121
2022-07-09 16:57:58.473337: train loss : -0.8152
2022-07-09 16:58:03.817800: validation loss: -0.7402
2022-07-09 16:58:03.847487: Average global foreground Dice: [0.8008]
2022-07-09 16:58:03.867197: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:58:04.639483: Suus1 maybe_update_lr lr: 0.007774
2022-07-09 16:58:04.669920: This epoch took 78.469381 s

2022-07-09 16:58:04.691842: 
epoch:  122
2022-07-09 16:59:16.147452: train loss : -0.8246
2022-07-09 16:59:21.486959: validation loss: -0.7678
2022-07-09 16:59:21.509097: Average global foreground Dice: [0.8205]
2022-07-09 16:59:21.528287: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 16:59:22.314693: Suus1 maybe_update_lr lr: 0.007756
2022-07-09 16:59:22.346406: This epoch took 77.623387 s

2022-07-09 16:59:22.377867: 
epoch:  123
2022-07-09 17:00:33.265273: train loss : -0.8272
2022-07-09 17:00:38.636601: validation loss: -0.7535
2022-07-09 17:00:38.668433: Average global foreground Dice: [0.8071]
2022-07-09 17:00:38.688118: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:00:39.297292: Suus1 maybe_update_lr lr: 0.007737
2022-07-09 17:00:39.318923: This epoch took 76.923981 s

2022-07-09 17:00:39.337141: 
epoch:  124
2022-07-09 17:01:51.353631: train loss : -0.8263
2022-07-09 17:01:55.911212: validation loss: -0.7741
2022-07-09 17:01:55.954229: Average global foreground Dice: [0.8289]
2022-07-09 17:01:55.966433: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:01:56.712321: Suus1 maybe_update_lr lr: 0.007719
2022-07-09 17:01:56.738224: This epoch took 77.387803 s

2022-07-09 17:01:56.786284: 
epoch:  125
2022-07-09 17:03:08.328275: train loss : -0.8240
2022-07-09 17:03:13.246802: validation loss: -0.7575
2022-07-09 17:03:13.275751: Average global foreground Dice: [0.809]
2022-07-09 17:03:13.305888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:03:14.092332: Suus1 maybe_update_lr lr: 0.0077
2022-07-09 17:03:14.113919: This epoch took 77.298897 s

2022-07-09 17:03:14.141435: 
epoch:  126
2022-07-09 17:04:26.048941: train loss : -0.8286
2022-07-09 17:04:31.763446: validation loss: -0.7447
2022-07-09 17:04:31.795344: Average global foreground Dice: [0.8008]
2022-07-09 17:04:31.807877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:04:32.552249: Suus1 maybe_update_lr lr: 0.007682
2022-07-09 17:04:32.578148: This epoch took 78.415291 s

2022-07-09 17:04:32.601875: 
epoch:  127
2022-07-09 17:05:44.293121: train loss : -0.8256
2022-07-09 17:05:49.117275: validation loss: -0.7476
2022-07-09 17:05:49.122565: Average global foreground Dice: [0.8026]
2022-07-09 17:05:49.141803: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:05:49.922222: Suus1 maybe_update_lr lr: 0.007663
2022-07-09 17:05:49.945934: This epoch took 77.316042 s

2022-07-09 17:05:49.954514: 
epoch:  128
2022-07-09 17:07:00.705260: train loss : -0.8252
2022-07-09 17:07:05.431411: validation loss: -0.7602
2022-07-09 17:07:05.462334: Average global foreground Dice: [0.8148]
2022-07-09 17:07:05.491886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:07:06.307757: Suus1 maybe_update_lr lr: 0.007645
2022-07-09 17:07:06.327043: This epoch took 76.370358 s

2022-07-09 17:07:06.350512: 
epoch:  129
2022-07-09 17:08:19.189329: train loss : -0.8323
2022-07-09 17:08:25.024283: validation loss: -0.7702
2022-07-09 17:08:25.044716: Average global foreground Dice: [0.8229]
2022-07-09 17:08:25.049757: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:08:25.612457: Suus1 maybe_update_lr lr: 0.007626
2022-07-09 17:08:25.640598: This epoch took 79.262735 s

2022-07-09 17:08:25.673864: 
epoch:  130
2022-07-09 17:09:37.185899: train loss : -0.8394
2022-07-09 17:09:42.723650: validation loss: -0.7738
2022-07-09 17:09:42.750313: Average global foreground Dice: [0.8251]
2022-07-09 17:09:42.778888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:09:43.561454: Suus1 maybe_update_lr lr: 0.007608
2022-07-09 17:09:43.580147: saving best epoch checkpoint...
2022-07-09 17:09:43.689409: saving checkpoint...
2022-07-09 17:09:45.191296: done, saving took 1.58 seconds
2022-07-09 17:09:45.205117: This epoch took 79.513416 s

2022-07-09 17:09:45.207138: 
epoch:  131
2022-07-09 17:10:56.822178: train loss : -0.8377
2022-07-09 17:11:02.046657: validation loss: -0.7394
2022-07-09 17:11:02.067334: Average global foreground Dice: [0.7949]
2022-07-09 17:11:02.097931: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:11:02.779041: Suus1 maybe_update_lr lr: 0.007589
2022-07-09 17:11:02.807353: This epoch took 77.598161 s

2022-07-09 17:11:02.843861: 
epoch:  132
2022-07-09 17:12:16.124092: train loss : -0.8356
2022-07-09 17:12:21.694017: validation loss: -0.7722
2022-07-09 17:12:21.738251: Average global foreground Dice: [0.824]
2022-07-09 17:12:21.762613: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:12:22.420521: Suus1 maybe_update_lr lr: 0.007571
2022-07-09 17:12:22.436539: This epoch took 79.579512 s

2022-07-09 17:12:22.448976: 
epoch:  133
2022-07-09 17:13:35.754033: train loss : -0.8346
2022-07-09 17:13:40.975895: validation loss: -0.7579
2022-07-09 17:13:41.017237: Average global foreground Dice: [0.8078]
2022-07-09 17:13:41.030878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:13:41.775435: Suus1 maybe_update_lr lr: 0.007552
2022-07-09 17:13:41.796892: This epoch took 79.329860 s

2022-07-09 17:13:41.814856: 
epoch:  134
2022-07-09 17:14:52.533360: train loss : -0.8339
2022-07-09 17:14:57.959232: validation loss: -0.7832
2022-07-09 17:14:57.989291: Average global foreground Dice: [0.8326]
2022-07-09 17:14:58.014864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:14:58.763620: Suus1 maybe_update_lr lr: 0.007533
2022-07-09 17:14:58.784966: saving best epoch checkpoint...
2022-07-09 17:14:58.869156: saving checkpoint...
2022-07-09 17:15:00.602041: done, saving took 1.78 seconds
2022-07-09 17:15:00.617535: This epoch took 78.769667 s

2022-07-09 17:15:00.619697: 
epoch:  135
2022-07-09 17:16:12.006133: train loss : -0.8318
2022-07-09 17:16:16.857119: validation loss: -0.7640
2022-07-09 17:16:16.885437: Average global foreground Dice: [0.8197]
2022-07-09 17:16:16.900900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:16:17.762666: Suus1 maybe_update_lr lr: 0.007515
2022-07-09 17:16:17.792820: saving best epoch checkpoint...
2022-07-09 17:16:17.903867: saving checkpoint...
2022-07-09 17:16:19.520285: done, saving took 1.71 seconds
2022-07-09 17:16:19.536209: This epoch took 78.914343 s

2022-07-09 17:16:19.538675: 
epoch:  136
2022-07-09 17:17:30.346348: train loss : -0.8330
2022-07-09 17:17:35.386263: validation loss: -0.7519
2022-07-09 17:17:35.419316: Average global foreground Dice: [0.81]
2022-07-09 17:17:35.449040: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:17:36.203494: Suus1 maybe_update_lr lr: 0.007496
2022-07-09 17:17:36.206711: This epoch took 76.665831 s

2022-07-09 17:17:36.232015: 
epoch:  137
2022-07-09 17:18:47.195218: train loss : -0.8316
2022-07-09 17:18:52.398334: validation loss: -0.7482
2022-07-09 17:18:52.403317: Average global foreground Dice: [0.8019]
2022-07-09 17:18:52.406142: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:18:53.116378: Suus1 maybe_update_lr lr: 0.007478
2022-07-09 17:18:53.137911: This epoch took 76.877855 s

2022-07-09 17:18:53.155469: 
epoch:  138
2022-07-09 17:20:05.600282: train loss : -0.8368
2022-07-09 17:20:11.018472: validation loss: -0.7465
2022-07-09 17:20:11.040185: Average global foreground Dice: [0.8003]
2022-07-09 17:20:11.068634: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:20:11.845277: Suus1 maybe_update_lr lr: 0.007459
2022-07-09 17:20:11.877888: This epoch took 78.702148 s

2022-07-09 17:20:11.910877: 
epoch:  139
2022-07-09 17:21:22.921263: train loss : -0.8277
2022-07-09 17:21:28.786542: validation loss: -0.7505
2022-07-09 17:21:28.808262: Average global foreground Dice: [0.8029]
2022-07-09 17:21:28.828954: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:21:29.671232: Suus1 maybe_update_lr lr: 0.00744
2022-07-09 17:21:29.691918: This epoch took 77.748056 s

2022-07-09 17:21:29.718870: 
epoch:  140
2022-07-09 17:22:42.987296: train loss : -0.8314
2022-07-09 17:22:48.272646: validation loss: -0.7462
2022-07-09 17:22:48.294926: Average global foreground Dice: [0.8]
2022-07-09 17:22:48.304410: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:22:48.904845: Suus1 maybe_update_lr lr: 0.007422
2022-07-09 17:22:48.928831: This epoch took 79.187952 s

2022-07-09 17:22:48.941432: 
epoch:  141
2022-07-09 17:23:59.794324: train loss : -0.8320
2022-07-09 17:24:05.207686: validation loss: -0.7332
2022-07-09 17:24:05.248489: Average global foreground Dice: [0.7921]
2022-07-09 17:24:05.269916: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:24:05.868459: Suus1 maybe_update_lr lr: 0.007403
2022-07-09 17:24:05.900887: This epoch took 76.950104 s

2022-07-09 17:24:05.922856: 
epoch:  142
2022-07-09 17:25:17.360760: train loss : -0.8425
2022-07-09 17:25:22.848337: validation loss: -0.7494
2022-07-09 17:25:22.882378: Average global foreground Dice: [0.8027]
2022-07-09 17:25:22.914883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:25:23.655279: Suus1 maybe_update_lr lr: 0.007385
2022-07-09 17:25:23.658190: This epoch took 77.712323 s

2022-07-09 17:25:23.660278: 
epoch:  143
2022-07-09 17:26:34.726218: train loss : -0.8393
2022-07-09 17:26:40.673471: validation loss: -0.7532
2022-07-09 17:26:40.715228: Average global foreground Dice: [0.8081]
2022-07-09 17:26:40.730288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:26:41.496480: Suus1 maybe_update_lr lr: 0.007366
2022-07-09 17:26:41.515893: This epoch took 77.853529 s

2022-07-09 17:26:41.537849: 
epoch:  144
2022-07-09 17:27:53.177609: train loss : -0.8322
2022-07-09 17:27:58.465729: validation loss: -0.7458
2022-07-09 17:27:58.498428: Average global foreground Dice: [0.8024]
2022-07-09 17:27:58.518105: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:27:59.353292: Suus1 maybe_update_lr lr: 0.007347
2022-07-09 17:27:59.369562: This epoch took 77.809707 s

2022-07-09 17:27:59.410687: 
epoch:  145
2022-07-09 17:29:11.955065: train loss : -0.8283
2022-07-09 17:29:17.295004: validation loss: -0.7634
2022-07-09 17:29:17.328213: Average global foreground Dice: [0.8163]
2022-07-09 17:29:17.360866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:29:17.987699: Suus1 maybe_update_lr lr: 0.007329
2022-07-09 17:29:18.020590: This epoch took 78.594735 s

2022-07-09 17:29:18.052871: 
epoch:  146
2022-07-09 17:30:29.319895: train loss : -0.8325
2022-07-09 17:30:34.437099: validation loss: -0.7658
2022-07-09 17:30:34.448239: Average global foreground Dice: [0.8185]
2022-07-09 17:30:34.474838: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:30:35.184548: Suus1 maybe_update_lr lr: 0.00731
2022-07-09 17:30:35.220071: This epoch took 77.145210 s

2022-07-09 17:30:35.230684: 
epoch:  147
2022-07-09 17:31:46.585670: train loss : -0.8345
2022-07-09 17:31:52.053770: validation loss: -0.7809
2022-07-09 17:31:52.077285: Average global foreground Dice: [0.8307]
2022-07-09 17:31:52.097093: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:31:52.879990: Suus1 maybe_update_lr lr: 0.007291
2022-07-09 17:31:52.909950: This epoch took 77.677149 s

2022-07-09 17:31:52.929986: 
epoch:  148
2022-07-09 17:33:05.235200: train loss : -0.8358
2022-07-09 17:33:10.270550: validation loss: -0.7629
2022-07-09 17:33:10.295380: Average global foreground Dice: [0.8191]
2022-07-09 17:33:10.324947: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:33:10.871224: Suus1 maybe_update_lr lr: 0.007273
2022-07-09 17:33:10.911368: This epoch took 77.961269 s

2022-07-09 17:33:10.923855: 
epoch:  149
2022-07-09 17:34:22.670049: train loss : -0.8383
2022-07-09 17:34:27.515507: validation loss: -0.7662
2022-07-09 17:34:27.548494: Average global foreground Dice: [0.8195]
2022-07-09 17:34:27.577159: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:34:28.230099: Suus1 maybe_update_lr lr: 0.007254
2022-07-09 17:34:28.260861: saving scheduled checkpoint file...
2022-07-09 17:34:28.354112: saving checkpoint...
2022-07-09 17:34:29.908097: done, saving took 1.63 seconds
2022-07-09 17:34:29.961201: done
2022-07-09 17:34:29.963402: This epoch took 79.017783 s

2022-07-09 17:34:29.965547: 
epoch:  150
2022-07-09 17:35:42.021082: train loss : -0.8448
2022-07-09 17:35:46.992535: validation loss: -0.7650
2022-07-09 17:35:47.031325: Average global foreground Dice: [0.8205]
2022-07-09 17:35:47.061884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:35:47.756718: Suus1 maybe_update_lr lr: 0.007236
2022-07-09 17:35:47.777900: This epoch took 77.810315 s

2022-07-09 17:35:47.799860: 
epoch:  151
2022-07-09 17:37:00.164087: train loss : -0.8452
2022-07-09 17:37:06.569098: validation loss: -0.7654
2022-07-09 17:37:06.602300: Average global foreground Dice: [0.817]
2022-07-09 17:37:06.619870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:37:07.494935: Suus1 maybe_update_lr lr: 0.007217
2022-07-09 17:37:07.513898: This epoch took 79.692024 s

2022-07-09 17:37:07.535842: 
epoch:  152
2022-07-09 17:38:19.482631: train loss : -0.8471
2022-07-09 17:38:24.085842: validation loss: -0.7511
2022-07-09 17:38:24.119283: Average global foreground Dice: [0.8081]
2022-07-09 17:38:24.149999: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:38:24.715191: Suus1 maybe_update_lr lr: 0.007198
2022-07-09 17:38:24.731469: This epoch took 77.162474 s

2022-07-09 17:38:24.754467: 
epoch:  153
2022-07-09 17:39:37.051878: train loss : -0.8475
2022-07-09 17:39:42.482025: validation loss: -0.7531
2022-07-09 17:39:42.523572: Average global foreground Dice: [0.8052]
2022-07-09 17:39:42.526112: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:39:43.187153: Suus1 maybe_update_lr lr: 0.00718
2022-07-09 17:39:43.206930: This epoch took 78.426053 s

2022-07-09 17:39:43.227290: 
epoch:  154
2022-07-09 17:40:56.759362: train loss : -0.8460
2022-07-09 17:41:02.041975: validation loss: -0.7555
2022-07-09 17:41:02.063128: Average global foreground Dice: [0.8073]
2022-07-09 17:41:02.065491: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:41:02.854746: Suus1 maybe_update_lr lr: 0.007161
2022-07-09 17:41:02.866921: This epoch took 79.619483 s

2022-07-09 17:41:02.888961: 
epoch:  155
2022-07-09 17:42:14.334875: train loss : -0.8485
2022-07-09 17:42:19.660196: validation loss: -0.7715
2022-07-09 17:42:19.691372: Average global foreground Dice: [0.8271]
2022-07-09 17:42:19.722869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:42:20.607192: Suus1 maybe_update_lr lr: 0.007142
2022-07-09 17:42:20.639901: This epoch took 77.732796 s

2022-07-09 17:42:20.671221: 
epoch:  156
2022-07-09 17:43:31.221951: train loss : -0.8451
2022-07-09 17:43:36.310711: validation loss: -0.7658
2022-07-09 17:43:36.342239: Average global foreground Dice: [0.8203]
2022-07-09 17:43:36.371094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:43:37.114958: Suus1 maybe_update_lr lr: 0.007123
2022-07-09 17:43:37.157926: This epoch took 76.465064 s

2022-07-09 17:43:37.185628: 
epoch:  157
2022-07-09 17:44:47.917454: train loss : -0.8433
2022-07-09 17:44:53.016925: validation loss: -0.7367
2022-07-09 17:44:53.035517: Average global foreground Dice: [0.7961]
2022-07-09 17:44:53.058839: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:44:53.695704: Suus1 maybe_update_lr lr: 0.007105
2022-07-09 17:44:53.714902: This epoch took 76.492023 s

2022-07-09 17:44:53.736864: 
epoch:  158
2022-07-09 17:46:07.117419: train loss : -0.8516
2022-07-09 17:46:11.905412: validation loss: -0.7598
2022-07-09 17:46:11.925718: Average global foreground Dice: [0.8142]
2022-07-09 17:46:11.939327: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:46:12.591645: Suus1 maybe_update_lr lr: 0.007086
2022-07-09 17:46:12.607227: This epoch took 78.857360 s

2022-07-09 17:46:12.620153: 
epoch:  159
2022-07-09 17:47:24.173965: train loss : -0.8446
2022-07-09 17:47:29.491381: validation loss: -0.7482
2022-07-09 17:47:29.528237: Average global foreground Dice: [0.8082]
2022-07-09 17:47:29.555913: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:47:30.256208: Suus1 maybe_update_lr lr: 0.007067
2022-07-09 17:47:30.288915: This epoch took 77.661126 s

2022-07-09 17:47:30.321862: 
epoch:  160
2022-07-09 17:48:43.351309: train loss : -0.8465
2022-07-09 17:48:48.652092: validation loss: -0.7363
2022-07-09 17:48:48.679616: Average global foreground Dice: [0.7971]
2022-07-09 17:48:48.703707: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:48:49.232251: Suus1 maybe_update_lr lr: 0.007049
2022-07-09 17:48:49.257187: This epoch took 78.902303 s

2022-07-09 17:48:49.279835: 
epoch:  161
2022-07-09 17:50:00.096525: train loss : -0.8448
2022-07-09 17:50:05.065375: validation loss: -0.7552
2022-07-09 17:50:05.093016: Average global foreground Dice: [0.8084]
2022-07-09 17:50:05.122885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:50:05.803169: Suus1 maybe_update_lr lr: 0.00703
2022-07-09 17:50:05.824900: This epoch took 76.514345 s

2022-07-09 17:50:05.846859: 
epoch:  162
2022-07-09 17:51:20.805033: train loss : -0.8422
2022-07-09 17:51:26.575400: validation loss: -0.7519
2022-07-09 17:51:26.616212: Average global foreground Dice: [0.8096]
2022-07-09 17:51:26.639220: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:51:27.280364: Suus1 maybe_update_lr lr: 0.007011
2022-07-09 17:51:27.296992: This epoch took 81.428130 s

2022-07-09 17:51:27.300595: 
epoch:  163
2022-07-09 17:52:38.042146: train loss : -0.8508
2022-07-09 17:52:43.266000: validation loss: -0.7542
2022-07-09 17:52:43.295417: Average global foreground Dice: [0.8092]
2022-07-09 17:52:43.307865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:52:43.821313: Suus1 maybe_update_lr lr: 0.006992
2022-07-09 17:52:43.850152: This epoch took 76.542730 s

2022-07-09 17:52:43.870192: 
epoch:  164
2022-07-09 17:53:55.842316: train loss : -0.8465
2022-07-09 17:54:00.865526: validation loss: -0.7623
2022-07-09 17:54:00.884641: Average global foreground Dice: [0.8197]
2022-07-09 17:54:00.904682: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:54:01.482668: Suus1 maybe_update_lr lr: 0.006974
2022-07-09 17:54:01.494994: This epoch took 77.598980 s

2022-07-09 17:54:01.517908: 
epoch:  165
2022-07-09 17:55:12.465457: train loss : -0.8488
2022-07-09 17:55:17.978903: validation loss: -0.7450
2022-07-09 17:55:18.017479: Average global foreground Dice: [0.8058]
2022-07-09 17:55:18.037236: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:55:18.730175: Suus1 maybe_update_lr lr: 0.006955
2022-07-09 17:55:18.749924: This epoch took 77.213058 s

2022-07-09 17:55:18.781022: 
epoch:  166
2022-07-09 17:56:29.873623: train loss : -0.8465
2022-07-09 17:56:34.909029: validation loss: -0.7484
2022-07-09 17:56:34.951298: Average global foreground Dice: [0.8081]
2022-07-09 17:56:34.972568: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:56:35.792392: Suus1 maybe_update_lr lr: 0.006936
2022-07-09 17:56:35.826242: This epoch took 77.022256 s

2022-07-09 17:56:35.853863: 
epoch:  167
2022-07-09 17:57:48.850702: train loss : -0.8455
2022-07-09 17:57:53.684226: validation loss: -0.7638
2022-07-09 17:57:53.720237: Average global foreground Dice: [0.8172]
2022-07-09 17:57:53.730013: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:57:54.389285: Suus1 maybe_update_lr lr: 0.006918
2022-07-09 17:57:54.399325: This epoch took 78.523267 s

2022-07-09 17:57:54.410475: 
epoch:  168
2022-07-09 17:59:05.540913: train loss : -0.8340
2022-07-09 17:59:10.838075: validation loss: -0.7509
2022-07-09 17:59:10.892371: Average global foreground Dice: [0.8068]
2022-07-09 17:59:10.916673: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 17:59:11.620241: Suus1 maybe_update_lr lr: 0.006899
2022-07-09 17:59:11.630552: This epoch took 77.213695 s

2022-07-09 17:59:11.651399: 
epoch:  169
2022-07-09 18:00:24.373712: train loss : -0.7898
2022-07-09 18:00:29.299049: validation loss: -0.7386
2022-07-09 18:00:29.330128: Average global foreground Dice: [0.7988]
2022-07-09 18:00:29.359746: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:00:29.973570: Suus1 maybe_update_lr lr: 0.00688
2022-07-09 18:00:29.976019: This epoch took 78.311178 s

2022-07-09 18:00:29.978209: 
epoch:  170
2022-07-09 18:01:42.606450: train loss : -0.8046
2022-07-09 18:01:47.436018: validation loss: -0.7538
2022-07-09 18:01:47.461320: Average global foreground Dice: [0.8123]
2022-07-09 18:01:47.483029: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:01:48.083291: Suus1 maybe_update_lr lr: 0.006861
2022-07-09 18:01:48.100152: This epoch took 78.116559 s

2022-07-09 18:01:48.132865: 
epoch:  171
2022-07-09 18:03:00.304922: train loss : -0.8272
2022-07-09 18:03:05.207799: validation loss: -0.7550
2022-07-09 18:03:05.236246: Average global foreground Dice: [0.8144]
2022-07-09 18:03:05.246064: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:03:06.001451: Suus1 maybe_update_lr lr: 0.006842
2022-07-09 18:03:06.023743: This epoch took 77.868883 s

2022-07-09 18:03:06.047853: 
epoch:  172
2022-07-09 18:04:16.928741: train loss : -0.8237
2022-07-09 18:04:21.946225: validation loss: -0.7646
2022-07-09 18:04:21.977342: Average global foreground Dice: [0.816]
2022-07-09 18:04:21.994454: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:04:22.671478: Suus1 maybe_update_lr lr: 0.006824
2022-07-09 18:04:22.693421: This epoch took 76.633621 s

2022-07-09 18:04:22.698320: 
epoch:  173
2022-07-09 18:05:34.157657: train loss : -0.8355
2022-07-09 18:05:39.241214: validation loss: -0.7636
2022-07-09 18:05:39.272370: Average global foreground Dice: [0.8189]
2022-07-09 18:05:39.292127: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:05:39.944340: Suus1 maybe_update_lr lr: 0.006805
2022-07-09 18:05:39.966006: This epoch took 77.255646 s

2022-07-09 18:05:39.985999: 
epoch:  174
2022-07-09 18:06:52.865359: train loss : -0.8424
2022-07-09 18:06:58.044214: validation loss: -0.7677
2022-07-09 18:06:58.080240: Average global foreground Dice: [0.8211]
2022-07-09 18:06:58.105865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:06:58.678186: Suus1 maybe_update_lr lr: 0.006786
2022-07-09 18:06:58.699904: This epoch took 78.700948 s

2022-07-09 18:06:58.721838: 
epoch:  175
2022-07-09 18:08:10.028809: train loss : -0.8395
2022-07-09 18:08:15.540564: validation loss: -0.7489
2022-07-09 18:08:15.567417: Average global foreground Dice: [0.8053]
2022-07-09 18:08:15.590964: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:08:16.486121: Suus1 maybe_update_lr lr: 0.006767
2022-07-09 18:08:16.506917: This epoch took 77.716636 s

2022-07-09 18:08:16.533223: 
epoch:  176
2022-07-09 18:09:27.535064: train loss : -0.8390
2022-07-09 18:09:32.866692: validation loss: -0.7613
2022-07-09 18:09:32.892260: Average global foreground Dice: [0.8158]
2022-07-09 18:09:32.914763: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:09:33.782424: Suus1 maybe_update_lr lr: 0.006749
2022-07-09 18:09:33.822894: This epoch took 77.268042 s

2022-07-09 18:09:33.850092: 
epoch:  177
2022-07-09 18:10:45.334870: train loss : -0.8412
2022-07-09 18:10:50.169009: validation loss: -0.7624
2022-07-09 18:10:50.209142: Average global foreground Dice: [0.8194]
2022-07-09 18:10:50.229502: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:10:50.877238: Suus1 maybe_update_lr lr: 0.00673
2022-07-09 18:10:50.896927: This epoch took 77.028385 s

2022-07-09 18:10:50.918851: 
epoch:  178
2022-07-09 18:12:02.762026: train loss : -0.8510
2022-07-09 18:12:08.787436: validation loss: -0.7709
2022-07-09 18:12:08.798724: Average global foreground Dice: [0.8266]
2022-07-09 18:12:08.819015: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:12:09.600256: Suus1 maybe_update_lr lr: 0.006711
2022-07-09 18:12:09.619880: saving best epoch checkpoint...
2022-07-09 18:12:09.728060: saving checkpoint...
2022-07-09 18:12:11.422134: done, saving took 1.78 seconds
2022-07-09 18:12:11.445840: This epoch took 80.508062 s

2022-07-09 18:12:11.447864: 
epoch:  179
2022-07-09 18:13:21.960449: train loss : -0.8521
2022-07-09 18:13:27.180355: validation loss: -0.7325
2022-07-09 18:13:27.214238: Average global foreground Dice: [0.7933]
2022-07-09 18:13:27.244873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:13:27.934002: Suus1 maybe_update_lr lr: 0.006692
2022-07-09 18:13:27.954922: This epoch took 76.505161 s

2022-07-09 18:13:27.976855: 
epoch:  180
2022-07-09 18:14:39.114851: train loss : -0.8487
2022-07-09 18:14:44.544768: validation loss: -0.7480
2022-07-09 18:14:44.573233: Average global foreground Dice: [0.8031]
2022-07-09 18:14:44.594858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:14:45.394564: Suus1 maybe_update_lr lr: 0.006673
2022-07-09 18:14:45.404233: This epoch took 77.397356 s

2022-07-09 18:14:45.424551: 
epoch:  181
2022-07-09 18:15:56.283731: train loss : -0.8529
2022-07-09 18:16:00.974269: validation loss: -0.7438
2022-07-09 18:16:01.012150: Average global foreground Dice: [0.8043]
2022-07-09 18:16:01.016207: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:16:01.641606: Suus1 maybe_update_lr lr: 0.006654
2022-07-09 18:16:01.660921: This epoch took 76.215719 s

2022-07-09 18:16:01.682867: 
epoch:  182
2022-07-09 18:17:12.988284: train loss : -0.8539
2022-07-09 18:17:18.033397: validation loss: -0.7699
2022-07-09 18:17:18.074245: Average global foreground Dice: [0.8244]
2022-07-09 18:17:18.105057: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:17:18.910218: Suus1 maybe_update_lr lr: 0.006636
2022-07-09 18:17:18.945572: This epoch took 77.249615 s

2022-07-09 18:17:18.978848: 
epoch:  183
2022-07-09 18:18:30.719036: train loss : -0.8591
2022-07-09 18:18:35.974675: validation loss: -0.7631
2022-07-09 18:18:36.006299: Average global foreground Dice: [0.8135]
2022-07-09 18:18:36.024905: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:18:36.661298: Suus1 maybe_update_lr lr: 0.006617
2022-07-09 18:18:36.680900: This epoch took 77.698917 s

2022-07-09 18:18:36.701986: 
epoch:  184
2022-07-09 18:19:47.869158: train loss : -0.8540
2022-07-09 18:19:53.008740: validation loss: -0.7758
2022-07-09 18:19:53.043261: Average global foreground Dice: [0.8285]
2022-07-09 18:19:53.065804: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:19:53.674595: Suus1 maybe_update_lr lr: 0.006598
2022-07-09 18:19:53.697938: This epoch took 76.963062 s

2022-07-09 18:19:53.719867: 
epoch:  185
2022-07-09 18:21:06.203049: train loss : -0.8595
2022-07-09 18:21:11.555985: validation loss: -0.7605
2022-07-09 18:21:11.599185: Average global foreground Dice: [0.8149]
2022-07-09 18:21:11.623847: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:21:12.348878: Suus1 maybe_update_lr lr: 0.006579
2022-07-09 18:21:12.369904: This epoch took 78.628026 s

2022-07-09 18:21:12.392004: 
epoch:  186
2022-07-09 18:22:24.075655: train loss : -0.8562
2022-07-09 18:22:28.772194: validation loss: -0.7507
2022-07-09 18:22:28.809661: Average global foreground Dice: [0.8052]
2022-07-09 18:22:28.833785: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:22:29.740204: Suus1 maybe_update_lr lr: 0.00656
2022-07-09 18:22:29.761893: This epoch took 77.349513 s

2022-07-09 18:22:29.785138: 
epoch:  187
2022-07-09 18:23:41.552712: train loss : -0.8559
2022-07-09 18:23:46.351775: validation loss: -0.7662
2022-07-09 18:23:46.359575: Average global foreground Dice: [0.8184]
2022-07-09 18:23:46.368906: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:23:47.217669: Suus1 maybe_update_lr lr: 0.006541
2022-07-09 18:23:47.246043: This epoch took 77.439168 s

2022-07-09 18:23:47.263180: 
epoch:  188
2022-07-09 18:24:59.149531: train loss : -0.8611
2022-07-09 18:25:04.262327: validation loss: -0.7525
2022-07-09 18:25:04.278312: Average global foreground Dice: [0.8054]
2022-07-09 18:25:04.280928: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:25:04.826797: Suus1 maybe_update_lr lr: 0.006522
2022-07-09 18:25:04.849308: This epoch took 77.561288 s

2022-07-09 18:25:04.864218: 
epoch:  189
2022-07-09 18:26:17.713994: train loss : -0.8631
2022-07-09 18:26:23.361845: validation loss: -0.7661
2022-07-09 18:26:23.389416: Average global foreground Dice: [0.8198]
2022-07-09 18:26:23.406516: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:26:24.083367: Suus1 maybe_update_lr lr: 0.006504
2022-07-09 18:26:24.113086: This epoch took 79.214986 s

2022-07-09 18:26:24.130869: 
epoch:  190
2022-07-09 18:27:35.176723: train loss : -0.8628
2022-07-09 18:27:39.839336: validation loss: -0.7643
2022-07-09 18:27:39.845340: Average global foreground Dice: [0.8138]
2022-07-09 18:27:39.864852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:27:40.482459: Suus1 maybe_update_lr lr: 0.006485
2022-07-09 18:27:40.526544: This epoch took 76.361679 s

2022-07-09 18:27:40.552420: 
epoch:  191
2022-07-09 18:28:52.728355: train loss : -0.8689
2022-07-09 18:28:58.300416: validation loss: -0.7710
2022-07-09 18:28:58.341318: Average global foreground Dice: [0.8234]
2022-07-09 18:28:58.356869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:28:59.033147: Suus1 maybe_update_lr lr: 0.006466
2022-07-09 18:28:59.055884: saving best epoch checkpoint...
2022-07-09 18:28:59.191570: saving checkpoint...
2022-07-09 18:29:00.824856: done, saving took 1.75 seconds
2022-07-09 18:29:00.840425: This epoch took 80.257518 s

2022-07-09 18:29:00.842529: 
epoch:  192
2022-07-09 18:30:12.722163: train loss : -0.8633
2022-07-09 18:30:17.968093: validation loss: -0.7685
2022-07-09 18:30:18.012321: Average global foreground Dice: [0.823]
2022-07-09 18:30:18.044880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:30:18.686251: Suus1 maybe_update_lr lr: 0.006447
2022-07-09 18:30:18.717943: saving best epoch checkpoint...
2022-07-09 18:30:18.886974: saving checkpoint...
2022-07-09 18:30:20.550637: done, saving took 1.81 seconds
2022-07-09 18:30:20.566444: This epoch took 79.721911 s

2022-07-09 18:30:20.568591: 
epoch:  193
2022-07-09 18:31:31.748092: train loss : -0.8645
2022-07-09 18:31:36.639410: validation loss: -0.7392
2022-07-09 18:31:36.680718: Average global foreground Dice: [0.7955]
2022-07-09 18:31:36.712896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:31:37.623549: Suus1 maybe_update_lr lr: 0.006428
2022-07-09 18:31:37.647331: This epoch took 77.076750 s

2022-07-09 18:31:37.650352: 
epoch:  194
2022-07-09 18:32:49.276029: train loss : -0.8659
2022-07-09 18:32:55.188458: validation loss: -0.7648
2022-07-09 18:32:55.203768: Average global foreground Dice: [0.8209]
2022-07-09 18:32:55.235899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:32:55.974061: Suus1 maybe_update_lr lr: 0.006409
2022-07-09 18:32:55.978180: This epoch took 78.309318 s

2022-07-09 18:32:56.004661: 
epoch:  195
2022-07-09 18:34:07.531225: train loss : -0.8607
2022-07-09 18:34:12.212375: validation loss: -0.7698
2022-07-09 18:34:12.235257: Average global foreground Dice: [0.8255]
2022-07-09 18:34:12.256858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:34:12.980761: Suus1 maybe_update_lr lr: 0.00639
2022-07-09 18:34:12.992191: This epoch took 76.967930 s

2022-07-09 18:34:13.013441: 
epoch:  196
2022-07-09 18:35:25.784138: train loss : -0.8587
2022-07-09 18:35:30.924703: validation loss: -0.7645
2022-07-09 18:35:30.959050: Average global foreground Dice: [0.816]
2022-07-09 18:35:30.977666: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:35:31.589213: Suus1 maybe_update_lr lr: 0.006371
2022-07-09 18:35:31.620123: This epoch took 78.573857 s

2022-07-09 18:35:31.641880: 
epoch:  197
2022-07-09 18:36:41.940984: train loss : -0.8581
2022-07-09 18:36:46.800561: validation loss: -0.7633
2022-07-09 18:36:46.807536: Average global foreground Dice: [0.8177]
2022-07-09 18:36:46.844876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:36:47.600402: Suus1 maybe_update_lr lr: 0.006352
2022-07-09 18:36:47.612561: saving best epoch checkpoint...
2022-07-09 18:36:47.666373: saving checkpoint...
2022-07-09 18:36:49.536551: done, saving took 1.92 seconds
2022-07-09 18:36:49.550708: This epoch took 77.871835 s

2022-07-09 18:36:49.552776: 
epoch:  198
2022-07-09 18:38:01.230929: train loss : -0.8643
2022-07-09 18:38:06.337408: validation loss: -0.7442
2022-07-09 18:38:06.368582: Average global foreground Dice: [0.8051]
2022-07-09 18:38:06.384875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:38:07.141760: Suus1 maybe_update_lr lr: 0.006333
2022-07-09 18:38:07.173914: This epoch took 77.619224 s

2022-07-09 18:38:07.206856: 
epoch:  199
2022-07-09 18:39:17.737252: train loss : -0.8689
2022-07-09 18:39:23.288247: validation loss: -0.7724
2022-07-09 18:39:23.315719: Average global foreground Dice: [0.8261]
2022-07-09 18:39:23.342192: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:39:24.133769: Suus1 maybe_update_lr lr: 0.006314
2022-07-09 18:39:24.152867: saving scheduled checkpoint file...
2022-07-09 18:39:24.237652: saving checkpoint...
2022-07-09 18:39:25.998260: done, saving took 1.84 seconds
2022-07-09 18:39:26.015208: done
2022-07-09 18:39:26.017564: saving best epoch checkpoint...
2022-07-09 18:39:26.056674: saving checkpoint...
2022-07-09 18:39:27.512512: done, saving took 1.49 seconds
2022-07-09 18:39:27.526810: This epoch took 80.297930 s

2022-07-09 18:39:27.528991: 
epoch:  200
2022-07-09 18:40:37.564294: train loss : -0.8662
2022-07-09 18:40:42.802805: validation loss: -0.7634
2022-07-09 18:40:42.819958: Average global foreground Dice: [0.8212]
2022-07-09 18:40:42.846880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:40:43.649867: Suus1 maybe_update_lr lr: 0.006296
2022-07-09 18:40:43.670888: saving best epoch checkpoint...
2022-07-09 18:40:43.774033: saving checkpoint...
2022-07-09 18:40:45.471097: done, saving took 1.78 seconds
2022-07-09 18:40:45.486879: This epoch took 77.955784 s

2022-07-09 18:40:45.489029: 
epoch:  201
2022-07-09 18:41:56.239045: train loss : -0.8702
2022-07-09 18:42:01.171210: validation loss: -0.7484
2022-07-09 18:42:01.202510: Average global foreground Dice: [0.8063]
2022-07-09 18:42:01.227912: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:42:01.840673: Suus1 maybe_update_lr lr: 0.006277
2022-07-09 18:42:01.873044: This epoch took 76.382072 s

2022-07-09 18:42:01.884281: 
epoch:  202
2022-07-09 18:43:13.438607: train loss : -0.8673
2022-07-09 18:43:19.275513: validation loss: -0.7389
2022-07-09 18:43:19.291514: Average global foreground Dice: [0.797]
2022-07-09 18:43:19.311194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:43:20.082278: Suus1 maybe_update_lr lr: 0.006258
2022-07-09 18:43:20.102919: This epoch took 78.205440 s

2022-07-09 18:43:20.120171: 
epoch:  203
2022-07-09 18:44:32.538709: train loss : -0.8687
2022-07-09 18:44:37.988616: validation loss: -0.7698
2022-07-09 18:44:38.013726: Average global foreground Dice: [0.8241]
2022-07-09 18:44:38.042882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:44:38.585898: Suus1 maybe_update_lr lr: 0.006239
2022-07-09 18:44:38.616920: This epoch took 78.481031 s

2022-07-09 18:44:38.638849: 
epoch:  204
2022-07-09 18:45:49.289246: train loss : -0.8679
2022-07-09 18:45:54.239083: validation loss: -0.7709
2022-07-09 18:45:54.269519: Average global foreground Dice: [0.8255]
2022-07-09 18:45:54.276517: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:45:54.998081: Suus1 maybe_update_lr lr: 0.00622
2022-07-09 18:45:55.006856: This epoch took 76.343993 s

2022-07-09 18:45:55.008857: 
epoch:  205
2022-07-09 18:47:06.132163: train loss : -0.8665
2022-07-09 18:47:11.677968: validation loss: -0.7722
2022-07-09 18:47:11.704430: Average global foreground Dice: [0.8269]
2022-07-09 18:47:11.734864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:47:12.349259: Suus1 maybe_update_lr lr: 0.006201
2022-07-09 18:47:12.383993: saving best epoch checkpoint...
2022-07-09 18:47:12.488020: saving checkpoint...
2022-07-09 18:47:14.109344: done, saving took 1.70 seconds
2022-07-09 18:47:14.123582: This epoch took 79.110324 s

2022-07-09 18:47:14.125548: 
epoch:  206
2022-07-09 18:48:26.086108: train loss : -0.8675
2022-07-09 18:48:30.902406: validation loss: -0.7755
2022-07-09 18:48:30.937264: Average global foreground Dice: [0.8288]
2022-07-09 18:48:30.964185: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:48:31.587742: Suus1 maybe_update_lr lr: 0.006182
2022-07-09 18:48:31.614593: saving best epoch checkpoint...
2022-07-09 18:48:31.685730: saving checkpoint...
2022-07-09 18:48:33.208665: done, saving took 1.57 seconds
2022-07-09 18:48:33.223062: This epoch took 79.095575 s

2022-07-09 18:48:33.225140: 
epoch:  207
2022-07-09 18:49:44.125836: train loss : -0.8662
2022-07-09 18:49:49.284637: validation loss: -0.7720
2022-07-09 18:49:49.310505: Average global foreground Dice: [0.8252]
2022-07-09 18:49:49.326878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:49:49.984743: Suus1 maybe_update_lr lr: 0.006163
2022-07-09 18:49:50.016916: saving best epoch checkpoint...
2022-07-09 18:49:50.085143: saving checkpoint...
2022-07-09 18:49:51.688010: done, saving took 1.65 seconds
2022-07-09 18:49:51.702277: This epoch took 78.475057 s

2022-07-09 18:49:51.704310: 
epoch:  208
2022-07-09 18:51:01.620599: train loss : -0.8700
2022-07-09 18:51:06.403015: validation loss: -0.7596
2022-07-09 18:51:06.441746: Average global foreground Dice: [0.8163]
2022-07-09 18:51:06.461274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:51:07.240690: Suus1 maybe_update_lr lr: 0.006144
2022-07-09 18:51:07.271039: This epoch took 75.564752 s

2022-07-09 18:51:07.299888: 
epoch:  209
2022-07-09 18:52:17.826123: train loss : -0.8692
2022-07-09 18:52:23.154005: validation loss: -0.7498
2022-07-09 18:52:23.187256: Average global foreground Dice: [0.8074]
2022-07-09 18:52:23.196338: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:52:23.896082: Suus1 maybe_update_lr lr: 0.006125
2022-07-09 18:52:23.915919: This epoch took 76.569308 s

2022-07-09 18:52:23.948880: 
epoch:  210
2022-07-09 18:53:34.989106: train loss : -0.8707
2022-07-09 18:53:39.886564: validation loss: -0.7687
2022-07-09 18:53:39.912271: Average global foreground Dice: [0.8258]
2022-07-09 18:53:39.939998: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:53:40.516289: Suus1 maybe_update_lr lr: 0.006106
2022-07-09 18:53:40.529174: This epoch took 76.547307 s

2022-07-09 18:53:40.546789: 
epoch:  211
2022-07-09 18:54:51.120587: train loss : -0.8702
2022-07-09 18:54:56.094220: validation loss: -0.7597
2022-07-09 18:54:56.114590: Average global foreground Dice: [0.8136]
2022-07-09 18:54:56.134418: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:54:56.728914: Suus1 maybe_update_lr lr: 0.006087
2022-07-09 18:54:56.748912: This epoch took 76.181986 s

2022-07-09 18:54:56.767160: 
epoch:  212
2022-07-09 18:56:09.636983: train loss : -0.8678
2022-07-09 18:56:14.947241: validation loss: -0.7651
2022-07-09 18:56:14.978512: Average global foreground Dice: [0.8176]
2022-07-09 18:56:14.998388: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:56:15.672106: Suus1 maybe_update_lr lr: 0.006068
2022-07-09 18:56:15.702911: This epoch took 78.920033 s

2022-07-09 18:56:15.735863: 
epoch:  213
2022-07-09 18:57:27.699153: train loss : -0.8693
2022-07-09 18:57:32.645885: validation loss: -0.7379
2022-07-09 18:57:32.687290: Average global foreground Dice: [0.7978]
2022-07-09 18:57:32.708879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:57:33.269128: Suus1 maybe_update_lr lr: 0.006049
2022-07-09 18:57:33.302912: This epoch took 77.535026 s

2022-07-09 18:57:33.332819: 
epoch:  214
2022-07-09 18:58:44.069738: train loss : -0.8579
2022-07-09 18:58:49.108149: validation loss: -0.7541
2022-07-09 18:58:49.113392: Average global foreground Dice: [0.812]
2022-07-09 18:58:49.132918: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 18:58:49.881254: Suus1 maybe_update_lr lr: 0.00603
2022-07-09 18:58:49.911925: This epoch took 76.551904 s

2022-07-09 18:58:49.955842: 
epoch:  215
2022-07-09 19:00:00.653190: train loss : -0.8607
2022-07-09 19:00:05.506708: validation loss: -0.7529
2022-07-09 19:00:05.521697: Average global foreground Dice: [0.8083]
2022-07-09 19:00:05.527884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:00:06.185369: Suus1 maybe_update_lr lr: 0.006011
2022-07-09 19:00:06.199649: This epoch took 76.213183 s

2022-07-09 19:00:06.215883: 
epoch:  216
2022-07-09 19:01:18.252118: train loss : -0.8648
2022-07-09 19:01:23.087571: validation loss: -0.7559
2022-07-09 19:01:23.114048: Average global foreground Dice: [0.8153]
2022-07-09 19:01:23.130861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:01:23.763208: Suus1 maybe_update_lr lr: 0.005991
2022-07-09 19:01:23.792134: This epoch took 77.551529 s

2022-07-09 19:01:23.813864: 
epoch:  217
2022-07-09 19:02:34.827176: train loss : -0.8636
2022-07-09 19:02:39.986492: validation loss: -0.7553
2022-07-09 19:02:40.017357: Average global foreground Dice: [0.8141]
2022-07-09 19:02:40.033829: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:02:40.641601: Suus1 maybe_update_lr lr: 0.005972
2022-07-09 19:02:40.663993: This epoch took 76.831859 s

2022-07-09 19:02:40.691945: 
epoch:  218
2022-07-09 19:03:51.839914: train loss : -0.8583
2022-07-09 19:03:56.722898: validation loss: -0.7741
2022-07-09 19:03:56.759179: Average global foreground Dice: [0.827]
2022-07-09 19:03:56.785588: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:03:57.385499: Suus1 maybe_update_lr lr: 0.005953
2022-07-09 19:03:57.409027: This epoch took 76.697031 s

2022-07-09 19:03:57.429379: 
epoch:  219
2022-07-09 19:05:08.563078: train loss : -0.8628
2022-07-09 19:05:13.821063: validation loss: -0.7454
2022-07-09 19:05:13.852300: Average global foreground Dice: [0.8085]
2022-07-09 19:05:13.873894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:05:14.406971: Suus1 maybe_update_lr lr: 0.005934
2022-07-09 19:05:14.433283: This epoch took 77.001721 s

2022-07-09 19:05:14.469868: 
epoch:  220
2022-07-09 19:06:26.699237: train loss : -0.8664
2022-07-09 19:06:31.697505: validation loss: -0.7668
2022-07-09 19:06:31.700409: Average global foreground Dice: [0.8183]
2022-07-09 19:06:31.702499: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:06:32.607371: Suus1 maybe_update_lr lr: 0.005915
2022-07-09 19:06:32.635162: This epoch took 78.132268 s

2022-07-09 19:06:32.655301: 
epoch:  221
2022-07-09 19:07:45.433956: train loss : -0.8655
2022-07-09 19:07:50.627015: validation loss: -0.7536
2022-07-09 19:07:50.658237: Average global foreground Dice: [0.8109]
2022-07-09 19:07:50.677917: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:07:51.476895: Suus1 maybe_update_lr lr: 0.005896
2022-07-09 19:07:51.506464: This epoch took 78.831047 s

2022-07-09 19:07:51.541868: 
epoch:  222
2022-07-09 19:09:05.469432: train loss : -0.8722
2022-07-09 19:09:10.807192: validation loss: -0.7353
2022-07-09 19:09:10.826014: Average global foreground Dice: [0.7965]
2022-07-09 19:09:10.839013: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:09:11.472042: Suus1 maybe_update_lr lr: 0.005877
2022-07-09 19:09:11.488542: This epoch took 79.924672 s

2022-07-09 19:09:11.490588: 
epoch:  223
2022-07-09 19:10:21.809214: train loss : -0.8706
2022-07-09 19:10:26.877998: validation loss: -0.7609
2022-07-09 19:10:26.909289: Average global foreground Dice: [0.8144]
2022-07-09 19:10:26.929590: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:10:27.549006: Suus1 maybe_update_lr lr: 0.005858
2022-07-09 19:10:27.571941: This epoch took 76.079408 s

2022-07-09 19:10:27.601146: 
epoch:  224
2022-07-09 19:11:39.213979: train loss : -0.8719
2022-07-09 19:11:44.715358: validation loss: -0.7380
2022-07-09 19:11:44.742464: Average global foreground Dice: [0.7969]
2022-07-09 19:11:44.753575: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:11:45.518233: Suus1 maybe_update_lr lr: 0.005839
2022-07-09 19:11:45.537916: This epoch took 77.922044 s

2022-07-09 19:11:45.559848: 
epoch:  225
2022-07-09 19:12:57.794045: train loss : -0.8734
2022-07-09 19:13:03.615200: validation loss: -0.7510
2022-07-09 19:13:03.659477: Average global foreground Dice: [0.8049]
2022-07-09 19:13:03.680956: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:13:04.238939: Suus1 maybe_update_lr lr: 0.00582
2022-07-09 19:13:04.268917: This epoch took 78.692628 s

2022-07-09 19:13:04.290862: 
epoch:  226
2022-07-09 19:14:16.493621: train loss : -0.8729
2022-07-09 19:14:21.557048: validation loss: -0.7550
2022-07-09 19:14:21.590364: Average global foreground Dice: [0.8133]
2022-07-09 19:14:21.610004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:14:22.168337: Suus1 maybe_update_lr lr: 0.005801
2022-07-09 19:14:22.199255: This epoch took 77.864394 s

2022-07-09 19:14:22.209270: 
epoch:  227
2022-07-09 19:15:34.138388: train loss : -0.8722
2022-07-09 19:15:39.744925: validation loss: -0.7660
2022-07-09 19:15:39.773259: Average global foreground Dice: [0.8182]
2022-07-09 19:15:39.794874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:15:40.414140: Suus1 maybe_update_lr lr: 0.005781
2022-07-09 19:15:40.445144: This epoch took 78.225153 s

2022-07-09 19:15:40.477863: 
epoch:  228
2022-07-09 19:16:52.457177: train loss : -0.8713
2022-07-09 19:16:58.513631: validation loss: -0.7491
2022-07-09 19:16:58.536285: Average global foreground Dice: [0.8118]
2022-07-09 19:16:58.564519: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:16:59.221985: Suus1 maybe_update_lr lr: 0.005762
2022-07-09 19:16:59.259731: This epoch took 78.759849 s

2022-07-09 19:16:59.275858: 
epoch:  229
2022-07-09 19:18:11.256966: train loss : -0.8739
2022-07-09 19:18:16.340965: validation loss: -0.7662
2022-07-09 19:18:16.386153: Average global foreground Dice: [0.8177]
2022-07-09 19:18:16.407860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:18:16.999872: Suus1 maybe_update_lr lr: 0.005743
2022-07-09 19:18:17.014885: This epoch took 77.717819 s

2022-07-09 19:18:17.025817: 
epoch:  230
2022-07-09 19:19:29.440955: train loss : -0.8744
2022-07-09 19:19:34.819495: validation loss: -0.7468
2022-07-09 19:19:34.851437: Average global foreground Dice: [0.8076]
2022-07-09 19:19:34.870975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:19:35.656847: Suus1 maybe_update_lr lr: 0.005724
2022-07-09 19:19:35.688915: This epoch took 78.637476 s

2022-07-09 19:19:35.708606: 
epoch:  231
2022-07-09 19:20:46.472967: train loss : -0.8794
2022-07-09 19:20:51.656644: validation loss: -0.7621
2022-07-09 19:20:51.677242: Average global foreground Dice: [0.8142]
2022-07-09 19:20:51.696875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:20:52.518255: Suus1 maybe_update_lr lr: 0.005705
2022-07-09 19:20:52.538492: This epoch took 76.827787 s

2022-07-09 19:20:52.546865: 
epoch:  232
2022-07-09 19:22:03.763260: train loss : -0.8785
2022-07-09 19:22:08.718072: validation loss: -0.7511
2022-07-09 19:22:08.740176: Average global foreground Dice: [0.8135]
2022-07-09 19:22:08.758623: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:22:09.646162: Suus1 maybe_update_lr lr: 0.005686
2022-07-09 19:22:09.666914: This epoch took 77.109131 s

2022-07-09 19:22:09.690856: 
epoch:  233
2022-07-09 19:23:20.647100: train loss : -0.8766
2022-07-09 19:23:25.680436: validation loss: -0.7391
2022-07-09 19:23:25.711610: Average global foreground Dice: [0.803]
2022-07-09 19:23:25.731399: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:23:26.522344: Suus1 maybe_update_lr lr: 0.005667
2022-07-09 19:23:26.543892: This epoch took 76.821728 s

2022-07-09 19:23:26.565862: 
epoch:  234
2022-07-09 19:24:38.196054: train loss : -0.8800
2022-07-09 19:24:43.842152: validation loss: -0.7633
2022-07-09 19:24:43.873610: Average global foreground Dice: [0.8208]
2022-07-09 19:24:43.893375: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:24:44.393811: Suus1 maybe_update_lr lr: 0.005647
2022-07-09 19:24:44.416934: This epoch took 77.817072 s

2022-07-09 19:24:44.438902: 
epoch:  235
2022-07-09 19:25:55.237318: train loss : -0.8751
2022-07-09 19:26:00.576077: validation loss: -0.7577
2022-07-09 19:26:00.595325: Average global foreground Dice: [0.8131]
2022-07-09 19:26:00.631881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:26:01.458199: Suus1 maybe_update_lr lr: 0.005628
2022-07-09 19:26:01.476418: This epoch took 77.027119 s

2022-07-09 19:26:01.491370: 
epoch:  236
2022-07-09 19:27:13.988259: train loss : -0.8727
2022-07-09 19:27:18.904920: validation loss: -0.7435
2022-07-09 19:27:18.922949: Average global foreground Dice: [0.8075]
2022-07-09 19:27:18.955860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:27:19.793491: Suus1 maybe_update_lr lr: 0.005609
2022-07-09 19:27:19.812903: This epoch took 78.295919 s

2022-07-09 19:27:19.834866: 
epoch:  237
2022-07-09 19:28:32.940003: train loss : -0.8790
2022-07-09 19:28:38.913194: validation loss: -0.7333
2022-07-09 19:28:38.944466: Average global foreground Dice: [0.7947]
2022-07-09 19:28:38.968888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:28:39.581554: Suus1 maybe_update_lr lr: 0.00559
2022-07-09 19:28:39.583775: This epoch took 79.717712 s

2022-07-09 19:28:39.585713: 
epoch:  238
2022-07-09 19:29:51.779351: train loss : -0.8777
2022-07-09 19:29:56.536623: validation loss: -0.7457
2022-07-09 19:29:56.584254: Average global foreground Dice: [0.8087]
2022-07-09 19:29:56.604985: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:29:57.397071: Suus1 maybe_update_lr lr: 0.005571
2022-07-09 19:29:57.449894: This epoch took 77.862339 s

2022-07-09 19:29:57.471867: 
epoch:  239
2022-07-09 19:31:10.531182: train loss : -0.8784
2022-07-09 19:31:16.475252: validation loss: -0.7394
2022-07-09 19:31:16.496284: Average global foreground Dice: [0.8001]
2022-07-09 19:31:16.518887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:31:17.189618: Suus1 maybe_update_lr lr: 0.005551
2022-07-09 19:31:17.220912: This epoch took 79.717826 s

2022-07-09 19:31:17.267585: 
epoch:  240
2022-07-09 19:32:28.897011: train loss : -0.8826
2022-07-09 19:32:34.311907: validation loss: -0.7598
2022-07-09 19:32:34.332237: Average global foreground Dice: [0.8146]
2022-07-09 19:32:34.373258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:32:35.092187: Suus1 maybe_update_lr lr: 0.005532
2022-07-09 19:32:35.112917: This epoch took 77.817823 s

2022-07-09 19:32:35.136868: 
epoch:  241
2022-07-09 19:33:46.180913: train loss : -0.8817
2022-07-09 19:33:51.263438: validation loss: -0.7590
2022-07-09 19:33:51.294384: Average global foreground Dice: [0.8167]
2022-07-09 19:33:51.314096: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:33:51.873978: Suus1 maybe_update_lr lr: 0.005513
2022-07-09 19:33:51.902912: This epoch took 76.734867 s

2022-07-09 19:33:51.931983: 
epoch:  242
2022-07-09 19:35:02.302688: train loss : -0.8812
2022-07-09 19:35:07.451669: validation loss: -0.7645
2022-07-09 19:35:07.476308: Average global foreground Dice: [0.824]
2022-07-09 19:35:07.508895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:35:08.289505: Suus1 maybe_update_lr lr: 0.005494
2022-07-09 19:35:08.322918: This epoch took 76.384356 s

2022-07-09 19:35:08.356972: 
epoch:  243
2022-07-09 19:36:20.103219: train loss : -0.8827
2022-07-09 19:36:25.254680: validation loss: -0.7709
2022-07-09 19:36:25.276298: Average global foreground Dice: [0.8222]
2022-07-09 19:36:25.297900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:36:25.985656: Suus1 maybe_update_lr lr: 0.005474
2022-07-09 19:36:26.017920: This epoch took 77.645453 s

2022-07-09 19:36:26.047226: 
epoch:  244
2022-07-09 19:37:38.205549: train loss : -0.8819
2022-07-09 19:37:43.030299: validation loss: -0.7713
2022-07-09 19:37:43.057204: Average global foreground Dice: [0.8259]
2022-07-09 19:37:43.076874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:37:43.776167: Suus1 maybe_update_lr lr: 0.005455
2022-07-09 19:37:43.794468: This epoch took 77.734354 s

2022-07-09 19:37:43.799491: 
epoch:  245
2022-07-09 19:38:56.454165: train loss : -0.8817
2022-07-09 19:39:01.368972: validation loss: -0.7651
2022-07-09 19:39:01.411266: Average global foreground Dice: [0.8199]
2022-07-09 19:39:01.423881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:39:02.006787: Suus1 maybe_update_lr lr: 0.005436
2022-07-09 19:39:02.024871: This epoch took 78.214893 s

2022-07-09 19:39:02.041601: 
epoch:  246
2022-07-09 19:40:13.114100: train loss : -0.8841
2022-07-09 19:40:17.930566: validation loss: -0.7614
2022-07-09 19:40:17.941951: Average global foreground Dice: [0.821]
2022-07-09 19:40:17.957628: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:40:18.754291: Suus1 maybe_update_lr lr: 0.005417
2022-07-09 19:40:18.771899: This epoch took 76.715719 s

2022-07-09 19:40:18.774033: 
epoch:  247
2022-07-09 19:41:31.237122: train loss : -0.8826
2022-07-09 19:41:36.843951: validation loss: -0.7489
2022-07-09 19:41:36.867313: Average global foreground Dice: [0.8086]
2022-07-09 19:41:36.892332: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:41:37.587617: Suus1 maybe_update_lr lr: 0.005397
2022-07-09 19:41:37.615905: This epoch took 78.824827 s

2022-07-09 19:41:37.639846: 
epoch:  248
2022-07-09 19:42:48.857543: train loss : -0.8807
2022-07-09 19:42:54.619639: validation loss: -0.7660
2022-07-09 19:42:54.648053: Average global foreground Dice: [0.8206]
2022-07-09 19:42:54.677865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:42:55.373016: Suus1 maybe_update_lr lr: 0.005378
2022-07-09 19:42:55.392915: This epoch took 77.735048 s

2022-07-09 19:42:55.402977: 
epoch:  249
2022-07-09 19:44:08.151307: train loss : -0.8820
2022-07-09 19:44:13.159957: validation loss: -0.7619
2022-07-09 19:44:13.183307: Average global foreground Dice: [0.8201]
2022-07-09 19:44:13.213078: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:44:13.815843: Suus1 maybe_update_lr lr: 0.005359
2022-07-09 19:44:13.845002: saving scheduled checkpoint file...
2022-07-09 19:44:13.945137: saving checkpoint...
2022-07-09 19:44:15.422147: done, saving took 1.55 seconds
2022-07-09 19:44:15.441141: done
2022-07-09 19:44:15.443398: This epoch took 80.020280 s

2022-07-09 19:44:15.445501: 
epoch:  250
2022-07-09 19:45:27.281056: train loss : -0.8806
2022-07-09 19:45:32.804789: validation loss: -0.7501
2022-07-09 19:45:32.843338: Average global foreground Dice: [0.806]
2022-07-09 19:45:32.874246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:45:33.585930: Suus1 maybe_update_lr lr: 0.00534
2022-07-09 19:45:33.612923: This epoch took 78.165282 s

2022-07-09 19:45:33.634863: 
epoch:  251
2022-07-09 19:46:45.098298: train loss : -0.8791
2022-07-09 19:46:50.343822: validation loss: -0.7716
2022-07-09 19:46:50.357311: Average global foreground Dice: [0.8261]
2022-07-09 19:46:50.381920: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:46:51.113618: Suus1 maybe_update_lr lr: 0.00532
2022-07-09 19:46:51.133912: This epoch took 77.478030 s

2022-07-09 19:46:51.170619: 
epoch:  252
2022-07-09 19:48:04.226933: train loss : -0.8818
2022-07-09 19:48:09.232475: validation loss: -0.7461
2022-07-09 19:48:09.264317: Average global foreground Dice: [0.8021]
2022-07-09 19:48:09.273806: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:48:10.091592: Suus1 maybe_update_lr lr: 0.005301
2022-07-09 19:48:10.133922: This epoch took 78.936828 s

2022-07-09 19:48:10.154590: 
epoch:  253
2022-07-09 19:49:21.405034: train loss : -0.8771
2022-07-09 19:49:26.405258: validation loss: -0.7583
2022-07-09 19:49:26.435357: Average global foreground Dice: [0.8164]
2022-07-09 19:49:26.454863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:49:27.130187: Suus1 maybe_update_lr lr: 0.005282
2022-07-09 19:49:27.144920: This epoch took 76.978043 s

2022-07-09 19:49:27.166858: 
epoch:  254
2022-07-09 19:50:38.722242: train loss : -0.8794
2022-07-09 19:50:43.721831: validation loss: -0.7551
2022-07-09 19:50:43.760413: Average global foreground Dice: [0.8133]
2022-07-09 19:50:43.789894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:50:44.440202: Suus1 maybe_update_lr lr: 0.005262
2022-07-09 19:50:44.460092: This epoch took 77.269231 s

2022-07-09 19:50:44.478292: 
epoch:  255
2022-07-09 19:51:56.669230: train loss : -0.8803
2022-07-09 19:52:03.496357: validation loss: -0.7666
2022-07-09 19:52:03.538310: Average global foreground Dice: [0.8238]
2022-07-09 19:52:03.570889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:52:04.160463: Suus1 maybe_update_lr lr: 0.005243
2022-07-09 19:52:04.186315: This epoch took 79.690449 s

2022-07-09 19:52:04.208728: 
epoch:  256
2022-07-09 19:53:14.869887: train loss : -0.8779
2022-07-09 19:53:20.481020: validation loss: -0.7611
2022-07-09 19:53:20.504986: Average global foreground Dice: [0.8191]
2022-07-09 19:53:20.513100: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:53:21.335387: Suus1 maybe_update_lr lr: 0.005224
2022-07-09 19:53:21.358911: This epoch took 77.121835 s

2022-07-09 19:53:21.390180: 
epoch:  257
2022-07-09 19:54:32.240237: train loss : -0.8789
2022-07-09 19:54:37.027838: validation loss: -0.7727
2022-07-09 19:54:37.038393: Average global foreground Dice: [0.8264]
2022-07-09 19:54:37.061875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:54:37.739901: Suus1 maybe_update_lr lr: 0.005204
2022-07-09 19:54:37.760279: This epoch took 76.337418 s

2022-07-09 19:54:37.766308: 
epoch:  258
2022-07-09 19:55:49.373577: train loss : -0.8812
2022-07-09 19:55:54.560071: validation loss: -0.7641
2022-07-09 19:55:54.587193: Average global foreground Dice: [0.8202]
2022-07-09 19:55:54.614867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:55:55.505281: Suus1 maybe_update_lr lr: 0.005185
2022-07-09 19:55:55.535909: This epoch took 77.765455 s

2022-07-09 19:55:55.568856: 
epoch:  259
2022-07-09 19:57:06.413292: train loss : -0.8836
2022-07-09 19:57:11.399203: validation loss: -0.7569
2022-07-09 19:57:11.454334: Average global foreground Dice: [0.8176]
2022-07-09 19:57:11.465947: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:57:12.036338: Suus1 maybe_update_lr lr: 0.005166
2022-07-09 19:57:12.055908: This epoch took 76.454028 s

2022-07-09 19:57:12.074570: 
epoch:  260
2022-07-09 19:58:23.330897: train loss : -0.8853
2022-07-09 19:58:28.255957: validation loss: -0.7602
2022-07-09 19:58:28.286624: Average global foreground Dice: [0.8183]
2022-07-09 19:58:28.305878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:58:29.017786: Suus1 maybe_update_lr lr: 0.005146
2022-07-09 19:58:29.048917: This epoch took 76.960788 s

2022-07-09 19:58:29.060742: 
epoch:  261
2022-07-09 19:59:41.740426: train loss : -0.8719
2022-07-09 19:59:46.873558: validation loss: -0.7282
2022-07-09 19:59:46.905210: Average global foreground Dice: [0.7948]
2022-07-09 19:59:46.927691: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 19:59:47.695164: Suus1 maybe_update_lr lr: 0.005127
2022-07-09 19:59:47.720549: This epoch took 78.657553 s

2022-07-09 19:59:47.741849: 
epoch:  262
2022-07-09 20:00:59.225877: train loss : -0.8633
2022-07-09 20:01:04.757152: validation loss: -0.7653
2022-07-09 20:01:04.798434: Average global foreground Dice: [0.8208]
2022-07-09 20:01:04.822635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:01:05.419743: Suus1 maybe_update_lr lr: 0.005107
2022-07-09 20:01:05.459901: This epoch took 77.699175 s

2022-07-09 20:01:05.469210: 
epoch:  263
2022-07-09 20:02:18.508607: train loss : -0.8704
2022-07-09 20:02:23.669459: validation loss: -0.7554
2022-07-09 20:02:23.699226: Average global foreground Dice: [0.8076]
2022-07-09 20:02:23.725159: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:02:24.445222: Suus1 maybe_update_lr lr: 0.005088
2022-07-09 20:02:24.470924: This epoch took 78.981683 s

2022-07-09 20:02:24.490141: 
epoch:  264
2022-07-09 20:03:35.551834: train loss : -0.8767
2022-07-09 20:03:41.028244: validation loss: -0.7673
2022-07-09 20:03:41.055084: Average global foreground Dice: [0.8221]
2022-07-09 20:03:41.069920: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:03:41.929712: Suus1 maybe_update_lr lr: 0.005069
2022-07-09 20:03:41.959904: This epoch took 77.443029 s

2022-07-09 20:03:41.992872: 
epoch:  265
2022-07-09 20:04:52.659584: train loss : -0.8781
2022-07-09 20:04:57.704242: validation loss: -0.7616
2022-07-09 20:04:57.728703: Average global foreground Dice: [0.8215]
2022-07-09 20:04:57.749824: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:04:58.521378: Suus1 maybe_update_lr lr: 0.005049
2022-07-09 20:04:58.551913: This epoch took 76.526035 s

2022-07-09 20:04:58.573855: 
epoch:  266
2022-07-09 20:06:09.800524: train loss : -0.8812
2022-07-09 20:06:14.635910: validation loss: -0.7622
2022-07-09 20:06:14.667625: Average global foreground Dice: [0.8177]
2022-07-09 20:06:14.711449: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:06:15.527558: Suus1 maybe_update_lr lr: 0.00503
2022-07-09 20:06:15.539972: This epoch took 76.942120 s

2022-07-09 20:06:15.572909: 
epoch:  267
2022-07-09 20:07:27.478654: train loss : -0.8820
2022-07-09 20:07:32.535385: validation loss: -0.7361
2022-07-09 20:07:32.547879: Average global foreground Dice: [0.7983]
2022-07-09 20:07:32.563262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:07:33.370320: Suus1 maybe_update_lr lr: 0.00501
2022-07-09 20:07:33.399334: This epoch took 77.804465 s

2022-07-09 20:07:33.420850: 
epoch:  268
2022-07-09 20:08:44.463706: train loss : -0.8823
2022-07-09 20:08:49.376841: validation loss: -0.7681
2022-07-09 20:08:49.403080: Average global foreground Dice: [0.8219]
2022-07-09 20:08:49.414152: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:08:50.051487: Suus1 maybe_update_lr lr: 0.004991
2022-07-09 20:08:50.070925: This epoch took 76.628061 s

2022-07-09 20:08:50.092854: 
epoch:  269
2022-07-09 20:10:00.856788: train loss : -0.8833
2022-07-09 20:10:06.859430: validation loss: -0.7568
2022-07-09 20:10:06.864943: Average global foreground Dice: [0.8116]
2022-07-09 20:10:06.873647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:10:07.415396: Suus1 maybe_update_lr lr: 0.004971
2022-07-09 20:10:07.445916: This epoch took 77.330987 s

2022-07-09 20:10:07.477121: 
epoch:  270
2022-07-09 20:11:18.797519: train loss : -0.8837
2022-07-09 20:11:23.820151: validation loss: -0.7536
2022-07-09 20:11:23.852525: Average global foreground Dice: [0.8118]
2022-07-09 20:11:23.864868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:11:24.734274: Suus1 maybe_update_lr lr: 0.004952
2022-07-09 20:11:24.755907: This epoch took 77.258708 s

2022-07-09 20:11:24.777851: 
epoch:  271
2022-07-09 20:12:36.278178: train loss : -0.8857
2022-07-09 20:12:40.967536: validation loss: -0.7676
2022-07-09 20:12:41.003257: Average global foreground Dice: [0.8237]
2022-07-09 20:12:41.024879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:12:41.802396: Suus1 maybe_update_lr lr: 0.004933
2022-07-09 20:12:41.817772: This epoch took 77.014300 s

2022-07-09 20:12:41.834583: 
epoch:  272
2022-07-09 20:13:54.722086: train loss : -0.8850
2022-07-09 20:13:59.996601: validation loss: -0.7551
2022-07-09 20:14:00.020193: Average global foreground Dice: [0.815]
2022-07-09 20:14:00.051229: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:14:00.708940: Suus1 maybe_update_lr lr: 0.004913
2022-07-09 20:14:00.727954: This epoch took 78.880060 s

2022-07-09 20:14:00.750012: 
epoch:  273
2022-07-09 20:15:12.309568: train loss : -0.8865
2022-07-09 20:15:17.322020: validation loss: -0.7617
2022-07-09 20:15:17.340873: Average global foreground Dice: [0.8169]
2022-07-09 20:15:17.381099: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:15:18.122689: Suus1 maybe_update_lr lr: 0.004894
2022-07-09 20:15:18.138267: This epoch took 77.368188 s

2022-07-09 20:15:18.145398: 
epoch:  274
2022-07-09 20:16:29.587928: train loss : -0.8860
2022-07-09 20:16:34.965202: validation loss: -0.7588
2022-07-09 20:16:34.969027: Average global foreground Dice: [0.8162]
2022-07-09 20:16:34.971110: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:16:35.601008: Suus1 maybe_update_lr lr: 0.004874
2022-07-09 20:16:35.631048: This epoch took 77.472521 s

2022-07-09 20:16:35.651103: 
epoch:  275
2022-07-09 20:17:46.712226: train loss : -0.8873
2022-07-09 20:17:51.736627: validation loss: -0.7642
2022-07-09 20:17:51.771748: Average global foreground Dice: [0.8183]
2022-07-09 20:17:51.774001: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:17:52.349211: Suus1 maybe_update_lr lr: 0.004855
2022-07-09 20:17:52.377905: This epoch took 76.714894 s

2022-07-09 20:17:52.381132: 
epoch:  276
2022-07-09 20:19:03.195466: train loss : -0.8902
2022-07-09 20:19:08.631461: validation loss: -0.7552
2022-07-09 20:19:08.651649: Average global foreground Dice: [0.8173]
2022-07-09 20:19:08.667129: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:19:09.243201: Suus1 maybe_update_lr lr: 0.004835
2022-07-09 20:19:09.262910: This epoch took 76.857370 s

2022-07-09 20:19:09.284862: 
epoch:  277
2022-07-09 20:20:20.919622: train loss : -0.8883
2022-07-09 20:20:26.064959: validation loss: -0.7659
2022-07-09 20:20:26.097322: Average global foreground Dice: [0.8199]
2022-07-09 20:20:26.116462: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:20:26.808069: Suus1 maybe_update_lr lr: 0.004816
2022-07-09 20:20:26.822463: This epoch took 77.515601 s

2022-07-09 20:20:26.828879: 
epoch:  278
2022-07-09 20:21:38.567076: train loss : -0.8878
2022-07-09 20:21:43.891885: validation loss: -0.7604
2022-07-09 20:21:43.925431: Average global foreground Dice: [0.8172]
2022-07-09 20:21:43.949153: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:21:44.477634: Suus1 maybe_update_lr lr: 0.004796
2022-07-09 20:21:44.508011: This epoch took 77.654117 s

2022-07-09 20:21:44.528022: 
epoch:  279
2022-07-09 20:22:54.781943: train loss : -0.8827
2022-07-09 20:23:00.175087: validation loss: -0.7646
2022-07-09 20:23:00.218291: Average global foreground Dice: [0.8205]
2022-07-09 20:23:00.226057: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:23:01.039096: Suus1 maybe_update_lr lr: 0.004776
2022-07-09 20:23:01.069077: This epoch took 76.529962 s

2022-07-09 20:23:01.090142: 
epoch:  280
2022-07-09 20:24:11.851120: train loss : -0.8824
2022-07-09 20:24:16.572808: validation loss: -0.7794
2022-07-09 20:24:16.594077: Average global foreground Dice: [0.8319]
2022-07-09 20:24:16.607858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:24:17.393853: Suus1 maybe_update_lr lr: 0.004757
2022-07-09 20:24:17.409502: This epoch took 76.300635 s

2022-07-09 20:24:17.420957: 
epoch:  281
2022-07-09 20:25:29.265849: train loss : -0.8913
2022-07-09 20:25:34.242277: validation loss: -0.7596
2022-07-09 20:25:34.270446: Average global foreground Dice: [0.8148]
2022-07-09 20:25:34.279106: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:25:34.999095: Suus1 maybe_update_lr lr: 0.004737
2022-07-09 20:25:35.029893: This epoch took 77.599129 s

2022-07-09 20:25:35.056337: 
epoch:  282
2022-07-09 20:26:46.772530: train loss : -0.8847
2022-07-09 20:26:52.116008: validation loss: -0.7525
2022-07-09 20:26:52.160528: Average global foreground Dice: [0.8074]
2022-07-09 20:26:52.178879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:26:52.987809: Suus1 maybe_update_lr lr: 0.004718
2022-07-09 20:26:53.018912: This epoch took 77.928365 s

2022-07-09 20:26:53.051361: 
epoch:  283
2022-07-09 20:28:03.397985: train loss : -0.8877
2022-07-09 20:28:08.338604: validation loss: -0.7637
2022-07-09 20:28:08.341881: Average global foreground Dice: [0.8206]
2022-07-09 20:28:08.363094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:28:08.922464: Suus1 maybe_update_lr lr: 0.004698
2022-07-09 20:28:08.950930: This epoch took 75.892518 s

2022-07-09 20:28:08.978859: 
epoch:  284
2022-07-09 20:29:22.452048: train loss : -0.8895
2022-07-09 20:29:27.574008: validation loss: -0.7274
2022-07-09 20:29:27.606555: Average global foreground Dice: [0.7836]
2022-07-09 20:29:27.632889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:29:28.209036: Suus1 maybe_update_lr lr: 0.004679
2022-07-09 20:29:28.239907: This epoch took 79.239028 s

2022-07-09 20:29:28.272861: 
epoch:  285
2022-07-09 20:30:39.048523: train loss : -0.8843
2022-07-09 20:30:44.877418: validation loss: -0.7489
2022-07-09 20:30:44.898026: Average global foreground Dice: [0.809]
2022-07-09 20:30:44.938163: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:30:45.652032: Suus1 maybe_update_lr lr: 0.004659
2022-07-09 20:30:45.682921: This epoch took 77.390048 s

2022-07-09 20:30:45.715859: 
epoch:  286
2022-07-09 20:31:56.363895: train loss : -0.8825
2022-07-09 20:32:01.199265: validation loss: -0.7589
2022-07-09 20:32:01.216971: Average global foreground Dice: [0.8131]
2022-07-09 20:32:01.248040: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:32:02.074850: Suus1 maybe_update_lr lr: 0.004639
2022-07-09 20:32:02.101914: This epoch took 76.353026 s

2022-07-09 20:32:02.127269: 
epoch:  287
2022-07-09 20:33:13.665281: train loss : -0.8901
2022-07-09 20:33:18.776091: validation loss: -0.7540
2022-07-09 20:33:18.807398: Average global foreground Dice: [0.8128]
2022-07-09 20:33:18.827084: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:33:19.379133: Suus1 maybe_update_lr lr: 0.00462
2022-07-09 20:33:19.403043: This epoch took 77.247183 s

2022-07-09 20:33:19.424982: 
epoch:  288
2022-07-09 20:34:32.522571: train loss : -0.8900
2022-07-09 20:34:37.172297: validation loss: -0.7606
2022-07-09 20:34:37.175780: Average global foreground Dice: [0.8148]
2022-07-09 20:34:37.178097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:34:37.932114: Suus1 maybe_update_lr lr: 0.0046
2022-07-09 20:34:37.963039: This epoch took 78.510935 s

2022-07-09 20:34:37.983080: 
epoch:  289
2022-07-09 20:35:48.837325: train loss : -0.8939
2022-07-09 20:35:54.319423: validation loss: -0.7656
2022-07-09 20:35:54.338359: Average global foreground Dice: [0.8215]
2022-07-09 20:35:54.363128: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:35:55.077264: Suus1 maybe_update_lr lr: 0.004581
2022-07-09 20:35:55.098925: This epoch took 77.094050 s

2022-07-09 20:35:55.103574: 
epoch:  290
2022-07-09 20:37:06.769481: train loss : -0.8919
2022-07-09 20:37:11.876717: validation loss: -0.7637
2022-07-09 20:37:11.888620: Average global foreground Dice: [0.8227]
2022-07-09 20:37:11.914994: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:37:12.597807: Suus1 maybe_update_lr lr: 0.004561
2022-07-09 20:37:12.602772: This epoch took 77.491326 s

2022-07-09 20:37:12.607964: 
epoch:  291
2022-07-09 20:38:24.127235: train loss : -0.8933
2022-07-09 20:38:29.078378: validation loss: -0.7527
2022-07-09 20:38:29.111310: Average global foreground Dice: [0.812]
2022-07-09 20:38:29.139878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:38:29.824914: Suus1 maybe_update_lr lr: 0.004541
2022-07-09 20:38:29.845030: This epoch took 77.230569 s

2022-07-09 20:38:29.873851: 
epoch:  292
2022-07-09 20:39:43.190379: train loss : -0.8878
2022-07-09 20:39:48.330595: validation loss: -0.7545
2022-07-09 20:39:48.359223: Average global foreground Dice: [0.8169]
2022-07-09 20:39:48.372099: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:39:49.233985: Suus1 maybe_update_lr lr: 0.004522
2022-07-09 20:39:49.247704: This epoch took 79.360335 s

2022-07-09 20:39:49.261259: 
epoch:  293
2022-07-09 20:41:01.618356: train loss : -0.8930
2022-07-09 20:41:07.573049: validation loss: -0.7527
2022-07-09 20:41:07.607459: Average global foreground Dice: [0.8114]
2022-07-09 20:41:07.629780: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:41:08.232414: Suus1 maybe_update_lr lr: 0.004502
2022-07-09 20:41:08.251914: This epoch took 78.946714 s

2022-07-09 20:41:08.273867: 
epoch:  294
2022-07-09 20:42:19.109390: train loss : -0.8960
2022-07-09 20:42:24.208185: validation loss: -0.7425
2022-07-09 20:42:24.244184: Average global foreground Dice: [0.8055]
2022-07-09 20:42:24.256871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:42:24.935118: Suus1 maybe_update_lr lr: 0.004482
2022-07-09 20:42:24.946930: This epoch took 76.656485 s

2022-07-09 20:42:24.955307: 
epoch:  295
2022-07-09 20:43:37.677928: train loss : -0.8949
2022-07-09 20:43:42.451317: validation loss: -0.7473
2022-07-09 20:43:42.498453: Average global foreground Dice: [0.8062]
2022-07-09 20:43:42.519889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:43:43.221324: Suus1 maybe_update_lr lr: 0.004463
2022-07-09 20:43:43.253920: This epoch took 78.288211 s

2022-07-09 20:43:43.286869: 
epoch:  296
2022-07-09 20:44:55.366474: train loss : -0.8875
2022-07-09 20:45:00.952936: validation loss: -0.7495
2022-07-09 20:45:00.962351: Average global foreground Dice: [0.8046]
2022-07-09 20:45:00.986701: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:45:01.691151: Suus1 maybe_update_lr lr: 0.004443
2022-07-09 20:45:01.714614: This epoch took 78.402747 s

2022-07-09 20:45:01.741985: 
epoch:  297
2022-07-09 20:46:12.340031: train loss : -0.8853
2022-07-09 20:46:17.914372: validation loss: -0.7569
2022-07-09 20:46:17.937317: Average global foreground Dice: [0.8112]
2022-07-09 20:46:17.968025: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:46:18.657747: Suus1 maybe_update_lr lr: 0.004423
2022-07-09 20:46:18.688057: This epoch took 76.922036 s

2022-07-09 20:46:18.713865: 
epoch:  298
2022-07-09 20:47:29.060147: train loss : -0.8865
2022-07-09 20:47:34.653151: validation loss: -0.7532
2022-07-09 20:47:34.679344: Average global foreground Dice: [0.8131]
2022-07-09 20:47:34.699867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:47:35.529663: Suus1 maybe_update_lr lr: 0.004404
2022-07-09 20:47:35.549903: This epoch took 76.818028 s

2022-07-09 20:47:35.571879: 
epoch:  299
2022-07-09 20:48:47.874614: train loss : -0.8927
2022-07-09 20:48:52.744656: validation loss: -0.7699
2022-07-09 20:48:52.778271: Average global foreground Dice: [0.8224]
2022-07-09 20:48:52.799872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:48:53.570047: Suus1 maybe_update_lr lr: 0.004384
2022-07-09 20:48:53.574717: saving scheduled checkpoint file...
2022-07-09 20:48:53.692108: saving checkpoint...
2022-07-09 20:48:55.346009: done, saving took 1.72 seconds
2022-07-09 20:48:55.364599: done
2022-07-09 20:48:55.367138: This epoch took 79.762277 s

2022-07-09 20:48:55.369392: 
epoch:  300
2022-07-09 20:50:05.417034: train loss : -0.8966
2022-07-09 20:50:10.592004: validation loss: -0.7560
2022-07-09 20:50:10.623342: Average global foreground Dice: [0.8173]
2022-07-09 20:50:10.638888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:50:11.233898: Suus1 maybe_update_lr lr: 0.004364
2022-07-09 20:50:11.246625: This epoch took 75.875303 s

2022-07-09 20:50:11.248979: 
epoch:  301
2022-07-09 20:51:23.904293: train loss : -0.8934
2022-07-09 20:51:29.561853: validation loss: -0.7592
2022-07-09 20:51:29.614301: Average global foreground Dice: [0.8135]
2022-07-09 20:51:29.655485: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:51:30.728940: Suus1 maybe_update_lr lr: 0.004344
2022-07-09 20:51:30.745922: This epoch took 79.479041 s

2022-07-09 20:51:30.754697: 
epoch:  302
2022-07-09 20:52:43.137839: train loss : -0.8950
2022-07-09 20:52:48.602432: validation loss: -0.7386
2022-07-09 20:52:48.606538: Average global foreground Dice: [0.7958]
2022-07-09 20:52:48.608791: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:52:49.560397: Suus1 maybe_update_lr lr: 0.004325
2022-07-09 20:52:49.579900: This epoch took 78.823133 s

2022-07-09 20:52:49.601866: 
epoch:  303
2022-07-09 20:54:02.256887: train loss : -0.8960
2022-07-09 20:54:07.581359: validation loss: -0.7409
2022-07-09 20:54:07.612406: Average global foreground Dice: [0.8017]
2022-07-09 20:54:07.628883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:54:08.193355: Suus1 maybe_update_lr lr: 0.004305
2022-07-09 20:54:08.216087: This epoch took 78.592229 s

2022-07-09 20:54:08.243874: 
epoch:  304
2022-07-09 20:55:19.931113: train loss : -0.8975
2022-07-09 20:55:24.638400: validation loss: -0.7517
2022-07-09 20:55:24.653629: Average global foreground Dice: [0.8075]
2022-07-09 20:55:24.683896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:55:25.431317: Suus1 maybe_update_lr lr: 0.004285
2022-07-09 20:55:25.472895: This epoch took 77.201781 s

2022-07-09 20:55:25.505852: 
epoch:  305
2022-07-09 20:56:37.047932: train loss : -0.8934
2022-07-09 20:56:42.410498: validation loss: -0.7716
2022-07-09 20:56:42.431301: Average global foreground Dice: [0.8309]
2022-07-09 20:56:42.445415: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:56:43.095924: Suus1 maybe_update_lr lr: 0.004265
2022-07-09 20:56:43.113400: This epoch took 77.574529 s

2022-07-09 20:56:43.126395: 
epoch:  306
2022-07-09 20:57:55.701399: train loss : -0.8973
2022-07-09 20:58:00.775485: validation loss: -0.7349
2022-07-09 20:58:00.809186: Average global foreground Dice: [0.7953]
2022-07-09 20:58:00.841870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:58:01.402583: Suus1 maybe_update_lr lr: 0.004245
2022-07-09 20:58:01.415428: This epoch took 78.264066 s

2022-07-09 20:58:01.437269: 
epoch:  307
2022-07-09 20:59:13.281683: train loss : -0.8990
2022-07-09 20:59:18.699537: validation loss: -0.7711
2022-07-09 20:59:18.742316: Average global foreground Dice: [0.8264]
2022-07-09 20:59:18.754977: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 20:59:19.320001: Suus1 maybe_update_lr lr: 0.004226
2022-07-09 20:59:19.338904: This epoch took 77.863029 s

2022-07-09 20:59:19.371869: 
epoch:  308
2022-07-09 21:00:32.024489: train loss : -0.8964
2022-07-09 21:00:37.751047: validation loss: -0.7542
2022-07-09 21:00:37.785266: Average global foreground Dice: [0.8159]
2022-07-09 21:00:37.804877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:00:38.366750: Suus1 maybe_update_lr lr: 0.004206
2022-07-09 21:00:38.397053: This epoch took 78.992160 s

2022-07-09 21:00:38.409871: 
epoch:  309
2022-07-09 21:01:50.396700: train loss : -0.8968
2022-07-09 21:01:55.178432: validation loss: -0.7526
2022-07-09 21:01:55.204275: Average global foreground Dice: [0.8098]
2022-07-09 21:01:55.225150: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:01:55.886538: Suus1 maybe_update_lr lr: 0.004186
2022-07-09 21:01:55.916928: This epoch took 77.498444 s

2022-07-09 21:01:55.949852: 
epoch:  310
2022-07-09 21:03:07.372241: train loss : -0.8999
2022-07-09 21:03:12.107895: validation loss: -0.7640
2022-07-09 21:03:12.151270: Average global foreground Dice: [0.8243]
2022-07-09 21:03:12.163890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:03:12.792703: Suus1 maybe_update_lr lr: 0.004166
2022-07-09 21:03:12.817689: This epoch took 76.849818 s

2022-07-09 21:03:12.842926: 
epoch:  311
2022-07-09 21:04:26.306996: train loss : -0.8971
2022-07-09 21:04:31.724841: validation loss: -0.7424
2022-07-09 21:04:31.751289: Average global foreground Dice: [0.8045]
2022-07-09 21:04:31.780278: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:04:32.437188: Suus1 maybe_update_lr lr: 0.004146
2022-07-09 21:04:32.456882: This epoch took 79.609561 s

2022-07-09 21:04:32.483013: 
epoch:  312
2022-07-09 21:05:43.654102: train loss : -0.8966
2022-07-09 21:05:48.580492: validation loss: -0.7645
2022-07-09 21:05:48.608273: Average global foreground Dice: [0.8215]
2022-07-09 21:05:48.637130: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:05:49.396288: Suus1 maybe_update_lr lr: 0.004127
2022-07-09 21:05:49.412616: This epoch took 76.909230 s

2022-07-09 21:05:49.433853: 
epoch:  313
2022-07-09 21:07:00.889600: train loss : -0.8975
2022-07-09 21:07:06.570607: validation loss: -0.7452
2022-07-09 21:07:06.602279: Average global foreground Dice: [0.8104]
2022-07-09 21:07:06.621871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:07:07.246659: Suus1 maybe_update_lr lr: 0.004107
2022-07-09 21:07:07.251648: This epoch took 77.814951 s

2022-07-09 21:07:07.278831: 
epoch:  314
2022-07-09 21:08:18.311060: train loss : -0.8975
2022-07-09 21:08:23.868720: validation loss: -0.7619
2022-07-09 21:08:23.900253: Average global foreground Dice: [0.8165]
2022-07-09 21:08:23.923000: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:08:24.669015: Suus1 maybe_update_lr lr: 0.004087
2022-07-09 21:08:24.685129: This epoch took 77.390594 s

2022-07-09 21:08:24.706510: 
epoch:  315
2022-07-09 21:09:36.604110: train loss : -0.9001
2022-07-09 21:09:41.914848: validation loss: -0.7545
2022-07-09 21:09:41.926477: Average global foreground Dice: [0.8153]
2022-07-09 21:09:41.956406: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:09:42.669172: Suus1 maybe_update_lr lr: 0.004067
2022-07-09 21:09:42.683312: This epoch took 77.951442 s

2022-07-09 21:09:42.691700: 
epoch:  316
2022-07-09 21:10:53.294090: train loss : -0.8961
2022-07-09 21:10:58.460331: validation loss: -0.7554
2022-07-09 21:10:58.489289: Average global foreground Dice: [0.817]
2022-07-09 21:10:58.508867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:10:59.178268: Suus1 maybe_update_lr lr: 0.004047
2022-07-09 21:10:59.205312: This epoch took 76.501399 s

2022-07-09 21:10:59.225371: 
epoch:  317
2022-07-09 21:12:09.724298: train loss : -0.9000
2022-07-09 21:12:15.196373: validation loss: -0.7506
2022-07-09 21:12:15.225358: Average global foreground Dice: [0.8124]
2022-07-09 21:12:15.245746: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:12:15.914248: Suus1 maybe_update_lr lr: 0.004027
2022-07-09 21:12:15.933934: This epoch took 76.687078 s

2022-07-09 21:12:15.961308: 
epoch:  318
2022-07-09 21:13:27.561124: train loss : -0.8972
2022-07-09 21:13:33.045101: validation loss: -0.7619
2022-07-09 21:13:33.049165: Average global foreground Dice: [0.8234]
2022-07-09 21:13:33.051080: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:13:33.558829: Suus1 maybe_update_lr lr: 0.004007
2022-07-09 21:13:33.601895: This epoch took 77.622541 s

2022-07-09 21:13:33.618659: 
epoch:  319
2022-07-09 21:14:46.330044: train loss : -0.8927
2022-07-09 21:14:51.458587: validation loss: -0.7515
2022-07-09 21:14:51.494371: Average global foreground Dice: [0.8113]
2022-07-09 21:14:51.515862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:14:52.175346: Suus1 maybe_update_lr lr: 0.003987
2022-07-09 21:14:52.205908: This epoch took 78.554934 s

2022-07-09 21:14:52.217602: 
epoch:  320
2022-07-09 21:16:05.942235: train loss : -0.8922
2022-07-09 21:16:11.544009: validation loss: -0.7408
2022-07-09 21:16:11.579650: Average global foreground Dice: [0.8022]
2022-07-09 21:16:11.615969: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:16:12.201619: Suus1 maybe_update_lr lr: 0.003967
2022-07-09 21:16:12.220911: This epoch took 79.984928 s

2022-07-09 21:16:12.242850: 
epoch:  321
2022-07-09 21:17:23.977937: train loss : -0.8981
2022-07-09 21:17:29.264946: validation loss: -0.7609
2022-07-09 21:17:29.284181: Average global foreground Dice: [0.8204]
2022-07-09 21:17:29.288339: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:17:30.202452: Suus1 maybe_update_lr lr: 0.003947
2022-07-09 21:17:30.210443: This epoch took 77.958287 s

2022-07-09 21:17:30.227636: 
epoch:  322
2022-07-09 21:18:41.929315: train loss : -0.8970
2022-07-09 21:18:47.194597: validation loss: -0.7448
2022-07-09 21:18:47.221273: Average global foreground Dice: [0.8039]
2022-07-09 21:18:47.246112: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:18:48.032868: Suus1 maybe_update_lr lr: 0.003927
2022-07-09 21:18:48.051907: This epoch took 77.822054 s

2022-07-09 21:18:48.073861: 
epoch:  323
2022-07-09 21:20:01.814637: train loss : -0.8973
2022-07-09 21:20:07.121007: validation loss: -0.7432
2022-07-09 21:20:07.143218: Average global foreground Dice: [0.8039]
2022-07-09 21:20:07.165117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:20:07.926673: Suus1 maybe_update_lr lr: 0.003907
2022-07-09 21:20:07.943299: This epoch took 79.852922 s

2022-07-09 21:20:07.958725: 
epoch:  324
2022-07-09 21:21:19.948069: train loss : -0.8964
2022-07-09 21:21:24.838033: validation loss: -0.7683
2022-07-09 21:21:24.864911: Average global foreground Dice: [0.8211]
2022-07-09 21:21:24.867402: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:21:25.739167: Suus1 maybe_update_lr lr: 0.003887
2022-07-09 21:21:25.758908: This epoch took 77.787987 s

2022-07-09 21:21:25.780849: 
epoch:  325
2022-07-09 21:22:38.838957: train loss : -0.8991
2022-07-09 21:22:44.307754: validation loss: -0.7566
2022-07-09 21:22:44.333033: Average global foreground Dice: [0.8176]
2022-07-09 21:22:44.365919: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:22:45.029306: Suus1 maybe_update_lr lr: 0.003867
2022-07-09 21:22:45.047596: This epoch took 79.250358 s

2022-07-09 21:22:45.058062: 
epoch:  326
2022-07-09 21:23:57.026689: train loss : -0.9019
2022-07-09 21:24:02.257599: validation loss: -0.7432
2022-07-09 21:24:02.273976: Average global foreground Dice: [0.8027]
2022-07-09 21:24:02.288856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:24:02.898383: Suus1 maybe_update_lr lr: 0.003847
2022-07-09 21:24:02.930907: This epoch took 77.846273 s

2022-07-09 21:24:02.951851: 
epoch:  327
2022-07-09 21:25:14.650282: train loss : -0.8998
2022-07-09 21:25:19.554403: validation loss: -0.7708
2022-07-09 21:25:19.566999: Average global foreground Dice: [0.8278]
2022-07-09 21:25:19.596870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:25:20.259892: Suus1 maybe_update_lr lr: 0.003827
2022-07-09 21:25:20.262421: This epoch took 77.304300 s

2022-07-09 21:25:20.278861: 
epoch:  328
2022-07-09 21:26:33.129671: train loss : -0.9016
2022-07-09 21:26:39.788641: validation loss: -0.7436
2022-07-09 21:26:39.855346: Average global foreground Dice: [0.803]
2022-07-09 21:26:39.909879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:26:40.521277: Suus1 maybe_update_lr lr: 0.003807
2022-07-09 21:26:40.540902: This epoch took 80.244373 s

2022-07-09 21:26:40.562865: 
epoch:  329
2022-07-09 21:27:52.984672: train loss : -0.9019
2022-07-09 21:27:58.277875: validation loss: -0.7601
2022-07-09 21:27:58.328226: Average global foreground Dice: [0.819]
2022-07-09 21:27:58.351974: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:27:59.031779: Suus1 maybe_update_lr lr: 0.003787
2022-07-09 21:27:59.047907: This epoch took 78.463027 s

2022-07-09 21:27:59.079178: 
epoch:  330
2022-07-09 21:29:10.751327: train loss : -0.8995
2022-07-09 21:29:15.670488: validation loss: -0.7543
2022-07-09 21:29:15.677451: Average global foreground Dice: [0.8125]
2022-07-09 21:29:15.704863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:29:16.356962: Suus1 maybe_update_lr lr: 0.003767
2022-07-09 21:29:16.377903: This epoch took 77.278606 s

2022-07-09 21:29:16.400880: 
epoch:  331
2022-07-09 21:30:28.242257: train loss : -0.9017
2022-07-09 21:30:33.595974: validation loss: -0.7469
2022-07-09 21:30:33.606990: Average global foreground Dice: [0.8052]
2022-07-09 21:30:33.613355: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:30:34.231732: Suus1 maybe_update_lr lr: 0.003747
2022-07-09 21:30:34.262904: This epoch took 77.840029 s

2022-07-09 21:30:34.282080: 
epoch:  332
2022-07-09 21:31:48.499918: train loss : -0.8992
2022-07-09 21:31:53.444614: validation loss: -0.7647
2022-07-09 21:31:53.475292: Average global foreground Dice: [0.8222]
2022-07-09 21:31:53.487877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:31:54.276200: Suus1 maybe_update_lr lr: 0.003727
2022-07-09 21:31:54.285775: This epoch took 79.967777 s

2022-07-09 21:31:54.306541: 
epoch:  333
2022-07-09 21:33:05.081863: train loss : -0.9006
2022-07-09 21:33:09.780354: validation loss: -0.7239
2022-07-09 21:33:09.803293: Average global foreground Dice: [0.7803]
2022-07-09 21:33:09.839880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:33:10.606129: Suus1 maybe_update_lr lr: 0.003707
2022-07-09 21:33:10.646002: This epoch took 76.336776 s

2022-07-09 21:33:10.676860: 
epoch:  334
2022-07-09 21:34:21.651259: train loss : -0.9018
2022-07-09 21:34:26.392601: validation loss: -0.7732
2022-07-09 21:34:26.405069: Average global foreground Dice: [0.8286]
2022-07-09 21:34:26.436878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:34:27.105704: Suus1 maybe_update_lr lr: 0.003687
2022-07-09 21:34:27.136912: This epoch took 76.438027 s

2022-07-09 21:34:27.164458: 
epoch:  335
2022-07-09 21:35:38.853913: train loss : -0.9006
2022-07-09 21:35:44.313807: validation loss: -0.7571
2022-07-09 21:35:44.342648: Average global foreground Dice: [0.8164]
2022-07-09 21:35:44.374881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:35:45.062396: Suus1 maybe_update_lr lr: 0.003667
2022-07-09 21:35:45.081904: This epoch took 77.885036 s

2022-07-09 21:35:45.103857: 
epoch:  336
2022-07-09 21:36:56.354393: train loss : -0.9041
2022-07-09 21:37:01.709102: validation loss: -0.7503
2022-07-09 21:37:01.740167: Average global foreground Dice: [0.8117]
2022-07-09 21:37:01.754860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:37:02.396321: Suus1 maybe_update_lr lr: 0.003647
2022-07-09 21:37:02.421109: This epoch took 77.284134 s

2022-07-09 21:37:02.442930: 
epoch:  337
2022-07-09 21:38:14.290617: train loss : -0.9026
2022-07-09 21:38:19.206672: validation loss: -0.7552
2022-07-09 21:38:19.246286: Average global foreground Dice: [0.8141]
2022-07-09 21:38:19.258977: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:38:19.977302: Suus1 maybe_update_lr lr: 0.003627
2022-07-09 21:38:20.005975: This epoch took 77.544791 s

2022-07-09 21:38:20.038840: 
epoch:  338
2022-07-09 21:39:31.759153: train loss : -0.9018
2022-07-09 21:39:36.515112: validation loss: -0.7580
2022-07-09 21:39:36.535547: Average global foreground Dice: [0.8162]
2022-07-09 21:39:36.575187: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:39:37.164158: Suus1 maybe_update_lr lr: 0.003606
2022-07-09 21:39:37.178066: This epoch took 77.119155 s

2022-07-09 21:39:37.197124: 
epoch:  339
2022-07-09 21:40:51.423715: train loss : -0.9007
2022-07-09 21:40:57.396677: validation loss: -0.7645
2022-07-09 21:40:57.425480: Average global foreground Dice: [0.8231]
2022-07-09 21:40:57.448920: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:40:58.303190: Suus1 maybe_update_lr lr: 0.003586
2022-07-09 21:40:58.322896: This epoch took 81.094150 s

2022-07-09 21:40:58.341105: 
epoch:  340
2022-07-09 21:42:09.924938: train loss : -0.9046
2022-07-09 21:42:15.483253: validation loss: -0.7517
2022-07-09 21:42:15.514276: Average global foreground Dice: [0.8105]
2022-07-09 21:42:15.528868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:42:16.265271: Suus1 maybe_update_lr lr: 0.003566
2022-07-09 21:42:16.295887: This epoch took 77.952579 s

2022-07-09 21:42:16.318003: 
epoch:  341
2022-07-09 21:43:28.555274: train loss : -0.9016
2022-07-09 21:43:33.437742: validation loss: -0.7543
2022-07-09 21:43:33.460899: Average global foreground Dice: [0.8141]
2022-07-09 21:43:33.463717: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:43:34.384478: Suus1 maybe_update_lr lr: 0.003546
2022-07-09 21:43:34.405922: This epoch took 78.079194 s

2022-07-09 21:43:34.419029: 
epoch:  342
2022-07-09 21:44:48.679921: train loss : -0.9012
2022-07-09 21:44:54.139823: validation loss: -0.7449
2022-07-09 21:44:54.170378: Average global foreground Dice: [0.8056]
2022-07-09 21:44:54.185880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:44:54.837761: Suus1 maybe_update_lr lr: 0.003526
2022-07-09 21:44:54.856904: This epoch took 80.423067 s

2022-07-09 21:44:54.878860: 
epoch:  343
2022-07-09 21:46:05.806526: train loss : -0.9024
2022-07-09 21:46:10.703998: validation loss: -0.7626
2022-07-09 21:46:10.732606: Average global foreground Dice: [0.8228]
2022-07-09 21:46:10.746876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:46:11.426189: Suus1 maybe_update_lr lr: 0.003505
2022-07-09 21:46:11.452392: This epoch took 76.551511 s

2022-07-09 21:46:11.482858: 
epoch:  344
2022-07-09 21:47:22.674103: train loss : -0.9049
2022-07-09 21:47:28.693321: validation loss: -0.7563
2022-07-09 21:47:28.724509: Average global foreground Dice: [0.817]
2022-07-09 21:47:28.744356: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:47:29.365182: Suus1 maybe_update_lr lr: 0.003485
2022-07-09 21:47:29.384181: This epoch took 77.861654 s

2022-07-09 21:47:29.416078: 
epoch:  345
2022-07-09 21:48:41.696837: train loss : -0.9066
2022-07-09 21:48:47.453043: validation loss: -0.7549
2022-07-09 21:48:47.497448: Average global foreground Dice: [0.8128]
2022-07-09 21:48:47.519394: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:48:48.235185: Suus1 maybe_update_lr lr: 0.003465
2022-07-09 21:48:48.248831: This epoch took 78.819952 s

2022-07-09 21:48:48.251761: 
epoch:  346
2022-07-09 21:49:59.283034: train loss : -0.9094
2022-07-09 21:50:04.224013: validation loss: -0.7323
2022-07-09 21:50:04.249291: Average global foreground Dice: [0.7968]
2022-07-09 21:50:04.279999: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:50:04.840364: Suus1 maybe_update_lr lr: 0.003445
2022-07-09 21:50:04.842782: This epoch took 76.563897 s

2022-07-09 21:50:04.844977: 
epoch:  347
2022-07-09 21:51:17.349342: train loss : -0.9061
2022-07-09 21:51:22.380825: validation loss: -0.7289
2022-07-09 21:51:22.403148: Average global foreground Dice: [0.7908]
2022-07-09 21:51:22.416936: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:51:23.029778: Suus1 maybe_update_lr lr: 0.003424
2022-07-09 21:51:23.039896: This epoch took 78.172031 s

2022-07-09 21:51:23.070976: 
epoch:  348
2022-07-09 21:52:33.360719: train loss : -0.9003
2022-07-09 21:52:38.833549: validation loss: -0.7685
2022-07-09 21:52:38.859738: Average global foreground Dice: [0.8286]
2022-07-09 21:52:38.882865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:52:39.575296: Suus1 maybe_update_lr lr: 0.003404
2022-07-09 21:52:39.577615: This epoch took 76.484753 s

2022-07-09 21:52:39.579523: 
epoch:  349
2022-07-09 21:53:51.423934: train loss : -0.9042
2022-07-09 21:53:56.692447: validation loss: -0.7635
2022-07-09 21:53:56.720301: Average global foreground Dice: [0.8233]
2022-07-09 21:53:56.739893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:53:57.393191: Suus1 maybe_update_lr lr: 0.003384
2022-07-09 21:53:57.416882: saving scheduled checkpoint file...
2022-07-09 21:53:57.515766: saving checkpoint...
2022-07-09 21:53:59.008740: done, saving took 1.57 seconds
2022-07-09 21:53:59.027297: done
2022-07-09 21:53:59.029408: This epoch took 79.432538 s

2022-07-09 21:53:59.031265: 
epoch:  350
2022-07-09 21:55:10.992747: train loss : -0.9007
2022-07-09 21:55:16.331507: validation loss: -0.7604
2022-07-09 21:55:16.347230: Average global foreground Dice: [0.821]
2022-07-09 21:55:16.360252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:55:17.063034: Suus1 maybe_update_lr lr: 0.003364
2022-07-09 21:55:17.083920: This epoch took 78.050773 s

2022-07-09 21:55:17.102301: 
epoch:  351
2022-07-09 21:56:28.956911: train loss : -0.9043
2022-07-09 21:56:33.641231: validation loss: -0.7673
2022-07-09 21:56:33.672251: Average global foreground Dice: [0.825]
2022-07-09 21:56:33.691996: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:56:34.549667: Suus1 maybe_update_lr lr: 0.003343
2022-07-09 21:56:34.582923: This epoch took 77.477281 s

2022-07-09 21:56:34.602847: 
epoch:  352
2022-07-09 21:57:45.527894: train loss : -0.9068
2022-07-09 21:57:50.399332: validation loss: -0.7637
2022-07-09 21:57:50.414603: Average global foreground Dice: [0.8216]
2022-07-09 21:57:50.421413: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:57:51.008703: Suus1 maybe_update_lr lr: 0.003323
2022-07-09 21:57:51.027896: This epoch took 76.407018 s

2022-07-09 21:57:51.049599: 
epoch:  353
2022-07-09 21:59:05.113858: train loss : -0.9060
2022-07-09 21:59:10.318336: validation loss: -0.7601
2022-07-09 21:59:10.350257: Average global foreground Dice: [0.8168]
2022-07-09 21:59:10.368876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 21:59:11.083984: Suus1 maybe_update_lr lr: 0.003303
2022-07-09 21:59:11.107884: This epoch took 80.024577 s

2022-07-09 21:59:11.129865: 
epoch:  354
2022-07-09 22:00:23.255893: train loss : -0.9072
2022-07-09 22:00:28.613462: validation loss: -0.7668
2022-07-09 22:00:28.624198: Average global foreground Dice: [0.8233]
2022-07-09 22:00:28.626601: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:00:29.145092: Suus1 maybe_update_lr lr: 0.003282
2022-07-09 22:00:29.165395: This epoch took 78.013443 s

2022-07-09 22:00:29.187842: 
epoch:  355
2022-07-09 22:01:39.568608: train loss : -0.9093
2022-07-09 22:01:44.632786: validation loss: -0.7480
2022-07-09 22:01:44.656758: Average global foreground Dice: [0.8112]
2022-07-09 22:01:44.673141: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:01:45.350039: Suus1 maybe_update_lr lr: 0.003262
2022-07-09 22:01:45.369907: This epoch took 76.162050 s

2022-07-09 22:01:45.380032: 
epoch:  356
2022-07-09 22:02:57.892060: train loss : -0.9093
2022-07-09 22:03:02.730097: validation loss: -0.7552
2022-07-09 22:03:02.769225: Average global foreground Dice: [0.8156]
2022-07-09 22:03:02.781864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:03:03.456760: Suus1 maybe_update_lr lr: 0.003241
2022-07-09 22:03:03.486181: This epoch took 78.084313 s

2022-07-09 22:03:03.499075: 
epoch:  357
2022-07-09 22:04:17.049987: train loss : -0.9061
2022-07-09 22:04:22.277339: validation loss: -0.7617
2022-07-09 22:04:22.281319: Average global foreground Dice: [0.8187]
2022-07-09 22:04:22.294008: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:04:22.893986: Suus1 maybe_update_lr lr: 0.003221
2022-07-09 22:04:22.917007: This epoch took 79.415669 s

2022-07-09 22:04:22.949859: 
epoch:  358
2022-07-09 22:05:35.065834: train loss : -0.9079
2022-07-09 22:05:40.139803: validation loss: -0.7573
2022-07-09 22:05:40.159992: Average global foreground Dice: [0.8193]
2022-07-09 22:05:40.178717: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:05:40.863012: Suus1 maybe_update_lr lr: 0.003201
2022-07-09 22:05:40.865589: This epoch took 77.886274 s

2022-07-09 22:05:40.906864: 
epoch:  359
2022-07-09 22:06:51.981295: train loss : -0.9056
2022-07-09 22:06:57.064943: validation loss: -0.7465
2022-07-09 22:06:57.092462: Average global foreground Dice: [0.8107]
2022-07-09 22:06:57.098269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:06:57.761446: Suus1 maybe_update_lr lr: 0.00318
2022-07-09 22:06:57.787918: This epoch took 76.868087 s

2022-07-09 22:06:57.809866: 
epoch:  360
2022-07-09 22:08:07.095261: train loss : -0.9089
2022-07-09 22:08:12.386334: validation loss: -0.7507
2022-07-09 22:08:12.419222: Average global foreground Dice: [0.8144]
2022-07-09 22:08:12.441629: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:08:13.178303: Suus1 maybe_update_lr lr: 0.00316
2022-07-09 22:08:13.197911: This epoch took 75.366040 s

2022-07-09 22:08:13.225916: 
epoch:  361
2022-07-09 22:09:23.798723: train loss : -0.9087
2022-07-09 22:09:28.675554: validation loss: -0.7605
2022-07-09 22:09:28.734342: Average global foreground Dice: [0.8212]
2022-07-09 22:09:28.775189: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:09:29.645784: Suus1 maybe_update_lr lr: 0.003139
2022-07-09 22:09:29.664898: This epoch took 76.417034 s

2022-07-09 22:09:29.692862: 
epoch:  362
2022-07-09 22:10:39.908284: train loss : -0.9046
2022-07-09 22:10:45.002915: validation loss: -0.7621
2022-07-09 22:10:45.024002: Average global foreground Dice: [0.8248]
2022-07-09 22:10:45.052911: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:10:45.649056: Suus1 maybe_update_lr lr: 0.003119
2022-07-09 22:10:45.677894: This epoch took 75.952024 s

2022-07-09 22:10:45.683392: 
epoch:  363
2022-07-09 22:11:57.612372: train loss : -0.9090
2022-07-09 22:12:02.392622: validation loss: -0.7699
2022-07-09 22:12:02.432245: Average global foreground Dice: [0.8251]
2022-07-09 22:12:02.438599: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:12:03.285616: Suus1 maybe_update_lr lr: 0.003098
2022-07-09 22:12:03.304779: This epoch took 77.619081 s

2022-07-09 22:12:03.331866: 
epoch:  364
2022-07-09 22:13:16.018383: train loss : -0.9086
2022-07-09 22:13:21.139365: validation loss: -0.7430
2022-07-09 22:13:21.172532: Average global foreground Dice: [0.8053]
2022-07-09 22:13:21.185890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:13:21.752385: Suus1 maybe_update_lr lr: 0.003078
2022-07-09 22:13:21.771017: This epoch took 78.399516 s

2022-07-09 22:13:21.790220: 
epoch:  365
2022-07-09 22:14:33.284969: train loss : -0.9104
2022-07-09 22:14:38.609370: validation loss: -0.7504
2022-07-09 22:14:38.632154: Average global foreground Dice: [0.8145]
2022-07-09 22:14:38.660087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:14:39.582684: Suus1 maybe_update_lr lr: 0.003057
2022-07-09 22:14:39.605650: This epoch took 77.813028 s

2022-07-09 22:14:39.616168: 
epoch:  366
2022-07-09 22:15:50.151097: train loss : -0.9073
2022-07-09 22:15:54.860186: validation loss: -0.7546
2022-07-09 22:15:54.882487: Average global foreground Dice: [0.8112]
2022-07-09 22:15:54.894804: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:15:55.581567: Suus1 maybe_update_lr lr: 0.003037
2022-07-09 22:15:55.602904: This epoch took 75.961037 s

2022-07-09 22:15:55.629848: 
epoch:  367
2022-07-09 22:17:07.997842: train loss : -0.9095
2022-07-09 22:17:13.119007: validation loss: -0.7595
2022-07-09 22:17:13.150273: Average global foreground Dice: [0.8176]
2022-07-09 22:17:13.169878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:17:13.852966: Suus1 maybe_update_lr lr: 0.003016
2022-07-09 22:17:13.860053: This epoch took 78.208203 s

2022-07-09 22:17:13.893871: 
epoch:  368
2022-07-09 22:18:25.816073: train loss : -0.9113
2022-07-09 22:18:30.972771: validation loss: -0.7525
2022-07-09 22:18:31.004004: Average global foreground Dice: [0.8151]
2022-07-09 22:18:31.032220: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:18:31.600839: Suus1 maybe_update_lr lr: 0.002996
2022-07-09 22:18:31.633905: This epoch took 77.728349 s

2022-07-09 22:18:31.643849: 
epoch:  369
2022-07-09 22:19:44.537885: train loss : -0.9091
2022-07-09 22:19:50.940894: validation loss: -0.7753
2022-07-09 22:19:50.961995: Average global foreground Dice: [0.8326]
2022-07-09 22:19:50.982265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:19:51.683829: Suus1 maybe_update_lr lr: 0.002975
2022-07-09 22:19:51.699292: This epoch took 80.034821 s

2022-07-09 22:19:51.724194: 
epoch:  370
2022-07-09 22:21:03.123756: train loss : -0.9083
2022-07-09 22:21:08.434784: validation loss: -0.7619
2022-07-09 22:21:08.466407: Average global foreground Dice: [0.8198]
2022-07-09 22:21:08.478872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:21:09.046481: Suus1 maybe_update_lr lr: 0.002954
2022-07-09 22:21:09.078902: This epoch took 77.328651 s

2022-07-09 22:21:09.120856: 
epoch:  371
2022-07-09 22:22:22.516431: train loss : -0.9117
2022-07-09 22:22:27.695427: validation loss: -0.7457
2022-07-09 22:22:27.715156: Average global foreground Dice: [0.8064]
2022-07-09 22:22:27.728734: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:22:28.272345: Suus1 maybe_update_lr lr: 0.002934
2022-07-09 22:22:28.291901: This epoch took 79.140944 s

2022-07-09 22:22:28.304852: 
epoch:  372
2022-07-09 22:23:40.150306: train loss : -0.9103
2022-07-09 22:23:45.291198: validation loss: -0.7340
2022-07-09 22:23:45.312757: Average global foreground Dice: [0.8009]
2022-07-09 22:23:45.329447: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:23:46.101835: Suus1 maybe_update_lr lr: 0.002913
2022-07-09 22:23:46.137917: This epoch took 77.824549 s

2022-07-09 22:23:46.158912: 
epoch:  373
2022-07-09 22:24:57.408440: train loss : -0.9111
2022-07-09 22:25:02.279100: validation loss: -0.7495
2022-07-09 22:25:02.325318: Average global foreground Dice: [0.8134]
2022-07-09 22:25:02.346893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:25:02.883050: Suus1 maybe_update_lr lr: 0.002892
2022-07-09 22:25:02.913986: This epoch took 76.752899 s

2022-07-09 22:25:02.936862: 
epoch:  374
2022-07-09 22:26:15.359607: train loss : -0.9125
2022-07-09 22:26:20.369259: validation loss: -0.7547
2022-07-09 22:26:20.402280: Average global foreground Dice: [0.8146]
2022-07-09 22:26:20.423856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:26:21.251215: Suus1 maybe_update_lr lr: 0.002872
2022-07-09 22:26:21.272957: This epoch took 78.316075 s

2022-07-09 22:26:21.292993: 
epoch:  375
2022-07-09 22:27:32.765065: train loss : -0.9077
2022-07-09 22:27:37.840342: validation loss: -0.7624
2022-07-09 22:27:37.872253: Average global foreground Dice: [0.8252]
2022-07-09 22:27:37.885424: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:27:38.532701: Suus1 maybe_update_lr lr: 0.002851
2022-07-09 22:27:38.561672: This epoch took 77.255740 s

2022-07-09 22:27:38.572864: 
epoch:  376
2022-07-09 22:28:50.139701: train loss : -0.9109
2022-07-09 22:28:55.369028: validation loss: -0.7594
2022-07-09 22:28:55.400273: Average global foreground Dice: [0.8165]
2022-07-09 22:28:55.427657: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:28:56.263299: Suus1 maybe_update_lr lr: 0.00283
2022-07-09 22:28:56.287893: This epoch took 77.683972 s

2022-07-09 22:28:56.299918: 
epoch:  377
2022-07-09 22:30:06.862745: train loss : -0.9107
2022-07-09 22:30:12.217630: validation loss: -0.7494
2022-07-09 22:30:12.236718: Average global foreground Dice: [0.81]
2022-07-09 22:30:12.263193: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:30:12.975216: Suus1 maybe_update_lr lr: 0.00281
2022-07-09 22:30:12.996900: This epoch took 76.670034 s

2022-07-09 22:30:13.024102: 
epoch:  378
2022-07-09 22:31:23.613916: train loss : -0.9113
2022-07-09 22:31:28.768450: validation loss: -0.7500
2022-07-09 22:31:28.795248: Average global foreground Dice: [0.8127]
2022-07-09 22:31:28.827867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:31:29.477755: Suus1 maybe_update_lr lr: 0.002789
2022-07-09 22:31:29.496897: This epoch took 76.452703 s

2022-07-09 22:31:29.525887: 
epoch:  379
2022-07-09 22:32:41.917769: train loss : -0.9111
2022-07-09 22:32:47.385286: validation loss: -0.7669
2022-07-09 22:32:47.417207: Average global foreground Dice: [0.8229]
2022-07-09 22:32:47.447867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:32:47.959282: Suus1 maybe_update_lr lr: 0.002768
2022-07-09 22:32:47.978900: This epoch took 78.408531 s

2022-07-09 22:32:47.997036: 
epoch:  380
2022-07-09 22:33:59.735199: train loss : -0.9080
2022-07-09 22:34:05.325442: validation loss: -0.7548
2022-07-09 22:34:05.356468: Average global foreground Dice: [0.8193]
2022-07-09 22:34:05.367741: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:34:06.223641: Suus1 maybe_update_lr lr: 0.002747
2022-07-09 22:34:06.226130: This epoch took 78.209265 s

2022-07-09 22:34:06.253870: 
epoch:  381
2022-07-09 22:35:19.072117: train loss : -0.9122
2022-07-09 22:35:23.891761: validation loss: -0.7597
2022-07-09 22:35:23.936242: Average global foreground Dice: [0.8166]
2022-07-09 22:35:23.950868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:35:24.706393: Suus1 maybe_update_lr lr: 0.002727
2022-07-09 22:35:24.734910: This epoch took 78.444318 s

2022-07-09 22:35:24.750859: 
epoch:  382
2022-07-09 22:36:35.425900: train loss : -0.9112
2022-07-09 22:36:40.306136: validation loss: -0.7618
2022-07-09 22:36:40.332691: Average global foreground Dice: [0.8218]
2022-07-09 22:36:40.383799: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:36:41.085095: Suus1 maybe_update_lr lr: 0.002706
2022-07-09 22:36:41.110653: This epoch took 76.337777 s

2022-07-09 22:36:41.116868: 
epoch:  383
2022-07-09 22:37:52.728104: train loss : -0.9119
2022-07-09 22:37:58.295526: validation loss: -0.7758
2022-07-09 22:37:58.335531: Average global foreground Dice: [0.832]
2022-07-09 22:37:58.355969: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:37:59.237938: Suus1 maybe_update_lr lr: 0.002685
2022-07-09 22:37:59.256895: This epoch took 78.128219 s

2022-07-09 22:37:59.285870: 
epoch:  384
2022-07-09 22:39:09.966816: train loss : -0.9126
2022-07-09 22:39:15.191899: validation loss: -0.7616
2022-07-09 22:39:15.224260: Average global foreground Dice: [0.8232]
2022-07-09 22:39:15.236876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:39:15.800203: Suus1 maybe_update_lr lr: 0.002664
2022-07-09 22:39:15.838658: saving best epoch checkpoint...
2022-07-09 22:39:15.977579: saving checkpoint...
2022-07-09 22:39:17.557054: done, saving took 1.70 seconds
2022-07-09 22:39:17.574907: This epoch took 78.256046 s

2022-07-09 22:39:17.577041: 
epoch:  385
2022-07-09 22:40:29.521149: train loss : -0.9125
2022-07-09 22:40:34.294184: validation loss: -0.7731
2022-07-09 22:40:34.321906: Average global foreground Dice: [0.8276]
2022-07-09 22:40:34.327760: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:40:34.999688: Suus1 maybe_update_lr lr: 0.002643
2022-07-09 22:40:35.031884: saving best epoch checkpoint...
2022-07-09 22:40:35.123549: saving checkpoint...
2022-07-09 22:40:37.083139: done, saving took 2.02 seconds
2022-07-09 22:40:37.099905: This epoch took 79.520697 s

2022-07-09 22:40:37.102088: 
epoch:  386
2022-07-09 22:41:47.365945: train loss : -0.9120
2022-07-09 22:41:52.257318: validation loss: -0.7530
2022-07-09 22:41:52.293268: Average global foreground Dice: [0.8131]
2022-07-09 22:41:52.315455: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:41:52.926234: Suus1 maybe_update_lr lr: 0.002622
2022-07-09 22:41:52.957088: This epoch took 75.852856 s

2022-07-09 22:41:52.978903: 
epoch:  387
2022-07-09 22:43:05.107455: train loss : -0.9103
2022-07-09 22:43:10.078912: validation loss: -0.7660
2022-07-09 22:43:10.112254: Average global foreground Dice: [0.8248]
2022-07-09 22:43:10.134702: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:43:10.854164: Suus1 maybe_update_lr lr: 0.002601
2022-07-09 22:43:10.870010: This epoch took 77.869116 s

2022-07-09 22:43:10.895009: 
epoch:  388
2022-07-09 22:44:22.125679: train loss : -0.9124
2022-07-09 22:44:28.260352: validation loss: -0.7622
2022-07-09 22:44:28.291345: Average global foreground Dice: [0.8208]
2022-07-09 22:44:28.308858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:44:28.843331: Suus1 maybe_update_lr lr: 0.002581
2022-07-09 22:44:28.864892: saving best epoch checkpoint...
2022-07-09 22:44:28.984740: saving checkpoint...
2022-07-09 22:44:30.493969: done, saving took 1.60 seconds
2022-07-09 22:44:30.508751: This epoch took 79.611195 s

2022-07-09 22:44:30.510885: 
epoch:  389
2022-07-09 22:45:40.528109: train loss : -0.9137
2022-07-09 22:45:46.769490: validation loss: -0.7508
2022-07-09 22:45:46.801465: Average global foreground Dice: [0.8129]
2022-07-09 22:45:46.818166: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:45:47.457681: Suus1 maybe_update_lr lr: 0.00256
2022-07-09 22:45:47.478218: This epoch took 76.965232 s

2022-07-09 22:45:47.508879: 
epoch:  390
2022-07-09 22:46:58.436695: train loss : -0.9148
2022-07-09 22:47:03.676654: validation loss: -0.7677
2022-07-09 22:47:03.691715: Average global foreground Dice: [0.8263]
2022-07-09 22:47:03.694445: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:47:04.247034: Suus1 maybe_update_lr lr: 0.002539
2022-07-09 22:47:04.259471: saving best epoch checkpoint...
2022-07-09 22:47:04.313056: saving checkpoint...
2022-07-09 22:47:06.011301: done, saving took 1.75 seconds
2022-07-09 22:47:06.025076: This epoch took 78.494202 s

2022-07-09 22:47:06.027195: 
epoch:  391
2022-07-09 22:48:17.807503: train loss : -0.9151
2022-07-09 22:48:22.958001: validation loss: -0.7681
2022-07-09 22:48:23.002207: Average global foreground Dice: [0.8263]
2022-07-09 22:48:23.018574: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:48:23.747696: Suus1 maybe_update_lr lr: 0.002518
2022-07-09 22:48:23.771884: saving best epoch checkpoint...
2022-07-09 22:48:23.887167: saving checkpoint...
2022-07-09 22:48:25.473889: done, saving took 1.68 seconds
2022-07-09 22:48:25.490325: This epoch took 79.461171 s

2022-07-09 22:48:25.492666: 
epoch:  392
2022-07-09 22:49:37.255351: train loss : -0.9127
2022-07-09 22:49:42.539073: validation loss: -0.7816
2022-07-09 22:49:42.566682: Average global foreground Dice: [0.8395]
2022-07-09 22:49:42.586300: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:49:43.183767: Suus1 maybe_update_lr lr: 0.002497
2022-07-09 22:49:43.204881: saving best epoch checkpoint...
2022-07-09 22:49:43.329623: saving checkpoint...
2022-07-09 22:49:45.073939: done, saving took 1.86 seconds
2022-07-09 22:49:45.090036: This epoch took 79.595063 s

2022-07-09 22:49:45.092166: 
epoch:  393
2022-07-09 22:50:56.082841: train loss : -0.9150
2022-07-09 22:51:01.353741: validation loss: -0.7686
2022-07-09 22:51:01.389324: Average global foreground Dice: [0.8244]
2022-07-09 22:51:01.422496: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:51:02.343479: Suus1 maybe_update_lr lr: 0.002476
2022-07-09 22:51:02.364885: saving best epoch checkpoint...
2022-07-09 22:51:02.451835: saving checkpoint...
2022-07-09 22:51:03.904954: done, saving took 1.51 seconds
2022-07-09 22:51:03.920477: This epoch took 78.826144 s

2022-07-09 22:51:03.922843: 
epoch:  394
2022-07-09 22:52:13.622569: train loss : -0.9163
2022-07-09 22:52:18.600843: validation loss: -0.7496
2022-07-09 22:52:18.626162: Average global foreground Dice: [0.8107]
2022-07-09 22:52:18.651554: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:52:19.448264: Suus1 maybe_update_lr lr: 0.002455
2022-07-09 22:52:19.468910: This epoch took 75.543840 s

2022-07-09 22:52:19.490882: 
epoch:  395
2022-07-09 22:53:30.629808: train loss : -0.9113
2022-07-09 22:53:35.930040: validation loss: -0.7590
2022-07-09 22:53:35.962230: Average global foreground Dice: [0.8175]
2022-07-09 22:53:35.974869: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:53:36.559299: Suus1 maybe_update_lr lr: 0.002434
2022-07-09 22:53:36.578895: This epoch took 77.066026 s

2022-07-09 22:53:36.600847: 
epoch:  396
2022-07-09 22:54:49.387632: train loss : -0.9138
2022-07-09 22:54:54.657377: validation loss: -0.7593
2022-07-09 22:54:54.673992: Average global foreground Dice: [0.8192]
2022-07-09 22:54:54.697922: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:54:55.573722: Suus1 maybe_update_lr lr: 0.002413
2022-07-09 22:54:55.584888: This epoch took 78.967477 s

2022-07-09 22:54:55.593559: 
epoch:  397
2022-07-09 22:56:07.052785: train loss : -0.9144
2022-07-09 22:56:12.201573: validation loss: -0.7723
2022-07-09 22:56:12.225269: Average global foreground Dice: [0.8302]
2022-07-09 22:56:12.240888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:56:12.877125: Suus1 maybe_update_lr lr: 0.002391
2022-07-09 22:56:12.895161: This epoch took 77.281295 s

2022-07-09 22:56:12.910748: 
epoch:  398
2022-07-09 22:57:26.154776: train loss : -0.9140
2022-07-09 22:57:31.527376: validation loss: -0.7693
2022-07-09 22:57:31.549296: Average global foreground Dice: [0.8251]
2022-07-09 22:57:31.568497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:57:32.262992: Suus1 maybe_update_lr lr: 0.00237
2022-07-09 22:57:32.267277: This epoch took 79.319149 s

2022-07-09 22:57:32.307313: 
epoch:  399
2022-07-09 22:58:45.439974: train loss : -0.9130
2022-07-09 22:58:50.423956: validation loss: -0.7634
2022-07-09 22:58:50.457256: Average global foreground Dice: [0.8245]
2022-07-09 22:58:50.494254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 22:58:51.262129: Suus1 maybe_update_lr lr: 0.002349
2022-07-09 22:58:51.293116: saving scheduled checkpoint file...
2022-07-09 22:58:51.377687: saving checkpoint...
2022-07-09 22:58:53.357363: done, saving took 2.04 seconds
2022-07-09 22:58:53.373827: done
2022-07-09 22:58:53.376169: This epoch took 81.051113 s

2022-07-09 22:58:53.378314: 
epoch:  400
2022-07-09 23:00:05.713256: train loss : -0.9140
2022-07-09 23:00:11.424410: validation loss: -0.7651
2022-07-09 23:00:11.445298: Average global foreground Dice: [0.8192]
2022-07-09 23:00:11.476250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:00:12.164811: Suus1 maybe_update_lr lr: 0.002328
2022-07-09 23:00:12.207897: This epoch took 78.827474 s

2022-07-09 23:00:12.230993: 
epoch:  401
2022-07-09 23:01:23.824365: train loss : -0.9159
2022-07-09 23:01:28.879978: validation loss: -0.7505
2022-07-09 23:01:28.922137: Average global foreground Dice: [0.8135]
2022-07-09 23:01:28.929184: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:01:29.461905: Suus1 maybe_update_lr lr: 0.002307
2022-07-09 23:01:29.480922: This epoch took 77.228050 s

2022-07-09 23:01:29.495117: 
epoch:  402
2022-07-09 23:02:42.186151: train loss : -0.9171
2022-07-09 23:02:47.114464: validation loss: -0.7603
2022-07-09 23:02:47.138721: Average global foreground Dice: [0.8208]
2022-07-09 23:02:47.158755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:02:47.768648: Suus1 maybe_update_lr lr: 0.002286
2022-07-09 23:02:47.780106: This epoch took 78.252221 s

2022-07-09 23:02:47.808442: 
epoch:  403
2022-07-09 23:04:00.220035: train loss : -0.9148
2022-07-09 23:04:05.154151: validation loss: -0.7688
2022-07-09 23:04:05.171518: Average global foreground Dice: [0.8242]
2022-07-09 23:04:05.200900: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:04:05.901258: Suus1 maybe_update_lr lr: 0.002264
2022-07-09 23:04:05.912909: This epoch took 78.073305 s

2022-07-09 23:04:05.934860: 
epoch:  404
2022-07-09 23:05:17.498192: train loss : -0.9165
2022-07-09 23:05:22.421681: validation loss: -0.7594
2022-07-09 23:05:22.452317: Average global foreground Dice: [0.8207]
2022-07-09 23:05:22.468868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:05:23.108108: Suus1 maybe_update_lr lr: 0.002243
2022-07-09 23:05:23.140897: This epoch took 77.174626 s

2022-07-09 23:05:23.173861: 
epoch:  405
2022-07-09 23:06:34.442134: train loss : -0.9173
2022-07-09 23:06:40.009304: validation loss: -0.7429
2022-07-09 23:06:40.043259: Average global foreground Dice: [0.81]
2022-07-09 23:06:40.064897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:06:40.787492: Suus1 maybe_update_lr lr: 0.002222
2022-07-09 23:06:40.791833: This epoch took 77.584956 s

2022-07-09 23:06:40.800294: 
epoch:  406
2022-07-09 23:07:52.977420: train loss : -0.9188
2022-07-09 23:07:58.443274: validation loss: -0.7675
2022-07-09 23:07:58.471312: Average global foreground Dice: [0.8234]
2022-07-09 23:07:58.503861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:07:59.072979: Suus1 maybe_update_lr lr: 0.002201
2022-07-09 23:07:59.104037: This epoch took 78.301375 s

2022-07-09 23:07:59.124091: 
epoch:  407
2022-07-09 23:09:10.990330: train loss : -0.9178
2022-07-09 23:09:16.097266: validation loss: -0.7540
2022-07-09 23:09:16.108079: Average global foreground Dice: [0.8143]
2022-07-09 23:09:16.130889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:09:16.726453: Suus1 maybe_update_lr lr: 0.002179
2022-07-09 23:09:16.747903: This epoch took 77.599741 s

2022-07-09 23:09:16.766360: 
epoch:  408
2022-07-09 23:10:28.979777: train loss : -0.9184
2022-07-09 23:10:34.005374: validation loss: -0.7630
2022-07-09 23:10:34.036483: Average global foreground Dice: [0.823]
2022-07-09 23:10:34.047942: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:10:34.916585: Suus1 maybe_update_lr lr: 0.002158
2022-07-09 23:10:34.919658: This epoch took 78.137810 s

2022-07-09 23:10:34.945858: 
epoch:  409
2022-07-09 23:11:46.910985: train loss : -0.9156
2022-07-09 23:11:52.208424: validation loss: -0.7684
2022-07-09 23:11:52.229352: Average global foreground Dice: [0.8249]
2022-07-09 23:11:52.255192: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:11:52.955270: Suus1 maybe_update_lr lr: 0.002137
2022-07-09 23:11:52.977032: This epoch took 78.015787 s

2022-07-09 23:11:53.000888: 
epoch:  410
2022-07-09 23:13:04.790901: train loss : -0.9206
2022-07-09 23:13:10.601644: validation loss: -0.7610
2022-07-09 23:13:10.639256: Average global foreground Dice: [0.8181]
2022-07-09 23:13:10.651870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:13:11.457257: Suus1 maybe_update_lr lr: 0.002115
2022-07-09 23:13:11.468550: This epoch took 78.447567 s

2022-07-09 23:13:11.496632: 
epoch:  411
2022-07-09 23:14:21.617754: train loss : -0.9149
2022-07-09 23:14:26.675074: validation loss: -0.7688
2022-07-09 23:14:26.706262: Average global foreground Dice: [0.8258]
2022-07-09 23:14:26.718893: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:14:27.380212: Suus1 maybe_update_lr lr: 0.002094
2022-07-09 23:14:27.390747: This epoch took 75.874104 s

2022-07-09 23:14:27.409184: 
epoch:  412
2022-07-09 23:15:38.449658: train loss : -0.9172
2022-07-09 23:15:43.783444: validation loss: -0.7691
2022-07-09 23:15:43.810609: Average global foreground Dice: [0.8263]
2022-07-09 23:15:43.828183: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:15:44.375688: Suus1 maybe_update_lr lr: 0.002072
2022-07-09 23:15:44.406923: This epoch took 76.976036 s

2022-07-09 23:15:44.426882: 
epoch:  413
2022-07-09 23:16:57.282914: train loss : -0.9153
2022-07-09 23:17:02.855480: validation loss: -0.7698
2022-07-09 23:17:02.894812: Average global foreground Dice: [0.8269]
2022-07-09 23:17:02.915966: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:17:03.605699: Suus1 maybe_update_lr lr: 0.002051
2022-07-09 23:17:03.624911: This epoch took 79.177634 s

2022-07-09 23:17:03.646873: 
epoch:  414
2022-07-09 23:18:16.026419: train loss : -0.9178
2022-07-09 23:18:21.271903: validation loss: -0.7564
2022-07-09 23:18:21.305411: Average global foreground Dice: [0.8189]
2022-07-09 23:18:21.348883: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:18:22.061448: Suus1 maybe_update_lr lr: 0.00203
2022-07-09 23:18:22.102908: This epoch took 78.434033 s

2022-07-09 23:18:22.126855: 
epoch:  415
2022-07-09 23:19:34.380884: train loss : -0.9168
2022-07-09 23:19:39.164403: validation loss: -0.7369
2022-07-09 23:19:39.172534: Average global foreground Dice: [0.8028]
2022-07-09 23:19:39.182767: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:19:39.772323: Suus1 maybe_update_lr lr: 0.002008
2022-07-09 23:19:39.794876: This epoch took 77.665075 s

2022-07-09 23:19:39.802324: 
epoch:  416
2022-07-09 23:20:52.968418: train loss : -0.9191
2022-07-09 23:20:58.480137: validation loss: -0.7647
2022-07-09 23:20:58.500857: Average global foreground Dice: [0.8227]
2022-07-09 23:20:58.514868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:20:59.199725: Suus1 maybe_update_lr lr: 0.001987
2022-07-09 23:20:59.212574: This epoch took 79.386705 s

2022-07-09 23:20:59.243869: 
epoch:  417
2022-07-09 23:22:10.373353: train loss : -0.9199
2022-07-09 23:22:17.061727: validation loss: -0.7584
2022-07-09 23:22:17.085341: Average global foreground Dice: [0.8168]
2022-07-09 23:22:17.109163: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:22:17.863848: Suus1 maybe_update_lr lr: 0.001965
2022-07-09 23:22:17.883900: This epoch took 78.635291 s

2022-07-09 23:22:17.907869: 
epoch:  418
2022-07-09 23:23:29.912860: train loss : -0.9180
2022-07-09 23:23:35.256158: validation loss: -0.7736
2022-07-09 23:23:35.271730: Average global foreground Dice: [0.8292]
2022-07-09 23:23:35.293890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:23:35.923221: Suus1 maybe_update_lr lr: 0.001943
2022-07-09 23:23:35.942914: This epoch took 78.013042 s

2022-07-09 23:23:35.959855: 
epoch:  419
2022-07-09 23:24:48.550969: train loss : -0.9190
2022-07-09 23:24:54.847826: validation loss: -0.7606
2022-07-09 23:24:54.856378: Average global foreground Dice: [0.8223]
2022-07-09 23:24:54.873205: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:24:55.585474: Suus1 maybe_update_lr lr: 0.001922
2022-07-09 23:24:55.590780: This epoch took 79.613834 s

2022-07-09 23:24:55.617135: 
epoch:  420
2022-07-09 23:26:07.749220: train loss : -0.9187
2022-07-09 23:26:13.241191: validation loss: -0.7420
2022-07-09 23:26:13.273112: Average global foreground Dice: [0.8071]
2022-07-09 23:26:13.292012: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:26:13.893847: Suus1 maybe_update_lr lr: 0.0019
2022-07-09 23:26:13.916144: This epoch took 78.276178 s

2022-07-09 23:26:13.951072: 
epoch:  421
2022-07-09 23:27:26.503500: train loss : -0.9176
2022-07-09 23:27:32.031188: validation loss: -0.7638
2022-07-09 23:27:32.061329: Average global foreground Dice: [0.8228]
2022-07-09 23:27:32.078916: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:27:32.755255: Suus1 maybe_update_lr lr: 0.001879
2022-07-09 23:27:32.782024: This epoch took 78.812145 s

2022-07-09 23:27:32.803914: 
epoch:  422
2022-07-09 23:28:45.062264: train loss : -0.9203
2022-07-09 23:28:50.042247: validation loss: -0.7656
2022-07-09 23:28:50.061272: Average global foreground Dice: [0.8248]
2022-07-09 23:28:50.079870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:28:50.751554: Suus1 maybe_update_lr lr: 0.001857
2022-07-09 23:28:50.773148: This epoch took 77.946295 s

2022-07-09 23:28:50.801108: 
epoch:  423
2022-07-09 23:30:01.515217: train loss : -0.9218
2022-07-09 23:30:06.985174: validation loss: -0.7489
2022-07-09 23:30:07.012067: Average global foreground Dice: [0.8086]
2022-07-09 23:30:07.032858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:30:07.501202: Suus1 maybe_update_lr lr: 0.001835
2022-07-09 23:30:07.524041: This epoch took 76.701178 s

2022-07-09 23:30:07.545856: 
epoch:  424
2022-07-09 23:31:19.889216: train loss : -0.9201
2022-07-09 23:31:24.734771: validation loss: -0.7612
2022-07-09 23:31:24.778389: Average global foreground Dice: [0.8252]
2022-07-09 23:31:24.799878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:31:25.397872: Suus1 maybe_update_lr lr: 0.001813
2022-07-09 23:31:25.428901: This epoch took 77.862435 s

2022-07-09 23:31:25.450012: 
epoch:  425
2022-07-09 23:32:37.049710: train loss : -0.9201
2022-07-09 23:32:41.998007: validation loss: -0.7707
2022-07-09 23:32:42.027627: Average global foreground Dice: [0.8303]
2022-07-09 23:32:42.047447: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:32:42.924404: Suus1 maybe_update_lr lr: 0.001792
2022-07-09 23:32:42.960132: This epoch took 77.465262 s

2022-07-09 23:32:42.982951: 
epoch:  426
2022-07-09 23:33:55.754261: train loss : -0.9194
2022-07-09 23:34:00.829470: validation loss: -0.7525
2022-07-09 23:34:00.835817: Average global foreground Dice: [0.817]
2022-07-09 23:34:00.862880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:34:01.538375: Suus1 maybe_update_lr lr: 0.00177
2022-07-09 23:34:01.557890: This epoch took 78.557768 s

2022-07-09 23:34:01.582923: 
epoch:  427
2022-07-09 23:35:14.112603: train loss : -0.9213
2022-07-09 23:35:20.138468: validation loss: -0.7840
2022-07-09 23:35:20.191234: Average global foreground Dice: [0.8411]
2022-07-09 23:35:20.210892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:35:20.818504: Suus1 maybe_update_lr lr: 0.001748
2022-07-09 23:35:20.860053: This epoch took 79.262182 s

2022-07-09 23:35:20.907292: 
epoch:  428
2022-07-09 23:36:32.557872: train loss : -0.9218
2022-07-09 23:36:38.499396: validation loss: -0.7446
2022-07-09 23:36:38.535265: Average global foreground Dice: [0.8083]
2022-07-09 23:36:38.561874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:36:39.192952: Suus1 maybe_update_lr lr: 0.001726
2022-07-09 23:36:39.223912: This epoch took 78.250024 s

2022-07-09 23:36:39.245863: 
epoch:  429
2022-07-09 23:37:51.828158: train loss : -0.9204
2022-07-09 23:37:57.774701: validation loss: -0.7590
2022-07-09 23:37:57.826486: Average global foreground Dice: [0.8217]
2022-07-09 23:37:57.840894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:37:58.521330: Suus1 maybe_update_lr lr: 0.001704
2022-07-09 23:37:58.539253: This epoch took 79.268222 s

2022-07-09 23:37:58.551868: 
epoch:  430
2022-07-09 23:39:10.180280: train loss : -0.9186
2022-07-09 23:39:15.613732: validation loss: -0.7607
2022-07-09 23:39:15.654232: Average global foreground Dice: [0.8245]
2022-07-09 23:39:15.686906: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:39:16.492304: Suus1 maybe_update_lr lr: 0.001682
2022-07-09 23:39:16.514489: This epoch took 77.945222 s

2022-07-09 23:39:16.521868: 
epoch:  431
2022-07-09 23:40:29.438957: train loss : -0.9196
2022-07-09 23:40:34.567940: validation loss: -0.7429
2022-07-09 23:40:34.595255: Average global foreground Dice: [0.8093]
2022-07-09 23:40:34.622180: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:40:35.258370: Suus1 maybe_update_lr lr: 0.00166
2022-07-09 23:40:35.282637: This epoch took 78.732639 s

2022-07-09 23:40:35.314840: 
epoch:  432
2022-07-09 23:41:47.873664: train loss : -0.9218
2022-07-09 23:41:52.804983: validation loss: -0.7545
2022-07-09 23:41:52.836268: Average global foreground Dice: [0.8169]
2022-07-09 23:41:52.856033: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:41:53.539228: Suus1 maybe_update_lr lr: 0.001638
2022-07-09 23:41:53.568911: This epoch took 78.220031 s

2022-07-09 23:41:53.586572: 
epoch:  433
2022-07-09 23:43:05.902518: train loss : -0.9234
2022-07-09 23:43:11.354210: validation loss: -0.7745
2022-07-09 23:43:11.357718: Average global foreground Dice: [0.8301]
2022-07-09 23:43:11.359763: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:43:11.853945: Suus1 maybe_update_lr lr: 0.001616
2022-07-09 23:43:11.857253: This epoch took 78.256593 s

2022-07-09 23:43:11.884175: 
epoch:  434
2022-07-09 23:44:24.422507: train loss : -0.9217
2022-07-09 23:44:29.238983: validation loss: -0.7675
2022-07-09 23:44:29.294057: Average global foreground Dice: [0.8286]
2022-07-09 23:44:29.322538: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:44:30.150398: Suus1 maybe_update_lr lr: 0.001594
2022-07-09 23:44:30.178940: This epoch took 78.276299 s

2022-07-09 23:44:30.200855: 
epoch:  435
2022-07-09 23:45:42.090113: train loss : -0.9248
2022-07-09 23:45:47.054243: validation loss: -0.7697
2022-07-09 23:45:47.074910: Average global foreground Dice: [0.8247]
2022-07-09 23:45:47.093868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:45:47.812450: Suus1 maybe_update_lr lr: 0.001572
2022-07-09 23:45:47.831901: This epoch took 77.598043 s

2022-07-09 23:45:47.857190: 
epoch:  436
2022-07-09 23:46:57.785747: train loss : -0.9266
2022-07-09 23:47:02.771365: validation loss: -0.7451
2022-07-09 23:47:02.802404: Average global foreground Dice: [0.8101]
2022-07-09 23:47:02.820016: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:47:03.367944: Suus1 maybe_update_lr lr: 0.00155
2022-07-09 23:47:03.386024: This epoch took 75.508751 s

2022-07-09 23:47:03.405986: 
epoch:  437
2022-07-09 23:48:14.308741: train loss : -0.9235
2022-07-09 23:48:19.635025: validation loss: -0.7644
2022-07-09 23:48:19.664146: Average global foreground Dice: [0.8263]
2022-07-09 23:48:19.697885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:48:20.346370: Suus1 maybe_update_lr lr: 0.001528
2022-07-09 23:48:20.367906: This epoch took 76.948924 s

2022-07-09 23:48:20.389855: 
epoch:  438
2022-07-09 23:49:31.598012: train loss : -0.9249
2022-07-09 23:49:36.765940: validation loss: -0.7579
2022-07-09 23:49:36.778448: Average global foreground Dice: [0.8162]
2022-07-09 23:49:36.780856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:49:37.332126: Suus1 maybe_update_lr lr: 0.001506
2022-07-09 23:49:37.360913: This epoch took 76.954623 s

2022-07-09 23:49:37.392194: 
epoch:  439
2022-07-09 23:50:50.535043: train loss : -0.9230
2022-07-09 23:50:55.653767: validation loss: -0.7536
2022-07-09 23:50:55.683213: Average global foreground Dice: [0.8177]
2022-07-09 23:50:55.706667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:50:56.375107: Suus1 maybe_update_lr lr: 0.001483
2022-07-09 23:50:56.394898: This epoch took 79.000205 s

2022-07-09 23:50:56.416848: 
epoch:  440
2022-07-09 23:52:07.845716: train loss : -0.9241
2022-07-09 23:52:12.707007: validation loss: -0.7649
2022-07-09 23:52:12.734547: Average global foreground Dice: [0.8237]
2022-07-09 23:52:12.754217: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:52:13.575669: Suus1 maybe_update_lr lr: 0.001461
2022-07-09 23:52:13.583521: This epoch took 77.144624 s

2022-07-09 23:52:13.608882: 
epoch:  441
2022-07-09 23:53:26.127685: train loss : -0.9222
2022-07-09 23:53:31.771001: validation loss: -0.7697
2022-07-09 23:53:31.807263: Average global foreground Dice: [0.825]
2022-07-09 23:53:31.836563: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:53:32.530423: Suus1 maybe_update_lr lr: 0.001439
2022-07-09 23:53:32.560937: This epoch took 78.930053 s

2022-07-09 23:53:32.588882: 
epoch:  442
2022-07-09 23:54:45.309466: train loss : -0.9226
2022-07-09 23:54:49.814371: validation loss: -0.7551
2022-07-09 23:54:49.859737: Average global foreground Dice: [0.8169]
2022-07-09 23:54:49.865040: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:54:50.480677: Suus1 maybe_update_lr lr: 0.001416
2022-07-09 23:54:50.499894: This epoch took 77.889021 s

2022-07-09 23:54:50.523856: 
epoch:  443
2022-07-09 23:56:04.015435: train loss : -0.9219
2022-07-09 23:56:09.542240: validation loss: -0.7669
2022-07-09 23:56:09.578264: Average global foreground Dice: [0.8273]
2022-07-09 23:56:09.590885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:56:10.507354: Suus1 maybe_update_lr lr: 0.001394
2022-07-09 23:56:10.537909: This epoch took 79.992036 s

2022-07-09 23:56:10.559858: 
epoch:  444
2022-07-09 23:57:23.247201: train loss : -0.9237
2022-07-09 23:57:28.248244: validation loss: -0.7595
2022-07-09 23:57:28.282961: Average global foreground Dice: [0.8188]
2022-07-09 23:57:28.304427: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:57:28.861613: Suus1 maybe_update_lr lr: 0.001372
2022-07-09 23:57:28.917896: This epoch took 78.324026 s

2022-07-09 23:57:28.938136: 
epoch:  445
2022-07-09 23:58:41.796470: train loss : -0.9249
2022-07-09 23:58:46.922854: validation loss: -0.7503
2022-07-09 23:58:46.941381: Average global foreground Dice: [0.8146]
2022-07-09 23:58:46.981107: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 23:58:47.688972: Suus1 maybe_update_lr lr: 0.001349
2022-07-09 23:58:47.705160: This epoch took 78.752286 s

2022-07-09 23:58:47.731429: 
epoch:  446
2022-07-09 23:59:59.200999: train loss : -0.9246
2022-07-10 00:00:04.647882: validation loss: -0.7722
2022-07-10 00:00:04.683254: Average global foreground Dice: [0.8302]
2022-07-10 00:00:04.699348: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:00:05.594931: Suus1 maybe_update_lr lr: 0.001327
2022-07-10 00:00:05.614887: This epoch took 77.847944 s

2022-07-10 00:00:05.636863: 
epoch:  447
2022-07-10 00:01:15.950043: train loss : -0.9238
2022-07-10 00:01:21.260285: validation loss: -0.7662
2022-07-10 00:01:21.268677: Average global foreground Dice: [0.8229]
2022-07-10 00:01:21.281889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:01:22.261938: Suus1 maybe_update_lr lr: 0.001304
2022-07-10 00:01:22.280900: This epoch took 76.613905 s

2022-07-10 00:01:22.302876: 
epoch:  448
2022-07-10 00:02:34.038801: train loss : -0.9238
2022-07-10 00:02:39.331130: validation loss: -0.7665
2022-07-10 00:02:39.357961: Average global foreground Dice: [0.8263]
2022-07-10 00:02:39.386885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:02:40.112994: Suus1 maybe_update_lr lr: 0.001282
2022-07-10 00:02:40.118307: This epoch took 77.798225 s

2022-07-10 00:02:40.136254: 
epoch:  449
2022-07-10 00:03:53.348181: train loss : -0.9222
2022-07-10 00:03:58.547864: validation loss: -0.7560
2022-07-10 00:03:58.554576: Average global foreground Dice: [0.8228]
2022-07-10 00:03:58.594200: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:03:59.263887: Suus1 maybe_update_lr lr: 0.001259
2022-07-10 00:03:59.283875: saving scheduled checkpoint file...
2022-07-10 00:03:59.377923: saving checkpoint...
2022-07-10 00:04:01.143033: done, saving took 1.84 seconds
2022-07-10 00:04:01.159533: done
2022-07-10 00:04:01.162059: This epoch took 80.983178 s

2022-07-10 00:04:01.164335: 
epoch:  450
2022-07-10 00:05:11.422240: train loss : -0.9264
2022-07-10 00:05:16.323033: validation loss: -0.7510
2022-07-10 00:05:16.358908: Average global foreground Dice: [0.8176]
2022-07-10 00:05:16.385003: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:05:17.033318: Suus1 maybe_update_lr lr: 0.001236
2022-07-10 00:05:17.051482: This epoch took 75.884971 s

2022-07-10 00:05:17.064452: 
epoch:  451
2022-07-10 00:06:29.713731: train loss : -0.9222
2022-07-10 00:06:34.656568: validation loss: -0.7619
2022-07-10 00:06:34.690676: Average global foreground Dice: [0.8264]
2022-07-10 00:06:34.711868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:06:35.448039: Suus1 maybe_update_lr lr: 0.001214
2022-07-10 00:06:35.467972: This epoch took 78.401321 s

2022-07-10 00:06:35.477498: 
epoch:  452
2022-07-10 00:07:46.523194: train loss : -0.9252
2022-07-10 00:07:51.190652: validation loss: -0.7721
2022-07-10 00:07:51.226770: Average global foreground Dice: [0.834]
2022-07-10 00:07:51.248892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:07:51.783069: Suus1 maybe_update_lr lr: 0.001191
2022-07-10 00:07:51.800940: saving best epoch checkpoint...
2022-07-10 00:07:51.910849: saving checkpoint...
2022-07-10 00:07:53.459767: done, saving took 1.64 seconds
2022-07-10 00:07:53.475565: This epoch took 77.995655 s

2022-07-10 00:07:53.477703: 
epoch:  453
2022-07-10 00:09:04.711173: train loss : -0.9249
2022-07-10 00:09:09.587343: validation loss: -0.7517
2022-07-10 00:09:09.624671: Average global foreground Dice: [0.8151]
2022-07-10 00:09:09.636931: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:09:10.373293: Suus1 maybe_update_lr lr: 0.001168
2022-07-10 00:09:10.424941: This epoch took 76.945052 s

2022-07-10 00:09:10.440672: 
epoch:  454
2022-07-10 00:10:23.066499: train loss : -0.9254
2022-07-10 00:10:28.589307: validation loss: -0.7608
2022-07-10 00:10:28.592681: Average global foreground Dice: [0.8232]
2022-07-10 00:10:28.594995: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:10:29.242715: Suus1 maybe_update_lr lr: 0.001145
2022-07-10 00:10:29.260110: This epoch took 78.817073 s

2022-07-10 00:10:29.279945: 
epoch:  455
2022-07-10 00:11:41.975544: train loss : -0.9245
2022-07-10 00:11:46.971948: validation loss: -0.7594
2022-07-10 00:11:47.007205: Average global foreground Dice: [0.8212]
2022-07-10 00:11:47.033952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:11:47.691925: Suus1 maybe_update_lr lr: 0.001122
2022-07-10 00:11:47.721256: This epoch took 78.411378 s

2022-07-10 00:11:47.741353: 
epoch:  456
2022-07-10 00:13:00.039141: train loss : -0.9255
2022-07-10 00:13:05.007188: validation loss: -0.7597
2022-07-10 00:13:05.039297: Average global foreground Dice: [0.8226]
2022-07-10 00:13:05.046929: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:13:05.774406: Suus1 maybe_update_lr lr: 0.001099
2022-07-10 00:13:05.777051: This epoch took 77.973187 s

2022-07-10 00:13:05.789666: 
epoch:  457
2022-07-10 00:14:16.636535: train loss : -0.9254
2022-07-10 00:14:21.545400: validation loss: -0.7508
2022-07-10 00:14:21.592335: Average global foreground Dice: [0.8135]
2022-07-10 00:14:21.613873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:14:22.351067: Suus1 maybe_update_lr lr: 0.001076
2022-07-10 00:14:22.376422: This epoch took 76.583886 s

2022-07-10 00:14:22.384856: 
epoch:  458
2022-07-10 00:15:34.007137: train loss : -0.9255
2022-07-10 00:15:39.100415: validation loss: -0.7570
2022-07-10 00:15:39.135326: Average global foreground Dice: [0.8171]
2022-07-10 00:15:39.167876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:15:40.022419: Suus1 maybe_update_lr lr: 0.001053
2022-07-10 00:15:40.041923: This epoch took 77.638858 s

2022-07-10 00:15:40.063902: 
epoch:  459
2022-07-10 00:16:52.578944: train loss : -0.9277
2022-07-10 00:16:57.509804: validation loss: -0.7667
2022-07-10 00:16:57.525465: Average global foreground Dice: [0.8263]
2022-07-10 00:16:57.541021: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:16:58.258886: Suus1 maybe_update_lr lr: 0.00103
2022-07-10 00:16:58.269345: This epoch took 78.184640 s

2022-07-10 00:16:58.310667: 
epoch:  460
2022-07-10 00:18:11.324440: train loss : -0.9274
2022-07-10 00:18:16.289169: validation loss: -0.7574
2022-07-10 00:18:16.326594: Average global foreground Dice: [0.8205]
2022-07-10 00:18:16.349006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:18:17.036158: Suus1 maybe_update_lr lr: 0.001007
2022-07-10 00:18:17.060898: This epoch took 78.737031 s

2022-07-10 00:18:17.071948: 
epoch:  461
2022-07-10 00:19:29.788439: train loss : -0.9271
2022-07-10 00:19:34.744868: validation loss: -0.7341
2022-07-10 00:19:34.778282: Average global foreground Dice: [0.8027]
2022-07-10 00:19:34.797918: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:19:35.454655: Suus1 maybe_update_lr lr: 0.000983
2022-07-10 00:19:35.476275: This epoch took 78.364162 s

2022-07-10 00:19:35.497553: 
epoch:  462
2022-07-10 00:20:46.450203: train loss : -0.9265
2022-07-10 00:20:51.470163: validation loss: -0.7696
2022-07-10 00:20:51.517316: Average global foreground Dice: [0.8295]
2022-07-10 00:20:51.533168: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:20:52.260546: Suus1 maybe_update_lr lr: 0.00096
2022-07-10 00:20:52.279902: This epoch took 76.732711 s

2022-07-10 00:20:52.312162: 
epoch:  463
2022-07-10 00:22:05.087467: train loss : -0.9264
2022-07-10 00:22:09.708445: validation loss: -0.7658
2022-07-10 00:22:09.741470: Average global foreground Dice: [0.8238]
2022-07-10 00:22:09.764126: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:22:10.590192: Suus1 maybe_update_lr lr: 0.000937
2022-07-10 00:22:10.633922: This epoch took 78.291778 s

2022-07-10 00:22:10.677850: 
epoch:  464
2022-07-10 00:23:22.334697: train loss : -0.9260
2022-07-10 00:23:27.097114: validation loss: -0.7746
2022-07-10 00:23:27.107064: Average global foreground Dice: [0.8304]
2022-07-10 00:23:27.123164: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:23:27.900202: Suus1 maybe_update_lr lr: 0.000913
2022-07-10 00:23:27.908077: This epoch took 77.197217 s

2022-07-10 00:23:27.920935: 
epoch:  465
2022-07-10 00:24:40.057828: train loss : -0.9279
2022-07-10 00:24:45.107883: validation loss: -0.7413
2022-07-10 00:24:45.139313: Average global foreground Dice: [0.8087]
2022-07-10 00:24:45.169862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:24:45.832600: Suus1 maybe_update_lr lr: 0.00089
2022-07-10 00:24:45.859915: This epoch took 77.936493 s

2022-07-10 00:24:45.885855: 
epoch:  466
2022-07-10 00:25:57.561780: train loss : -0.9276
2022-07-10 00:26:03.334305: validation loss: -0.7602
2022-07-10 00:26:03.365641: Average global foreground Dice: [0.8264]
2022-07-10 00:26:03.379860: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:26:03.915968: Suus1 maybe_update_lr lr: 0.000866
2022-07-10 00:26:03.918568: This epoch took 78.013893 s

2022-07-10 00:26:03.938971: 
epoch:  467
2022-07-10 00:27:17.544334: train loss : -0.9250
2022-07-10 00:27:23.292103: validation loss: -0.7549
2022-07-10 00:27:23.317358: Average global foreground Dice: [0.8196]
2022-07-10 00:27:23.337026: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:27:24.006197: Suus1 maybe_update_lr lr: 0.000842
2022-07-10 00:27:24.027912: This epoch took 80.068714 s

2022-07-10 00:27:24.049855: 
epoch:  468
2022-07-10 00:28:35.627774: train loss : -0.9290
2022-07-10 00:28:40.835032: validation loss: -0.7576
2022-07-10 00:28:40.848865: Average global foreground Dice: [0.8183]
2022-07-10 00:28:40.877896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:28:41.601297: Suus1 maybe_update_lr lr: 0.000819
2022-07-10 00:28:41.621116: This epoch took 77.554907 s

2022-07-10 00:28:41.639841: 
epoch:  469
2022-07-10 00:29:53.490820: train loss : -0.9279
2022-07-10 00:29:58.745078: validation loss: -0.7592
2022-07-10 00:29:58.766468: Average global foreground Dice: [0.8219]
2022-07-10 00:29:58.788875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:29:59.568086: Suus1 maybe_update_lr lr: 0.000795
2022-07-10 00:29:59.604024: This epoch took 77.939165 s

2022-07-10 00:29:59.642364: 
epoch:  470
2022-07-10 00:31:11.377511: train loss : -0.9281
2022-07-10 00:31:16.412261: validation loss: -0.7684
2022-07-10 00:31:16.437500: Average global foreground Dice: [0.8307]
2022-07-10 00:31:16.456892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:31:17.024988: Suus1 maybe_update_lr lr: 0.000771
2022-07-10 00:31:17.041820: This epoch took 77.366963 s

2022-07-10 00:31:17.044118: 
epoch:  471
2022-07-10 00:32:27.942276: train loss : -0.9265
2022-07-10 00:32:32.970117: validation loss: -0.7524
2022-07-10 00:32:32.991131: Average global foreground Dice: [0.8168]
2022-07-10 00:32:33.015889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:32:33.780421: Suus1 maybe_update_lr lr: 0.000747
2022-07-10 00:32:33.785789: This epoch took 76.730199 s

2022-07-10 00:32:33.805612: 
epoch:  472
2022-07-10 00:33:44.891924: train loss : -0.9283
2022-07-10 00:33:50.404842: validation loss: -0.7677
2022-07-10 00:33:50.441663: Average global foreground Dice: [0.8296]
2022-07-10 00:33:50.462862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:33:51.178350: Suus1 maybe_update_lr lr: 0.000723
2022-07-10 00:33:51.205942: This epoch took 77.365074 s

2022-07-10 00:33:51.233844: 
epoch:  473
2022-07-10 00:35:03.743245: train loss : -0.9265
2022-07-10 00:35:08.603749: validation loss: -0.7713
2022-07-10 00:35:08.606827: Average global foreground Dice: [0.8309]
2022-07-10 00:35:08.609939: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:35:09.301265: Suus1 maybe_update_lr lr: 0.000699
2022-07-10 00:35:09.317990: This epoch took 78.029078 s

2022-07-10 00:35:09.333386: 
epoch:  474
2022-07-10 00:36:20.674711: train loss : -0.9282
2022-07-10 00:36:25.991215: validation loss: -0.7538
2022-07-10 00:36:26.018472: Average global foreground Dice: [0.8224]
2022-07-10 00:36:26.046166: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:36:26.789873: Suus1 maybe_update_lr lr: 0.000675
2022-07-10 00:36:26.824775: This epoch took 77.476320 s

2022-07-10 00:36:26.845109: 
epoch:  475
2022-07-10 00:37:38.114822: train loss : -0.9276
2022-07-10 00:37:43.163050: validation loss: -0.7558
2022-07-10 00:37:43.179491: Average global foreground Dice: [0.8206]
2022-07-10 00:37:43.192491: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:37:43.902209: Suus1 maybe_update_lr lr: 0.00065
2022-07-10 00:37:43.921911: This epoch took 77.068058 s

2022-07-10 00:37:43.943874: 
epoch:  476
2022-07-10 00:38:56.147707: train loss : -0.9293
2022-07-10 00:39:00.744309: validation loss: -0.7557
2022-07-10 00:39:00.784210: Average global foreground Dice: [0.8221]
2022-07-10 00:39:00.796875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:39:01.308890: Suus1 maybe_update_lr lr: 0.000626
2022-07-10 00:39:01.333910: This epoch took 77.368026 s

2022-07-10 00:39:01.345351: 
epoch:  477
2022-07-10 00:40:13.291850: train loss : -0.9291
2022-07-10 00:40:18.132206: validation loss: -0.7445
2022-07-10 00:40:18.158288: Average global foreground Dice: [0.8128]
2022-07-10 00:40:18.189863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:40:19.062668: Suus1 maybe_update_lr lr: 0.000601
2022-07-10 00:40:19.070458: This epoch took 77.710588 s

2022-07-10 00:40:19.095288: 
epoch:  478
2022-07-10 00:41:31.069177: train loss : -0.9306
2022-07-10 00:41:36.524282: validation loss: -0.7653
2022-07-10 00:41:36.545091: Average global foreground Dice: [0.8248]
2022-07-10 00:41:36.561884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:41:37.104049: Suus1 maybe_update_lr lr: 0.000577
2022-07-10 00:41:37.134909: This epoch took 78.019113 s

2022-07-10 00:41:37.158881: 
epoch:  479
2022-07-10 00:42:48.674687: train loss : -0.9290
2022-07-10 00:42:53.906076: validation loss: -0.7804
2022-07-10 00:42:53.939754: Average global foreground Dice: [0.8406]
2022-07-10 00:42:53.960886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:42:54.658270: Suus1 maybe_update_lr lr: 0.000552
2022-07-10 00:42:54.661425: saving best epoch checkpoint...
2022-07-10 00:42:54.723317: saving checkpoint...
2022-07-10 00:42:56.523662: done, saving took 1.85 seconds
2022-07-10 00:42:56.538325: This epoch took 79.359138 s

2022-07-10 00:42:56.540626: 
epoch:  480
2022-07-10 00:44:07.396413: train loss : -0.9281
2022-07-10 00:44:12.472255: validation loss: -0.7499
2022-07-10 00:44:12.495363: Average global foreground Dice: [0.8166]
2022-07-10 00:44:12.515855: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:44:13.504966: Suus1 maybe_update_lr lr: 0.000527
2022-07-10 00:44:13.554952: This epoch took 77.012213 s

2022-07-10 00:44:13.581467: 
epoch:  481
2022-07-10 00:45:26.061468: train loss : -0.9275
2022-07-10 00:45:30.747181: validation loss: -0.7636
2022-07-10 00:45:30.785780: Average global foreground Dice: [0.8227]
2022-07-10 00:45:30.791830: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:45:31.444137: Suus1 maybe_update_lr lr: 0.000502
2022-07-10 00:45:31.460913: This epoch took 77.858334 s

2022-07-10 00:45:31.485868: 
epoch:  482
2022-07-10 00:46:43.292070: train loss : -0.9304
2022-07-10 00:46:48.728854: validation loss: -0.7744
2022-07-10 00:46:48.758276: Average global foreground Dice: [0.8351]
2022-07-10 00:46:48.779880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:46:49.444170: Suus1 maybe_update_lr lr: 0.000477
2022-07-10 00:46:49.474884: saving best epoch checkpoint...
2022-07-10 00:46:49.601034: saving checkpoint...
2022-07-10 00:46:51.305997: done, saving took 1.80 seconds
2022-07-10 00:46:51.320804: This epoch took 79.812926 s

2022-07-10 00:46:51.323286: 
epoch:  483
2022-07-10 00:48:01.882481: train loss : -0.9303
2022-07-10 00:48:06.789068: validation loss: -0.7643
2022-07-10 00:48:06.819475: Average global foreground Dice: [0.8304]
2022-07-10 00:48:06.826488: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:48:07.489466: Suus1 maybe_update_lr lr: 0.000451
2022-07-10 00:48:07.511911: saving best epoch checkpoint...
2022-07-10 00:48:07.598975: saving checkpoint...
2022-07-10 00:48:09.395391: done, saving took 1.86 seconds
2022-07-10 00:48:09.411327: This epoch took 78.085895 s

2022-07-10 00:48:09.413527: 
epoch:  484
2022-07-10 00:49:20.784561: train loss : -0.9294
2022-07-10 00:49:26.171211: validation loss: -0.7643
2022-07-10 00:49:26.208229: Average global foreground Dice: [0.8247]
2022-07-10 00:49:26.240891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:49:27.108283: Suus1 maybe_update_lr lr: 0.000426
2022-07-10 00:49:27.140884: This epoch took 77.725231 s

2022-07-10 00:49:27.158204: 
epoch:  485
2022-07-10 00:50:36.831446: train loss : -0.9301
2022-07-10 00:50:41.838009: validation loss: -0.7553
2022-07-10 00:50:41.865030: Average global foreground Dice: [0.8176]
2022-07-10 00:50:41.881407: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:50:42.818129: Suus1 maybe_update_lr lr: 0.0004
2022-07-10 00:50:42.837887: This epoch took 75.659908 s

2022-07-10 00:50:42.855983: 
epoch:  486
2022-07-10 00:51:54.096021: train loss : -0.9304
2022-07-10 00:51:59.071366: validation loss: -0.7547
2022-07-10 00:51:59.092789: Average global foreground Dice: [0.8167]
2022-07-10 00:51:59.132156: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:51:59.870097: Suus1 maybe_update_lr lr: 0.000375
2022-07-10 00:51:59.883983: This epoch took 77.007430 s

2022-07-10 00:51:59.893842: 
epoch:  487
2022-07-10 00:53:11.370161: train loss : -0.9323
2022-07-10 00:53:16.250073: validation loss: -0.7554
2022-07-10 00:53:16.289313: Average global foreground Dice: [0.8212]
2022-07-10 00:53:16.297910: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:53:16.885524: Suus1 maybe_update_lr lr: 0.000348
2022-07-10 00:53:16.904892: This epoch took 76.986891 s

2022-07-10 00:53:16.916765: 
epoch:  488
2022-07-10 00:54:29.489121: train loss : -0.9303
2022-07-10 00:54:34.739089: validation loss: -0.7639
2022-07-10 00:54:34.767238: Average global foreground Dice: [0.8229]
2022-07-10 00:54:34.778561: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:54:35.505895: Suus1 maybe_update_lr lr: 0.000322
2022-07-10 00:54:35.524910: This epoch took 78.605756 s

2022-07-10 00:54:35.548861: 
epoch:  489
2022-07-10 00:55:47.596836: train loss : -0.9307
2022-07-10 00:55:52.746895: validation loss: -0.7484
2022-07-10 00:55:52.775666: Average global foreground Dice: [0.82]
2022-07-10 00:55:52.808867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:55:53.382769: Suus1 maybe_update_lr lr: 0.000296
2022-07-10 00:55:53.423189: This epoch took 77.863613 s

2022-07-10 00:55:53.443434: 
epoch:  490
2022-07-10 00:57:06.827342: train loss : -0.9296
2022-07-10 00:57:11.534878: validation loss: -0.7526
2022-07-10 00:57:11.552330: Average global foreground Dice: [0.8142]
2022-07-10 00:57:11.570878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:57:12.294305: Suus1 maybe_update_lr lr: 0.000269
2022-07-10 00:57:12.311648: This epoch took 78.843126 s

2022-07-10 00:57:12.352851: 
epoch:  491
2022-07-10 00:58:24.541049: train loss : -0.9331
2022-07-10 00:58:29.673618: validation loss: -0.7362
2022-07-10 00:58:29.684220: Average global foreground Dice: [0.8041]
2022-07-10 00:58:29.705582: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:58:30.378900: Suus1 maybe_update_lr lr: 0.000242
2022-07-10 00:58:30.398914: This epoch took 78.017028 s

2022-07-10 00:58:30.413998: 
epoch:  492
2022-07-10 00:59:42.194944: train loss : -0.9296
2022-07-10 00:59:47.424490: validation loss: -0.7571
2022-07-10 00:59:47.444943: Average global foreground Dice: [0.821]
2022-07-10 00:59:47.453829: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 00:59:48.032397: Suus1 maybe_update_lr lr: 0.000215
2022-07-10 00:59:48.035191: This epoch took 77.613380 s

2022-07-10 00:59:48.039198: 
epoch:  493
2022-07-10 01:00:59.801254: train loss : -0.9310
2022-07-10 01:01:04.776719: validation loss: -0.7410
2022-07-10 01:01:04.810297: Average global foreground Dice: [0.8105]
2022-07-10 01:01:04.831859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 01:01:05.475940: Suus1 maybe_update_lr lr: 0.000187
2022-07-10 01:01:05.495910: This epoch took 77.443636 s

2022-07-10 01:01:05.517871: 
epoch:  494
2022-07-10 01:02:16.947075: train loss : -0.9313
2022-07-10 01:02:21.735811: validation loss: -0.7617
2022-07-10 01:02:21.773507: Average global foreground Dice: [0.8245]
2022-07-10 01:02:21.798034: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 01:02:22.575277: Suus1 maybe_update_lr lr: 0.000158
2022-07-10 01:02:22.601899: This epoch took 77.056906 s

2022-07-10 01:02:22.620862: 
epoch:  495
2022-07-10 01:03:34.155087: train loss : -0.9309
2022-07-10 01:03:39.335835: validation loss: -0.7559
2022-07-10 01:03:39.368662: Average global foreground Dice: [0.8169]
2022-07-10 01:03:39.388334: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 01:03:39.994845: Suus1 maybe_update_lr lr: 0.00013
2022-07-10 01:03:40.015470: This epoch took 77.369607 s

2022-07-10 01:03:40.040839: 
epoch:  496
2022-07-10 01:04:53.350690: train loss : -0.9294
2022-07-10 01:04:58.146704: validation loss: -0.7577
2022-07-10 01:04:58.180575: Average global foreground Dice: [0.8214]
2022-07-10 01:04:58.200337: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 01:04:58.886291: Suus1 maybe_update_lr lr: 0.0001
2022-07-10 01:04:58.917031: This epoch took 78.845069 s

2022-07-10 01:04:58.938854: 
epoch:  497
2022-07-10 01:06:11.355034: train loss : -0.9320
2022-07-10 01:06:16.763360: validation loss: -0.7582
2022-07-10 01:06:16.802416: Average global foreground Dice: [0.8196]
2022-07-10 01:06:16.827469: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 01:06:17.592078: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-10 01:06:17.609961: This epoch took 78.648244 s

2022-07-10 01:06:17.627869: 
epoch:  498
2022-07-10 01:07:30.429051: train loss : -0.9328
2022-07-10 01:07:36.121319: validation loss: -0.7658
2022-07-10 01:07:36.153088: Average global foreground Dice: [0.8262]
2022-07-10 01:07:36.163068: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 01:07:36.742969: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-10 01:07:36.773902: This epoch took 79.108040 s

2022-07-10 01:07:36.793932: 
epoch:  499
2022-07-10 01:08:48.794655: train loss : -0.9304
2022-07-10 01:08:54.878161: validation loss: -0.7640
2022-07-10 01:08:54.909221: Average global foreground Dice: [0.8256]
2022-07-10 01:08:54.921870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-10 01:08:55.718070: Suus1 maybe_update_lr lr: 0.0
2022-07-10 01:08:55.747901: saving scheduled checkpoint file...
2022-07-10 01:08:55.811052: saving checkpoint...
2022-07-10 01:08:57.370001: done, saving took 1.61 seconds
2022-07-10 01:08:57.384973: done
2022-07-10 01:08:57.387080: This epoch took 80.579942 s

2022-07-10 01:08:57.432390: saving checkpoint...
2022-07-10 01:08:58.795317: done, saving took 1.41 seconds
panc_004 (2, 61, 191, 303)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 47]]
number of tiles: 8
computing Gaussian
done
prediction done
suus panc_004 transposed
suus panc_004 not saving softmax
suus panc_004 voeg toe aan pred_gt tuples voor later
panc_019 (2, 58, 177, 276)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 177, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 17], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_019 transposed
suus panc_019 not saving softmax
suus panc_019 voeg toe aan pred_gt tuples voor later
panc_028 (2, 68, 174, 291)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 174, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 14], [0, 35]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_028 transposed
suus panc_028 not saving softmax
suus panc_028 voeg toe aan pred_gt tuples voor later
panc_051 (2, 63, 184, 309)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 184, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 24], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_051 transposed
suus panc_051 not saving softmax
suus panc_051 voeg toe aan pred_gt tuples voor later
panc_066 (2, 90, 182, 324)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 182, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 22], [0, 68]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_066 transposed
suus panc_066 not saving softmax
suus panc_066 voeg toe aan pred_gt tuples voor later
panc_069 (2, 92, 158, 319)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 160, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0], [0, 63]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_069 transposed
suus panc_069 not saving softmax
suus panc_069 voeg toe aan pred_gt tuples voor later
panc_077 (2, 59, 204, 290)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_077 transposed
suus panc_077 not saving softmax
suus panc_077 voeg toe aan pred_gt tuples voor later
panc_080 (2, 55, 174, 308)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 174, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 14], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_080 transposed
suus panc_080 not saving softmax
suus panc_080 voeg toe aan pred_gt tuples voor later
panc_093 (2, 64, 197, 335)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 197, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 37], [0, 79]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_093 transposed
suus panc_093 not saving softmax
suus panc_093 voeg toe aan pred_gt tuples voor later
panc_122 (2, 59, 172, 244)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 172, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 12], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_122 transposed
suus panc_122 not saving softmax
suus panc_122 voeg toe aan pred_gt tuples voor later
panc_129 (2, 76, 165, 264)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 165, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 5], [0, 8]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_129 transposed
suus panc_129 not saving softmax
suus panc_129 voeg toe aan pred_gt tuples voor later
panc_159 (2, 63, 137, 258)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_159 transposed
suus panc_159 not saving softmax
suus panc_159 voeg toe aan pred_gt tuples voor later
panc_165 (2, 60, 201, 290)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 201, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 41], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_165 transposed
suus panc_165 not saving softmax
suus panc_165 voeg toe aan pred_gt tuples voor later
panc_170 (2, 62, 148, 274)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_170 transposed
suus panc_170 not saving softmax
suus panc_170 voeg toe aan pred_gt tuples voor later
panc_180 (2, 56, 165, 266)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 165, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 5], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_180 transposed
suus panc_180 not saving softmax
suus panc_180 voeg toe aan pred_gt tuples voor later
panc_186 (2, 92, 212, 262)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 212, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 52], [0, 6]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_186 transposed
suus panc_186 not saving softmax
suus panc_186 voeg toe aan pred_gt tuples voor later
panc_197 (2, 48, 172, 286)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 172, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 12], [0, 30]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_197 transposed
suus panc_197 not saving softmax
suus panc_197 voeg toe aan pred_gt tuples voor later
panc_201 (2, 60, 149, 218)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_201 transposed
suus panc_201 not saving softmax
suus panc_201 voeg toe aan pred_gt tuples voor later
panc_209 (2, 69, 215, 293)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 69, 215, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21], [0, 55], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_209 transposed
suus panc_209 not saving softmax
suus panc_209 voeg toe aan pred_gt tuples voor later
panc_226 (2, 59, 181, 279)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 181, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 21], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_226 transposed
suus panc_226 not saving softmax
suus panc_226 voeg toe aan pred_gt tuples voor later
panc_228 (2, 64, 171, 269)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_228 transposed
suus panc_228 not saving softmax
suus panc_228 voeg toe aan pred_gt tuples voor later
panc_234 (2, 56, 204, 278)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 204, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 44], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_234 transposed
suus panc_234 not saving softmax
suus panc_234 voeg toe aan pred_gt tuples voor later
panc_235 (2, 62, 181, 267)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_235 transposed
suus panc_235 not saving softmax
suus panc_235 voeg toe aan pred_gt tuples voor later
panc_243 (2, 84, 195, 289)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 195, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 35], [0, 33]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_243 transposed
suus panc_243 not saving softmax
suus panc_243 voeg toe aan pred_gt tuples voor later
panc_246 (2, 60, 193, 336)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_246 transposed
suus panc_246 not saving softmax
suus panc_246 voeg toe aan pred_gt tuples voor later
panc_253 (2, 52, 191, 280)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 191, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 31], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_253 transposed
suus panc_253 not saving softmax
suus panc_253 voeg toe aan pred_gt tuples voor later
panc_255 (2, 56, 191, 282)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 191, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 31], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_255 transposed
suus panc_255 not saving softmax
suus panc_255 voeg toe aan pred_gt tuples voor later
panc_261 (2, 33, 126, 250)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
suus panc_261 transposed
suus panc_261 not saving softmax
suus panc_261 voeg toe aan pred_gt tuples voor later
panc_268 (2, 51, 146, 212)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_268 transposed
suus panc_268 not saving softmax
suus panc_268 voeg toe aan pred_gt tuples voor later
panc_275 (2, 58, 158, 264)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_275 transposed
suus panc_275 not saving softmax
suus panc_275 voeg toe aan pred_gt tuples voor later
panc_276 (2, 70, 178, 293)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_276 transposed
suus panc_276 not saving softmax
suus panc_276 voeg toe aan pred_gt tuples voor later
panc_304 (2, 61, 158, 239)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
suus panc_304 transposed
suus panc_304 not saving softmax
suus panc_304 voeg toe aan pred_gt tuples voor later
panc_308 (2, 62, 204, 321)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 204, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 44], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_308 transposed
suus panc_308 not saving softmax
suus panc_308 voeg toe aan pred_gt tuples voor later
panc_311 (2, 52, 156, 285)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 29]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_311 transposed
suus panc_311 not saving softmax
suus panc_311 voeg toe aan pred_gt tuples voor later
panc_333 (2, 58, 189, 308)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 189, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 29], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_333 transposed
suus panc_333 not saving softmax
suus panc_333 voeg toe aan pred_gt tuples voor later
panc_336 (2, 55, 179, 297)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 179, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 19], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_336 transposed
suus panc_336 not saving softmax
suus panc_336 voeg toe aan pred_gt tuples voor later
panc_345 (2, 56, 194, 305)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 194, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 34], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_345 transposed
suus panc_345 not saving softmax
suus panc_345 voeg toe aan pred_gt tuples voor later
panc_365 (2, 90, 178, 332)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 178, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 18], [0, 76]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_365 transposed
suus panc_365 not saving softmax
suus panc_365 voeg toe aan pred_gt tuples voor later
panc_375 (2, 65, 200, 350)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 200, 350)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 40], [0, 94]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_375 transposed
suus panc_375 not saving softmax
suus panc_375 voeg toe aan pred_gt tuples voor later
panc_377 (2, 84, 158, 275)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0], [0, 19]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_377 transposed
suus panc_377 not saving softmax
suus panc_377 voeg toe aan pred_gt tuples voor later
panc_398 (2, 59, 155, 266)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0, 10]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_398 transposed
suus panc_398 not saving softmax
suus panc_398 voeg toe aan pred_gt tuples voor later
panc_400 (2, 71, 223, 304)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 223, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0, 63], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_400 transposed
suus panc_400 not saving softmax
suus panc_400 voeg toe aan pred_gt tuples voor later
panc_402 (2, 70, 146, 278)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_402 transposed
suus panc_402 not saving softmax
suus panc_402 voeg toe aan pred_gt tuples voor later
panc_404 (2, 60, 181, 347)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 181, 347)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 21], [0, 91]]
number of tiles: 8
using precomputed Gaussian
prediction done
suus panc_404 transposed
suus panc_404 not saving softmax
suus panc_404 voeg toe aan pred_gt tuples voor later
panc_406 (2, 47, 166, 351)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 95]]
number of tiles: 4
using precomputed Gaussian
prediction done
suus panc_406 transposed
suus panc_406 not saving softmax
suus panc_406 voeg toe aan pred_gt tuples voor later
panc_418 (2, 74, 155, 286)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 160, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0], [0, 30]]
number of tiles: 6
using precomputed Gaussian
prediction done
suus panc_418 transposed
suus panc_418 not saving softmax
suus panc_418 voeg toe aan pred_gt tuples voor later
panc_419 (2, 84, 169, 313)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 169, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 9], [0, 57]]
number of tiles: 12
using precomputed Gaussian
prediction done
suus panc_419 transposed
suus panc_419 not saving softmax
suus panc_419 voeg toe aan pred_gt tuples voor later
2022-07-10 01:10:53.096376: finished prediction
2022-07-10 01:10:53.099558: evaluation of raw predictions
2022-07-10 01:11:02.659339: determining postprocessing
Foreground vs background
before: 0.8184408423354385
after:  0.8184889316381572
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_080.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_186.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_243.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_304.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_377.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_004.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_093.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_197.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_246.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_308.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_398.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_019.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_122.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_201.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_253.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_311.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_400.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_028.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_129.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_209.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_255.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_333.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_402.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_051.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_159.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_226.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_261.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_336.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_404.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_066.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_165.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_228.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_268.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_345.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_406.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_069.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_170.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_234.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_275.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_365.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_418.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_077.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_180.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_235.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_276.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_375.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_419.nii.gz
done
Done training all the folds! Now start the same command but with continue option, to generate log files


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='0', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-10 01:11:27.665549: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-10 01:11:28.503072: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-10 01:11:28.507724: The split file contains 5 splits.
2022-07-10 01:11:28.509993: Desired fold for training: 0
2022-07-10 01:11:28.512045: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-10 01:11:30.679984: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-10 01:11:30.977950: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-10 01:11:42.773832: Unable to plot network architecture:
2022-07-10 01:11:42.786924: local variable 'g' referenced before assignment
2022-07-10 01:11:42.789182: 
printing the network instead:

2022-07-10 01:11:42.791351: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-10 01:11:42.805909: 

2022-07-10 01:11:43.132210: saving checkpoint...
2022-07-10 01:11:45.437902: done, saving took 2.63 seconds
suus panc_024 voeg toe aan pred_gt tuples voor later
suus panc_040 voeg toe aan pred_gt tuples voor later
suus panc_048 voeg toe aan pred_gt tuples voor later
suus panc_058 voeg toe aan pred_gt tuples voor later
suus panc_067 voeg toe aan pred_gt tuples voor later
suus panc_075 voeg toe aan pred_gt tuples voor later
suus panc_086 voeg toe aan pred_gt tuples voor later
suus panc_101 voeg toe aan pred_gt tuples voor later
suus panc_105 voeg toe aan pred_gt tuples voor later
suus panc_107 voeg toe aan pred_gt tuples voor later
suus panc_113 voeg toe aan pred_gt tuples voor later
suus panc_119 voeg toe aan pred_gt tuples voor later
suus panc_131 voeg toe aan pred_gt tuples voor later
suus panc_137 voeg toe aan pred_gt tuples voor later
suus panc_148 voeg toe aan pred_gt tuples voor later
suus panc_157 voeg toe aan pred_gt tuples voor later
suus panc_182 voeg toe aan pred_gt tuples voor later
suus panc_191 voeg toe aan pred_gt tuples voor later
suus panc_193 voeg toe aan pred_gt tuples voor later
suus panc_194 voeg toe aan pred_gt tuples voor later
suus panc_204 voeg toe aan pred_gt tuples voor later
suus panc_207 voeg toe aan pred_gt tuples voor later
suus panc_211 voeg toe aan pred_gt tuples voor later
suus panc_215 voeg toe aan pred_gt tuples voor later
suus panc_219 voeg toe aan pred_gt tuples voor later
suus panc_224 voeg toe aan pred_gt tuples voor later
suus panc_236 voeg toe aan pred_gt tuples voor later
suus panc_241 voeg toe aan pred_gt tuples voor later
suus panc_256 voeg toe aan pred_gt tuples voor later
suus panc_285 voeg toe aan pred_gt tuples voor later
suus panc_286 voeg toe aan pred_gt tuples voor later
suus panc_294 voeg toe aan pred_gt tuples voor later
suus panc_296 voeg toe aan pred_gt tuples voor later
suus panc_302 voeg toe aan pred_gt tuples voor later
suus panc_305 voeg toe aan pred_gt tuples voor later
suus panc_321 voeg toe aan pred_gt tuples voor later
suus panc_325 voeg toe aan pred_gt tuples voor later
suus panc_364 voeg toe aan pred_gt tuples voor later
suus panc_367 voeg toe aan pred_gt tuples voor later
suus panc_369 voeg toe aan pred_gt tuples voor later
suus panc_374 voeg toe aan pred_gt tuples voor later
suus panc_386 voeg toe aan pred_gt tuples voor later
suus panc_393 voeg toe aan pred_gt tuples voor later
suus panc_399 voeg toe aan pred_gt tuples voor later
suus panc_410 voeg toe aan pred_gt tuples voor later
suus panc_412 voeg toe aan pred_gt tuples voor later
suus panc_413 voeg toe aan pred_gt tuples voor later
suus panc_415 voeg toe aan pred_gt tuples voor later
2022-07-10 01:11:47.102874: finished prediction
2022-07-10 01:11:47.132024: evaluation of raw predictions
2022-07-10 01:11:50.928034: determining postprocessing
Foreground vs background
before: 0.8354974398849785
after:  0.8356124335017688
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='1', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-10 01:12:09.705055: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-10 01:12:10.122105: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-10 01:12:10.126476: The split file contains 5 splits.
2022-07-10 01:12:10.128895: Desired fold for training: 1
2022-07-10 01:12:10.130933: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-10 01:12:11.815401: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-10 01:12:12.097488: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-10 01:12:21.163246: Unable to plot network architecture:
2022-07-10 01:12:21.166086: local variable 'g' referenced before assignment
2022-07-10 01:12:21.171476: 
printing the network instead:

2022-07-10 01:12:21.173823: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-10 01:12:21.185039: 

2022-07-10 01:12:21.604486: saving checkpoint...
2022-07-10 01:12:24.371836: done, saving took 3.18 seconds
suus panc_025 voeg toe aan pred_gt tuples voor later
suus panc_035 voeg toe aan pred_gt tuples voor later
suus panc_041 voeg toe aan pred_gt tuples voor later
suus panc_045 voeg toe aan pred_gt tuples voor later
suus panc_052 voeg toe aan pred_gt tuples voor later
suus panc_056 voeg toe aan pred_gt tuples voor later
suus panc_078 voeg toe aan pred_gt tuples voor later
suus panc_091 voeg toe aan pred_gt tuples voor later
suus panc_103 voeg toe aan pred_gt tuples voor later
suus panc_106 voeg toe aan pred_gt tuples voor later
suus panc_114 voeg toe aan pred_gt tuples voor later
suus panc_117 voeg toe aan pred_gt tuples voor later
suus panc_125 voeg toe aan pred_gt tuples voor later
suus panc_135 voeg toe aan pred_gt tuples voor later
suus panc_140 voeg toe aan pred_gt tuples voor later
suus panc_166 voeg toe aan pred_gt tuples voor later
suus panc_178 voeg toe aan pred_gt tuples voor later
suus panc_187 voeg toe aan pred_gt tuples voor later
suus panc_199 voeg toe aan pred_gt tuples voor later
suus panc_200 voeg toe aan pred_gt tuples voor later
suus panc_249 voeg toe aan pred_gt tuples voor later
suus panc_262 voeg toe aan pred_gt tuples voor later
suus panc_264 voeg toe aan pred_gt tuples voor later
suus panc_266 voeg toe aan pred_gt tuples voor later
suus panc_269 voeg toe aan pred_gt tuples voor later
suus panc_280 voeg toe aan pred_gt tuples voor later
suus panc_283 voeg toe aan pred_gt tuples voor later
suus panc_293 voeg toe aan pred_gt tuples voor later
suus panc_301 voeg toe aan pred_gt tuples voor later
suus panc_310 voeg toe aan pred_gt tuples voor later
suus panc_312 voeg toe aan pred_gt tuples voor later
suus panc_313 voeg toe aan pred_gt tuples voor later
suus panc_323 voeg toe aan pred_gt tuples voor later
suus panc_329 voeg toe aan pred_gt tuples voor later
suus panc_342 voeg toe aan pred_gt tuples voor later
suus panc_343 voeg toe aan pred_gt tuples voor later
suus panc_351 voeg toe aan pred_gt tuples voor later
suus panc_354 voeg toe aan pred_gt tuples voor later
suus panc_358 voeg toe aan pred_gt tuples voor later
suus panc_361 voeg toe aan pred_gt tuples voor later
suus panc_366 voeg toe aan pred_gt tuples voor later
suus panc_370 voeg toe aan pred_gt tuples voor later
suus panc_380 voeg toe aan pred_gt tuples voor later
suus panc_388 voeg toe aan pred_gt tuples voor later
suus panc_389 voeg toe aan pred_gt tuples voor later
suus panc_405 voeg toe aan pred_gt tuples voor later
suus panc_414 voeg toe aan pred_gt tuples voor later
suus panc_421 voeg toe aan pred_gt tuples voor later
2022-07-10 01:12:25.763943: finished prediction
2022-07-10 01:12:25.766377: evaluation of raw predictions
2022-07-10 01:12:31.226094: determining postprocessing
Foreground vs background
before: 0.8203400016413648
after:  0.8168355422202431
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='2', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-10 01:12:49.288757: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-10 01:12:49.712763: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-10 01:12:49.716866: The split file contains 5 splits.
2022-07-10 01:12:49.719063: Desired fold for training: 2
2022-07-10 01:12:49.721087: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-10 01:12:51.543555: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-10 01:12:51.825411: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-10 01:13:00.905555: Unable to plot network architecture:
2022-07-10 01:13:00.915923: local variable 'g' referenced before assignment
2022-07-10 01:13:00.918106: 
printing the network instead:

2022-07-10 01:13:00.920493: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-10 01:13:00.925323: 

2022-07-10 01:13:01.313540: saving checkpoint...
2022-07-10 01:13:04.582470: done, saving took 3.65 seconds
suus panc_005 voeg toe aan pred_gt tuples voor later
suus panc_015 voeg toe aan pred_gt tuples voor later
suus panc_021 voeg toe aan pred_gt tuples voor later
suus panc_032 voeg toe aan pred_gt tuples voor later
suus panc_037 voeg toe aan pred_gt tuples voor later
suus panc_043 voeg toe aan pred_gt tuples voor later
suus panc_055 voeg toe aan pred_gt tuples voor later
suus panc_061 voeg toe aan pred_gt tuples voor later
suus panc_084 voeg toe aan pred_gt tuples voor later
suus panc_094 voeg toe aan pred_gt tuples voor later
suus panc_096 voeg toe aan pred_gt tuples voor later
suus panc_102 voeg toe aan pred_gt tuples voor later
suus panc_124 voeg toe aan pred_gt tuples voor later
suus panc_138 voeg toe aan pred_gt tuples voor later
suus panc_167 voeg toe aan pred_gt tuples voor later
suus panc_175 voeg toe aan pred_gt tuples voor later
suus panc_179 voeg toe aan pred_gt tuples voor later
suus panc_183 voeg toe aan pred_gt tuples voor later
suus panc_196 voeg toe aan pred_gt tuples voor later
suus panc_198 voeg toe aan pred_gt tuples voor later
suus panc_203 voeg toe aan pred_gt tuples voor later
suus panc_222 voeg toe aan pred_gt tuples voor later
suus panc_230 voeg toe aan pred_gt tuples voor later
suus panc_231 voeg toe aan pred_gt tuples voor later
suus panc_239 voeg toe aan pred_gt tuples voor later
suus panc_244 voeg toe aan pred_gt tuples voor later
suus panc_247 voeg toe aan pred_gt tuples voor later
suus panc_254 voeg toe aan pred_gt tuples voor later
suus panc_267 voeg toe aan pred_gt tuples voor later
suus panc_270 voeg toe aan pred_gt tuples voor later
suus panc_274 voeg toe aan pred_gt tuples voor later
suus panc_277 voeg toe aan pred_gt tuples voor later
suus panc_278 voeg toe aan pred_gt tuples voor later
suus panc_289 voeg toe aan pred_gt tuples voor later
suus panc_290 voeg toe aan pred_gt tuples voor later
suus panc_291 voeg toe aan pred_gt tuples voor later
suus panc_297 voeg toe aan pred_gt tuples voor later
suus panc_299 voeg toe aan pred_gt tuples voor later
suus panc_303 voeg toe aan pred_gt tuples voor later
suus panc_320 voeg toe aan pred_gt tuples voor later
suus panc_328 voeg toe aan pred_gt tuples voor later
suus panc_331 voeg toe aan pred_gt tuples voor later
suus panc_339 voeg toe aan pred_gt tuples voor later
suus panc_344 voeg toe aan pred_gt tuples voor later
suus panc_355 voeg toe aan pred_gt tuples voor later
suus panc_387 voeg toe aan pred_gt tuples voor later
suus panc_392 voeg toe aan pred_gt tuples voor later
suus panc_395 voeg toe aan pred_gt tuples voor later
2022-07-10 01:13:05.987518: finished prediction
2022-07-10 01:13:06.006856: evaluation of raw predictions
2022-07-10 01:13:11.612041: determining postprocessing
Foreground vs background
before: 0.8330166034625629
after:  0.8329951752809489
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='3', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-10 01:13:29.327949: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-10 01:13:29.787726: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-10 01:13:29.792071: The split file contains 5 splits.
2022-07-10 01:13:29.794305: Desired fold for training: 3
2022-07-10 01:13:29.796381: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-10 01:13:31.521635: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-10 01:13:31.800596: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-10 01:13:43.987674: Unable to plot network architecture:
2022-07-10 01:13:43.990464: local variable 'g' referenced before assignment
2022-07-10 01:13:43.997848: 
printing the network instead:

2022-07-10 01:13:44.006806: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-10 01:13:44.011206: 

2022-07-10 01:13:44.346241: saving checkpoint...
2022-07-10 01:13:46.797917: done, saving took 2.78 seconds
suus panc_001 voeg toe aan pred_gt tuples voor later
suus panc_010 voeg toe aan pred_gt tuples voor later
suus panc_016 voeg toe aan pred_gt tuples voor later
suus panc_018 voeg toe aan pred_gt tuples voor later
suus panc_029 voeg toe aan pred_gt tuples voor later
suus panc_049 voeg toe aan pred_gt tuples voor later
suus panc_050 voeg toe aan pred_gt tuples voor later
suus panc_070 voeg toe aan pred_gt tuples voor later
suus panc_081 voeg toe aan pred_gt tuples voor later
suus panc_083 voeg toe aan pred_gt tuples voor later
suus panc_087 voeg toe aan pred_gt tuples voor later
suus panc_098 voeg toe aan pred_gt tuples voor later
suus panc_110 voeg toe aan pred_gt tuples voor later
suus panc_120 voeg toe aan pred_gt tuples voor later
suus panc_126 voeg toe aan pred_gt tuples voor later
suus panc_127 voeg toe aan pred_gt tuples voor later
suus panc_130 voeg toe aan pred_gt tuples voor later
suus panc_149 voeg toe aan pred_gt tuples voor later
suus panc_158 voeg toe aan pred_gt tuples voor later
suus panc_160 voeg toe aan pred_gt tuples voor later
suus panc_169 voeg toe aan pred_gt tuples voor later
suus panc_172 voeg toe aan pred_gt tuples voor later
suus panc_173 voeg toe aan pred_gt tuples voor later
suus panc_181 voeg toe aan pred_gt tuples voor later
suus panc_212 voeg toe aan pred_gt tuples voor later
suus panc_214 voeg toe aan pred_gt tuples voor later
suus panc_229 voeg toe aan pred_gt tuples voor later
suus panc_242 voeg toe aan pred_gt tuples voor later
suus panc_279 voeg toe aan pred_gt tuples voor later
suus panc_284 voeg toe aan pred_gt tuples voor later
suus panc_292 voeg toe aan pred_gt tuples voor later
suus panc_309 voeg toe aan pred_gt tuples voor later
suus panc_316 voeg toe aan pred_gt tuples voor later
suus panc_326 voeg toe aan pred_gt tuples voor later
suus panc_327 voeg toe aan pred_gt tuples voor later
suus panc_330 voeg toe aan pred_gt tuples voor later
suus panc_347 voeg toe aan pred_gt tuples voor later
suus panc_348 voeg toe aan pred_gt tuples voor later
suus panc_350 voeg toe aan pred_gt tuples voor later
suus panc_356 voeg toe aan pred_gt tuples voor later
suus panc_357 voeg toe aan pred_gt tuples voor later
suus panc_372 voeg toe aan pred_gt tuples voor later
suus panc_376 voeg toe aan pred_gt tuples voor later
suus panc_379 voeg toe aan pred_gt tuples voor later
suus panc_382 voeg toe aan pred_gt tuples voor later
suus panc_385 voeg toe aan pred_gt tuples voor later
suus panc_401 voeg toe aan pred_gt tuples voor later
suus panc_409 voeg toe aan pred_gt tuples voor later
2022-07-10 01:13:47.802093: finished prediction
2022-07-10 01:13:47.804468: evaluation of raw predictions
2022-07-10 01:13:51.396710: determining postprocessing
Foreground vs background
before: 0.8014626640389227
after:  0.7980517635003669
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='561', fold='4', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 6], 'patch_size': array([ 48, 160, 256]), 'median_patient_size_in_voxels': array([ 60, 173, 288]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2], [1, 1, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 0 from these plans
I am using sample dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-10 01:14:09.259035: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-10 01:14:09.676263: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task561/splits_final.pkl
2022-07-10 01:14:09.680555: The split file contains 5 splits.
2022-07-10 01:14:09.682733: Desired fold for training: 4
2022-07-10 01:14:09.684762: This split has 192 training and 47 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-10 01:14:11.472865: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-10 01:14:11.751172: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-10 01:14:23.170356: Unable to plot network architecture:
2022-07-10 01:14:23.173132: local variable 'g' referenced before assignment
2022-07-10 01:14:23.175224: 
printing the network instead:

2022-07-10 01:14:23.202183: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-10 01:14:23.228903: 

2022-07-10 01:14:23.605536: saving checkpoint...
2022-07-10 01:14:26.295224: done, saving took 3.05 seconds
suus panc_004 voeg toe aan pred_gt tuples voor later
suus panc_019 voeg toe aan pred_gt tuples voor later
suus panc_028 voeg toe aan pred_gt tuples voor later
suus panc_051 voeg toe aan pred_gt tuples voor later
suus panc_066 voeg toe aan pred_gt tuples voor later
suus panc_069 voeg toe aan pred_gt tuples voor later
suus panc_077 voeg toe aan pred_gt tuples voor later
suus panc_080 voeg toe aan pred_gt tuples voor later
suus panc_093 voeg toe aan pred_gt tuples voor later
suus panc_122 voeg toe aan pred_gt tuples voor later
suus panc_129 voeg toe aan pred_gt tuples voor later
suus panc_159 voeg toe aan pred_gt tuples voor later
suus panc_165 voeg toe aan pred_gt tuples voor later
suus panc_170 voeg toe aan pred_gt tuples voor later
suus panc_180 voeg toe aan pred_gt tuples voor later
suus panc_186 voeg toe aan pred_gt tuples voor later
suus panc_197 voeg toe aan pred_gt tuples voor later
suus panc_201 voeg toe aan pred_gt tuples voor later
suus panc_209 voeg toe aan pred_gt tuples voor later
suus panc_226 voeg toe aan pred_gt tuples voor later
suus panc_228 voeg toe aan pred_gt tuples voor later
suus panc_234 voeg toe aan pred_gt tuples voor later
suus panc_235 voeg toe aan pred_gt tuples voor later
suus panc_243 voeg toe aan pred_gt tuples voor later
suus panc_246 voeg toe aan pred_gt tuples voor later
suus panc_253 voeg toe aan pred_gt tuples voor later
suus panc_255 voeg toe aan pred_gt tuples voor later
suus panc_261 voeg toe aan pred_gt tuples voor later
suus panc_268 voeg toe aan pred_gt tuples voor later
suus panc_275 voeg toe aan pred_gt tuples voor later
suus panc_276 voeg toe aan pred_gt tuples voor later
suus panc_304 voeg toe aan pred_gt tuples voor later
suus panc_308 voeg toe aan pred_gt tuples voor later
suus panc_311 voeg toe aan pred_gt tuples voor later
suus panc_333 voeg toe aan pred_gt tuples voor later
suus panc_336 voeg toe aan pred_gt tuples voor later
suus panc_345 voeg toe aan pred_gt tuples voor later
suus panc_365 voeg toe aan pred_gt tuples voor later
suus panc_375 voeg toe aan pred_gt tuples voor later
suus panc_377 voeg toe aan pred_gt tuples voor later
suus panc_398 voeg toe aan pred_gt tuples voor later
suus panc_400 voeg toe aan pred_gt tuples voor later
suus panc_402 voeg toe aan pred_gt tuples voor later
suus panc_404 voeg toe aan pred_gt tuples voor later
suus panc_406 voeg toe aan pred_gt tuples voor later
suus panc_418 voeg toe aan pred_gt tuples voor later
suus panc_419 voeg toe aan pred_gt tuples voor later
2022-07-10 01:14:27.940922: finished prediction
2022-07-10 01:14:27.948990: evaluation of raw predictions
2022-07-10 01:14:32.420738: determining postprocessing
Foreground vs background
before: 0.8184408423354385
after:  0.8184889316381572
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
done
Start postprocessing..


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Foreground vs background
before: 0.8217653624397548
after:  0.8204047518123563
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
done
Done postprocessing! Now start inferencing its own train and test files.


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 239 unique case ids, here are some examples: ['panc_333' 'panc_350' 'panc_211' 'panc_125' 'panc_130' 'panc_187'
 'panc_212' 'panc_302' 'panc_234' 'panc_249']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 239
number of cases that still need to be predicted: 239
emptying cuda cache
loading parameters for folds, None
folds is None so we will automatically look for output folders (not using 'all'!)
found the following folds:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4']
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-10 01:15:56.626139: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
starting prediction...
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_001.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_015.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 2]]
number of tiles: 8
computing Gaussian
done
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_016.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 172, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 12], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 172, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 12], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 172, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 12], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 172, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 12], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 172, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 12], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_005.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 207, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 47], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 207, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 47], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 207, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 47], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 207, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 47], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 207, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 47], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_004.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_018.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_025.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 186, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 26], [0, 18]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 186, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 26], [0, 18]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 186, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 26], [0, 18]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 186, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 26], [0, 18]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 186, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 26], [0, 18]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_010.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 218, 339)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 58], [0, 83]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 218, 339)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 58], [0, 83]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 218, 339)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 58], [0, 83]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 218, 339)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 58], [0, 83]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 218, 339)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 58], [0, 83]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_028.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 174, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 14], [0, 35]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 174, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 14], [0, 35]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 174, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 14], [0, 35]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 174, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 14], [0, 35]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 174, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 14], [0, 35]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_021.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 186, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 26], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 186, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 26], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 186, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 26], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 186, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 26], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 186, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 26], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_019.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 177, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 17], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 177, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 17], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 177, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 17], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 177, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 17], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 177, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 17], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_029.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 204, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 44], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 204, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 44], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 204, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 44], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 204, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 44], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 204, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 44], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_040.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 196, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 36], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 196, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 36], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 196, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 36], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 196, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 36], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 196, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 36], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_024.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 164, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 4], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 164, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 4], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 164, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 4], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 164, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 4], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 164, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 4], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_041.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0, 46]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0, 46]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0, 46]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0, 46]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0, 46]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_035.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_032.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 192, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 32], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 192, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 32], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 192, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 32], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 192, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 32], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 192, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 32], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_043.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 166, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 6], [0, 35]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 166, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 6], [0, 35]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 166, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 6], [0, 35]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 166, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 6], [0, 35]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 166, 291)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 6], [0, 35]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_050.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 176, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 16], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 176, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 16], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 176, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 16], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 176, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 16], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 176, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 16], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_037.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 5], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 5], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 5], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 5], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 5], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_051.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 184, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 24], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 184, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 24], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 184, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 24], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 184, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 24], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 184, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 24], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_048.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 185, 353)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 25], [0, 97]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 185, 353)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 25], [0, 97]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 185, 353)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 25], [0, 97]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 185, 353)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 25], [0, 97]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 185, 353)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 25], [0, 97]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_045.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0], [0, 20]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0], [0, 20]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0], [0, 20]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0], [0, 20]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0], [0, 20]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_052.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_061.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 207, 356)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 47], [0, 100]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 207, 356)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 47], [0, 100]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 207, 356)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 47], [0, 100]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 207, 356)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 47], [0, 100]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 207, 356)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 47], [0, 100]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_049.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 232, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 72], [0, 68]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 232, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 72], [0, 68]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 232, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 72], [0, 68]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 232, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 72], [0, 68]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 232, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 72], [0, 68]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_066.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 182, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 22], [0, 68]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 182, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 22], [0, 68]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 182, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 22], [0, 68]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 182, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 22], [0, 68]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 182, 324)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 22], [0, 68]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_056.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 19]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_055.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 202, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 42], [0, 36]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 202, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 42], [0, 36]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 202, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 42], [0, 36]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 202, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 42], [0, 36]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 202, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 42], [0, 36]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_067.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 211, 338)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 51], [0, 82]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 211, 338)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 51], [0, 82]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 211, 338)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 51], [0, 82]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 211, 338)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 51], [0, 82]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 211, 338)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 51], [0, 82]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_077.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_058.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 191, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 31], [0, 79]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 191, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 31], [0, 79]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 191, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 31], [0, 79]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 191, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 31], [0, 79]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 191, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 31], [0, 79]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_078.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 170, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 10], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 170, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 10], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 170, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 10], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 170, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 10], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 170, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 10], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_070.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 181, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 21], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 181, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 21], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 181, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 21], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 181, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 21], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 181, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 21], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_069.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 160, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0], [0, 63]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 160, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0], [0, 63]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 160, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0], [0, 63]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 160, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0], [0, 63]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 160, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0], [0, 63]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_080.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 174, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 14], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 174, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 14], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 174, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 14], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 174, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 14], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 174, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 14], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_086.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 181, 342)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 21], [0, 86]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 181, 342)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 21], [0, 86]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 181, 342)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 21], [0, 86]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 181, 342)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 21], [0, 86]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 181, 342)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 21], [0, 86]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_075.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 24]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 24]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 24]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 24]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 24]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_087.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 162, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 2], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 162, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 2], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 162, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 2], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 162, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 2], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 162, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 2], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_083.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 180, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 20], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 180, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 20], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 180, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 20], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 180, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 20], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 180, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 20], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_081.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_091.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 189, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 29], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 189, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 29], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 189, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 29], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 189, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 29], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 189, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 29], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_098.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 77]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 77]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 77]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 77]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 77]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_084.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 163, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 3], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 163, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 3], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 163, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 3], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 163, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 3], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 163, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 3], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_101.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 181, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 21], [0, 48]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 181, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 21], [0, 48]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 181, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 21], [0, 48]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 181, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 21], [0, 48]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 181, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 21], [0, 48]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_094.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 213, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 53], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 213, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 53], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 213, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 53], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 213, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 53], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 213, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 53], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_093.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 197, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 37], [0, 79]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 197, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 37], [0, 79]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 197, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 37], [0, 79]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 197, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 37], [0, 79]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 197, 335)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 37], [0, 79]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_102.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 179, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 19], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 179, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 19], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 179, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 19], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 179, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 19], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 179, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 19], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_107.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 173, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 13], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 173, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 13], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 173, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 13], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 173, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 13], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 173, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 13], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_096.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_110.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 75]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 75]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 75]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 75]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 185, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 25], [0, 75]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_105.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 205, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 45], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 205, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 45], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 205, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 45], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 205, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 45], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 205, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0, 45], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_103.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_113.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 199, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 39], [0, 29]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 199, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 39], [0, 29]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 199, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 39], [0, 29]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 199, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 39], [0, 29]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 199, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 39], [0, 29]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_120.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_106.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 172, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 12], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_122.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 172, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 12], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 172, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 12], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 172, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 12], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 172, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 12], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 172, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 12], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_117.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_114.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_124.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 360)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 104]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 360)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 104]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 360)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 104]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 360)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 104]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 360)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 104]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_129.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 165, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 5], [0, 8]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 165, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 5], [0, 8]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 165, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 5], [0, 8]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 165, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 5], [0, 8]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 165, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 5], [0, 8]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_119.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 198, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 38], [0, 62]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 198, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 38], [0, 62]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 198, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 38], [0, 62]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 198, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 38], [0, 62]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 198, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 38], [0, 62]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_130.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_126.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 196, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 36], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 196, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 36], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 196, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 36], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 196, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 36], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 196, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 36], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_125.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 211, 364)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 51], [0, 108]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 211, 364)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 51], [0, 108]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 211, 364)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 51], [0, 108]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 211, 364)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 51], [0, 108]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 211, 364)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 51], [0, 108]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_131.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 212, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 52], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 212, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 52], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 212, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 52], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 212, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 52], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 212, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 52], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_140.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 166, 316)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 6], [0, 60]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 166, 316)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 6], [0, 60]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 166, 316)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 6], [0, 60]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 166, 316)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 6], [0, 60]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 166, 316)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 6], [0, 60]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_127.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 343)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 87]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 343)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 87]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 343)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 87]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 343)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 87]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 343)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 87]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_148.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 182, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 22], [0, 14]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 182, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 22], [0, 14]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 182, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 22], [0, 14]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 182, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 22], [0, 14]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 182, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 22], [0, 14]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_137.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 48]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 48]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 48]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 48]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 48]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_135.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 189, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 29], [0, 26]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 189, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 29], [0, 26]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 189, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 29], [0, 26]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 189, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 29], [0, 26]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 189, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 29], [0, 26]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_149.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 162, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 2], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 162, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 2], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 162, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 2], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 162, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 2], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 162, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 2], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_160.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 20]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 20]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 20]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 20]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 20]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_138.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 227, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 67], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 227, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 67], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 227, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 67], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 227, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 67], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 227, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 67], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_165.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 201, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 41], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 201, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 41], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 201, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 41], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 201, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 41], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 201, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 41], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_158.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 209, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 49], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 209, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 49], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 209, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 49], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 209, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 49], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 209, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 49], [0, 66]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_157.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 191, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 31], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 191, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 31], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 191, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 31], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 191, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 31], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 191, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 31], [0, 53]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_166.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 185, 307)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 25], [0, 51]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 185, 307)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 25], [0, 51]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 185, 307)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 25], [0, 51]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 185, 307)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 25], [0, 51]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 185, 307)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 25], [0, 51]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_172.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 179, 315)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 19], [0, 59]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 179, 315)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 19], [0, 59]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 179, 315)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 19], [0, 59]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 179, 315)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 19], [0, 59]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 179, 315)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 19], [0, 59]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_159.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_173.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 168, 272)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 8], [0, 16]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 168, 272)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 8], [0, 16]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 168, 272)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 8], [0, 16]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 168, 272)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 8], [0, 16]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 168, 272)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 8], [0, 16]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_169.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_167.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 162, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 2], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 162, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 2], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 162, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 2], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 162, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 2], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 162, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 2], [0, 2]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_175.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 173, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 13], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 173, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 13], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 173, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 13], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 173, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 13], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 173, 311)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 13], [0, 55]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_181.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 164, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 4], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 164, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 4], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 164, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 4], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 164, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 4], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 164, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 4], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_170.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_182.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_179.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_178.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_183.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_193.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 47]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 47]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 47]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 47]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 47]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_180.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 165, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 5], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 165, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 5], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 165, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 5], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 165, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 5], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 165, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 5], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_194.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 186, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 26], [0, 62]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 186, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 26], [0, 62]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 186, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 26], [0, 62]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 186, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 26], [0, 62]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 186, 318)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 26], [0, 62]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_187.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 162, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 2], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 162, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 2], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 162, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 2], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 162, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 2], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 162, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 2], [0, 38]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_186.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 212, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 52], [0, 6]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 212, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 52], [0, 6]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 212, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 52], [0, 6]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 212, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 52], [0, 6]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 212, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22, 44], [0, 52], [0, 6]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_196.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 271)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 15]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 271)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 15]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 271)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 15]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 271)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 15]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 271)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 15]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_200.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 239, 323)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12, 25], [0, 79], [0, 67]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 239, 323)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12, 25], [0, 79], [0, 67]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 239, 323)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12, 25], [0, 79], [0, 67]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 239, 323)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12, 25], [0, 79], [0, 67]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 239, 323)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12, 25], [0, 79], [0, 67]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_191.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 162, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 2], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 162, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 2], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 162, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 2], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 162, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 2], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 162, 274)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 2], [0, 18]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_201.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_198.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 168, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0, 8], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 168, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0, 8], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 168, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0, 8], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 168, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0, 8], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 168, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0, 8], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_197.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 172, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 12], [0, 30]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 172, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 12], [0, 30]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 172, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 12], [0, 30]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 172, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 12], [0, 30]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 172, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 12], [0, 30]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_203.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 53]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 53]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 53]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 53]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 53]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_211.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 191, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 31], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 191, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 31], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 191, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 31], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 191, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 31], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 191, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 31], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_199.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 287)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 31]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 287)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 31]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 287)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 31]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 287)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 31]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 287)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 31]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_212.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_207.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_204.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_214.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 52]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 52]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 52]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 52]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 52]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_224.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 176, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 16], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 176, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 16], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 176, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 16], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 176, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 16], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 176, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 16], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_209.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 69, 215, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21], [0, 55], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 69, 215, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21], [0, 55], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 69, 215, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21], [0, 55], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 69, 215, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21], [0, 55], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 69, 215, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21], [0, 55], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_226.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 181, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 21], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 181, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 21], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 181, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 21], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 181, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 21], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 181, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 21], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_219.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 192, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 32], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 192, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 32], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 192, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 32], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 192, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 32], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 192, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 32], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_215.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 36]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 36]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 36]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 36]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 292)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0, 36]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_228.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_234.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 204, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 44], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 204, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 44], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 204, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 44], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 204, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 44], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 204, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 44], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_222.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_235.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 181, 267)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 21], [0, 11]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_230.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_229.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 166, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 6], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 166, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 6], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 166, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 6], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 166, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 6], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 166, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 6], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_236.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 6]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 6]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 6]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 6]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 262)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0, 6]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_243.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 195, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 35], [0, 33]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 195, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 35], [0, 33]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 195, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 35], [0, 33]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 195, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 35], [0, 33]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 195, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 35], [0, 33]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_231.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 177, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 17], [0, 33]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 177, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 17], [0, 33]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 177, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 17], [0, 33]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 177, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 17], [0, 33]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 177, 289)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 17], [0, 33]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_244.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 182, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 22], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 182, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 22], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 182, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 22], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 182, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 22], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 182, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 22], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_241.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_239.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 19]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 19]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 19]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 19]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 19]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_246.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 193, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 33], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_254.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 190, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 30], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 190, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 30], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 190, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 30], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 190, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 30], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 190, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 30], [0, 21]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_242.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 180, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 20], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 180, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 20], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 180, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 20], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 180, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 20], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 180, 314)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 20], [0, 58]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_255.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 191, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 31], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 191, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 31], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 191, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 31], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 191, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 31], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 191, 282)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 31], [0, 26]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_249.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 206, 359)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 46], [0, 103]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 206, 359)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 46], [0, 103]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 206, 359)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 46], [0, 103]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 206, 359)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 46], [0, 103]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 206, 359)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 46], [0, 103]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_247.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_256.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 24]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 24]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 24]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 24]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 160, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0], [0, 24]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_266.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 176, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 16], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 176, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 16], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 176, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 16], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 176, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 16], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 176, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 16], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_253.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 191, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 31], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 191, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 31], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 191, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 31], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 191, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 31], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 191, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 31], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_267.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 40]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 40]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 40]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 40]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0, 40]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_262.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_261.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_268.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_275.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 264)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 8]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_264.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 176, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 16], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 176, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 16], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 176, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 16], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 176, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 16], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 176, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 16], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_276.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_270.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 177, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 17], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 177, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 17], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 177, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 17], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 177, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 17], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 177, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 17], [0, 44]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_269.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_277.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 184, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 24], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 184, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 24], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 184, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 24], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 184, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 24], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 184, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 24], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_283.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 184, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 24], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 184, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 24], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 184, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 24], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 184, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 24], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 184, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 24], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_274.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 32]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 32]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 32]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 32]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 160, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0], [0, 32]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_284.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 172, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 12], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_279.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 20], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 20], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 20], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 20], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 20], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_278.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 181, 298)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 21], [0, 42]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 181, 298)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 21], [0, 42]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 181, 298)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 21], [0, 42]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 181, 298)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 21], [0, 42]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 181, 298)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 21], [0, 42]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_285.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 162, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 2], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 162, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 2], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 162, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 2], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 162, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 2], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 162, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 2], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_291.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_280.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 188, 334)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 28], [0, 78]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 188, 334)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 28], [0, 78]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 188, 334)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 28], [0, 78]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 188, 334)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 28], [0, 78]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 188, 334)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 28], [0, 78]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_292.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 37]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 37]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 37]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 37]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 37]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_289.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_286.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_293.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 202, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 42], [0, 74]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_299.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 273)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 17]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 273)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 17]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 273)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 17]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 273)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 17]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 273)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 17]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_290.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 296)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 40]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_301.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 53]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 53]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 53]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 53]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0, 53]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_296.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 219, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 59], [0, 77]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 219, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 59], [0, 77]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 219, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 59], [0, 77]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 219, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 59], [0, 77]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 219, 333)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 59], [0, 77]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_294.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 174, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 14], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_302.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 224, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 64], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 224, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 64], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 224, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 64], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 224, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 64], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 224, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 64], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_308.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 204, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 44], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 204, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 44], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 204, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 44], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 204, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 44], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 204, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 44], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_297.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 209, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 49], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 209, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 49], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 209, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 49], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 209, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 49], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 209, 280)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 49], [0, 24]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_309.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 27]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 27]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 27]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 27]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 160, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0], [0, 27]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_304.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_303.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 66]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 66]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 66]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 66]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 322)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 66]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_310.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 175, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 15], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 175, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 15], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 175, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 15], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 175, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 15], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 175, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 15], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_316.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_305.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_320.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 165, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 5], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 165, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 5], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 165, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 5], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 165, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 5], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 165, 288)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 5], [0, 32]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_312.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 50, 160, 258)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 2], [0], [0, 2]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_311.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 29]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 29]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 29]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 29]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 285)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 29]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_321.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 175, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 15], [0, 5]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_327.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 217, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 57], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 217, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 57], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 217, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 57], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 217, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 57], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 217, 336)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 57], [0, 80]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_313.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 162, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 2], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_328.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 179, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 19], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 179, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 19], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 179, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 19], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 179, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 19], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 179, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 19], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_325.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_323.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 204, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 44], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_329.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 210, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 50], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 210, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 50], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 210, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 50], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 210, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 50], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 210, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 50], [0, 76]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_336.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 179, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 19], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 179, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 19], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 179, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 19], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 179, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 19], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 179, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 19], [0, 41]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_326.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 199, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 39], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 199, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 39], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 199, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 39], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 199, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 39], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 199, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 39], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_339.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 63]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_331.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 189, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 29], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 189, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 29], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 189, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 29], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 189, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 29], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 189, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 29], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_330.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 182, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 22], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 182, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 22], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 182, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 22], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 182, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 22], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 182, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 22], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_342.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 218, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 58], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 218, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 58], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 218, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 58], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 218, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 58], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 218, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 58], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_347.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 165, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 5], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 165, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 5], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 165, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 5], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 165, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 5], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 165, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 5], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_333.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 189, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 29], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 189, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 29], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 189, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 29], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 189, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 29], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 189, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 29], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_348.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_344.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_343.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_350.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 170, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 10], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 170, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 10], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 170, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 10], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 170, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 10], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 170, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 10], [0, 22]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_356.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 186, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 26], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 186, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 26], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 186, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 26], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 186, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 26], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 186, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 26], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_345.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 194, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 34], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 194, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 34], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 194, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 34], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 194, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 34], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 194, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 34], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_357.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 169, 259)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 9], [0, 3]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 169, 259)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 9], [0, 3]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 169, 259)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 9], [0, 3]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 169, 259)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 9], [0, 3]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 169, 259)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 9], [0, 3]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_354.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 160, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0], [0, 12]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 160, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0], [0, 12]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 160, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0], [0, 12]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 160, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0], [0, 12]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 160, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0], [0, 12]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_351.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_358.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 161, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 1], [0, 37]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 161, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 1], [0, 37]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 161, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 1], [0, 37]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 161, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 1], [0, 37]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 161, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 1], [0, 37]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_366.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 202, 337)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 42], [0, 81]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 202, 337)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 42], [0, 81]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 202, 337)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 42], [0, 81]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 202, 337)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 42], [0, 81]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 202, 337)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 42], [0, 81]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_355.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 168, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 8], [0, 44]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 168, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 8], [0, 44]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 168, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 8], [0, 44]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 168, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 8], [0, 44]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 168, 300)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 28], [0, 8], [0, 44]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_367.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 73]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 73]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 73]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 73]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 191, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 31], [0, 73]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_364.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_361.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 5]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 5]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 5]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 5]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 5]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_369.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 220, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 60], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 220, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 60], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 220, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 60], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 220, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 60], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 220, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 60], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_375.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 200, 350)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 40], [0, 94]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 200, 350)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 40], [0, 94]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 200, 350)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 40], [0, 94]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 200, 350)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 40], [0, 94]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 200, 350)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 40], [0, 94]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_365.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 178, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 18], [0, 76]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 178, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 18], [0, 76]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 178, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 18], [0, 76]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 178, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 18], [0, 76]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 178, 332)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 18], [0, 76]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_376.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 183, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 23], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 183, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 23], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 183, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 23], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 183, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 23], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 183, 303)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 23], [0, 47]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_372.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 224, 387)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 64], [0, 66, 131]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 224, 387)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 64], [0, 66, 131]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 224, 387)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 64], [0, 66, 131]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 224, 387)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 64], [0, 66, 131]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 224, 387)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 64], [0, 66, 131]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_370.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_377.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0], [0, 19]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0], [0, 19]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0], [0, 19]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0], [0, 19]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 160, 275)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0], [0, 19]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_385.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 201, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 41], [0, 30]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 201, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 41], [0, 30]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 201, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 41], [0, 30]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 201, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 41], [0, 30]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 201, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 41], [0, 30]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_374.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 224, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 64], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 224, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 64], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 224, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 64], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 224, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 64], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 224, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 64], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_386.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 169, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 9], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 169, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 9], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 169, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 9], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 169, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 9], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 169, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 9], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_380.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 24, 48], [0, 5], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 24, 48], [0, 5], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 24, 48], [0, 5], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 24, 48], [0, 5], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 24, 48], [0, 5], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_379.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0], [0]]
number of tiles: 1
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_387.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 43]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 43]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 43]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 43]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 160, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0], [0, 43]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_393.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 213, 399)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 53], [0, 72, 143]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 213, 399)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 53], [0, 72, 143]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 213, 399)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 53], [0, 72, 143]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 213, 399)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 53], [0, 72, 143]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 64, 213, 399)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16], [0, 53], [0, 72, 143]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_382.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_395.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 167, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 7], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 167, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 7], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 167, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 7], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 167, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 7], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 167, 283)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0, 7], [0, 27]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_389.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 180, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 20], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 180, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 20], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 180, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 20], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 180, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 20], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 180, 321)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 20], [0, 65]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_388.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15, 30], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_398.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0, 10]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0, 10]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0, 10]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0, 10]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 160, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0], [0, 10]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_402.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 160, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0], [0, 22]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_392.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 170, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 10], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 170, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 10], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 170, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 10], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 170, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 10], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 170, 261)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 10], [0, 5]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_404.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 181, 347)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 21], [0, 91]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 181, 347)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 21], [0, 91]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 181, 347)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 21], [0, 91]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 181, 347)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 21], [0, 91]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 181, 347)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 21], [0, 91]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_400.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 223, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0, 63], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 223, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0, 63], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 223, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0, 63], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 223, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0, 63], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 223, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23], [0, 63], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_399.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 190, 331)
patch size: preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_016.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 179, 287) after crop: (1, 57, 179, 287) spacing: [2.5        0.77343798 0.77343798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77343798, 0.77343798]), 'spacing_transposed': array([2.5       , 0.77343798, 0.77343798]), 'data.shape (data is transposed)': (1, 57, 179, 287)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 172, 277)} 

(1, 57, 172, 277)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_028.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 68, 175, 293) after crop: (1, 68, 175, 293) spacing: [2.5      0.796875 0.796875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.796875, 0.796875]), 'spacing_transposed': array([2.5     , 0.796875, 0.796875]), 'data.shape (data is transposed)': (1, 68, 175, 293)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 68, 174, 291)} 

(1, 68, 174, 291)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_041.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 161, 303) after crop: (1, 81, 161, 303) spacing: [1.5        0.79882801 0.79882801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.5       , 0.79882801, 0.79882801]), 'spacing_transposed': array([1.5       , 0.79882801, 0.79882801]), 'data.shape (data is transposed)': (1, 81, 161, 303)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 49, 160, 302)} 

(1, 49, 160, 302)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_051.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 180, 302) after crop: (1, 63, 180, 302) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 63, 180, 302)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 184, 309)} 

(1, 63, 184, 309)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_066.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 45, 179, 319) after crop: (1, 45, 179, 319) spacing: [5.         0.81445301 0.81445301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.81445301, 0.81445301]), 'spacing_transposed': array([5.        , 0.81445301, 0.81445301]), 'data.shape (data is transposed)': (1, 45, 179, 319)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 182, 324)} 

(1, 90, 182, 324)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_078.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 192, 302) after crop: (1, 63, 192, 302) spacing: [2.5        0.70898402 0.70898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70898402, 0.70898402]), 'spacing_transposed': array([2.5       , 0.70898402, 0.70898402]), 'data.shape (data is transposed)': (1, 63, 192, 302)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 170, 267)} 

(1, 63, 170, 267)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_087.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 42, 202, 306) after crop: (1, 42, 202, 306) spacing: [5.         0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.64453101, 0.64453101]), 'spacing_transposed': array([5.        , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 42, 202, 306)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 162, 246)} 

(1, 84, 162, 246)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_101.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 193, 324) after crop: (1, 46, 193, 324) spacing: [5.         0.75390601 0.75390601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.75390601, 0.75390601]), 'spacing_transposed': array([5.        , 0.75390601, 0.75390601]), 'data.shape (data is transposed)': (1, 46, 193, 324)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 181, 304)} 

(1, 92, 181, 304)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_110.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 152, 272) after crop: (1, 56, 152, 272) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 56, 152, 272)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 185, 331)} 

(1, 56, 185, 331)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_122.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 175, 248) after crop: (1, 59, 175, 248) spacing: [2.5        0.79101598 0.79101598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79101598, 0.79101598]), 'spacing_transposed': array([2.5       , 0.79101598, 0.79101598]), 'data.shape (data is transposed)': (1, 59, 175, 248)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 172, 244)} 

(1, 59, 172, 244)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_130.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 193, 323) after crop: (1, 53, 193, 323) spacing: [3.      0.65625 0.65625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.     , 0.65625, 0.65625]), 'spacing_transposed': array([3.     , 0.65625, 0.65625]), 'data.shape (data is transposed)': (1, 53, 193, 323)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 158, 264)} 

(1, 64, 158, 264)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_148.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 38, 192, 285) after crop: (1, 38, 192, 285) spacing: [5.         0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.76171899, 0.76171899]), 'spacing_transposed': array([5.        , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 38, 192, 285)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 182, 270)} 

(1, 76, 182, 270)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_165.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 165, 238) after crop: (1, 60, 165, 238) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 60, 165, 238)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 201, 290)} 

(1, 60, 201, 290)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_173.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 67, 195, 315) after crop: (1, 67, 195, 315) spacing: [2.5        0.69335902 0.69335902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.69335902, 0.69335902]), 'spacing_transposed': array([2.5       , 0.69335902, 0.69335902]), 'data.shape (data is transposed)': (1, 67, 195, 315)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 67, 168, 272)} 

(1, 67, 168, 272)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_182.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 187, 286) after crop: (1, 51, 187, 286) spacing: [2.5        0.67382801 0.67382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67382801, 0.67382801]), 'spacing_transposed': array([2.5       , 0.67382801, 0.67382801]), 'data.shape (data is transposed)': (1, 51, 187, 286)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 51, 157, 240)} 

(1, 51, 157, 240)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_194.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 76, 204, 349) after crop: (1, 76, 204, 349) spacing: [2.5        0.73046899 0.73046899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73046899, 0.73046899]), 'spacing_transposed': array([2.5       , 0.73046899, 0.73046899]), 'data.shape (data is transposed)': (1, 76, 204, 349)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 186, 318)} 

(1, 76, 186, 318)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_201.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 185, 271) after crop: (1, 60, 185, 271) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 60, 185, 271)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 149, 218)} 

(1, 60, 149, 218)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_212.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 164, 271) after crop: (1, 62, 164, 271) spacing: [2.5        0.87304699 0.87304699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87304699, 0.87304699]), 'spacing_transposed': array([2.5       , 0.87304699, 0.87304699]), 'data.shape (data is transposed)': (1, 62, 164, 271)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 178, 295)} 

(1, 62, 178, 295)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_226.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 175, 270) after crop: (1, 59, 175, 270) spacing: [2.5      0.828125 0.828125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.828125, 0.828125]), 'spacing_transposed': array([2.5     , 0.828125, 0.828125]), 'data.shape (data is transposed)': (1, 59, 175, 270)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 181, 279)} 

(1, 59, 181, 279)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_235.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 187, 276) after crop: (1, 62, 187, 276) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 62, 187, 276)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 181, 267)} 

(1, 62, 181, 267)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_244.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 161, 277) after crop: (1, 64, 161, 277) spacing: [2.5        0.90820301 0.90820301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.90820301, 0.90820301]), 'spacing_transposed': array([2.5       , 0.90820301, 0.90820301]), 'data.shape (data is transposed)': (1, 64, 161, 277)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 182, 313)} 

(1, 64, 182, 313)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_255.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 187, 276) after crop: (1, 56, 187, 276) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 56, 187, 276)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 191, 282)} 

(1, 56, 191, 282)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_267.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 189, 349) after crop: (1, 60, 189, 349) spacing: [2.5        0.67968798 0.67968798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67968798, 0.67968798]), 'spacing_transposed': array([2.5       , 0.67968798, 0.67968798]), 'data.shape (data is transposed)': (1, 60, 189, 349)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 160, 296)} 

(1, 60, 160, 296)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_276.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 70, 167, 275) after crop: (1, 70, 167, 275) spacing: [2.5        0.85546899 0.85546899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85546899, 0.85546899]), 'spacing_transposed': array([2.5       , 0.85546899, 0.85546899]), 'data.shape (data is transposed)': (1, 70, 167, 275)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 70, 178, 293)} 

(1, 70, 178, 293)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_284.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 183, 315) after crop: (1, 64, 183, 315) spacing: [2.5        0.75390601 0.75390601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75390601, 0.75390601]), 'spacing_transposed': array([2.5       , 0.75390601, 0.75390601]), 'data.shape (data is transposed)': (1, 64, 183, 315)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 172, 296)} 

(1, 64, 172, 296)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_292.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 152, 281) after crop: (1, 58, 152, 281) spacing: [2.5        0.83593798 0.83593798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83593798, 0.83593798]), 'spacing_transposed': array([2.5       , 0.83593798, 0.83593798]), 'data.shape (data is transposed)': (1, 58, 152, 281)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 158, 293)} 

(1, 58, 158, 293)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_301.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 141, 297) after crop: (1, 46, 141, 297) spacing: [2.5        0.83398402 0.83398402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83398402, 0.83398402]), 'spacing_transposed': array([2.5       , 0.83398402, 0.83398402]), 'data.shape (data is transposed)': (1, 46, 141, 297)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 46, 146, 309)} 

(1, 46, 146, 309)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_309.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 160, 292) after crop: (1, 58, 160, 292) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 58, 160, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 155, 283)} 

(1, 58, 155, 283)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_320.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 179, 312) after crop: (1, 54, 179, 312) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 54, 179, 312)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 165, 288)} 

(1, 54, 165, 288)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_328.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 147, 229) after crop: (1, 60, 147, 229) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 60, 147, 229)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 179, 279)} 

(1, 60, 179, 279)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_339.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 155, 276) after crop: (1, 56, 155, 276) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 56, 155, 276)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 179, 319)} 

(1, 56, 179, 319)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_348.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 163, 267) after crop: (1, 57, 163, 267) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 57, 163, 267)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 151, 247)} 

(1, 57, 151, 247)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_357.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 40, 215, 329) after crop: (1, 40, 215, 329) spacing: [5.         0.63281202 0.63281202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.63281202, 0.63281202]), 'spacing_transposed': array([5.        , 0.63281202, 0.63281202]), 'data.shape (data is transposed)': (1, 40, 215, 329)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 80, 169, 259)} 

(1, 80, 169, 259)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_367.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 178, 306) after crop: (1, 61, 178, 306) spacing: [2.5        0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86328101, 0.86328101]), 'spacing_transposed': array([2.5       , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 61, 178, 306)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 191, 329)} 

(1, 61, 191, 329)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_376.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 171, 283) after crop: (1, 63, 171, 283) spacing: [2.5      0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.859375, 0.859375]), 'spacing_transposed': array([2.5     , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 63, 171, 283)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 183, 303)} 

(1, 63, 183, 303)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_386.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 178, 311) after crop: (1, 59, 178, 311) spacing: [2.5        0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76171899, 0.76171899]), 'spacing_transposed': array([2.5       , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 59, 178, 311)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 169, 295)} 

(1, 59, 169, 295)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_395.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 172, 292) after crop: (1, 46, 172, 292) spacing: [3.         0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.77734399, 0.77734399]), 'spacing_transposed': array([3.        , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 46, 172, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 167, 283)} 

(1, 55, 167, 283)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_404.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 165, 317) after crop: (1, 60, 165, 317) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 60, 165, 317)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 181, 347)} 

(1, 60, 181, 347)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_413.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 184, 313) after crop: (1, 56, 184, 313) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 56, 184, 313)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 179, 305)} 

(1, 56, 179, 305)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_001.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 170, 273) after crop: (1, 46, 170, 273) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 46, 170, 273)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 46, 136, 219)} 

(1, 46, 136, 219)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_018.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 189, 270) after crop: (1, 58, 189, 270) spacing: [2.5        0.67382801 0.67382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67382801, 0.67382801]), 'spacing_transposed': array([2.5       , 0.67382801, 0.67382801]), 'data.shape (data is transposed)': (1, 58, 189, 270)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 159, 227)} 

(1, 58, 159, 227)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_029.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 210, 326) after crop: (1, 66, 210, 326) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 66, 210, 326)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 204, 317)} 

(1, 66, 204, 317)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_043.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 39, 179, 313) after crop: (1, 39, 179, 313) spacing: [5.         0.74609399 0.74609399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.74609399, 0.74609399]), 'spacing_transposed': array([5.        , 0.74609399, 0.74609399]), 'data.shape (data is transposed)': (1, 39, 179, 313)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 78, 166, 291)} 

(1, 78, 166, 291)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_052.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 214, 365) after crop: (1, 54, 214, 365) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 54, 214, 365)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 172, 293)} 

(1, 54, 172, 293)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_067.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 206, 330) after crop: (1, 58, 206, 330) spacing: [2.5        0.82226598 0.82226598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82226598, 0.82226598]), 'spacing_transposed': array([2.5       , 0.82226598, 0.82226598]), 'data.shape (data is transposed)': (1, 58, 206, 330)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 211, 338)} 

(1, 58, 211, 338)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_080.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 173, 307) after crop: (1, 55, 173, 307) spacing: [2.5        0.80664098 0.80664098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80664098, 0.80664098]), 'spacing_transposed': array([2.5       , 0.80664098, 0.80664098]), 'data.shape (data is transposed)': (1, 55, 173, 307)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 174, 308)} 

(1, 55, 174, 308)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_091.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 186, 292) after crop: (1, 53, 186, 292) spacing: [2.5        0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81640601, 0.81640601]), 'spacing_transposed': array([2.5       , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 53, 186, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 189, 297)} 

(1, 53, 189, 297)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_102.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 181, 318) after crop: (1, 61, 181, 318) spacing: [2.5        0.79296899 0.79296899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79296899, 0.79296899]), 'spacing_transposed': array([2.5       , 0.79296899, 0.79296899]), 'data.shape (data is transposed)': (1, 61, 181, 318)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 179, 314)} 

(1, 61, 179, 314)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_113.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 232, 332) after crop: (1, 54, 232, 332) spacing: [2.5        0.68945301 0.68945301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.68945301, 0.68945301]), 'spacing_transposed': array([2.5       , 0.68945301, 0.68945301]), 'data.shape (data is transposed)': (1, 54, 232, 332)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 199, 285)} 

(1, 54, 199, 285)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_124.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 153, 304) after crop: (1, 62, 153, 304) spacing: [2.5        0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95117199, 0.95117199]), 'spacing_transposed': array([2.5       , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 62, 153, 304)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 181, 360)} 

(1, 62, 181, 360)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_131.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 212, 295) after crop: (1, 59, 212, 295) spacing: [2.5        0.80273402 0.80273402] 

no resampling necessary
no resampling necessary
before: {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'spacing_transposed': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is transposed)': (1, 59, 212, 295)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 212, 295)} 

(1, 59, 212, 295)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_149.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 170, 311) after crop: (1, 55, 170, 311) spacing: [2.5      0.765625 0.765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.765625, 0.765625]), 'spacing_transposed': array([2.5     , 0.765625, 0.765625]), 'data.shape (data is transposed)': (1, 55, 170, 311)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 162, 297)} 

(1, 55, 162, 297)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_166.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 160, 266) after crop: (1, 58, 160, 266) spacing: [2.5        0.92578101 0.92578101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92578101, 0.92578101]), 'spacing_transposed': array([2.5       , 0.92578101, 0.92578101]), 'data.shape (data is transposed)': (1, 58, 160, 266)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 185, 307)} 

(1, 58, 185, 307)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_175.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 179, 321) after crop: (1, 59, 179, 321) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 59, 179, 321)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 173, 311)} 

(1, 59, 173, 311)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_183.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 49, 147, 241) after crop: (1, 49, 147, 241) spacing: [2.5        0.82226598 0.82226598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82226598, 0.82226598]), 'spacing_transposed': array([2.5       , 0.82226598, 0.82226598]), 'data.shape (data is transposed)': (1, 49, 147, 241)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 49, 151, 247)} 

(1, 49, 151, 247)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_196.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 182, 338) after crop: (1, 51, 182, 338) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 51, 182, 338)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 51, 146, 271)} 

(1, 51, 146, 271)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_203.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 164, 326) after crop: (1, 60, 164, 326) spacing: [2.5        0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76171899, 0.76171899]), 'spacing_transposed': array([2.5       , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 60, 164, 326)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 156, 309)} 

(1, 60, 156, 309)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_214.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 142, 291) after crop: (1, 55, 142, 291) spacing: [2.5        0.84960902 0.84960902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.84960902, 0.84960902]), 'spacing_transposed': array([2.5       , 0.84960902, 0.84960902]), 'data.shape (data is transposed)': (1, 55, 142, 291)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 150, 308)} 

(1, 55, 150, 308)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_228.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 153, 240) after crop: (1, 64, 153, 240) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 64, 153, 240)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 171, 269)} 

(1, 64, 171, 269)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_236.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 141, 245) after crop: (1, 51, 141, 245) spacing: [2.5      0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.859375, 0.859375]), 'spacing_transposed': array([2.5     , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 51, 141, 245)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 51, 151, 262)} 

(1, 51, 151, 262)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_246.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 172, 300) after crop: (1, 60, 172, 300) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 60, 172, 300)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 193, 336)} 

(1, 60, 193, 336)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_256.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 165, 291) after crop: (1, 64, 165, 291) spacing: [2.5        0.77343798 0.77343798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77343798, 0.77343798]), 'spacing_transposed': array([2.5       , 0.77343798, 0.77343798]), 'data.shape (data is transposed)': (1, 64, 165, 291)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 159, 280)} 

(1, 64, 159, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_268.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 159, 231) after crop: (1, 51, 159, 231) spacing: [2.5        0.73632801 0.73632801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73632801, 0.73632801]), 'spacing_transposed': array([2.5       , 0.73632801, 0.73632801]), 'data.shape (data is transposed)': (1, 51, 159, 231)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 51, 146, 212)} 

(1, 51, 146, 212)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_277.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 155, 274) after crop: (1, 57, 155, 274) spacing: [2.5        0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95117199, 0.95117199]), 'spacing_transposed': array([2.5       , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 57, 155, 274)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 184, 325)} 

(1, 57, 184, 325)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_285.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 156, 251) after crop: (1, 53, 156, 251) spacing: [2.5        0.83203101 0.83203101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83203101, 0.83203101]), 'spacing_transposed': array([2.5       , 0.83203101, 0.83203101]), 'data.shape (data is transposed)': (1, 53, 156, 251)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 162, 260)} 

(1, 53, 162, 260)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_293.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 181, 296) after crop: (1, 60, 181, 296) spacing: [2.5        0.89453101 0.89453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89453101, 0.89453101]), 'spacing_transposed': array([2.5       , 0.89453101, 0.89453101]), 'data.shape (data is transposed)': (1, 60, 181, 296)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 202, 330)} 

(1, 60, 202, 330)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_302.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 190, 281) after crop: (1, 63, 190, 281) spacing: [2.5        0.94726598 0.94726598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.94726598, 0.94726598]), 'spacing_transposed': array([2.5       , 0.94726598, 0.94726598]), 'data.shape (data is transposed)': (1, 63, 190, 281)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 224, 332)} 

(1, 63, 224, 332)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_310.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 152, 251) after crop: (1, 53, 152, 251) spacing: [2.5      0.921875 0.921875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.921875, 0.921875]), 'spacing_transposed': array([2.5     , 0.921875, 0.921875]), 'data.shape (data is transposed)': (1, 53, 152, 251)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 175, 288)} 

(1, 53, 175, 288)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_321.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 157, 234) after crop: (1, 58, 157, 234) spacing: [2.5        0.89453101 0.89453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89453101, 0.89453101]), 'spacing_transposed': array([2.5       , 0.89453101, 0.89453101]), 'data.shape (data is transposed)': (1, 58, 157, 234)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 175, 261)} 

(1, 58, 175, 261)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_329.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 173, 273) after crop: (1, 52, 173, 273) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 52, 173, 273)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 210, 332)} 

(1, 52, 210, 332)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_342.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 214, 298) after crop: (1, 63, 214, 298) spacing: [2.5        0.81835902 0.81835902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81835902, 0.81835902]), 'spacing_transposed': array([2.5       , 0.81835902, 0.81835902]), 'data.shape (data is transposed)': (1, 63, 214, 298)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 218, 304)} 

(1, 63, 218, 304)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_350.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 188, 307) after crop: (1, 61, 188, 307) spacing: [2.5        0.72656202 0.72656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72656202, 0.72656202]), 'spacing_transposed': array([2.5       , 0.72656202, 0.72656202]), 'data.shape (data is transposed)': (1, 61, 188, 307)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 170, 278)} 

(1, 61, 170, 278)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_358.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 38, 177, 323) after crop: (1, 38, 177, 323) spacing: [5.         0.72851598 0.72851598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.72851598, 0.72851598]), 'spacing_transposed': array([5.        , 0.72851598, 0.72851598]), 'data.shape (data is transposed)': (1, 38, 177, 323)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 161, 293)} 

(1, 76, 161, 293)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_369.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 181, 284) after crop: (1, 64, 181, 284) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 64, 181, 284)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 220, 345)} 

(1, 64, 220, 345)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_377.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 42, 147, 256) after crop: (1, 42, 147, 256) spacing: [5.         0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.86328101, 0.86328101]), 'spacing_transposed': array([5.        , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 42, 147, 256)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 158, 275)} 

(1, 84, 158, 275)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_387.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 43, 159, 307) after crop: (1, 43, 159, 307) spacing: [5.      0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.78125, 0.78125]), 'spacing_transposed': array([5.     , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 43, 159, 307)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 155, 299)} 

(1, 86, 155, 299)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_398.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 134, 230) after crop: (1, 59, 134, 230) spacing: [2.5        0.92968798 0.92968798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92968798, 0.92968798]), 'spacing_transposed': array([2.5       , 0.92968798, 0.92968798]), 'data.shape (data is transposed)': (1, 59, 134, 230)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 155, 266)} 

(1, 59, 155, 266)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_405.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 169, 252) after crop: (1, 62, 169, 252) spacing: [2.5        0.81054699 0.81054699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81054699, 0.81054699]), 'spacing_transposed': array([2.5       , 0.81054699, 0.81054699]), 'data.shape (data is transposed)': (1, 62, 169, 252)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 171, 254)} 

(1, 62, 171, 254)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_414.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 84, 173, 262) after crop: (1, 84, 173, 262) spacing: [1.25       0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.25      , 0.97656202, 0.97656202]), 'spacing_transposed': array([1.25      , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 84, 173, 262)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 42, 210, 319)} 

(1, 42, 210, 319)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_015.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 203, 283) after crop: (1, 56, 203, 283) spacing: [2.5        0.73242199 0.73242199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73242199, 0.73242199]), 'spacing_transposed': array([2.5       , 0.73242199, 0.73242199]), 'data.shape (data is transposed)': (1, 56, 203, 283)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 185, 258)} 

(1, 56, 185, 258)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_025.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 213, 314) after crop: (1, 59, 213, 314) spacing: [2.5        0.70117199 0.70117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70117199, 0.70117199]), 'spacing_transposed': array([2.5       , 0.70117199, 0.70117199]), 'data.shape (data is transposed)': (1, 59, 213, 314)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 186, 274)} 

(1, 59, 186, 274)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_040.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 45, 191, 322) after crop: (1, 45, 191, 322) spacing: [5.         0.82421899 0.82421899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.82421899, 0.82421899]), 'spacing_transposed': array([5.        , 0.82421899, 0.82421899]), 'data.shape (data is transposed)': (1, 45, 191, 322)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 196, 331)} 

(1, 90, 196, 331)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_050.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 44, 196, 253) after crop: (1, 44, 196, 253) spacing: [2.5        0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72265601, 0.72265601]), 'spacing_transposed': array([2.5       , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 44, 196, 253)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 44, 176, 228)} 

(1, 44, 176, 228)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_061.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 189, 325) after crop: (1, 62, 189, 325) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 62, 189, 325)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 207, 356)} 

(1, 62, 207, 356)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_077.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 182, 259) after crop: (1, 59, 182, 259) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 59, 182, 259)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 204, 290)} 

(1, 59, 204, 290)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_086.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 162, 306) after crop: (1, 51, 162, 306) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 51, 162, 306)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 51, 181, 342)} 

(1, 51, 181, 342)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_098.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 136, 288) after crop: (1, 66, 136, 288) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 66, 136, 288)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 157, 333)} 

(1, 66, 157, 333)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_107.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 178, 262) after crop: (1, 46, 178, 262) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 46, 178, 262)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 46, 173, 255)} 

(1, 46, 173, 255)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_120.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 40, 202, 312) after crop: (1, 40, 202, 312) spacing: [4.         0.68359399 0.68359399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.        , 0.68359399, 0.68359399]), 'spacing_transposed': array([4.        , 0.68359399, 0.68359399]), 'data.shape (data is transposed)': (1, 40, 202, 312)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 172, 266)} 

(1, 64, 172, 266)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_129.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 38, 181, 290) after crop: (1, 38, 181, 290) spacing: [5.         0.73046899 0.73046899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.73046899, 0.73046899]), 'spacing_transposed': array([5.        , 0.73046899, 0.73046899]), 'data.shape (data is transposed)': (1, 38, 181, 290)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 165, 264)} 

(1, 76, 165, 264)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_140.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 38, 162, 309) after crop: (1, 38, 162, 309) spacing: [5.         0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.82031202, 0.82031202]), 'spacing_transposed': array([5.        , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 38, 162, 309)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 166, 316)} 

(1, 76, 166, 316)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_160.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 143, 270) after crop: (1, 54, 143, 270) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 54, 143, 270)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 146, 276)} 

(1, 54, 146, 276)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_172.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 194, 342) after crop: (1, 66, 194, 342) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 66, 194, 342)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 179, 315)} 

(1, 66, 179, 315)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_181.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 135, 230) after crop: (1, 59, 135, 230) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 59, 135, 230)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 164, 280)} 

(1, 59, 164, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_193.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 146, 313) after crop: (1, 55, 146, 313) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 55, 146, 313)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 141, 303)} 

(1, 55, 141, 303)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_200.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 73, 204, 276) after crop: (1, 73, 204, 276) spacing: [2.5        0.93945301 0.93945301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.93945301, 0.93945301]), 'spacing_transposed': array([2.5       , 0.93945301, 0.93945301]), 'data.shape (data is transposed)': (1, 73, 204, 276)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 73, 239, 323)} 

(1, 73, 239, 323)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_211.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 168, 242) after crop: (1, 62, 168, 242) spacing: [2.5        0.91406202 0.91406202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91406202, 0.91406202]), 'spacing_transposed': array([2.5       , 0.91406202, 0.91406202]), 'data.shape (data is transposed)': (1, 62, 168, 242)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 191, 276)} 

(1, 62, 191, 276)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_224.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 164, 279) after crop: (1, 64, 164, 279) spacing: [2.5        0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86328101, 0.86328101]), 'spacing_transposed': array([2.5       , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 64, 164, 279)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 176, 300)} 

(1, 64, 176, 300)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_234.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 182, 248) after crop: (1, 56, 182, 248) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 56, 182, 248)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 204, 278)} 

(1, 56, 204, 278)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_243.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 42, 205, 305) after crop: (1, 42, 205, 305) spacing: [5.         0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.76171899, 0.76171899]), 'spacing_transposed': array([5.        , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 42, 205, 305)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 195, 289)} 

(1, 84, 195, 289)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_254.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 156, 228) after crop: (1, 62, 156, 228) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 62, 156, 228)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 190, 277)} 

(1, 62, 190, 277)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_266.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 157, 250) after crop: (1, 54, 157, 250) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 54, 157, 250)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 176, 280)} 

(1, 54, 176, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_275.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 169, 283) after crop: (1, 58, 169, 283) spacing: [2.5  0.75 0.75] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5 , 0.75, 0.75]), 'spacing_transposed': array([2.5 , 0.75, 0.75]), 'data.shape (data is transposed)': (1, 58, 169, 283)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 158, 264)} 

(1, 58, 158, 264)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_283.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 208, 296) after crop: (1, 62, 208, 296) spacing: [2.5        0.70898402 0.70898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70898402, 0.70898402]), 'spacing_transposed': array([2.5       , 0.70898402, 0.70898402]), 'data.shape (data is transposed)': (1, 62, 208, 296)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 184, 261)} 

(1, 62, 184, 261)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_291.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 147, 259) after crop: (1, 61, 147, 259) spacing: [2.5        0.91601598 0.91601598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91601598, 0.91601598]), 'spacing_transposed': array([2.5       , 0.91601598, 0.91601598]), 'data.shape (data is transposed)': (1, 61, 147, 259)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 168, 296)} 

(1, 61, 168, 296)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_299.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 184, 320) after crop: (1, 58, 184, 320) spacing: [2.5        0.68359399 0.68359399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.68359399, 0.68359399]), 'spacing_transposed': array([2.5       , 0.68359399, 0.68359399]), 'data.shape (data is transposed)': (1, 58, 184, 320)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 157, 273)} 

(1, 58, 157, 273)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_308.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 170, 268) after crop: (1, 62, 170, 268) spacing: [2.5        0.96289098 0.96289098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.96289098, 0.96289098]), 'spacing_transposed': array([2.5       , 0.96289098, 0.96289098]), 'data.shape (data is transposed)': (1, 62, 170, 268)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 204, 321)} 

(1, 62, 204, 321)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_316.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 153, 255) after crop: (1, 56, 153, 255) spacing: [2.5        0.72460902 0.72460902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72460902, 0.72460902]), 'spacing_transposed': array([2.5       , 0.72460902, 0.72460902]), 'data.shape (data is transposed)': (1, 56, 153, 255)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 138, 230)} 

(1, 56, 138, 230)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_327.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 178, 276) after crop: (1, 59, 178, 276) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 59, 178, 276)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 217, 336)} 

(1, 59, 217, 336)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_336.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 167, 277) after crop: (1, 55, 167, 277) spacing: [2.5      0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.859375, 0.859375]), 'spacing_transposed': array([2.5     , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 55, 167, 277)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 179, 297)} 

(1, 55, 179, 297)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_347.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 179, 315) after crop: (1, 62, 179, 315) spacing: [2.5        0.73828101 0.73828101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73828101, 0.73828101]), 'spacing_transposed': array([2.5       , 0.73828101, 0.73828101]), 'data.shape (data is transposed)': (1, 62, 179, 315)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 165, 290)} 

(1, 62, 165, 290)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_356.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 41, 220, 309) after crop: (1, 41, 220, 309) spacing: [5.         0.67773402 0.67773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.67773402, 0.67773402]), 'spacing_transposed': array([5.        , 0.67773402, 0.67773402]), 'data.shape (data is transposed)': (1, 41, 220, 309)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 186, 261)} 

(1, 82, 186, 261)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_366.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 67, 184, 306) after crop: (1, 67, 184, 306) spacing: [2.5        0.88281202 0.88281202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.88281202, 0.88281202]), 'spacing_transposed': array([2.5       , 0.88281202, 0.88281202]), 'data.shape (data is transposed)': (1, 67, 184, 306)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 67, 202, 337)} 

(1, 67, 202, 337)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_375.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 65, 179, 313) after crop: (1, 65, 179, 313) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 65, 179, 313)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 65, 200, 350)} 

(1, 65, 200, 350)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_385.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 45, 192, 273) after crop: (1, 45, 192, 273) spacing: [5.         0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.83984399, 0.83984399]), 'spacing_transposed': array([5.        , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 45, 192, 273)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 201, 286)} 

(1, 90, 201, 286)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_393.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 175, 328) after crop: (1, 64, 175, 328) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 64, 175, 328)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 213, 399)} 

(1, 64, 213, 399)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_402.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 161, 307) after crop: (1, 58, 161, 307) spacing: [3.         0.72600001 0.72600001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.72600001, 0.72600001]), 'spacing_transposed': array([3.        , 0.72600001, 0.72600001]), 'data.shape (data is transposed)': (1, 58, 161, 307)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 70, 146, 278)} 

(1, 70, 146, 278)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_412.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 164, 285) after crop: (1, 56, 164, 285) spacing: [3.         0.91601598 0.91601598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.91601598, 0.91601598]), 'spacing_transposed': array([3.        , 0.91601598, 0.91601598]), 'data.shape (data is transposed)': (1, 56, 164, 285)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 67, 187, 325)} 

(1, 67, 187, 325)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_421.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 79, 175, 290) after crop: (1, 79, 175, 290) spacing: [2.         0.97265601 0.97265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.        , 0.97265601, 0.97265601]), 'spacing_transposed': array([2.        , 0.97265601, 0.97265601]), 'data.shape (data is transposed)': (1, 79, 175, 290)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 212, 351)} 

(1, 63, 212, 351)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_005.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 181, 257) after crop: (1, 66, 181, 257) spacing: [2.5        0.91796899 0.91796899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91796899, 0.91796899]), 'spacing_transposed': array([2.5       , 0.91796899, 0.91796899]), 'data.shape (data is transposed)': (1, 66, 181, 257)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 207, 294)} 

(1, 66, 207, 294)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_021.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 173, 256) after crop: (1, 55, 173, 256) spacing: [2.5        0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86328101, 0.86328101]), 'spacing_transposed': array([2.5       , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 55, 173, 256)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 186, 275)} 

(1, 55, 186, 275)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_035.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 187, 280) after crop: (1, 54, 187, 280) spacing: [2.5        0.61328101 0.61328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.61328101, 0.61328101]), 'spacing_transposed': array([2.5       , 0.61328101, 0.61328101]), 'data.shape (data is transposed)': (1, 54, 187, 280)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 143, 214)} 

(1, 54, 143, 214)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_048.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 153, 292) after crop: (1, 53, 153, 292) spacing: [2.5        0.97070301 0.97070301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97070301, 0.97070301]), 'spacing_transposed': array([2.5       , 0.97070301, 0.97070301]), 'data.shape (data is transposed)': (1, 53, 153, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 185, 353)} 

(1, 53, 185, 353)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_056.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 171, 288) after crop: (1, 56, 171, 288) spacing: [2.5      0.765625 0.765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.765625, 0.765625]), 'spacing_transposed': array([2.5     , 0.765625, 0.765625]), 'data.shape (data is transposed)': (1, 56, 171, 288)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 163, 275)} 

(1, 56, 163, 275)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_070.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 67, 167, 242) after crop: (1, 67, 167, 242) spacing: [2.5        0.87109399 0.87109399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87109399, 0.87109399]), 'spacing_transposed': array([2.5       , 0.87109399, 0.87109399]), 'data.shape (data is transposed)': (1, 67, 167, 242)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 67, 181, 263)} 

(1, 67, 181, 263)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_083.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 68, 188, 295) after crop: (1, 68, 188, 295) spacing: [2.5        0.76953101 0.76953101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76953101, 0.76953101]), 'spacing_transposed': array([2.5       , 0.76953101, 0.76953101]), 'data.shape (data is transposed)': (1, 68, 188, 295)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 68, 180, 283)} 

(1, 68, 180, 283)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_094.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 70, 237, 346) after crop: (1, 70, 237, 346) spacing: [2.5        0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72265601, 0.72265601]), 'spacing_transposed': array([2.5       , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 70, 237, 346)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 70, 213, 311)} 

(1, 70, 213, 311)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_105.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 39, 214, 336) after crop: (1, 39, 214, 336) spacing: [5.         0.76953101 0.76953101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.76953101, 0.76953101]), 'spacing_transposed': array([5.        , 0.76953101, 0.76953101]), 'data.shape (data is transposed)': (1, 39, 214, 336)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 78, 205, 322)} 

(1, 78, 205, 322)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_117.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 173, 342) after crop: (1, 59, 173, 342) spacing: [3.         0.66015601 0.66015601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66015601, 0.66015601]), 'spacing_transposed': array([3.        , 0.66015601, 0.66015601]), 'data.shape (data is transposed)': (1, 59, 173, 342)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 71, 142, 281)} 

(1, 71, 142, 281)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_126.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 214, 308) after crop: (1, 56, 214, 308) spacing: [2.5      0.734375 0.734375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.734375, 0.734375]), 'spacing_transposed': array([2.5     , 0.734375, 0.734375]), 'data.shape (data is transposed)': (1, 56, 214, 308)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 196, 282)} 

(1, 56, 196, 282)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_137.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 152, 291) after crop: (1, 64, 152, 291) spacing: [2.5        0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83984399, 0.83984399]), 'spacing_transposed': array([2.5       , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 64, 152, 291)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 159, 304)} 

(1, 64, 159, 304)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_158.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 47, 177, 272) after crop: (1, 47, 177, 272) spacing: [5.         0.94921899 0.94921899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.94921899, 0.94921899]), 'spacing_transposed': array([5.        , 0.94921899, 0.94921899]), 'data.shape (data is transposed)': (1, 47, 177, 272)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 94, 209, 322)} 

(1, 94, 209, 322)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_169.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 173, 252) after crop: (1, 60, 173, 252) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 60, 173, 252)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 160, 233)} 

(1, 60, 160, 233)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_179.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 156, 266) after crop: (1, 53, 156, 266) spacing: [2.5        0.78515601 0.78515601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.78515601, 0.78515601]), 'spacing_transposed': array([2.5       , 0.78515601, 0.78515601]), 'data.shape (data is transposed)': (1, 53, 156, 266)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 153, 260)} 

(1, 53, 153, 260)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_187.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 155, 281) after crop: (1, 63, 155, 281) spacing: [2.5        0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83984399, 0.83984399]), 'spacing_transposed': array([2.5       , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 63, 155, 281)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 162, 294)} 

(1, 63, 162, 294)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_198.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 50, 150, 295) after crop: (1, 50, 150, 295) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 50, 150, 295)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 50, 168, 330)} 

(1, 50, 168, 330)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_207.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 221, 293) after crop: (1, 60, 221, 293) spacing: [2.5      0.734375 0.734375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.734375, 0.734375]), 'spacing_transposed': array([2.5     , 0.734375, 0.734375]), 'data.shape (data is transposed)': (1, 60, 221, 293)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 202, 268)} 

(1, 60, 202, 268)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_219.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 158, 247) after crop: (1, 64, 158, 247) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 64, 158, 247)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 192, 300)} 

(1, 64, 192, 300)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_230.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 139, 264) after crop: (1, 52, 139, 264) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 52, 139, 264)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 135, 256)} 

(1, 52, 135, 256)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_241.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 163, 267) after crop: (1, 61, 163, 267) spacing: [2.5        0.79882801 0.79882801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79882801, 0.79882801]), 'spacing_transposed': array([2.5       , 0.79882801, 0.79882801]), 'data.shape (data is transposed)': (1, 61, 163, 267)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 162, 266)} 

(1, 61, 162, 266)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_249.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 169, 295) after crop: (1, 57, 169, 295) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 57, 169, 295)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 206, 359)} 

(1, 57, 206, 359)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_262.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 187, 288) after crop: (1, 58, 187, 288) spacing: [2.5        0.75195301 0.75195301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75195301, 0.75195301]), 'spacing_transposed': array([2.5       , 0.75195301, 0.75195301]), 'data.shape (data is transposed)': (1, 58, 187, 288)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 175, 270)} 

(1, 58, 175, 270)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_270.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 177, 301) after crop: (1, 57, 177, 301) spacing: [2.5        0.80078101 0.80078101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80078101, 0.80078101]), 'spacing_transposed': array([2.5       , 0.80078101, 0.80078101]), 'data.shape (data is transposed)': (1, 57, 177, 301)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 177, 300)} 

(1, 57, 177, 300)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_279.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 206, 287) after crop: (1, 53, 206, 287) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 53, 206, 287)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 180, 251)} 

(1, 53, 180, 251)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_289.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 165, 325) after crop: (1, 57, 165, 325) spacing: [2.5    0.6875 0.6875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.6875, 0.6875]), 'spacing_transposed': array([2.5   , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 57, 165, 325)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 141, 278)} 

(1, 57, 141, 278)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_296.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 43, 180, 274) after crop: (1, 43, 180, 274) spacing: [5.         0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.97656202, 0.97656202]), 'spacing_transposed': array([5.        , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 43, 180, 274)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 219, 333)} 

(1, 86, 219, 333)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_304.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 176, 266) after crop: (1, 61, 176, 266) spacing: [2.5        0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72265601, 0.72265601]), 'spacing_transposed': array([2.5       , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 61, 176, 266)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 158, 239)} 

(1, 61, 158, 239)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_312.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 50, 129, 223) after crop: (1, 50, 129, 223) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 50, 129, 223)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 50, 149, 258)} 

(1, 50, 149, 258)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_325.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 161, 273) after crop: (1, 54, 161, 273) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 54, 161, 273)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 149, 252)} 

(1, 54, 149, 252)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_331.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 190, 251) after crop: (1, 61, 190, 251) spacing: [2.5        0.79882801 0.79882801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79882801, 0.79882801]), 'spacing_transposed': array([2.5       , 0.79882801, 0.79882801]), 'data.shape (data is transposed)': (1, 61, 190, 251)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 189, 250)} 

(1, 61, 189, 250)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_344.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 165, 260) after crop: (1, 62, 165, 260) spacing: [2.5        0.77148402 0.77148402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77148402, 0.77148402]), 'spacing_transposed': array([2.5       , 0.77148402, 0.77148402]), 'data.shape (data is transposed)': (1, 62, 165, 260)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 159, 250)} 

(1, 62, 159, 250)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_354.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 34, 151, 259) after crop: (1, 34, 151, 259) spacing: [5.         0.83007801 0.83007801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.83007801, 0.83007801]), 'spacing_transposed': array([5.        , 0.83007801, 0.83007801]), 'data.shape (data is transposed)': (1, 34, 151, 259)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 68, 156, 268)} 

(1, 68, 156, 268)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_364.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 176, 321) after crop: (1, 57, 176, 321) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 57, 176, 321)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 154, 281)} 

(1, 57, 154, 281)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_372.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 184, 318) after crop: (1, 61, 184, 318) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 61, 184, 318)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 224, 387)} 

(1, 61, 224, 387)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_380.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 48, 148, 225) after crop: (1, 48, 148, 225) spacing: [5.         0.89257801 0.89257801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.89257801, 0.89257801]), 'spacing_transposed': array([5.        , 0.89257801, 0.89257801]), 'data.shape (data is transposed)': (1, 48, 148, 225)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 96, 165, 250)} 

(1, 96, 165, 250)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_389.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 170, 303) after crop: (1, 60, 170, 303) spacing: [2.5        0.85156202 0.85156202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85156202, 0.85156202]), 'spacing_transposed': array([2.5       , 0.85156202, 0.85156202]), 'data.shape (data is transposed)': (1, 60, 170, 303)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 180, 321)} 

(1, 60, 180, 321)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_400.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 71, 185, 252) after crop: (1, 71, 185, 252) spacing: [2.5        0.96679699 0.96679699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.96679699, 0.96679699]), 'spacing_transposed': array([2.5       , 0.96679699, 0.96679699]), 'data.shape (data is transposed)': (1, 71, 185, 252)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 71, 223, 304)} 

(1, 71, 223, 304)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_409.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 169, 303) after crop: (1, 61, 169, 303) spacing: [0.70001203 0.78710902 0.78710902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([0.70001203, 0.78710902, 0.78710902]), 'spacing_transposed': array([0.70001203, 0.78710902, 0.78710902]), 'data.shape (data is transposed)': (1, 61, 169, 303)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 17, 166, 297)} 

(1, 17, 166, 297)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_418.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 37, 177, 326) after crop: (1, 37, 177, 326) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 37, 177, 326)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 74, 155, 286)} 

(1, 74, 155, 286)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_004.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 207, 328) after crop: (1, 61, 207, 328) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 61, 207, 328)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 191, 303)} 

(1, 61, 191, 303)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_019.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 162, 252) after crop: (1, 58, 162, 252) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 58, 162, 252)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 177, 276)} 

(1, 58, 177, 276)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_032.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 167, 263) after crop: (1, 52, 167, 263) spacing: [2.5        0.92382801 0.92382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92382801, 0.92382801]), 'spacing_transposed': array([2.5       , 0.92382801, 0.92382801]), 'data.shape (data is transposed)': (1, 52, 167, 263)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 192, 303)} 

(1, 52, 192, 303)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_045.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 38, 152, 271) after crop: (1, 38, 152, 271) spacing: [5.         0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.81640601, 0.81640601]), 'spacing_transposed': array([5.        , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 38, 152, 271)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 155, 276)} 

(1, 76, 155, 276)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_055.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 198, 286) after crop: (1, 66, 198, 286) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 66, 198, 286)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 202, 292)} 

(1, 66, 202, 292)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_069.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 161, 325) after crop: (1, 46, 161, 325) spacing: [5.         0.78906202 0.78906202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78906202, 0.78906202]), 'spacing_transposed': array([5.        , 0.78906202, 0.78906202]), 'data.shape (data is transposed)': (1, 46, 161, 325)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 158, 319)} 

(1, 92, 158, 319)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_081.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 40, 156, 248) after crop: (1, 40, 156, 248) spacing: [5.         0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.64453101, 0.64453101]), 'spacing_transposed': array([5.        , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 40, 156, 248)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 80, 125, 199)} 

(1, 80, 125, 199)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_093.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 170, 289) after crop: (1, 53, 170, 289) spacing: [3.         0.93164098 0.93164098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.93164098, 0.93164098]), 'spacing_transposed': array([3.        , 0.93164098, 0.93164098]), 'data.shape (data is transposed)': (1, 53, 170, 289)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 197, 335)} 

(1, 64, 197, 335)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_103.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 211, 294) after crop: (1, 57, 211, 294) spacing: [2.5        0.66210902 0.66210902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.66210902, 0.66210902]), 'spacing_transposed': array([2.5       , 0.66210902, 0.66210902]), 'data.shape (data is transposed)': (1, 57, 211, 294)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 174, 242)} 

(1, 57, 174, 242)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_114.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 180, 271) after crop: (1, 66, 180, 271) spacing: [2.5        0.70703101 0.70703101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70703101, 0.70703101]), 'spacing_transposed': array([2.5       , 0.70703101, 0.70703101]), 'data.shape (data is transposed)': (1, 66, 180, 271)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 159, 239)} 

(1, 66, 159, 239)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_125.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 182, 314) after crop: (1, 63, 182, 314) spacing: [2.5        0.93164098 0.93164098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.93164098, 0.93164098]), 'spacing_transposed': array([2.5       , 0.93164098, 0.93164098]), 'data.shape (data is transposed)': (1, 63, 182, 314)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 211, 364)} 

(1, 63, 211, 364)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_135.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 210, 313) after crop: (1, 46, 210, 313) spacing: [5.         0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.72265601, 0.72265601]), 'spacing_transposed': array([5.        , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 46, 210, 313)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 189, 282)} 

(1, 92, 189, 282)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_157.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 196, 317) after crop: (1, 57, 196, 317) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 57, 196, 317)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 191, 309)} 

(1, 57, 191, 309)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_167.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 171, 273) after crop: (1, 62, 171, 273) spacing: [2.5        0.75976598 0.75976598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75976598, 0.75976598]), 'spacing_transposed': array([2.5       , 0.75976598, 0.75976598]), 'data.shape (data is transposed)': (1, 62, 171, 273)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 162, 258)} 

(1, 62, 162, 258)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_178.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 157, 250) after crop: (1, 53, 157, 250) spacing: [2.5        0.80078101 0.80078101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80078101, 0.80078101]), 'spacing_transposed': array([2.5       , 0.80078101, 0.80078101]), 'data.shape (data is transposed)': (1, 53, 157, 250)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 157, 249)} 

(1, 53, 157, 249)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_186.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 240, 297) after crop: (1, 46, 240, 297) spacing: [5.         0.70898402 0.70898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.70898402, 0.70898402]), 'spacing_transposed': array([5.        , 0.70898402, 0.70898402]), 'data.shape (data is transposed)': (1, 46, 240, 297)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 212, 262)} 

(1, 92, 212, 262)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_197.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 48, 162, 270) after crop: (1, 48, 162, 270) spacing: [2.5        0.85156202 0.85156202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85156202, 0.85156202]), 'spacing_transposed': array([2.5       , 0.85156202, 0.85156202]), 'data.shape (data is transposed)': (1, 48, 162, 270)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 48, 172, 286)} 

(1, 48, 172, 286)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_204.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 48, 199, 267) after crop: (1, 48, 199, 267) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 48, 199, 267)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 48, 160, 214)} 

(1, 48, 160, 214)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_215.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 142, 309) after crop: (1, 54, 142, 309) spacing: [2.5        0.75781202 0.75781202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75781202, 0.75781202]), 'spacing_transposed': array([2.5       , 0.75781202, 0.75781202]), 'data.shape (data is transposed)': (1, 54, 142, 309)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 134, 292)} 

(1, 54, 134, 292)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_229.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 152, 256) after crop: (1, 54, 152, 256) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 54, 152, 256)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 166, 280)} 

(1, 54, 166, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_239.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 46, 165, 314) after crop: (1, 46, 165, 314) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 46, 165, 314)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 46, 145, 275)} 

(1, 46, 145, 275)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_247.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 213, 237) after crop: (1, 59, 213, 237) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 59, 213, 237)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 171, 190)} 

(1, 59, 171, 190)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_261.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 145, 287) after crop: (1, 55, 145, 287) spacing: [1.5        0.69921899 0.69921899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.5       , 0.69921899, 0.69921899]), 'spacing_transposed': array([1.5       , 0.69921899, 0.69921899]), 'data.shape (data is transposed)': (1, 55, 145, 287)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 33, 126, 250)} 

(1, 33, 126, 250)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_269.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 71, 162, 287) after crop: (1, 71, 162, 287) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 71, 162, 287)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 71, 157, 278)} 

(1, 71, 157, 278)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_278.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 165, 272) after crop: (1, 58, 165, 272) spacing: [2.5        0.88085902 0.88085902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.88085902, 0.88085902]), 'spacing_transposed': array([2.5       , 0.88085902, 0.88085902]), 'data.shape (data is transposed)': (1, 58, 165, 272)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 181, 298)} 

(1, 58, 181, 298)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_286.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 162, 265) after crop: (1, 61, 162, 265) spacing: [2.5        0.76757801 0.76757801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76757801, 0.76757801]), 'spacing_transposed': array([2.5       , 0.76757801, 0.76757801]), 'data.shape (data is transposed)': (1, 61, 162, 265)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 155, 253)} 

(1, 61, 155, 253)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_294.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 172, 246) after crop: (1, 62, 172, 246) spacing: [2.5        0.81054699 0.81054699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81054699, 0.81054699]), 'spacing_transposed': array([2.5       , 0.81054699, 0.81054699]), 'data.shape (data is transposed)': (1, 62, 172, 246)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 174, 248)} 

(1, 62, 174, 248)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_303.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 140, 265) after crop: (1, 62, 140, 265) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 62, 140, 265)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 170, 322)} 

(1, 62, 170, 322)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_311.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 164, 299) after crop: (1, 52, 164, 299) spacing: [2.5      0.765625 0.765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.765625, 0.765625]), 'spacing_transposed': array([2.5     , 0.765625, 0.765625]), 'data.shape (data is transposed)': (1, 52, 164, 299)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 156, 285)} 

(1, 52, 156, 285)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_323.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 171, 243) after crop: (1, 61, 171, 243) spacing: [2.5        0.95898402 0.95898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95898402, 0.95898402]), 'spacing_transposed': array([2.5       , 0.95898402, 0.95898402]), 'data.shape (data is transposed)': (1, 61, 171, 243)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 204, 290)} 

(1, 61, 204, 290)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_330.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 180, 234) after crop: (1, 59, 180, 234) spacing: [2.5    0.8125 0.8125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.8125, 0.8125]), 'spacing_transposed': array([2.5   , 0.8125, 0.8125]), 'data.shape (data is transposed)': (1, 59, 180, 234)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 182, 237)} 

(1, 59, 182, 237)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_343.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 161, 229) after crop: (1, 53, 161, 229) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 53, 161, 229)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 156, 222)} 

(1, 53, 156, 222)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_351.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 183, 267) after crop: (1, 53, 183, 267) spacing: [2.5        0.67382801 0.67382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67382801, 0.67382801]), 'spacing_transposed': array([2.5       , 0.67382801, 0.67382801]), 'data.shape (data is transposed)': (1, 53, 183, 267)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 154, 224)} 

(1, 53, 154, 224)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_361.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 43, 187, 335) after crop: (1, 43, 187, 335) spacing: [5.    0.625 0.625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.   , 0.625, 0.625]), 'spacing_transposed': array([5.   , 0.625, 0.625]), 'data.shape (data is transposed)': (1, 43, 187, 335)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 146, 261)} 

(1, 86, 146, 261)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_370.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 41, 151, 278) after crop: (1, 41, 151, 278) spacing: [5.         0.67578101 0.67578101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.67578101, 0.67578101]), 'spacing_transposed': array([5.        , 0.67578101, 0.67578101]), 'data.shape (data is transposed)': (1, 41, 151, 278)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 127, 234)} 

(1, 82, 127, 234)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_379.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 185, 281) after crop: (1, 87, 185, 281) spacing: [1.25       0.69531202 0.69531202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.25      , 0.69531202, 0.69531202]), 'spacing_transposed': array([1.25      , 0.69531202, 0.69531202]), 'data.shape (data is transposed)': (1, 87, 185, 281)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 44, 160, 243)} 

(1, 44, 160, 243)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_388.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 39, 127, 203) after crop: (1, 39, 127, 203) spacing: [5.         0.88867199 0.88867199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.88867199, 0.88867199]), 'spacing_transposed': array([5.        , 0.88867199, 0.88867199]), 'data.shape (data is transposed)': (1, 39, 127, 203)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 78, 141, 225)} 

(1, 78, 141, 225)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_399.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 44, 163, 283) after crop: (1, 44, 163, 283) spacing: [5.     0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.    , 0.9375, 0.9375]), 'spacing_transposed': array([5.    , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 44, 163, 283)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 88, 190, 331)} 

(1, 88, 190, 331)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_406.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 39, 149, 316) after crop: (1, 39, 149, 316) spacing: [3.         0.89257801 0.89257801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.89257801, 0.89257801]), 'spacing_transposed': array([3.        , 0.89257801, 0.89257801]), 'data.shape (data is transposed)': (1, 39, 149, 316)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 47, 166, 351)} 

(1, 47, 166, 351)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_415.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 43, 150, 253) after crop: (1, 43, 150, 253) spacing: [5.         0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.87890601, 0.87890601]), 'spacing_transposed': array([5.        , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 43, 150, 253)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 164, 277)} 

(1, 86, 164, 277)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_010.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 179, 279) after crop: (1, 98, 179, 279) spacing: [1.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([1.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 98, 179, 279)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 218, 339)} 

(1, 59, 218, 339)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_024.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 166, 282) after crop: (1, 57, 166, 282) spacing: [2.5        0.79492199 0.79492199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79492199, 0.79492199]), 'spacing_transposed': array([2.5       , 0.79492199, 0.79492199]), 'data.shape (data is transposed)': (1, 57, 166, 282)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 164, 279)} 

(1, 57, 164, 279)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_037.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 47, 206, 314) after crop: (1, 47, 206, 314) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 47, 206, 314)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 47, 165, 252)} 

(1, 47, 165, 252)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_049.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 67, 231, 322) after crop: (1, 67, 231, 322) spacing: [2.5        0.80664098 0.80664098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80664098, 0.80664098]), 'spacing_transposed': array([2.5       , 0.80664098, 0.80664098]), 'data.shape (data is transposed)': (1, 67, 231, 322)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 67, 232, 324)} 

(1, 67, 232, 324)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_058.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 39, 161, 283) after crop: (1, 39, 161, 283) spacing: [5.         0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.95117199, 0.95117199]), 'spacing_transposed': array([5.        , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 39, 161, 283)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 78, 191, 335)} 

(1, 78, 191, 335)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_075.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 90, 148, 275) after crop: (1, 90, 148, 275) spacing: [1.25       0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.25      , 0.81640601, 0.81640601]), 'spacing_transposed': array([1.25      , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 90, 148, 275)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 45, 151, 280)} 

(1, 45, 151, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_084.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 180, 308) after crop: (1, 61, 180, 308) spacing: [2.5        0.72851598 0.72851598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72851598, 0.72851598]), 'spacing_transposed': array([2.5       , 0.72851598, 0.72851598]), 'data.shape (data is transposed)': (1, 61, 180, 308)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 163, 280)} 

(1, 61, 163, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_096.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 167, 299) after crop: (1, 60, 167, 299) spacing: [2.5        0.92578101 0.92578101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92578101, 0.92578101]), 'spacing_transposed': array([2.5       , 0.92578101, 0.92578101]), 'data.shape (data is transposed)': (1, 60, 167, 299)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 193, 345)} 

(1, 60, 193, 345)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_106.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 47, 196, 335) after crop: (1, 47, 196, 335) spacing: [3.75     0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.75    , 0.703125, 0.703125]), 'spacing_transposed': array([3.75    , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 47, 196, 335)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 70, 172, 293)} 

(1, 70, 172, 293)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_119.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 177, 284) after crop: (1, 55, 177, 284) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 55, 177, 284)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 198, 318)} 

(1, 55, 198, 318)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_127.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 157, 317) after crop: (1, 60, 157, 317) spacing: [2.5        0.86914098 0.86914098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86914098, 0.86914098]), 'spacing_transposed': array([2.5       , 0.86914098, 0.86914098]), 'data.shape (data is transposed)': (1, 60, 157, 317)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 170, 343)} 

(1, 60, 170, 343)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_138.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 194, 295) after crop: (1, 62, 194, 295) spacing: [2.5    0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.9375, 0.9375]), 'spacing_transposed': array([2.5   , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 62, 194, 295)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 227, 345)} 

(1, 62, 227, 345)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_159.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 167, 316) after crop: (1, 63, 167, 316) spacing: [2.5     0.65625 0.65625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.65625, 0.65625]), 'spacing_transposed': array([2.5    , 0.65625, 0.65625]), 'data.shape (data is transposed)': (1, 63, 167, 316)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 137, 258)} 

(1, 63, 137, 258)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_170.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 148, 274) after crop: (1, 62, 148, 274) spacing: [2.5        0.80273402 0.80273402] 

no resampling necessary
no resampling necessary
before: {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'spacing_transposed': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is transposed)': (1, 62, 148, 274)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 148, 274)} 

(1, 62, 148, 274)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_180.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 178, 288) after crop: (1, 56, 178, 288) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 56, 178, 288)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 165, 266)} 

(1, 56, 165, 266)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_191.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 48, 176, 298) after crop: (1, 48, 176, 298) spacing: [2.5        0.73828101 0.73828101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73828101, 0.73828101]), 'spacing_transposed': array([2.5       , 0.73828101, 0.73828101]), 'data.shape (data is transposed)': (1, 48, 176, 298)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 48, 162, 274)} 

(1, 48, 162, 274)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_199.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 187, 287) after crop: (1, 59, 187, 287) spacing: [2.5        0.80273402 0.80273402] 

no resampling necessary
no resampling necessary
before: {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'spacing_transposed': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is transposed)': (1, 59, 187, 287)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 187, 287)} 

(1, 59, 187, 287)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_209.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 69, 180, 245) after crop: (1, 69, 180, 245) spacing: [2.5        0.96093798 0.96093798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.96093798, 0.96093798]), 'spacing_transposed': array([2.5       , 0.96093798, 0.96093798]), 'data.shape (data is transposed)': (1, 69, 180, 245)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 69, 215, 293)} 

(1, 69, 215, 293)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_222.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 181, 263) after crop: (1, 59, 181, 263) spacing: [2.5        0.60546899 0.60546899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.60546899, 0.60546899]), 'spacing_transposed': array([2.5       , 0.60546899, 0.60546899]), 'data.shape (data is transposed)': (1, 59, 181, 263)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 137, 198)} 

(1, 59, 137, 198)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_231.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 180, 293) after crop: (1, 55, 180, 293) spacing: [2.5        0.79101598 0.79101598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79101598, 0.79101598]), 'spacing_transposed': array([2.5       , 0.79101598, 0.79101598]), 'data.shape (data is transposed)': (1, 55, 180, 293)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 177, 289)} 

(1, 55, 177, 289)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_242.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 166, 289) after crop: (1, 58, 166, 289) spacing: [2.5        0.87109399 0.87109399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87109399, 0.87109399]), 'spacing_transposed': array([2.5       , 0.87109399, 0.87109399]), 'data.shape (data is transposed)': (1, 58, 166, 289)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 180, 314)} 

(1, 58, 180, 314)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_253.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 199, 292) after crop: (1, 52, 199, 292) spacing: [2.5        0.76953101 0.76953101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76953101, 0.76953101]), 'spacing_transposed': array([2.5       , 0.76953101, 0.76953101]), 'data.shape (data is transposed)': (1, 52, 199, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 191, 280)} 

(1, 52, 191, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_264.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 169, 257) after crop: (1, 55, 169, 257) spacing: [2.5        0.83789098 0.83789098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83789098, 0.83789098]), 'spacing_transposed': array([2.5       , 0.83789098, 0.83789098]), 'data.shape (data is transposed)': (1, 55, 169, 257)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 176, 268)} 

(1, 55, 176, 268)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_274.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 154, 329) after crop: (1, 66, 154, 329) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 66, 154, 329)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 135, 288)} 

(1, 66, 135, 288)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_280.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 163, 289) after crop: (1, 60, 163, 289) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 60, 163, 289)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 188, 334)} 

(1, 60, 188, 334)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_290.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 147, 259) after crop: (1, 61, 147, 259) spacing: [2.5        0.91601598 0.91601598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91601598, 0.91601598]), 'spacing_transposed': array([2.5       , 0.91601598, 0.91601598]), 'data.shape (data is transposed)': (1, 61, 147, 259)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 168, 296)} 

(1, 61, 168, 296)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_297.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 186, 249) after crop: (1, 64, 186, 249) spacing: [2.5        0.90234399 0.90234399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.90234399, 0.90234399]), 'spacing_transposed': array([2.5       , 0.90234399, 0.90234399]), 'data.shape (data is transposed)': (1, 64, 186, 249)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 209, 280)} 

(1, 64, 209, 280)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_305.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 156, 205) after crop: (1, 55, 156, 205) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 55, 156, 205)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 144, 189)} 

(1, 55, 144, 189)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_313.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 159, 284) after crop: (1, 61, 159, 284) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 61, 159, 284)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 162, 290)} 

(1, 61, 162, 290)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_326.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 168, 260) after crop: (1, 55, 168, 260) spacing: [2.5        0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95117199, 0.95117199]), 'spacing_transposed': array([2.5       , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 55, 168, 260)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 199, 308)} 

(1, 55, 199, 308)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_333.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 155, 253) after crop: (1, 58, 155, 253) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 58, 155, 253)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 189, 308)} 

(1, 58, 189, 308)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_345.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 185, 292) after crop: (1, 56, 185, 292) spacing: [2.5        0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83984399, 0.83984399]), 'spacing_transposed': array([2.5       , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 56, 185, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 194, 305)} 

(1, 56, 194, 305)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_355.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 38, 192, 342) after crop: (1, 38, 192, 342) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 38, 192, 342)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 168, 300)} 

(1, 76, 168, 300)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_365.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 45, 163, 305) after crop: (1, 45, 163, 305) spacing: [5.    0.875 0.875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.   , 0.875, 0.875]), 'spacing_transposed': array([5.   , 0.875, 0.875]), 'data.shape (data is transposed)': (1, 45, 163, 305)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 178, 332)} 

(1, 90, 178, 332)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_374.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 64, 242, 292) after crop: (1, 64, 242, 292) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 64, 242, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 64, 224, 270)} 

(1, 64, 224, 270)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_382.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 168, 290) after crop: (1, 60, 168, 290) spacing: [2.5        0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81640601, 0.81640601]), 'spacing_transposed': array([2.5       , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 60, 168, 290)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 171, 295)} 

(1, 60, 171, 295)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_392.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 45, 194, 298) after crop: (1, 45, 194, 298) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 45, 194, 298)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 170, 261)} 

(1, 90, 170, 261)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_401.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 41, 170, 289) after crop: (1, 41, 170, 289) spacing: [3.75       0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.75      , 0.72265601, 0.72265601]), 'spacing_transposed': array([3.75      , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 41, 170, 289)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 153, 260)} 

(1, 62, 153, 260)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_410.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 157, 336) after crop: (1, 55, 157, 336) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 55, 157, 336)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 55, 138, 294)} 

(1, 55, 138, 294)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_419.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 42, 145, 268) after crop: (1, 42, 145, 268) spacing: [5.     0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.    , 0.9375, 0.9375]), 'spacing_transposed': array([5.    , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 42, 145, 268)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 169, 313)} 

(1, 84, 169, 313)
This worker has ended successfully, no errors to report
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_015.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_005.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_018.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_010.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_021.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_029.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_024.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_035.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_043.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_037.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_048.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_052.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_049.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_056.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_067.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_058.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_070.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_080.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_075.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_083.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_091.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_084.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_094.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_102.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_096.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_105.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_113.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_106.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_117.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_124.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_119.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_126.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_131.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_127.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_137.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_149.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_138.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_158.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_166.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_159.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_169.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_175.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_170.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_179.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_183.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_180.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_187.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_196.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_191.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_198.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_203.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_199.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_207.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_214.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_209.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_219.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_228.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_222.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_230.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_236.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_231.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_241.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_246.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_242.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_249.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_256.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_253.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_262.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_268.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_264.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_270.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_277.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_274.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_279.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_285.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_280.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_289.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_293.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_290.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_296.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_302.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_297.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_304.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_310.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_305.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_312.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_321.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_313.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_325.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_329.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_326.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_331.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_342.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_333.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_344.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_350.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_345.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_354.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_358.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_355.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_364.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_369.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_365.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_372.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_377.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_374.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_380.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_387.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_382.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_389.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_398.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_392.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_400.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_405.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_401.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_409.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_414.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_410.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_415.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_001.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_016.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_004.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_025.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_028.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_019.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_040.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_041.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_032.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_050.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_051.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_045.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_061.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_066.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_055.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_077.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_078.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_069.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_086.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_087.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_081.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_098.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_101.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_093.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_107.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_110.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_103.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_120.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_122.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_114.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_129.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_130.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_125.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_140.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_148.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_135.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_160.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_165.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_157.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_172.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_173.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_167.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_181.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_182.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_178.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_193.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_194.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_186.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_200.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_201.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_197.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_211.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_212.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_204.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_224.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_226.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_215.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_234.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_235.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_229.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_243.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_244.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_239.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_254.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_255.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_247.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_266.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_267.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_261.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_275.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_276.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_269.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_283.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_284.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_278.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_291.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_292.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_286.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_299.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_301.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_294.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_308.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_309.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_303.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_316.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_320.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_311.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_327.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_328.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_323.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_336.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_339.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_330.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_347.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_348.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_343.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_356.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_357.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_351.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_366.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_367.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_361.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_375.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_376.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_370.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_385.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_386.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_379.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_393.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_395.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_388.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_402.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_404.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_399.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_412.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_413.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_406.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_421.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_418.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_419.nii.gz
[ 48 160 256]
steps (x, y, and z): [[0, 20, 40], [0, 30], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 190, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40], [0, 30], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 190, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40], [0, 30], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 190, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40], [0, 30], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 190, 331)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40], [0, 30], [0, 75]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_405.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 171, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 11], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_412.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 187, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 27], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 187, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 27], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 187, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 27], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 187, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 27], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 187, 325)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 27], [0, 69]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_401.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 160, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0], [0, 4]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_413.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 179, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 19], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_409.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 41]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 41]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 41]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 41]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 297)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 41]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_406.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 95]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 95]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 95]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 95]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 166, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 6], [0, 95]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_414.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 210, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 50], [0, 63]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 210, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 50], [0, 63]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 210, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 50], [0, 63]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 210, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 50], [0, 63]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 48, 210, 319)
patch size: [ 48 160 256]
steps (x, y, and z): [[0], [0, 50], [0, 63]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_421.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 212, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 52], [0, 95]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 212, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 52], [0, 95]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 212, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 52], [0, 95]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 212, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 52], [0, 95]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 212, 351)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 52], [0, 95]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_410.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 38]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 38]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 38]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 38]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 55, 160, 294)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 7], [0], [0, 38]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_418.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 160, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0], [0, 30]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 160, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0], [0, 30]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 160, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0], [0, 30]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 160, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0], [0, 30]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 160, 286)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0], [0, 30]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_415.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 164, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 4], [0, 21]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 164, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 4], [0, 21]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 164, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 4], [0, 21]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 164, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 4], [0, 21]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 164, 277)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 4], [0, 21]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTr/panc_419.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 169, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 9], [0, 57]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 169, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 9], [0, 57]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 169, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 9], [0, 57]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 169, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 9], [0, 57]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 169, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 9], [0, 57]]
number of tiles: 12
using precomputed Gaussian
prediction done
inference done. Now waiting for the segmentation export to finish...
postprocessing...


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 42 unique case ids, here are some examples: ['panc_225' 'panc_074' 'panc_258' 'panc_074' 'panc_095' 'panc_315'
 'panc_095' 'panc_411' 'panc_227' 'panc_089']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 42
number of cases that still need to be predicted: 42
emptying cuda cache
loading parameters for folds, None
folds is None so we will automatically look for output folders (not using 'all'!)
found the following folds:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4']
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-10 02:01:19.470570: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 1, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (6): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 1, 2), stride=(1, 1, 2), bias=False)
    (1): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (2): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (5): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (5): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task561/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
starting prediction...
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_006.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 162, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0, 2], [0, 20]]
number of tiles: 8
computing Gaussian
done
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 162, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0, 2], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 162, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0, 2], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 162, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0, 2], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 49, 162, 276)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 1], [0, 2], [0, 20]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_012.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 162, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 2], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 162, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 2], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 162, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 2], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 162, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 2], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 162, 317)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 3], [0, 2], [0, 61]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_064.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 184, 328)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 24], [0, 72]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 184, 328)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 24], [0, 72]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 184, 328)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 24], [0, 72]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 184, 328)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 24], [0, 72]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 66, 184, 328)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18], [0, 24], [0, 72]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_046.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 170, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 10], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_042.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 188, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 28], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 188, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 28], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 188, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 28], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 188, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 28], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 188, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0, 28], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_071.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 189, 284)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 29], [0, 28]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 189, 284)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 29], [0, 28]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 189, 284)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 29], [0, 28]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 189, 284)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 29], [0, 28]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 189, 284)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 18, 36], [0, 29], [0, 28]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_074.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 164, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0, 4], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 164, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0, 4], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 164, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0, 4], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 164, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0, 4], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 164, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13, 26], [0, 4], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_088.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 179, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 19], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 179, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 19], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 179, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 19], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 179, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 19], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 68, 179, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20], [0, 19], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_095.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 164, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 4], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 164, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 4], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 164, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 4], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 164, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 4], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 164, 295)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 4], [0, 39]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_092.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 178, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 18], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 178, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 18], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 178, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 18], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 178, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 18], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 178, 329)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17, 34], [0, 18], [0, 73]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_089.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 167, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 7], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 167, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 7], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 167, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 7], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 167, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 7], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 167, 263)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 9], [0, 7], [0, 7]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_099.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 16, 32], [0], [0]]
number of tiles: 3
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_100.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 203, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 43], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 203, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 43], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 203, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 43], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 203, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 43], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 203, 304)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 43], [0, 48]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_104.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 187, 266)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 27], [0, 10]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_145.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 202, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 42], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 202, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 42], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 202, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 42], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 202, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 42], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 70, 202, 345)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 22], [0, 42], [0, 89]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_111.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 227, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 67], [0, 53]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 227, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 67], [0, 53]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 227, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 67], [0, 53]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 227, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 67], [0, 53]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 227, 309)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 23, 46], [0, 67], [0, 53]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_109.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 56, 163, 308)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 8], [0, 3], [0, 52]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_147.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 185, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 25], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 185, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 25], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 185, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 25], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 185, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 25], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 65, 185, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 17], [0, 25], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_155.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 174, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 14], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 174, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 14], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 174, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 14], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 174, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 14], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 174, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 14], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_210.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 170, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 10], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 170, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 10], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 170, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 10], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 170, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 10], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 170, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 10], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_218.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 160, 281)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0], [0, 25]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_217.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 210, 341)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 50], [0, 85]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 210, 341)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 50], [0, 85]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 210, 341)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 50], [0, 85]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 210, 341)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 50], [0, 85]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 210, 341)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 11], [0, 50], [0, 85]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_213.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 195, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 35], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 195, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 35], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 195, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 35], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 195, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 35], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 195, 313)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 35], [0, 57]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_225.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 5], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 5], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 5], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 5], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 165, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 5], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_227.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 37]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 178, 293)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 18], [0, 37]]
number of tiles: 8
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_006.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 49, 169, 289) after crop: (1, 49, 169, 289) spacing: [2.5        0.76757801 0.76757801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76757801, 0.76757801]), 'spacing_transposed': array([2.5       , 0.76757801, 0.76757801]), 'data.shape (data is transposed)': (1, 49, 169, 289)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 49, 162, 276)} 

(1, 49, 162, 276)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_074.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 37, 169, 251) after crop: (1, 37, 169, 251) spacing: [5.      0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.78125, 0.78125]), 'spacing_transposed': array([5.     , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 37, 169, 251)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 74, 164, 244)} 

(1, 74, 164, 244)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_100.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 199, 297) after crop: (1, 58, 199, 297) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 58, 199, 297)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 203, 304)} 

(1, 58, 203, 304)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_155.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 168, 269) after crop: (1, 53, 168, 269) spacing: [2.5        0.83203101 0.83203101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83203101, 0.83203101]), 'spacing_transposed': array([2.5       , 0.83203101, 0.83203101]), 'data.shape (data is transposed)': (1, 53, 168, 269)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 174, 279)} 

(1, 53, 174, 279)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_227.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 146, 241) after crop: (1, 62, 146, 241) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 62, 146, 241)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 178, 293)} 

(1, 62, 178, 293)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_298.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 182, 279) after crop: (1, 53, 182, 279) spacing: [2.5        0.86523402 0.86523402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86523402, 0.86523402]), 'spacing_transposed': array([2.5       , 0.86523402, 0.86523402]), 'data.shape (data is transposed)': (1, 53, 182, 279)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 196, 301)} 

(1, 53, 196, 301)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_360.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 36, 169, 273) after crop: (1, 36, 169, 273) spacing: [7.5        0.81835902 0.81835902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([7.5       , 0.81835902, 0.81835902]), 'spacing_transposed': array([7.5       , 0.81835902, 0.81835902]), 'data.shape (data is transposed)': (1, 36, 169, 273)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 108, 172, 278)} 

(1, 108, 172, 278)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_012.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 165, 323) after crop: (1, 51, 165, 323) spacing: [2.5        0.78710902 0.78710902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.78710902, 0.78710902]), 'spacing_transposed': array([2.5       , 0.78710902, 0.78710902]), 'data.shape (data is transposed)': (1, 51, 165, 323)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 51, 162, 317)} 

(1, 51, 162, 317)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_088.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 68, 188, 324) after crop: (1, 68, 188, 324) spacing: [2.5        0.76367199 0.76367199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76367199, 0.76367199]), 'spacing_transposed': array([2.5       , 0.76367199, 0.76367199]), 'data.shape (data is transposed)': (1, 68, 188, 324)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 68, 179, 308)} 

(1, 68, 179, 308)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_104.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 167, 238) after crop: (1, 59, 167, 238) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 59, 167, 238)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 187, 266)} 

(1, 59, 187, 266)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_210.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 154, 273) after crop: (1, 58, 154, 273) spacing: [2.5        0.88476598 0.88476598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.88476598, 0.88476598]), 'spacing_transposed': array([2.5       , 0.88476598, 0.88476598]), 'data.shape (data is transposed)': (1, 58, 154, 273)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 170, 301)} 

(1, 58, 170, 301)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_258.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 198, 335) after crop: (1, 62, 198, 335) spacing: [2.5        0.73046899 0.73046899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73046899, 0.73046899]), 'spacing_transposed': array([2.5       , 0.73046899, 0.73046899]), 'data.shape (data is transposed)': (1, 62, 198, 335)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 180, 305)} 

(1, 62, 180, 305)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_300.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 158, 258) after crop: (1, 60, 158, 258) spacing: [2.5        0.86718798 0.86718798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86718798, 0.86718798]), 'spacing_transposed': array([2.5       , 0.86718798, 0.86718798]), 'data.shape (data is transposed)': (1, 60, 158, 258)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 171, 279)} 

(1, 60, 171, 279)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_362.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 43, 205, 290) after crop: (1, 43, 205, 290) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 43, 205, 290)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 180, 254)} 

(1, 86, 180, 254)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_064.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 165, 294) after crop: (1, 66, 165, 294) spacing: [2.5        0.89453101 0.89453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89453101, 0.89453101]), 'spacing_transposed': array([2.5       , 0.89453101, 0.89453101]), 'data.shape (data is transposed)': (1, 66, 165, 294)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 66, 184, 328)} 

(1, 66, 184, 328)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_095.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 175, 315) after crop: (1, 58, 175, 315) spacing: [2.5        0.75195301 0.75195301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75195301, 0.75195301]), 'spacing_transposed': array([2.5       , 0.75195301, 0.75195301]), 'data.shape (data is transposed)': (1, 58, 175, 315)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 164, 295)} 

(1, 58, 164, 295)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_145.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 70, 173, 295) after crop: (1, 70, 173, 295) spacing: [2.5    0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.9375, 0.9375]), 'spacing_transposed': array([2.5   , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 70, 173, 295)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 70, 202, 345)} 

(1, 70, 202, 345)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_218.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 166, 299) after crop: (1, 52, 166, 299) spacing: [2.5        0.75390601 0.75390601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75390601, 0.75390601]), 'spacing_transposed': array([2.5       , 0.75390601, 0.75390601]), 'data.shape (data is transposed)': (1, 52, 166, 299)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 156, 281)} 

(1, 52, 156, 281)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_287.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 175, 278) after crop: (1, 60, 175, 278) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 60, 175, 278)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 170, 270)} 

(1, 60, 170, 270)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_334.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 187, 287) after crop: (1, 52, 187, 287) spacing: [2.5        0.75195301 0.75195301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75195301, 0.75195301]), 'spacing_transposed': array([2.5       , 0.75195301, 0.75195301]), 'data.shape (data is transposed)': (1, 52, 187, 287)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 175, 269)} 

(1, 52, 175, 269)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_411.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 183, 283) after crop: (1, 61, 183, 283) spacing: [2.5        0.73632801 0.73632801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73632801, 0.73632801]), 'spacing_transposed': array([2.5       , 0.73632801, 0.73632801]), 'data.shape (data is transposed)': (1, 61, 183, 283)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 61, 168, 260)} 

(1, 61, 168, 260)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_046.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 62, 175, 267) after crop: (1, 62, 175, 267) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 62, 175, 267)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 62, 170, 260)} 

(1, 62, 170, 260)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_092.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 41, 178, 328) after crop: (1, 41, 178, 328) spacing: [5.         0.80468798 0.80468798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.80468798, 0.80468798]), 'spacing_transposed': array([5.        , 0.80468798, 0.80468798]), 'data.shape (data is transposed)': (1, 41, 178, 328)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 178, 329)} 

(1, 82, 178, 329)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_111.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 47, 216, 295) after crop: (1, 47, 216, 295) spacing: [5.         0.84179699 0.84179699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.84179699, 0.84179699]), 'spacing_transposed': array([5.        , 0.84179699, 0.84179699]), 'data.shape (data is transposed)': (1, 47, 216, 295)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 94, 227, 309)} 

(1, 94, 227, 309)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_217.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 203, 330) after crop: (1, 59, 203, 330) spacing: [2.5        0.83007801 0.83007801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83007801, 0.83007801]), 'spacing_transposed': array([2.5       , 0.83007801, 0.83007801]), 'data.shape (data is transposed)': (1, 59, 203, 330)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 210, 341)} 

(1, 59, 210, 341)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_265.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 157, 239) after crop: (1, 63, 157, 239) spacing: [2.5        0.83398402 0.83398402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83398402, 0.83398402]), 'spacing_transposed': array([2.5       , 0.83398402, 0.83398402]), 'data.shape (data is transposed)': (1, 63, 157, 239)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 63, 163, 248)} 

(1, 63, 163, 248)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_318.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 75, 208, 304) after crop: (1, 75, 208, 304) spacing: [2.5        0.78906202 0.78906202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.78906202, 0.78906202]), 'spacing_transposed': array([2.5       , 0.78906202, 0.78906202]), 'data.shape (data is transposed)': (1, 75, 208, 304)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 75, 204, 299)} 

(1, 75, 204, 299)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_391.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 67, 190, 253) after crop: (1, 67, 190, 253) spacing: [2.5        0.95703101 0.95703101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95703101, 0.95703101]), 'spacing_transposed': array([2.5       , 0.95703101, 0.95703101]), 'data.shape (data is transposed)': (1, 67, 190, 253)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 67, 227, 302)} 

(1, 67, 227, 302)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_042.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 40, 179, 314) after crop: (1, 40, 179, 314) spacing: [5.         0.84179699 0.84179699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.84179699, 0.84179699]), 'spacing_transposed': array([5.        , 0.84179699, 0.84179699]), 'data.shape (data is transposed)': (1, 40, 179, 314)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 80, 188, 329)} 

(1, 80, 188, 329)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_089.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 172, 272) after crop: (1, 57, 172, 272) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 57, 172, 272)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 167, 263)} 

(1, 57, 167, 263)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_109.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 164, 310) after crop: (1, 56, 164, 310) spacing: [2.5      0.796875 0.796875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.796875, 0.796875]), 'spacing_transposed': array([2.5     , 0.796875, 0.796875]), 'data.shape (data is transposed)': (1, 56, 164, 310)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 56, 163, 308)} 

(1, 56, 163, 308)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_213.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 167, 268) after crop: (1, 60, 167, 268) spacing: [2.5    0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.9375, 0.9375]), 'spacing_transposed': array([2.5   , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 60, 167, 268)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 195, 313)} 

(1, 60, 195, 313)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_259.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 53, 161, 255) after crop: (1, 53, 161, 255) spacing: [2.5     0.84375 0.84375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.84375, 0.84375]), 'spacing_transposed': array([2.5    , 0.84375, 0.84375]), 'data.shape (data is transposed)': (1, 53, 161, 255)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 53, 169, 268)} 

(1, 53, 169, 268)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_315.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 54, 174, 306) after crop: (1, 54, 174, 306) spacing: [2.5        0.85546899 0.85546899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85546899, 0.85546899]), 'spacing_transposed': array([2.5       , 0.85546899, 0.85546899]), 'data.shape (data is transposed)': (1, 54, 174, 306)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 54, 185, 326)} 

(1, 54, 185, 326)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_378.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 183, 314) after crop: (1, 52, 183, 314) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 52, 183, 314)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 169, 290)} 

(1, 52, 169, 290)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_071.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 42, 194, 292) after crop: (1, 42, 194, 292) spacing: [5.      0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.78125, 0.78125]), 'spacing_transposed': array([5.     , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 42, 194, 292)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 189, 284)} 

(1, 84, 189, 284)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_099.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 40, 165, 259) after crop: (1, 40, 165, 259) spacing: [5.      0.71875 0.71875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.71875, 0.71875]), 'spacing_transposed': array([5.     , 0.71875, 0.71875]), 'data.shape (data is transposed)': (1, 40, 165, 259)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 80, 148, 232)} 

(1, 80, 148, 232)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_147.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 65, 203, 246) after crop: (1, 65, 203, 246) spacing: [2.5        0.73242199 0.73242199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73242199, 0.73242199]), 'spacing_transposed': array([2.5       , 0.73242199, 0.73242199]), 'data.shape (data is transposed)': (1, 65, 203, 246)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 65, 185, 224)} 

(1, 65, 185, 224)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_225.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 52, 179, 263) after crop: (1, 52, 179, 263) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 52, 179, 263)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 52, 165, 243)} 

(1, 52, 165, 243)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_295.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 169, 266) after crop: (1, 58, 169, 266) spacing: [2.5    0.8125 0.8125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.8125, 0.8125]), 'spacing_transposed': array([2.5   , 0.8125, 0.8125]), 'data.shape (data is transposed)': (1, 58, 169, 266)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 58, 171, 269)} 

(1, 58, 171, 269)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_346.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 147, 235) after crop: (1, 60, 147, 235) spacing: [2.5        0.86132801 0.86132801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86132801, 0.86132801]), 'spacing_transposed': array([2.5       , 0.86132801, 0.86132801]), 'data.shape (data is transposed)': (1, 60, 147, 235)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 158, 252)} 

(1, 60, 158, 252)
preprocessing /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_416.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 165, 287) after crop: (1, 56, 165, 287) spacing: [4.00003004 0.921875   0.921875  ] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.00003004, 0.921875  , 0.921875  ]), 'spacing_transposed': array([4.00003004, 0.921875  , 0.921875  ]), 'data.shape (data is transposed)': (1, 56, 165, 287)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 189, 330)} 

(1, 90, 189, 330)
This worker has ended successfully, no errors to report
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_012.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_046.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_071.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_088.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_092.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_099.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_104.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_111.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_147.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_210.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_217.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_225.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_258.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_265.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_295.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_300.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_318.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_346.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_362.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_391.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_416.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_006.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_064.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_042.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_074.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_095.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_089.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_100.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_145.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_109.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_155.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_218.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_213.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_227.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_287.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_259.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_298.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_334.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_315.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_360.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_411.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_378.nii.gz
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_258.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 180, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 20], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 180, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 20], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 180, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 20], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 180, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 20], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 62, 180, 305)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14], [0, 20], [0, 49]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_287.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 170, 270)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 10], [0, 14]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_265.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 163, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 3], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 163, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 3], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 163, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 3], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 163, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 3], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 63, 163, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 15], [0, 3], [0]]
number of tiles: 4
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_259.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 169, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 9], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 169, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 9], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 169, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 9], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 169, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 9], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 169, 268)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 9], [0, 12]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_295.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 58, 171, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 10], [0, 11], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_298.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 196, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 36], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 196, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 36], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 196, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 36], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 196, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 36], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 53, 196, 301)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 5], [0, 36], [0, 45]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_300.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 171, 279)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0, 11], [0, 23]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_334.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 175, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 15], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 175, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 15], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 175, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 15], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 175, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 15], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 175, 269)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 15], [0, 13]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_318.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 204, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 27], [0, 44], [0, 43]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 204, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 27], [0, 44], [0, 43]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 204, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 27], [0, 44], [0, 43]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 204, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 27], [0, 44], [0, 43]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 204, 299)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 14, 27], [0, 44], [0, 43]]
number of tiles: 12
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_315.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 185, 326)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 25], [0, 70]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 185, 326)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 25], [0, 70]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 185, 326)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 25], [0, 70]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 185, 326)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 25], [0, 70]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 54, 185, 326)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 6], [0, 25], [0, 70]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_346.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 160, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 12], [0], [0]]
number of tiles: 2
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_360.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 172, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40, 60], [0, 12], [0, 22]]
number of tiles: 16
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 172, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40, 60], [0, 12], [0, 22]]
number of tiles: 16
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 172, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40, 60], [0, 12], [0, 22]]
number of tiles: 16
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 172, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40, 60], [0, 12], [0, 22]]
number of tiles: 16
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 172, 278)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 20, 40, 60], [0, 12], [0, 22]]
number of tiles: 16
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_362.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 20], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 20], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 20], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 20], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 180, 256)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19, 38], [0, 20], [0]]
number of tiles: 6
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_411.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 61, 168, 260)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 13], [0, 8], [0, 4]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_391.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 227, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 67], [0, 46]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 227, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 67], [0, 46]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 227, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 67], [0, 46]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 227, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 67], [0, 46]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 227, 302)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 19], [0, 67], [0, 46]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_378.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 169, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 9], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 169, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 9], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 169, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 9], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 169, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 9], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 52, 169, 290)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 4], [0, 9], [0, 34]]
number of tiles: 8
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/561/3d_fullres/nnUNetTrainerV2/561/imagesTs/panc_416.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 189, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 29], [0, 74]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 189, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 29], [0, 74]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 189, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 29], [0, 74]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 189, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 29], [0, 74]]
number of tiles: 12
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 189, 330)
patch size: [ 48 160 256]
steps (x, y, and z): [[0, 21, 42], [0, 29], [0, 74]]
number of tiles: 12
using precomputed Gaussian
prediction done
inference done. Now waiting for the segmentation export to finish...
postprocessing...
Done inferencing! Now start the evaluation.


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet



Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Program finished with exit code 0 at: Thu Jul  7 18:42:49 CEST 2022
