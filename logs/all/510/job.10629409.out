Starting at Wed Jul  6 23:30:59 CEST 2022
Running on hosts: res-hpc-lkeb08
Running on 1 nodes.
Running 1 tasks.
CPUs on node: 6.
Account: div2-lkeb
Job ID: 10629409
Job name: 510all
Node running script: res-hpc-lkeb08
Submit host: res-hpc-lo02.researchlumc.nl
GPUS: 0 or 
Wed Jul  6 23:32:54 2022       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 470.103.01   Driver Version: 470.103.01   CUDA Version: 11.4     |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|                               |                      |               MIG M. |
|===============================+======================+======================|
|   0  NVIDIA RTX A6000    On   | 00000000:3B:00.0 Off |                  Off |
| 30%   29C    P8    17W / 300W |      0MiB / 48685MiB |      0%      Default |
|                               |                      |                  N/A |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                                  |
|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |
|        ID   ID                                                   Usage      |
|=============================================================================|
|  No running processes found                                                 |
+-----------------------------------------------------------------------------+
Current working directory is /home/smaijer
Load all modules..
Done with loading all modules. Modules:
Activate conda env nnunet..
Verifying environment variables:
Installing hidden layer and nnUnet..
Collecting hiddenlayer
  Cloning https://github.com/FabianIsensee/hiddenlayer.git (to revision more_plotted_details) to /tmp/pip-install-c1xjsx5e/hiddenlayer_f4090117dc8d4c16b511a5de06f1bc26
  Resolved https://github.com/FabianIsensee/hiddenlayer.git to commit 4b98f9e5cccebac67368f02b95f4700b522345b1
Using legacy 'setup.py install' for hiddenlayer, since package 'wheel' is not installed.
Installing collected packages: hiddenlayer
    Running setup.py install for hiddenlayer: started
    Running setup.py install for hiddenlayer: finished with status 'done'
Successfully installed hiddenlayer-0.2
Start preprocessing..
Done preprocessing! Start training all the folds..


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='0', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-06 23:33:05.527837: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-06 23:33:05.991088: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-06 23:33:05.995802: The split file contains 5 splits.
2022-07-06 23:33:05.998401: Desired fold for training: 0
2022-07-06 23:33:06.000678: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-06 23:33:07.734744: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-06 23:33:35.443729: Unable to plot network architecture:
2022-07-06 23:33:35.446989: local variable 'g' referenced before assignment
2022-07-06 23:33:35.449744: 
printing the network instead:

2022-07-06 23:33:35.452221: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-06 23:33:35.456776: 

2022-07-06 23:33:35.459107: 
epoch:  0
2022-07-06 23:35:59.250794: train loss : 0.0086
2022-07-06 23:36:34.435697: validation loss: -0.1396
2022-07-06 23:36:34.439325: Average global foreground Dice: [0.2608]
2022-07-06 23:36:34.441729: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:36:34.841873: Suus1 maybe_update_lr lr: 0.009982
2022-07-06 23:36:34.844914: This epoch took 179.383176 s

2022-07-06 23:36:34.847393: 
epoch:  1
2022-07-06 23:37:54.681349: train loss : -0.1629
2022-07-06 23:38:19.929981: validation loss: -0.2364
2022-07-06 23:38:20.270485: Average global foreground Dice: [0.3653]
2022-07-06 23:38:20.274202: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:38:20.673498: Suus1 maybe_update_lr lr: 0.009964
2022-07-06 23:38:20.675912: saving best epoch checkpoint...
2022-07-06 23:38:20.727357: saving checkpoint...
2022-07-06 23:38:21.735755: done, saving took 1.06 seconds
2022-07-06 23:38:21.752938: This epoch took 106.903396 s

2022-07-06 23:38:21.755958: 
epoch:  2
2022-07-06 23:39:28.564200: train loss : -0.2563
2022-07-06 23:39:48.699418: validation loss: -0.3026
2022-07-06 23:39:48.702852: Average global foreground Dice: [0.431]
2022-07-06 23:39:48.705048: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:39:49.110204: Suus1 maybe_update_lr lr: 0.009946
2022-07-06 23:39:49.112413: saving best epoch checkpoint...
2022-07-06 23:39:49.161859: saving checkpoint...
2022-07-06 23:39:50.179469: done, saving took 1.06 seconds
2022-07-06 23:39:50.199164: This epoch took 88.440768 s

2022-07-06 23:39:50.201233: 
epoch:  3
2022-07-06 23:40:57.115444: train loss : -0.2587
2022-07-06 23:41:12.089138: validation loss: -0.3805
2022-07-06 23:41:12.092552: Average global foreground Dice: [0.4834]
2022-07-06 23:41:12.094842: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:41:12.489889: Suus1 maybe_update_lr lr: 0.009928
2022-07-06 23:41:12.492164: saving best epoch checkpoint...
2022-07-06 23:41:12.543303: saving checkpoint...
2022-07-06 23:41:13.981320: done, saving took 1.49 seconds
2022-07-06 23:41:13.995600: This epoch took 83.792006 s

2022-07-06 23:41:13.997915: 
epoch:  4
2022-07-06 23:42:21.110255: train loss : -0.3252
2022-07-06 23:42:36.323833: validation loss: -0.4051
2022-07-06 23:42:36.327605: Average global foreground Dice: [0.5194]
2022-07-06 23:42:36.329878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:42:36.728564: Suus1 maybe_update_lr lr: 0.00991
2022-07-06 23:42:36.731103: saving best epoch checkpoint...
2022-07-06 23:42:36.779377: saving checkpoint...
2022-07-06 23:42:37.840063: done, saving took 1.11 seconds
2022-07-06 23:42:37.855023: This epoch took 83.854950 s

2022-07-06 23:42:37.857242: 
epoch:  5
2022-07-06 23:43:45.143502: train loss : -0.3835
2022-07-06 23:43:55.449141: validation loss: -0.4528
2022-07-06 23:43:55.452724: Average global foreground Dice: [0.5685]
2022-07-06 23:43:55.455408: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:43:55.841305: Suus1 maybe_update_lr lr: 0.009892
2022-07-06 23:43:55.843996: saving best epoch checkpoint...
2022-07-06 23:43:55.878005: saving checkpoint...
2022-07-06 23:43:56.937205: done, saving took 1.09 seconds
2022-07-06 23:43:56.952142: This epoch took 79.092680 s

2022-07-06 23:43:56.954604: 
epoch:  6
2022-07-06 23:45:04.340352: train loss : -0.3814
2022-07-06 23:45:13.119303: validation loss: -0.4878
2022-07-06 23:45:13.122230: Average global foreground Dice: [0.5929]
2022-07-06 23:45:13.124578: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:45:13.513646: Suus1 maybe_update_lr lr: 0.009874
2022-07-06 23:45:13.516189: saving best epoch checkpoint...
2022-07-06 23:45:13.547280: saving checkpoint...
2022-07-06 23:45:14.608444: done, saving took 1.09 seconds
2022-07-06 23:45:14.623137: This epoch took 77.666497 s

2022-07-06 23:45:14.625785: 
epoch:  7
2022-07-06 23:46:22.058414: train loss : -0.4284
2022-07-06 23:46:34.069955: validation loss: -0.5137
2022-07-06 23:46:34.072783: Average global foreground Dice: [0.6077]
2022-07-06 23:46:34.074946: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:46:34.466139: Suus1 maybe_update_lr lr: 0.009856
2022-07-06 23:46:34.468345: saving best epoch checkpoint...
2022-07-06 23:46:34.542029: saving checkpoint...
2022-07-06 23:46:35.728888: done, saving took 1.26 seconds
2022-07-06 23:46:35.747735: This epoch took 81.119421 s

2022-07-06 23:46:35.749813: 
epoch:  8
2022-07-06 23:47:43.134034: train loss : -0.3997
2022-07-06 23:47:49.030287: validation loss: -0.4613
2022-07-06 23:47:49.035637: Average global foreground Dice: [0.5665]
2022-07-06 23:47:49.041998: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:47:49.465808: Suus1 maybe_update_lr lr: 0.009838
2022-07-06 23:47:49.468375: saving best epoch checkpoint...
2022-07-06 23:47:49.549410: saving checkpoint...
2022-07-06 23:47:50.682673: done, saving took 1.21 seconds
2022-07-06 23:47:50.701414: This epoch took 74.947587 s

2022-07-06 23:47:50.703531: 
epoch:  9
2022-07-06 23:48:58.117319: train loss : -0.4384
2022-07-06 23:49:04.682602: validation loss: -0.5180
2022-07-06 23:49:04.685701: Average global foreground Dice: [0.6098]
2022-07-06 23:49:04.687926: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:49:05.137046: Suus1 maybe_update_lr lr: 0.00982
2022-07-06 23:49:05.140077: saving best epoch checkpoint...
2022-07-06 23:49:05.195196: saving checkpoint...
2022-07-06 23:49:06.442190: done, saving took 1.30 seconds
2022-07-06 23:49:06.461483: This epoch took 75.755826 s

2022-07-06 23:49:06.463668: 
epoch:  10
2022-07-06 23:50:13.780354: train loss : -0.4726
2022-07-06 23:50:23.585525: validation loss: -0.5224
2022-07-06 23:50:23.588625: Average global foreground Dice: [0.6121]
2022-07-06 23:50:23.590940: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:50:24.074878: Suus1 maybe_update_lr lr: 0.009802
2022-07-06 23:50:24.077149: saving best epoch checkpoint...
2022-07-06 23:50:24.156060: saving checkpoint...
2022-07-06 23:50:25.457800: done, saving took 1.38 seconds
2022-07-06 23:50:25.476795: This epoch took 79.010752 s

2022-07-06 23:50:25.478939: 
epoch:  11
2022-07-06 23:51:32.749152: train loss : -0.5053
2022-07-06 23:51:40.130182: validation loss: -0.5301
2022-07-06 23:51:40.135555: Average global foreground Dice: [0.6246]
2022-07-06 23:51:40.138876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:51:40.598167: Suus1 maybe_update_lr lr: 0.009784
2022-07-06 23:51:40.600551: saving best epoch checkpoint...
2022-07-06 23:51:40.674638: saving checkpoint...
2022-07-06 23:51:41.953310: done, saving took 1.35 seconds
2022-07-06 23:51:41.972890: This epoch took 76.491750 s

2022-07-06 23:51:41.975183: 
epoch:  12
2022-07-06 23:52:49.465920: train loss : -0.4937
2022-07-06 23:52:55.133139: validation loss: -0.5748
2022-07-06 23:52:55.156427: Average global foreground Dice: [0.6497]
2022-07-06 23:52:55.174793: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:52:55.624378: Suus1 maybe_update_lr lr: 0.009766
2022-07-06 23:52:55.626621: saving best epoch checkpoint...
2022-07-06 23:52:55.701758: saving checkpoint...
2022-07-06 23:52:57.294253: done, saving took 1.67 seconds
2022-07-06 23:52:57.320307: This epoch took 75.342781 s

2022-07-06 23:52:57.322546: 
epoch:  13
2022-07-06 23:54:04.930485: train loss : -0.5223
2022-07-06 23:54:10.775938: validation loss: -0.5471
2022-07-06 23:54:10.814161: Average global foreground Dice: [0.6316]
2022-07-06 23:54:10.843097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:54:11.431090: Suus1 maybe_update_lr lr: 0.009748
2022-07-06 23:54:11.473001: saving best epoch checkpoint...
2022-07-06 23:54:11.563914: saving checkpoint...
2022-07-06 23:54:12.811487: done, saving took 1.29 seconds
2022-07-06 23:54:12.829291: This epoch took 75.504323 s

2022-07-06 23:54:12.831682: 
epoch:  14
2022-07-06 23:55:20.373057: train loss : -0.5069
2022-07-06 23:55:25.689877: validation loss: -0.4722
2022-07-06 23:55:25.693785: Average global foreground Dice: [0.5882]
2022-07-06 23:55:25.701446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:55:26.124467: Suus1 maybe_update_lr lr: 0.00973
2022-07-06 23:55:26.127118: saving best epoch checkpoint...
2022-07-06 23:55:26.191189: saving checkpoint...
2022-07-06 23:55:27.342079: done, saving took 1.21 seconds
2022-07-06 23:55:27.361104: This epoch took 74.527000 s

2022-07-06 23:55:27.363265: 
epoch:  15
2022-07-06 23:56:34.736916: train loss : -0.5173
2022-07-06 23:56:40.147599: validation loss: -0.5432
2022-07-06 23:56:40.150929: Average global foreground Dice: [0.6286]
2022-07-06 23:56:40.153336: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:56:40.561906: Suus1 maybe_update_lr lr: 0.009712
2022-07-06 23:56:40.566602: saving best epoch checkpoint...
2022-07-06 23:56:40.653710: saving checkpoint...
2022-07-06 23:56:41.791013: done, saving took 1.22 seconds
2022-07-06 23:56:41.813778: This epoch took 74.448439 s

2022-07-06 23:56:41.816037: 
epoch:  16
2022-07-06 23:57:49.533927: train loss : -0.5316
2022-07-06 23:57:55.321374: validation loss: -0.6216
2022-07-06 23:57:55.324695: Average global foreground Dice: [0.699]
2022-07-06 23:57:55.327140: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:57:55.741829: Suus1 maybe_update_lr lr: 0.009693
2022-07-06 23:57:55.744865: saving best epoch checkpoint...
2022-07-06 23:57:55.826303: saving checkpoint...
2022-07-06 23:57:57.267284: done, saving took 1.52 seconds
2022-07-06 23:57:57.288506: This epoch took 75.470485 s

2022-07-06 23:57:57.291159: 
epoch:  17
2022-07-06 23:59:05.009728: train loss : -0.5695
2022-07-06 23:59:12.322398: validation loss: -0.6030
2022-07-06 23:59:12.330689: Average global foreground Dice: [0.6794]
2022-07-06 23:59:12.333371: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-06 23:59:12.837062: Suus1 maybe_update_lr lr: 0.009675
2022-07-06 23:59:12.839733: saving best epoch checkpoint...
2022-07-06 23:59:12.935071: saving checkpoint...
2022-07-06 23:59:14.631592: done, saving took 1.79 seconds
2022-07-06 23:59:14.653724: This epoch took 77.360174 s

2022-07-06 23:59:14.657333: 
epoch:  18
2022-07-07 00:00:22.027182: train loss : -0.5849
2022-07-07 00:00:27.461872: validation loss: -0.5934
2022-07-07 00:00:27.484607: Average global foreground Dice: [0.6612]
2022-07-07 00:00:27.502289: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:00:28.135596: Suus1 maybe_update_lr lr: 0.009657
2022-07-07 00:00:28.139601: saving best epoch checkpoint...
2022-07-07 00:00:28.222684: saving checkpoint...
2022-07-07 00:00:29.456324: done, saving took 1.31 seconds
2022-07-07 00:00:29.481584: This epoch took 74.821148 s

2022-07-07 00:00:29.484143: 
epoch:  19
2022-07-07 00:01:37.068245: train loss : -0.5970
2022-07-07 00:01:41.633626: validation loss: -0.5925
2022-07-07 00:01:41.640837: Average global foreground Dice: [0.6768]
2022-07-07 00:01:41.644980: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:01:42.162952: Suus1 maybe_update_lr lr: 0.009639
2022-07-07 00:01:42.169617: saving best epoch checkpoint...
2022-07-07 00:01:42.282234: saving checkpoint...
2022-07-07 00:01:43.427976: done, saving took 1.26 seconds
2022-07-07 00:01:43.445981: This epoch took 73.959513 s

2022-07-07 00:01:43.448128: 
epoch:  20
2022-07-07 00:02:51.008883: train loss : -0.5727
2022-07-07 00:02:56.143026: validation loss: -0.6261
2022-07-07 00:02:56.171652: Average global foreground Dice: [0.6878]
2022-07-07 00:02:56.176713: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:02:56.856642: Suus1 maybe_update_lr lr: 0.009621
2022-07-07 00:02:56.868074: saving best epoch checkpoint...
2022-07-07 00:02:56.959293: saving checkpoint...
2022-07-07 00:02:58.405669: done, saving took 1.52 seconds
2022-07-07 00:02:58.419306: This epoch took 74.968878 s

2022-07-07 00:02:58.421382: 
epoch:  21
2022-07-07 00:04:06.060810: train loss : -0.5837
2022-07-07 00:04:10.707623: validation loss: -0.6540
2022-07-07 00:04:10.710548: Average global foreground Dice: [0.7231]
2022-07-07 00:04:10.713291: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:04:11.124964: Suus1 maybe_update_lr lr: 0.009603
2022-07-07 00:04:11.127449: saving best epoch checkpoint...
2022-07-07 00:04:11.161123: saving checkpoint...
2022-07-07 00:04:12.790817: done, saving took 1.66 seconds
2022-07-07 00:04:12.807120: This epoch took 74.383786 s

2022-07-07 00:04:12.810134: 
epoch:  22
2022-07-07 00:05:20.400274: train loss : -0.5904
2022-07-07 00:05:26.854603: validation loss: -0.5832
2022-07-07 00:05:26.890266: Average global foreground Dice: [0.6598]
2022-07-07 00:05:26.924261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:05:27.430189: Suus1 maybe_update_lr lr: 0.009585
2022-07-07 00:05:27.433122: saving best epoch checkpoint...
2022-07-07 00:05:27.511385: saving checkpoint...
2022-07-07 00:05:28.727347: done, saving took 1.26 seconds
2022-07-07 00:05:28.741325: This epoch took 75.928061 s

2022-07-07 00:05:28.743690: 
epoch:  23
2022-07-07 00:06:36.347842: train loss : -0.5912
2022-07-07 00:06:43.688699: validation loss: -0.6522
2022-07-07 00:06:43.691520: Average global foreground Dice: [0.7251]
2022-07-07 00:06:43.693577: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:06:44.155838: Suus1 maybe_update_lr lr: 0.009567
2022-07-07 00:06:44.158551: saving best epoch checkpoint...
2022-07-07 00:06:44.238211: saving checkpoint...
2022-07-07 00:06:45.410309: done, saving took 1.25 seconds
2022-07-07 00:06:45.423612: This epoch took 76.677722 s

2022-07-07 00:06:45.425802: 
epoch:  24
2022-07-07 00:07:52.955592: train loss : -0.6085
2022-07-07 00:07:57.305216: validation loss: -0.6566
2022-07-07 00:07:57.319363: Average global foreground Dice: [0.7195]
2022-07-07 00:07:57.321814: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:07:57.926744: Suus1 maybe_update_lr lr: 0.009549
2022-07-07 00:07:57.932908: saving best epoch checkpoint...
2022-07-07 00:07:58.018091: saving checkpoint...
2022-07-07 00:07:59.141623: done, saving took 1.19 seconds
2022-07-07 00:07:59.156430: This epoch took 73.728407 s

2022-07-07 00:07:59.158857: 
epoch:  25
2022-07-07 00:09:06.714059: train loss : -0.6164
2022-07-07 00:09:11.754307: validation loss: -0.6657
2022-07-07 00:09:11.757624: Average global foreground Dice: [0.7324]
2022-07-07 00:09:11.760336: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:09:12.222816: Suus1 maybe_update_lr lr: 0.009531
2022-07-07 00:09:12.233695: saving best epoch checkpoint...
2022-07-07 00:09:12.295233: saving checkpoint...
2022-07-07 00:09:13.645579: done, saving took 1.41 seconds
2022-07-07 00:09:13.664692: This epoch took 74.503648 s

2022-07-07 00:09:13.666999: 
epoch:  26
2022-07-07 00:10:21.261193: train loss : -0.6208
2022-07-07 00:10:26.530828: validation loss: -0.6526
2022-07-07 00:10:26.536606: Average global foreground Dice: [0.7195]
2022-07-07 00:10:26.553257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:10:27.057420: Suus1 maybe_update_lr lr: 0.009513
2022-07-07 00:10:27.062293: saving best epoch checkpoint...
2022-07-07 00:10:27.207647: saving checkpoint...
2022-07-07 00:10:28.673633: done, saving took 1.60 seconds
2022-07-07 00:10:28.693147: This epoch took 75.023744 s

2022-07-07 00:10:28.695539: 
epoch:  27
2022-07-07 00:11:36.212916: train loss : -0.6354
2022-07-07 00:11:40.732818: validation loss: -0.6709
2022-07-07 00:11:40.736404: Average global foreground Dice: [0.7408]
2022-07-07 00:11:40.743601: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:11:41.249466: Suus1 maybe_update_lr lr: 0.009495
2022-07-07 00:11:41.265348: saving best epoch checkpoint...
2022-07-07 00:11:41.381520: saving checkpoint...
2022-07-07 00:11:42.885410: done, saving took 1.60 seconds
2022-07-07 00:11:42.906912: This epoch took 74.209079 s

2022-07-07 00:11:42.909313: 
epoch:  28
2022-07-07 00:12:50.352091: train loss : -0.6488
2022-07-07 00:12:56.000344: validation loss: -0.6833
2022-07-07 00:12:56.003520: Average global foreground Dice: [0.7472]
2022-07-07 00:12:56.006119: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:12:56.613729: Suus1 maybe_update_lr lr: 0.009476
2022-07-07 00:12:56.626382: saving best epoch checkpoint...
2022-07-07 00:12:56.781811: saving checkpoint...
2022-07-07 00:12:58.171055: done, saving took 1.53 seconds
2022-07-07 00:12:58.193262: This epoch took 75.281693 s

2022-07-07 00:12:58.195580: 
epoch:  29
2022-07-07 00:14:05.667618: train loss : -0.6393
2022-07-07 00:14:10.761839: validation loss: -0.6634
2022-07-07 00:14:10.777079: Average global foreground Dice: [0.7273]
2022-07-07 00:14:10.789023: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:14:11.321927: Suus1 maybe_update_lr lr: 0.009458
2022-07-07 00:14:11.326259: saving best epoch checkpoint...
2022-07-07 00:14:11.364804: saving checkpoint...
2022-07-07 00:14:12.632719: done, saving took 1.30 seconds
2022-07-07 00:14:12.647328: This epoch took 74.449245 s

2022-07-07 00:14:12.649438: 
epoch:  30
2022-07-07 00:15:20.233926: train loss : -0.6391
2022-07-07 00:15:24.937961: validation loss: -0.6790
2022-07-07 00:15:24.941678: Average global foreground Dice: [0.7475]
2022-07-07 00:15:24.958069: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:15:25.534359: Suus1 maybe_update_lr lr: 0.00944
2022-07-07 00:15:25.551271: saving best epoch checkpoint...
2022-07-07 00:15:25.628664: saving checkpoint...
2022-07-07 00:15:27.103274: done, saving took 1.54 seconds
2022-07-07 00:15:27.118940: This epoch took 74.467465 s

2022-07-07 00:15:27.121505: 
epoch:  31
2022-07-07 00:16:34.627444: train loss : -0.6450
2022-07-07 00:16:39.297041: validation loss: -0.6620
2022-07-07 00:16:39.313810: Average global foreground Dice: [0.7243]
2022-07-07 00:16:39.316187: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:16:39.765287: Suus1 maybe_update_lr lr: 0.009422
2022-07-07 00:16:39.767842: saving best epoch checkpoint...
2022-07-07 00:16:39.813219: saving checkpoint...
2022-07-07 00:16:41.052447: done, saving took 1.28 seconds
2022-07-07 00:16:41.066216: This epoch took 73.942015 s

2022-07-07 00:16:41.068262: 
epoch:  32
2022-07-07 00:17:48.693265: train loss : -0.6342
2022-07-07 00:17:53.045741: validation loss: -0.6835
2022-07-07 00:17:53.050091: Average global foreground Dice: [0.7583]
2022-07-07 00:17:53.059950: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:17:53.542119: Suus1 maybe_update_lr lr: 0.009404
2022-07-07 00:17:53.545103: saving best epoch checkpoint...
2022-07-07 00:17:53.594756: saving checkpoint...
2022-07-07 00:17:54.889165: done, saving took 1.34 seconds
2022-07-07 00:17:54.903345: This epoch took 73.832987 s

2022-07-07 00:17:54.905977: 
epoch:  33
2022-07-07 00:19:02.459934: train loss : -0.6542
2022-07-07 00:19:07.013919: validation loss: -0.6520
2022-07-07 00:19:07.017718: Average global foreground Dice: [0.7172]
2022-07-07 00:19:07.020116: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:19:07.444071: Suus1 maybe_update_lr lr: 0.009386
2022-07-07 00:19:07.446771: saving best epoch checkpoint...
2022-07-07 00:19:07.490252: saving checkpoint...
2022-07-07 00:19:08.693151: done, saving took 1.24 seconds
2022-07-07 00:19:08.707667: This epoch took 73.799230 s

2022-07-07 00:19:08.709846: 
epoch:  34
2022-07-07 00:20:16.386999: train loss : -0.6623
2022-07-07 00:20:21.048615: validation loss: -0.6847
2022-07-07 00:20:21.052251: Average global foreground Dice: [0.7463]
2022-07-07 00:20:21.056715: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:20:21.646394: Suus1 maybe_update_lr lr: 0.009368
2022-07-07 00:20:21.668112: saving best epoch checkpoint...
2022-07-07 00:20:21.755764: saving checkpoint...
2022-07-07 00:20:23.188295: done, saving took 1.50 seconds
2022-07-07 00:20:23.203920: This epoch took 74.491597 s

2022-07-07 00:20:23.206183: 
epoch:  35
2022-07-07 00:21:30.790290: train loss : -0.6742
2022-07-07 00:21:35.532650: validation loss: -0.7160
2022-07-07 00:21:35.551762: Average global foreground Dice: [0.7738]
2022-07-07 00:21:35.562052: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:21:36.062701: Suus1 maybe_update_lr lr: 0.00935
2022-07-07 00:21:36.065157: saving best epoch checkpoint...
2022-07-07 00:21:36.110891: saving checkpoint...
2022-07-07 00:21:37.674985: done, saving took 1.61 seconds
2022-07-07 00:21:37.690209: This epoch took 74.481899 s

2022-07-07 00:21:37.692944: 
epoch:  36
2022-07-07 00:22:45.312865: train loss : -0.6664
2022-07-07 00:22:50.328296: validation loss: -0.6939
2022-07-07 00:22:50.333381: Average global foreground Dice: [0.7532]
2022-07-07 00:22:50.335738: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:22:50.805941: Suus1 maybe_update_lr lr: 0.009331
2022-07-07 00:22:50.808881: saving best epoch checkpoint...
2022-07-07 00:22:50.856010: saving checkpoint...
2022-07-07 00:22:52.093867: done, saving took 1.28 seconds
2022-07-07 00:22:52.111333: This epoch took 74.416215 s

2022-07-07 00:22:52.114876: 
epoch:  37
2022-07-07 00:23:59.681229: train loss : -0.6609
2022-07-07 00:24:03.995381: validation loss: -0.6888
2022-07-07 00:24:03.998693: Average global foreground Dice: [0.7504]
2022-07-07 00:24:04.001169: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:24:04.454832: Suus1 maybe_update_lr lr: 0.009313
2022-07-07 00:24:04.457233: saving best epoch checkpoint...
2022-07-07 00:24:04.491698: saving checkpoint...
2022-07-07 00:24:05.750439: done, saving took 1.29 seconds
2022-07-07 00:24:05.768729: This epoch took 73.651560 s

2022-07-07 00:24:05.779421: 
epoch:  38
2022-07-07 00:25:13.452367: train loss : -0.6868
2022-07-07 00:25:17.835873: validation loss: -0.7036
2022-07-07 00:25:17.870739: Average global foreground Dice: [0.7648]
2022-07-07 00:25:17.890476: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:25:18.419751: Suus1 maybe_update_lr lr: 0.009295
2022-07-07 00:25:18.422192: saving best epoch checkpoint...
2022-07-07 00:25:18.466666: saving checkpoint...
2022-07-07 00:25:19.555146: done, saving took 1.13 seconds
2022-07-07 00:25:19.570515: This epoch took 73.785822 s

2022-07-07 00:25:19.572754: 
epoch:  39
2022-07-07 00:26:27.189909: train loss : -0.6884
2022-07-07 00:26:31.727473: validation loss: -0.6936
2022-07-07 00:26:31.734596: Average global foreground Dice: [0.7561]
2022-07-07 00:26:31.747894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:26:32.326242: Suus1 maybe_update_lr lr: 0.009277
2022-07-07 00:26:32.330867: saving best epoch checkpoint...
2022-07-07 00:26:32.377384: saving checkpoint...
2022-07-07 00:26:33.709759: done, saving took 1.38 seconds
2022-07-07 00:26:33.726308: This epoch took 74.151332 s

2022-07-07 00:26:33.730517: 
epoch:  40
2022-07-07 00:27:41.240391: train loss : -0.6847
2022-07-07 00:27:45.915898: validation loss: -0.7152
2022-07-07 00:27:45.919053: Average global foreground Dice: [0.7724]
2022-07-07 00:27:45.921584: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:27:46.442883: Suus1 maybe_update_lr lr: 0.009259
2022-07-07 00:27:46.462247: saving best epoch checkpoint...
2022-07-07 00:27:46.504240: saving checkpoint...
2022-07-07 00:27:47.672480: done, saving took 1.21 seconds
2022-07-07 00:27:47.685782: This epoch took 73.952282 s

2022-07-07 00:27:47.687782: 
epoch:  41
2022-07-07 00:28:55.283541: train loss : -0.6697
2022-07-07 00:28:59.581087: validation loss: -0.7168
2022-07-07 00:28:59.584489: Average global foreground Dice: [0.7715]
2022-07-07 00:28:59.587006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:29:00.151828: Suus1 maybe_update_lr lr: 0.009241
2022-07-07 00:29:00.169152: saving best epoch checkpoint...
2022-07-07 00:29:00.243208: saving checkpoint...
2022-07-07 00:29:01.944832: done, saving took 1.76 seconds
2022-07-07 00:29:01.961160: This epoch took 74.271352 s

2022-07-07 00:29:01.963737: 
epoch:  42
2022-07-07 00:30:09.525801: train loss : -0.6826
2022-07-07 00:30:14.048028: validation loss: -0.7172
2022-07-07 00:30:14.058211: Average global foreground Dice: [0.7754]
2022-07-07 00:30:14.068213: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:30:14.573962: Suus1 maybe_update_lr lr: 0.009223
2022-07-07 00:30:14.577552: saving best epoch checkpoint...
2022-07-07 00:30:14.626084: saving checkpoint...
2022-07-07 00:30:16.511412: done, saving took 1.93 seconds
2022-07-07 00:30:16.528117: This epoch took 74.561536 s

2022-07-07 00:30:16.531001: 
epoch:  43
2022-07-07 00:31:24.046883: train loss : -0.7083
2022-07-07 00:31:28.670912: validation loss: -0.7142
2022-07-07 00:31:28.685037: Average global foreground Dice: [0.7701]
2022-07-07 00:31:28.700892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:31:29.345419: Suus1 maybe_update_lr lr: 0.009204
2022-07-07 00:31:29.348198: saving best epoch checkpoint...
2022-07-07 00:31:29.395752: saving checkpoint...
2022-07-07 00:31:30.787991: done, saving took 1.44 seconds
2022-07-07 00:31:30.804024: This epoch took 74.270483 s

2022-07-07 00:31:30.806648: 
epoch:  44
2022-07-07 00:32:38.398417: train loss : -0.6852
2022-07-07 00:32:43.040395: validation loss: -0.7035
2022-07-07 00:32:43.048338: Average global foreground Dice: [0.7577]
2022-07-07 00:32:43.050852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:32:43.741678: Suus1 maybe_update_lr lr: 0.009186
2022-07-07 00:32:43.745204: saving best epoch checkpoint...
2022-07-07 00:32:43.791205: saving checkpoint...
2022-07-07 00:32:45.410919: done, saving took 1.66 seconds
2022-07-07 00:32:45.426578: This epoch took 74.617036 s

2022-07-07 00:32:45.428941: 
epoch:  45
2022-07-07 00:33:52.997002: train loss : -0.6835
2022-07-07 00:33:57.894442: validation loss: -0.6949
2022-07-07 00:33:57.905407: Average global foreground Dice: [0.7606]
2022-07-07 00:33:57.917803: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:33:58.460013: Suus1 maybe_update_lr lr: 0.009168
2022-07-07 00:33:58.465237: saving best epoch checkpoint...
2022-07-07 00:33:58.502628: saving checkpoint...
2022-07-07 00:33:59.898958: done, saving took 1.43 seconds
2022-07-07 00:33:59.914115: This epoch took 74.483153 s

2022-07-07 00:33:59.916370: 
epoch:  46
2022-07-07 00:35:07.374844: train loss : -0.6797
2022-07-07 00:35:12.035461: validation loss: -0.7285
2022-07-07 00:35:12.052645: Average global foreground Dice: [0.7736]
2022-07-07 00:35:12.066244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:35:12.542816: Suus1 maybe_update_lr lr: 0.00915
2022-07-07 00:35:12.579274: saving best epoch checkpoint...
2022-07-07 00:35:12.654995: saving checkpoint...
2022-07-07 00:35:14.265089: done, saving took 1.66 seconds
2022-07-07 00:35:14.280278: This epoch took 74.361742 s

2022-07-07 00:35:14.282756: 
epoch:  47
2022-07-07 00:36:21.914435: train loss : -0.6982
2022-07-07 00:36:26.559003: validation loss: -0.6984
2022-07-07 00:36:26.580052: Average global foreground Dice: [0.7578]
2022-07-07 00:36:26.583423: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:36:27.109438: Suus1 maybe_update_lr lr: 0.009132
2022-07-07 00:36:27.113250: saving best epoch checkpoint...
2022-07-07 00:36:27.158024: saving checkpoint...
2022-07-07 00:36:28.882931: done, saving took 1.77 seconds
2022-07-07 00:36:28.900618: This epoch took 74.615167 s

2022-07-07 00:36:28.903433: 
epoch:  48
2022-07-07 00:37:36.506169: train loss : -0.7004
2022-07-07 00:37:41.257156: validation loss: -0.6737
2022-07-07 00:37:41.278561: Average global foreground Dice: [0.7335]
2022-07-07 00:37:41.288871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:37:41.862039: Suus1 maybe_update_lr lr: 0.009114
2022-07-07 00:37:41.873659: This epoch took 72.967283 s

2022-07-07 00:37:41.886591: 
epoch:  49
2022-07-07 00:38:49.550745: train loss : -0.6932
2022-07-07 00:38:53.902131: validation loss: -0.7082
2022-07-07 00:38:53.912964: Average global foreground Dice: [0.7685]
2022-07-07 00:38:53.923858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:38:54.434762: Suus1 maybe_update_lr lr: 0.009095
2022-07-07 00:38:54.437490: saving scheduled checkpoint file...
2022-07-07 00:38:54.482403: saving checkpoint...
2022-07-07 00:38:56.100369: done, saving took 1.66 seconds
2022-07-07 00:38:56.117005: done
2022-07-07 00:38:56.120062: saving best epoch checkpoint...
2022-07-07 00:38:56.142823: saving checkpoint...
2022-07-07 00:38:57.806107: done, saving took 1.68 seconds
2022-07-07 00:38:57.822800: This epoch took 75.918285 s

2022-07-07 00:38:57.825673: 
epoch:  50
2022-07-07 00:40:05.288625: train loss : -0.7045
2022-07-07 00:40:09.973470: validation loss: -0.6882
2022-07-07 00:40:09.983098: Average global foreground Dice: [0.7739]
2022-07-07 00:40:09.988642: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:40:10.465642: Suus1 maybe_update_lr lr: 0.009077
2022-07-07 00:40:10.468154: saving best epoch checkpoint...
2022-07-07 00:40:10.515522: saving checkpoint...
2022-07-07 00:40:11.947940: done, saving took 1.48 seconds
2022-07-07 00:40:11.964310: This epoch took 74.136112 s

2022-07-07 00:40:11.966730: 
epoch:  51
2022-07-07 00:41:19.613047: train loss : -0.7101
2022-07-07 00:41:24.014596: validation loss: -0.6941
2022-07-07 00:41:24.043616: Average global foreground Dice: [0.7582]
2022-07-07 00:41:24.051129: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:41:24.654422: Suus1 maybe_update_lr lr: 0.009059
2022-07-07 00:41:24.679263: saving best epoch checkpoint...
2022-07-07 00:41:24.751086: saving checkpoint...
2022-07-07 00:41:26.454653: done, saving took 1.75 seconds
2022-07-07 00:41:26.469762: This epoch took 74.500743 s

2022-07-07 00:41:26.472437: 
epoch:  52
2022-07-07 00:42:34.054858: train loss : -0.6969
2022-07-07 00:42:38.640018: validation loss: -0.7014
2022-07-07 00:42:38.651988: Average global foreground Dice: [0.7623]
2022-07-07 00:42:38.654534: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:42:39.122733: Suus1 maybe_update_lr lr: 0.009041
2022-07-07 00:42:39.125641: saving best epoch checkpoint...
2022-07-07 00:42:39.191721: saving checkpoint...
2022-07-07 00:42:40.967589: done, saving took 1.84 seconds
2022-07-07 00:42:40.984039: This epoch took 74.509239 s

2022-07-07 00:42:40.986451: 
epoch:  53
2022-07-07 00:43:48.534145: train loss : -0.7057
2022-07-07 00:43:53.052318: validation loss: -0.7199
2022-07-07 00:43:53.055391: Average global foreground Dice: [0.7709]
2022-07-07 00:43:53.061002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:43:53.617366: Suus1 maybe_update_lr lr: 0.009023
2022-07-07 00:43:53.642392: saving best epoch checkpoint...
2022-07-07 00:43:53.685689: saving checkpoint...
2022-07-07 00:43:54.933461: done, saving took 1.29 seconds
2022-07-07 00:43:54.947797: This epoch took 73.958825 s

2022-07-07 00:43:54.949948: 
epoch:  54
2022-07-07 00:45:02.598801: train loss : -0.7054
2022-07-07 00:45:07.211350: validation loss: -0.7343
2022-07-07 00:45:07.217867: Average global foreground Dice: [0.7852]
2022-07-07 00:45:07.236362: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:45:07.769308: Suus1 maybe_update_lr lr: 0.009004
2022-07-07 00:45:07.771540: saving best epoch checkpoint...
2022-07-07 00:45:07.819679: saving checkpoint...
2022-07-07 00:45:09.270674: done, saving took 1.48 seconds
2022-07-07 00:45:09.287074: This epoch took 74.335011 s

2022-07-07 00:45:09.289886: 
epoch:  55
2022-07-07 00:46:16.867914: train loss : -0.7107
2022-07-07 00:46:21.333919: validation loss: -0.7137
2022-07-07 00:46:21.337895: Average global foreground Dice: [0.7712]
2022-07-07 00:46:21.343268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:46:21.818888: Suus1 maybe_update_lr lr: 0.008986
2022-07-07 00:46:21.822011: saving best epoch checkpoint...
2022-07-07 00:46:21.865313: saving checkpoint...
2022-07-07 00:46:23.391405: done, saving took 1.57 seconds
2022-07-07 00:46:23.406392: This epoch took 74.113703 s

2022-07-07 00:46:23.408624: 
epoch:  56
2022-07-07 00:47:31.011510: train loss : -0.7182
2022-07-07 00:47:35.499734: validation loss: -0.7280
2022-07-07 00:47:35.526569: Average global foreground Dice: [0.7875]
2022-07-07 00:47:35.542540: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:47:36.006192: Suus1 maybe_update_lr lr: 0.008968
2022-07-07 00:47:36.014605: saving best epoch checkpoint...
2022-07-07 00:47:36.065730: saving checkpoint...
2022-07-07 00:47:38.141971: done, saving took 2.12 seconds
2022-07-07 00:47:38.159524: This epoch took 74.748798 s

2022-07-07 00:47:38.162858: 
epoch:  57
2022-07-07 00:48:45.707762: train loss : -0.7105
2022-07-07 00:48:50.321862: validation loss: -0.6897
2022-07-07 00:48:50.379320: Average global foreground Dice: [0.7476]
2022-07-07 00:48:50.395501: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:48:50.964468: Suus1 maybe_update_lr lr: 0.00895
2022-07-07 00:48:50.975093: This epoch took 72.809176 s

2022-07-07 00:48:50.979951: 
epoch:  58
2022-07-07 00:49:58.653313: train loss : -0.7206
2022-07-07 00:50:03.016090: validation loss: -0.7230
2022-07-07 00:50:03.024786: Average global foreground Dice: [0.7831]
2022-07-07 00:50:03.045020: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:50:03.505754: Suus1 maybe_update_lr lr: 0.008931
2022-07-07 00:50:03.508847: saving best epoch checkpoint...
2022-07-07 00:50:03.560723: saving checkpoint...
2022-07-07 00:50:05.392459: done, saving took 1.88 seconds
2022-07-07 00:50:05.411052: This epoch took 74.402609 s

2022-07-07 00:50:05.413845: 
epoch:  59
2022-07-07 00:51:13.072569: train loss : -0.7116
2022-07-07 00:51:19.420266: validation loss: -0.7380
2022-07-07 00:51:19.434602: Average global foreground Dice: [0.7908]
2022-07-07 00:51:19.437221: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:51:19.896454: Suus1 maybe_update_lr lr: 0.008913
2022-07-07 00:51:19.899169: saving best epoch checkpoint...
2022-07-07 00:51:19.944782: saving checkpoint...
2022-07-07 00:51:21.250962: done, saving took 1.35 seconds
2022-07-07 00:51:21.264582: This epoch took 75.848044 s

2022-07-07 00:51:21.266662: 
epoch:  60
2022-07-07 00:52:29.002004: train loss : -0.7189
2022-07-07 00:52:33.657675: validation loss: -0.7519
2022-07-07 00:52:33.663924: Average global foreground Dice: [0.7993]
2022-07-07 00:52:33.670089: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:52:34.143506: Suus1 maybe_update_lr lr: 0.008895
2022-07-07 00:52:34.161163: saving best epoch checkpoint...
2022-07-07 00:52:34.211636: saving checkpoint...
2022-07-07 00:52:35.697234: done, saving took 1.53 seconds
2022-07-07 00:52:35.713412: This epoch took 74.444425 s

2022-07-07 00:52:35.716318: 
epoch:  61
2022-07-07 00:53:43.266786: train loss : -0.7183
2022-07-07 00:53:47.720064: validation loss: -0.7361
2022-07-07 00:53:47.732597: Average global foreground Dice: [0.7937]
2022-07-07 00:53:47.748520: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:53:48.242156: Suus1 maybe_update_lr lr: 0.008877
2022-07-07 00:53:48.244848: saving best epoch checkpoint...
2022-07-07 00:53:48.285354: saving checkpoint...
2022-07-07 00:53:49.721131: done, saving took 1.47 seconds
2022-07-07 00:53:49.735579: This epoch took 74.016761 s

2022-07-07 00:53:49.737940: 
epoch:  62
2022-07-07 00:54:57.366397: train loss : -0.7211
2022-07-07 00:55:02.002199: validation loss: -0.7276
2022-07-07 00:55:02.015724: Average global foreground Dice: [0.7825]
2022-07-07 00:55:02.041769: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:55:02.564147: Suus1 maybe_update_lr lr: 0.008859
2022-07-07 00:55:02.577627: saving best epoch checkpoint...
2022-07-07 00:55:02.625224: saving checkpoint...
2022-07-07 00:55:03.920670: done, saving took 1.34 seconds
2022-07-07 00:55:03.935684: This epoch took 74.195023 s

2022-07-07 00:55:03.938025: 
epoch:  63
2022-07-07 00:56:11.491976: train loss : -0.7192
2022-07-07 00:56:15.942582: validation loss: -0.7385
2022-07-07 00:56:15.975643: Average global foreground Dice: [0.7954]
2022-07-07 00:56:15.997258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:56:16.561778: Suus1 maybe_update_lr lr: 0.00884
2022-07-07 00:56:16.571141: saving best epoch checkpoint...
2022-07-07 00:56:16.619419: saving checkpoint...
2022-07-07 00:56:17.985157: done, saving took 1.41 seconds
2022-07-07 00:56:18.000882: This epoch took 74.060325 s

2022-07-07 00:56:18.003607: 
epoch:  64
2022-07-07 00:57:25.577433: train loss : -0.7399
2022-07-07 00:57:30.191951: validation loss: -0.7417
2022-07-07 00:57:30.228101: Average global foreground Dice: [0.7898]
2022-07-07 00:57:30.241596: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:57:30.752873: Suus1 maybe_update_lr lr: 0.008822
2022-07-07 00:57:30.755846: saving best epoch checkpoint...
2022-07-07 00:57:30.794774: saving checkpoint...
2022-07-07 00:57:32.052246: done, saving took 1.29 seconds
2022-07-07 00:57:32.066776: This epoch took 74.060715 s

2022-07-07 00:57:32.069216: 
epoch:  65
2022-07-07 00:58:39.693775: train loss : -0.7400
2022-07-07 00:58:44.233804: validation loss: -0.7243
2022-07-07 00:58:44.240635: Average global foreground Dice: [0.7866]
2022-07-07 00:58:44.243338: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:58:44.743818: Suus1 maybe_update_lr lr: 0.008804
2022-07-07 00:58:44.766268: saving best epoch checkpoint...
2022-07-07 00:58:44.840830: saving checkpoint...
2022-07-07 00:58:46.273246: done, saving took 1.48 seconds
2022-07-07 00:58:46.289361: This epoch took 74.217885 s

2022-07-07 00:58:46.291655: 
epoch:  66
2022-07-07 00:59:53.990655: train loss : -0.7442
2022-07-07 00:59:58.479661: validation loss: -0.7331
2022-07-07 00:59:58.509614: Average global foreground Dice: [0.7802]
2022-07-07 00:59:58.538257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 00:59:59.059693: Suus1 maybe_update_lr lr: 0.008785
2022-07-07 00:59:59.092259: saving best epoch checkpoint...
2022-07-07 00:59:59.195892: saving checkpoint...
2022-07-07 01:00:00.507845: done, saving took 1.36 seconds
2022-07-07 01:00:00.523404: This epoch took 74.229327 s

2022-07-07 01:00:00.526122: 
epoch:  67
2022-07-07 01:01:08.076439: train loss : -0.7441
2022-07-07 01:01:12.519723: validation loss: -0.7378
2022-07-07 01:01:12.523160: Average global foreground Dice: [0.7908]
2022-07-07 01:01:12.525769: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:01:13.188696: Suus1 maybe_update_lr lr: 0.008767
2022-07-07 01:01:13.210267: saving best epoch checkpoint...
2022-07-07 01:01:13.301120: saving checkpoint...
2022-07-07 01:01:14.804931: done, saving took 1.57 seconds
2022-07-07 01:01:14.820549: This epoch took 74.292187 s

2022-07-07 01:01:14.822888: 
epoch:  68
2022-07-07 01:02:22.462947: train loss : -0.7399
2022-07-07 01:02:26.962953: validation loss: -0.7558
2022-07-07 01:02:26.966031: Average global foreground Dice: [0.8002]
2022-07-07 01:02:26.968325: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:02:27.509786: Suus1 maybe_update_lr lr: 0.008749
2022-07-07 01:02:27.532269: saving best epoch checkpoint...
2022-07-07 01:02:27.621886: saving checkpoint...
2022-07-07 01:02:28.974275: done, saving took 1.42 seconds
2022-07-07 01:02:28.989555: This epoch took 74.164126 s

2022-07-07 01:02:28.992199: 
epoch:  69
2022-07-07 01:03:36.747430: train loss : -0.7272
2022-07-07 01:03:41.438545: validation loss: -0.7646
2022-07-07 01:03:41.442006: Average global foreground Dice: [0.8104]
2022-07-07 01:03:41.456707: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:03:42.129175: Suus1 maybe_update_lr lr: 0.008731
2022-07-07 01:03:42.134109: saving best epoch checkpoint...
2022-07-07 01:03:42.201041: saving checkpoint...
2022-07-07 01:03:43.767727: done, saving took 1.61 seconds
2022-07-07 01:03:43.912575: This epoch took 74.918051 s

2022-07-07 01:03:43.915527: 
epoch:  70
2022-07-07 01:04:51.612801: train loss : -0.7410
2022-07-07 01:04:56.135202: validation loss: -0.7483
2022-07-07 01:04:56.163574: Average global foreground Dice: [0.8087]
2022-07-07 01:04:56.174641: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:04:56.761988: Suus1 maybe_update_lr lr: 0.008712
2022-07-07 01:04:56.764523: saving best epoch checkpoint...
2022-07-07 01:04:56.807920: saving checkpoint...
2022-07-07 01:04:57.990149: done, saving took 1.22 seconds
2022-07-07 01:04:58.004238: This epoch took 74.085962 s

2022-07-07 01:04:58.006436: 
epoch:  71
2022-07-07 01:06:05.608945: train loss : -0.7255
2022-07-07 01:06:10.431056: validation loss: -0.7242
2022-07-07 01:06:10.460623: Average global foreground Dice: [0.7726]
2022-07-07 01:06:10.480246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:06:11.113594: Suus1 maybe_update_lr lr: 0.008694
2022-07-07 01:06:11.116143: This epoch took 73.107541 s

2022-07-07 01:06:11.119039: 
epoch:  72
2022-07-07 01:07:18.824155: train loss : -0.7300
2022-07-07 01:07:24.095460: validation loss: -0.6926
2022-07-07 01:07:24.150801: Average global foreground Dice: [0.7644]
2022-07-07 01:07:24.164116: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:07:24.782099: Suus1 maybe_update_lr lr: 0.008676
2022-07-07 01:07:24.784733: This epoch took 73.655804 s

2022-07-07 01:07:24.787192: 
epoch:  73
2022-07-07 01:08:32.398767: train loss : -0.7316
2022-07-07 01:08:36.988061: validation loss: -0.7305
2022-07-07 01:08:37.021589: Average global foreground Dice: [0.794]
2022-07-07 01:08:37.043258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:08:37.592382: Suus1 maybe_update_lr lr: 0.008658
2022-07-07 01:08:37.598192: This epoch took 72.808515 s

2022-07-07 01:08:37.615583: 
epoch:  74
2022-07-07 01:09:45.344213: train loss : -0.7345
2022-07-07 01:09:50.109015: validation loss: -0.7292
2022-07-07 01:09:50.113394: Average global foreground Dice: [0.7747]
2022-07-07 01:09:50.135665: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:09:50.715672: Suus1 maybe_update_lr lr: 0.008639
2022-07-07 01:09:50.732267: This epoch took 73.111471 s

2022-07-07 01:09:50.741042: 
epoch:  75
2022-07-07 01:10:58.488642: train loss : -0.7295
2022-07-07 01:11:03.238588: validation loss: -0.7316
2022-07-07 01:11:03.260620: Average global foreground Dice: [0.7875]
2022-07-07 01:11:03.275251: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:11:03.876727: Suus1 maybe_update_lr lr: 0.008621
2022-07-07 01:11:03.884211: This epoch took 73.132934 s

2022-07-07 01:11:03.893239: 
epoch:  76
2022-07-07 01:12:11.525592: train loss : -0.7444
2022-07-07 01:12:16.064930: validation loss: -0.7502
2022-07-07 01:12:16.076269: Average global foreground Dice: [0.8018]
2022-07-07 01:12:16.083376: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:12:16.569966: Suus1 maybe_update_lr lr: 0.008603
2022-07-07 01:12:16.574100: This epoch took 72.675735 s

2022-07-07 01:12:16.602636: 
epoch:  77
2022-07-07 01:13:24.377765: train loss : -0.7295
2022-07-07 01:13:29.072919: validation loss: -0.7587
2022-07-07 01:13:29.099765: Average global foreground Dice: [0.8008]
2022-07-07 01:13:29.119996: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:13:29.642628: Suus1 maybe_update_lr lr: 0.008584
2022-07-07 01:13:29.659637: saving best epoch checkpoint...
2022-07-07 01:13:29.713703: saving checkpoint...
2022-07-07 01:13:31.108580: done, saving took 1.44 seconds
2022-07-07 01:13:31.124850: This epoch took 74.496357 s

2022-07-07 01:13:31.127677: 
epoch:  78
2022-07-07 01:14:38.696355: train loss : -0.7468
2022-07-07 01:14:43.307383: validation loss: -0.7526
2022-07-07 01:14:43.348622: Average global foreground Dice: [0.8048]
2022-07-07 01:14:43.365560: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:14:43.844704: Suus1 maybe_update_lr lr: 0.008566
2022-07-07 01:14:43.864880: saving best epoch checkpoint...
2022-07-07 01:14:43.922820: saving checkpoint...
2022-07-07 01:14:45.181565: done, saving took 1.30 seconds
2022-07-07 01:14:45.196574: This epoch took 74.066405 s

2022-07-07 01:14:45.198721: 
epoch:  79
2022-07-07 01:15:52.841980: train loss : -0.7201
2022-07-07 01:15:57.558981: validation loss: -0.7248
2022-07-07 01:15:57.579075: Average global foreground Dice: [0.7861]
2022-07-07 01:15:57.590712: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:15:58.178488: Suus1 maybe_update_lr lr: 0.008548
2022-07-07 01:15:58.195963: This epoch took 72.994918 s

2022-07-07 01:15:58.217257: 
epoch:  80
2022-07-07 01:17:05.799461: train loss : -0.7320
2022-07-07 01:17:10.353074: validation loss: -0.7695
2022-07-07 01:17:10.389581: Average global foreground Dice: [0.8149]
2022-07-07 01:17:10.413277: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:17:11.023525: Suus1 maybe_update_lr lr: 0.008529
2022-07-07 01:17:11.044256: saving best epoch checkpoint...
2022-07-07 01:17:11.125283: saving checkpoint...
2022-07-07 01:17:12.347501: done, saving took 1.28 seconds
2022-07-07 01:17:12.362654: This epoch took 74.127401 s

2022-07-07 01:17:12.365228: 
epoch:  81
2022-07-07 01:18:19.992867: train loss : -0.7285
2022-07-07 01:18:24.488132: validation loss: -0.7509
2022-07-07 01:18:24.498208: Average global foreground Dice: [0.8075]
2022-07-07 01:18:24.501045: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:18:25.128791: Suus1 maybe_update_lr lr: 0.008511
2022-07-07 01:18:25.132851: saving best epoch checkpoint...
2022-07-07 01:18:25.178068: saving checkpoint...
2022-07-07 01:18:26.490756: done, saving took 1.36 seconds
2022-07-07 01:18:26.506997: This epoch took 74.139583 s

2022-07-07 01:18:26.508938: 
epoch:  82
2022-07-07 01:19:34.041247: train loss : -0.7260
2022-07-07 01:19:38.867474: validation loss: -0.7491
2022-07-07 01:19:38.877596: Average global foreground Dice: [0.801]
2022-07-07 01:19:38.882441: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:19:39.429246: Suus1 maybe_update_lr lr: 0.008493
2022-07-07 01:19:39.435362: saving best epoch checkpoint...
2022-07-07 01:19:39.482780: saving checkpoint...
2022-07-07 01:19:40.957263: done, saving took 1.51 seconds
2022-07-07 01:19:40.973139: This epoch took 74.461126 s

2022-07-07 01:19:40.975875: 
epoch:  83
2022-07-07 01:20:48.633703: train loss : -0.7230
2022-07-07 01:20:53.147865: validation loss: -0.7575
2022-07-07 01:20:53.168117: Average global foreground Dice: [0.8068]
2022-07-07 01:20:53.179920: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:20:53.875764: Suus1 maybe_update_lr lr: 0.008474
2022-07-07 01:20:53.902990: saving best epoch checkpoint...
2022-07-07 01:20:53.951844: saving checkpoint...
2022-07-07 01:20:55.489377: done, saving took 1.58 seconds
2022-07-07 01:20:55.505630: This epoch took 74.527093 s

2022-07-07 01:20:55.507898: 
epoch:  84
2022-07-07 01:22:03.043693: train loss : -0.7446
2022-07-07 01:22:07.805182: validation loss: -0.7356
2022-07-07 01:22:07.819197: Average global foreground Dice: [0.7934]
2022-07-07 01:22:07.835234: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:22:08.354485: Suus1 maybe_update_lr lr: 0.008456
2022-07-07 01:22:08.357236: This epoch took 72.846891 s

2022-07-07 01:22:08.359705: 
epoch:  85
2022-07-07 01:23:16.011624: train loss : -0.7503
2022-07-07 01:23:20.517504: validation loss: -0.7374
2022-07-07 01:23:20.523167: Average global foreground Dice: [0.7836]
2022-07-07 01:23:20.534140: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:23:21.271720: Suus1 maybe_update_lr lr: 0.008438
2022-07-07 01:23:21.274322: This epoch took 72.911875 s

2022-07-07 01:23:21.276350: 
epoch:  86
2022-07-07 01:24:28.943840: train loss : -0.7312
2022-07-07 01:24:33.728003: validation loss: -0.7266
2022-07-07 01:24:33.734934: Average global foreground Dice: [0.7824]
2022-07-07 01:24:33.749235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:24:34.357456: Suus1 maybe_update_lr lr: 0.008419
2022-07-07 01:24:34.364979: This epoch took 73.086378 s

2022-07-07 01:24:34.367314: 
epoch:  87
2022-07-07 01:25:41.980644: train loss : -0.7449
2022-07-07 01:25:46.805068: validation loss: -0.7363
2022-07-07 01:25:46.835265: Average global foreground Dice: [0.7865]
2022-07-07 01:25:46.858238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:25:47.500458: Suus1 maybe_update_lr lr: 0.008401
2022-07-07 01:25:47.525620: This epoch took 73.156154 s

2022-07-07 01:25:47.540349: 
epoch:  88
2022-07-07 01:26:55.276852: train loss : -0.7442
2022-07-07 01:27:00.211934: validation loss: -0.7318
2022-07-07 01:27:00.223228: Average global foreground Dice: [0.7856]
2022-07-07 01:27:00.249812: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:27:00.791340: Suus1 maybe_update_lr lr: 0.008383
2022-07-07 01:27:00.801223: This epoch took 73.238991 s

2022-07-07 01:27:00.812283: 
epoch:  89
2022-07-07 01:28:08.558590: train loss : -0.7376
2022-07-07 01:28:13.144899: validation loss: -0.7372
2022-07-07 01:28:13.185739: Average global foreground Dice: [0.7906]
2022-07-07 01:28:13.211956: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:28:13.762551: Suus1 maybe_update_lr lr: 0.008364
2022-07-07 01:28:13.767897: This epoch took 72.935648 s

2022-07-07 01:28:13.770368: 
epoch:  90
2022-07-07 01:29:21.567314: train loss : -0.7339
2022-07-07 01:29:26.605532: validation loss: -0.7382
2022-07-07 01:29:26.613572: Average global foreground Dice: [0.7913]
2022-07-07 01:29:26.638849: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:29:27.220515: Suus1 maybe_update_lr lr: 0.008346
2022-07-07 01:29:27.223999: This epoch took 73.451181 s

2022-07-07 01:29:27.228606: 
epoch:  91
2022-07-07 01:30:34.835514: train loss : -0.7562
2022-07-07 01:30:39.256941: validation loss: -0.7612
2022-07-07 01:30:39.274354: Average global foreground Dice: [0.8093]
2022-07-07 01:30:39.276821: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:30:39.766648: Suus1 maybe_update_lr lr: 0.008328
2022-07-07 01:30:39.770059: This epoch took 72.529053 s

2022-07-07 01:30:39.789248: 
epoch:  92
2022-07-07 01:31:47.592203: train loss : -0.7493
2022-07-07 01:31:52.106460: validation loss: -0.7306
2022-07-07 01:31:52.157915: Average global foreground Dice: [0.7892]
2022-07-07 01:31:52.180328: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:31:52.743090: Suus1 maybe_update_lr lr: 0.008309
2022-07-07 01:31:52.745707: This epoch took 72.933732 s

2022-07-07 01:31:52.748371: 
epoch:  93
2022-07-07 01:33:00.510428: train loss : -0.7486
2022-07-07 01:33:05.292026: validation loss: -0.7498
2022-07-07 01:33:05.307411: Average global foreground Dice: [0.8026]
2022-07-07 01:33:05.317974: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:33:05.825764: Suus1 maybe_update_lr lr: 0.008291
2022-07-07 01:33:05.828978: This epoch took 73.078119 s

2022-07-07 01:33:05.838778: 
epoch:  94
2022-07-07 01:34:13.514992: train loss : -0.7581
2022-07-07 01:34:18.241938: validation loss: -0.7306
2022-07-07 01:34:18.246939: Average global foreground Dice: [0.7886]
2022-07-07 01:34:18.251242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:34:18.775414: Suus1 maybe_update_lr lr: 0.008272
2022-07-07 01:34:18.791974: This epoch took 72.945480 s

2022-07-07 01:34:18.808620: 
epoch:  95
2022-07-07 01:35:26.473573: train loss : -0.7552
2022-07-07 01:35:31.107665: validation loss: -0.7658
2022-07-07 01:35:31.112195: Average global foreground Dice: [0.8089]
2022-07-07 01:35:31.115128: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:35:31.570555: Suus1 maybe_update_lr lr: 0.008254
2022-07-07 01:35:31.592185: This epoch took 72.775343 s

2022-07-07 01:35:31.605314: 
epoch:  96
2022-07-07 01:36:39.344353: train loss : -0.7412
2022-07-07 01:36:43.859614: validation loss: -0.7077
2022-07-07 01:36:43.871122: Average global foreground Dice: [0.7669]
2022-07-07 01:36:43.884052: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:36:44.457865: Suus1 maybe_update_lr lr: 0.008236
2022-07-07 01:36:44.462914: This epoch took 72.837688 s

2022-07-07 01:36:44.482994: 
epoch:  97
2022-07-07 01:37:52.176715: train loss : -0.7436
2022-07-07 01:37:56.732146: validation loss: -0.7227
2022-07-07 01:37:56.752576: Average global foreground Dice: [0.774]
2022-07-07 01:37:56.762000: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:37:57.388541: Suus1 maybe_update_lr lr: 0.008217
2022-07-07 01:37:57.399231: This epoch took 72.903302 s

2022-07-07 01:37:57.405179: 
epoch:  98
2022-07-07 01:39:05.141681: train loss : -0.7506
2022-07-07 01:39:09.881254: validation loss: -0.7531
2022-07-07 01:39:09.926598: Average global foreground Dice: [0.8098]
2022-07-07 01:39:09.941223: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:39:10.425687: Suus1 maybe_update_lr lr: 0.008199
2022-07-07 01:39:10.445267: This epoch took 73.037899 s

2022-07-07 01:39:10.467236: 
epoch:  99
2022-07-07 01:40:18.065733: train loss : -0.7497
2022-07-07 01:40:22.823395: validation loss: -0.7306
2022-07-07 01:40:22.871699: Average global foreground Dice: [0.7853]
2022-07-07 01:40:22.893227: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:40:23.471354: Suus1 maybe_update_lr lr: 0.008181
2022-07-07 01:40:23.498237: saving scheduled checkpoint file...
2022-07-07 01:40:23.591706: saving checkpoint...
2022-07-07 01:40:24.980392: done, saving took 1.46 seconds
2022-07-07 01:40:24.996960: done
2022-07-07 01:40:24.999331: This epoch took 74.515620 s

2022-07-07 01:40:25.001622: 
epoch:  100
2022-07-07 01:41:32.636640: train loss : -0.7416
2022-07-07 01:41:37.071896: validation loss: -0.7758
2022-07-07 01:41:37.077622: Average global foreground Dice: [0.8342]
2022-07-07 01:41:37.094525: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:41:37.907998: Suus1 maybe_update_lr lr: 0.008162
2022-07-07 01:41:37.917235: saving best epoch checkpoint...
2022-07-07 01:41:37.957951: saving checkpoint...
2022-07-07 01:41:39.208722: done, saving took 1.29 seconds
2022-07-07 01:41:39.224699: This epoch took 74.220903 s

2022-07-07 01:41:39.226983: 
epoch:  101
2022-07-07 01:42:46.775674: train loss : -0.7452
2022-07-07 01:42:51.120325: validation loss: -0.7389
2022-07-07 01:42:51.130243: Average global foreground Dice: [0.7866]
2022-07-07 01:42:51.143260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:42:51.645652: Suus1 maybe_update_lr lr: 0.008144
2022-07-07 01:42:51.648138: This epoch took 72.418989 s

2022-07-07 01:42:51.650431: 
epoch:  102
2022-07-07 01:43:59.229557: train loss : -0.7237
2022-07-07 01:44:03.953503: validation loss: -0.7350
2022-07-07 01:44:03.964425: Average global foreground Dice: [0.7806]
2022-07-07 01:44:03.971301: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:44:04.599866: Suus1 maybe_update_lr lr: 0.008125
2022-07-07 01:44:04.628279: This epoch took 72.975763 s

2022-07-07 01:44:04.654236: 
epoch:  103
2022-07-07 01:45:12.401598: train loss : -0.7419
2022-07-07 01:45:17.015624: validation loss: -0.7157
2022-07-07 01:45:17.032251: Average global foreground Dice: [0.7672]
2022-07-07 01:45:17.049994: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:45:17.596161: Suus1 maybe_update_lr lr: 0.008107
2022-07-07 01:45:17.598992: This epoch took 72.922762 s

2022-07-07 01:45:17.601223: 
epoch:  104
2022-07-07 01:46:25.198490: train loss : -0.7521
2022-07-07 01:46:29.714524: validation loss: -0.7486
2022-07-07 01:46:29.731416: Average global foreground Dice: [0.7928]
2022-07-07 01:46:29.737484: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:46:30.288591: Suus1 maybe_update_lr lr: 0.008088
2022-07-07 01:46:30.312348: This epoch took 72.708382 s

2022-07-07 01:46:30.328078: 
epoch:  105
2022-07-07 01:47:37.940951: train loss : -0.7506
2022-07-07 01:47:42.443410: validation loss: -0.7274
2022-07-07 01:47:42.455862: Average global foreground Dice: [0.7722]
2022-07-07 01:47:42.473929: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:47:43.017815: Suus1 maybe_update_lr lr: 0.00807
2022-07-07 01:47:43.020568: This epoch took 72.688664 s

2022-07-07 01:47:43.022949: 
epoch:  106
2022-07-07 01:48:50.588237: train loss : -0.7583
2022-07-07 01:48:55.100646: validation loss: -0.7437
2022-07-07 01:48:55.128668: Average global foreground Dice: [0.7907]
2022-07-07 01:48:55.131534: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:48:55.751509: Suus1 maybe_update_lr lr: 0.008052
2022-07-07 01:48:55.760697: This epoch took 72.735269 s

2022-07-07 01:48:55.770473: 
epoch:  107
2022-07-07 01:50:03.548899: train loss : -0.7281
2022-07-07 01:50:08.098067: validation loss: -0.7228
2022-07-07 01:50:08.124928: Average global foreground Dice: [0.7797]
2022-07-07 01:50:08.147320: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:50:08.664917: Suus1 maybe_update_lr lr: 0.008033
2022-07-07 01:50:08.684282: This epoch took 72.891914 s

2022-07-07 01:50:08.714242: 
epoch:  108
2022-07-07 01:51:16.436190: train loss : -0.7378
2022-07-07 01:51:20.891541: validation loss: -0.7294
2022-07-07 01:51:20.895080: Average global foreground Dice: [0.7866]
2022-07-07 01:51:20.897770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:51:21.479805: Suus1 maybe_update_lr lr: 0.008015
2022-07-07 01:51:21.482235: This epoch took 72.743994 s

2022-07-07 01:51:21.484548: 
epoch:  109
2022-07-07 01:52:29.183533: train loss : -0.7474
2022-07-07 01:52:33.781307: validation loss: -0.7213
2022-07-07 01:52:33.811593: Average global foreground Dice: [0.788]
2022-07-07 01:52:33.815455: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:52:34.395883: Suus1 maybe_update_lr lr: 0.007996
2022-07-07 01:52:34.398821: This epoch took 72.898590 s

2022-07-07 01:52:34.427244: 
epoch:  110
2022-07-07 01:53:42.059492: train loss : -0.7549
2022-07-07 01:53:46.804246: validation loss: -0.7566
2022-07-07 01:53:46.810401: Average global foreground Dice: [0.8052]
2022-07-07 01:53:46.821159: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:53:47.288665: Suus1 maybe_update_lr lr: 0.007978
2022-07-07 01:53:47.308518: This epoch took 72.859226 s

2022-07-07 01:53:47.335230: 
epoch:  111
2022-07-07 01:54:55.086198: train loss : -0.7591
2022-07-07 01:54:59.860685: validation loss: -0.7601
2022-07-07 01:54:59.878819: Average global foreground Dice: [0.8049]
2022-07-07 01:54:59.898494: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:55:00.485717: Suus1 maybe_update_lr lr: 0.007959
2022-07-07 01:55:00.496275: This epoch took 73.142430 s

2022-07-07 01:55:00.519233: 
epoch:  112
2022-07-07 01:56:08.181008: train loss : -0.7593
2022-07-07 01:56:12.963074: validation loss: -0.7605
2022-07-07 01:56:12.966416: Average global foreground Dice: [0.8057]
2022-07-07 01:56:12.968731: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:56:13.575754: Suus1 maybe_update_lr lr: 0.007941
2022-07-07 01:56:13.588032: This epoch took 73.042799 s

2022-07-07 01:56:13.610470: 
epoch:  113
2022-07-07 01:57:21.344721: train loss : -0.7721
2022-07-07 01:57:25.929088: validation loss: -0.7518
2022-07-07 01:57:25.933152: Average global foreground Dice: [0.8009]
2022-07-07 01:57:25.951374: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:57:26.478913: Suus1 maybe_update_lr lr: 0.007922
2022-07-07 01:57:26.496492: This epoch took 72.865020 s

2022-07-07 01:57:26.499511: 
epoch:  114
2022-07-07 01:58:34.192495: train loss : -0.7590
2022-07-07 01:58:38.794775: validation loss: -0.7258
2022-07-07 01:58:38.827612: Average global foreground Dice: [0.7889]
2022-07-07 01:58:38.834584: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:58:39.454740: Suus1 maybe_update_lr lr: 0.007904
2022-07-07 01:58:39.457520: This epoch took 72.948498 s

2022-07-07 01:58:39.477955: 
epoch:  115
2022-07-07 01:59:47.108675: train loss : -0.7583
2022-07-07 01:59:51.800611: validation loss: -0.7460
2022-07-07 01:59:51.844761: Average global foreground Dice: [0.7923]
2022-07-07 01:59:51.866238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 01:59:52.382466: Suus1 maybe_update_lr lr: 0.007885
2022-07-07 01:59:52.385803: This epoch took 72.905143 s

2022-07-07 01:59:52.390368: 
epoch:  116
2022-07-07 02:01:00.147876: train loss : -0.7599
2022-07-07 02:01:04.674845: validation loss: -0.7408
2022-07-07 02:01:04.681446: Average global foreground Dice: [0.7893]
2022-07-07 02:01:04.684340: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:01:05.302584: Suus1 maybe_update_lr lr: 0.007867
2022-07-07 02:01:05.324124: This epoch took 72.930824 s

2022-07-07 02:01:05.348242: 
epoch:  117
2022-07-07 02:02:13.045711: train loss : -0.7597
2022-07-07 02:02:17.599958: validation loss: -0.7374
2022-07-07 02:02:17.626430: Average global foreground Dice: [0.7889]
2022-07-07 02:02:17.656245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:02:18.201421: Suus1 maybe_update_lr lr: 0.007848
2022-07-07 02:02:18.205034: This epoch took 72.833801 s

2022-07-07 02:02:18.208408: 
epoch:  118
2022-07-07 02:03:25.879569: train loss : -0.7578
2022-07-07 02:03:30.653175: validation loss: -0.7549
2022-07-07 02:03:30.675928: Average global foreground Dice: [0.8063]
2022-07-07 02:03:30.696645: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:03:31.192895: Suus1 maybe_update_lr lr: 0.00783
2022-07-07 02:03:31.204373: This epoch took 72.992613 s

2022-07-07 02:03:31.232245: 
epoch:  119
2022-07-07 02:04:38.906060: train loss : -0.7658
2022-07-07 02:04:43.911889: validation loss: -0.7540
2022-07-07 02:04:43.931641: Average global foreground Dice: [0.8023]
2022-07-07 02:04:43.946384: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:04:44.430726: Suus1 maybe_update_lr lr: 0.007811
2022-07-07 02:04:44.438679: This epoch took 73.174435 s

2022-07-07 02:04:44.458692: 
epoch:  120
2022-07-07 02:05:52.360159: train loss : -0.7684
2022-07-07 02:05:56.885383: validation loss: -0.7592
2022-07-07 02:05:56.901293: Average global foreground Dice: [0.8112]
2022-07-07 02:05:56.928251: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:05:57.592435: Suus1 maybe_update_lr lr: 0.007793
2022-07-07 02:05:57.594954: saving best epoch checkpoint...
2022-07-07 02:05:57.644543: saving checkpoint...
2022-07-07 02:05:58.859546: done, saving took 1.26 seconds
2022-07-07 02:05:58.874417: This epoch took 74.395645 s

2022-07-07 02:05:58.876887: 
epoch:  121
2022-07-07 02:07:06.464713: train loss : -0.7725
2022-07-07 02:07:10.869148: validation loss: -0.7467
2022-07-07 02:07:10.902660: Average global foreground Dice: [0.8026]
2022-07-07 02:07:10.931587: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:07:11.476905: Suus1 maybe_update_lr lr: 0.007774
2022-07-07 02:07:11.479532: saving best epoch checkpoint...
2022-07-07 02:07:11.526548: saving checkpoint...
2022-07-07 02:07:12.751626: done, saving took 1.27 seconds
2022-07-07 02:07:12.769015: This epoch took 73.889206 s

2022-07-07 02:07:12.771492: 
epoch:  122
2022-07-07 02:08:20.310929: train loss : -0.7774
2022-07-07 02:08:24.982530: validation loss: -0.7434
2022-07-07 02:08:25.001257: Average global foreground Dice: [0.7957]
2022-07-07 02:08:25.011659: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:08:25.594094: Suus1 maybe_update_lr lr: 0.007756
2022-07-07 02:08:25.608921: This epoch took 72.835127 s

2022-07-07 02:08:25.618989: 
epoch:  123
2022-07-07 02:09:33.428804: train loss : -0.7674
2022-07-07 02:09:37.859706: validation loss: -0.7627
2022-07-07 02:09:37.888174: Average global foreground Dice: [0.8138]
2022-07-07 02:09:37.903615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:09:38.461458: Suus1 maybe_update_lr lr: 0.007737
2022-07-07 02:09:38.463786: saving best epoch checkpoint...
2022-07-07 02:09:38.502281: saving checkpoint...
2022-07-07 02:09:40.043566: done, saving took 1.58 seconds
2022-07-07 02:09:40.061332: This epoch took 74.431813 s

2022-07-07 02:09:40.063916: 
epoch:  124
2022-07-07 02:10:47.675692: train loss : -0.7700
2022-07-07 02:10:52.253108: validation loss: -0.7588
2022-07-07 02:10:52.275065: Average global foreground Dice: [0.8013]
2022-07-07 02:10:52.285502: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:10:52.927538: Suus1 maybe_update_lr lr: 0.007719
2022-07-07 02:10:52.955024: saving best epoch checkpoint...
2022-07-07 02:10:53.051554: saving checkpoint...
2022-07-07 02:10:54.384246: done, saving took 1.41 seconds
2022-07-07 02:10:54.400040: This epoch took 74.333230 s

2022-07-07 02:10:54.402352: 
epoch:  125
2022-07-07 02:12:01.962583: train loss : -0.7665
2022-07-07 02:12:06.447130: validation loss: -0.7703
2022-07-07 02:12:06.450650: Average global foreground Dice: [0.8159]
2022-07-07 02:12:06.452964: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:12:06.994249: Suus1 maybe_update_lr lr: 0.0077
2022-07-07 02:12:07.015271: saving best epoch checkpoint...
2022-07-07 02:12:07.118294: saving checkpoint...
2022-07-07 02:12:08.465439: done, saving took 1.43 seconds
2022-07-07 02:12:08.484120: This epoch took 74.079620 s

2022-07-07 02:12:08.486713: 
epoch:  126
2022-07-07 02:13:16.108053: train loss : -0.7543
2022-07-07 02:13:20.664575: validation loss: -0.7632
2022-07-07 02:13:20.668190: Average global foreground Dice: [0.8072]
2022-07-07 02:13:20.693941: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:13:21.228853: Suus1 maybe_update_lr lr: 0.007682
2022-07-07 02:13:21.242536: saving best epoch checkpoint...
2022-07-07 02:13:21.314082: saving checkpoint...
2022-07-07 02:13:22.614668: done, saving took 1.35 seconds
2022-07-07 02:13:22.630035: This epoch took 74.140625 s

2022-07-07 02:13:22.632886: 
epoch:  127
2022-07-07 02:14:30.261628: train loss : -0.7760
2022-07-07 02:14:34.804519: validation loss: -0.7673
2022-07-07 02:14:34.817943: Average global foreground Dice: [0.8191]
2022-07-07 02:14:34.820465: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:14:35.450501: Suus1 maybe_update_lr lr: 0.007663
2022-07-07 02:14:35.453418: saving best epoch checkpoint...
2022-07-07 02:14:35.492295: saving checkpoint...
2022-07-07 02:14:36.790899: done, saving took 1.33 seconds
2022-07-07 02:14:36.805621: This epoch took 74.170024 s

2022-07-07 02:14:36.808054: 
epoch:  128
2022-07-07 02:15:44.351032: train loss : -0.7763
2022-07-07 02:15:48.775348: validation loss: -0.7436
2022-07-07 02:15:48.802881: Average global foreground Dice: [0.7946]
2022-07-07 02:15:48.816525: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:15:49.418478: Suus1 maybe_update_lr lr: 0.007645
2022-07-07 02:15:49.421199: This epoch took 72.610534 s

2022-07-07 02:15:49.423331: 
epoch:  129
2022-07-07 02:16:57.076416: train loss : -0.7699
2022-07-07 02:17:01.568375: validation loss: -0.7613
2022-07-07 02:17:01.590794: Average global foreground Dice: [0.8182]
2022-07-07 02:17:01.606245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:17:02.091613: Suus1 maybe_update_lr lr: 0.007626
2022-07-07 02:17:02.093892: saving best epoch checkpoint...
2022-07-07 02:17:02.136217: saving checkpoint...
2022-07-07 02:17:03.197058: done, saving took 1.10 seconds
2022-07-07 02:17:03.213212: This epoch took 73.787722 s

2022-07-07 02:17:03.215545: 
epoch:  130
2022-07-07 02:18:10.762719: train loss : -0.7704
2022-07-07 02:18:15.189875: validation loss: -0.7449
2022-07-07 02:18:15.198818: Average global foreground Dice: [0.7992]
2022-07-07 02:18:15.212242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:18:15.753157: Suus1 maybe_update_lr lr: 0.007608
2022-07-07 02:18:15.775285: This epoch took 72.557439 s

2022-07-07 02:18:15.797215: 
epoch:  131
2022-07-07 02:19:23.502687: train loss : -0.7731
2022-07-07 02:19:28.072725: validation loss: -0.7558
2022-07-07 02:19:28.083927: Average global foreground Dice: [0.8036]
2022-07-07 02:19:28.092142: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:19:28.649118: Suus1 maybe_update_lr lr: 0.007589
2022-07-07 02:19:28.651720: This epoch took 72.849091 s

2022-07-07 02:19:28.653993: 
epoch:  132
2022-07-07 02:20:36.274346: train loss : -0.7667
2022-07-07 02:20:40.723732: validation loss: -0.7659
2022-07-07 02:20:40.732667: Average global foreground Dice: [0.8046]
2022-07-07 02:20:40.746324: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:20:41.328670: Suus1 maybe_update_lr lr: 0.007571
2022-07-07 02:20:41.331264: This epoch took 72.675004 s

2022-07-07 02:20:41.333706: 
epoch:  133
2022-07-07 02:21:48.958328: train loss : -0.7757
2022-07-07 02:21:53.682422: validation loss: -0.7841
2022-07-07 02:21:53.696380: Average global foreground Dice: [0.8258]
2022-07-07 02:21:53.702901: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:21:54.202644: Suus1 maybe_update_lr lr: 0.007552
2022-07-07 02:21:54.205032: saving best epoch checkpoint...
2022-07-07 02:21:54.238395: saving checkpoint...
2022-07-07 02:21:55.356051: done, saving took 1.15 seconds
2022-07-07 02:21:55.371001: This epoch took 74.035208 s

2022-07-07 02:21:55.373230: 
epoch:  134
2022-07-07 02:23:03.083707: train loss : -0.7640
2022-07-07 02:23:07.651205: validation loss: -0.7729
2022-07-07 02:23:07.686606: Average global foreground Dice: [0.8251]
2022-07-07 02:23:07.708244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:23:08.303551: Suus1 maybe_update_lr lr: 0.007533
2022-07-07 02:23:08.306202: saving best epoch checkpoint...
2022-07-07 02:23:08.348026: saving checkpoint...
2022-07-07 02:23:09.549297: done, saving took 1.24 seconds
2022-07-07 02:23:09.564346: This epoch took 74.188890 s

2022-07-07 02:23:09.566649: 
epoch:  135
2022-07-07 02:24:17.181290: train loss : -0.7819
2022-07-07 02:24:21.583332: validation loss: -0.7703
2022-07-07 02:24:21.610650: Average global foreground Dice: [0.8205]
2022-07-07 02:24:21.624573: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:24:22.133847: Suus1 maybe_update_lr lr: 0.007515
2022-07-07 02:24:22.153149: saving best epoch checkpoint...
2022-07-07 02:24:22.227824: saving checkpoint...
2022-07-07 02:24:23.396077: done, saving took 1.23 seconds
2022-07-07 02:24:23.412731: This epoch took 73.843842 s

2022-07-07 02:24:23.415339: 
epoch:  136
2022-07-07 02:25:30.975721: train loss : -0.7873
2022-07-07 02:25:35.419600: validation loss: -0.7684
2022-07-07 02:25:35.460613: Average global foreground Dice: [0.8182]
2022-07-07 02:25:35.473253: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:25:35.975621: Suus1 maybe_update_lr lr: 0.007496
2022-07-07 02:25:35.984924: saving best epoch checkpoint...
2022-07-07 02:25:36.066966: saving checkpoint...
2022-07-07 02:25:37.164410: done, saving took 1.17 seconds
2022-07-07 02:25:37.179310: This epoch took 73.761589 s

2022-07-07 02:25:37.181830: 
epoch:  137
2022-07-07 02:26:44.936879: train loss : -0.7802
2022-07-07 02:26:49.703316: validation loss: -0.7761
2022-07-07 02:26:49.712801: Average global foreground Dice: [0.8214]
2022-07-07 02:26:49.718240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:26:50.346722: Suus1 maybe_update_lr lr: 0.007478
2022-07-07 02:26:50.363259: saving best epoch checkpoint...
2022-07-07 02:26:50.417438: saving checkpoint...
2022-07-07 02:26:51.593084: done, saving took 1.22 seconds
2022-07-07 02:26:51.608488: This epoch took 74.424300 s

2022-07-07 02:26:51.610678: 
epoch:  138
2022-07-07 02:27:59.235873: train loss : -0.7808
2022-07-07 02:28:03.763267: validation loss: -0.7812
2022-07-07 02:28:03.778757: Average global foreground Dice: [0.8219]
2022-07-07 02:28:03.790272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:28:04.372736: Suus1 maybe_update_lr lr: 0.007459
2022-07-07 02:28:04.379750: saving best epoch checkpoint...
2022-07-07 02:28:04.448060: saving checkpoint...
2022-07-07 02:28:05.814334: done, saving took 1.41 seconds
2022-07-07 02:28:05.829545: This epoch took 74.216713 s

2022-07-07 02:28:05.831697: 
epoch:  139
2022-07-07 02:29:13.363967: train loss : -0.7783
2022-07-07 02:29:17.917085: validation loss: -0.7682
2022-07-07 02:29:17.939170: Average global foreground Dice: [0.8064]
2022-07-07 02:29:17.956825: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:29:18.482046: Suus1 maybe_update_lr lr: 0.00744
2022-07-07 02:29:18.489120: This epoch took 72.655161 s

2022-07-07 02:29:18.492611: 
epoch:  140
2022-07-07 02:30:26.290369: train loss : -0.7686
2022-07-07 02:30:30.929309: validation loss: -0.7596
2022-07-07 02:30:30.954024: Average global foreground Dice: [0.8145]
2022-07-07 02:30:30.985247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:30:31.636027: Suus1 maybe_update_lr lr: 0.007422
2022-07-07 02:30:31.638724: This epoch took 73.141150 s

2022-07-07 02:30:31.650957: 
epoch:  141
2022-07-07 02:31:39.237612: train loss : -0.7694
2022-07-07 02:31:43.802758: validation loss: -0.7303
2022-07-07 02:31:43.807739: Average global foreground Dice: [0.7878]
2022-07-07 02:31:43.817302: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:31:44.445811: Suus1 maybe_update_lr lr: 0.007403
2022-07-07 02:31:44.448445: This epoch took 72.791182 s

2022-07-07 02:31:44.450784: 
epoch:  142
2022-07-07 02:32:52.210733: train loss : -0.7429
2022-07-07 02:32:56.878699: validation loss: -0.7468
2022-07-07 02:32:56.904209: Average global foreground Dice: [0.7872]
2022-07-07 02:32:56.934247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:32:57.481365: Suus1 maybe_update_lr lr: 0.007385
2022-07-07 02:32:57.502312: This epoch took 73.049313 s

2022-07-07 02:32:57.518292: 
epoch:  143
2022-07-07 02:34:05.298661: train loss : -0.7486
2022-07-07 02:34:10.087012: validation loss: -0.7509
2022-07-07 02:34:10.091402: Average global foreground Dice: [0.7937]
2022-07-07 02:34:10.093667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:34:10.665827: Suus1 maybe_update_lr lr: 0.007366
2022-07-07 02:34:10.669116: This epoch took 73.128600 s

2022-07-07 02:34:10.671437: 
epoch:  144
2022-07-07 02:35:18.397657: train loss : -0.7501
2022-07-07 02:35:22.897760: validation loss: -0.7761
2022-07-07 02:35:22.916731: Average global foreground Dice: [0.8186]
2022-07-07 02:35:22.933973: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:35:23.618169: Suus1 maybe_update_lr lr: 0.007347
2022-07-07 02:35:23.637264: This epoch took 72.963744 s

2022-07-07 02:35:23.639974: 
epoch:  145
2022-07-07 02:36:31.432764: train loss : -0.7583
2022-07-07 02:36:35.973242: validation loss: -0.7302
2022-07-07 02:36:35.990219: Average global foreground Dice: [0.7799]
2022-07-07 02:36:36.000168: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:36:36.645869: Suus1 maybe_update_lr lr: 0.007329
2022-07-07 02:36:36.648865: This epoch took 73.005711 s

2022-07-07 02:36:36.651695: 
epoch:  146
2022-07-07 02:37:44.273407: train loss : -0.7635
2022-07-07 02:37:48.782458: validation loss: -0.7550
2022-07-07 02:37:48.795602: Average global foreground Dice: [0.8029]
2022-07-07 02:37:48.805290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:37:49.356634: Suus1 maybe_update_lr lr: 0.00731
2022-07-07 02:37:49.367215: This epoch took 72.712137 s

2022-07-07 02:37:49.387274: 
epoch:  147
2022-07-07 02:38:57.080276: train loss : -0.7656
2022-07-07 02:39:01.736760: validation loss: -0.7712
2022-07-07 02:39:01.740785: Average global foreground Dice: [0.8134]
2022-07-07 02:39:01.743298: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:39:02.313679: Suus1 maybe_update_lr lr: 0.007291
2022-07-07 02:39:02.321828: This epoch took 72.910576 s

2022-07-07 02:39:02.332716: 
epoch:  148
2022-07-07 02:40:09.910202: train loss : -0.7665
2022-07-07 02:40:14.487168: validation loss: -0.7728
2022-07-07 02:40:14.508747: Average global foreground Dice: [0.814]
2022-07-07 02:40:14.542677: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:40:15.171634: Suus1 maybe_update_lr lr: 0.007273
2022-07-07 02:40:15.204285: This epoch took 72.852169 s

2022-07-07 02:40:15.221720: 
epoch:  149
2022-07-07 02:41:22.842623: train loss : -0.7654
2022-07-07 02:41:27.328819: validation loss: -0.7650
2022-07-07 02:41:27.347645: Average global foreground Dice: [0.8115]
2022-07-07 02:41:27.350092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:41:27.849681: Suus1 maybe_update_lr lr: 0.007254
2022-07-07 02:41:27.860363: saving scheduled checkpoint file...
2022-07-07 02:41:27.907949: saving checkpoint...
2022-07-07 02:41:29.315618: done, saving took 1.44 seconds
2022-07-07 02:41:29.334767: done
2022-07-07 02:41:29.337502: This epoch took 74.105973 s

2022-07-07 02:41:29.339720: 
epoch:  150
2022-07-07 02:42:37.049633: train loss : -0.7683
2022-07-07 02:42:41.562232: validation loss: -0.7611
2022-07-07 02:42:41.582261: Average global foreground Dice: [0.8111]
2022-07-07 02:42:41.590313: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:42:42.105733: Suus1 maybe_update_lr lr: 0.007236
2022-07-07 02:42:42.119857: This epoch took 72.777576 s

2022-07-07 02:42:42.123442: 
epoch:  151
2022-07-07 02:43:49.686993: train loss : -0.7750
2022-07-07 02:43:54.232063: validation loss: -0.7632
2022-07-07 02:43:54.237650: Average global foreground Dice: [0.807]
2022-07-07 02:43:54.240137: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:43:54.710421: Suus1 maybe_update_lr lr: 0.007217
2022-07-07 02:43:54.717893: This epoch took 72.585797 s

2022-07-07 02:43:54.735363: 
epoch:  152
2022-07-07 02:45:02.361753: train loss : -0.7761
2022-07-07 02:45:07.042819: validation loss: -0.7685
2022-07-07 02:45:07.046412: Average global foreground Dice: [0.8094]
2022-07-07 02:45:07.056889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:45:07.671666: Suus1 maybe_update_lr lr: 0.007198
2022-07-07 02:45:07.674351: This epoch took 72.933728 s

2022-07-07 02:45:07.692237: 
epoch:  153
2022-07-07 02:46:15.261062: train loss : -0.7788
2022-07-07 02:46:19.680298: validation loss: -0.7636
2022-07-07 02:46:19.693297: Average global foreground Dice: [0.8088]
2022-07-07 02:46:19.697737: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:46:20.236352: Suus1 maybe_update_lr lr: 0.00718
2022-07-07 02:46:20.238721: This epoch took 72.543107 s

2022-07-07 02:46:20.240749: 
epoch:  154
2022-07-07 02:47:27.875439: train loss : -0.7703
2022-07-07 02:47:32.542150: validation loss: -0.7546
2022-07-07 02:47:32.548505: Average global foreground Dice: [0.8008]
2022-07-07 02:47:32.566388: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:47:33.081714: Suus1 maybe_update_lr lr: 0.007161
2022-07-07 02:47:33.089910: This epoch took 72.846837 s

2022-07-07 02:47:33.099654: 
epoch:  155
2022-07-07 02:48:40.622844: train loss : -0.7748
2022-07-07 02:48:45.069138: validation loss: -0.7641
2022-07-07 02:48:45.077308: Average global foreground Dice: [0.8064]
2022-07-07 02:48:45.079781: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:48:45.605686: Suus1 maybe_update_lr lr: 0.007142
2022-07-07 02:48:45.608407: This epoch took 72.499335 s

2022-07-07 02:48:45.610947: 
epoch:  156
2022-07-07 02:49:53.134934: train loss : -0.7779
2022-07-07 02:49:57.554235: validation loss: -0.7626
2022-07-07 02:49:57.558489: Average global foreground Dice: [0.8256]
2022-07-07 02:49:57.561157: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:49:58.108832: Suus1 maybe_update_lr lr: 0.007123
2022-07-07 02:49:58.131276: This epoch took 72.518152 s

2022-07-07 02:49:58.162228: 
epoch:  157
2022-07-07 02:51:05.883549: train loss : -0.7683
2022-07-07 02:51:10.253160: validation loss: -0.7847
2022-07-07 02:51:10.265007: Average global foreground Dice: [0.8314]
2022-07-07 02:51:10.284243: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:51:10.813615: Suus1 maybe_update_lr lr: 0.007105
2022-07-07 02:51:10.833915: This epoch took 72.651669 s

2022-07-07 02:51:10.849981: 
epoch:  158
2022-07-07 02:52:18.512713: train loss : -0.7906
2022-07-07 02:52:23.079267: validation loss: -0.7513
2022-07-07 02:52:23.102412: Average global foreground Dice: [0.8027]
2022-07-07 02:52:23.114882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:52:23.632499: Suus1 maybe_update_lr lr: 0.007086
2022-07-07 02:52:23.652267: This epoch took 72.799620 s

2022-07-07 02:52:23.667387: 
epoch:  159
2022-07-07 02:53:31.239826: train loss : -0.7830
2022-07-07 02:53:35.770508: validation loss: -0.7710
2022-07-07 02:53:35.774249: Average global foreground Dice: [0.8018]
2022-07-07 02:53:35.802088: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:53:36.345584: Suus1 maybe_update_lr lr: 0.007067
2022-07-07 02:53:36.372495: This epoch took 72.693990 s

2022-07-07 02:53:36.396327: 
epoch:  160
2022-07-07 02:54:44.028009: train loss : -0.7853
2022-07-07 02:54:48.621692: validation loss: -0.7676
2022-07-07 02:54:48.639117: Average global foreground Dice: [0.8151]
2022-07-07 02:54:48.650133: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:54:49.153058: Suus1 maybe_update_lr lr: 0.007049
2022-07-07 02:54:49.161563: This epoch took 72.737327 s

2022-07-07 02:54:49.178360: 
epoch:  161
2022-07-07 02:55:56.918377: train loss : -0.7759
2022-07-07 02:56:01.419931: validation loss: -0.7699
2022-07-07 02:56:01.450590: Average global foreground Dice: [0.8238]
2022-07-07 02:56:01.476247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:56:02.071413: Suus1 maybe_update_lr lr: 0.00703
2022-07-07 02:56:02.074732: This epoch took 72.886577 s

2022-07-07 02:56:02.077434: 
epoch:  162
2022-07-07 02:57:09.743520: train loss : -0.7735
2022-07-07 02:57:14.276095: validation loss: -0.7454
2022-07-07 02:57:14.323649: Average global foreground Dice: [0.7992]
2022-07-07 02:57:14.334260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:57:14.846764: Suus1 maybe_update_lr lr: 0.007011
2022-07-07 02:57:14.873367: This epoch took 72.793194 s

2022-07-07 02:57:14.903380: 
epoch:  163
2022-07-07 02:58:22.601491: train loss : -0.7879
2022-07-07 02:58:27.368194: validation loss: -0.7671
2022-07-07 02:58:27.371754: Average global foreground Dice: [0.8132]
2022-07-07 02:58:27.374764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:58:27.854344: Suus1 maybe_update_lr lr: 0.006992
2022-07-07 02:58:27.857670: This epoch took 72.931399 s

2022-07-07 02:58:27.886242: 
epoch:  164
2022-07-07 02:59:35.604009: train loss : -0.7810
2022-07-07 02:59:40.092931: validation loss: -0.7813
2022-07-07 02:59:40.107109: Average global foreground Dice: [0.8254]
2022-07-07 02:59:40.109841: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 02:59:40.554189: Suus1 maybe_update_lr lr: 0.006974
2022-07-07 02:59:40.557863: This epoch took 72.651633 s

2022-07-07 02:59:40.562651: 
epoch:  165
2022-07-07 03:00:48.236336: train loss : -0.7928
2022-07-07 03:00:52.589237: validation loss: -0.7796
2022-07-07 03:00:52.620034: Average global foreground Dice: [0.8179]
2022-07-07 03:00:52.645622: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:00:53.168940: Suus1 maybe_update_lr lr: 0.006955
2022-07-07 03:00:53.172024: saving best epoch checkpoint...
2022-07-07 03:00:53.260007: saving checkpoint...
2022-07-07 03:00:54.585430: done, saving took 1.40 seconds
2022-07-07 03:00:54.600907: This epoch took 74.029752 s

2022-07-07 03:00:54.603876: 
epoch:  166
2022-07-07 03:02:02.165424: train loss : -0.7915
2022-07-07 03:02:06.621894: validation loss: -0.7747
2022-07-07 03:02:06.647630: Average global foreground Dice: [0.8182]
2022-07-07 03:02:06.666068: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:02:07.152620: Suus1 maybe_update_lr lr: 0.006936
2022-07-07 03:02:07.179416: saving best epoch checkpoint...
2022-07-07 03:02:07.252303: saving checkpoint...
2022-07-07 03:02:08.681946: done, saving took 1.48 seconds
2022-07-07 03:02:08.699167: This epoch took 74.093181 s

2022-07-07 03:02:08.701606: 
epoch:  167
2022-07-07 03:03:16.314707: train loss : -0.7762
2022-07-07 03:03:20.722501: validation loss: -0.7545
2022-07-07 03:03:20.753559: Average global foreground Dice: [0.8049]
2022-07-07 03:03:20.776671: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:03:21.285240: Suus1 maybe_update_lr lr: 0.006918
2022-07-07 03:03:21.292606: This epoch took 72.587940 s

2022-07-07 03:03:21.295027: 
epoch:  168
2022-07-07 03:04:28.903445: train loss : -0.7813
2022-07-07 03:04:33.461329: validation loss: -0.7560
2022-07-07 03:04:33.477534: Average global foreground Dice: [0.7971]
2022-07-07 03:04:33.493248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:04:34.150632: Suus1 maybe_update_lr lr: 0.006899
2022-07-07 03:04:34.153562: This epoch took 72.856381 s

2022-07-07 03:04:34.156298: 
epoch:  169
2022-07-07 03:05:41.774480: train loss : -0.7858
2022-07-07 03:05:46.219123: validation loss: -0.7593
2022-07-07 03:05:46.239105: Average global foreground Dice: [0.8117]
2022-07-07 03:05:46.251143: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:05:46.783361: Suus1 maybe_update_lr lr: 0.00688
2022-07-07 03:05:46.786216: This epoch took 72.627027 s

2022-07-07 03:05:46.789085: 
epoch:  170
2022-07-07 03:06:54.361812: train loss : -0.7841
2022-07-07 03:06:58.955601: validation loss: -0.7728
2022-07-07 03:06:58.980452: Average global foreground Dice: [0.817]
2022-07-07 03:06:58.984434: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:06:59.460469: Suus1 maybe_update_lr lr: 0.006861
2022-07-07 03:06:59.466585: This epoch took 72.674022 s

2022-07-07 03:06:59.482993: 
epoch:  171
2022-07-07 03:08:07.038630: train loss : -0.7859
2022-07-07 03:08:11.438373: validation loss: -0.7950
2022-07-07 03:08:11.457991: Average global foreground Dice: [0.836]
2022-07-07 03:08:11.461418: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:08:11.946797: Suus1 maybe_update_lr lr: 0.006842
2022-07-07 03:08:11.949378: saving best epoch checkpoint...
2022-07-07 03:08:11.996224: saving checkpoint...
2022-07-07 03:08:13.287169: done, saving took 1.34 seconds
2022-07-07 03:08:13.304251: This epoch took 73.804765 s

2022-07-07 03:08:13.306652: 
epoch:  172
2022-07-07 03:09:20.854593: train loss : -0.7854
2022-07-07 03:09:25.273680: validation loss: -0.7586
2022-07-07 03:09:25.284996: Average global foreground Dice: [0.8052]
2022-07-07 03:09:25.290489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:09:25.852533: Suus1 maybe_update_lr lr: 0.006824
2022-07-07 03:09:25.855357: This epoch took 72.546400 s

2022-07-07 03:09:25.857959: 
epoch:  173
2022-07-07 03:10:33.571643: train loss : -0.7904
2022-07-07 03:10:37.967995: validation loss: -0.7634
2022-07-07 03:10:37.985991: Average global foreground Dice: [0.8116]
2022-07-07 03:10:38.005875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:10:38.575742: Suus1 maybe_update_lr lr: 0.006805
2022-07-07 03:10:38.585270: This epoch took 72.724129 s

2022-07-07 03:10:38.595200: 
epoch:  174
2022-07-07 03:11:46.176072: train loss : -0.7972
2022-07-07 03:11:50.603919: validation loss: -0.7731
2022-07-07 03:11:50.613235: Average global foreground Dice: [0.8154]
2022-07-07 03:11:50.632245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:11:51.292289: Suus1 maybe_update_lr lr: 0.006786
2022-07-07 03:11:51.297054: This epoch took 72.690345 s

2022-07-07 03:11:51.299505: 
epoch:  175
2022-07-07 03:12:58.919174: train loss : -0.7920
2022-07-07 03:13:03.393919: validation loss: -0.7764
2022-07-07 03:13:03.399669: Average global foreground Dice: [0.823]
2022-07-07 03:13:03.421303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:13:03.949095: Suus1 maybe_update_lr lr: 0.006767
2022-07-07 03:13:03.959275: saving best epoch checkpoint...
2022-07-07 03:13:04.037695: saving checkpoint...
2022-07-07 03:13:05.321872: done, saving took 1.35 seconds
2022-07-07 03:13:05.337326: This epoch took 74.031586 s

2022-07-07 03:13:05.339658: 
epoch:  176
2022-07-07 03:14:12.926100: train loss : -0.7859
2022-07-07 03:14:17.347495: validation loss: -0.7771
2022-07-07 03:14:17.353318: Average global foreground Dice: [0.822]
2022-07-07 03:14:17.372493: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:14:17.875450: Suus1 maybe_update_lr lr: 0.006749
2022-07-07 03:14:17.886113: saving best epoch checkpoint...
2022-07-07 03:14:17.980540: saving checkpoint...
2022-07-07 03:14:19.385250: done, saving took 1.49 seconds
2022-07-07 03:14:19.400399: This epoch took 74.058476 s

2022-07-07 03:14:19.403099: 
epoch:  177
2022-07-07 03:15:26.983767: train loss : -0.7971
2022-07-07 03:15:31.525024: validation loss: -0.7800
2022-07-07 03:15:31.538348: Average global foreground Dice: [0.8197]
2022-07-07 03:15:31.543354: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:15:32.078394: Suus1 maybe_update_lr lr: 0.00673
2022-07-07 03:15:32.082580: saving best epoch checkpoint...
2022-07-07 03:15:32.126823: saving checkpoint...
2022-07-07 03:15:33.445424: done, saving took 1.36 seconds
2022-07-07 03:15:33.460531: This epoch took 74.054665 s

2022-07-07 03:15:33.463518: 
epoch:  178
2022-07-07 03:16:41.007134: train loss : -0.7907
2022-07-07 03:16:45.596204: validation loss: -0.7660
2022-07-07 03:16:45.601749: Average global foreground Dice: [0.8094]
2022-07-07 03:16:45.606211: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:16:46.060509: Suus1 maybe_update_lr lr: 0.006711
2022-07-07 03:16:46.074344: This epoch took 72.608301 s

2022-07-07 03:16:46.096912: 
epoch:  179
2022-07-07 03:17:53.706676: train loss : -0.7848
2022-07-07 03:17:58.078343: validation loss: -0.7322
2022-07-07 03:17:58.093246: Average global foreground Dice: [0.795]
2022-07-07 03:17:58.118699: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:17:58.663062: Suus1 maybe_update_lr lr: 0.006692
2022-07-07 03:17:58.665632: This epoch took 72.547028 s

2022-07-07 03:17:58.668380: 
epoch:  180
2022-07-07 03:19:06.259854: train loss : -0.7864
2022-07-07 03:19:10.775635: validation loss: -0.7623
2022-07-07 03:19:10.781392: Average global foreground Dice: [0.8082]
2022-07-07 03:19:10.804675: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:19:11.451222: Suus1 maybe_update_lr lr: 0.006673
2022-07-07 03:19:11.472393: This epoch took 72.801092 s

2022-07-07 03:19:11.477726: 
epoch:  181
2022-07-07 03:20:19.049905: train loss : -0.7923
2022-07-07 03:20:23.542125: validation loss: -0.7859
2022-07-07 03:20:23.549860: Average global foreground Dice: [0.8249]
2022-07-07 03:20:23.554331: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:20:24.089200: Suus1 maybe_update_lr lr: 0.006654
2022-07-07 03:20:24.092410: This epoch took 72.610059 s

2022-07-07 03:20:24.097850: 
epoch:  182
2022-07-07 03:21:31.695135: train loss : -0.7960
2022-07-07 03:21:36.106937: validation loss: -0.7892
2022-07-07 03:21:36.127851: Average global foreground Dice: [0.8352]
2022-07-07 03:21:36.147535: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:21:36.658560: Suus1 maybe_update_lr lr: 0.006636
2022-07-07 03:21:36.661218: saving best epoch checkpoint...
2022-07-07 03:21:36.711686: saving checkpoint...
2022-07-07 03:21:38.049120: done, saving took 1.39 seconds
2022-07-07 03:21:38.064638: This epoch took 73.963923 s

2022-07-07 03:21:38.067160: 
epoch:  183
2022-07-07 03:22:45.681774: train loss : -0.7908
2022-07-07 03:22:50.128385: validation loss: -0.7775
2022-07-07 03:22:50.142928: Average global foreground Dice: [0.8211]
2022-07-07 03:22:50.152029: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:22:50.665086: Suus1 maybe_update_lr lr: 0.006617
2022-07-07 03:22:50.682785: saving best epoch checkpoint...
2022-07-07 03:22:50.747715: saving checkpoint...
2022-07-07 03:22:52.218491: done, saving took 1.51 seconds
2022-07-07 03:22:52.286902: This epoch took 74.217438 s

2022-07-07 03:22:52.289705: 
epoch:  184
2022-07-07 03:23:59.900351: train loss : -0.7893
2022-07-07 03:24:04.315756: validation loss: -0.7683
2022-07-07 03:24:04.344679: Average global foreground Dice: [0.8108]
2022-07-07 03:24:04.366240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:24:04.995677: Suus1 maybe_update_lr lr: 0.006598
2022-07-07 03:24:05.028285: This epoch took 72.736216 s

2022-07-07 03:24:05.061234: 
epoch:  185
2022-07-07 03:25:12.597472: train loss : -0.7885
2022-07-07 03:25:17.294143: validation loss: -0.7111
2022-07-07 03:25:17.302377: Average global foreground Dice: [0.7817]
2022-07-07 03:25:17.319688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:25:17.850142: Suus1 maybe_update_lr lr: 0.006579
2022-07-07 03:25:17.865292: This epoch took 72.782058 s

2022-07-07 03:25:17.868097: 
epoch:  186
2022-07-07 03:26:25.494448: train loss : -0.7902
2022-07-07 03:26:30.035733: validation loss: -0.7658
2022-07-07 03:26:30.068431: Average global foreground Dice: [0.818]
2022-07-07 03:26:30.085165: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:26:30.624811: Suus1 maybe_update_lr lr: 0.00656
2022-07-07 03:26:30.672277: This epoch took 72.801725 s

2022-07-07 03:26:30.688454: 
epoch:  187
2022-07-07 03:27:38.227772: train loss : -0.7816
2022-07-07 03:27:42.771942: validation loss: -0.7625
2022-07-07 03:27:42.797255: Average global foreground Dice: [0.8048]
2022-07-07 03:27:42.806500: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:27:43.310701: Suus1 maybe_update_lr lr: 0.006541
2022-07-07 03:27:43.313998: This epoch took 72.603762 s

2022-07-07 03:27:43.316971: 
epoch:  188
2022-07-07 03:28:51.046009: train loss : -0.7856
2022-07-07 03:28:55.455494: validation loss: -0.7716
2022-07-07 03:28:55.484357: Average global foreground Dice: [0.8161]
2022-07-07 03:28:55.499262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:28:56.151088: Suus1 maybe_update_lr lr: 0.006522
2022-07-07 03:28:56.154247: This epoch took 72.833917 s

2022-07-07 03:28:56.157384: 
epoch:  189
2022-07-07 03:30:03.775465: train loss : -0.7754
2022-07-07 03:30:08.270342: validation loss: -0.7732
2022-07-07 03:30:08.293031: Average global foreground Dice: [0.8166]
2022-07-07 03:30:08.314852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:30:08.772685: Suus1 maybe_update_lr lr: 0.006504
2022-07-07 03:30:08.780764: This epoch took 72.620825 s

2022-07-07 03:30:08.804237: 
epoch:  190
2022-07-07 03:31:16.411203: train loss : -0.7855
2022-07-07 03:31:21.100139: validation loss: -0.7833
2022-07-07 03:31:21.103698: Average global foreground Dice: [0.8225]
2022-07-07 03:31:21.109170: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:31:21.670683: Suus1 maybe_update_lr lr: 0.006485
2022-07-07 03:31:21.673599: This epoch took 72.857161 s

2022-07-07 03:31:21.678288: 
epoch:  191
2022-07-07 03:32:29.262035: train loss : -0.7804
2022-07-07 03:32:33.660736: validation loss: -0.7117
2022-07-07 03:32:33.674574: Average global foreground Dice: [0.7773]
2022-07-07 03:32:33.678572: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:32:34.194719: Suus1 maybe_update_lr lr: 0.006466
2022-07-07 03:32:34.229300: This epoch took 72.548499 s

2022-07-07 03:32:34.251248: 
epoch:  192
2022-07-07 03:33:41.867635: train loss : -0.7650
2022-07-07 03:33:46.258333: validation loss: -0.7738
2022-07-07 03:33:46.266652: Average global foreground Dice: [0.8172]
2022-07-07 03:33:46.273672: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:33:46.796752: Suus1 maybe_update_lr lr: 0.006447
2022-07-07 03:33:46.804980: This epoch took 72.520746 s

2022-07-07 03:33:46.811227: 
epoch:  193
2022-07-07 03:34:54.381578: train loss : -0.7650
2022-07-07 03:34:58.907841: validation loss: -0.7646
2022-07-07 03:34:58.944748: Average global foreground Dice: [0.8161]
2022-07-07 03:34:58.962504: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:34:59.511901: Suus1 maybe_update_lr lr: 0.006428
2022-07-07 03:34:59.514478: This epoch took 72.700197 s

2022-07-07 03:34:59.517078: 
epoch:  194
2022-07-07 03:36:07.196990: train loss : -0.7707
2022-07-07 03:36:12.033197: validation loss: -0.7261
2022-07-07 03:36:12.040193: Average global foreground Dice: [0.7833]
2022-07-07 03:36:12.049452: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:36:12.541179: Suus1 maybe_update_lr lr: 0.006409
2022-07-07 03:36:12.547316: This epoch took 73.027604 s

2022-07-07 03:36:12.549738: 
epoch:  195
2022-07-07 03:37:20.126849: train loss : -0.7746
2022-07-07 03:37:24.734581: validation loss: -0.7680
2022-07-07 03:37:24.774602: Average global foreground Dice: [0.811]
2022-07-07 03:37:24.797274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:37:25.361116: Suus1 maybe_update_lr lr: 0.00639
2022-07-07 03:37:25.373229: This epoch took 72.803037 s

2022-07-07 03:37:25.384593: 
epoch:  196
2022-07-07 03:38:33.000409: train loss : -0.7681
2022-07-07 03:38:37.620124: validation loss: -0.7533
2022-07-07 03:38:37.638947: Average global foreground Dice: [0.8057]
2022-07-07 03:38:37.641474: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:38:38.125868: Suus1 maybe_update_lr lr: 0.006371
2022-07-07 03:38:38.129878: This epoch took 72.727365 s

2022-07-07 03:38:38.132559: 
epoch:  197
2022-07-07 03:39:45.864097: train loss : -0.7918
2022-07-07 03:39:50.362739: validation loss: -0.7815
2022-07-07 03:39:50.398588: Average global foreground Dice: [0.8205]
2022-07-07 03:39:50.429241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:39:50.956828: Suus1 maybe_update_lr lr: 0.006352
2022-07-07 03:39:50.979315: This epoch took 72.843170 s

2022-07-07 03:39:50.996624: 
epoch:  198
2022-07-07 03:40:58.563273: train loss : -0.7962
2022-07-07 03:41:03.102135: validation loss: -0.7545
2022-07-07 03:41:03.134892: Average global foreground Dice: [0.8094]
2022-07-07 03:41:03.153829: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:41:03.677147: Suus1 maybe_update_lr lr: 0.006333
2022-07-07 03:41:03.685192: This epoch took 72.668936 s

2022-07-07 03:41:03.698900: 
epoch:  199
2022-07-07 03:42:11.359169: train loss : -0.7955
2022-07-07 03:42:15.772163: validation loss: -0.7781
2022-07-07 03:42:15.812895: Average global foreground Dice: [0.8209]
2022-07-07 03:42:15.825090: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:42:16.420930: Suus1 maybe_update_lr lr: 0.006314
2022-07-07 03:42:16.424356: saving scheduled checkpoint file...
2022-07-07 03:42:16.476878: saving checkpoint...
2022-07-07 03:42:17.917587: done, saving took 1.49 seconds
2022-07-07 03:42:17.936377: done
2022-07-07 03:42:17.939230: This epoch took 74.237766 s

2022-07-07 03:42:17.942389: 
epoch:  200
2022-07-07 03:43:25.486053: train loss : -0.7959
2022-07-07 03:43:29.910852: validation loss: -0.7723
2022-07-07 03:43:29.914602: Average global foreground Dice: [0.8135]
2022-07-07 03:43:29.917278: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:43:30.521013: Suus1 maybe_update_lr lr: 0.006296
2022-07-07 03:43:30.523745: This epoch took 72.577620 s

2022-07-07 03:43:30.526412: 
epoch:  201
2022-07-07 03:44:38.190723: train loss : -0.7877
2022-07-07 03:44:42.569873: validation loss: -0.7349
2022-07-07 03:44:42.591862: Average global foreground Dice: [0.7802]
2022-07-07 03:44:42.605991: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:44:43.205256: Suus1 maybe_update_lr lr: 0.006277
2022-07-07 03:44:43.217402: This epoch took 72.688645 s

2022-07-07 03:44:43.224440: 
epoch:  202
2022-07-07 03:45:50.937962: train loss : -0.7909
2022-07-07 03:45:55.550172: validation loss: -0.7468
2022-07-07 03:45:55.556788: Average global foreground Dice: [0.8042]
2022-07-07 03:45:55.559886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:45:56.125260: Suus1 maybe_update_lr lr: 0.006258
2022-07-07 03:45:56.128117: This epoch took 72.889880 s

2022-07-07 03:45:56.138379: 
epoch:  203
2022-07-07 03:47:03.890320: train loss : -0.7946
2022-07-07 03:47:08.291744: validation loss: -0.7559
2022-07-07 03:47:08.309971: Average global foreground Dice: [0.7925]
2022-07-07 03:47:08.315249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:47:09.024529: Suus1 maybe_update_lr lr: 0.006239
2022-07-07 03:47:09.026824: This epoch took 72.858082 s

2022-07-07 03:47:09.029423: 
epoch:  204
2022-07-07 03:48:16.596195: train loss : -0.7968
2022-07-07 03:48:21.188776: validation loss: -0.7752
2022-07-07 03:48:21.193365: Average global foreground Dice: [0.8167]
2022-07-07 03:48:21.203087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:48:21.696852: Suus1 maybe_update_lr lr: 0.00622
2022-07-07 03:48:21.718275: This epoch took 72.686643 s

2022-07-07 03:48:21.736607: 
epoch:  205
2022-07-07 03:49:29.390688: train loss : -0.7935
2022-07-07 03:49:33.823269: validation loss: -0.7340
2022-07-07 03:49:33.856628: Average global foreground Dice: [0.8002]
2022-07-07 03:49:33.879236: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:49:34.414644: Suus1 maybe_update_lr lr: 0.006201
2022-07-07 03:49:34.426548: This epoch took 72.665310 s

2022-07-07 03:49:34.441075: 
epoch:  206
2022-07-07 03:50:42.057923: train loss : -0.7859
2022-07-07 03:50:46.500899: validation loss: -0.7836
2022-07-07 03:50:46.522604: Average global foreground Dice: [0.8226]
2022-07-07 03:50:46.533228: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:50:47.125521: Suus1 maybe_update_lr lr: 0.006182
2022-07-07 03:50:47.158286: This epoch took 72.704447 s

2022-07-07 03:50:47.202226: 
epoch:  207
2022-07-07 03:51:54.895957: train loss : -0.7791
2022-07-07 03:51:59.353490: validation loss: -0.7751
2022-07-07 03:51:59.402151: Average global foreground Dice: [0.8241]
2022-07-07 03:51:59.410647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:51:59.969593: Suus1 maybe_update_lr lr: 0.006163
2022-07-07 03:51:59.979864: This epoch took 72.746235 s

2022-07-07 03:51:59.993411: 
epoch:  208
2022-07-07 03:53:07.563223: train loss : -0.7765
2022-07-07 03:53:12.006798: validation loss: -0.7686
2022-07-07 03:53:12.012562: Average global foreground Dice: [0.8181]
2022-07-07 03:53:12.033422: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:53:12.618355: Suus1 maybe_update_lr lr: 0.006144
2022-07-07 03:53:12.651405: This epoch took 72.655669 s

2022-07-07 03:53:12.673231: 
epoch:  209
2022-07-07 03:54:20.313757: train loss : -0.7808
2022-07-07 03:54:25.069907: validation loss: -0.7708
2022-07-07 03:54:25.092648: Average global foreground Dice: [0.8129]
2022-07-07 03:54:25.107035: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:54:25.622967: Suus1 maybe_update_lr lr: 0.006125
2022-07-07 03:54:25.652596: This epoch took 72.961082 s

2022-07-07 03:54:25.668252: 
epoch:  210
2022-07-07 03:55:33.314595: train loss : -0.7814
2022-07-07 03:55:37.743823: validation loss: -0.7848
2022-07-07 03:55:37.760598: Average global foreground Dice: [0.8194]
2022-07-07 03:55:37.780138: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:55:38.430467: Suus1 maybe_update_lr lr: 0.006106
2022-07-07 03:55:38.433255: This epoch took 72.757019 s

2022-07-07 03:55:38.435812: 
epoch:  211
2022-07-07 03:56:46.012986: train loss : -0.8017
2022-07-07 03:56:50.707885: validation loss: -0.7654
2022-07-07 03:56:50.730063: Average global foreground Dice: [0.8177]
2022-07-07 03:56:50.743741: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:56:51.225902: Suus1 maybe_update_lr lr: 0.006087
2022-07-07 03:56:51.228525: This epoch took 72.790348 s

2022-07-07 03:56:51.232164: 
epoch:  212
2022-07-07 03:57:58.798034: train loss : -0.8017
2022-07-07 03:58:03.241119: validation loss: -0.7937
2022-07-07 03:58:03.259667: Average global foreground Dice: [0.8326]
2022-07-07 03:58:03.273001: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:58:03.793637: Suus1 maybe_update_lr lr: 0.006068
2022-07-07 03:58:03.797995: This epoch took 72.546545 s

2022-07-07 03:58:03.800525: 
epoch:  213
2022-07-07 03:59:11.351758: train loss : -0.7991
2022-07-07 03:59:15.659194: validation loss: -0.7825
2022-07-07 03:59:15.673594: Average global foreground Dice: [0.8307]
2022-07-07 03:59:15.707597: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 03:59:16.275644: Suus1 maybe_update_lr lr: 0.006049
2022-07-07 03:59:16.278262: This epoch took 72.475173 s

2022-07-07 03:59:16.281014: 
epoch:  214
2022-07-07 04:00:24.009171: train loss : -0.7966
2022-07-07 04:00:28.509223: validation loss: -0.7819
2022-07-07 04:00:28.527106: Average global foreground Dice: [0.8259]
2022-07-07 04:00:28.560436: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:00:29.042543: Suus1 maybe_update_lr lr: 0.00603
2022-07-07 04:00:29.049841: saving best epoch checkpoint...
2022-07-07 04:00:29.100922: saving checkpoint...
2022-07-07 04:00:30.308721: done, saving took 1.25 seconds
2022-07-07 04:00:30.323973: This epoch took 74.040491 s

2022-07-07 04:00:30.326352: 
epoch:  215
2022-07-07 04:01:37.956932: train loss : -0.8024
2022-07-07 04:01:42.512373: validation loss: -0.7593
2022-07-07 04:01:42.522396: Average global foreground Dice: [0.7979]
2022-07-07 04:01:42.549047: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:01:43.165160: Suus1 maybe_update_lr lr: 0.006011
2022-07-07 04:01:43.167654: This epoch took 72.838498 s

2022-07-07 04:01:43.170207: 
epoch:  216
2022-07-07 04:02:50.715194: train loss : -0.8124
2022-07-07 04:02:55.087609: validation loss: -0.7847
2022-07-07 04:02:55.116797: Average global foreground Dice: [0.8369]
2022-07-07 04:02:55.120398: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:02:55.798724: Suus1 maybe_update_lr lr: 0.005991
2022-07-07 04:02:55.801739: saving best epoch checkpoint...
2022-07-07 04:02:55.842188: saving checkpoint...
2022-07-07 04:02:57.427332: done, saving took 1.62 seconds
2022-07-07 04:02:57.444515: This epoch took 74.272118 s

2022-07-07 04:02:57.447636: 
epoch:  217
2022-07-07 04:04:04.997257: train loss : -0.7984
2022-07-07 04:04:09.402535: validation loss: -0.7605
2022-07-07 04:04:09.416736: Average global foreground Dice: [0.8025]
2022-07-07 04:04:09.420034: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:04:10.034116: Suus1 maybe_update_lr lr: 0.005972
2022-07-07 04:04:10.036548: This epoch took 72.586406 s

2022-07-07 04:04:10.038711: 
epoch:  218
2022-07-07 04:05:17.599419: train loss : -0.8044
2022-07-07 04:05:21.997551: validation loss: -0.7604
2022-07-07 04:05:22.030016: Average global foreground Dice: [0.8111]
2022-07-07 04:05:22.049629: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:05:22.538140: Suus1 maybe_update_lr lr: 0.005953
2022-07-07 04:05:22.540900: This epoch took 72.499949 s

2022-07-07 04:05:22.543594: 
epoch:  219
2022-07-07 04:06:30.193504: train loss : -0.7974
2022-07-07 04:06:34.714870: validation loss: -0.7873
2022-07-07 04:06:34.720599: Average global foreground Dice: [0.8308]
2022-07-07 04:06:34.725402: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:06:35.339664: Suus1 maybe_update_lr lr: 0.005934
2022-07-07 04:06:35.342298: This epoch took 72.796270 s

2022-07-07 04:06:35.344861: 
epoch:  220
2022-07-07 04:07:42.903214: train loss : -0.7906
2022-07-07 04:07:47.262290: validation loss: -0.7803
2022-07-07 04:07:47.281694: Average global foreground Dice: [0.8204]
2022-07-07 04:07:47.294264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:07:47.796149: Suus1 maybe_update_lr lr: 0.005915
2022-07-07 04:07:47.806451: This epoch took 72.458942 s

2022-07-07 04:07:47.816810: 
epoch:  221
2022-07-07 04:08:55.434128: train loss : -0.8051
2022-07-07 04:09:00.065872: validation loss: -0.7819
2022-07-07 04:09:00.088609: Average global foreground Dice: [0.822]
2022-07-07 04:09:00.090944: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:09:00.616714: Suus1 maybe_update_lr lr: 0.005896
2022-07-07 04:09:00.628447: saving best epoch checkpoint...
2022-07-07 04:09:00.688366: saving checkpoint...
2022-07-07 04:09:01.865619: done, saving took 1.22 seconds
2022-07-07 04:09:01.881193: This epoch took 74.035845 s

2022-07-07 04:09:01.883677: 
epoch:  222
2022-07-07 04:10:09.447418: train loss : -0.7996
2022-07-07 04:10:13.896960: validation loss: -0.7974
2022-07-07 04:10:13.928785: Average global foreground Dice: [0.8332]
2022-07-07 04:10:13.944263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:10:14.533077: Suus1 maybe_update_lr lr: 0.005877
2022-07-07 04:10:14.536195: saving best epoch checkpoint...
2022-07-07 04:10:14.585367: saving checkpoint...
2022-07-07 04:10:15.764061: done, saving took 1.23 seconds
2022-07-07 04:10:15.778952: This epoch took 73.893150 s

2022-07-07 04:10:15.781597: 
epoch:  223
2022-07-07 04:11:23.382842: train loss : -0.8112
2022-07-07 04:11:27.786315: validation loss: -0.7847
2022-07-07 04:11:27.797473: Average global foreground Dice: [0.8313]
2022-07-07 04:11:27.811302: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:11:28.290059: Suus1 maybe_update_lr lr: 0.005858
2022-07-07 04:11:28.292520: saving best epoch checkpoint...
2022-07-07 04:11:28.332209: saving checkpoint...
2022-07-07 04:11:29.489617: done, saving took 1.20 seconds
2022-07-07 04:11:29.505159: This epoch took 73.721179 s

2022-07-07 04:11:29.507222: 
epoch:  224
2022-07-07 04:12:37.268071: train loss : -0.8028
2022-07-07 04:12:41.632599: validation loss: -0.7983
2022-07-07 04:12:41.659881: Average global foreground Dice: [0.8392]
2022-07-07 04:12:41.673974: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:12:42.238963: Suus1 maybe_update_lr lr: 0.005839
2022-07-07 04:12:42.241576: saving best epoch checkpoint...
2022-07-07 04:12:42.280497: saving checkpoint...
2022-07-07 04:12:43.318359: done, saving took 1.07 seconds
2022-07-07 04:12:43.333166: This epoch took 73.823725 s

2022-07-07 04:12:43.335522: 
epoch:  225
2022-07-07 04:13:50.821384: train loss : -0.7977
2022-07-07 04:13:55.463562: validation loss: -0.7912
2022-07-07 04:13:55.492722: Average global foreground Dice: [0.8297]
2022-07-07 04:13:55.522250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:13:56.051657: Suus1 maybe_update_lr lr: 0.00582
2022-07-07 04:13:56.078580: saving best epoch checkpoint...
2022-07-07 04:13:56.133390: saving checkpoint...
2022-07-07 04:13:57.308204: done, saving took 1.21 seconds
2022-07-07 04:13:57.323949: This epoch took 73.986305 s

2022-07-07 04:13:57.326150: 
epoch:  226
2022-07-07 04:15:04.980252: train loss : -0.7937
2022-07-07 04:15:09.309022: validation loss: -0.7628
2022-07-07 04:15:09.329827: Average global foreground Dice: [0.802]
2022-07-07 04:15:09.338876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:15:09.825775: Suus1 maybe_update_lr lr: 0.005801
2022-07-07 04:15:09.828233: This epoch took 72.499816 s

2022-07-07 04:15:09.830275: 
epoch:  227
2022-07-07 04:16:17.428996: train loss : -0.7976
2022-07-07 04:16:21.774731: validation loss: -0.7480
2022-07-07 04:16:21.788580: Average global foreground Dice: [0.8053]
2022-07-07 04:16:21.801032: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:16:22.399037: Suus1 maybe_update_lr lr: 0.005781
2022-07-07 04:16:22.401558: This epoch took 72.568996 s

2022-07-07 04:16:22.403734: 
epoch:  228
2022-07-07 04:17:30.147624: train loss : -0.7908
2022-07-07 04:17:34.687322: validation loss: -0.7631
2022-07-07 04:17:34.695299: Average global foreground Dice: [0.8043]
2022-07-07 04:17:34.743809: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:17:35.423877: Suus1 maybe_update_lr lr: 0.005762
2022-07-07 04:17:35.455276: This epoch took 73.049489 s

2022-07-07 04:17:35.488233: 
epoch:  229
2022-07-07 04:18:43.141442: train loss : -0.7818
2022-07-07 04:18:47.518096: validation loss: -0.7534
2022-07-07 04:18:47.528782: Average global foreground Dice: [0.8091]
2022-07-07 04:18:47.559588: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:18:48.117572: Suus1 maybe_update_lr lr: 0.005743
2022-07-07 04:18:48.120146: This epoch took 72.629358 s

2022-07-07 04:18:48.122264: 
epoch:  230
2022-07-07 04:19:55.786348: train loss : -0.7918
2022-07-07 04:20:00.203241: validation loss: -0.7593
2022-07-07 04:20:00.207499: Average global foreground Dice: [0.812]
2022-07-07 04:20:00.219946: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:20:00.773450: Suus1 maybe_update_lr lr: 0.005724
2022-07-07 04:20:00.775806: This epoch took 72.651436 s

2022-07-07 04:20:00.777901: 
epoch:  231
2022-07-07 04:21:08.486180: train loss : -0.8020
2022-07-07 04:21:12.783979: validation loss: -0.7613
2022-07-07 04:21:12.809793: Average global foreground Dice: [0.8142]
2022-07-07 04:21:12.830729: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:21:13.363541: Suus1 maybe_update_lr lr: 0.005705
2022-07-07 04:21:13.440711: This epoch took 72.660351 s

2022-07-07 04:21:13.443512: 
epoch:  232
2022-07-07 04:22:21.021015: train loss : -0.8038
2022-07-07 04:22:25.316231: validation loss: -0.7745
2022-07-07 04:22:25.352655: Average global foreground Dice: [0.8181]
2022-07-07 04:22:25.385254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:22:25.909019: Suus1 maybe_update_lr lr: 0.005686
2022-07-07 04:22:25.911950: This epoch took 72.466074 s

2022-07-07 04:22:25.914472: 
epoch:  233
2022-07-07 04:23:33.498661: train loss : -0.8077
2022-07-07 04:23:37.933391: validation loss: -0.7496
2022-07-07 04:23:37.968455: Average global foreground Dice: [0.8116]
2022-07-07 04:23:37.979743: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:23:38.536997: Suus1 maybe_update_lr lr: 0.005667
2022-07-07 04:23:38.539975: This epoch took 72.623394 s

2022-07-07 04:23:38.542695: 
epoch:  234
2022-07-07 04:24:46.221982: train loss : -0.8033
2022-07-07 04:24:50.684457: validation loss: -0.7919
2022-07-07 04:24:50.692641: Average global foreground Dice: [0.8302]
2022-07-07 04:24:50.702625: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:24:51.292850: Suus1 maybe_update_lr lr: 0.005647
2022-07-07 04:24:51.295122: This epoch took 72.750073 s

2022-07-07 04:24:51.299340: 
epoch:  235
2022-07-07 04:25:58.890228: train loss : -0.7993
2022-07-07 04:26:03.183072: validation loss: -0.7746
2022-07-07 04:26:03.195416: Average global foreground Dice: [0.817]
2022-07-07 04:26:03.213298: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:26:03.698647: Suus1 maybe_update_lr lr: 0.005628
2022-07-07 04:26:03.701769: This epoch took 72.398206 s

2022-07-07 04:26:03.705648: 
epoch:  236
2022-07-07 04:27:11.233509: train loss : -0.7954
2022-07-07 04:27:15.881499: validation loss: -0.7852
2022-07-07 04:27:15.896662: Average global foreground Dice: [0.8271]
2022-07-07 04:27:15.912658: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:27:16.438070: Suus1 maybe_update_lr lr: 0.005609
2022-07-07 04:27:16.448811: This epoch took 72.740229 s

2022-07-07 04:27:16.471237: 
epoch:  237
2022-07-07 04:28:24.038783: train loss : -0.8054
2022-07-07 04:28:28.541117: validation loss: -0.7685
2022-07-07 04:28:28.551389: Average global foreground Dice: [0.8075]
2022-07-07 04:28:28.560296: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:28:29.080455: Suus1 maybe_update_lr lr: 0.00559
2022-07-07 04:28:29.103293: This epoch took 72.619376 s

2022-07-07 04:28:29.136233: 
epoch:  238
2022-07-07 04:29:36.733975: train loss : -0.8119
2022-07-07 04:29:41.060337: validation loss: -0.7797
2022-07-07 04:29:41.064262: Average global foreground Dice: [0.8187]
2022-07-07 04:29:41.069019: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:29:41.555386: Suus1 maybe_update_lr lr: 0.005571
2022-07-07 04:29:41.557853: This epoch took 72.415062 s

2022-07-07 04:29:41.560213: 
epoch:  239
2022-07-07 04:30:49.184789: train loss : -0.8110
2022-07-07 04:30:53.616276: validation loss: -0.7952
2022-07-07 04:30:53.646604: Average global foreground Dice: [0.8338]
2022-07-07 04:30:53.669661: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:30:54.187535: Suus1 maybe_update_lr lr: 0.005551
2022-07-07 04:30:54.190387: This epoch took 72.627825 s

2022-07-07 04:30:54.192643: 
epoch:  240
2022-07-07 04:32:01.770120: train loss : -0.8115
2022-07-07 04:32:06.208726: validation loss: -0.7855
2022-07-07 04:32:06.215297: Average global foreground Dice: [0.8314]
2022-07-07 04:32:06.228662: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:32:06.744464: Suus1 maybe_update_lr lr: 0.005532
2022-07-07 04:32:06.747121: This epoch took 72.552242 s

2022-07-07 04:32:06.749453: 
epoch:  241
2022-07-07 04:33:14.378900: train loss : -0.8107
2022-07-07 04:33:18.718566: validation loss: -0.7828
2022-07-07 04:33:18.723257: Average global foreground Dice: [0.8266]
2022-07-07 04:33:18.728738: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:33:19.234472: Suus1 maybe_update_lr lr: 0.005513
2022-07-07 04:33:19.237459: This epoch took 72.485744 s

2022-07-07 04:33:19.240994: 
epoch:  242
2022-07-07 04:34:26.883926: train loss : -0.8037
2022-07-07 04:34:31.220941: validation loss: -0.7938
2022-07-07 04:34:31.224436: Average global foreground Dice: [0.8308]
2022-07-07 04:34:31.248368: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:34:31.746675: Suus1 maybe_update_lr lr: 0.005494
2022-07-07 04:34:31.749394: This epoch took 72.506178 s

2022-07-07 04:34:31.751568: 
epoch:  243
2022-07-07 04:35:39.350952: train loss : -0.8087
2022-07-07 04:35:43.717967: validation loss: -0.7653
2022-07-07 04:35:43.752671: Average global foreground Dice: [0.8216]
2022-07-07 04:35:43.765330: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:35:44.285727: Suus1 maybe_update_lr lr: 0.005474
2022-07-07 04:35:44.291387: This epoch took 72.537660 s

2022-07-07 04:35:44.294054: 
epoch:  244
2022-07-07 04:36:51.944087: train loss : -0.8095
2022-07-07 04:36:56.380285: validation loss: -0.7777
2022-07-07 04:36:56.384100: Average global foreground Dice: [0.8254]
2022-07-07 04:36:56.391606: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:36:56.829950: Suus1 maybe_update_lr lr: 0.005455
2022-07-07 04:36:56.832583: This epoch took 72.536420 s

2022-07-07 04:36:56.834805: 
epoch:  245
2022-07-07 04:38:04.492251: train loss : -0.7966
2022-07-07 04:38:08.914232: validation loss: -0.7453
2022-07-07 04:38:08.918409: Average global foreground Dice: [0.7994]
2022-07-07 04:38:08.920972: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:38:09.432398: Suus1 maybe_update_lr lr: 0.005436
2022-07-07 04:38:09.434226: This epoch took 72.597242 s

2022-07-07 04:38:09.436929: 
epoch:  246
2022-07-07 04:39:17.007642: train loss : -0.7955
2022-07-07 04:39:21.314567: validation loss: -0.7851
2022-07-07 04:39:21.365652: Average global foreground Dice: [0.8232]
2022-07-07 04:39:21.396257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:39:21.937977: Suus1 maybe_update_lr lr: 0.005417
2022-07-07 04:39:21.940716: This epoch took 72.501811 s

2022-07-07 04:39:21.943430: 
epoch:  247
2022-07-07 04:40:29.584443: train loss : -0.7871
2022-07-07 04:40:33.879046: validation loss: -0.7835
2022-07-07 04:40:33.882402: Average global foreground Dice: [0.8398]
2022-07-07 04:40:33.885832: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:40:34.396693: Suus1 maybe_update_lr lr: 0.005397
2022-07-07 04:40:34.399543: This epoch took 72.453426 s

2022-07-07 04:40:34.401754: 
epoch:  248
2022-07-07 04:41:42.038313: train loss : -0.7823
2022-07-07 04:41:46.474060: validation loss: -0.7626
2022-07-07 04:41:46.512043: Average global foreground Dice: [0.8102]
2022-07-07 04:41:46.534791: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:41:47.095871: Suus1 maybe_update_lr lr: 0.005378
2022-07-07 04:41:47.098222: This epoch took 72.693711 s

2022-07-07 04:41:47.100543: 
epoch:  249
2022-07-07 04:42:54.783346: train loss : -0.7900
2022-07-07 04:42:59.228276: validation loss: -0.7799
2022-07-07 04:42:59.251846: Average global foreground Dice: [0.8257]
2022-07-07 04:42:59.270183: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:42:59.747945: Suus1 maybe_update_lr lr: 0.005359
2022-07-07 04:42:59.781274: saving scheduled checkpoint file...
2022-07-07 04:42:59.871962: saving checkpoint...
2022-07-07 04:43:01.139858: done, saving took 1.34 seconds
2022-07-07 04:43:01.160126: done
2022-07-07 04:43:01.162566: This epoch took 74.059871 s

2022-07-07 04:43:01.165269: 
epoch:  250
2022-07-07 04:44:08.971191: train loss : -0.8020
2022-07-07 04:44:13.441125: validation loss: -0.7837
2022-07-07 04:44:13.454590: Average global foreground Dice: [0.8208]
2022-07-07 04:44:13.464070: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:44:14.000992: Suus1 maybe_update_lr lr: 0.00534
2022-07-07 04:44:14.021172: This epoch took 72.853693 s

2022-07-07 04:44:14.023970: 
epoch:  251
2022-07-07 04:45:21.721546: train loss : -0.8028
2022-07-07 04:45:26.163953: validation loss: -0.7795
2022-07-07 04:45:26.171679: Average global foreground Dice: [0.8172]
2022-07-07 04:45:26.186982: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:45:26.685640: Suus1 maybe_update_lr lr: 0.00532
2022-07-07 04:45:26.688289: This epoch took 72.661863 s

2022-07-07 04:45:26.698830: 
epoch:  252
2022-07-07 04:46:34.257902: train loss : -0.8095
2022-07-07 04:46:38.702268: validation loss: -0.7741
2022-07-07 04:46:38.710323: Average global foreground Dice: [0.8122]
2022-07-07 04:46:38.718454: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:46:39.206514: Suus1 maybe_update_lr lr: 0.005301
2022-07-07 04:46:39.238297: This epoch took 72.529887 s

2022-07-07 04:46:39.263808: 
epoch:  253
2022-07-07 04:47:46.903448: train loss : -0.8183
2022-07-07 04:47:51.603403: validation loss: -0.7861
2022-07-07 04:47:51.649096: Average global foreground Dice: [0.8259]
2022-07-07 04:47:51.667271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:47:52.179238: Suus1 maybe_update_lr lr: 0.005282
2022-07-07 04:47:52.182467: This epoch took 72.906117 s

2022-07-07 04:47:52.185063: 
epoch:  254
2022-07-07 04:48:59.776076: train loss : -0.8185
2022-07-07 04:49:04.111004: validation loss: -0.7814
2022-07-07 04:49:04.122108: Average global foreground Dice: [0.8236]
2022-07-07 04:49:04.151378: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:49:04.798501: Suus1 maybe_update_lr lr: 0.005262
2022-07-07 04:49:04.800817: This epoch took 72.612806 s

2022-07-07 04:49:04.802928: 
epoch:  255
2022-07-07 04:50:12.402917: train loss : -0.8224
2022-07-07 04:50:16.782828: validation loss: -0.7921
2022-07-07 04:50:16.786745: Average global foreground Dice: [0.839]
2022-07-07 04:50:16.792828: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:50:17.277881: Suus1 maybe_update_lr lr: 0.005243
2022-07-07 04:50:17.287821: This epoch took 72.482455 s

2022-07-07 04:50:17.296922: 
epoch:  256
2022-07-07 04:51:24.871086: train loss : -0.8209
2022-07-07 04:51:29.182303: validation loss: -0.7934
2022-07-07 04:51:29.203643: Average global foreground Dice: [0.8286]
2022-07-07 04:51:29.215094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:51:29.714477: Suus1 maybe_update_lr lr: 0.005224
2022-07-07 04:51:29.717390: saving best epoch checkpoint...
2022-07-07 04:51:29.759438: saving checkpoint...
2022-07-07 04:51:30.966850: done, saving took 1.25 seconds
2022-07-07 04:51:30.982377: This epoch took 73.675837 s

2022-07-07 04:51:30.984609: 
epoch:  257
2022-07-07 04:52:38.508771: train loss : -0.8137
2022-07-07 04:52:42.893616: validation loss: -0.7519
2022-07-07 04:52:42.896957: Average global foreground Dice: [0.7938]
2022-07-07 04:52:42.905915: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:52:43.341272: Suus1 maybe_update_lr lr: 0.005204
2022-07-07 04:52:43.343924: This epoch took 72.356927 s

2022-07-07 04:52:43.346215: 
epoch:  258
2022-07-07 04:53:50.924373: train loss : -0.8202
2022-07-07 04:53:55.533765: validation loss: -0.7907
2022-07-07 04:53:55.543962: Average global foreground Dice: [0.8266]
2022-07-07 04:53:55.555756: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:53:56.091742: Suus1 maybe_update_lr lr: 0.005185
2022-07-07 04:53:56.094244: This epoch took 72.745843 s

2022-07-07 04:53:56.096686: 
epoch:  259
2022-07-07 04:55:03.747825: train loss : -0.8092
2022-07-07 04:55:08.015830: validation loss: -0.7758
2022-07-07 04:55:08.044722: Average global foreground Dice: [0.8217]
2022-07-07 04:55:08.054304: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:55:08.659554: Suus1 maybe_update_lr lr: 0.005166
2022-07-07 04:55:08.661936: This epoch took 72.563143 s

2022-07-07 04:55:08.663980: 
epoch:  260
2022-07-07 04:56:16.293536: train loss : -0.8189
2022-07-07 04:56:20.634208: validation loss: -0.7872
2022-07-07 04:56:20.637393: Average global foreground Dice: [0.8317]
2022-07-07 04:56:20.639485: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:56:21.166088: Suus1 maybe_update_lr lr: 0.005146
2022-07-07 04:56:21.171438: This epoch took 72.505516 s

2022-07-07 04:56:21.190243: 
epoch:  261
2022-07-07 04:57:28.811924: train loss : -0.8159
2022-07-07 04:57:33.096432: validation loss: -0.7886
2022-07-07 04:57:33.099438: Average global foreground Dice: [0.8352]
2022-07-07 04:57:33.101688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:57:33.561357: Suus1 maybe_update_lr lr: 0.005127
2022-07-07 04:57:33.571852: saving best epoch checkpoint...
2022-07-07 04:57:33.656090: saving checkpoint...
2022-07-07 04:57:35.601606: done, saving took 2.00 seconds
2022-07-07 04:57:35.618041: This epoch took 74.405788 s

2022-07-07 04:57:35.621202: 
epoch:  262
2022-07-07 04:58:43.284042: train loss : -0.8117
2022-07-07 04:58:47.702542: validation loss: -0.7593
2022-07-07 04:58:47.706764: Average global foreground Dice: [0.8037]
2022-07-07 04:58:47.709346: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 04:58:48.216637: Suus1 maybe_update_lr lr: 0.005107
2022-07-07 04:58:48.219398: This epoch took 72.595230 s

2022-07-07 04:58:48.221679: 
epoch:  263
2022-07-07 04:59:55.832528: train loss : -0.8031
2022-07-07 05:00:00.223685: validation loss: -0.7806
2022-07-07 05:00:00.243667: Average global foreground Dice: [0.824]
2022-07-07 05:00:00.260121: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:00:00.773757: Suus1 maybe_update_lr lr: 0.005088
2022-07-07 05:00:00.776293: This epoch took 72.551871 s

2022-07-07 05:00:00.778468: 
epoch:  264
2022-07-07 05:01:08.311784: train loss : -0.8169
2022-07-07 05:01:12.613626: validation loss: -0.7703
2022-07-07 05:01:12.618545: Average global foreground Dice: [0.8167]
2022-07-07 05:01:12.623970: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:01:13.153075: Suus1 maybe_update_lr lr: 0.005069
2022-07-07 05:01:13.155728: This epoch took 72.375060 s

2022-07-07 05:01:13.158279: 
epoch:  265
2022-07-07 05:02:20.758032: train loss : -0.8222
2022-07-07 05:02:25.206948: validation loss: -0.7967
2022-07-07 05:02:25.210351: Average global foreground Dice: [0.8334]
2022-07-07 05:02:25.213092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:02:25.662692: Suus1 maybe_update_lr lr: 0.005049
2022-07-07 05:02:25.665083: This epoch took 72.504632 s

2022-07-07 05:02:25.667276: 
epoch:  266
2022-07-07 05:03:33.253486: train loss : -0.8287
2022-07-07 05:03:37.760888: validation loss: -0.8098
2022-07-07 05:03:37.784684: Average global foreground Dice: [0.8469]
2022-07-07 05:03:37.793965: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:03:38.364346: Suus1 maybe_update_lr lr: 0.00503
2022-07-07 05:03:38.366747: saving best epoch checkpoint...
2022-07-07 05:03:38.410985: saving checkpoint...
2022-07-07 05:03:39.510802: done, saving took 1.14 seconds
2022-07-07 05:03:39.526288: This epoch took 73.856874 s

2022-07-07 05:03:39.528555: 
epoch:  267
2022-07-07 05:04:47.189017: train loss : -0.8277
2022-07-07 05:04:51.536389: validation loss: -0.7823
2022-07-07 05:04:51.538820: Average global foreground Dice: [0.827]
2022-07-07 05:04:51.578143: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:04:52.195619: Suus1 maybe_update_lr lr: 0.00501
2022-07-07 05:04:52.198089: saving best epoch checkpoint...
2022-07-07 05:04:52.239999: saving checkpoint...
2022-07-07 05:04:53.487842: done, saving took 1.29 seconds
2022-07-07 05:04:53.502268: This epoch took 73.971236 s

2022-07-07 05:04:53.504724: 
epoch:  268
2022-07-07 05:06:01.125406: train loss : -0.8181
2022-07-07 05:06:05.703085: validation loss: -0.7864
2022-07-07 05:06:05.734756: Average global foreground Dice: [0.8334]
2022-07-07 05:06:05.770245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:06:06.259815: Suus1 maybe_update_lr lr: 0.004991
2022-07-07 05:06:06.261667: saving best epoch checkpoint...
2022-07-07 05:06:06.302330: saving checkpoint...
2022-07-07 05:06:07.436167: done, saving took 1.17 seconds
2022-07-07 05:06:07.451631: This epoch took 73.944490 s

2022-07-07 05:06:07.454077: 
epoch:  269
2022-07-07 05:07:15.011111: train loss : -0.8249
2022-07-07 05:07:19.442498: validation loss: -0.8026
2022-07-07 05:07:19.473758: Average global foreground Dice: [0.838]
2022-07-07 05:07:19.489279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:07:20.024204: Suus1 maybe_update_lr lr: 0.004971
2022-07-07 05:07:20.043996: saving best epoch checkpoint...
2022-07-07 05:07:20.115523: saving checkpoint...
2022-07-07 05:07:21.188771: done, saving took 1.12 seconds
2022-07-07 05:07:21.203737: This epoch took 73.747561 s

2022-07-07 05:07:21.205996: 
epoch:  270
2022-07-07 05:08:28.734360: train loss : -0.8191
2022-07-07 05:08:33.121504: validation loss: -0.7944
2022-07-07 05:08:33.133394: Average global foreground Dice: [0.8314]
2022-07-07 05:08:33.138998: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:08:33.641263: Suus1 maybe_update_lr lr: 0.004952
2022-07-07 05:08:33.643976: saving best epoch checkpoint...
2022-07-07 05:08:33.687348: saving checkpoint...
2022-07-07 05:08:34.870833: done, saving took 1.22 seconds
2022-07-07 05:08:34.885446: This epoch took 73.676993 s

2022-07-07 05:08:34.887591: 
epoch:  271
2022-07-07 05:09:42.541288: train loss : -0.8217
2022-07-07 05:09:47.038917: validation loss: -0.8065
2022-07-07 05:09:47.048703: Average global foreground Dice: [0.8427]
2022-07-07 05:09:47.051850: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:09:47.557358: Suus1 maybe_update_lr lr: 0.004933
2022-07-07 05:09:47.559886: saving best epoch checkpoint...
2022-07-07 05:09:47.603581: saving checkpoint...
2022-07-07 05:09:48.807212: done, saving took 1.24 seconds
2022-07-07 05:09:48.822657: This epoch took 73.932850 s

2022-07-07 05:09:48.825292: 
epoch:  272
2022-07-07 05:10:56.375163: train loss : -0.8198
2022-07-07 05:11:00.754202: validation loss: -0.7612
2022-07-07 05:11:00.763100: Average global foreground Dice: [0.8054]
2022-07-07 05:11:00.765446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:11:01.238106: Suus1 maybe_update_lr lr: 0.004913
2022-07-07 05:11:01.242396: This epoch took 72.413863 s

2022-07-07 05:11:01.244625: 
epoch:  273
2022-07-07 05:12:08.841859: train loss : -0.8045
2022-07-07 05:12:13.189114: validation loss: -0.7859
2022-07-07 05:12:13.194111: Average global foreground Dice: [0.8225]
2022-07-07 05:12:13.196562: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:12:13.672916: Suus1 maybe_update_lr lr: 0.004894
2022-07-07 05:12:13.675332: This epoch took 72.428495 s

2022-07-07 05:12:13.677771: 
epoch:  274
2022-07-07 05:13:21.319080: train loss : -0.8128
2022-07-07 05:13:25.690541: validation loss: -0.7815
2022-07-07 05:13:25.714840: Average global foreground Dice: [0.8233]
2022-07-07 05:13:25.727868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:13:26.177810: Suus1 maybe_update_lr lr: 0.004874
2022-07-07 05:13:26.180897: This epoch took 72.500653 s

2022-07-07 05:13:26.183222: 
epoch:  275
2022-07-07 05:14:33.717216: train loss : -0.8184
2022-07-07 05:14:38.055903: validation loss: -0.7907
2022-07-07 05:14:38.067991: Average global foreground Dice: [0.8305]
2022-07-07 05:14:38.071123: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:14:38.547081: Suus1 maybe_update_lr lr: 0.004855
2022-07-07 05:14:38.555481: This epoch took 72.369159 s

2022-07-07 05:14:38.560827: 
epoch:  276
2022-07-07 05:15:46.083172: train loss : -0.8213
2022-07-07 05:15:50.383317: validation loss: -0.7810
2022-07-07 05:15:50.391125: Average global foreground Dice: [0.8171]
2022-07-07 05:15:50.395246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:15:50.986964: Suus1 maybe_update_lr lr: 0.004835
2022-07-07 05:15:50.989518: This epoch took 72.425651 s

2022-07-07 05:15:50.991943: 
epoch:  277
2022-07-07 05:16:58.620094: train loss : -0.8196
2022-07-07 05:17:02.989401: validation loss: -0.7934
2022-07-07 05:17:03.007029: Average global foreground Dice: [0.8311]
2022-07-07 05:17:03.027184: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:17:03.556257: Suus1 maybe_update_lr lr: 0.004816
2022-07-07 05:17:03.559013: This epoch took 72.564644 s

2022-07-07 05:17:03.562442: 
epoch:  278
2022-07-07 05:18:11.185027: train loss : -0.8160
2022-07-07 05:18:15.702355: validation loss: -0.7546
2022-07-07 05:18:15.709129: Average global foreground Dice: [0.8061]
2022-07-07 05:18:15.711643: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:18:16.244946: Suus1 maybe_update_lr lr: 0.004796
2022-07-07 05:18:16.248295: This epoch took 72.683436 s

2022-07-07 05:18:16.250570: 
epoch:  279
2022-07-07 05:19:23.762969: train loss : -0.8252
2022-07-07 05:19:28.111939: validation loss: -0.8031
2022-07-07 05:19:28.115102: Average global foreground Dice: [0.8434]
2022-07-07 05:19:28.117473: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:19:28.644070: Suus1 maybe_update_lr lr: 0.004776
2022-07-07 05:19:28.646374: This epoch took 72.393642 s

2022-07-07 05:19:28.648516: 
epoch:  280
2022-07-07 05:20:36.305124: train loss : -0.8207
2022-07-07 05:20:40.792350: validation loss: -0.7959
2022-07-07 05:20:40.815688: Average global foreground Dice: [0.8354]
2022-07-07 05:20:40.837254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:20:41.315372: Suus1 maybe_update_lr lr: 0.004757
2022-07-07 05:20:41.318020: This epoch took 72.667249 s

2022-07-07 05:20:41.320211: 
epoch:  281
2022-07-07 05:21:48.873024: train loss : -0.8213
2022-07-07 05:21:53.303355: validation loss: -0.7916
2022-07-07 05:21:53.326303: Average global foreground Dice: [0.8271]
2022-07-07 05:21:53.342875: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:21:53.801431: Suus1 maybe_update_lr lr: 0.004737
2022-07-07 05:21:53.814972: This epoch took 72.492575 s

2022-07-07 05:21:53.824238: 
epoch:  282
2022-07-07 05:23:01.429824: train loss : -0.8197
2022-07-07 05:23:05.891867: validation loss: -0.7750
2022-07-07 05:23:05.919829: Average global foreground Dice: [0.8224]
2022-07-07 05:23:05.926920: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:23:06.474372: Suus1 maybe_update_lr lr: 0.004718
2022-07-07 05:23:06.477788: This epoch took 72.642387 s

2022-07-07 05:23:06.480431: 
epoch:  283
2022-07-07 05:24:13.957111: train loss : -0.8245
2022-07-07 05:24:18.279306: validation loss: -0.7698
2022-07-07 05:24:18.288498: Average global foreground Dice: [0.8162]
2022-07-07 05:24:18.311112: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:24:18.889674: Suus1 maybe_update_lr lr: 0.004698
2022-07-07 05:24:18.892241: This epoch took 72.409249 s

2022-07-07 05:24:18.894610: 
epoch:  284
2022-07-07 05:25:26.441113: train loss : -0.8166
2022-07-07 05:25:30.726898: validation loss: -0.7876
2022-07-07 05:25:30.738609: Average global foreground Dice: [0.8297]
2022-07-07 05:25:30.753351: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:25:31.270993: Suus1 maybe_update_lr lr: 0.004679
2022-07-07 05:25:31.273572: This epoch took 72.376394 s

2022-07-07 05:25:31.275777: 
epoch:  285
2022-07-07 05:26:38.896878: train loss : -0.8153
2022-07-07 05:26:43.383022: validation loss: -0.7588
2022-07-07 05:26:43.389904: Average global foreground Dice: [0.7988]
2022-07-07 05:26:43.395581: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:26:43.931131: Suus1 maybe_update_lr lr: 0.004659
2022-07-07 05:26:43.943673: This epoch took 72.665330 s

2022-07-07 05:26:43.946411: 
epoch:  286
2022-07-07 05:27:51.515688: train loss : -0.8004
2022-07-07 05:27:55.797192: validation loss: -0.7774
2022-07-07 05:27:55.811616: Average global foreground Dice: [0.8203]
2022-07-07 05:27:55.832335: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:27:56.310376: Suus1 maybe_update_lr lr: 0.004639
2022-07-07 05:27:56.312698: This epoch took 72.331337 s

2022-07-07 05:27:56.314749: 
epoch:  287
2022-07-07 05:29:03.898137: train loss : -0.8151
2022-07-07 05:29:08.220518: validation loss: -0.8003
2022-07-07 05:29:08.223968: Average global foreground Dice: [0.837]
2022-07-07 05:29:08.227784: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:29:08.817863: Suus1 maybe_update_lr lr: 0.00462
2022-07-07 05:29:08.820403: This epoch took 72.503645 s

2022-07-07 05:29:08.822518: 
epoch:  288
2022-07-07 05:30:16.282710: train loss : -0.8228
2022-07-07 05:30:20.557926: validation loss: -0.7826
2022-07-07 05:30:20.593935: Average global foreground Dice: [0.8348]
2022-07-07 05:30:20.599522: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:30:21.126966: Suus1 maybe_update_lr lr: 0.0046
2022-07-07 05:30:21.129575: This epoch took 72.304720 s

2022-07-07 05:30:21.131643: 
epoch:  289
2022-07-07 05:31:28.733728: train loss : -0.8259
2022-07-07 05:31:33.153519: validation loss: -0.7670
2022-07-07 05:31:33.160884: Average global foreground Dice: [0.8139]
2022-07-07 05:31:33.170891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:31:33.729378: Suus1 maybe_update_lr lr: 0.004581
2022-07-07 05:31:33.731995: This epoch took 72.598113 s

2022-07-07 05:31:33.734339: 
epoch:  290
2022-07-07 05:32:41.252401: train loss : -0.8309
2022-07-07 05:32:45.603282: validation loss: -0.7887
2022-07-07 05:32:45.606979: Average global foreground Dice: [0.8327]
2022-07-07 05:32:45.624489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:32:46.210243: Suus1 maybe_update_lr lr: 0.004561
2022-07-07 05:32:46.212909: This epoch took 72.476202 s

2022-07-07 05:32:46.214941: 
epoch:  291
2022-07-07 05:33:53.827429: train loss : -0.8130
2022-07-07 05:33:58.142265: validation loss: -0.7777
2022-07-07 05:33:58.161692: Average global foreground Dice: [0.836]
2022-07-07 05:33:58.167431: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:33:58.637079: Suus1 maybe_update_lr lr: 0.004541
2022-07-07 05:33:58.639914: This epoch took 72.423007 s

2022-07-07 05:33:58.642494: 
epoch:  292
2022-07-07 05:35:06.249882: train loss : -0.8197
2022-07-07 05:35:10.593517: validation loss: -0.7558
2022-07-07 05:35:10.598644: Average global foreground Dice: [0.8097]
2022-07-07 05:35:10.609863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:35:11.155998: Suus1 maybe_update_lr lr: 0.004522
2022-07-07 05:35:11.158652: This epoch took 72.513877 s

2022-07-07 05:35:11.161089: 
epoch:  293
2022-07-07 05:36:18.779839: train loss : -0.8116
2022-07-07 05:36:23.084186: validation loss: -0.8045
2022-07-07 05:36:23.087422: Average global foreground Dice: [0.8404]
2022-07-07 05:36:23.090943: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:36:23.590187: Suus1 maybe_update_lr lr: 0.004502
2022-07-07 05:36:23.592940: This epoch took 72.429263 s

2022-07-07 05:36:23.595216: 
epoch:  294
2022-07-07 05:37:31.079493: train loss : -0.8130
2022-07-07 05:37:35.504428: validation loss: -0.7649
2022-07-07 05:37:35.538947: Average global foreground Dice: [0.8159]
2022-07-07 05:37:35.541800: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:37:36.011858: Suus1 maybe_update_lr lr: 0.004482
2022-07-07 05:37:36.013833: This epoch took 72.416492 s

2022-07-07 05:37:36.016499: 
epoch:  295
2022-07-07 05:38:43.686346: train loss : -0.8180
2022-07-07 05:38:48.091111: validation loss: -0.7673
2022-07-07 05:38:48.120674: Average global foreground Dice: [0.8108]
2022-07-07 05:38:48.129316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:38:48.650820: Suus1 maybe_update_lr lr: 0.004463
2022-07-07 05:38:48.657379: This epoch took 72.638943 s

2022-07-07 05:38:48.683819: 
epoch:  296
2022-07-07 05:39:56.157480: train loss : -0.8350
2022-07-07 05:40:00.470422: validation loss: -0.7704
2022-07-07 05:40:00.497877: Average global foreground Dice: [0.8225]
2022-07-07 05:40:00.519240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:40:01.118378: Suus1 maybe_update_lr lr: 0.004443
2022-07-07 05:40:01.121160: This epoch took 72.429009 s

2022-07-07 05:40:01.123213: 
epoch:  297
2022-07-07 05:41:08.688607: train loss : -0.8218
2022-07-07 05:41:13.222507: validation loss: -0.7761
2022-07-07 05:41:13.229633: Average global foreground Dice: [0.8296]
2022-07-07 05:41:13.256111: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:41:13.849228: Suus1 maybe_update_lr lr: 0.004423
2022-07-07 05:41:13.858812: This epoch took 72.733622 s

2022-07-07 05:41:13.889735: 
epoch:  298
2022-07-07 05:42:21.470829: train loss : -0.8178
2022-07-07 05:42:25.812982: validation loss: -0.7794
2022-07-07 05:42:25.820652: Average global foreground Dice: [0.827]
2022-07-07 05:42:25.823696: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:42:26.282606: Suus1 maybe_update_lr lr: 0.004404
2022-07-07 05:42:26.285099: This epoch took 72.383523 s

2022-07-07 05:42:26.287362: 
epoch:  299
2022-07-07 05:43:33.870032: train loss : -0.8186
2022-07-07 05:43:38.186916: validation loss: -0.7856
2022-07-07 05:43:38.190745: Average global foreground Dice: [0.8282]
2022-07-07 05:43:38.212700: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:43:38.814115: Suus1 maybe_update_lr lr: 0.004384
2022-07-07 05:43:38.816525: saving scheduled checkpoint file...
2022-07-07 05:43:38.856894: saving checkpoint...
2022-07-07 05:43:39.986408: done, saving took 1.17 seconds
2022-07-07 05:43:40.000992: done
2022-07-07 05:43:40.003315: This epoch took 73.713933 s

2022-07-07 05:43:40.005720: 
epoch:  300
2022-07-07 05:44:47.640708: train loss : -0.8275
2022-07-07 05:44:52.080017: validation loss: -0.7806
2022-07-07 05:44:52.090677: Average global foreground Dice: [0.8282]
2022-07-07 05:44:52.127250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:44:52.675557: Suus1 maybe_update_lr lr: 0.004364
2022-07-07 05:44:52.677972: This epoch took 72.669636 s

2022-07-07 05:44:52.680090: 
epoch:  301
2022-07-07 05:46:00.245736: train loss : -0.8236
2022-07-07 05:46:04.588830: validation loss: -0.7764
2022-07-07 05:46:04.611959: Average global foreground Dice: [0.8216]
2022-07-07 05:46:04.644260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:46:05.212223: Suus1 maybe_update_lr lr: 0.004344
2022-07-07 05:46:05.214865: This epoch took 72.532742 s

2022-07-07 05:46:05.217074: 
epoch:  302
2022-07-07 05:47:12.761931: train loss : -0.8300
2022-07-07 05:47:17.017426: validation loss: -0.7878
2022-07-07 05:47:17.020669: Average global foreground Dice: [0.8273]
2022-07-07 05:47:17.029145: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:47:17.616682: Suus1 maybe_update_lr lr: 0.004325
2022-07-07 05:47:17.618953: This epoch took 72.399487 s

2022-07-07 05:47:17.621037: 
epoch:  303
2022-07-07 05:48:25.270011: train loss : -0.8309
2022-07-07 05:48:29.710516: validation loss: -0.7905
2022-07-07 05:48:29.730296: Average global foreground Dice: [0.8362]
2022-07-07 05:48:29.735245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:48:30.344805: Suus1 maybe_update_lr lr: 0.004305
2022-07-07 05:48:30.353961: This epoch took 72.730989 s

2022-07-07 05:48:30.356219: 
epoch:  304
2022-07-07 05:49:37.934526: train loss : -0.8348
2022-07-07 05:49:42.386950: validation loss: -0.7856
2022-07-07 05:49:42.420679: Average global foreground Dice: [0.832]
2022-07-07 05:49:42.453257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:49:42.984485: Suus1 maybe_update_lr lr: 0.004285
2022-07-07 05:49:42.987366: This epoch took 72.626140 s

2022-07-07 05:49:42.990103: 
epoch:  305
2022-07-07 05:50:50.634721: train loss : -0.8350
2022-07-07 05:50:54.973119: validation loss: -0.7890
2022-07-07 05:50:54.978495: Average global foreground Dice: [0.8341]
2022-07-07 05:50:54.989972: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:50:55.430827: Suus1 maybe_update_lr lr: 0.004265
2022-07-07 05:50:55.433054: This epoch took 72.440412 s

2022-07-07 05:50:55.435061: 
epoch:  306
2022-07-07 05:52:02.997465: train loss : -0.8358
2022-07-07 05:52:07.353723: validation loss: -0.8022
2022-07-07 05:52:07.357605: Average global foreground Dice: [0.8385]
2022-07-07 05:52:07.363187: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:52:07.847491: Suus1 maybe_update_lr lr: 0.004245
2022-07-07 05:52:07.880290: This epoch took 72.442945 s

2022-07-07 05:52:07.904310: 
epoch:  307
2022-07-07 05:53:15.569913: train loss : -0.8360
2022-07-07 05:53:20.053840: validation loss: -0.8004
2022-07-07 05:53:20.085654: Average global foreground Dice: [0.8392]
2022-07-07 05:53:20.116592: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:53:20.647195: Suus1 maybe_update_lr lr: 0.004226
2022-07-07 05:53:20.649282: saving best epoch checkpoint...
2022-07-07 05:53:20.698695: saving checkpoint...
2022-07-07 05:53:21.803479: done, saving took 1.15 seconds
2022-07-07 05:53:21.818418: This epoch took 73.888256 s

2022-07-07 05:53:21.820605: 
epoch:  308
2022-07-07 05:54:29.397036: train loss : -0.8264
2022-07-07 05:54:33.720070: validation loss: -0.7763
2022-07-07 05:54:33.743519: Average global foreground Dice: [0.8163]
2022-07-07 05:54:33.773599: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:54:34.249736: Suus1 maybe_update_lr lr: 0.004206
2022-07-07 05:54:34.252038: This epoch took 72.429302 s

2022-07-07 05:54:34.254127: 
epoch:  309
2022-07-07 05:55:41.905046: train loss : -0.8212
2022-07-07 05:55:46.241984: validation loss: -0.7808
2022-07-07 05:55:46.274669: Average global foreground Dice: [0.8224]
2022-07-07 05:55:46.289313: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:55:46.886657: Suus1 maybe_update_lr lr: 0.004186
2022-07-07 05:55:46.889113: This epoch took 72.632721 s

2022-07-07 05:55:46.891190: 
epoch:  310
2022-07-07 05:56:54.357702: train loss : -0.8357
2022-07-07 05:56:58.810456: validation loss: -0.7869
2022-07-07 05:56:58.832961: Average global foreground Dice: [0.8374]
2022-07-07 05:56:58.870265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:56:59.367779: Suus1 maybe_update_lr lr: 0.004166
2022-07-07 05:56:59.371150: This epoch took 72.477961 s

2022-07-07 05:56:59.374470: 
epoch:  311
2022-07-07 05:58:07.069122: train loss : -0.8395
2022-07-07 05:58:11.518852: validation loss: -0.7825
2022-07-07 05:58:11.542502: Average global foreground Dice: [0.8351]
2022-07-07 05:58:11.545437: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:58:12.058335: Suus1 maybe_update_lr lr: 0.004146
2022-07-07 05:58:12.060786: This epoch took 72.684356 s

2022-07-07 05:58:12.063057: 
epoch:  312
2022-07-07 05:59:19.745948: train loss : -0.8363
2022-07-07 05:59:24.268988: validation loss: -0.7993
2022-07-07 05:59:24.291564: Average global foreground Dice: [0.8301]
2022-07-07 05:59:24.298506: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 05:59:24.954563: Suus1 maybe_update_lr lr: 0.004127
2022-07-07 05:59:24.957134: This epoch took 72.891997 s

2022-07-07 05:59:24.959566: 
epoch:  313
2022-07-07 06:00:32.660317: train loss : -0.8267
2022-07-07 06:00:36.965513: validation loss: -0.7695
2022-07-07 06:00:37.007632: Average global foreground Dice: [0.814]
2022-07-07 06:00:37.023268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:00:37.657158: Suus1 maybe_update_lr lr: 0.004107
2022-07-07 06:00:37.659995: This epoch took 72.698115 s

2022-07-07 06:00:37.662644: 
epoch:  314
2022-07-07 06:01:45.301030: train loss : -0.8256
2022-07-07 06:01:49.666213: validation loss: -0.7924
2022-07-07 06:01:49.669495: Average global foreground Dice: [0.8391]
2022-07-07 06:01:49.671619: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:01:50.113106: Suus1 maybe_update_lr lr: 0.004087
2022-07-07 06:01:50.123844: This epoch took 72.458809 s

2022-07-07 06:01:50.131803: 
epoch:  315
2022-07-07 06:02:57.743547: train loss : -0.8349
2022-07-07 06:03:02.111484: validation loss: -0.7699
2022-07-07 06:03:02.116474: Average global foreground Dice: [0.8118]
2022-07-07 06:03:02.119160: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:03:02.686997: Suus1 maybe_update_lr lr: 0.004067
2022-07-07 06:03:02.689722: This epoch took 72.548326 s

2022-07-07 06:03:02.692073: 
epoch:  316
2022-07-07 06:04:10.326578: train loss : -0.8308
2022-07-07 06:04:14.777515: validation loss: -0.7869
2022-07-07 06:04:14.809741: Average global foreground Dice: [0.8245]
2022-07-07 06:04:14.827651: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:04:15.468434: Suus1 maybe_update_lr lr: 0.004047
2022-07-07 06:04:15.470837: This epoch took 72.776734 s

2022-07-07 06:04:15.473020: 
epoch:  317
2022-07-07 06:05:23.110639: train loss : -0.8312
2022-07-07 06:05:27.614827: validation loss: -0.8053
2022-07-07 06:05:27.630743: Average global foreground Dice: [0.8422]
2022-07-07 06:05:27.633506: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:05:28.252964: Suus1 maybe_update_lr lr: 0.004027
2022-07-07 06:05:28.255756: This epoch took 72.776128 s

2022-07-07 06:05:28.258081: 
epoch:  318
2022-07-07 06:06:35.888860: train loss : -0.8331
2022-07-07 06:06:40.283793: validation loss: -0.7669
2022-07-07 06:06:40.290582: Average global foreground Dice: [0.816]
2022-07-07 06:06:40.293216: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:06:40.843872: Suus1 maybe_update_lr lr: 0.004007
2022-07-07 06:06:40.874267: This epoch took 72.613976 s

2022-07-07 06:06:40.892134: 
epoch:  319
2022-07-07 06:07:48.580554: train loss : -0.8266
2022-07-07 06:07:53.011204: validation loss: -0.7678
2022-07-07 06:07:53.038483: Average global foreground Dice: [0.8181]
2022-07-07 06:07:53.047933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:07:53.633716: Suus1 maybe_update_lr lr: 0.003987
2022-07-07 06:07:53.635949: This epoch took 72.733824 s

2022-07-07 06:07:53.637887: 
epoch:  320
2022-07-07 06:09:01.247775: train loss : -0.8361
2022-07-07 06:09:05.574749: validation loss: -0.7698
2022-07-07 06:09:05.578094: Average global foreground Dice: [0.8255]
2022-07-07 06:09:05.580557: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:09:06.023611: Suus1 maybe_update_lr lr: 0.003967
2022-07-07 06:09:06.025586: This epoch took 72.385777 s

2022-07-07 06:09:06.028468: 
epoch:  321
2022-07-07 06:10:13.593837: train loss : -0.8349
2022-07-07 06:10:17.960351: validation loss: -0.7807
2022-07-07 06:10:17.989340: Average global foreground Dice: [0.8319]
2022-07-07 06:10:18.010250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:10:18.510903: Suus1 maybe_update_lr lr: 0.003947
2022-07-07 06:10:18.513355: This epoch took 72.482576 s

2022-07-07 06:10:18.515323: 
epoch:  322
2022-07-07 06:11:26.109361: train loss : -0.8321
2022-07-07 06:11:30.420737: validation loss: -0.7878
2022-07-07 06:11:30.429225: Average global foreground Dice: [0.8273]
2022-07-07 06:11:30.432769: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:11:30.917464: Suus1 maybe_update_lr lr: 0.003927
2022-07-07 06:11:30.920058: This epoch took 72.402842 s

2022-07-07 06:11:30.922280: 
epoch:  323
2022-07-07 06:12:38.467522: train loss : -0.8326
2022-07-07 06:12:42.929084: validation loss: -0.7773
2022-07-07 06:12:42.944341: Average global foreground Dice: [0.8282]
2022-07-07 06:12:42.975754: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:12:43.438456: Suus1 maybe_update_lr lr: 0.003907
2022-07-07 06:12:43.440783: This epoch took 72.516197 s

2022-07-07 06:12:43.443071: 
epoch:  324
2022-07-07 06:13:51.059726: train loss : -0.8395
2022-07-07 06:13:55.451853: validation loss: -0.7851
2022-07-07 06:13:55.456851: Average global foreground Dice: [0.8312]
2022-07-07 06:13:55.459548: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:13:56.002655: Suus1 maybe_update_lr lr: 0.003887
2022-07-07 06:13:56.004982: This epoch took 72.559372 s

2022-07-07 06:13:56.007339: 
epoch:  325
2022-07-07 06:15:03.613110: train loss : -0.8399
2022-07-07 06:15:08.011888: validation loss: -0.7963
2022-07-07 06:15:08.019430: Average global foreground Dice: [0.8347]
2022-07-07 06:15:08.028685: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:15:08.479414: Suus1 maybe_update_lr lr: 0.003867
2022-07-07 06:15:08.482114: This epoch took 72.472809 s

2022-07-07 06:15:08.484189: 
epoch:  326
2022-07-07 06:16:16.170965: train loss : -0.8412
2022-07-07 06:16:20.551234: validation loss: -0.7679
2022-07-07 06:16:20.554829: Average global foreground Dice: [0.8151]
2022-07-07 06:16:20.557002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:16:21.009171: Suus1 maybe_update_lr lr: 0.003847
2022-07-07 06:16:21.011695: This epoch took 72.525420 s

2022-07-07 06:16:21.039247: 
epoch:  327
2022-07-07 06:17:28.847795: train loss : -0.8471
2022-07-07 06:17:33.279651: validation loss: -0.7762
2022-07-07 06:17:33.284855: Average global foreground Dice: [0.8214]
2022-07-07 06:17:33.294996: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:17:33.884118: Suus1 maybe_update_lr lr: 0.003827
2022-07-07 06:17:33.886569: This epoch took 72.822599 s

2022-07-07 06:17:33.888530: 
epoch:  328
2022-07-07 06:18:41.478986: train loss : -0.8394
2022-07-07 06:18:45.740054: validation loss: -0.8027
2022-07-07 06:18:45.759907: Average global foreground Dice: [0.8361]
2022-07-07 06:18:45.789345: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:18:46.310028: Suus1 maybe_update_lr lr: 0.003807
2022-07-07 06:18:46.312331: This epoch took 72.421908 s

2022-07-07 06:18:46.314469: 
epoch:  329
2022-07-07 06:19:54.008972: train loss : -0.8434
2022-07-07 06:19:58.242409: validation loss: -0.8000
2022-07-07 06:19:58.247363: Average global foreground Dice: [0.8345]
2022-07-07 06:19:58.262220: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:19:58.757590: Suus1 maybe_update_lr lr: 0.003787
2022-07-07 06:19:58.759759: This epoch took 72.443398 s

2022-07-07 06:19:58.761719: 
epoch:  330
2022-07-07 06:21:06.386045: train loss : -0.8402
2022-07-07 06:21:10.838958: validation loss: -0.7384
2022-07-07 06:21:10.843079: Average global foreground Dice: [0.8074]
2022-07-07 06:21:10.846981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:21:11.338543: Suus1 maybe_update_lr lr: 0.003767
2022-07-07 06:21:11.349889: This epoch took 72.586227 s

2022-07-07 06:21:11.352230: 
epoch:  331
2022-07-07 06:22:18.964011: train loss : -0.8381
2022-07-07 06:22:23.415056: validation loss: -0.7447
2022-07-07 06:22:23.440732: Average global foreground Dice: [0.7991]
2022-07-07 06:22:23.465104: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:22:23.935602: Suus1 maybe_update_lr lr: 0.003747
2022-07-07 06:22:23.937782: This epoch took 72.583260 s

2022-07-07 06:22:23.939789: 
epoch:  332
2022-07-07 06:23:31.547522: train loss : -0.8455
2022-07-07 06:23:35.850923: validation loss: -0.8122
2022-07-07 06:23:35.882664: Average global foreground Dice: [0.846]
2022-07-07 06:23:35.904241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:23:36.421051: Suus1 maybe_update_lr lr: 0.003727
2022-07-07 06:23:36.423123: This epoch took 72.481461 s

2022-07-07 06:23:36.425070: 
epoch:  333
2022-07-07 06:24:44.033037: train loss : -0.8526
2022-07-07 06:24:48.402581: validation loss: -0.7833
2022-07-07 06:24:48.408532: Average global foreground Dice: [0.8275]
2022-07-07 06:24:48.413581: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:24:48.873687: Suus1 maybe_update_lr lr: 0.003707
2022-07-07 06:24:48.876093: This epoch took 72.448996 s

2022-07-07 06:24:48.878249: 
epoch:  334
2022-07-07 06:25:56.502795: train loss : -0.8415
2022-07-07 06:26:00.818090: validation loss: -0.7921
2022-07-07 06:26:00.822246: Average global foreground Dice: [0.8297]
2022-07-07 06:26:00.824497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:26:01.295716: Suus1 maybe_update_lr lr: 0.003687
2022-07-07 06:26:01.298694: This epoch took 72.418538 s

2022-07-07 06:26:01.301352: 
epoch:  335
2022-07-07 06:27:08.828302: train loss : -0.8394
2022-07-07 06:27:13.152392: validation loss: -0.7930
2022-07-07 06:27:13.160327: Average global foreground Dice: [0.8317]
2022-07-07 06:27:13.175240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:27:13.670255: Suus1 maybe_update_lr lr: 0.003667
2022-07-07 06:27:13.674736: This epoch took 72.370684 s

2022-07-07 06:27:13.676874: 
epoch:  336
2022-07-07 06:28:21.162249: train loss : -0.8445
2022-07-07 06:28:25.458158: validation loss: -0.7874
2022-07-07 06:28:25.463015: Average global foreground Dice: [0.8274]
2022-07-07 06:28:25.465093: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:28:25.905193: Suus1 maybe_update_lr lr: 0.003647
2022-07-07 06:28:25.907516: This epoch took 72.228684 s

2022-07-07 06:28:25.909489: 
epoch:  337
2022-07-07 06:29:33.539857: train loss : -0.8494
2022-07-07 06:29:37.882456: validation loss: -0.7932
2022-07-07 06:29:37.889248: Average global foreground Dice: [0.8332]
2022-07-07 06:29:37.905873: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:29:38.496782: Suus1 maybe_update_lr lr: 0.003627
2022-07-07 06:29:38.498991: This epoch took 72.587449 s

2022-07-07 06:29:38.501038: 
epoch:  338
2022-07-07 06:30:46.131832: train loss : -0.8344
2022-07-07 06:30:50.644598: validation loss: -0.7723
2022-07-07 06:30:50.678841: Average global foreground Dice: [0.8176]
2022-07-07 06:30:50.696278: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:30:51.203647: Suus1 maybe_update_lr lr: 0.003606
2022-07-07 06:30:51.205951: This epoch took 72.702922 s

2022-07-07 06:30:51.208010: 
epoch:  339
2022-07-07 06:31:58.775999: train loss : -0.8361
2022-07-07 06:32:03.084868: validation loss: -0.7786
2022-07-07 06:32:03.089338: Average global foreground Dice: [0.8422]
2022-07-07 06:32:03.123830: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:32:03.669914: Suus1 maybe_update_lr lr: 0.003586
2022-07-07 06:32:03.673380: This epoch took 72.463324 s

2022-07-07 06:32:03.676118: 
epoch:  340
2022-07-07 06:33:11.228522: train loss : -0.8349
2022-07-07 06:33:15.697925: validation loss: -0.7810
2022-07-07 06:33:15.702320: Average global foreground Dice: [0.824]
2022-07-07 06:33:15.705001: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:33:16.261906: Suus1 maybe_update_lr lr: 0.003566
2022-07-07 06:33:16.264326: This epoch took 72.585452 s

2022-07-07 06:33:16.266372: 
epoch:  341
2022-07-07 06:34:23.816734: train loss : -0.8358
2022-07-07 06:34:28.117839: validation loss: -0.7944
2022-07-07 06:34:28.132749: Average global foreground Dice: [0.8314]
2022-07-07 06:34:28.163655: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:34:28.705442: Suus1 maybe_update_lr lr: 0.003546
2022-07-07 06:34:28.707801: This epoch took 72.439385 s

2022-07-07 06:34:28.709936: 
epoch:  342
2022-07-07 06:35:36.341589: train loss : -0.8415
2022-07-07 06:35:40.668862: validation loss: -0.7858
2022-07-07 06:35:40.679856: Average global foreground Dice: [0.8261]
2022-07-07 06:35:40.690154: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:35:41.198691: Suus1 maybe_update_lr lr: 0.003526
2022-07-07 06:35:41.201460: This epoch took 72.489489 s

2022-07-07 06:35:41.204224: 
epoch:  343
2022-07-07 06:36:48.857711: train loss : -0.8486
2022-07-07 06:36:53.278036: validation loss: -0.7969
2022-07-07 06:36:53.288692: Average global foreground Dice: [0.8311]
2022-07-07 06:36:53.297356: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:36:53.780058: Suus1 maybe_update_lr lr: 0.003505
2022-07-07 06:36:53.781897: This epoch took 72.574922 s

2022-07-07 06:36:53.784541: 
epoch:  344
2022-07-07 06:38:01.403932: train loss : -0.8486
2022-07-07 06:38:05.792987: validation loss: -0.7684
2022-07-07 06:38:05.796072: Average global foreground Dice: [0.8139]
2022-07-07 06:38:05.798280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:38:06.315884: Suus1 maybe_update_lr lr: 0.003485
2022-07-07 06:38:06.318552: This epoch took 72.532026 s

2022-07-07 06:38:06.320783: 
epoch:  345
2022-07-07 06:39:13.894297: train loss : -0.8490
2022-07-07 06:39:18.287329: validation loss: -0.7826
2022-07-07 06:39:18.314677: Average global foreground Dice: [0.8213]
2022-07-07 06:39:18.334261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:39:18.937318: Suus1 maybe_update_lr lr: 0.003465
2022-07-07 06:39:18.939644: This epoch took 72.616657 s

2022-07-07 06:39:18.941618: 
epoch:  346
2022-07-07 06:40:26.584786: train loss : -0.8507
2022-07-07 06:40:30.951392: validation loss: -0.7852
2022-07-07 06:40:30.961932: Average global foreground Dice: [0.8222]
2022-07-07 06:40:30.966449: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:40:31.464488: Suus1 maybe_update_lr lr: 0.003445
2022-07-07 06:40:31.468029: This epoch took 72.524413 s

2022-07-07 06:40:31.470453: 
epoch:  347
2022-07-07 06:41:39.149503: train loss : -0.8487
2022-07-07 06:41:43.551593: validation loss: -0.8051
2022-07-07 06:41:43.580160: Average global foreground Dice: [0.8495]
2022-07-07 06:41:43.620341: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:41:44.156014: Suus1 maybe_update_lr lr: 0.003424
2022-07-07 06:41:44.158576: This epoch took 72.682408 s

2022-07-07 06:41:44.160564: 
epoch:  348
2022-07-07 06:42:51.714912: train loss : -0.8483
2022-07-07 06:42:56.001143: validation loss: -0.7714
2022-07-07 06:42:56.007720: Average global foreground Dice: [0.8272]
2022-07-07 06:42:56.009720: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:42:56.478168: Suus1 maybe_update_lr lr: 0.003404
2022-07-07 06:42:56.480488: This epoch took 72.317795 s

2022-07-07 06:42:56.482439: 
epoch:  349
2022-07-07 06:44:04.169691: train loss : -0.8524
2022-07-07 06:44:08.646613: validation loss: -0.7925
2022-07-07 06:44:08.649507: Average global foreground Dice: [0.8309]
2022-07-07 06:44:08.652086: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:44:09.284796: Suus1 maybe_update_lr lr: 0.003384
2022-07-07 06:44:09.287097: saving scheduled checkpoint file...
2022-07-07 06:44:09.321839: saving checkpoint...
2022-07-07 06:44:10.283075: done, saving took 0.99 seconds
2022-07-07 06:44:10.296979: done
2022-07-07 06:44:10.299010: This epoch took 73.814758 s

2022-07-07 06:44:10.301035: 
epoch:  350
2022-07-07 06:45:17.948192: train loss : -0.8557
2022-07-07 06:45:22.302520: validation loss: -0.7892
2022-07-07 06:45:22.329553: Average global foreground Dice: [0.829]
2022-07-07 06:45:22.349972: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:45:22.920799: Suus1 maybe_update_lr lr: 0.003364
2022-07-07 06:45:22.923600: This epoch took 72.620620 s

2022-07-07 06:45:22.926039: 
epoch:  351
2022-07-07 06:46:30.467448: train loss : -0.8486
2022-07-07 06:46:34.977871: validation loss: -0.7626
2022-07-07 06:46:35.001639: Average global foreground Dice: [0.8111]
2022-07-07 06:46:35.009012: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:46:35.650216: Suus1 maybe_update_lr lr: 0.003343
2022-07-07 06:46:35.652574: This epoch took 72.724099 s

2022-07-07 06:46:35.654376: 
epoch:  352
2022-07-07 06:47:43.208235: train loss : -0.8487
2022-07-07 06:47:47.717995: validation loss: -0.7973
2022-07-07 06:47:47.756796: Average global foreground Dice: [0.8358]
2022-07-07 06:47:47.772263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:47:48.306990: Suus1 maybe_update_lr lr: 0.003323
2022-07-07 06:47:48.326292: This epoch took 72.670023 s

2022-07-07 06:47:48.354232: 
epoch:  353
2022-07-07 06:48:55.867385: train loss : -0.8479
2022-07-07 06:49:00.152725: validation loss: -0.7998
2022-07-07 06:49:00.167133: Average global foreground Dice: [0.8368]
2022-07-07 06:49:00.171434: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:49:00.638655: Suus1 maybe_update_lr lr: 0.003303
2022-07-07 06:49:00.640971: This epoch took 72.263721 s

2022-07-07 06:49:00.643145: 
epoch:  354
2022-07-07 06:50:08.171333: train loss : -0.8385
2022-07-07 06:50:12.563940: validation loss: -0.7660
2022-07-07 06:50:12.580284: Average global foreground Dice: [0.8121]
2022-07-07 06:50:12.598770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:50:13.128319: Suus1 maybe_update_lr lr: 0.003282
2022-07-07 06:50:13.130836: This epoch took 72.485593 s

2022-07-07 06:50:13.133212: 
epoch:  355
2022-07-07 06:51:20.732433: train loss : -0.8411
2022-07-07 06:51:25.076846: validation loss: -0.7915
2022-07-07 06:51:25.108313: Average global foreground Dice: [0.8392]
2022-07-07 06:51:25.131278: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:51:25.606580: Suus1 maybe_update_lr lr: 0.003262
2022-07-07 06:51:25.608746: This epoch took 72.473003 s

2022-07-07 06:51:25.610666: 
epoch:  356
2022-07-07 06:52:33.146949: train loss : -0.8467
2022-07-07 06:52:37.542327: validation loss: -0.7935
2022-07-07 06:52:37.561161: Average global foreground Dice: [0.8318]
2022-07-07 06:52:37.563566: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:52:38.102835: Suus1 maybe_update_lr lr: 0.003241
2022-07-07 06:52:38.105539: This epoch took 72.492996 s

2022-07-07 06:52:38.108250: 
epoch:  357
2022-07-07 06:53:45.794518: train loss : -0.8387
2022-07-07 06:53:50.328889: validation loss: -0.7668
2022-07-07 06:53:50.346951: Average global foreground Dice: [0.8057]
2022-07-07 06:53:50.356933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:53:50.885741: Suus1 maybe_update_lr lr: 0.003221
2022-07-07 06:53:50.888113: This epoch took 72.776989 s

2022-07-07 06:53:50.890389: 
epoch:  358
2022-07-07 06:54:58.382526: train loss : -0.8458
2022-07-07 06:55:02.668745: validation loss: -0.7975
2022-07-07 06:55:02.675496: Average global foreground Dice: [0.8372]
2022-07-07 06:55:02.677806: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:55:03.291861: Suus1 maybe_update_lr lr: 0.003201
2022-07-07 06:55:03.294241: This epoch took 72.401896 s

2022-07-07 06:55:03.296483: 
epoch:  359
2022-07-07 06:56:10.738463: train loss : -0.8479
2022-07-07 06:56:15.208584: validation loss: -0.7958
2022-07-07 06:56:15.212902: Average global foreground Dice: [0.8354]
2022-07-07 06:56:15.216151: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:56:15.688198: Suus1 maybe_update_lr lr: 0.00318
2022-07-07 06:56:15.697884: This epoch took 72.399218 s

2022-07-07 06:56:15.706945: 
epoch:  360
2022-07-07 06:57:23.318107: train loss : -0.8524
2022-07-07 06:57:27.714498: validation loss: -0.7844
2022-07-07 06:57:27.718514: Average global foreground Dice: [0.8332]
2022-07-07 06:57:27.749268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:57:28.330437: Suus1 maybe_update_lr lr: 0.00316
2022-07-07 06:57:28.333135: This epoch took 72.615444 s

2022-07-07 06:57:28.335143: 
epoch:  361
2022-07-07 06:58:35.842692: train loss : -0.8520
2022-07-07 06:58:40.125844: validation loss: -0.7890
2022-07-07 06:58:40.130363: Average global foreground Dice: [0.8316]
2022-07-07 06:58:40.143268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:58:40.664105: Suus1 maybe_update_lr lr: 0.003139
2022-07-07 06:58:40.666810: This epoch took 72.329580 s

2022-07-07 06:58:40.669012: 
epoch:  362
2022-07-07 06:59:48.282242: train loss : -0.8509
2022-07-07 06:59:52.653507: validation loss: -0.8009
2022-07-07 06:59:52.664513: Average global foreground Dice: [0.8394]
2022-07-07 06:59:52.687396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 06:59:53.194490: Suus1 maybe_update_lr lr: 0.003119
2022-07-07 06:59:53.212395: saving best epoch checkpoint...
2022-07-07 06:59:53.308874: saving checkpoint...
2022-07-07 06:59:54.436843: done, saving took 1.21 seconds
2022-07-07 06:59:54.452850: This epoch took 73.781481 s

2022-07-07 06:59:54.455290: 
epoch:  363
2022-07-07 07:01:01.955230: train loss : -0.8553
2022-07-07 07:01:06.428346: validation loss: -0.7956
2022-07-07 07:01:06.433151: Average global foreground Dice: [0.8303]
2022-07-07 07:01:06.435370: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:01:06.984364: Suus1 maybe_update_lr lr: 0.003098
2022-07-07 07:01:06.986836: saving best epoch checkpoint...
2022-07-07 07:01:07.026325: saving checkpoint...
2022-07-07 07:01:08.086245: done, saving took 1.10 seconds
2022-07-07 07:01:08.099600: This epoch took 73.642102 s

2022-07-07 07:01:08.101777: 
epoch:  364
2022-07-07 07:02:15.805881: train loss : -0.8551
2022-07-07 07:02:20.315320: validation loss: -0.7336
2022-07-07 07:02:20.318431: Average global foreground Dice: [0.8099]
2022-07-07 07:02:20.320545: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:02:20.820642: Suus1 maybe_update_lr lr: 0.003078
2022-07-07 07:02:20.823029: This epoch took 72.719075 s

2022-07-07 07:02:20.825156: 
epoch:  365
2022-07-07 07:03:28.290768: train loss : -0.8564
2022-07-07 07:03:32.617554: validation loss: -0.7854
2022-07-07 07:03:32.622089: Average global foreground Dice: [0.8296]
2022-07-07 07:03:32.626589: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:03:33.342218: Suus1 maybe_update_lr lr: 0.003057
2022-07-07 07:03:33.344358: This epoch took 72.517228 s

2022-07-07 07:03:33.346194: 
epoch:  366
2022-07-07 07:04:41.029981: train loss : -0.8583
2022-07-07 07:04:45.622606: validation loss: -0.7883
2022-07-07 07:04:45.625684: Average global foreground Dice: [0.8289]
2022-07-07 07:04:45.627958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:04:46.265821: Suus1 maybe_update_lr lr: 0.003037
2022-07-07 07:04:46.271914: This epoch took 72.923825 s

2022-07-07 07:04:46.282313: 
epoch:  367
2022-07-07 07:05:53.790790: train loss : -0.8549
2022-07-07 07:05:58.339255: validation loss: -0.7955
2022-07-07 07:05:58.344603: Average global foreground Dice: [0.8383]
2022-07-07 07:05:58.346773: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:05:58.884349: Suus1 maybe_update_lr lr: 0.003016
2022-07-07 07:05:58.900674: This epoch took 72.596428 s

2022-07-07 07:05:58.920776: 
epoch:  368
2022-07-07 07:07:06.469715: train loss : -0.8580
2022-07-07 07:07:11.031083: validation loss: -0.7594
2022-07-07 07:07:11.036971: Average global foreground Dice: [0.8182]
2022-07-07 07:07:11.039527: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:07:11.549245: Suus1 maybe_update_lr lr: 0.002996
2022-07-07 07:07:11.552260: This epoch took 72.614030 s

2022-07-07 07:07:11.578242: 
epoch:  369
2022-07-07 07:08:19.156933: train loss : -0.8578
2022-07-07 07:08:23.549773: validation loss: -0.7941
2022-07-07 07:08:23.572609: Average global foreground Dice: [0.841]
2022-07-07 07:08:23.578391: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:08:24.104876: Suus1 maybe_update_lr lr: 0.002975
2022-07-07 07:08:24.131848: This epoch took 72.520594 s

2022-07-07 07:08:24.149250: 
epoch:  370
2022-07-07 07:09:31.768109: train loss : -0.8561
2022-07-07 07:09:36.143656: validation loss: -0.7714
2022-07-07 07:09:36.147840: Average global foreground Dice: [0.8211]
2022-07-07 07:09:36.162249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:09:36.690242: Suus1 maybe_update_lr lr: 0.002954
2022-07-07 07:09:36.694571: This epoch took 72.518320 s

2022-07-07 07:09:36.696728: 
epoch:  371
2022-07-07 07:10:44.256756: train loss : -0.8621
2022-07-07 07:10:48.533458: validation loss: -0.7853
2022-07-07 07:10:48.541476: Average global foreground Dice: [0.8178]
2022-07-07 07:10:48.543745: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:10:49.100602: Suus1 maybe_update_lr lr: 0.002934
2022-07-07 07:10:49.102966: This epoch took 72.402619 s

2022-07-07 07:10:49.104901: 
epoch:  372
2022-07-07 07:11:56.629991: train loss : -0.8542
2022-07-07 07:12:00.989914: validation loss: -0.8055
2022-07-07 07:12:01.013666: Average global foreground Dice: [0.8415]
2022-07-07 07:12:01.031775: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:12:01.541708: Suus1 maybe_update_lr lr: 0.002913
2022-07-07 07:12:01.546499: This epoch took 72.439204 s

2022-07-07 07:12:01.548734: 
epoch:  373
2022-07-07 07:13:09.028977: train loss : -0.8572
2022-07-07 07:13:13.457919: validation loss: -0.7902
2022-07-07 07:13:13.462295: Average global foreground Dice: [0.8314]
2022-07-07 07:13:13.464677: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:13:13.934013: Suus1 maybe_update_lr lr: 0.002892
2022-07-07 07:13:13.942153: This epoch took 72.391027 s

2022-07-07 07:13:13.951929: 
epoch:  374
2022-07-07 07:14:21.468119: train loss : -0.8609
2022-07-07 07:14:25.841570: validation loss: -0.8099
2022-07-07 07:14:25.858889: Average global foreground Dice: [0.8426]
2022-07-07 07:14:25.860892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:14:26.335376: Suus1 maybe_update_lr lr: 0.002872
2022-07-07 07:14:26.337669: saving best epoch checkpoint...
2022-07-07 07:14:26.388455: saving checkpoint...
2022-07-07 07:14:27.446587: done, saving took 1.11 seconds
2022-07-07 07:14:27.465342: This epoch took 73.491094 s

2022-07-07 07:14:27.467531: 
epoch:  375
2022-07-07 07:15:34.866467: train loss : -0.8597
2022-07-07 07:15:39.284542: validation loss: -0.7884
2022-07-07 07:15:39.288205: Average global foreground Dice: [0.8192]
2022-07-07 07:15:39.290638: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:15:39.900040: Suus1 maybe_update_lr lr: 0.002851
2022-07-07 07:15:39.902418: This epoch took 72.432945 s

2022-07-07 07:15:39.904639: 
epoch:  376
2022-07-07 07:16:47.500098: train loss : -0.8569
2022-07-07 07:16:51.817617: validation loss: -0.8177
2022-07-07 07:16:51.820678: Average global foreground Dice: [0.8551]
2022-07-07 07:16:51.823277: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:16:52.480232: Suus1 maybe_update_lr lr: 0.00283
2022-07-07 07:16:52.482692: saving best epoch checkpoint...
2022-07-07 07:16:52.522851: saving checkpoint...
2022-07-07 07:16:53.568726: done, saving took 1.08 seconds
2022-07-07 07:16:53.581811: This epoch took 73.675097 s

2022-07-07 07:16:53.583950: 
epoch:  377
2022-07-07 07:18:01.093670: train loss : -0.8560
2022-07-07 07:18:05.439438: validation loss: -0.7704
2022-07-07 07:18:05.479468: Average global foreground Dice: [0.8123]
2022-07-07 07:18:05.499534: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:18:06.086683: Suus1 maybe_update_lr lr: 0.00281
2022-07-07 07:18:06.088887: This epoch took 72.502919 s

2022-07-07 07:18:06.090937: 
epoch:  378
2022-07-07 07:19:13.569113: train loss : -0.8580
2022-07-07 07:19:18.080220: validation loss: -0.8040
2022-07-07 07:19:18.126729: Average global foreground Dice: [0.8461]
2022-07-07 07:19:18.134129: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:19:18.640443: Suus1 maybe_update_lr lr: 0.002789
2022-07-07 07:19:18.643769: This epoch took 72.550522 s

2022-07-07 07:19:18.666325: 
epoch:  379
2022-07-07 07:20:26.193898: train loss : -0.8576
2022-07-07 07:20:30.667499: validation loss: -0.7807
2022-07-07 07:20:30.691460: Average global foreground Dice: [0.8216]
2022-07-07 07:20:30.695846: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:20:31.194737: Suus1 maybe_update_lr lr: 0.002768
2022-07-07 07:20:31.198814: This epoch took 72.512432 s

2022-07-07 07:20:31.200901: 
epoch:  380
2022-07-07 07:21:38.725438: train loss : -0.8553
2022-07-07 07:21:43.082920: validation loss: -0.8008
2022-07-07 07:21:43.121704: Average global foreground Dice: [0.8374]
2022-07-07 07:21:43.148316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:21:43.680392: Suus1 maybe_update_lr lr: 0.002747
2022-07-07 07:21:43.683242: This epoch took 72.480262 s

2022-07-07 07:21:43.685630: 
epoch:  381
2022-07-07 07:22:51.173577: train loss : -0.8495
2022-07-07 07:22:55.532966: validation loss: -0.7984
2022-07-07 07:22:55.563474: Average global foreground Dice: [0.8463]
2022-07-07 07:22:55.608320: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:22:56.205920: Suus1 maybe_update_lr lr: 0.002727
2022-07-07 07:22:56.208400: saving best epoch checkpoint...
2022-07-07 07:22:56.255698: saving checkpoint...
2022-07-07 07:22:57.202188: done, saving took 0.99 seconds
2022-07-07 07:22:57.216029: This epoch took 73.528182 s

2022-07-07 07:22:57.218114: 
epoch:  382
2022-07-07 07:24:04.696841: train loss : -0.8496
2022-07-07 07:24:09.237618: validation loss: -0.7883
2022-07-07 07:24:09.253663: Average global foreground Dice: [0.837]
2022-07-07 07:24:09.257126: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:24:09.819067: Suus1 maybe_update_lr lr: 0.002706
2022-07-07 07:24:09.840261: saving best epoch checkpoint...
2022-07-07 07:24:09.927424: saving checkpoint...
2022-07-07 07:24:10.891433: done, saving took 1.03 seconds
2022-07-07 07:24:10.905611: This epoch took 73.685428 s

2022-07-07 07:24:10.907974: 
epoch:  383
2022-07-07 07:25:18.362854: train loss : -0.8409
2022-07-07 07:25:22.706615: validation loss: -0.7997
2022-07-07 07:25:22.711154: Average global foreground Dice: [0.8401]
2022-07-07 07:25:22.713492: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:25:23.310918: Suus1 maybe_update_lr lr: 0.002685
2022-07-07 07:25:23.313062: saving best epoch checkpoint...
2022-07-07 07:25:23.357867: saving checkpoint...
2022-07-07 07:25:24.511262: done, saving took 1.20 seconds
2022-07-07 07:25:24.524927: This epoch took 73.614565 s

2022-07-07 07:25:24.527060: 
epoch:  384
2022-07-07 07:26:31.955194: train loss : -0.8493
2022-07-07 07:26:36.526219: validation loss: -0.7884
2022-07-07 07:26:36.543540: Average global foreground Dice: [0.8317]
2022-07-07 07:26:36.557182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:26:37.073297: Suus1 maybe_update_lr lr: 0.002664
2022-07-07 07:26:37.077463: This epoch took 72.548449 s

2022-07-07 07:26:37.081466: 
epoch:  385
2022-07-07 07:27:44.617310: train loss : -0.8495
2022-07-07 07:27:49.198206: validation loss: -0.7829
2022-07-07 07:27:49.214960: Average global foreground Dice: [0.8293]
2022-07-07 07:27:49.217841: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:27:49.760458: Suus1 maybe_update_lr lr: 0.002643
2022-07-07 07:27:49.777254: This epoch took 72.673815 s

2022-07-07 07:27:49.780665: 
epoch:  386
2022-07-07 07:28:57.339381: train loss : -0.8539
2022-07-07 07:29:01.984211: validation loss: -0.8032
2022-07-07 07:29:01.992629: Average global foreground Dice: [0.843]
2022-07-07 07:29:02.019430: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:29:02.553898: Suus1 maybe_update_lr lr: 0.002622
2022-07-07 07:29:02.556286: saving best epoch checkpoint...
2022-07-07 07:29:02.603223: saving checkpoint...
2022-07-07 07:29:03.688730: done, saving took 1.13 seconds
2022-07-07 07:29:03.703490: This epoch took 73.919654 s

2022-07-07 07:29:03.706076: 
epoch:  387
2022-07-07 07:30:11.226205: train loss : -0.8568
2022-07-07 07:30:15.697717: validation loss: -0.7743
2022-07-07 07:30:15.701205: Average global foreground Dice: [0.8209]
2022-07-07 07:30:15.711787: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:30:16.220878: Suus1 maybe_update_lr lr: 0.002601
2022-07-07 07:30:16.240475: This epoch took 72.532217 s

2022-07-07 07:30:16.255229: 
epoch:  388
2022-07-07 07:31:23.874514: train loss : -0.8572
2022-07-07 07:31:28.291765: validation loss: -0.7772
2022-07-07 07:31:28.320340: Average global foreground Dice: [0.8202]
2022-07-07 07:31:28.326241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:31:28.851438: Suus1 maybe_update_lr lr: 0.002581
2022-07-07 07:31:28.853818: This epoch took 72.591666 s

2022-07-07 07:31:28.855820: 
epoch:  389
2022-07-07 07:32:36.327128: train loss : -0.8627
2022-07-07 07:32:40.781667: validation loss: -0.7846
2022-07-07 07:32:40.784949: Average global foreground Dice: [0.8259]
2022-07-07 07:32:40.788150: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:32:41.338449: Suus1 maybe_update_lr lr: 0.00256
2022-07-07 07:32:41.340657: This epoch took 72.482881 s

2022-07-07 07:32:41.342696: 
epoch:  390
2022-07-07 07:33:48.816806: train loss : -0.8650
2022-07-07 07:33:53.173913: validation loss: -0.7820
2022-07-07 07:33:53.176980: Average global foreground Dice: [0.8243]
2022-07-07 07:33:53.179182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:33:53.645785: Suus1 maybe_update_lr lr: 0.002539
2022-07-07 07:33:53.648118: This epoch took 72.303345 s

2022-07-07 07:33:53.650261: 
epoch:  391
2022-07-07 07:35:01.200601: train loss : -0.8644
2022-07-07 07:35:05.628250: validation loss: -0.7848
2022-07-07 07:35:05.633420: Average global foreground Dice: [0.8308]
2022-07-07 07:35:05.653265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:35:06.173541: Suus1 maybe_update_lr lr: 0.002518
2022-07-07 07:35:06.175947: This epoch took 72.523506 s

2022-07-07 07:35:06.178129: 
epoch:  392
2022-07-07 07:36:13.687732: train loss : -0.8638
2022-07-07 07:36:18.116954: validation loss: -0.7978
2022-07-07 07:36:18.144625: Average global foreground Dice: [0.8443]
2022-07-07 07:36:18.168831: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:36:18.623504: Suus1 maybe_update_lr lr: 0.002497
2022-07-07 07:36:18.625746: This epoch took 72.445532 s

2022-07-07 07:36:18.627768: 
epoch:  393
2022-07-07 07:37:26.204166: train loss : -0.8641
2022-07-07 07:37:30.648227: validation loss: -0.7670
2022-07-07 07:37:30.664038: Average global foreground Dice: [0.8175]
2022-07-07 07:37:30.688475: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:37:31.154446: Suus1 maybe_update_lr lr: 0.002476
2022-07-07 07:37:31.156837: This epoch took 72.527185 s

2022-07-07 07:37:31.158966: 
epoch:  394
2022-07-07 07:38:38.638843: train loss : -0.8672
2022-07-07 07:38:43.000989: validation loss: -0.8053
2022-07-07 07:38:43.010616: Average global foreground Dice: [0.84]
2022-07-07 07:38:43.026121: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:38:43.562605: Suus1 maybe_update_lr lr: 0.002455
2022-07-07 07:38:43.565072: This epoch took 72.403832 s

2022-07-07 07:38:43.567193: 
epoch:  395
2022-07-07 07:39:51.138297: train loss : -0.8657
2022-07-07 07:39:55.553440: validation loss: -0.7772
2022-07-07 07:39:55.561998: Average global foreground Dice: [0.83]
2022-07-07 07:39:55.564293: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:39:56.129522: Suus1 maybe_update_lr lr: 0.002434
2022-07-07 07:39:56.150104: This epoch took 72.580770 s

2022-07-07 07:39:56.152373: 
epoch:  396
2022-07-07 07:41:03.702845: train loss : -0.8620
2022-07-07 07:41:07.996278: validation loss: -0.7843
2022-07-07 07:41:08.000197: Average global foreground Dice: [0.8316]
2022-07-07 07:41:08.003065: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:41:08.450606: Suus1 maybe_update_lr lr: 0.002413
2022-07-07 07:41:08.460847: This epoch took 72.306275 s

2022-07-07 07:41:08.472242: 
epoch:  397
2022-07-07 07:42:16.221908: train loss : -0.8619
2022-07-07 07:42:20.597370: validation loss: -0.8097
2022-07-07 07:42:20.625817: Average global foreground Dice: [0.8454]
2022-07-07 07:42:20.628409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:42:21.217986: Suus1 maybe_update_lr lr: 0.002391
2022-07-07 07:42:21.220414: This epoch took 72.721069 s

2022-07-07 07:42:21.222311: 
epoch:  398
2022-07-07 07:43:28.764076: train loss : -0.8624
2022-07-07 07:43:33.204397: validation loss: -0.8068
2022-07-07 07:43:33.226417: Average global foreground Dice: [0.846]
2022-07-07 07:43:33.237122: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:43:33.759722: Suus1 maybe_update_lr lr: 0.00237
2022-07-07 07:43:33.769903: This epoch took 72.545591 s

2022-07-07 07:43:33.780062: 
epoch:  399
2022-07-07 07:44:41.278726: train loss : -0.8634
2022-07-07 07:44:45.692280: validation loss: -0.8034
2022-07-07 07:44:45.695706: Average global foreground Dice: [0.8421]
2022-07-07 07:44:45.705976: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:44:46.205914: Suus1 maybe_update_lr lr: 0.002349
2022-07-07 07:44:46.213624: saving scheduled checkpoint file...
2022-07-07 07:44:46.259281: saving checkpoint...
2022-07-07 07:44:47.284195: done, saving took 1.07 seconds
2022-07-07 07:44:47.304943: done
2022-07-07 07:44:47.307058: saving best epoch checkpoint...
2022-07-07 07:44:47.334833: saving checkpoint...
2022-07-07 07:44:48.281669: done, saving took 0.97 seconds
2022-07-07 07:44:48.296173: This epoch took 74.512356 s

2022-07-07 07:44:48.298254: 
epoch:  400
2022-07-07 07:45:55.818500: train loss : -0.8610
2022-07-07 07:46:00.184210: validation loss: -0.7811
2022-07-07 07:46:00.188339: Average global foreground Dice: [0.8247]
2022-07-07 07:46:00.205322: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:46:00.917186: Suus1 maybe_update_lr lr: 0.002328
2022-07-07 07:46:00.919392: This epoch took 72.619012 s

2022-07-07 07:46:00.921493: 
epoch:  401
2022-07-07 07:47:08.566720: train loss : -0.8540
2022-07-07 07:47:13.047401: validation loss: -0.7981
2022-07-07 07:47:13.070677: Average global foreground Dice: [0.8402]
2022-07-07 07:47:13.102231: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:47:13.682294: Suus1 maybe_update_lr lr: 0.002307
2022-07-07 07:47:13.692898: This epoch took 72.769467 s

2022-07-07 07:47:13.725256: 
epoch:  402
2022-07-07 07:48:21.282611: train loss : -0.8636
2022-07-07 07:48:25.604802: validation loss: -0.7870
2022-07-07 07:48:25.608219: Average global foreground Dice: [0.832]
2022-07-07 07:48:25.634436: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:48:26.197717: Suus1 maybe_update_lr lr: 0.002286
2022-07-07 07:48:26.200001: This epoch took 72.449185 s

2022-07-07 07:48:26.202274: 
epoch:  403
2022-07-07 07:49:33.726399: train loss : -0.8658
2022-07-07 07:49:38.172015: validation loss: -0.7785
2022-07-07 07:49:38.174977: Average global foreground Dice: [0.8314]
2022-07-07 07:49:38.177381: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:49:38.688147: Suus1 maybe_update_lr lr: 0.002264
2022-07-07 07:49:38.691885: This epoch took 72.487643 s

2022-07-07 07:49:38.694938: 
epoch:  404
2022-07-07 07:50:46.177122: train loss : -0.8590
2022-07-07 07:50:50.604161: validation loss: -0.7686
2022-07-07 07:50:50.610357: Average global foreground Dice: [0.8181]
2022-07-07 07:50:50.621727: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:50:51.083226: Suus1 maybe_update_lr lr: 0.002243
2022-07-07 07:50:51.086942: This epoch took 72.389913 s

2022-07-07 07:50:51.089146: 
epoch:  405
2022-07-07 07:51:58.648125: train loss : -0.8563
2022-07-07 07:52:02.999104: validation loss: -0.7896
2022-07-07 07:52:03.009029: Average global foreground Dice: [0.8301]
2022-07-07 07:52:03.014894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:52:03.500878: Suus1 maybe_update_lr lr: 0.002222
2022-07-07 07:52:03.503550: This epoch took 72.406743 s

2022-07-07 07:52:03.505703: 
epoch:  406
2022-07-07 07:53:10.975480: train loss : -0.8640
2022-07-07 07:53:15.276468: validation loss: -0.8020
2022-07-07 07:53:15.287193: Average global foreground Dice: [0.8454]
2022-07-07 07:53:15.296475: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:53:15.803321: Suus1 maybe_update_lr lr: 0.002201
2022-07-07 07:53:15.805393: This epoch took 72.297666 s

2022-07-07 07:53:15.807534: 
epoch:  407
2022-07-07 07:54:23.231577: train loss : -0.8621
2022-07-07 07:54:27.592090: validation loss: -0.7840
2022-07-07 07:54:27.597814: Average global foreground Dice: [0.8273]
2022-07-07 07:54:27.600002: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:54:28.079934: Suus1 maybe_update_lr lr: 0.002179
2022-07-07 07:54:28.082180: This epoch took 72.272364 s

2022-07-07 07:54:28.084205: 
epoch:  408
2022-07-07 07:55:35.472951: train loss : -0.8622
2022-07-07 07:55:39.936310: validation loss: -0.7748
2022-07-07 07:55:39.941411: Average global foreground Dice: [0.821]
2022-07-07 07:55:39.957036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:55:40.434240: Suus1 maybe_update_lr lr: 0.002158
2022-07-07 07:55:40.436552: This epoch took 72.350558 s

2022-07-07 07:55:40.438861: 
epoch:  409
2022-07-07 07:56:47.977779: train loss : -0.8627
2022-07-07 07:56:52.414439: validation loss: -0.7867
2022-07-07 07:56:52.447559: Average global foreground Dice: [0.8245]
2022-07-07 07:56:52.480253: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:56:53.032897: Suus1 maybe_update_lr lr: 0.002137
2022-07-07 07:56:53.054324: This epoch took 72.613548 s

2022-07-07 07:56:53.078274: 
epoch:  410
2022-07-07 07:58:00.569307: train loss : -0.8727
2022-07-07 07:58:05.017751: validation loss: -0.7868
2022-07-07 07:58:05.021497: Average global foreground Dice: [0.8273]
2022-07-07 07:58:05.053244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:58:05.626833: Suus1 maybe_update_lr lr: 0.002115
2022-07-07 07:58:05.629077: This epoch took 72.525820 s

2022-07-07 07:58:05.631393: 
epoch:  411
2022-07-07 07:59:13.191330: train loss : -0.8700
2022-07-07 07:59:17.585707: validation loss: -0.7854
2022-07-07 07:59:17.589850: Average global foreground Dice: [0.8335]
2022-07-07 07:59:17.592063: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 07:59:18.165470: Suus1 maybe_update_lr lr: 0.002094
2022-07-07 07:59:18.167783: This epoch took 72.534164 s

2022-07-07 07:59:18.169880: 
epoch:  412
2022-07-07 08:00:25.760905: train loss : -0.8661
2022-07-07 08:00:30.218880: validation loss: -0.8120
2022-07-07 08:00:30.240699: Average global foreground Dice: [0.8474]
2022-07-07 08:00:30.265391: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:00:30.855715: Suus1 maybe_update_lr lr: 0.002072
2022-07-07 08:00:30.858181: This epoch took 72.685803 s

2022-07-07 08:00:30.860318: 
epoch:  413
2022-07-07 08:01:38.428539: train loss : -0.8691
2022-07-07 08:01:42.928585: validation loss: -0.7679
2022-07-07 08:01:42.949492: Average global foreground Dice: [0.8244]
2022-07-07 08:01:42.969016: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:01:43.496459: Suus1 maybe_update_lr lr: 0.002051
2022-07-07 08:01:43.498654: This epoch took 72.636389 s

2022-07-07 08:01:43.500636: 
epoch:  414
2022-07-07 08:02:50.913260: train loss : -0.8673
2022-07-07 08:02:55.253865: validation loss: -0.8030
2022-07-07 08:02:55.268995: Average global foreground Dice: [0.841]
2022-07-07 08:02:55.273811: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:02:55.804699: Suus1 maybe_update_lr lr: 0.00203
2022-07-07 08:02:55.838290: This epoch took 72.335539 s

2022-07-07 08:02:55.862236: 
epoch:  415
2022-07-07 08:04:03.346943: train loss : -0.8715
2022-07-07 08:04:07.763722: validation loss: -0.7973
2022-07-07 08:04:07.766906: Average global foreground Dice: [0.838]
2022-07-07 08:04:07.772160: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:04:08.334372: Suus1 maybe_update_lr lr: 0.002008
2022-07-07 08:04:08.336844: This epoch took 72.448611 s

2022-07-07 08:04:08.338895: 
epoch:  416
2022-07-07 08:05:16.227500: train loss : -0.8660
2022-07-07 08:05:20.977272: validation loss: -0.7634
2022-07-07 08:05:21.001900: Average global foreground Dice: [0.8191]
2022-07-07 08:05:21.004694: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:05:21.654250: Suus1 maybe_update_lr lr: 0.001987
2022-07-07 08:05:21.661827: This epoch took 73.320992 s

2022-07-07 08:05:21.686245: 
epoch:  417
2022-07-07 08:06:29.624355: train loss : -0.8679
2022-07-07 08:06:34.303666: validation loss: -0.7896
2022-07-07 08:06:34.311293: Average global foreground Dice: [0.8425]
2022-07-07 08:06:34.328402: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:06:34.832151: Suus1 maybe_update_lr lr: 0.001965
2022-07-07 08:06:34.851601: This epoch took 73.156922 s

2022-07-07 08:06:34.863823: 
epoch:  418
2022-07-07 08:07:42.409171: train loss : -0.8678
2022-07-07 08:07:46.773606: validation loss: -0.8066
2022-07-07 08:07:46.776575: Average global foreground Dice: [0.8451]
2022-07-07 08:07:46.778676: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:07:47.356651: Suus1 maybe_update_lr lr: 0.001943
2022-07-07 08:07:47.359088: This epoch took 72.474844 s

2022-07-07 08:07:47.361459: 
epoch:  419
2022-07-07 08:08:54.883425: train loss : -0.8669
2022-07-07 08:08:59.639026: validation loss: -0.7908
2022-07-07 08:08:59.650540: Average global foreground Dice: [0.8297]
2022-07-07 08:08:59.653158: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:09:00.143664: Suus1 maybe_update_lr lr: 0.001922
2022-07-07 08:09:00.166644: This epoch took 72.802930 s

2022-07-07 08:09:00.190253: 
epoch:  420
2022-07-07 08:10:07.781341: train loss : -0.8710
2022-07-07 08:10:12.297298: validation loss: -0.7916
2022-07-07 08:10:12.328717: Average global foreground Dice: [0.8337]
2022-07-07 08:10:12.350652: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:10:12.931575: Suus1 maybe_update_lr lr: 0.0019
2022-07-07 08:10:12.962303: This epoch took 72.751561 s

2022-07-07 08:10:12.982252: 
epoch:  421
2022-07-07 08:11:20.556423: train loss : -0.8712
2022-07-07 08:11:25.138355: validation loss: -0.7891
2022-07-07 08:11:25.142112: Average global foreground Dice: [0.8314]
2022-07-07 08:11:25.156258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:11:25.733538: Suus1 maybe_update_lr lr: 0.001879
2022-07-07 08:11:25.737051: This epoch took 72.752669 s

2022-07-07 08:11:25.740130: 
epoch:  422
2022-07-07 08:12:33.315646: train loss : -0.8691
2022-07-07 08:12:37.953952: validation loss: -0.7931
2022-07-07 08:12:37.982676: Average global foreground Dice: [0.8365]
2022-07-07 08:12:37.991289: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:12:38.619369: Suus1 maybe_update_lr lr: 0.001857
2022-07-07 08:12:38.621783: This epoch took 72.879368 s

2022-07-07 08:12:38.624207: 
epoch:  423
2022-07-07 08:13:46.450725: train loss : -0.8729
2022-07-07 08:13:50.814764: validation loss: -0.7642
2022-07-07 08:13:50.830633: Average global foreground Dice: [0.8209]
2022-07-07 08:13:50.852903: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:13:51.411849: Suus1 maybe_update_lr lr: 0.001835
2022-07-07 08:13:51.414384: This epoch took 72.787776 s

2022-07-07 08:13:51.416395: 
epoch:  424
2022-07-07 08:14:59.251479: train loss : -0.8725
2022-07-07 08:15:03.711776: validation loss: -0.7894
2022-07-07 08:15:03.738866: Average global foreground Dice: [0.8315]
2022-07-07 08:15:03.770287: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:15:04.384031: Suus1 maybe_update_lr lr: 0.001813
2022-07-07 08:15:04.386359: This epoch took 72.967768 s

2022-07-07 08:15:04.388399: 
epoch:  425
2022-07-07 08:16:12.120203: train loss : -0.8718
2022-07-07 08:16:16.615416: validation loss: -0.7891
2022-07-07 08:16:16.638107: Average global foreground Dice: [0.8362]
2022-07-07 08:16:16.671280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:16:17.306351: Suus1 maybe_update_lr lr: 0.001792
2022-07-07 08:16:17.347330: This epoch took 72.956824 s

2022-07-07 08:16:17.350679: 
epoch:  426
2022-07-07 08:17:25.051151: train loss : -0.8732
2022-07-07 08:17:29.619580: validation loss: -0.7967
2022-07-07 08:17:29.639102: Average global foreground Dice: [0.8393]
2022-07-07 08:17:29.653814: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:17:30.346033: Suus1 maybe_update_lr lr: 0.00177
2022-07-07 08:17:30.356953: This epoch took 72.981675 s

2022-07-07 08:17:30.372437: 
epoch:  427
2022-07-07 08:18:38.103848: train loss : -0.8705
2022-07-07 08:18:42.542760: validation loss: -0.8002
2022-07-07 08:18:42.547647: Average global foreground Dice: [0.8365]
2022-07-07 08:18:42.549795: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:18:43.116063: Suus1 maybe_update_lr lr: 0.001748
2022-07-07 08:18:43.125263: This epoch took 72.740372 s

2022-07-07 08:18:43.127700: 
epoch:  428
2022-07-07 08:19:50.812864: train loss : -0.8677
2022-07-07 08:19:55.283927: validation loss: -0.7755
2022-07-07 08:19:55.304685: Average global foreground Dice: [0.8226]
2022-07-07 08:19:55.328840: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:19:55.835420: Suus1 maybe_update_lr lr: 0.001726
2022-07-07 08:19:55.838186: This epoch took 72.708170 s

2022-07-07 08:19:55.840306: 
epoch:  429
2022-07-07 08:21:03.541174: train loss : -0.8730
2022-07-07 08:21:08.023894: validation loss: -0.8121
2022-07-07 08:21:08.026215: Average global foreground Dice: [0.8461]
2022-07-07 08:21:08.028422: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:21:08.622854: Suus1 maybe_update_lr lr: 0.001704
2022-07-07 08:21:08.658311: This epoch took 72.815954 s

2022-07-07 08:21:08.680238: 
epoch:  430
2022-07-07 08:22:16.277568: train loss : -0.8761
2022-07-07 08:22:20.808946: validation loss: -0.7880
2022-07-07 08:22:20.825501: Average global foreground Dice: [0.8291]
2022-07-07 08:22:20.829505: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:22:21.383566: Suus1 maybe_update_lr lr: 0.001682
2022-07-07 08:22:21.386378: This epoch took 72.673122 s

2022-07-07 08:22:21.388998: 
epoch:  431
2022-07-07 08:23:28.936808: train loss : -0.8737
2022-07-07 08:23:33.429125: validation loss: -0.7914
2022-07-07 08:23:33.444901: Average global foreground Dice: [0.8353]
2022-07-07 08:23:33.466396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:23:34.001438: Suus1 maybe_update_lr lr: 0.00166
2022-07-07 08:23:34.014067: This epoch took 72.622999 s

2022-07-07 08:23:34.017024: 
epoch:  432
2022-07-07 08:24:41.624570: train loss : -0.8753
2022-07-07 08:24:46.119545: validation loss: -0.7825
2022-07-07 08:24:46.123920: Average global foreground Dice: [0.8321]
2022-07-07 08:24:46.150364: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:24:46.703799: Suus1 maybe_update_lr lr: 0.001638
2022-07-07 08:24:46.734278: This epoch took 72.699700 s

2022-07-07 08:24:46.752515: 
epoch:  433
2022-07-07 08:25:54.523208: train loss : -0.8762
2022-07-07 08:25:59.095588: validation loss: -0.8037
2022-07-07 08:25:59.098724: Average global foreground Dice: [0.8383]
2022-07-07 08:25:59.101157: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:25:59.617946: Suus1 maybe_update_lr lr: 0.001616
2022-07-07 08:25:59.631173: This epoch took 72.865899 s

2022-07-07 08:25:59.633187: 
epoch:  434
2022-07-07 08:27:07.475389: train loss : -0.8744
2022-07-07 08:27:12.049377: validation loss: -0.8020
2022-07-07 08:27:12.059837: Average global foreground Dice: [0.8443]
2022-07-07 08:27:12.067402: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:27:12.740135: Suus1 maybe_update_lr lr: 0.001594
2022-07-07 08:27:12.749450: saving best epoch checkpoint...
2022-07-07 08:27:12.820621: saving checkpoint...
2022-07-07 08:27:13.843313: done, saving took 1.08 seconds
2022-07-07 08:27:13.856929: This epoch took 74.221634 s

2022-07-07 08:27:13.859023: 
epoch:  435
2022-07-07 08:28:21.422926: train loss : -0.8787
2022-07-07 08:28:26.272529: validation loss: -0.7824
2022-07-07 08:28:26.278160: Average global foreground Dice: [0.8327]
2022-07-07 08:28:26.281868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:28:26.819765: Suus1 maybe_update_lr lr: 0.001572
2022-07-07 08:28:26.830274: This epoch took 72.969337 s

2022-07-07 08:28:26.833424: 
epoch:  436
2022-07-07 08:29:34.502691: train loss : -0.8750
2022-07-07 08:29:39.070910: validation loss: -0.7883
2022-07-07 08:29:39.094097: Average global foreground Dice: [0.8304]
2022-07-07 08:29:39.106267: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:29:39.607147: Suus1 maybe_update_lr lr: 0.00155
2022-07-07 08:29:39.637372: This epoch took 72.796969 s

2022-07-07 08:29:39.659273: 
epoch:  437
2022-07-07 08:30:47.591795: train loss : -0.8731
2022-07-07 08:30:52.170543: validation loss: -0.7868
2022-07-07 08:30:52.177765: Average global foreground Dice: [0.833]
2022-07-07 08:30:52.182382: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:30:52.833490: Suus1 maybe_update_lr lr: 0.001528
2022-07-07 08:30:52.836682: This epoch took 73.144419 s

2022-07-07 08:30:52.838726: 
epoch:  438
2022-07-07 08:32:00.412799: train loss : -0.8761
2022-07-07 08:32:04.936458: validation loss: -0.7927
2022-07-07 08:32:04.956035: Average global foreground Dice: [0.8301]
2022-07-07 08:32:04.960952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:32:05.558183: Suus1 maybe_update_lr lr: 0.001506
2022-07-07 08:32:05.560532: This epoch took 72.719736 s

2022-07-07 08:32:05.563560: 
epoch:  439
2022-07-07 08:33:13.095074: train loss : -0.8748
2022-07-07 08:33:17.721829: validation loss: -0.7965
2022-07-07 08:33:17.741728: Average global foreground Dice: [0.8324]
2022-07-07 08:33:17.756341: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:33:18.330698: Suus1 maybe_update_lr lr: 0.001483
2022-07-07 08:33:18.351211: This epoch took 72.785811 s

2022-07-07 08:33:18.371338: 
epoch:  440
2022-07-07 08:34:25.820630: train loss : -0.8752
2022-07-07 08:34:30.386906: validation loss: -0.7935
2022-07-07 08:34:30.414763: Average global foreground Dice: [0.8345]
2022-07-07 08:34:30.424311: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:34:31.134437: Suus1 maybe_update_lr lr: 0.001461
2022-07-07 08:34:31.136821: This epoch took 72.737554 s

2022-07-07 08:34:31.141385: 
epoch:  441
2022-07-07 08:35:38.769154: train loss : -0.8774
2022-07-07 08:35:43.263237: validation loss: -0.8045
2022-07-07 08:35:43.280577: Average global foreground Dice: [0.8473]
2022-07-07 08:35:43.308340: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:35:43.983972: Suus1 maybe_update_lr lr: 0.001439
2022-07-07 08:35:44.001933: saving best epoch checkpoint...
2022-07-07 08:35:44.059317: saving checkpoint...
2022-07-07 08:35:45.286606: done, saving took 1.27 seconds
2022-07-07 08:35:45.300325: This epoch took 74.156981 s

2022-07-07 08:35:45.302436: 
epoch:  442
2022-07-07 08:36:52.803037: train loss : -0.8807
2022-07-07 08:36:57.221882: validation loss: -0.7982
2022-07-07 08:36:57.237713: Average global foreground Dice: [0.8375]
2022-07-07 08:36:57.257442: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:36:57.730558: Suus1 maybe_update_lr lr: 0.001416
2022-07-07 08:36:57.739671: saving best epoch checkpoint...
2022-07-07 08:36:57.792583: saving checkpoint...
2022-07-07 08:36:58.842251: done, saving took 1.10 seconds
2022-07-07 08:36:58.855159: This epoch took 73.550796 s

2022-07-07 08:36:58.857059: 
epoch:  443
2022-07-07 08:38:06.490660: train loss : -0.8772
2022-07-07 08:38:11.231045: validation loss: -0.7874
2022-07-07 08:38:11.267717: Average global foreground Dice: [0.8342]
2022-07-07 08:38:11.292279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:38:11.997768: Suus1 maybe_update_lr lr: 0.001394
2022-07-07 08:38:12.017426: This epoch took 73.158567 s

2022-07-07 08:38:12.048255: 
epoch:  444
2022-07-07 08:39:19.675218: train loss : -0.8820
2022-07-07 08:39:24.211750: validation loss: -0.8088
2022-07-07 08:39:24.219007: Average global foreground Dice: [0.8425]
2022-07-07 08:39:24.241553: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:39:24.726161: Suus1 maybe_update_lr lr: 0.001372
2022-07-07 08:39:24.728650: saving best epoch checkpoint...
2022-07-07 08:39:24.778234: saving checkpoint...
2022-07-07 08:39:25.713392: done, saving took 0.98 seconds
2022-07-07 08:39:25.726838: This epoch took 73.662267 s

2022-07-07 08:39:25.728986: 
epoch:  445
2022-07-07 08:40:33.324356: train loss : -0.8799
2022-07-07 08:40:37.828864: validation loss: -0.7980
2022-07-07 08:40:37.837836: Average global foreground Dice: [0.8405]
2022-07-07 08:40:37.840895: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:40:38.286523: Suus1 maybe_update_lr lr: 0.001349
2022-07-07 08:40:38.297010: saving best epoch checkpoint...
2022-07-07 08:40:38.393363: saving checkpoint...
2022-07-07 08:40:39.515898: done, saving took 1.20 seconds
2022-07-07 08:40:39.529480: This epoch took 73.798586 s

2022-07-07 08:40:39.531568: 
epoch:  446
2022-07-07 08:41:47.058913: train loss : -0.8784
2022-07-07 08:41:52.017802: validation loss: -0.8025
2022-07-07 08:41:52.020682: Average global foreground Dice: [0.8514]
2022-07-07 08:41:52.023160: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:41:52.529120: Suus1 maybe_update_lr lr: 0.001327
2022-07-07 08:41:52.554904: saving best epoch checkpoint...
2022-07-07 08:41:52.632142: saving checkpoint...
2022-07-07 08:41:53.670104: done, saving took 1.09 seconds
2022-07-07 08:41:53.684106: This epoch took 74.150559 s

2022-07-07 08:41:53.686436: 
epoch:  447
2022-07-07 08:43:01.025578: train loss : -0.8775
2022-07-07 08:43:05.433905: validation loss: -0.7721
2022-07-07 08:43:05.505616: Average global foreground Dice: [0.8245]
2022-07-07 08:43:05.560249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:43:06.390600: Suus1 maybe_update_lr lr: 0.001304
2022-07-07 08:43:06.436341: This epoch took 72.747677 s

2022-07-07 08:43:06.468482: 
epoch:  448
2022-07-07 08:44:14.181504: train loss : -0.8798
2022-07-07 08:44:18.599666: validation loss: -0.7847
2022-07-07 08:44:18.603173: Average global foreground Dice: [0.8338]
2022-07-07 08:44:18.605629: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:44:19.259244: Suus1 maybe_update_lr lr: 0.001282
2022-07-07 08:44:19.264086: This epoch took 72.757739 s

2022-07-07 08:44:19.266231: 
epoch:  449
2022-07-07 08:45:26.782018: train loss : -0.8820
2022-07-07 08:45:31.388025: validation loss: -0.7999
2022-07-07 08:45:31.390862: Average global foreground Dice: [0.8448]
2022-07-07 08:45:31.421271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:45:31.934572: Suus1 maybe_update_lr lr: 0.001259
2022-07-07 08:45:31.960574: saving scheduled checkpoint file...
2022-07-07 08:45:32.013652: saving checkpoint...
2022-07-07 08:45:33.100509: done, saving took 1.14 seconds
2022-07-07 08:45:33.115957: done
2022-07-07 08:45:33.117902: This epoch took 73.849793 s

2022-07-07 08:45:33.119811: 
epoch:  450
2022-07-07 08:46:40.650326: train loss : -0.8777
2022-07-07 08:46:45.618796: validation loss: -0.8000
2022-07-07 08:46:45.634867: Average global foreground Dice: [0.8324]
2022-07-07 08:46:45.660571: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:46:46.305686: Suus1 maybe_update_lr lr: 0.001236
2022-07-07 08:46:46.326675: This epoch took 73.204831 s

2022-07-07 08:46:46.337184: 
epoch:  451
2022-07-07 08:47:53.928660: train loss : -0.8795
2022-07-07 08:47:58.418648: validation loss: -0.8130
2022-07-07 08:47:58.446641: Average global foreground Dice: [0.8508]
2022-07-07 08:47:58.477173: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:47:59.133234: Suus1 maybe_update_lr lr: 0.001214
2022-07-07 08:47:59.135529: saving best epoch checkpoint...
2022-07-07 08:47:59.178445: saving checkpoint...
2022-07-07 08:48:00.212878: done, saving took 1.07 seconds
2022-07-07 08:48:00.227190: This epoch took 73.863904 s

2022-07-07 08:48:00.229517: 
epoch:  452
2022-07-07 08:49:07.632496: train loss : -0.8837
2022-07-07 08:49:12.181164: validation loss: -0.7958
2022-07-07 08:49:12.222850: Average global foreground Dice: [0.84]
2022-07-07 08:49:12.246084: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:49:12.897911: Suus1 maybe_update_lr lr: 0.001191
2022-07-07 08:49:12.919289: saving best epoch checkpoint...
2022-07-07 08:49:12.991072: saving checkpoint...
2022-07-07 08:49:14.271925: done, saving took 1.33 seconds
2022-07-07 08:49:14.285961: This epoch took 74.054403 s

2022-07-07 08:49:14.288448: 
epoch:  453
2022-07-07 08:50:21.695579: train loss : -0.8820
2022-07-07 08:50:26.367664: validation loss: -0.7865
2022-07-07 08:50:26.388561: Average global foreground Dice: [0.8225]
2022-07-07 08:50:26.427274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:50:27.126114: Suus1 maybe_update_lr lr: 0.001168
2022-07-07 08:50:27.147629: This epoch took 72.856737 s

2022-07-07 08:50:27.152818: 
epoch:  454
2022-07-07 08:51:34.815046: train loss : -0.8744
2022-07-07 08:51:39.372960: validation loss: -0.7965
2022-07-07 08:51:39.387473: Average global foreground Dice: [0.8382]
2022-07-07 08:51:39.430395: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:51:39.982919: Suus1 maybe_update_lr lr: 0.001145
2022-07-07 08:51:39.985668: This epoch took 72.826905 s

2022-07-07 08:51:39.987955: 
epoch:  455
2022-07-07 08:52:47.520920: train loss : -0.8875
2022-07-07 08:52:52.400433: validation loss: -0.8124
2022-07-07 08:52:52.418104: Average global foreground Dice: [0.8442]
2022-07-07 08:52:52.420553: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:52:52.877605: Suus1 maybe_update_lr lr: 0.001122
2022-07-07 08:52:52.880131: This epoch took 72.889907 s

2022-07-07 08:52:52.882192: 
epoch:  456
2022-07-07 08:54:00.358404: train loss : -0.8821
2022-07-07 08:54:04.929222: validation loss: -0.7841
2022-07-07 08:54:04.936137: Average global foreground Dice: [0.8297]
2022-07-07 08:54:04.956521: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:54:05.602114: Suus1 maybe_update_lr lr: 0.001099
2022-07-07 08:54:05.604363: This epoch took 72.719930 s

2022-07-07 08:54:05.606341: 
epoch:  457
2022-07-07 08:55:13.216023: train loss : -0.8812
2022-07-07 08:55:17.834879: validation loss: -0.7785
2022-07-07 08:55:17.868852: Average global foreground Dice: [0.8194]
2022-07-07 08:55:17.892420: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:55:18.514919: Suus1 maybe_update_lr lr: 0.001076
2022-07-07 08:55:18.527282: This epoch took 72.918683 s

2022-07-07 08:55:18.551264: 
epoch:  458
2022-07-07 08:56:26.139549: train loss : -0.8815
2022-07-07 08:56:30.752648: validation loss: -0.7752
2022-07-07 08:56:30.758313: Average global foreground Dice: [0.8174]
2022-07-07 08:56:30.760689: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:56:31.342364: Suus1 maybe_update_lr lr: 0.001053
2022-07-07 08:56:31.344956: This epoch took 72.766702 s

2022-07-07 08:56:31.347012: 
epoch:  459
2022-07-07 08:57:38.858634: train loss : -0.8802
2022-07-07 08:57:43.519943: validation loss: -0.8120
2022-07-07 08:57:43.523049: Average global foreground Dice: [0.8449]
2022-07-07 08:57:43.525918: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:57:44.085557: Suus1 maybe_update_lr lr: 0.00103
2022-07-07 08:57:44.087768: This epoch took 72.738331 s

2022-07-07 08:57:44.090850: 
epoch:  460
2022-07-07 08:58:51.502065: train loss : -0.8838
2022-07-07 08:58:55.875734: validation loss: -0.8004
2022-07-07 08:58:55.878503: Average global foreground Dice: [0.8399]
2022-07-07 08:58:55.880670: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 08:58:56.460192: Suus1 maybe_update_lr lr: 0.001007
2022-07-07 08:58:56.462655: This epoch took 72.365322 s

2022-07-07 08:58:56.464872: 
epoch:  461
2022-07-07 09:00:03.947122: train loss : -0.8857
2022-07-07 09:00:08.374646: validation loss: -0.8053
2022-07-07 09:00:08.396402: Average global foreground Dice: [0.8496]
2022-07-07 09:00:08.410392: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:00:09.025961: Suus1 maybe_update_lr lr: 0.000983
2022-07-07 09:00:09.056334: This epoch took 72.589556 s

2022-07-07 09:00:09.076263: 
epoch:  462
2022-07-07 09:01:16.751939: train loss : -0.8852
2022-07-07 09:01:21.332172: validation loss: -0.7972
2022-07-07 09:01:21.356475: Average global foreground Dice: [0.8363]
2022-07-07 09:01:21.378172: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:01:21.859921: Suus1 maybe_update_lr lr: 0.00096
2022-07-07 09:01:21.889962: This epoch took 72.807205 s

2022-07-07 09:01:21.934239: 
epoch:  463
2022-07-07 09:02:29.498575: train loss : -0.8824
2022-07-07 09:02:34.254960: validation loss: -0.7703
2022-07-07 09:02:34.269688: Average global foreground Dice: [0.8177]
2022-07-07 09:02:34.290379: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:02:34.945204: Suus1 maybe_update_lr lr: 0.000937
2022-07-07 09:02:34.947418: This epoch took 72.987168 s

2022-07-07 09:02:34.949361: 
epoch:  464
2022-07-07 09:03:42.512213: train loss : -0.8854
2022-07-07 09:03:47.020852: validation loss: -0.7995
2022-07-07 09:03:47.043801: Average global foreground Dice: [0.8327]
2022-07-07 09:03:47.061709: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:03:47.673170: Suus1 maybe_update_lr lr: 0.000913
2022-07-07 09:03:47.675433: This epoch took 72.724031 s

2022-07-07 09:03:47.677411: 
epoch:  465
2022-07-07 09:04:55.307255: train loss : -0.8864
2022-07-07 09:04:59.997126: validation loss: -0.8048
2022-07-07 09:04:59.999636: Average global foreground Dice: [0.8434]
2022-07-07 09:05:00.016316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:05:00.575711: Suus1 maybe_update_lr lr: 0.00089
2022-07-07 09:05:00.607320: This epoch took 72.927841 s

2022-07-07 09:05:00.629246: 
epoch:  466
2022-07-07 09:06:08.184537: train loss : -0.8857
2022-07-07 09:06:12.704890: validation loss: -0.7893
2022-07-07 09:06:12.721463: Average global foreground Dice: [0.8343]
2022-07-07 09:06:12.734677: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:06:13.378281: Suus1 maybe_update_lr lr: 0.000866
2022-07-07 09:06:13.392326: This epoch took 72.755581 s

2022-07-07 09:06:13.397256: 
epoch:  467
2022-07-07 09:07:21.144592: train loss : -0.8883
2022-07-07 09:07:25.681835: validation loss: -0.8143
2022-07-07 09:07:25.685008: Average global foreground Dice: [0.8535]
2022-07-07 09:07:25.687319: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:07:26.318043: Suus1 maybe_update_lr lr: 0.000842
2022-07-07 09:07:26.325491: This epoch took 72.919777 s

2022-07-07 09:07:26.339805: 
epoch:  468
2022-07-07 09:08:34.169211: train loss : -0.8830
2022-07-07 09:08:38.592021: validation loss: -0.7967
2022-07-07 09:08:38.614705: Average global foreground Dice: [0.8397]
2022-07-07 09:08:38.631293: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:08:39.139852: Suus1 maybe_update_lr lr: 0.000819
2022-07-07 09:08:39.142251: This epoch took 72.800309 s

2022-07-07 09:08:39.144490: 
epoch:  469
2022-07-07 09:09:47.113851: train loss : -0.8840
2022-07-07 09:09:51.753786: validation loss: -0.7966
2022-07-07 09:09:51.777259: Average global foreground Dice: [0.8415]
2022-07-07 09:09:51.780694: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:09:52.353138: Suus1 maybe_update_lr lr: 0.000795
2022-07-07 09:09:52.355552: This epoch took 73.209062 s

2022-07-07 09:09:52.357557: 
epoch:  470
2022-07-07 09:11:00.195452: train loss : -0.8881
2022-07-07 09:11:04.938920: validation loss: -0.8009
2022-07-07 09:11:04.961344: Average global foreground Dice: [0.8416]
2022-07-07 09:11:04.968328: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:11:05.555199: Suus1 maybe_update_lr lr: 0.000771
2022-07-07 09:11:05.564143: This epoch took 73.204626 s

2022-07-07 09:11:05.566364: 
epoch:  471
2022-07-07 09:12:13.284701: train loss : -0.8818
2022-07-07 09:12:17.666997: validation loss: -0.8119
2022-07-07 09:12:17.700731: Average global foreground Dice: [0.848]
2022-07-07 09:12:17.723253: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:12:18.426416: Suus1 maybe_update_lr lr: 0.000747
2022-07-07 09:12:18.445321: saving best epoch checkpoint...
2022-07-07 09:12:18.558997: saving checkpoint...
2022-07-07 09:12:19.605540: done, saving took 1.14 seconds
2022-07-07 09:12:19.619041: This epoch took 74.050249 s

2022-07-07 09:12:19.621334: 
epoch:  472
2022-07-07 09:13:27.331742: train loss : -0.8833
2022-07-07 09:13:31.861395: validation loss: -0.7500
2022-07-07 09:13:31.890266: Average global foreground Dice: [0.8139]
2022-07-07 09:13:31.898367: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:13:32.517963: Suus1 maybe_update_lr lr: 0.000723
2022-07-07 09:13:32.529956: This epoch took 72.906501 s

2022-07-07 09:13:32.532431: 
epoch:  473
2022-07-07 09:14:40.132511: train loss : -0.8848
2022-07-07 09:14:44.609970: validation loss: -0.7710
2022-07-07 09:14:44.653497: Average global foreground Dice: [0.8168]
2022-07-07 09:14:44.673287: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:14:45.251590: Suus1 maybe_update_lr lr: 0.000699
2022-07-07 09:14:45.281471: This epoch took 72.747001 s

2022-07-07 09:14:45.293878: 
epoch:  474
2022-07-07 09:15:52.803008: train loss : -0.8871
2022-07-07 09:15:57.405677: validation loss: -0.7809
2022-07-07 09:15:57.414957: Average global foreground Dice: [0.8223]
2022-07-07 09:15:57.417109: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:15:58.010481: Suus1 maybe_update_lr lr: 0.000675
2022-07-07 09:15:58.029305: This epoch took 72.731521 s

2022-07-07 09:15:58.038967: 
epoch:  475
2022-07-07 09:17:05.633127: train loss : -0.8807
2022-07-07 09:17:10.404239: validation loss: -0.7917
2022-07-07 09:17:10.407242: Average global foreground Dice: [0.8279]
2022-07-07 09:17:10.409313: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:17:10.912615: Suus1 maybe_update_lr lr: 0.00065
2022-07-07 09:17:10.926091: This epoch took 72.861807 s

2022-07-07 09:17:10.954525: 
epoch:  476
2022-07-07 09:18:18.582935: train loss : -0.8886
2022-07-07 09:18:23.294264: validation loss: -0.7992
2022-07-07 09:18:23.324205: Average global foreground Dice: [0.8423]
2022-07-07 09:18:23.331758: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:18:23.950370: Suus1 maybe_update_lr lr: 0.000626
2022-07-07 09:18:23.952799: This epoch took 72.981731 s

2022-07-07 09:18:23.954936: 
epoch:  477
2022-07-07 09:19:31.425346: train loss : -0.8826
2022-07-07 09:19:35.990817: validation loss: -0.7842
2022-07-07 09:19:36.006880: Average global foreground Dice: [0.8295]
2022-07-07 09:19:36.009053: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:19:36.544879: Suus1 maybe_update_lr lr: 0.000601
2022-07-07 09:19:36.547103: This epoch took 72.590147 s

2022-07-07 09:19:36.549000: 
epoch:  478
2022-07-07 09:20:44.307063: train loss : -0.8869
2022-07-07 09:20:49.034849: validation loss: -0.8168
2022-07-07 09:20:49.038264: Average global foreground Dice: [0.8498]
2022-07-07 09:20:49.044886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:20:49.517083: Suus1 maybe_update_lr lr: 0.000577
2022-07-07 09:20:49.530415: This epoch took 72.979458 s

2022-07-07 09:20:49.545203: 
epoch:  479
2022-07-07 09:21:57.199408: train loss : -0.8896
2022-07-07 09:22:02.173405: validation loss: -0.8137
2022-07-07 09:22:02.196785: Average global foreground Dice: [0.8452]
2022-07-07 09:22:02.216266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:22:02.829706: Suus1 maybe_update_lr lr: 0.000552
2022-07-07 09:22:02.866313: This epoch took 73.298796 s

2022-07-07 09:22:02.886239: 
epoch:  480
2022-07-07 09:23:10.541224: train loss : -0.8892
2022-07-07 09:23:14.944755: validation loss: -0.8019
2022-07-07 09:23:14.967844: Average global foreground Dice: [0.848]
2022-07-07 09:23:14.975116: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:23:15.477746: Suus1 maybe_update_lr lr: 0.000527
2022-07-07 09:23:15.480181: This epoch took 72.580907 s

2022-07-07 09:23:15.482184: 
epoch:  481
2022-07-07 09:24:23.048006: train loss : -0.8911
2022-07-07 09:24:27.795531: validation loss: -0.7967
2022-07-07 09:24:27.815309: Average global foreground Dice: [0.8368]
2022-07-07 09:24:27.823642: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:24:28.325818: Suus1 maybe_update_lr lr: 0.000502
2022-07-07 09:24:28.328073: This epoch took 72.843902 s

2022-07-07 09:24:28.331244: 
epoch:  482
2022-07-07 09:25:35.870820: train loss : -0.8855
2022-07-07 09:25:40.417627: validation loss: -0.7986
2022-07-07 09:25:40.452124: Average global foreground Dice: [0.8404]
2022-07-07 09:25:40.464372: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:25:41.044371: Suus1 maybe_update_lr lr: 0.000477
2022-07-07 09:25:41.047443: This epoch took 72.709140 s

2022-07-07 09:25:41.049896: 
epoch:  483
2022-07-07 09:26:48.602450: train loss : -0.8876
2022-07-07 09:26:53.215898: validation loss: -0.7804
2022-07-07 09:26:53.270686: Average global foreground Dice: [0.835]
2022-07-07 09:26:53.299592: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:26:53.948787: Suus1 maybe_update_lr lr: 0.000451
2022-07-07 09:26:53.969301: This epoch took 72.913371 s

2022-07-07 09:26:53.994252: 
epoch:  484
2022-07-07 09:28:01.591455: train loss : -0.8910
2022-07-07 09:28:06.095094: validation loss: -0.7913
2022-07-07 09:28:06.106123: Average global foreground Dice: [0.8432]
2022-07-07 09:28:06.108612: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:28:06.658954: Suus1 maybe_update_lr lr: 0.000426
2022-07-07 09:28:06.661700: This epoch took 72.640440 s

2022-07-07 09:28:06.687735: 
epoch:  485
2022-07-07 09:29:14.442217: train loss : -0.8888
2022-07-07 09:29:18.977011: validation loss: -0.7691
2022-07-07 09:29:18.992950: Average global foreground Dice: [0.8203]
2022-07-07 09:29:19.021291: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:29:19.651965: Suus1 maybe_update_lr lr: 0.0004
2022-07-07 09:29:19.671278: This epoch took 72.963347 s

2022-07-07 09:29:19.690050: 
epoch:  486
2022-07-07 09:30:27.240195: train loss : -0.8882
2022-07-07 09:30:31.679125: validation loss: -0.8018
2022-07-07 09:30:31.698269: Average global foreground Dice: [0.8436]
2022-07-07 09:30:31.705256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:30:32.177145: Suus1 maybe_update_lr lr: 0.000375
2022-07-07 09:30:32.179425: This epoch took 72.461153 s

2022-07-07 09:30:32.181762: 
epoch:  487
2022-07-07 09:31:39.657856: train loss : -0.8958
2022-07-07 09:31:44.070085: validation loss: -0.8035
2022-07-07 09:31:44.073001: Average global foreground Dice: [0.8409]
2022-07-07 09:31:44.075236: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:31:44.588022: Suus1 maybe_update_lr lr: 0.000348
2022-07-07 09:31:44.590578: This epoch took 72.406762 s

2022-07-07 09:31:44.611248: 
epoch:  488
2022-07-07 09:32:52.212015: train loss : -0.8904
2022-07-07 09:32:56.794072: validation loss: -0.7928
2022-07-07 09:32:56.815747: Average global foreground Dice: [0.8346]
2022-07-07 09:32:56.847261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:32:57.453752: Suus1 maybe_update_lr lr: 0.000322
2022-07-07 09:32:57.463272: This epoch took 72.828994 s

2022-07-07 09:32:57.473563: 
epoch:  489
2022-07-07 09:34:05.044019: train loss : -0.8877
2022-07-07 09:34:09.740920: validation loss: -0.8017
2022-07-07 09:34:09.765503: Average global foreground Dice: [0.8403]
2022-07-07 09:34:09.780768: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:34:10.354153: Suus1 maybe_update_lr lr: 0.000296
2022-07-07 09:34:10.356514: This epoch took 72.864812 s

2022-07-07 09:34:10.358749: 
epoch:  490
2022-07-07 09:35:17.942174: train loss : -0.8917
2022-07-07 09:35:22.442132: validation loss: -0.8062
2022-07-07 09:35:22.445366: Average global foreground Dice: [0.8402]
2022-07-07 09:35:22.462909: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:35:23.066615: Suus1 maybe_update_lr lr: 0.000269
2022-07-07 09:35:23.069988: This epoch took 72.709249 s

2022-07-07 09:35:23.103251: 
epoch:  491
2022-07-07 09:36:30.708976: train loss : -0.8899
2022-07-07 09:36:35.284597: validation loss: -0.7810
2022-07-07 09:36:35.301307: Average global foreground Dice: [0.8274]
2022-07-07 09:36:35.326759: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:36:36.008244: Suus1 maybe_update_lr lr: 0.000242
2022-07-07 09:36:36.010825: This epoch took 72.875553 s

2022-07-07 09:36:36.013042: 
epoch:  492
2022-07-07 09:37:43.699457: train loss : -0.8954
2022-07-07 09:37:48.202476: validation loss: -0.7871
2022-07-07 09:37:48.238701: Average global foreground Dice: [0.8287]
2022-07-07 09:37:48.252394: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:37:48.852157: Suus1 maybe_update_lr lr: 0.000215
2022-07-07 09:37:48.854365: This epoch took 72.838967 s

2022-07-07 09:37:48.856500: 
epoch:  493
2022-07-07 09:38:56.672030: train loss : -0.8878
2022-07-07 09:39:01.155995: validation loss: -0.8117
2022-07-07 09:39:01.189490: Average global foreground Dice: [0.8491]
2022-07-07 09:39:01.207628: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:39:01.826035: Suus1 maybe_update_lr lr: 0.000187
2022-07-07 09:39:01.842331: This epoch took 72.983870 s

2022-07-07 09:39:01.854874: 
epoch:  494
2022-07-07 09:40:09.445996: train loss : -0.8872
2022-07-07 09:40:13.808779: validation loss: -0.8055
2022-07-07 09:40:13.832785: Average global foreground Dice: [0.8455]
2022-07-07 09:40:13.859250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:40:14.380064: Suus1 maybe_update_lr lr: 0.000158
2022-07-07 09:40:14.382320: This epoch took 72.491058 s

2022-07-07 09:40:14.384909: 
epoch:  495
2022-07-07 09:41:21.997411: train loss : -0.8935
2022-07-07 09:41:26.399096: validation loss: -0.8053
2022-07-07 09:41:26.414719: Average global foreground Dice: [0.8384]
2022-07-07 09:41:26.421788: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:41:26.874773: Suus1 maybe_update_lr lr: 0.00013
2022-07-07 09:41:26.877278: This epoch took 72.490456 s

2022-07-07 09:41:26.879805: 
epoch:  496
2022-07-07 09:42:34.322030: train loss : -0.8905
2022-07-07 09:42:38.829083: validation loss: -0.8017
2022-07-07 09:42:38.841472: Average global foreground Dice: [0.8416]
2022-07-07 09:42:38.858467: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:42:39.406420: Suus1 maybe_update_lr lr: 0.0001
2022-07-07 09:42:39.408315: This epoch took 72.526308 s

2022-07-07 09:42:39.410887: 
epoch:  497
2022-07-07 09:43:46.934124: train loss : -0.8914
2022-07-07 09:43:51.328766: validation loss: -0.7829
2022-07-07 09:43:51.345632: Average global foreground Dice: [0.8355]
2022-07-07 09:43:51.354794: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:43:51.901811: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-07 09:43:51.904275: This epoch took 72.491261 s

2022-07-07 09:43:51.907351: 
epoch:  498
2022-07-07 09:44:59.644151: train loss : -0.8934
2022-07-07 09:45:04.174458: validation loss: -0.8125
2022-07-07 09:45:04.200665: Average global foreground Dice: [0.8529]
2022-07-07 09:45:04.233257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:45:04.833410: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-07 09:45:04.850929: saving best epoch checkpoint...
2022-07-07 09:45:04.931010: saving checkpoint...
2022-07-07 09:45:06.278522: done, saving took 1.43 seconds
2022-07-07 09:45:06.293313: This epoch took 74.381742 s

2022-07-07 09:45:06.295803: 
epoch:  499
2022-07-07 09:46:13.875928: train loss : -0.8937
2022-07-07 09:46:18.613442: validation loss: -0.8017
2022-07-07 09:46:18.617335: Average global foreground Dice: [0.8427]
2022-07-07 09:46:18.619743: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 09:46:19.104617: Suus1 maybe_update_lr lr: 0.0
2022-07-07 09:46:19.107184: saving scheduled checkpoint file...
2022-07-07 09:46:19.149824: saving checkpoint...
2022-07-07 09:46:20.246236: done, saving took 1.14 seconds
2022-07-07 09:46:20.261955: done
2022-07-07 09:46:20.264263: saving best epoch checkpoint...
2022-07-07 09:46:20.292803: saving checkpoint...
2022-07-07 09:46:21.339110: done, saving took 1.07 seconds
2022-07-07 09:46:21.353290: This epoch took 75.054904 s

2022-07-07 09:46:21.381715: saving checkpoint...
2022-07-07 09:46:22.364944: done, saving took 1.01 seconds
panc_024 (2, 105, 507, 507)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 507, 507)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 80
computing Gaussian
done
prediction done
suus panc_024 transposed
suus panc_024 not saving softmax
suus panc_024 voeg toe aan pred_gt tuples voor later
panc_040 (2, 90, 526, 526)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 526, 526)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 101, 201, 302], [0, 101, 201, 302]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_040 transposed
suus panc_040 not saving softmax
suus panc_040 voeg toe aan pred_gt tuples voor later
panc_048 (2, 121, 619, 619)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 619, 619)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 99, 198, 296, 395], [0, 99, 198, 296, 395]]
number of tiles: 150
using precomputed Gaussian
prediction done
suus panc_048 transposed
suus panc_048 not saving softmax
suus panc_048 voeg toe aan pred_gt tuples voor later
panc_058 (2, 182, 607, 607)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 225
using precomputed Gaussian
prediction done
suus panc_058 transposed
suus panc_058 not saving softmax
suus panc_058 voeg toe aan pred_gt tuples voor later
panc_067 (2, 103, 524, 524)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_067 transposed
suus panc_067 not saving softmax
suus panc_067 voeg toe aan pred_gt tuples voor later
panc_075 (2, 60, 521, 521)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 32
using precomputed Gaussian
prediction done
suus panc_075 transposed
suus panc_075 not saving softmax
suus panc_075 voeg toe aan pred_gt tuples voor later
panc_086 (2, 51, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 11], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 50
using precomputed Gaussian
prediction done
suus panc_086 transposed
suus panc_086 not saving softmax
suus panc_086 voeg toe aan pred_gt tuples voor later
panc_101 (2, 196, 481, 481)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 144
using precomputed Gaussian
prediction done
suus panc_101 transposed
suus panc_101 not saving softmax
suus panc_101 voeg toe aan pred_gt tuples voor later
panc_105 (2, 196, 491, 491)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 144
using precomputed Gaussian
prediction done
suus panc_105 transposed
suus panc_105 not saving softmax
suus panc_105 voeg toe aan pred_gt tuples voor later
panc_107 (2, 102, 498, 498)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_107 transposed
suus panc_107 not saving softmax
suus panc_107 voeg toe aan pred_gt tuples voor later
panc_113 (2, 100, 440, 440)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 440, 440)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 108, 216], [0, 108, 216]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_113 transposed
suus panc_113 not saving softmax
suus panc_113 voeg toe aan pred_gt tuples voor later
panc_119 (2, 85, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_119 transposed
suus panc_119 not saving softmax
suus panc_119 voeg toe aan pred_gt tuples voor later
panc_131 (2, 59, 512, 512)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 32
using precomputed Gaussian
prediction done
suus panc_131 transposed
suus panc_131 not saving softmax
suus panc_131 voeg toe aan pred_gt tuples voor later
panc_137 (2, 85, 536, 536)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_137 transposed
suus panc_137 not saving softmax
suus panc_137 voeg toe aan pred_gt tuples voor later
panc_148 (2, 84, 486, 486)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_148 transposed
suus panc_148 not saving softmax
suus panc_148 voeg toe aan pred_gt tuples voor later
panc_157 (2, 77, 498, 498)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_157 transposed
suus panc_157 not saving softmax
suus panc_157 voeg toe aan pred_gt tuples voor later
panc_182 (2, 79, 430, 430)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 103, 206], [0, 103, 206]]
number of tiles: 27
using precomputed Gaussian
prediction done
suus panc_182 transposed
suus panc_182 not saving softmax
suus panc_182 voeg toe aan pred_gt tuples voor later
panc_191 (2, 57, 471, 471)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 32
using precomputed Gaussian
prediction done
suus panc_191 transposed
suus panc_191 not saving softmax
suus panc_191 voeg toe aan pred_gt tuples voor later
panc_193 (2, 113, 496, 496)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_193 transposed
suus panc_193 not saving softmax
suus panc_193 voeg toe aan pred_gt tuples voor later
panc_194 (2, 98, 466, 466)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_194 transposed
suus panc_194 not saving softmax
suus panc_194 voeg toe aan pred_gt tuples voor later
panc_204 (2, 73, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
suus panc_204 transposed
suus panc_204 not saving softmax
suus panc_204 voeg toe aan pred_gt tuples voor later
panc_207 (2, 81, 468, 468)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_207 transposed
suus panc_207 not saving softmax
suus panc_207 voeg toe aan pred_gt tuples voor later
panc_211 (2, 121, 583, 583)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 583, 583)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 90, 180, 269, 359], [0, 90, 180, 269, 359]]
number of tiles: 150
using precomputed Gaussian
prediction done
suus panc_211 transposed
suus panc_211 not saving softmax
suus panc_211 voeg toe aan pred_gt tuples voor later
panc_215 (2, 99, 483, 483)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 483, 483)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 173, 259], [0, 86, 173, 259]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_215 transposed
suus panc_215 not saving softmax
suus panc_215 voeg toe aan pred_gt tuples voor later
panc_219 (2, 192, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 225
using precomputed Gaussian
prediction done
suus panc_219 transposed
suus panc_219 not saving softmax
suus panc_219 voeg toe aan pred_gt tuples voor later
panc_224 (2, 93, 551, 551)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_224 transposed
suus panc_224 not saving softmax
suus panc_224 voeg toe aan pred_gt tuples voor later
panc_236 (2, 81, 548, 548)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_236 transposed
suus panc_236 not saving softmax
suus panc_236 voeg toe aan pred_gt tuples voor later
panc_241 (2, 99, 510, 510)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_241 transposed
suus panc_241 not saving softmax
suus panc_241 voeg toe aan pred_gt tuples voor later
panc_256 (2, 89, 493, 493)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_256 transposed
suus panc_256 not saving softmax
suus panc_256 voeg toe aan pred_gt tuples voor later
panc_285 (2, 113, 531, 531)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_285 transposed
suus panc_285 not saving softmax
suus panc_285 voeg toe aan pred_gt tuples voor later
panc_286 (2, 93, 490, 490)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_286 transposed
suus panc_286 not saving softmax
suus panc_286 voeg toe aan pred_gt tuples voor later
panc_294 (2, 97, 517, 517)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_294 transposed
suus panc_294 not saving softmax
suus panc_294 voeg toe aan pred_gt tuples voor later
panc_296 (2, 86, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_296 transposed
suus panc_296 not saving softmax
suus panc_296 voeg toe aan pred_gt tuples voor later
panc_302 (2, 83, 604, 604)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 604, 604)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 190, 285, 380], [0, 95, 190, 285, 380]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_302 transposed
suus panc_302 not saving softmax
suus panc_302 voeg toe aan pred_gt tuples voor later
panc_305 (2, 73, 472, 472)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_305 transposed
suus panc_305 not saving softmax
suus panc_305 voeg toe aan pred_gt tuples voor later
panc_321 (2, 117, 571, 571)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_321 transposed
suus panc_321 not saving softmax
suus panc_321 voeg toe aan pred_gt tuples voor later
panc_325 (2, 93, 473, 473)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_325 transposed
suus panc_325 not saving softmax
suus panc_325 voeg toe aan pred_gt tuples voor later
panc_364 (2, 89, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_364 transposed
suus panc_364 not saving softmax
suus panc_364 voeg toe aan pred_gt tuples voor later
panc_367 (2, 104, 551, 551)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_367 transposed
suus panc_367 not saving softmax
suus panc_367 voeg toe aan pred_gt tuples voor later
panc_369 (2, 97, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_369 transposed
suus panc_369 not saving softmax
suus panc_369 voeg toe aan pred_gt tuples voor later
panc_374 (2, 137, 473, 473)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 137, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 78, 97], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 96
using precomputed Gaussian
prediction done
suus panc_374 transposed
suus panc_374 not saving softmax
suus panc_374 voeg toe aan pred_gt tuples voor later
panc_386 (2, 81, 486, 486)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_386 transposed
suus panc_386 not saving softmax
suus panc_386 voeg toe aan pred_gt tuples voor later
panc_393 (2, 119, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 119, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 59, 79], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_393 transposed
suus panc_393 not saving softmax
suus panc_393 voeg toe aan pred_gt tuples voor later
panc_399 (2, 116, 598, 598)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_399 transposed
suus panc_399 not saving softmax
suus panc_399 voeg toe aan pred_gt tuples voor later
panc_410 (2, 101, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
suus panc_410 transposed
suus panc_410 not saving softmax
suus panc_410 voeg toe aan pred_gt tuples voor later
panc_412 (2, 197, 584, 584)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 197, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 78, 98, 118, 137, 157], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 225
using precomputed Gaussian
prediction done
suus panc_412 transposed
suus panc_412 not saving softmax
suus panc_412 voeg toe aan pred_gt tuples voor later
panc_413 (2, 85, 498, 498)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_413 transposed
suus panc_413 not saving softmax
suus panc_413 voeg toe aan pred_gt tuples voor later
panc_415 (2, 122, 561, 561)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 122, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49, 66, 82], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 150
using precomputed Gaussian
prediction done
suus panc_415 transposed
suus panc_415 not saving softmax
suus panc_415 voeg toe aan pred_gt tuples voor later
2022-07-07 10:10:52.117303: finished prediction
2022-07-07 10:10:52.155547: evaluation of raw predictions
2022-07-07 10:11:11.454080: determining postprocessing
Foreground vs background
before: 0.8308091468286505
after:  0.830795961313159
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_024.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_105.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_182.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_219.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_296.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_374.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_040.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_107.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_191.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_224.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_302.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_386.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_048.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_113.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_193.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_236.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_305.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_393.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_058.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_119.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_194.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_241.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_321.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_399.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_067.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_131.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_204.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_256.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_325.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_410.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_075.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_137.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_207.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_285.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_364.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_412.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_086.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_148.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_211.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_286.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_367.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_413.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_101.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_157.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_215.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_294.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_369.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/validation_raw/panc_415.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='1', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-07 10:11:59.538672: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-07 10:12:07.539223: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-07 10:12:07.543812: The split file contains 5 splits.
2022-07-07 10:12:07.545503: Desired fold for training: 1
2022-07-07 10:12:07.548067: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-07 10:12:09.127134: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-07 10:12:24.757938: Unable to plot network architecture:
2022-07-07 10:12:24.762190: local variable 'g' referenced before assignment
2022-07-07 10:12:24.764617: 
printing the network instead:

2022-07-07 10:12:24.766755: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-07 10:12:24.771355: 

2022-07-07 10:12:24.773663: 
epoch:  0
2022-07-07 10:14:01.839985: train loss : -0.0112
2022-07-07 10:14:19.065515: validation loss: -0.1505
2022-07-07 10:14:19.069465: Average global foreground Dice: [0.3069]
2022-07-07 10:14:19.072328: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:14:19.480013: Suus1 maybe_update_lr lr: 0.009982
2022-07-07 10:14:19.483940: This epoch took 114.708197 s

2022-07-07 10:14:19.487063: 
epoch:  1
2022-07-07 10:15:26.806335: train loss : -0.1583
2022-07-07 10:15:37.409421: validation loss: -0.1578
2022-07-07 10:15:37.412280: Average global foreground Dice: [0.2752]
2022-07-07 10:15:37.415401: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:15:37.833196: Suus1 maybe_update_lr lr: 0.009964
2022-07-07 10:15:37.835593: This epoch took 78.346059 s

2022-07-07 10:15:37.837825: 
epoch:  2
2022-07-07 10:16:45.533848: train loss : -0.1926
2022-07-07 10:16:52.332329: validation loss: -0.2081
2022-07-07 10:16:52.341633: Average global foreground Dice: [0.3325]
2022-07-07 10:16:52.344473: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:16:52.780549: Suus1 maybe_update_lr lr: 0.009946
2022-07-07 10:16:52.782727: This epoch took 74.941808 s

2022-07-07 10:16:52.784981: 
epoch:  3
2022-07-07 10:18:00.241395: train loss : -0.2785
2022-07-07 10:18:05.659445: validation loss: -0.2759
2022-07-07 10:18:05.664443: Average global foreground Dice: [0.3913]
2022-07-07 10:18:05.666631: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:18:06.092620: Suus1 maybe_update_lr lr: 0.009928
2022-07-07 10:18:06.095107: saving best epoch checkpoint...
2022-07-07 10:18:06.155194: saving checkpoint...
2022-07-07 10:18:07.309448: done, saving took 1.21 seconds
2022-07-07 10:18:07.326032: This epoch took 74.538657 s

2022-07-07 10:18:07.329568: 
epoch:  4
2022-07-07 10:19:14.723762: train loss : -0.2635
2022-07-07 10:19:19.074572: validation loss: -0.2804
2022-07-07 10:19:19.077489: Average global foreground Dice: [0.4033]
2022-07-07 10:19:19.079530: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:19:19.656447: Suus1 maybe_update_lr lr: 0.00991
2022-07-07 10:19:19.659448: saving best epoch checkpoint...
2022-07-07 10:19:19.709391: saving checkpoint...
2022-07-07 10:19:20.796077: done, saving took 1.13 seconds
2022-07-07 10:19:20.811189: This epoch took 73.478687 s

2022-07-07 10:19:20.813260: 
epoch:  5
2022-07-07 10:20:28.366829: train loss : -0.3504
2022-07-07 10:20:33.224991: validation loss: -0.3387
2022-07-07 10:20:33.228108: Average global foreground Dice: [0.443]
2022-07-07 10:20:33.230460: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:20:33.704123: Suus1 maybe_update_lr lr: 0.009892
2022-07-07 10:20:33.707472: saving best epoch checkpoint...
2022-07-07 10:20:33.752498: saving checkpoint...
2022-07-07 10:20:34.936292: done, saving took 1.23 seconds
2022-07-07 10:20:34.951744: This epoch took 74.136304 s

2022-07-07 10:20:34.954116: 
epoch:  6
2022-07-07 10:21:42.404317: train loss : -0.3874
2022-07-07 10:21:46.782740: validation loss: -0.4246
2022-07-07 10:21:46.785804: Average global foreground Dice: [0.5084]
2022-07-07 10:21:46.790031: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:21:47.329809: Suus1 maybe_update_lr lr: 0.009874
2022-07-07 10:21:47.335403: saving best epoch checkpoint...
2022-07-07 10:21:47.386694: saving checkpoint...
2022-07-07 10:21:48.778706: done, saving took 1.44 seconds
2022-07-07 10:21:48.795798: This epoch took 73.839649 s

2022-07-07 10:21:48.798879: 
epoch:  7
2022-07-07 10:22:56.436757: train loss : -0.4112
2022-07-07 10:23:01.880112: validation loss: -0.3836
2022-07-07 10:23:01.883151: Average global foreground Dice: [0.4774]
2022-07-07 10:23:01.885675: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:23:02.362150: Suus1 maybe_update_lr lr: 0.009856
2022-07-07 10:23:02.364573: saving best epoch checkpoint...
2022-07-07 10:23:02.412830: saving checkpoint...
2022-07-07 10:23:03.648061: done, saving took 1.28 seconds
2022-07-07 10:23:03.663425: This epoch took 74.861658 s

2022-07-07 10:23:03.665643: 
epoch:  8
2022-07-07 10:24:11.288677: train loss : -0.4211
2022-07-07 10:24:16.391773: validation loss: -0.4925
2022-07-07 10:24:16.395602: Average global foreground Dice: [0.579]
2022-07-07 10:24:16.397943: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:24:16.865842: Suus1 maybe_update_lr lr: 0.009838
2022-07-07 10:24:16.868109: saving best epoch checkpoint...
2022-07-07 10:24:16.915084: saving checkpoint...
2022-07-07 10:24:18.325679: done, saving took 1.46 seconds
2022-07-07 10:24:18.341918: This epoch took 74.674042 s

2022-07-07 10:24:18.344509: 
epoch:  9
2022-07-07 10:25:25.958706: train loss : -0.4738
2022-07-07 10:25:30.289255: validation loss: -0.4668
2022-07-07 10:25:30.292517: Average global foreground Dice: [0.5532]
2022-07-07 10:25:30.294753: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:25:30.770891: Suus1 maybe_update_lr lr: 0.00982
2022-07-07 10:25:30.773099: saving best epoch checkpoint...
2022-07-07 10:25:30.821957: saving checkpoint...
2022-07-07 10:25:32.045753: done, saving took 1.27 seconds
2022-07-07 10:25:32.060922: This epoch took 73.714196 s

2022-07-07 10:25:32.063067: 
epoch:  10
2022-07-07 10:26:39.504127: train loss : -0.4608
2022-07-07 10:26:46.146349: validation loss: -0.5103
2022-07-07 10:26:46.150164: Average global foreground Dice: [0.5916]
2022-07-07 10:26:46.152754: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:26:46.712845: Suus1 maybe_update_lr lr: 0.009802
2022-07-07 10:26:46.715338: saving best epoch checkpoint...
2022-07-07 10:26:46.761884: saving checkpoint...
2022-07-07 10:26:48.032219: done, saving took 1.31 seconds
2022-07-07 10:26:48.048167: This epoch took 75.982877 s

2022-07-07 10:26:48.050342: 
epoch:  11
2022-07-07 10:27:55.520386: train loss : -0.4786
2022-07-07 10:27:59.853214: validation loss: -0.4990
2022-07-07 10:27:59.856257: Average global foreground Dice: [0.5811]
2022-07-07 10:27:59.858519: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:28:00.322893: Suus1 maybe_update_lr lr: 0.009784
2022-07-07 10:28:00.325387: saving best epoch checkpoint...
2022-07-07 10:28:00.368439: saving checkpoint...
2022-07-07 10:28:01.492385: done, saving took 1.16 seconds
2022-07-07 10:28:01.508324: This epoch took 73.455890 s

2022-07-07 10:28:01.510538: 
epoch:  12
2022-07-07 10:29:09.026422: train loss : -0.5005
2022-07-07 10:29:13.792514: validation loss: -0.5325
2022-07-07 10:29:13.809590: Average global foreground Dice: [0.6117]
2022-07-07 10:29:13.814352: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:29:14.276874: Suus1 maybe_update_lr lr: 0.009766
2022-07-07 10:29:14.309278: saving best epoch checkpoint...
2022-07-07 10:29:14.374225: saving checkpoint...
2022-07-07 10:29:15.855258: done, saving took 1.52 seconds
2022-07-07 10:29:15.869805: This epoch took 74.357143 s

2022-07-07 10:29:15.872122: 
epoch:  13
2022-07-07 10:30:23.353046: train loss : -0.5108
2022-07-07 10:30:27.871104: validation loss: -0.4902
2022-07-07 10:30:27.873471: Average global foreground Dice: [0.5793]
2022-07-07 10:30:27.893280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:30:28.439406: Suus1 maybe_update_lr lr: 0.009748
2022-07-07 10:30:28.446856: saving best epoch checkpoint...
2022-07-07 10:30:28.489900: saving checkpoint...
2022-07-07 10:30:29.481188: done, saving took 1.03 seconds
2022-07-07 10:30:29.494385: This epoch took 73.619910 s

2022-07-07 10:30:29.496581: 
epoch:  14
2022-07-07 10:31:36.937473: train loss : -0.5456
2022-07-07 10:31:41.352818: validation loss: -0.5312
2022-07-07 10:31:41.363427: Average global foreground Dice: [0.6168]
2022-07-07 10:31:41.399741: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:31:41.859468: Suus1 maybe_update_lr lr: 0.00973
2022-07-07 10:31:41.862008: saving best epoch checkpoint...
2022-07-07 10:31:41.898272: saving checkpoint...
2022-07-07 10:31:43.210066: done, saving took 1.35 seconds
2022-07-07 10:31:43.224266: This epoch took 73.725687 s

2022-07-07 10:31:43.226277: 
epoch:  15
2022-07-07 10:32:50.765330: train loss : -0.5573
2022-07-07 10:32:55.156982: validation loss: -0.5136
2022-07-07 10:32:55.160012: Average global foreground Dice: [0.5974]
2022-07-07 10:32:55.162245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:32:55.606621: Suus1 maybe_update_lr lr: 0.009712
2022-07-07 10:32:55.608980: saving best epoch checkpoint...
2022-07-07 10:32:55.644764: saving checkpoint...
2022-07-07 10:32:56.723830: done, saving took 1.11 seconds
2022-07-07 10:32:56.739251: This epoch took 73.510981 s

2022-07-07 10:32:56.741428: 
epoch:  16
2022-07-07 10:34:04.224883: train loss : -0.5554
2022-07-07 10:34:08.848987: validation loss: -0.5310
2022-07-07 10:34:08.913630: Average global foreground Dice: [0.6142]
2022-07-07 10:34:08.935207: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:34:09.593070: Suus1 maybe_update_lr lr: 0.009693
2022-07-07 10:34:09.619577: saving best epoch checkpoint...
2022-07-07 10:34:09.676946: saving checkpoint...
2022-07-07 10:34:10.801903: done, saving took 1.16 seconds
2022-07-07 10:34:10.815819: This epoch took 74.072082 s

2022-07-07 10:34:10.818460: 
epoch:  17
2022-07-07 10:35:18.402750: train loss : -0.5512
2022-07-07 10:35:23.036759: validation loss: -0.5833
2022-07-07 10:35:23.039973: Average global foreground Dice: [0.6575]
2022-07-07 10:35:23.042145: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:35:23.489291: Suus1 maybe_update_lr lr: 0.009675
2022-07-07 10:35:23.491535: saving best epoch checkpoint...
2022-07-07 10:35:23.526345: saving checkpoint...
2022-07-07 10:35:24.495347: done, saving took 1.00 seconds
2022-07-07 10:35:24.509755: This epoch took 73.688935 s

2022-07-07 10:35:24.512153: 
epoch:  18
2022-07-07 10:36:32.087077: train loss : -0.5620
2022-07-07 10:36:36.411974: validation loss: -0.5723
2022-07-07 10:36:36.415879: Average global foreground Dice: [0.6437]
2022-07-07 10:36:36.419031: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:36:36.946267: Suus1 maybe_update_lr lr: 0.009657
2022-07-07 10:36:36.949351: saving best epoch checkpoint...
2022-07-07 10:36:36.984224: saving checkpoint...
2022-07-07 10:36:38.998786: done, saving took 2.05 seconds
2022-07-07 10:36:39.015842: This epoch took 74.501557 s

2022-07-07 10:36:39.018993: 
epoch:  19
2022-07-07 10:37:46.464432: train loss : -0.5692
2022-07-07 10:37:51.012206: validation loss: -0.5500
2022-07-07 10:37:51.018300: Average global foreground Dice: [0.6419]
2022-07-07 10:37:51.021457: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:37:51.588906: Suus1 maybe_update_lr lr: 0.009639
2022-07-07 10:37:51.591409: saving best epoch checkpoint...
2022-07-07 10:37:51.667152: saving checkpoint...
2022-07-07 10:37:52.915896: done, saving took 1.30 seconds
2022-07-07 10:37:52.930779: This epoch took 73.908735 s

2022-07-07 10:37:52.932864: 
epoch:  20
2022-07-07 10:39:00.515602: train loss : -0.5739
2022-07-07 10:39:05.294244: validation loss: -0.5959
2022-07-07 10:39:05.303135: Average global foreground Dice: [0.671]
2022-07-07 10:39:05.319544: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:39:06.087813: Suus1 maybe_update_lr lr: 0.009621
2022-07-07 10:39:06.128252: saving best epoch checkpoint...
2022-07-07 10:39:06.191318: saving checkpoint...
2022-07-07 10:39:07.376389: done, saving took 1.22 seconds
2022-07-07 10:39:07.390648: This epoch took 74.455608 s

2022-07-07 10:39:07.392754: 
epoch:  21
2022-07-07 10:40:15.042360: train loss : -0.5958
2022-07-07 10:40:19.500252: validation loss: -0.5683
2022-07-07 10:40:19.521870: Average global foreground Dice: [0.6423]
2022-07-07 10:40:19.541572: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:40:20.060183: Suus1 maybe_update_lr lr: 0.009603
2022-07-07 10:40:20.062950: saving best epoch checkpoint...
2022-07-07 10:40:20.099930: saving checkpoint...
2022-07-07 10:40:21.217955: done, saving took 1.15 seconds
2022-07-07 10:40:21.232928: This epoch took 73.837918 s

2022-07-07 10:40:21.235511: 
epoch:  22
2022-07-07 10:41:28.677214: train loss : -0.6052
2022-07-07 10:41:33.097311: validation loss: -0.5686
2022-07-07 10:41:33.100796: Average global foreground Dice: [0.6472]
2022-07-07 10:41:33.104635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:41:33.668585: Suus1 maybe_update_lr lr: 0.009585
2022-07-07 10:41:33.674064: saving best epoch checkpoint...
2022-07-07 10:41:33.708374: saving checkpoint...
2022-07-07 10:41:34.754972: done, saving took 1.08 seconds
2022-07-07 10:41:34.769325: This epoch took 73.531481 s

2022-07-07 10:41:34.771421: 
epoch:  23
2022-07-07 10:42:42.357114: train loss : -0.5924
2022-07-07 10:42:47.030450: validation loss: -0.5582
2022-07-07 10:42:47.066897: Average global foreground Dice: [0.6234]
2022-07-07 10:42:47.082275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:42:47.602003: Suus1 maybe_update_lr lr: 0.009567
2022-07-07 10:42:47.629275: saving best epoch checkpoint...
2022-07-07 10:42:47.688466: saving checkpoint...
2022-07-07 10:42:48.871909: done, saving took 1.23 seconds
2022-07-07 10:42:48.886297: This epoch took 74.112526 s

2022-07-07 10:42:48.888345: 
epoch:  24
2022-07-07 10:43:56.424000: train loss : -0.5992
2022-07-07 10:44:00.908926: validation loss: -0.5693
2022-07-07 10:44:00.925464: Average global foreground Dice: [0.6453]
2022-07-07 10:44:00.927989: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:44:01.476650: Suus1 maybe_update_lr lr: 0.009549
2022-07-07 10:44:01.491303: saving best epoch checkpoint...
2022-07-07 10:44:01.554186: saving checkpoint...
2022-07-07 10:44:02.555228: done, saving took 1.05 seconds
2022-07-07 10:44:02.568334: This epoch took 73.677986 s

2022-07-07 10:44:02.570473: 
epoch:  25
2022-07-07 10:45:10.105025: train loss : -0.5907
2022-07-07 10:45:14.595379: validation loss: -0.5967
2022-07-07 10:45:14.616713: Average global foreground Dice: [0.6768]
2022-07-07 10:45:14.627939: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:45:15.130114: Suus1 maybe_update_lr lr: 0.009531
2022-07-07 10:45:15.136303: saving best epoch checkpoint...
2022-07-07 10:45:15.191284: saving checkpoint...
2022-07-07 10:45:16.523989: done, saving took 1.37 seconds
2022-07-07 10:45:16.542795: This epoch took 73.970509 s

2022-07-07 10:45:16.545853: 
epoch:  26
2022-07-07 10:46:24.203625: train loss : -0.6124
2022-07-07 10:46:28.749766: validation loss: -0.6351
2022-07-07 10:46:28.785732: Average global foreground Dice: [0.7056]
2022-07-07 10:46:28.818261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:46:29.363686: Suus1 maybe_update_lr lr: 0.009513
2022-07-07 10:46:29.366184: saving best epoch checkpoint...
2022-07-07 10:46:29.421963: saving checkpoint...
2022-07-07 10:46:30.769814: done, saving took 1.40 seconds
2022-07-07 10:46:30.785115: This epoch took 74.235792 s

2022-07-07 10:46:30.787100: 
epoch:  27
2022-07-07 10:47:38.280693: train loss : -0.6193
2022-07-07 10:47:42.800429: validation loss: -0.6237
2022-07-07 10:47:42.814186: Average global foreground Dice: [0.6746]
2022-07-07 10:47:42.827320: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:47:43.434618: Suus1 maybe_update_lr lr: 0.009495
2022-07-07 10:47:43.456350: saving best epoch checkpoint...
2022-07-07 10:47:43.533045: saving checkpoint...
2022-07-07 10:47:45.245147: done, saving took 1.77 seconds
2022-07-07 10:47:45.261125: This epoch took 74.472078 s

2022-07-07 10:47:45.263337: 
epoch:  28
2022-07-07 10:48:52.893690: train loss : -0.6177
2022-07-07 10:48:57.562850: validation loss: -0.5876
2022-07-07 10:48:57.574729: Average global foreground Dice: [0.6669]
2022-07-07 10:48:57.593574: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:48:58.066488: Suus1 maybe_update_lr lr: 0.009476
2022-07-07 10:48:58.077976: saving best epoch checkpoint...
2022-07-07 10:48:58.129464: saving checkpoint...
2022-07-07 10:48:59.661717: done, saving took 1.58 seconds
2022-07-07 10:48:59.676044: This epoch took 74.410513 s

2022-07-07 10:48:59.678251: 
epoch:  29
2022-07-07 10:50:07.226583: train loss : -0.6318
2022-07-07 10:50:12.080485: validation loss: -0.6495
2022-07-07 10:50:12.093239: Average global foreground Dice: [0.7095]
2022-07-07 10:50:12.095610: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:50:12.676135: Suus1 maybe_update_lr lr: 0.009458
2022-07-07 10:50:12.697317: saving best epoch checkpoint...
2022-07-07 10:50:12.765102: saving checkpoint...
2022-07-07 10:50:14.029650: done, saving took 1.30 seconds
2022-07-07 10:50:14.044486: This epoch took 74.364055 s

2022-07-07 10:50:14.047169: 
epoch:  30
2022-07-07 10:51:21.571264: train loss : -0.6433
2022-07-07 10:51:25.983784: validation loss: -0.6271
2022-07-07 10:51:25.986527: Average global foreground Dice: [0.6892]
2022-07-07 10:51:25.988923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:51:26.399716: Suus1 maybe_update_lr lr: 0.00944
2022-07-07 10:51:26.401940: saving best epoch checkpoint...
2022-07-07 10:51:26.436553: saving checkpoint...
2022-07-07 10:51:27.446542: done, saving took 1.04 seconds
2022-07-07 10:51:27.460110: This epoch took 73.410373 s

2022-07-07 10:51:27.462717: 
epoch:  31
2022-07-07 10:52:35.050608: train loss : -0.6592
2022-07-07 10:52:39.816924: validation loss: -0.6362
2022-07-07 10:52:39.824152: Average global foreground Dice: [0.7033]
2022-07-07 10:52:39.828724: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:52:40.302663: Suus1 maybe_update_lr lr: 0.009422
2022-07-07 10:52:40.306216: saving best epoch checkpoint...
2022-07-07 10:52:40.341378: saving checkpoint...
2022-07-07 10:52:42.124962: done, saving took 1.82 seconds
2022-07-07 10:52:42.139105: This epoch took 74.674314 s

2022-07-07 10:52:42.141565: 
epoch:  32
2022-07-07 10:53:49.792726: train loss : -0.6512
2022-07-07 10:53:54.366056: validation loss: -0.6336
2022-07-07 10:53:54.389782: Average global foreground Dice: [0.6886]
2022-07-07 10:53:54.393167: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:53:54.944496: Suus1 maybe_update_lr lr: 0.009404
2022-07-07 10:53:54.947694: saving best epoch checkpoint...
2022-07-07 10:53:54.985259: saving checkpoint...
2022-07-07 10:53:56.663471: done, saving took 1.71 seconds
2022-07-07 10:53:56.681951: This epoch took 74.537560 s

2022-07-07 10:53:56.685475: 
epoch:  33
2022-07-07 10:55:04.215488: train loss : -0.6628
2022-07-07 10:55:08.792853: validation loss: -0.6529
2022-07-07 10:55:08.796351: Average global foreground Dice: [0.706]
2022-07-07 10:55:08.798652: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:55:09.334750: Suus1 maybe_update_lr lr: 0.009386
2022-07-07 10:55:09.337193: saving best epoch checkpoint...
2022-07-07 10:55:09.371923: saving checkpoint...
2022-07-07 10:55:10.618847: done, saving took 1.28 seconds
2022-07-07 10:55:10.632783: This epoch took 73.944408 s

2022-07-07 10:55:10.634936: 
epoch:  34
2022-07-07 10:56:18.123780: train loss : -0.6504
2022-07-07 10:56:22.553832: validation loss: -0.6534
2022-07-07 10:56:22.576676: Average global foreground Dice: [0.7187]
2022-07-07 10:56:22.583370: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:56:23.046765: Suus1 maybe_update_lr lr: 0.009368
2022-07-07 10:56:23.049671: saving best epoch checkpoint...
2022-07-07 10:56:23.084697: saving checkpoint...
2022-07-07 10:56:24.611377: done, saving took 1.56 seconds
2022-07-07 10:56:24.627238: This epoch took 73.990000 s

2022-07-07 10:56:24.629975: 
epoch:  35
2022-07-07 10:57:32.407446: train loss : -0.6666
2022-07-07 10:57:36.788867: validation loss: -0.6571
2022-07-07 10:57:37.779911: Average global foreground Dice: [0.7222]
2022-07-07 10:57:38.062707: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:57:38.652172: Suus1 maybe_update_lr lr: 0.00935
2022-07-07 10:57:38.685302: saving best epoch checkpoint...
2022-07-07 10:57:38.773337: saving checkpoint...
2022-07-07 10:57:40.981678: done, saving took 2.26 seconds
2022-07-07 10:57:40.996488: This epoch took 76.364052 s

2022-07-07 10:57:40.998776: 
epoch:  36
2022-07-07 10:58:48.492041: train loss : -0.6682
2022-07-07 10:58:53.084946: validation loss: -0.6593
2022-07-07 10:58:53.110872: Average global foreground Dice: [0.729]
2022-07-07 10:58:53.125295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 10:58:53.739019: Suus1 maybe_update_lr lr: 0.009331
2022-07-07 10:58:53.741802: saving best epoch checkpoint...
2022-07-07 10:58:53.777187: saving checkpoint...
2022-07-07 10:58:55.242745: done, saving took 1.50 seconds
2022-07-07 10:58:55.258489: This epoch took 74.257071 s

2022-07-07 10:58:55.261067: 
epoch:  37
2022-07-07 11:00:02.865293: train loss : -0.6666
2022-07-07 11:00:07.461722: validation loss: -0.6306
2022-07-07 11:00:07.472561: Average global foreground Dice: [0.6938]
2022-07-07 11:00:07.477222: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:00:07.946815: Suus1 maybe_update_lr lr: 0.009313
2022-07-07 11:00:07.949257: saving best epoch checkpoint...
2022-07-07 11:00:07.985526: saving checkpoint...
2022-07-07 11:00:09.170961: done, saving took 1.22 seconds
2022-07-07 11:00:09.185622: This epoch took 73.922081 s

2022-07-07 11:00:09.188269: 
epoch:  38
2022-07-07 11:01:16.727900: train loss : -0.6597
2022-07-07 11:01:21.208042: validation loss: -0.6428
2022-07-07 11:01:21.225627: Average global foreground Dice: [0.7055]
2022-07-07 11:01:21.228419: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:01:21.786671: Suus1 maybe_update_lr lr: 0.009295
2022-07-07 11:01:21.788735: saving best epoch checkpoint...
2022-07-07 11:01:21.824364: saving checkpoint...
2022-07-07 11:01:22.965925: done, saving took 1.17 seconds
2022-07-07 11:01:22.980332: This epoch took 73.789797 s

2022-07-07 11:01:22.982551: 
epoch:  39
2022-07-07 11:02:30.485263: train loss : -0.6403
2022-07-07 11:02:34.995018: validation loss: -0.6586
2022-07-07 11:02:35.028235: Average global foreground Dice: [0.7194]
2022-07-07 11:02:35.036270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:02:35.563314: Suus1 maybe_update_lr lr: 0.009277
2022-07-07 11:02:35.599339: saving best epoch checkpoint...
2022-07-07 11:02:35.662792: saving checkpoint...
2022-07-07 11:02:36.783457: done, saving took 1.17 seconds
2022-07-07 11:02:36.799267: This epoch took 73.814457 s

2022-07-07 11:02:36.802109: 
epoch:  40
2022-07-07 11:03:44.386093: train loss : -0.6723
2022-07-07 11:03:48.864298: validation loss: -0.6509
2022-07-07 11:03:48.868407: Average global foreground Dice: [0.7112]
2022-07-07 11:03:48.870778: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:03:49.346602: Suus1 maybe_update_lr lr: 0.009259
2022-07-07 11:03:49.351331: saving best epoch checkpoint...
2022-07-07 11:03:49.388417: saving checkpoint...
2022-07-07 11:03:50.418710: done, saving took 1.06 seconds
2022-07-07 11:03:50.432901: This epoch took 73.628048 s

2022-07-07 11:03:50.435197: 
epoch:  41
2022-07-07 11:04:58.024934: train loss : -0.6651
2022-07-07 11:05:02.553113: validation loss: -0.6465
2022-07-07 11:05:02.583117: Average global foreground Dice: [0.713]
2022-07-07 11:05:02.596351: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:05:03.283518: Suus1 maybe_update_lr lr: 0.009241
2022-07-07 11:05:03.294136: saving best epoch checkpoint...
2022-07-07 11:05:03.344790: saving checkpoint...
2022-07-07 11:05:05.404470: done, saving took 2.10 seconds
2022-07-07 11:05:05.421389: This epoch took 74.983874 s

2022-07-07 11:05:05.425347: 
epoch:  42
2022-07-07 11:06:12.929642: train loss : -0.6788
2022-07-07 11:06:17.367278: validation loss: -0.6638
2022-07-07 11:06:17.390174: Average global foreground Dice: [0.7266]
2022-07-07 11:06:17.402691: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:06:17.862221: Suus1 maybe_update_lr lr: 0.009223
2022-07-07 11:06:17.883286: saving best epoch checkpoint...
2022-07-07 11:06:17.972567: saving checkpoint...
2022-07-07 11:06:19.403285: done, saving took 1.49 seconds
2022-07-07 11:06:19.418106: This epoch took 73.989966 s

2022-07-07 11:06:19.420226: 
epoch:  43
2022-07-07 11:07:27.004997: train loss : -0.6740
2022-07-07 11:07:31.609150: validation loss: -0.6614
2022-07-07 11:07:31.638119: Average global foreground Dice: [0.7246]
2022-07-07 11:07:31.659497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:07:32.232937: Suus1 maybe_update_lr lr: 0.009204
2022-07-07 11:07:32.235334: saving best epoch checkpoint...
2022-07-07 11:07:32.267260: saving checkpoint...
2022-07-07 11:07:33.471043: done, saving took 1.23 seconds
2022-07-07 11:07:33.485931: This epoch took 74.063540 s

2022-07-07 11:07:33.488271: 
epoch:  44
2022-07-07 11:08:41.102283: train loss : -0.6754
2022-07-07 11:08:45.753964: validation loss: -0.6262
2022-07-07 11:08:45.757297: Average global foreground Dice: [0.6975]
2022-07-07 11:08:45.760147: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:08:46.398632: Suus1 maybe_update_lr lr: 0.009186
2022-07-07 11:08:46.401251: saving best epoch checkpoint...
2022-07-07 11:08:46.448777: saving checkpoint...
2022-07-07 11:08:47.915103: done, saving took 1.51 seconds
2022-07-07 11:08:47.932840: This epoch took 74.442329 s

2022-07-07 11:08:47.936032: 
epoch:  45
2022-07-07 11:09:55.441278: train loss : -0.6750
2022-07-07 11:09:59.965917: validation loss: -0.6745
2022-07-07 11:09:59.972967: Average global foreground Dice: [0.7344]
2022-07-07 11:09:59.981121: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:10:00.452192: Suus1 maybe_update_lr lr: 0.009168
2022-07-07 11:10:00.466424: saving best epoch checkpoint...
2022-07-07 11:10:00.534071: saving checkpoint...
2022-07-07 11:10:02.012521: done, saving took 1.53 seconds
2022-07-07 11:10:02.029786: This epoch took 74.091016 s

2022-07-07 11:10:02.032486: 
epoch:  46
2022-07-07 11:11:09.492769: train loss : -0.6863
2022-07-07 11:11:14.063950: validation loss: -0.6810
2022-07-07 11:11:14.092901: Average global foreground Dice: [0.7374]
2022-07-07 11:11:14.113147: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:11:14.671324: Suus1 maybe_update_lr lr: 0.00915
2022-07-07 11:11:14.709347: saving best epoch checkpoint...
2022-07-07 11:11:14.763858: saving checkpoint...
2022-07-07 11:11:15.912690: done, saving took 1.20 seconds
2022-07-07 11:11:15.928906: This epoch took 73.893904 s

2022-07-07 11:11:15.930969: 
epoch:  47
2022-07-07 11:12:23.516946: train loss : -0.6907
2022-07-07 11:12:28.025952: validation loss: -0.6685
2022-07-07 11:12:28.072355: Average global foreground Dice: [0.7263]
2022-07-07 11:12:28.127760: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:12:28.658184: Suus1 maybe_update_lr lr: 0.009132
2022-07-07 11:12:28.698644: saving best epoch checkpoint...
2022-07-07 11:12:28.813307: saving checkpoint...
2022-07-07 11:12:30.689363: done, saving took 1.95 seconds
2022-07-07 11:12:30.751604: This epoch took 74.818514 s

2022-07-07 11:12:30.775676: 
epoch:  48
2022-07-07 11:13:38.449875: train loss : -0.6770
2022-07-07 11:13:42.862422: validation loss: -0.6679
2022-07-07 11:13:42.870064: Average global foreground Dice: [0.7142]
2022-07-07 11:13:42.874332: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:13:43.400804: Suus1 maybe_update_lr lr: 0.009114
2022-07-07 11:13:43.422377: saving best epoch checkpoint...
2022-07-07 11:13:43.495629: saving checkpoint...
2022-07-07 11:13:44.495261: done, saving took 1.05 seconds
2022-07-07 11:13:44.510965: This epoch took 73.712352 s

2022-07-07 11:13:44.513155: 
epoch:  49
2022-07-07 11:14:52.150260: train loss : -0.6793
2022-07-07 11:14:56.719981: validation loss: -0.6821
2022-07-07 11:14:56.745685: Average global foreground Dice: [0.7386]
2022-07-07 11:14:56.775136: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:14:57.336935: Suus1 maybe_update_lr lr: 0.009095
2022-07-07 11:14:57.339561: saving scheduled checkpoint file...
2022-07-07 11:14:57.386592: saving checkpoint...
2022-07-07 11:14:58.458085: done, saving took 1.12 seconds
2022-07-07 11:14:58.475054: done
2022-07-07 11:14:58.477790: saving best epoch checkpoint...
2022-07-07 11:14:58.520115: saving checkpoint...
2022-07-07 11:14:59.720807: done, saving took 1.24 seconds
2022-07-07 11:14:59.737374: This epoch took 75.222031 s

2022-07-07 11:14:59.740363: 
epoch:  50
2022-07-07 11:16:07.126747: train loss : -0.7022
2022-07-07 11:16:11.550457: validation loss: -0.6894
2022-07-07 11:16:11.556339: Average global foreground Dice: [0.7478]
2022-07-07 11:16:11.564364: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:16:12.043586: Suus1 maybe_update_lr lr: 0.009077
2022-07-07 11:16:12.064291: saving best epoch checkpoint...
2022-07-07 11:16:12.140411: saving checkpoint...
2022-07-07 11:16:13.929310: done, saving took 1.84 seconds
2022-07-07 11:16:13.946227: This epoch took 74.202278 s

2022-07-07 11:16:13.949615: 
epoch:  51
2022-07-07 11:17:21.492158: train loss : -0.6956
2022-07-07 11:17:25.899523: validation loss: -0.6691
2022-07-07 11:17:25.928809: Average global foreground Dice: [0.7448]
2022-07-07 11:17:25.946146: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:17:26.465809: Suus1 maybe_update_lr lr: 0.009059
2022-07-07 11:17:26.468357: saving best epoch checkpoint...
2022-07-07 11:17:26.520336: saving checkpoint...
2022-07-07 11:17:27.502036: done, saving took 1.03 seconds
2022-07-07 11:17:27.518474: This epoch took 73.566470 s

2022-07-07 11:17:27.520936: 
epoch:  52
2022-07-07 11:18:35.111875: train loss : -0.7019
2022-07-07 11:18:39.531993: validation loss: -0.6619
2022-07-07 11:18:39.555778: Average global foreground Dice: [0.7217]
2022-07-07 11:18:39.566085: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:18:40.133883: Suus1 maybe_update_lr lr: 0.009041
2022-07-07 11:18:40.136377: saving best epoch checkpoint...
2022-07-07 11:18:40.180550: saving checkpoint...
2022-07-07 11:18:41.253997: done, saving took 1.12 seconds
2022-07-07 11:18:41.267979: This epoch took 73.744811 s

2022-07-07 11:18:41.270310: 
epoch:  53
2022-07-07 11:19:48.842293: train loss : -0.6883
2022-07-07 11:19:53.441440: validation loss: -0.6828
2022-07-07 11:19:53.455630: Average global foreground Dice: [0.74]
2022-07-07 11:19:53.481262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:19:54.084137: Suus1 maybe_update_lr lr: 0.009023
2022-07-07 11:19:54.098840: saving best epoch checkpoint...
2022-07-07 11:19:54.155923: saving checkpoint...
2022-07-07 11:19:55.457194: done, saving took 1.35 seconds
2022-07-07 11:19:55.471978: This epoch took 74.199588 s

2022-07-07 11:19:55.474690: 
epoch:  54
2022-07-07 11:21:02.908579: train loss : -0.7172
2022-07-07 11:21:09.041258: validation loss: -0.7027
2022-07-07 11:21:09.249207: Average global foreground Dice: [0.7566]
2022-07-07 11:21:09.396724: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:21:10.491066: Suus1 maybe_update_lr lr: 0.009004
2022-07-07 11:21:10.684783: saving best epoch checkpoint...
2022-07-07 11:21:11.162254: saving checkpoint...
2022-07-07 11:21:15.279792: done, saving took 4.15 seconds
2022-07-07 11:21:15.385226: This epoch took 79.908200 s

2022-07-07 11:21:15.418588: 
epoch:  55
2022-07-07 11:22:22.735838: train loss : -0.6909
2022-07-07 11:22:27.190942: validation loss: -0.7370
2022-07-07 11:22:27.211084: Average global foreground Dice: [0.7814]
2022-07-07 11:22:27.235584: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:22:27.755628: Suus1 maybe_update_lr lr: 0.008986
2022-07-07 11:22:27.758612: saving best epoch checkpoint...
2022-07-07 11:22:27.797210: saving checkpoint...
2022-07-07 11:22:29.196908: done, saving took 1.43 seconds
2022-07-07 11:22:29.212046: This epoch took 73.756754 s

2022-07-07 11:22:29.214254: 
epoch:  56
2022-07-07 11:23:36.736418: train loss : -0.7004
2022-07-07 11:23:41.399597: validation loss: -0.7103
2022-07-07 11:23:41.417687: Average global foreground Dice: [0.7624]
2022-07-07 11:23:41.424049: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:23:41.878308: Suus1 maybe_update_lr lr: 0.008968
2022-07-07 11:23:41.900348: saving best epoch checkpoint...
2022-07-07 11:23:41.963127: saving checkpoint...
2022-07-07 11:23:43.453009: done, saving took 1.52 seconds
2022-07-07 11:23:43.467674: This epoch took 74.251199 s

2022-07-07 11:23:43.469928: 
epoch:  57
2022-07-07 11:24:50.857496: train loss : -0.7080
2022-07-07 11:24:55.310074: validation loss: -0.7091
2022-07-07 11:24:55.319923: Average global foreground Dice: [0.7594]
2022-07-07 11:24:55.322645: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:24:55.844727: Suus1 maybe_update_lr lr: 0.00895
2022-07-07 11:24:55.847153: saving best epoch checkpoint...
2022-07-07 11:24:55.878956: saving checkpoint...
2022-07-07 11:24:57.295516: done, saving took 1.45 seconds
2022-07-07 11:24:57.310315: This epoch took 73.838045 s

2022-07-07 11:24:57.312846: 
epoch:  58
2022-07-07 11:26:04.834854: train loss : -0.7006
2022-07-07 11:26:09.282947: validation loss: -0.6726
2022-07-07 11:26:09.294240: Average global foreground Dice: [0.7372]
2022-07-07 11:26:09.303755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:26:09.777742: Suus1 maybe_update_lr lr: 0.008931
2022-07-07 11:26:09.780385: saving best epoch checkpoint...
2022-07-07 11:26:09.836706: saving checkpoint...
2022-07-07 11:26:10.987071: done, saving took 1.20 seconds
2022-07-07 11:26:11.001978: This epoch took 73.686775 s

2022-07-07 11:26:11.004184: 
epoch:  59
2022-07-07 11:27:18.452652: train loss : -0.6979
2022-07-07 11:27:22.886213: validation loss: -0.6767
2022-07-07 11:27:22.894183: Average global foreground Dice: [0.7346]
2022-07-07 11:27:22.910165: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:27:23.466382: Suus1 maybe_update_lr lr: 0.008913
2022-07-07 11:27:23.468857: This epoch took 72.462465 s

2022-07-07 11:27:23.471361: 
epoch:  60
2022-07-07 11:28:31.069496: train loss : -0.7029
2022-07-07 11:28:35.373199: validation loss: -0.7211
2022-07-07 11:28:35.407933: Average global foreground Dice: [0.7737]
2022-07-07 11:28:35.427425: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:28:35.999265: Suus1 maybe_update_lr lr: 0.008895
2022-07-07 11:28:36.001703: saving best epoch checkpoint...
2022-07-07 11:28:36.038695: saving checkpoint...
2022-07-07 11:28:37.389620: done, saving took 1.39 seconds
2022-07-07 11:28:37.409482: This epoch took 73.932142 s

2022-07-07 11:28:37.412078: 
epoch:  61
2022-07-07 11:29:44.862946: train loss : -0.7151
2022-07-07 11:29:49.391254: validation loss: -0.6708
2022-07-07 11:29:49.401457: Average global foreground Dice: [0.734]
2022-07-07 11:29:49.404294: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:29:49.937077: Suus1 maybe_update_lr lr: 0.008877
2022-07-07 11:29:49.940406: This epoch took 72.525811 s

2022-07-07 11:29:49.942944: 
epoch:  62
2022-07-07 11:30:57.509722: train loss : -0.7172
2022-07-07 11:31:02.007939: validation loss: -0.7027
2022-07-07 11:31:02.018200: Average global foreground Dice: [0.7544]
2022-07-07 11:31:02.020674: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:31:02.496202: Suus1 maybe_update_lr lr: 0.008859
2022-07-07 11:31:02.502244: saving best epoch checkpoint...
2022-07-07 11:31:02.546249: saving checkpoint...
2022-07-07 11:31:03.720252: done, saving took 1.21 seconds
2022-07-07 11:31:03.736296: This epoch took 73.790865 s

2022-07-07 11:31:03.738909: 
epoch:  63
2022-07-07 11:32:11.282737: train loss : -0.7010
2022-07-07 11:32:15.827626: validation loss: -0.6934
2022-07-07 11:32:15.831528: Average global foreground Dice: [0.7457]
2022-07-07 11:32:15.833623: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:32:16.325778: Suus1 maybe_update_lr lr: 0.00884
2022-07-07 11:32:16.332495: saving best epoch checkpoint...
2022-07-07 11:32:16.384394: saving checkpoint...
2022-07-07 11:32:17.506543: done, saving took 1.17 seconds
2022-07-07 11:32:17.533668: This epoch took 73.792388 s

2022-07-07 11:32:17.535957: 
epoch:  64
2022-07-07 11:33:24.965630: train loss : -0.7223
2022-07-07 11:33:29.457837: validation loss: -0.7047
2022-07-07 11:33:29.482858: Average global foreground Dice: [0.7614]
2022-07-07 11:33:29.487673: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:33:29.925441: Suus1 maybe_update_lr lr: 0.008822
2022-07-07 11:33:29.927812: saving best epoch checkpoint...
2022-07-07 11:33:29.978474: saving checkpoint...
2022-07-07 11:33:31.089972: done, saving took 1.16 seconds
2022-07-07 11:33:31.107905: This epoch took 73.569829 s

2022-07-07 11:33:31.110465: 
epoch:  65
2022-07-07 11:34:38.539557: train loss : -0.7096
2022-07-07 11:34:43.175288: validation loss: -0.6616
2022-07-07 11:34:43.196548: Average global foreground Dice: [0.7304]
2022-07-07 11:34:43.218323: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:34:43.808032: Suus1 maybe_update_lr lr: 0.008804
2022-07-07 11:34:43.810604: This epoch took 72.697868 s

2022-07-07 11:34:43.813864: 
epoch:  66
2022-07-07 11:35:51.250704: train loss : -0.7087
2022-07-07 11:35:55.817019: validation loss: -0.6905
2022-07-07 11:35:55.825370: Average global foreground Dice: [0.7427]
2022-07-07 11:35:55.827845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:35:56.432037: Suus1 maybe_update_lr lr: 0.008785
2022-07-07 11:35:56.434371: This epoch took 72.617263 s

2022-07-07 11:35:56.436346: 
epoch:  67
2022-07-07 11:37:04.037633: train loss : -0.7181
2022-07-07 11:37:08.676131: validation loss: -0.6801
2022-07-07 11:37:08.693571: Average global foreground Dice: [0.7301]
2022-07-07 11:37:08.696737: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:37:09.201897: Suus1 maybe_update_lr lr: 0.008767
2022-07-07 11:37:09.205118: This epoch took 72.766499 s

2022-07-07 11:37:09.207639: 
epoch:  68
2022-07-07 11:38:16.803983: train loss : -0.7141
2022-07-07 11:38:21.267419: validation loss: -0.6930
2022-07-07 11:38:21.271339: Average global foreground Dice: [0.7562]
2022-07-07 11:38:21.273901: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:38:21.846445: Suus1 maybe_update_lr lr: 0.008749
2022-07-07 11:38:21.865312: This epoch took 72.654579 s

2022-07-07 11:38:21.889929: 
epoch:  69
2022-07-07 11:39:29.358279: train loss : -0.7171
2022-07-07 11:39:33.848569: validation loss: -0.7089
2022-07-07 11:39:33.863433: Average global foreground Dice: [0.7581]
2022-07-07 11:39:33.878272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:39:34.603101: Suus1 maybe_update_lr lr: 0.008731
2022-07-07 11:39:34.606165: saving best epoch checkpoint...
2022-07-07 11:39:34.640849: saving checkpoint...
2022-07-07 11:39:35.880268: done, saving took 1.27 seconds
2022-07-07 11:39:35.900935: This epoch took 74.005102 s

2022-07-07 11:39:35.903111: 
epoch:  70
2022-07-07 11:40:43.224613: train loss : -0.7139
2022-07-07 11:40:47.842402: validation loss: -0.7149
2022-07-07 11:40:47.845991: Average global foreground Dice: [0.7658]
2022-07-07 11:40:47.882275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:40:48.414325: Suus1 maybe_update_lr lr: 0.008712
2022-07-07 11:40:48.416506: saving best epoch checkpoint...
2022-07-07 11:40:48.450284: saving checkpoint...
2022-07-07 11:40:49.821198: done, saving took 1.40 seconds
2022-07-07 11:40:49.838340: This epoch took 73.933130 s

2022-07-07 11:40:49.841096: 
epoch:  71
2022-07-07 11:41:57.154989: train loss : -0.7261
2022-07-07 11:42:01.675080: validation loss: -0.7014
2022-07-07 11:42:01.702901: Average global foreground Dice: [0.7522]
2022-07-07 11:42:01.722571: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:42:02.311220: Suus1 maybe_update_lr lr: 0.008694
2022-07-07 11:42:02.313781: saving best epoch checkpoint...
2022-07-07 11:42:02.362669: saving checkpoint...
2022-07-07 11:42:03.613655: done, saving took 1.30 seconds
2022-07-07 11:42:03.631220: This epoch took 73.787688 s

2022-07-07 11:42:03.633965: 
epoch:  72
2022-07-07 11:43:10.827840: train loss : -0.7167
2022-07-07 11:43:15.486377: validation loss: -0.6715
2022-07-07 11:43:15.491992: Average global foreground Dice: [0.7295]
2022-07-07 11:43:15.494264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:43:16.038058: Suus1 maybe_update_lr lr: 0.008676
2022-07-07 11:43:16.054535: This epoch took 72.418052 s

2022-07-07 11:43:16.063784: 
epoch:  73
2022-07-07 11:44:23.335673: train loss : -0.7064
2022-07-07 11:44:27.753250: validation loss: -0.7275
2022-07-07 11:44:27.765700: Average global foreground Dice: [0.7742]
2022-07-07 11:44:27.791181: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:44:28.332691: Suus1 maybe_update_lr lr: 0.008658
2022-07-07 11:44:28.335061: saving best epoch checkpoint...
2022-07-07 11:44:28.380631: saving checkpoint...
2022-07-07 11:44:29.462862: done, saving took 1.13 seconds
2022-07-07 11:44:29.481490: This epoch took 73.396230 s

2022-07-07 11:44:29.484232: 
epoch:  74
2022-07-07 11:45:36.752575: train loss : -0.7172
2022-07-07 11:45:41.337615: validation loss: -0.6796
2022-07-07 11:45:41.362686: Average global foreground Dice: [0.734]
2022-07-07 11:45:41.379508: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:45:41.876934: Suus1 maybe_update_lr lr: 0.008639
2022-07-07 11:45:41.879401: This epoch took 72.392494 s

2022-07-07 11:45:41.881621: 
epoch:  75
2022-07-07 11:46:49.164223: train loss : -0.7144
2022-07-07 11:46:53.744464: validation loss: -0.7494
2022-07-07 11:46:53.771444: Average global foreground Dice: [0.7875]
2022-07-07 11:46:53.788244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:46:54.397189: Suus1 maybe_update_lr lr: 0.008621
2022-07-07 11:46:54.399824: saving best epoch checkpoint...
2022-07-07 11:46:54.449211: saving checkpoint...
2022-07-07 11:46:55.413713: done, saving took 1.01 seconds
2022-07-07 11:46:55.429973: This epoch took 73.545789 s

2022-07-07 11:46:55.432332: 
epoch:  76
2022-07-07 11:48:02.659342: train loss : -0.7306
2022-07-07 11:48:07.164501: validation loss: -0.7351
2022-07-07 11:48:07.187111: Average global foreground Dice: [0.7811]
2022-07-07 11:48:07.191266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:48:07.855870: Suus1 maybe_update_lr lr: 0.008603
2022-07-07 11:48:07.858168: saving best epoch checkpoint...
2022-07-07 11:48:07.893075: saving checkpoint...
2022-07-07 11:48:09.075149: done, saving took 1.21 seconds
2022-07-07 11:48:09.090473: This epoch took 73.655821 s

2022-07-07 11:48:09.092977: 
epoch:  77
2022-07-07 11:49:16.369227: train loss : -0.7302
2022-07-07 11:49:20.839050: validation loss: -0.7269
2022-07-07 11:49:20.846747: Average global foreground Dice: [0.7724]
2022-07-07 11:49:20.864792: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:49:21.344823: Suus1 maybe_update_lr lr: 0.008584
2022-07-07 11:49:21.350551: saving best epoch checkpoint...
2022-07-07 11:49:21.423970: saving checkpoint...
2022-07-07 11:49:22.627564: done, saving took 1.26 seconds
2022-07-07 11:49:22.641575: This epoch took 73.546472 s

2022-07-07 11:49:22.643629: 
epoch:  78
2022-07-07 11:50:29.846375: train loss : -0.7298
2022-07-07 11:50:34.166302: validation loss: -0.6802
2022-07-07 11:50:34.168962: Average global foreground Dice: [0.744]
2022-07-07 11:50:34.171040: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:50:34.706295: Suus1 maybe_update_lr lr: 0.008566
2022-07-07 11:50:34.709007: This epoch took 72.063316 s

2022-07-07 11:50:34.711261: 
epoch:  79
2022-07-07 11:51:42.102168: train loss : -0.7368
2022-07-07 11:51:46.806555: validation loss: -0.6939
2022-07-07 11:51:46.810252: Average global foreground Dice: [0.7449]
2022-07-07 11:51:46.812735: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:51:47.309953: Suus1 maybe_update_lr lr: 0.008548
2022-07-07 11:51:47.312597: This epoch took 72.599332 s

2022-07-07 11:51:47.314668: 
epoch:  80
2022-07-07 11:52:54.780979: train loss : -0.7191
2022-07-07 11:52:59.188425: validation loss: -0.7328
2022-07-07 11:52:59.193505: Average global foreground Dice: [0.7797]
2022-07-07 11:52:59.199045: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:52:59.692880: Suus1 maybe_update_lr lr: 0.008529
2022-07-07 11:52:59.698076: saving best epoch checkpoint...
2022-07-07 11:52:59.762314: saving checkpoint...
2022-07-07 11:53:01.249554: done, saving took 1.55 seconds
2022-07-07 11:53:01.268476: This epoch took 73.951845 s

2022-07-07 11:53:01.270957: 
epoch:  81
2022-07-07 11:54:08.503887: train loss : -0.7389
2022-07-07 11:54:12.936304: validation loss: -0.7048
2022-07-07 11:54:12.962247: Average global foreground Dice: [0.7517]
2022-07-07 11:54:12.991303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:54:13.622282: Suus1 maybe_update_lr lr: 0.008511
2022-07-07 11:54:13.624744: This epoch took 72.350693 s

2022-07-07 11:54:13.627043: 
epoch:  82
2022-07-07 11:55:20.897696: train loss : -0.7245
2022-07-07 11:55:25.384126: validation loss: -0.7157
2022-07-07 11:55:25.409883: Average global foreground Dice: [0.7674]
2022-07-07 11:55:25.423272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:55:25.993307: Suus1 maybe_update_lr lr: 0.008493
2022-07-07 11:55:25.996100: saving best epoch checkpoint...
2022-07-07 11:55:26.035695: saving checkpoint...
2022-07-07 11:55:27.659207: done, saving took 1.66 seconds
2022-07-07 11:55:27.677949: This epoch took 74.048788 s

2022-07-07 11:55:27.681611: 
epoch:  83
2022-07-07 11:56:35.025652: train loss : -0.7256
2022-07-07 11:56:39.689041: validation loss: -0.7106
2022-07-07 11:56:39.700073: Average global foreground Dice: [0.7633]
2022-07-07 11:56:39.714249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:56:40.269053: Suus1 maybe_update_lr lr: 0.008474
2022-07-07 11:56:40.272174: saving best epoch checkpoint...
2022-07-07 11:56:40.318045: saving checkpoint...
2022-07-07 11:56:41.723350: done, saving took 1.45 seconds
2022-07-07 11:56:41.739885: This epoch took 74.055083 s

2022-07-07 11:56:41.742246: 
epoch:  84
2022-07-07 11:57:49.157883: train loss : -0.7243
2022-07-07 11:57:53.591584: validation loss: -0.6790
2022-07-07 11:57:53.595477: Average global foreground Dice: [0.7307]
2022-07-07 11:57:53.598142: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:57:54.228059: Suus1 maybe_update_lr lr: 0.008456
2022-07-07 11:57:54.230749: This epoch took 72.485375 s

2022-07-07 11:57:54.233275: 
epoch:  85
2022-07-07 11:59:01.611820: train loss : -0.7339
2022-07-07 11:59:05.932416: validation loss: -0.7385
2022-07-07 11:59:05.945307: Average global foreground Dice: [0.7883]
2022-07-07 11:59:05.948385: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 11:59:06.575689: Suus1 maybe_update_lr lr: 0.008438
2022-07-07 11:59:06.578628: saving best epoch checkpoint...
2022-07-07 11:59:06.612631: saving checkpoint...
2022-07-07 11:59:08.052007: done, saving took 1.47 seconds
2022-07-07 11:59:08.067988: This epoch took 73.832279 s

2022-07-07 11:59:08.070075: 
epoch:  86
2022-07-07 12:00:15.411360: train loss : -0.7394
2022-07-07 12:00:19.826714: validation loss: -0.7256
2022-07-07 12:00:19.850632: Average global foreground Dice: [0.7765]
2022-07-07 12:00:19.865872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:00:20.332544: Suus1 maybe_update_lr lr: 0.008419
2022-07-07 12:00:20.335240: saving best epoch checkpoint...
2022-07-07 12:00:20.367727: saving checkpoint...
2022-07-07 12:00:21.535890: done, saving took 1.20 seconds
2022-07-07 12:00:21.552985: This epoch took 73.480925 s

2022-07-07 12:00:21.555288: 
epoch:  87
2022-07-07 12:01:28.927964: train loss : -0.7392
2022-07-07 12:01:33.284460: validation loss: -0.7428
2022-07-07 12:01:33.316243: Average global foreground Dice: [0.7874]
2022-07-07 12:01:33.348274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:01:33.883955: Suus1 maybe_update_lr lr: 0.008401
2022-07-07 12:01:33.886285: saving best epoch checkpoint...
2022-07-07 12:01:33.930957: saving checkpoint...
2022-07-07 12:01:35.154588: done, saving took 1.27 seconds
2022-07-07 12:01:35.172253: This epoch took 73.614748 s

2022-07-07 12:01:35.175151: 
epoch:  88
2022-07-07 12:02:42.537908: train loss : -0.7348
2022-07-07 12:02:47.049651: validation loss: -0.6831
2022-07-07 12:02:47.061701: Average global foreground Dice: [0.7337]
2022-07-07 12:02:47.072624: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:02:47.634442: Suus1 maybe_update_lr lr: 0.008383
2022-07-07 12:02:47.636800: This epoch took 72.459272 s

2022-07-07 12:02:47.638864: 
epoch:  89
2022-07-07 12:03:55.018723: train loss : -0.7048
2022-07-07 12:03:59.380841: validation loss: -0.6907
2022-07-07 12:03:59.414718: Average global foreground Dice: [0.7524]
2022-07-07 12:03:59.434345: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:03:59.902767: Suus1 maybe_update_lr lr: 0.008364
2022-07-07 12:03:59.906363: This epoch took 72.265436 s

2022-07-07 12:03:59.908807: 
epoch:  90
2022-07-07 12:05:07.324454: train loss : -0.7309
2022-07-07 12:05:11.889367: validation loss: -0.7392
2022-07-07 12:05:11.907002: Average global foreground Dice: [0.7867]
2022-07-07 12:05:11.910169: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:05:12.509616: Suus1 maybe_update_lr lr: 0.008346
2022-07-07 12:05:12.512552: This epoch took 72.601547 s

2022-07-07 12:05:12.515235: 
epoch:  91
2022-07-07 12:06:19.959084: train loss : -0.7295
2022-07-07 12:06:24.434293: validation loss: -0.7063
2022-07-07 12:06:24.457893: Average global foreground Dice: [0.7557]
2022-07-07 12:06:24.467602: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:06:24.975487: Suus1 maybe_update_lr lr: 0.008328
2022-07-07 12:06:24.996748: This epoch took 72.478968 s

2022-07-07 12:06:25.006854: 
epoch:  92
2022-07-07 12:07:32.632217: train loss : -0.7376
2022-07-07 12:07:37.225725: validation loss: -0.7161
2022-07-07 12:07:37.234738: Average global foreground Dice: [0.7654]
2022-07-07 12:07:37.253004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:07:37.845568: Suus1 maybe_update_lr lr: 0.008309
2022-07-07 12:07:37.859400: This epoch took 72.838195 s

2022-07-07 12:07:37.862291: 
epoch:  93
2022-07-07 12:08:45.314563: train loss : -0.7467
2022-07-07 12:08:49.749392: validation loss: -0.6977
2022-07-07 12:08:49.770627: Average global foreground Dice: [0.7536]
2022-07-07 12:08:49.773871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:08:50.263618: Suus1 maybe_update_lr lr: 0.008291
2022-07-07 12:08:50.285087: This epoch took 72.420305 s

2022-07-07 12:08:50.306449: 
epoch:  94
2022-07-07 12:09:57.877028: train loss : -0.7453
2022-07-07 12:10:02.432824: validation loss: -0.7021
2022-07-07 12:10:02.462463: Average global foreground Dice: [0.7594]
2022-07-07 12:10:02.467995: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:10:02.932600: Suus1 maybe_update_lr lr: 0.008272
2022-07-07 12:10:02.952322: This epoch took 72.626846 s

2022-07-07 12:10:02.977258: 
epoch:  95
2022-07-07 12:11:10.563592: train loss : -0.7404
2022-07-07 12:11:14.994793: validation loss: -0.7512
2022-07-07 12:11:15.001486: Average global foreground Dice: [0.7943]
2022-07-07 12:11:15.010478: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:11:15.480969: Suus1 maybe_update_lr lr: 0.008254
2022-07-07 12:11:15.483601: saving best epoch checkpoint...
2022-07-07 12:11:15.536129: saving checkpoint...
2022-07-07 12:11:16.933014: done, saving took 1.44 seconds
2022-07-07 12:11:16.949324: This epoch took 73.958478 s

2022-07-07 12:11:16.951621: 
epoch:  96
2022-07-07 12:12:24.429568: train loss : -0.7525
2022-07-07 12:12:28.927044: validation loss: -0.7279
2022-07-07 12:12:28.955303: Average global foreground Dice: [0.78]
2022-07-07 12:12:28.973426: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:12:29.583423: Suus1 maybe_update_lr lr: 0.008236
2022-07-07 12:12:29.615292: saving best epoch checkpoint...
2022-07-07 12:12:29.691500: saving checkpoint...
2022-07-07 12:12:30.758534: done, saving took 1.12 seconds
2022-07-07 12:12:30.774127: This epoch took 73.820119 s

2022-07-07 12:12:30.776323: 
epoch:  97
2022-07-07 12:13:38.222023: train loss : -0.7508
2022-07-07 12:13:42.657509: validation loss: -0.7375
2022-07-07 12:13:42.670559: Average global foreground Dice: [0.7896]
2022-07-07 12:13:42.701291: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:13:43.228387: Suus1 maybe_update_lr lr: 0.008217
2022-07-07 12:13:43.230906: saving best epoch checkpoint...
2022-07-07 12:13:43.273424: saving checkpoint...
2022-07-07 12:13:44.610577: done, saving took 1.38 seconds
2022-07-07 12:13:44.635634: This epoch took 73.856928 s

2022-07-07 12:13:44.638480: 
epoch:  98
2022-07-07 12:14:52.021558: train loss : -0.7512
2022-07-07 12:14:56.539037: validation loss: -0.7055
2022-07-07 12:14:56.558120: Average global foreground Dice: [0.7517]
2022-07-07 12:14:56.570933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:14:57.201633: Suus1 maybe_update_lr lr: 0.008199
2022-07-07 12:14:57.204509: This epoch took 72.563362 s

2022-07-07 12:14:57.207151: 
epoch:  99
2022-07-07 12:16:04.614189: train loss : -0.7372
2022-07-07 12:16:08.964606: validation loss: -0.6883
2022-07-07 12:16:09.008349: Average global foreground Dice: [0.7415]
2022-07-07 12:16:09.038558: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:16:09.650110: Suus1 maybe_update_lr lr: 0.008181
2022-07-07 12:16:09.652832: saving scheduled checkpoint file...
2022-07-07 12:16:09.697129: saving checkpoint...
2022-07-07 12:16:11.225022: done, saving took 1.57 seconds
2022-07-07 12:16:11.263019: done
2022-07-07 12:16:11.265303: This epoch took 74.055920 s

2022-07-07 12:16:11.267307: 
epoch:  100
2022-07-07 12:17:18.738137: train loss : -0.7563
2022-07-07 12:17:23.241457: validation loss: -0.7288
2022-07-07 12:17:23.246885: Average global foreground Dice: [0.7809]
2022-07-07 12:17:23.249242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:17:23.703666: Suus1 maybe_update_lr lr: 0.008162
2022-07-07 12:17:23.706562: This epoch took 72.437023 s

2022-07-07 12:17:23.708940: 
epoch:  101
2022-07-07 12:18:31.113681: train loss : -0.7529
2022-07-07 12:18:35.502077: validation loss: -0.7281
2022-07-07 12:18:35.535904: Average global foreground Dice: [0.776]
2022-07-07 12:18:35.557376: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:18:36.205584: Suus1 maybe_update_lr lr: 0.008144
2022-07-07 12:18:36.208203: This epoch took 72.497161 s

2022-07-07 12:18:36.210241: 
epoch:  102
2022-07-07 12:19:43.631243: train loss : -0.7267
2022-07-07 12:19:48.124027: validation loss: -0.7408
2022-07-07 12:19:48.133409: Average global foreground Dice: [0.7917]
2022-07-07 12:19:48.137520: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:19:48.610591: Suus1 maybe_update_lr lr: 0.008125
2022-07-07 12:19:48.613564: saving best epoch checkpoint...
2022-07-07 12:19:48.657599: saving checkpoint...
2022-07-07 12:19:49.859070: done, saving took 1.24 seconds
2022-07-07 12:19:49.875256: This epoch took 73.663027 s

2022-07-07 12:19:49.877575: 
epoch:  103
2022-07-07 12:20:57.409490: train loss : -0.7417
2022-07-07 12:21:01.997975: validation loss: -0.7381
2022-07-07 12:21:02.036413: Average global foreground Dice: [0.7809]
2022-07-07 12:21:02.043020: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:21:02.534187: Suus1 maybe_update_lr lr: 0.008107
2022-07-07 12:21:02.536656: saving best epoch checkpoint...
2022-07-07 12:21:02.577367: saving checkpoint...
2022-07-07 12:21:03.702507: done, saving took 1.16 seconds
2022-07-07 12:21:03.719594: This epoch took 73.839622 s

2022-07-07 12:21:03.722264: 
epoch:  104
2022-07-07 12:22:11.139139: train loss : -0.7324
2022-07-07 12:22:15.576227: validation loss: -0.7323
2022-07-07 12:22:15.585536: Average global foreground Dice: [0.7745]
2022-07-07 12:22:15.590690: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:22:16.115856: Suus1 maybe_update_lr lr: 0.008088
2022-07-07 12:22:16.118521: saving best epoch checkpoint...
2022-07-07 12:22:16.171530: saving checkpoint...
2022-07-07 12:22:17.389093: done, saving took 1.27 seconds
2022-07-07 12:22:17.406548: This epoch took 73.681783 s

2022-07-07 12:22:17.408904: 
epoch:  105
2022-07-07 12:23:24.782774: train loss : -0.7342
2022-07-07 12:23:29.224115: validation loss: -0.7176
2022-07-07 12:23:29.227555: Average global foreground Dice: [0.7696]
2022-07-07 12:23:29.239628: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:23:29.743884: Suus1 maybe_update_lr lr: 0.00807
2022-07-07 12:23:29.746588: This epoch took 72.335025 s

2022-07-07 12:23:29.749125: 
epoch:  106
2022-07-07 12:24:37.189618: train loss : -0.7586
2022-07-07 12:24:41.647010: validation loss: -0.7134
2022-07-07 12:24:41.651733: Average global foreground Dice: [0.7699]
2022-07-07 12:24:41.677844: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:24:42.195315: Suus1 maybe_update_lr lr: 0.008052
2022-07-07 12:24:42.207529: This epoch took 72.455657 s

2022-07-07 12:24:42.220056: 
epoch:  107
2022-07-07 12:25:49.709725: train loss : -0.7605
2022-07-07 12:25:54.332993: validation loss: -0.7267
2022-07-07 12:25:54.358599: Average global foreground Dice: [0.7782]
2022-07-07 12:25:54.384669: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:25:54.885945: Suus1 maybe_update_lr lr: 0.008033
2022-07-07 12:25:54.888518: saving best epoch checkpoint...
2022-07-07 12:25:54.934259: saving checkpoint...
2022-07-07 12:25:56.048845: done, saving took 1.16 seconds
2022-07-07 12:25:56.064986: This epoch took 73.831556 s

2022-07-07 12:25:56.067336: 
epoch:  108
2022-07-07 12:27:03.626456: train loss : -0.7581
2022-07-07 12:27:08.178621: validation loss: -0.7179
2022-07-07 12:27:08.185202: Average global foreground Dice: [0.7588]
2022-07-07 12:27:08.207711: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:27:08.942889: Suus1 maybe_update_lr lr: 0.008015
2022-07-07 12:27:08.945270: This epoch took 72.875497 s

2022-07-07 12:27:08.948549: 
epoch:  109
2022-07-07 12:28:16.543724: train loss : -0.7445
2022-07-07 12:28:21.224103: validation loss: -0.7354
2022-07-07 12:28:21.233122: Average global foreground Dice: [0.7892]
2022-07-07 12:28:21.245467: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:28:21.769895: Suus1 maybe_update_lr lr: 0.007996
2022-07-07 12:28:21.772102: saving best epoch checkpoint...
2022-07-07 12:28:21.808952: saving checkpoint...
2022-07-07 12:28:22.841495: done, saving took 1.07 seconds
2022-07-07 12:28:22.856266: This epoch took 73.904637 s

2022-07-07 12:28:22.858485: 
epoch:  110
2022-07-07 12:29:30.267442: train loss : -0.7432
2022-07-07 12:29:34.668092: validation loss: -0.7508
2022-07-07 12:29:34.674169: Average global foreground Dice: [0.7904]
2022-07-07 12:29:34.677772: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:29:35.175491: Suus1 maybe_update_lr lr: 0.007978
2022-07-07 12:29:35.191412: saving best epoch checkpoint...
2022-07-07 12:29:35.231869: saving checkpoint...
2022-07-07 12:29:36.535851: done, saving took 1.34 seconds
2022-07-07 12:29:36.550004: This epoch took 73.689274 s

2022-07-07 12:29:36.552424: 
epoch:  111
2022-07-07 12:30:43.971671: train loss : -0.7476
2022-07-07 12:30:48.416681: validation loss: -0.7325
2022-07-07 12:30:48.424957: Average global foreground Dice: [0.7873]
2022-07-07 12:30:48.427543: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:30:48.961095: Suus1 maybe_update_lr lr: 0.007959
2022-07-07 12:30:48.963516: saving best epoch checkpoint...
2022-07-07 12:30:48.997802: saving checkpoint...
2022-07-07 12:30:50.020621: done, saving took 1.05 seconds
2022-07-07 12:30:50.034566: This epoch took 73.479587 s

2022-07-07 12:30:50.036798: 
epoch:  112
2022-07-07 12:31:57.392658: train loss : -0.7487
2022-07-07 12:32:01.831805: validation loss: -0.7420
2022-07-07 12:32:01.862720: Average global foreground Dice: [0.7903]
2022-07-07 12:32:01.879627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:32:02.512983: Suus1 maybe_update_lr lr: 0.007941
2022-07-07 12:32:02.515606: saving best epoch checkpoint...
2022-07-07 12:32:02.548349: saving checkpoint...
2022-07-07 12:32:03.627406: done, saving took 1.11 seconds
2022-07-07 12:32:03.642410: This epoch took 73.604074 s

2022-07-07 12:32:03.644587: 
epoch:  113
2022-07-07 12:33:10.931645: train loss : -0.7518
2022-07-07 12:33:15.460035: validation loss: -0.7469
2022-07-07 12:33:15.480412: Average global foreground Dice: [0.7916]
2022-07-07 12:33:15.486219: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:33:16.043075: Suus1 maybe_update_lr lr: 0.007922
2022-07-07 12:33:16.045265: saving best epoch checkpoint...
2022-07-07 12:33:16.079731: saving checkpoint...
2022-07-07 12:33:17.092959: done, saving took 1.04 seconds
2022-07-07 12:33:17.107728: This epoch took 73.460878 s

2022-07-07 12:33:17.109911: 
epoch:  114
2022-07-07 12:34:24.339524: train loss : -0.7507
2022-07-07 12:34:28.777632: validation loss: -0.7397
2022-07-07 12:34:28.795157: Average global foreground Dice: [0.7827]
2022-07-07 12:34:28.807317: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:34:29.381728: Suus1 maybe_update_lr lr: 0.007904
2022-07-07 12:34:29.384296: saving best epoch checkpoint...
2022-07-07 12:34:29.426245: saving checkpoint...
2022-07-07 12:34:30.419528: done, saving took 1.03 seconds
2022-07-07 12:34:30.435418: This epoch took 73.323451 s

2022-07-07 12:34:30.437542: 
epoch:  115
2022-07-07 12:35:37.857506: train loss : -0.7554
2022-07-07 12:35:42.246224: validation loss: -0.7228
2022-07-07 12:35:42.250797: Average global foreground Dice: [0.7738]
2022-07-07 12:35:42.253046: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:35:42.689777: Suus1 maybe_update_lr lr: 0.007885
2022-07-07 12:35:42.692555: This epoch took 72.252869 s

2022-07-07 12:35:42.694889: 
epoch:  116
2022-07-07 12:36:50.069672: train loss : -0.7512
2022-07-07 12:36:54.426934: validation loss: -0.7317
2022-07-07 12:36:54.448476: Average global foreground Dice: [0.7723]
2022-07-07 12:36:54.468039: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:36:55.047406: Suus1 maybe_update_lr lr: 0.007867
2022-07-07 12:36:55.049864: This epoch took 72.352260 s

2022-07-07 12:36:55.052182: 
epoch:  117
2022-07-07 12:38:02.457778: train loss : -0.7478
2022-07-07 12:38:06.872877: validation loss: -0.7303
2022-07-07 12:38:06.908706: Average global foreground Dice: [0.781]
2022-07-07 12:38:06.932305: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:38:07.568777: Suus1 maybe_update_lr lr: 0.007848
2022-07-07 12:38:07.571110: This epoch took 72.516603 s

2022-07-07 12:38:07.573088: 
epoch:  118
2022-07-07 12:39:15.108134: train loss : -0.7572
2022-07-07 12:39:19.620000: validation loss: -0.7477
2022-07-07 12:39:19.644672: Average global foreground Dice: [0.7948]
2022-07-07 12:39:19.648688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:39:20.190677: Suus1 maybe_update_lr lr: 0.00783
2022-07-07 12:39:20.200053: saving best epoch checkpoint...
2022-07-07 12:39:20.253311: saving checkpoint...
2022-07-07 12:39:21.369230: done, saving took 1.16 seconds
2022-07-07 12:39:21.384477: This epoch took 73.809366 s

2022-07-07 12:39:21.386682: 
epoch:  119
2022-07-07 12:40:28.765980: train loss : -0.7572
2022-07-07 12:40:33.316343: validation loss: -0.7395
2022-07-07 12:40:33.350727: Average global foreground Dice: [0.7876]
2022-07-07 12:40:33.356784: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:40:33.852010: Suus1 maybe_update_lr lr: 0.007811
2022-07-07 12:40:33.854579: saving best epoch checkpoint...
2022-07-07 12:40:33.904430: saving checkpoint...
2022-07-07 12:40:34.924352: done, saving took 1.07 seconds
2022-07-07 12:40:34.939955: This epoch took 73.551174 s

2022-07-07 12:40:34.942049: 
epoch:  120
2022-07-07 12:41:42.349428: train loss : -0.7496
2022-07-07 12:41:46.845794: validation loss: -0.7303
2022-07-07 12:41:46.866039: Average global foreground Dice: [0.7854]
2022-07-07 12:41:46.868626: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:41:47.375837: Suus1 maybe_update_lr lr: 0.007793
2022-07-07 12:41:47.407299: saving best epoch checkpoint...
2022-07-07 12:41:47.481758: saving checkpoint...
2022-07-07 12:41:48.758475: done, saving took 1.33 seconds
2022-07-07 12:41:48.775198: This epoch took 73.830910 s

2022-07-07 12:41:48.778114: 
epoch:  121
2022-07-07 12:42:56.232606: train loss : -0.7425
2022-07-07 12:43:00.609684: validation loss: -0.7247
2022-07-07 12:43:00.631373: Average global foreground Dice: [0.771]
2022-07-07 12:43:00.636503: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:43:01.091843: Suus1 maybe_update_lr lr: 0.007774
2022-07-07 12:43:01.094221: This epoch took 72.313565 s

2022-07-07 12:43:01.096349: 
epoch:  122
2022-07-07 12:44:08.576587: train loss : -0.7625
2022-07-07 12:44:13.065478: validation loss: -0.7371
2022-07-07 12:44:13.090271: Average global foreground Dice: [0.7878]
2022-07-07 12:44:13.092674: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:44:13.576554: Suus1 maybe_update_lr lr: 0.007756
2022-07-07 12:44:13.580409: This epoch took 72.481855 s

2022-07-07 12:44:13.582488: 
epoch:  123
2022-07-07 12:45:21.039004: train loss : -0.7571
2022-07-07 12:45:25.482477: validation loss: -0.7220
2022-07-07 12:45:25.485770: Average global foreground Dice: [0.7679]
2022-07-07 12:45:25.488628: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:45:26.009412: Suus1 maybe_update_lr lr: 0.007737
2022-07-07 12:45:26.011605: This epoch took 72.426730 s

2022-07-07 12:45:26.014026: 
epoch:  124
2022-07-07 12:46:33.438175: train loss : -0.7608
2022-07-07 12:46:37.898371: validation loss: -0.7653
2022-07-07 12:46:37.915287: Average global foreground Dice: [0.8077]
2022-07-07 12:46:37.917261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:46:38.451999: Suus1 maybe_update_lr lr: 0.007719
2022-07-07 12:46:38.454803: saving best epoch checkpoint...
2022-07-07 12:46:38.499145: saving checkpoint...
2022-07-07 12:46:39.548849: done, saving took 1.09 seconds
2022-07-07 12:46:39.565117: This epoch took 73.549131 s

2022-07-07 12:46:39.567519: 
epoch:  125
2022-07-07 12:47:47.008912: train loss : -0.7645
2022-07-07 12:47:51.382455: validation loss: -0.7428
2022-07-07 12:47:51.414088: Average global foreground Dice: [0.7897]
2022-07-07 12:47:51.416558: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:47:52.014952: Suus1 maybe_update_lr lr: 0.0077
2022-07-07 12:47:52.017306: saving best epoch checkpoint...
2022-07-07 12:47:52.050931: saving checkpoint...
2022-07-07 12:47:53.106875: done, saving took 1.09 seconds
2022-07-07 12:47:53.121272: This epoch took 73.551510 s

2022-07-07 12:47:53.123499: 
epoch:  126
2022-07-07 12:49:00.512522: train loss : -0.7684
2022-07-07 12:49:04.972354: validation loss: -0.7289
2022-07-07 12:49:04.983166: Average global foreground Dice: [0.7709]
2022-07-07 12:49:04.988686: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:49:05.508307: Suus1 maybe_update_lr lr: 0.007682
2022-07-07 12:49:05.511435: This epoch took 72.385665 s

2022-07-07 12:49:05.523629: 
epoch:  127
2022-07-07 12:50:12.960921: train loss : -0.7595
2022-07-07 12:50:17.417663: validation loss: -0.7617
2022-07-07 12:50:17.421967: Average global foreground Dice: [0.801]
2022-07-07 12:50:17.451387: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:50:18.043959: Suus1 maybe_update_lr lr: 0.007663
2022-07-07 12:50:18.046537: saving best epoch checkpoint...
2022-07-07 12:50:18.082706: saving checkpoint...
2022-07-07 12:50:19.067873: done, saving took 1.02 seconds
2022-07-07 12:50:19.084313: This epoch took 73.548271 s

2022-07-07 12:50:19.086917: 
epoch:  128
2022-07-07 12:51:26.407631: train loss : -0.7603
2022-07-07 12:51:30.821302: validation loss: -0.7463
2022-07-07 12:51:30.841712: Average global foreground Dice: [0.7913]
2022-07-07 12:51:30.847046: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:51:31.350666: Suus1 maybe_update_lr lr: 0.007645
2022-07-07 12:51:31.353215: saving best epoch checkpoint...
2022-07-07 12:51:31.399740: saving checkpoint...
2022-07-07 12:51:32.361622: done, saving took 1.01 seconds
2022-07-07 12:51:32.376948: This epoch took 73.287483 s

2022-07-07 12:51:32.378997: 
epoch:  129
2022-07-07 12:52:39.785640: train loss : -0.7701
2022-07-07 12:52:44.366731: validation loss: -0.7575
2022-07-07 12:52:44.375827: Average global foreground Dice: [0.8007]
2022-07-07 12:52:44.379647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:52:44.837225: Suus1 maybe_update_lr lr: 0.007626
2022-07-07 12:52:44.839440: saving best epoch checkpoint...
2022-07-07 12:52:44.891360: saving checkpoint...
2022-07-07 12:52:46.105207: done, saving took 1.26 seconds
2022-07-07 12:52:46.122163: This epoch took 73.741203 s

2022-07-07 12:52:46.124571: 
epoch:  130
2022-07-07 12:53:53.478632: train loss : -0.7710
2022-07-07 12:53:57.861144: validation loss: -0.7481
2022-07-07 12:53:57.867320: Average global foreground Dice: [0.7926]
2022-07-07 12:53:57.888262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:53:58.457306: Suus1 maybe_update_lr lr: 0.007608
2022-07-07 12:53:58.459736: saving best epoch checkpoint...
2022-07-07 12:53:58.513907: saving checkpoint...
2022-07-07 12:53:59.496341: done, saving took 1.03 seconds
2022-07-07 12:53:59.512158: This epoch took 73.385105 s

2022-07-07 12:53:59.514244: 
epoch:  131
2022-07-07 12:55:06.842817: train loss : -0.7808
2022-07-07 12:55:11.381294: validation loss: -0.7371
2022-07-07 12:55:11.390280: Average global foreground Dice: [0.7729]
2022-07-07 12:55:11.402754: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:55:11.931818: Suus1 maybe_update_lr lr: 0.007589
2022-07-07 12:55:11.934561: This epoch took 72.418241 s

2022-07-07 12:55:11.957387: 
epoch:  132
2022-07-07 12:56:19.603836: train loss : -0.7659
2022-07-07 12:56:24.205671: validation loss: -0.7490
2022-07-07 12:56:24.223489: Average global foreground Dice: [0.7921]
2022-07-07 12:56:24.226411: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:56:24.739703: Suus1 maybe_update_lr lr: 0.007571
2022-07-07 12:56:24.745547: This epoch took 72.766284 s

2022-07-07 12:56:24.755102: 
epoch:  133
2022-07-07 12:57:32.312170: train loss : -0.7536
2022-07-07 12:57:36.811861: validation loss: -0.7317
2022-07-07 12:57:36.816700: Average global foreground Dice: [0.7775]
2022-07-07 12:57:36.824264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:57:37.544312: Suus1 maybe_update_lr lr: 0.007552
2022-07-07 12:57:37.552939: This epoch took 72.771669 s

2022-07-07 12:57:37.554979: 
epoch:  134
2022-07-07 12:58:45.019973: train loss : -0.7650
2022-07-07 12:58:49.568495: validation loss: -0.7452
2022-07-07 12:58:49.588518: Average global foreground Dice: [0.7911]
2022-07-07 12:58:49.591562: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 12:58:50.038019: Suus1 maybe_update_lr lr: 0.007533
2022-07-07 12:58:50.042637: This epoch took 72.485676 s

2022-07-07 12:58:50.044866: 
epoch:  135
2022-07-07 12:59:57.538402: train loss : -0.7745
2022-07-07 13:00:02.028911: validation loss: -0.7493
2022-07-07 13:00:02.034610: Average global foreground Dice: [0.7919]
2022-07-07 13:00:02.036838: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:00:02.510743: Suus1 maybe_update_lr lr: 0.007515
2022-07-07 13:00:02.532293: This epoch took 72.485077 s

2022-07-07 13:00:02.554257: 
epoch:  136
2022-07-07 13:01:09.944194: train loss : -0.7596
2022-07-07 13:01:14.440998: validation loss: -0.7407
2022-07-07 13:01:14.450918: Average global foreground Dice: [0.7842]
2022-07-07 13:01:14.466568: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:01:15.056617: Suus1 maybe_update_lr lr: 0.007496
2022-07-07 13:01:15.066978: This epoch took 72.490719 s

2022-07-07 13:01:15.070644: 
epoch:  137
2022-07-07 13:02:22.393293: train loss : -0.7638
2022-07-07 13:02:26.912239: validation loss: -0.7711
2022-07-07 13:02:26.924663: Average global foreground Dice: [0.8136]
2022-07-07 13:02:26.946261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:02:27.449700: Suus1 maybe_update_lr lr: 0.007478
2022-07-07 13:02:27.451958: saving best epoch checkpoint...
2022-07-07 13:02:27.504729: saving checkpoint...
2022-07-07 13:02:28.528754: done, saving took 1.07 seconds
2022-07-07 13:02:28.544872: This epoch took 73.471966 s

2022-07-07 13:02:28.547125: 
epoch:  138
2022-07-07 13:03:35.848145: train loss : -0.7650
2022-07-07 13:03:40.291432: validation loss: -0.7410
2022-07-07 13:03:40.302784: Average global foreground Dice: [0.7879]
2022-07-07 13:03:40.320884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:03:40.890940: Suus1 maybe_update_lr lr: 0.007459
2022-07-07 13:03:40.908432: This epoch took 72.359384 s

2022-07-07 13:03:40.924280: 
epoch:  139
2022-07-07 13:04:48.341949: train loss : -0.7578
2022-07-07 13:04:52.772920: validation loss: -0.7528
2022-07-07 13:04:52.787142: Average global foreground Dice: [0.7937]
2022-07-07 13:04:52.796271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:04:53.305392: Suus1 maybe_update_lr lr: 0.00744
2022-07-07 13:04:53.341304: saving best epoch checkpoint...
2022-07-07 13:04:53.424040: saving checkpoint...
2022-07-07 13:04:54.421097: done, saving took 1.05 seconds
2022-07-07 13:04:54.437133: This epoch took 73.495835 s

2022-07-07 13:04:54.439311: 
epoch:  140
2022-07-07 13:06:01.738494: train loss : -0.7690
2022-07-07 13:06:06.182241: validation loss: -0.7562
2022-07-07 13:06:06.189214: Average global foreground Dice: [0.7995]
2022-07-07 13:06:06.208265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:06:06.936087: Suus1 maybe_update_lr lr: 0.007422
2022-07-07 13:06:06.938403: saving best epoch checkpoint...
2022-07-07 13:06:06.970012: saving checkpoint...
2022-07-07 13:06:08.217605: done, saving took 1.28 seconds
2022-07-07 13:06:08.234446: This epoch took 73.792859 s

2022-07-07 13:06:08.237208: 
epoch:  141
2022-07-07 13:07:15.632090: train loss : -0.7711
2022-07-07 13:07:20.164974: validation loss: -0.7216
2022-07-07 13:07:20.168080: Average global foreground Dice: [0.7547]
2022-07-07 13:07:20.170326: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:07:20.619970: Suus1 maybe_update_lr lr: 0.007403
2022-07-07 13:07:20.634157: This epoch took 72.394247 s

2022-07-07 13:07:20.656267: 
epoch:  142
2022-07-07 13:08:28.154378: train loss : -0.7590
2022-07-07 13:08:32.722023: validation loss: -0.7470
2022-07-07 13:08:32.757736: Average global foreground Dice: [0.7832]
2022-07-07 13:08:32.770273: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:08:33.371764: Suus1 maybe_update_lr lr: 0.007385
2022-07-07 13:08:33.386074: This epoch took 72.709373 s

2022-07-07 13:08:33.395382: 
epoch:  143
2022-07-07 13:09:40.860590: train loss : -0.7671
2022-07-07 13:09:45.298110: validation loss: -0.7691
2022-07-07 13:09:45.301684: Average global foreground Dice: [0.8112]
2022-07-07 13:09:45.303802: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:09:45.909323: Suus1 maybe_update_lr lr: 0.007366
2022-07-07 13:09:45.911797: This epoch took 72.503338 s

2022-07-07 13:09:45.914021: 
epoch:  144
2022-07-07 13:10:53.308047: train loss : -0.7747
2022-07-07 13:10:57.855307: validation loss: -0.7630
2022-07-07 13:10:57.861543: Average global foreground Dice: [0.8079]
2022-07-07 13:10:57.867848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:10:58.391657: Suus1 maybe_update_lr lr: 0.007347
2022-07-07 13:10:58.396301: saving best epoch checkpoint...
2022-07-07 13:10:58.449707: saving checkpoint...
2022-07-07 13:10:59.666548: done, saving took 1.25 seconds
2022-07-07 13:10:59.681414: This epoch took 73.765142 s

2022-07-07 13:10:59.683556: 
epoch:  145
2022-07-07 13:12:07.118975: train loss : -0.7751
2022-07-07 13:12:11.603024: validation loss: -0.7676
2022-07-07 13:12:11.635913: Average global foreground Dice: [0.8088]
2022-07-07 13:12:11.638908: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:12:12.316832: Suus1 maybe_update_lr lr: 0.007329
2022-07-07 13:12:12.319147: saving best epoch checkpoint...
2022-07-07 13:12:12.351864: saving checkpoint...
2022-07-07 13:12:13.470150: done, saving took 1.15 seconds
2022-07-07 13:12:13.484713: This epoch took 73.799108 s

2022-07-07 13:12:13.486888: 
epoch:  146
2022-07-07 13:13:20.837203: train loss : -0.7518
2022-07-07 13:13:25.178792: validation loss: -0.7600
2022-07-07 13:13:25.222775: Average global foreground Dice: [0.8082]
2022-07-07 13:13:25.244697: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:13:25.847230: Suus1 maybe_update_lr lr: 0.00731
2022-07-07 13:13:25.849569: saving best epoch checkpoint...
2022-07-07 13:13:25.883612: saving checkpoint...
2022-07-07 13:13:27.081614: done, saving took 1.23 seconds
2022-07-07 13:13:27.096853: This epoch took 73.608030 s

2022-07-07 13:13:27.098977: 
epoch:  147
2022-07-07 13:14:34.417380: train loss : -0.7756
2022-07-07 13:14:38.913611: validation loss: -0.7244
2022-07-07 13:14:38.936592: Average global foreground Dice: [0.7856]
2022-07-07 13:14:38.964249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:14:39.555337: Suus1 maybe_update_lr lr: 0.007291
2022-07-07 13:14:39.557673: This epoch took 72.456475 s

2022-07-07 13:14:39.559862: 
epoch:  148
2022-07-07 13:15:46.870673: train loss : -0.7676
2022-07-07 13:15:51.333799: validation loss: -0.7682
2022-07-07 13:15:51.363879: Average global foreground Dice: [0.8022]
2022-07-07 13:15:51.400244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:15:51.980277: Suus1 maybe_update_lr lr: 0.007273
2022-07-07 13:15:51.982568: saving best epoch checkpoint...
2022-07-07 13:15:52.026550: saving checkpoint...
2022-07-07 13:15:53.419829: done, saving took 1.44 seconds
2022-07-07 13:15:53.434961: This epoch took 73.873265 s

2022-07-07 13:15:53.437419: 
epoch:  149
2022-07-07 13:17:00.807355: train loss : -0.7594
2022-07-07 13:17:05.164103: validation loss: -0.7345
2022-07-07 13:17:05.167980: Average global foreground Dice: [0.7863]
2022-07-07 13:17:05.170183: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:17:05.609960: Suus1 maybe_update_lr lr: 0.007254
2022-07-07 13:17:05.612541: saving scheduled checkpoint file...
2022-07-07 13:17:05.648669: saving checkpoint...
2022-07-07 13:17:06.973041: done, saving took 1.36 seconds
2022-07-07 13:17:06.999519: done
2022-07-07 13:17:07.001843: This epoch took 73.561968 s

2022-07-07 13:17:07.004515: 
epoch:  150
2022-07-07 13:18:14.351253: train loss : -0.7750
2022-07-07 13:18:18.845281: validation loss: -0.7360
2022-07-07 13:18:18.860623: Average global foreground Dice: [0.7779]
2022-07-07 13:18:18.863276: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:18:19.499984: Suus1 maybe_update_lr lr: 0.007236
2022-07-07 13:18:19.502490: This epoch took 72.495564 s

2022-07-07 13:18:19.504572: 
epoch:  151
2022-07-07 13:19:26.876254: train loss : -0.7721
2022-07-07 13:19:31.395780: validation loss: -0.7234
2022-07-07 13:19:31.423272: Average global foreground Dice: [0.7738]
2022-07-07 13:19:31.437720: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:19:31.955034: Suus1 maybe_update_lr lr: 0.007217
2022-07-07 13:19:31.963109: This epoch took 72.456389 s

2022-07-07 13:19:31.970910: 
epoch:  152
2022-07-07 13:20:39.373211: train loss : -0.7667
2022-07-07 13:20:43.870582: validation loss: -0.7397
2022-07-07 13:20:43.873606: Average global foreground Dice: [0.7854]
2022-07-07 13:20:43.877707: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:20:44.564426: Suus1 maybe_update_lr lr: 0.007198
2022-07-07 13:20:44.566865: This epoch took 72.566585 s

2022-07-07 13:20:44.568993: 
epoch:  153
2022-07-07 13:21:51.970834: train loss : -0.7654
2022-07-07 13:21:56.494233: validation loss: -0.7582
2022-07-07 13:21:56.529034: Average global foreground Dice: [0.7981]
2022-07-07 13:21:56.550265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:21:57.143934: Suus1 maybe_update_lr lr: 0.00718
2022-07-07 13:21:57.173598: This epoch took 72.602568 s

2022-07-07 13:21:57.189348: 
epoch:  154
2022-07-07 13:23:04.610607: train loss : -0.7707
2022-07-07 13:23:09.049190: validation loss: -0.7179
2022-07-07 13:23:09.071278: Average global foreground Dice: [0.7661]
2022-07-07 13:23:09.073536: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:23:09.548549: Suus1 maybe_update_lr lr: 0.007161
2022-07-07 13:23:09.551079: This epoch took 72.356829 s

2022-07-07 13:23:09.553534: 
epoch:  155
2022-07-07 13:24:17.091024: train loss : -0.7729
2022-07-07 13:24:21.820014: validation loss: -0.7585
2022-07-07 13:24:21.823734: Average global foreground Dice: [0.8008]
2022-07-07 13:24:21.826313: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:24:22.276447: Suus1 maybe_update_lr lr: 0.007142
2022-07-07 13:24:22.279866: This epoch took 72.724057 s

2022-07-07 13:24:22.281994: 
epoch:  156
2022-07-07 13:25:29.717190: train loss : -0.7720
2022-07-07 13:25:34.237479: validation loss: -0.7411
2022-07-07 13:25:34.261546: Average global foreground Dice: [0.7876]
2022-07-07 13:25:34.280474: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:25:34.914937: Suus1 maybe_update_lr lr: 0.007123
2022-07-07 13:25:34.917188: This epoch took 72.633171 s

2022-07-07 13:25:34.919337: 
epoch:  157
2022-07-07 13:26:42.352736: train loss : -0.7768
2022-07-07 13:26:46.929402: validation loss: -0.7323
2022-07-07 13:26:46.945545: Average global foreground Dice: [0.7814]
2022-07-07 13:26:46.961254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:26:47.476535: Suus1 maybe_update_lr lr: 0.007105
2022-07-07 13:26:47.479023: This epoch took 72.557784 s

2022-07-07 13:26:47.481140: 
epoch:  158
2022-07-07 13:27:54.992608: train loss : -0.7787
2022-07-07 13:27:59.537297: validation loss: -0.7279
2022-07-07 13:27:59.549096: Average global foreground Dice: [0.7762]
2022-07-07 13:27:59.570443: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:28:00.099492: Suus1 maybe_update_lr lr: 0.007086
2022-07-07 13:28:00.101944: This epoch took 72.618622 s

2022-07-07 13:28:00.104226: 
epoch:  159
2022-07-07 13:29:07.628529: train loss : -0.7879
2022-07-07 13:29:12.115856: validation loss: -0.7618
2022-07-07 13:29:12.119676: Average global foreground Dice: [0.7984]
2022-07-07 13:29:12.121755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:29:12.640002: Suus1 maybe_update_lr lr: 0.007067
2022-07-07 13:29:12.661309: This epoch took 72.554873 s

2022-07-07 13:29:12.683266: 
epoch:  160
2022-07-07 13:30:20.097273: train loss : -0.7848
2022-07-07 13:30:24.567480: validation loss: -0.7370
2022-07-07 13:30:24.571020: Average global foreground Dice: [0.7777]
2022-07-07 13:30:24.573224: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:30:25.147105: Suus1 maybe_update_lr lr: 0.007049
2022-07-07 13:30:25.149455: This epoch took 72.439146 s

2022-07-07 13:30:25.151646: 
epoch:  161
2022-07-07 13:31:32.476493: train loss : -0.7723
2022-07-07 13:31:37.010544: validation loss: -0.7471
2022-07-07 13:31:37.015706: Average global foreground Dice: [0.7989]
2022-07-07 13:31:37.021551: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:31:37.520884: Suus1 maybe_update_lr lr: 0.00703
2022-07-07 13:31:37.542317: This epoch took 72.388436 s

2022-07-07 13:31:37.554884: 
epoch:  162
2022-07-07 13:32:44.959717: train loss : -0.7679
2022-07-07 13:32:49.441746: validation loss: -0.7632
2022-07-07 13:32:49.469735: Average global foreground Dice: [0.8069]
2022-07-07 13:32:49.491257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:32:49.999904: Suus1 maybe_update_lr lr: 0.007011
2022-07-07 13:32:50.014210: This epoch took 72.427953 s

2022-07-07 13:32:50.024254: 
epoch:  163
2022-07-07 13:33:57.452774: train loss : -0.7680
2022-07-07 13:34:01.958991: validation loss: -0.7516
2022-07-07 13:34:01.986736: Average global foreground Dice: [0.7919]
2022-07-07 13:34:01.999111: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:34:02.512534: Suus1 maybe_update_lr lr: 0.006992
2022-07-07 13:34:02.514934: This epoch took 72.475681 s

2022-07-07 13:34:02.517111: 
epoch:  164
2022-07-07 13:35:10.017293: train loss : -0.7568
2022-07-07 13:35:14.402722: validation loss: -0.7401
2022-07-07 13:35:14.417607: Average global foreground Dice: [0.7865]
2022-07-07 13:35:14.430604: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:35:14.959767: Suus1 maybe_update_lr lr: 0.006974
2022-07-07 13:35:14.962106: This epoch took 72.442887 s

2022-07-07 13:35:14.964159: 
epoch:  165
2022-07-07 13:36:22.357423: train loss : -0.7586
2022-07-07 13:36:26.913838: validation loss: -0.7430
2022-07-07 13:36:26.938849: Average global foreground Dice: [0.7915]
2022-07-07 13:36:26.966274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:36:27.495061: Suus1 maybe_update_lr lr: 0.006955
2022-07-07 13:36:27.497607: This epoch took 72.531415 s

2022-07-07 13:36:27.499968: 
epoch:  166
2022-07-07 13:37:35.014958: train loss : -0.7573
2022-07-07 13:37:39.494950: validation loss: -0.7809
2022-07-07 13:37:39.498108: Average global foreground Dice: [0.8254]
2022-07-07 13:37:39.499722: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:37:39.940718: Suus1 maybe_update_lr lr: 0.006936
2022-07-07 13:37:39.945138: This epoch took 72.443199 s

2022-07-07 13:37:39.947167: 
epoch:  167
2022-07-07 13:38:47.284997: train loss : -0.7850
2022-07-07 13:38:51.906272: validation loss: -0.7401
2022-07-07 13:38:51.928424: Average global foreground Dice: [0.7867]
2022-07-07 13:38:51.943765: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:38:52.455237: Suus1 maybe_update_lr lr: 0.006918
2022-07-07 13:38:52.457330: This epoch took 72.508280 s

2022-07-07 13:38:52.459473: 
epoch:  168
2022-07-07 13:39:59.791929: train loss : -0.7830
2022-07-07 13:40:04.118360: validation loss: -0.7736
2022-07-07 13:40:04.121700: Average global foreground Dice: [0.8166]
2022-07-07 13:40:04.124396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:40:04.595571: Suus1 maybe_update_lr lr: 0.006899
2022-07-07 13:40:04.598020: saving best epoch checkpoint...
2022-07-07 13:40:04.646219: saving checkpoint...
2022-07-07 13:40:05.647721: done, saving took 1.05 seconds
2022-07-07 13:40:05.663732: This epoch took 73.202280 s

2022-07-07 13:40:05.666011: 
epoch:  169
2022-07-07 13:41:13.082540: train loss : -0.7779
2022-07-07 13:41:17.447467: validation loss: -0.7262
2022-07-07 13:41:17.455311: Average global foreground Dice: [0.7725]
2022-07-07 13:41:17.457662: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:41:18.072663: Suus1 maybe_update_lr lr: 0.00688
2022-07-07 13:41:18.104328: This epoch took 72.436037 s

2022-07-07 13:41:18.137247: 
epoch:  170
2022-07-07 13:42:25.701007: train loss : -0.7835
2022-07-07 13:42:30.240643: validation loss: -0.7285
2022-07-07 13:42:30.243897: Average global foreground Dice: [0.7694]
2022-07-07 13:42:30.245850: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:42:30.752342: Suus1 maybe_update_lr lr: 0.006861
2022-07-07 13:42:30.757213: This epoch took 72.586957 s

2022-07-07 13:42:30.787772: 
epoch:  171
2022-07-07 13:43:38.219835: train loss : -0.7796
2022-07-07 13:43:42.831487: validation loss: -0.7575
2022-07-07 13:43:42.859539: Average global foreground Dice: [0.7907]
2022-07-07 13:43:42.877583: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:43:43.408914: Suus1 maybe_update_lr lr: 0.006842
2022-07-07 13:43:43.431327: This epoch took 72.631473 s

2022-07-07 13:43:43.445258: 
epoch:  172
2022-07-07 13:44:50.982291: train loss : -0.7667
2022-07-07 13:44:55.411332: validation loss: -0.7723
2022-07-07 13:44:55.437311: Average global foreground Dice: [0.814]
2022-07-07 13:44:55.443914: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:44:56.231136: Suus1 maybe_update_lr lr: 0.006824
2022-07-07 13:44:56.233773: This epoch took 72.760515 s

2022-07-07 13:44:56.235782: 
epoch:  173
2022-07-07 13:46:03.651011: train loss : -0.7874
2022-07-07 13:46:08.167457: validation loss: -0.7418
2022-07-07 13:46:08.185903: Average global foreground Dice: [0.7796]
2022-07-07 13:46:08.189721: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:46:08.829224: Suus1 maybe_update_lr lr: 0.006805
2022-07-07 13:46:08.831573: This epoch took 72.594014 s

2022-07-07 13:46:08.833507: 
epoch:  174
2022-07-07 13:47:16.148733: train loss : -0.7856
2022-07-07 13:47:20.617874: validation loss: -0.7615
2022-07-07 13:47:20.630339: Average global foreground Dice: [0.8036]
2022-07-07 13:47:20.649496: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:47:21.172044: Suus1 maybe_update_lr lr: 0.006786
2022-07-07 13:47:21.174216: This epoch took 72.338773 s

2022-07-07 13:47:21.176126: 
epoch:  175
2022-07-07 13:48:28.385995: train loss : -0.7868
2022-07-07 13:48:32.899006: validation loss: -0.7595
2022-07-07 13:48:32.924298: Average global foreground Dice: [0.8017]
2022-07-07 13:48:32.937549: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:48:33.468490: Suus1 maybe_update_lr lr: 0.006767
2022-07-07 13:48:33.480811: This epoch took 72.302751 s

2022-07-07 13:48:33.506253: 
epoch:  176
2022-07-07 13:49:40.892390: train loss : -0.7909
2022-07-07 13:49:45.597369: validation loss: -0.7621
2022-07-07 13:49:45.607311: Average global foreground Dice: [0.8056]
2022-07-07 13:49:45.618255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:49:46.193050: Suus1 maybe_update_lr lr: 0.006749
2022-07-07 13:49:46.195908: This epoch took 72.658299 s

2022-07-07 13:49:46.197863: 
epoch:  177
2022-07-07 13:50:53.451274: train loss : -0.7903
2022-07-07 13:50:57.829921: validation loss: -0.7623
2022-07-07 13:50:57.882840: Average global foreground Dice: [0.8013]
2022-07-07 13:50:57.902587: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:50:58.382727: Suus1 maybe_update_lr lr: 0.00673
2022-07-07 13:50:58.385256: saving best epoch checkpoint...
2022-07-07 13:50:58.439089: saving checkpoint...
2022-07-07 13:50:59.416352: done, saving took 1.03 seconds
2022-07-07 13:50:59.432077: This epoch took 73.232073 s

2022-07-07 13:50:59.434539: 
epoch:  178
2022-07-07 13:52:06.772285: train loss : -0.7946
2022-07-07 13:52:11.256080: validation loss: -0.7461
2022-07-07 13:52:11.265354: Average global foreground Dice: [0.7866]
2022-07-07 13:52:11.277271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:52:11.929295: Suus1 maybe_update_lr lr: 0.006711
2022-07-07 13:52:11.947282: This epoch took 72.510716 s

2022-07-07 13:52:11.961281: 
epoch:  179
2022-07-07 13:53:19.226331: train loss : -0.7902
2022-07-07 13:53:23.597925: validation loss: -0.7722
2022-07-07 13:53:23.612411: Average global foreground Dice: [0.8098]
2022-07-07 13:53:23.615425: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:53:24.082036: Suus1 maybe_update_lr lr: 0.006692
2022-07-07 13:53:24.084390: saving best epoch checkpoint...
2022-07-07 13:53:24.130604: saving checkpoint...
2022-07-07 13:53:25.160710: done, saving took 1.07 seconds
2022-07-07 13:53:25.176001: This epoch took 73.211365 s

2022-07-07 13:53:25.178085: 
epoch:  180
2022-07-07 13:54:32.434129: train loss : -0.7923
2022-07-07 13:54:37.121468: validation loss: -0.7633
2022-07-07 13:54:37.133077: Average global foreground Dice: [0.8075]
2022-07-07 13:54:37.136848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:54:37.780400: Suus1 maybe_update_lr lr: 0.006673
2022-07-07 13:54:37.786321: saving best epoch checkpoint...
2022-07-07 13:54:37.826095: saving checkpoint...
2022-07-07 13:54:38.795544: done, saving took 1.01 seconds
2022-07-07 13:54:38.809813: This epoch took 73.629743 s

2022-07-07 13:54:38.811974: 
epoch:  181
2022-07-07 13:55:46.132837: train loss : -0.7736
2022-07-07 13:55:50.608507: validation loss: -0.7382
2022-07-07 13:55:50.617988: Average global foreground Dice: [0.7864]
2022-07-07 13:55:50.653753: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:55:51.273062: Suus1 maybe_update_lr lr: 0.006654
2022-07-07 13:55:51.275234: This epoch took 72.461235 s

2022-07-07 13:55:51.277310: 
epoch:  182
2022-07-07 13:56:58.550272: train loss : -0.7765
2022-07-07 13:57:02.946787: validation loss: -0.7619
2022-07-07 13:57:02.956952: Average global foreground Dice: [0.805]
2022-07-07 13:57:02.973303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:57:03.580269: Suus1 maybe_update_lr lr: 0.006636
2022-07-07 13:57:03.583236: This epoch took 72.303996 s

2022-07-07 13:57:03.585982: 
epoch:  183
2022-07-07 13:58:10.897103: train loss : -0.7832
2022-07-07 13:58:15.402930: validation loss: -0.7629
2022-07-07 13:58:15.406409: Average global foreground Dice: [0.8065]
2022-07-07 13:58:15.411181: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:58:15.906960: Suus1 maybe_update_lr lr: 0.006617
2022-07-07 13:58:15.933261: saving best epoch checkpoint...
2022-07-07 13:58:15.968560: saving checkpoint...
2022-07-07 13:58:17.067617: done, saving took 1.13 seconds
2022-07-07 13:58:17.083055: This epoch took 73.495058 s

2022-07-07 13:58:17.085330: 
epoch:  184
2022-07-07 13:59:24.396557: train loss : -0.7949
2022-07-07 13:59:28.889077: validation loss: -0.7468
2022-07-07 13:59:28.895942: Average global foreground Dice: [0.7951]
2022-07-07 13:59:28.915442: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 13:59:29.490535: Suus1 maybe_update_lr lr: 0.006598
2022-07-07 13:59:29.492800: This epoch took 72.405437 s

2022-07-07 13:59:29.494703: 
epoch:  185
2022-07-07 14:00:36.941169: train loss : -0.8004
2022-07-07 14:00:41.423385: validation loss: -0.7564
2022-07-07 14:00:41.426909: Average global foreground Dice: [0.7957]
2022-07-07 14:00:41.429748: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:00:42.008963: Suus1 maybe_update_lr lr: 0.006579
2022-07-07 14:00:42.012493: This epoch took 72.515796 s

2022-07-07 14:00:42.027718: 
epoch:  186
2022-07-07 14:01:49.485312: train loss : -0.7954
2022-07-07 14:01:54.172784: validation loss: -0.7772
2022-07-07 14:01:54.199750: Average global foreground Dice: [0.8172]
2022-07-07 14:01:54.221247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:01:54.817208: Suus1 maybe_update_lr lr: 0.00656
2022-07-07 14:01:54.830636: saving best epoch checkpoint...
2022-07-07 14:01:54.914068: saving checkpoint...
2022-07-07 14:01:56.220944: done, saving took 1.37 seconds
2022-07-07 14:01:56.237914: This epoch took 74.189401 s

2022-07-07 14:01:56.240174: 
epoch:  187
2022-07-07 14:03:03.564827: train loss : -0.7907
2022-07-07 14:03:07.952305: validation loss: -0.7268
2022-07-07 14:03:07.955686: Average global foreground Dice: [0.7942]
2022-07-07 14:03:07.958721: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:03:08.641813: Suus1 maybe_update_lr lr: 0.006541
2022-07-07 14:03:08.644020: This epoch took 72.401587 s

2022-07-07 14:03:08.646320: 
epoch:  188
2022-07-07 14:04:15.938888: train loss : -0.7995
2022-07-07 14:04:20.544036: validation loss: -0.7772
2022-07-07 14:04:20.555652: Average global foreground Dice: [0.8167]
2022-07-07 14:04:20.573132: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:04:21.096803: Suus1 maybe_update_lr lr: 0.006522
2022-07-07 14:04:21.099619: saving best epoch checkpoint...
2022-07-07 14:04:21.136265: saving checkpoint...
2022-07-07 14:04:22.296693: done, saving took 1.19 seconds
2022-07-07 14:04:22.311266: This epoch took 73.662684 s

2022-07-07 14:04:22.313434: 
epoch:  189
2022-07-07 14:05:29.702315: train loss : -0.7880
2022-07-07 14:05:34.329257: validation loss: -0.7595
2022-07-07 14:05:34.342315: Average global foreground Dice: [0.802]
2022-07-07 14:05:34.348018: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:05:34.845623: Suus1 maybe_update_lr lr: 0.006504
2022-07-07 14:05:34.848269: saving best epoch checkpoint...
2022-07-07 14:05:34.883818: saving checkpoint...
2022-07-07 14:05:35.849904: done, saving took 1.00 seconds
2022-07-07 14:05:35.864019: This epoch took 73.548308 s

2022-07-07 14:05:35.866111: 
epoch:  190
2022-07-07 14:06:43.212196: train loss : -0.7919
2022-07-07 14:06:47.717016: validation loss: -0.7631
2022-07-07 14:06:47.720458: Average global foreground Dice: [0.8091]
2022-07-07 14:06:47.727947: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:06:48.207356: Suus1 maybe_update_lr lr: 0.006485
2022-07-07 14:06:48.210225: saving best epoch checkpoint...
2022-07-07 14:06:48.245468: saving checkpoint...
2022-07-07 14:06:49.360775: done, saving took 1.15 seconds
2022-07-07 14:06:49.374854: This epoch took 73.506574 s

2022-07-07 14:06:49.376926: 
epoch:  191
2022-07-07 14:07:56.763057: train loss : -0.7935
2022-07-07 14:08:01.239779: validation loss: -0.7560
2022-07-07 14:08:01.245707: Average global foreground Dice: [0.795]
2022-07-07 14:08:01.247836: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:08:01.752685: Suus1 maybe_update_lr lr: 0.006466
2022-07-07 14:08:01.755401: This epoch took 72.376405 s

2022-07-07 14:08:01.757734: 
epoch:  192
2022-07-07 14:09:09.071408: train loss : -0.7859
2022-07-07 14:09:13.637802: validation loss: -0.7620
2022-07-07 14:09:13.642161: Average global foreground Dice: [0.8132]
2022-07-07 14:09:13.663817: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:09:14.167880: Suus1 maybe_update_lr lr: 0.006447
2022-07-07 14:09:14.174340: saving best epoch checkpoint...
2022-07-07 14:09:14.214335: saving checkpoint...
2022-07-07 14:09:15.224829: done, saving took 1.05 seconds
2022-07-07 14:09:15.238748: This epoch took 73.478846 s

2022-07-07 14:09:15.240992: 
epoch:  193
2022-07-07 14:10:22.647512: train loss : -0.7860
2022-07-07 14:10:27.145202: validation loss: -0.7790
2022-07-07 14:10:27.151706: Average global foreground Dice: [0.8135]
2022-07-07 14:10:27.156249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:10:27.660153: Suus1 maybe_update_lr lr: 0.006428
2022-07-07 14:10:27.663406: saving best epoch checkpoint...
2022-07-07 14:10:27.698334: saving checkpoint...
2022-07-07 14:10:28.772598: done, saving took 1.11 seconds
2022-07-07 14:10:28.788107: This epoch took 73.544842 s

2022-07-07 14:10:28.790267: 
epoch:  194
2022-07-07 14:11:36.166596: train loss : -0.7954
2022-07-07 14:11:40.884724: validation loss: -0.7526
2022-07-07 14:11:40.888523: Average global foreground Dice: [0.7931]
2022-07-07 14:11:40.891441: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:11:41.415983: Suus1 maybe_update_lr lr: 0.006409
2022-07-07 14:11:41.418405: This epoch took 72.625845 s

2022-07-07 14:11:41.420415: 
epoch:  195
2022-07-07 14:12:48.820870: train loss : -0.7961
2022-07-07 14:12:53.216907: validation loss: -0.7483
2022-07-07 14:12:53.226717: Average global foreground Dice: [0.7929]
2022-07-07 14:12:53.238608: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:12:53.793990: Suus1 maybe_update_lr lr: 0.00639
2022-07-07 14:12:53.796574: This epoch took 72.374207 s

2022-07-07 14:12:53.798448: 
epoch:  196
2022-07-07 14:14:01.175726: train loss : -0.7876
2022-07-07 14:14:05.620861: validation loss: -0.7414
2022-07-07 14:14:05.644702: Average global foreground Dice: [0.7858]
2022-07-07 14:14:05.647025: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:14:06.294025: Suus1 maybe_update_lr lr: 0.006371
2022-07-07 14:14:06.296648: This epoch took 72.496346 s

2022-07-07 14:14:06.298628: 
epoch:  197
2022-07-07 14:15:13.674033: train loss : -0.8017
2022-07-07 14:15:18.085065: validation loss: -0.7423
2022-07-07 14:15:18.093752: Average global foreground Dice: [0.7838]
2022-07-07 14:15:18.097835: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:15:18.535542: Suus1 maybe_update_lr lr: 0.006352
2022-07-07 14:15:18.562850: This epoch took 72.262235 s

2022-07-07 14:15:18.578248: 
epoch:  198
2022-07-07 14:16:26.024996: train loss : -0.7960
2022-07-07 14:16:30.488142: validation loss: -0.7796
2022-07-07 14:16:30.516067: Average global foreground Dice: [0.8198]
2022-07-07 14:16:30.551097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:16:31.088715: Suus1 maybe_update_lr lr: 0.006333
2022-07-07 14:16:31.090831: This epoch took 72.490585 s

2022-07-07 14:16:31.092869: 
epoch:  199
2022-07-07 14:17:38.470967: train loss : -0.8082
2022-07-07 14:17:42.826737: validation loss: -0.7691
2022-07-07 14:17:42.848654: Average global foreground Dice: [0.8113]
2022-07-07 14:17:42.850857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:17:43.404362: Suus1 maybe_update_lr lr: 0.006314
2022-07-07 14:17:43.406896: saving scheduled checkpoint file...
2022-07-07 14:17:43.484644: saving checkpoint...
2022-07-07 14:17:44.727479: done, saving took 1.32 seconds
2022-07-07 14:17:44.744374: done
2022-07-07 14:17:44.746855: This epoch took 73.652122 s

2022-07-07 14:17:44.748811: 
epoch:  200
2022-07-07 14:18:52.214287: train loss : -0.7899
2022-07-07 14:18:56.665106: validation loss: -0.7545
2022-07-07 14:18:56.677831: Average global foreground Dice: [0.8025]
2022-07-07 14:18:56.680030: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:18:57.186268: Suus1 maybe_update_lr lr: 0.006296
2022-07-07 14:18:57.188546: This epoch took 72.437624 s

2022-07-07 14:18:57.190504: 
epoch:  201
2022-07-07 14:20:04.609275: train loss : -0.7891
2022-07-07 14:20:09.084766: validation loss: -0.7847
2022-07-07 14:20:09.120242: Average global foreground Dice: [0.8235]
2022-07-07 14:20:09.124770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:20:09.642393: Suus1 maybe_update_lr lr: 0.006277
2022-07-07 14:20:09.645365: saving best epoch checkpoint...
2022-07-07 14:20:09.749635: saving checkpoint...
2022-07-07 14:20:10.923530: done, saving took 1.25 seconds
2022-07-07 14:20:10.939324: This epoch took 73.746810 s

2022-07-07 14:20:10.941474: 
epoch:  202
2022-07-07 14:21:18.294787: train loss : -0.7925
2022-07-07 14:21:22.713612: validation loss: -0.7589
2022-07-07 14:21:22.755682: Average global foreground Dice: [0.7994]
2022-07-07 14:21:22.764792: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:21:23.385548: Suus1 maybe_update_lr lr: 0.006258
2022-07-07 14:21:23.387501: This epoch took 72.444013 s

2022-07-07 14:21:23.389345: 
epoch:  203
2022-07-07 14:22:30.745491: train loss : -0.7991
2022-07-07 14:22:35.464895: validation loss: -0.7672
2022-07-07 14:22:35.488772: Average global foreground Dice: [0.8137]
2022-07-07 14:22:35.502097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:22:36.022578: Suus1 maybe_update_lr lr: 0.006239
2022-07-07 14:22:36.040693: saving best epoch checkpoint...
2022-07-07 14:22:36.097131: saving checkpoint...
2022-07-07 14:22:37.324343: done, saving took 1.27 seconds
2022-07-07 14:22:37.339762: This epoch took 73.948613 s

2022-07-07 14:22:37.342077: 
epoch:  204
2022-07-07 14:23:44.676223: train loss : -0.8100
2022-07-07 14:23:49.039490: validation loss: -0.7667
2022-07-07 14:23:49.061394: Average global foreground Dice: [0.8175]
2022-07-07 14:23:49.086112: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:23:49.622855: Suus1 maybe_update_lr lr: 0.00622
2022-07-07 14:23:49.625197: saving best epoch checkpoint...
2022-07-07 14:23:49.660053: saving checkpoint...
2022-07-07 14:23:50.654370: done, saving took 1.03 seconds
2022-07-07 14:23:50.668195: This epoch took 73.323761 s

2022-07-07 14:23:50.670459: 
epoch:  205
2022-07-07 14:24:58.160405: train loss : -0.8072
2022-07-07 14:25:02.688890: validation loss: -0.7486
2022-07-07 14:25:02.692589: Average global foreground Dice: [0.7929]
2022-07-07 14:25:02.694638: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:25:03.222360: Suus1 maybe_update_lr lr: 0.006201
2022-07-07 14:25:03.224509: This epoch took 72.551674 s

2022-07-07 14:25:03.228262: 
epoch:  206
2022-07-07 14:26:10.597767: train loss : -0.7943
2022-07-07 14:26:15.042866: validation loss: -0.7699
2022-07-07 14:26:15.057684: Average global foreground Dice: [0.8101]
2022-07-07 14:26:15.064805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:26:15.576722: Suus1 maybe_update_lr lr: 0.006182
2022-07-07 14:26:15.578813: This epoch took 72.348645 s

2022-07-07 14:26:15.580697: 
epoch:  207
2022-07-07 14:27:22.979347: train loss : -0.7832
2022-07-07 14:27:27.358164: validation loss: -0.7650
2022-07-07 14:27:27.365426: Average global foreground Dice: [0.8153]
2022-07-07 14:27:27.371646: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:27:27.939662: Suus1 maybe_update_lr lr: 0.006163
2022-07-07 14:27:27.942171: saving best epoch checkpoint...
2022-07-07 14:27:27.975922: saving checkpoint...
2022-07-07 14:27:28.959876: done, saving took 1.02 seconds
2022-07-07 14:27:28.973884: This epoch took 73.391334 s

2022-07-07 14:27:28.976167: 
epoch:  208
2022-07-07 14:28:36.424889: train loss : -0.7909
2022-07-07 14:28:40.804446: validation loss: -0.7557
2022-07-07 14:28:40.807739: Average global foreground Dice: [0.7919]
2022-07-07 14:28:40.810268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:28:41.288583: Suus1 maybe_update_lr lr: 0.006144
2022-07-07 14:28:41.290862: This epoch took 72.312640 s

2022-07-07 14:28:41.292967: 
epoch:  209
2022-07-07 14:29:48.700633: train loss : -0.7985
2022-07-07 14:29:53.130823: validation loss: -0.7519
2022-07-07 14:29:53.150343: Average global foreground Dice: [0.7969]
2022-07-07 14:29:53.162734: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:29:53.684261: Suus1 maybe_update_lr lr: 0.006125
2022-07-07 14:29:53.686451: This epoch took 72.391250 s

2022-07-07 14:29:53.688351: 
epoch:  210
2022-07-07 14:31:01.165230: train loss : -0.8084
2022-07-07 14:31:05.804097: validation loss: -0.7642
2022-07-07 14:31:05.807051: Average global foreground Dice: [0.8038]
2022-07-07 14:31:05.809037: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:31:06.285119: Suus1 maybe_update_lr lr: 0.006106
2022-07-07 14:31:06.287586: This epoch took 72.597083 s

2022-07-07 14:31:06.289645: 
epoch:  211
2022-07-07 14:32:13.724230: train loss : -0.8078
2022-07-07 14:32:18.090391: validation loss: -0.7601
2022-07-07 14:32:18.095374: Average global foreground Dice: [0.7942]
2022-07-07 14:32:18.097788: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:32:18.728048: Suus1 maybe_update_lr lr: 0.006087
2022-07-07 14:32:18.730489: This epoch took 72.438603 s

2022-07-07 14:32:18.732694: 
epoch:  212
2022-07-07 14:33:26.197831: train loss : -0.7914
2022-07-07 14:33:30.678392: validation loss: -0.7491
2022-07-07 14:33:30.706092: Average global foreground Dice: [0.7894]
2022-07-07 14:33:30.726260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:33:31.435809: Suus1 maybe_update_lr lr: 0.006068
2022-07-07 14:33:31.437948: This epoch took 72.703019 s

2022-07-07 14:33:31.439939: 
epoch:  213
2022-07-07 14:34:39.024081: train loss : -0.8000
2022-07-07 14:34:43.540769: validation loss: -0.7451
2022-07-07 14:34:43.543784: Average global foreground Dice: [0.7918]
2022-07-07 14:34:43.573300: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:34:44.203917: Suus1 maybe_update_lr lr: 0.006049
2022-07-07 14:34:44.206188: This epoch took 72.764396 s

2022-07-07 14:34:44.208158: 
epoch:  214
2022-07-07 14:35:51.590170: train loss : -0.8002
2022-07-07 14:35:56.174102: validation loss: -0.7647
2022-07-07 14:35:56.192409: Average global foreground Dice: [0.8033]
2022-07-07 14:35:56.196454: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:35:56.684981: Suus1 maybe_update_lr lr: 0.00603
2022-07-07 14:35:56.705304: This epoch took 72.494797 s

2022-07-07 14:35:56.734268: 
epoch:  215
2022-07-07 14:37:04.213765: train loss : -0.7979
2022-07-07 14:37:08.620886: validation loss: -0.7633
2022-07-07 14:37:08.632334: Average global foreground Dice: [0.8032]
2022-07-07 14:37:08.639909: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:37:09.186369: Suus1 maybe_update_lr lr: 0.006011
2022-07-07 14:37:09.188690: This epoch took 72.432423 s

2022-07-07 14:37:09.190956: 
epoch:  216
2022-07-07 14:38:16.646895: train loss : -0.8014
2022-07-07 14:38:21.116665: validation loss: -0.7472
2022-07-07 14:38:21.119640: Average global foreground Dice: [0.7886]
2022-07-07 14:38:21.121815: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:38:21.608881: Suus1 maybe_update_lr lr: 0.005991
2022-07-07 14:38:21.626285: This epoch took 72.433131 s

2022-07-07 14:38:21.629723: 
epoch:  217
2022-07-07 14:39:29.199606: train loss : -0.8036
2022-07-07 14:39:33.627350: validation loss: -0.7429
2022-07-07 14:39:33.630976: Average global foreground Dice: [0.7835]
2022-07-07 14:39:33.633205: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:39:34.081241: Suus1 maybe_update_lr lr: 0.005972
2022-07-07 14:39:34.083441: This epoch took 72.449449 s

2022-07-07 14:39:34.085652: 
epoch:  218
2022-07-07 14:40:41.697035: train loss : -0.8071
2022-07-07 14:40:46.128052: validation loss: -0.7454
2022-07-07 14:40:46.131736: Average global foreground Dice: [0.8]
2022-07-07 14:40:46.135681: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:40:46.616666: Suus1 maybe_update_lr lr: 0.005953
2022-07-07 14:40:46.619070: This epoch took 72.506284 s

2022-07-07 14:40:46.644305: 
epoch:  219
2022-07-07 14:41:54.206733: train loss : -0.8150
2022-07-07 14:41:58.612018: validation loss: -0.7675
2022-07-07 14:41:58.643494: Average global foreground Dice: [0.8034]
2022-07-07 14:41:58.657099: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:41:59.264194: Suus1 maybe_update_lr lr: 0.005934
2022-07-07 14:41:59.266527: This epoch took 72.619390 s

2022-07-07 14:41:59.268598: 
epoch:  220
2022-07-07 14:43:06.706313: train loss : -0.7990
2022-07-07 14:43:11.181394: validation loss: -0.7513
2022-07-07 14:43:11.207615: Average global foreground Dice: [0.7948]
2022-07-07 14:43:11.219522: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:43:11.780840: Suus1 maybe_update_lr lr: 0.005915
2022-07-07 14:43:11.783535: This epoch took 72.513363 s

2022-07-07 14:43:11.786794: 
epoch:  221
2022-07-07 14:44:19.197051: train loss : -0.8044
2022-07-07 14:44:23.746065: validation loss: -0.7646
2022-07-07 14:44:23.757288: Average global foreground Dice: [0.8051]
2022-07-07 14:44:23.786606: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:44:24.336659: Suus1 maybe_update_lr lr: 0.005896
2022-07-07 14:44:24.339440: This epoch took 72.550192 s

2022-07-07 14:44:24.341506: 
epoch:  222
2022-07-07 14:45:31.829411: train loss : -0.7968
2022-07-07 14:45:36.224663: validation loss: -0.7587
2022-07-07 14:45:36.228576: Average global foreground Dice: [0.8054]
2022-07-07 14:45:36.231786: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:45:36.679828: Suus1 maybe_update_lr lr: 0.005877
2022-07-07 14:45:36.682022: This epoch took 72.338450 s

2022-07-07 14:45:36.684001: 
epoch:  223
2022-07-07 14:46:44.162964: train loss : -0.7940
2022-07-07 14:46:48.544757: validation loss: -0.7292
2022-07-07 14:46:48.548856: Average global foreground Dice: [0.7867]
2022-07-07 14:46:48.551512: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:46:49.075691: Suus1 maybe_update_lr lr: 0.005858
2022-07-07 14:46:49.097311: This epoch took 72.411448 s

2022-07-07 14:46:49.106492: 
epoch:  224
2022-07-07 14:47:56.460457: train loss : -0.7856
2022-07-07 14:48:00.893743: validation loss: -0.7688
2022-07-07 14:48:00.906917: Average global foreground Dice: [0.8076]
2022-07-07 14:48:00.910049: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:48:01.370611: Suus1 maybe_update_lr lr: 0.005839
2022-07-07 14:48:01.373719: This epoch took 72.265039 s

2022-07-07 14:48:01.377802: 
epoch:  225
2022-07-07 14:49:08.791366: train loss : -0.8061
2022-07-07 14:49:13.315740: validation loss: -0.7930
2022-07-07 14:49:13.331269: Average global foreground Dice: [0.8309]
2022-07-07 14:49:13.344263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:49:13.857241: Suus1 maybe_update_lr lr: 0.00582
2022-07-07 14:49:13.860087: This epoch took 72.473726 s

2022-07-07 14:49:13.862070: 
epoch:  226
2022-07-07 14:50:21.361805: train loss : -0.7935
2022-07-07 14:50:25.834074: validation loss: -0.7256
2022-07-07 14:50:25.867746: Average global foreground Dice: [0.7712]
2022-07-07 14:50:25.888089: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:50:26.501904: Suus1 maybe_update_lr lr: 0.005801
2022-07-07 14:50:26.504494: This epoch took 72.640047 s

2022-07-07 14:50:26.506656: 
epoch:  227
2022-07-07 14:51:34.070281: train loss : -0.7992
2022-07-07 14:51:38.544058: validation loss: -0.7493
2022-07-07 14:51:38.549943: Average global foreground Dice: [0.7872]
2022-07-07 14:51:38.552847: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:51:39.095392: Suus1 maybe_update_lr lr: 0.005781
2022-07-07 14:51:39.097580: This epoch took 72.588966 s

2022-07-07 14:51:39.099639: 
epoch:  228
2022-07-07 14:52:46.492093: train loss : -0.7988
2022-07-07 14:52:50.968900: validation loss: -0.7641
2022-07-07 14:52:50.976693: Average global foreground Dice: [0.7958]
2022-07-07 14:52:50.980805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:52:51.477499: Suus1 maybe_update_lr lr: 0.005762
2022-07-07 14:52:51.492513: This epoch took 72.390638 s

2022-07-07 14:52:51.502808: 
epoch:  229
2022-07-07 14:53:58.935822: train loss : -0.8041
2022-07-07 14:54:03.407125: validation loss: -0.7465
2022-07-07 14:54:03.413866: Average global foreground Dice: [0.7837]
2022-07-07 14:54:03.418872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:54:03.922951: Suus1 maybe_update_lr lr: 0.005743
2022-07-07 14:54:03.926690: This epoch took 72.419024 s

2022-07-07 14:54:03.928607: 
epoch:  230
2022-07-07 14:55:11.353328: train loss : -0.7971
2022-07-07 14:55:15.763664: validation loss: -0.7659
2022-07-07 14:55:15.792824: Average global foreground Dice: [0.8031]
2022-07-07 14:55:15.795676: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:55:16.298750: Suus1 maybe_update_lr lr: 0.005724
2022-07-07 14:55:16.301015: This epoch took 72.370540 s

2022-07-07 14:55:16.302984: 
epoch:  231
2022-07-07 14:56:23.656571: train loss : -0.8018
2022-07-07 14:56:28.144377: validation loss: -0.7725
2022-07-07 14:56:28.159366: Average global foreground Dice: [0.8115]
2022-07-07 14:56:28.164288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:56:28.715410: Suus1 maybe_update_lr lr: 0.005705
2022-07-07 14:56:28.718550: This epoch took 72.413467 s

2022-07-07 14:56:28.720726: 
epoch:  232
2022-07-07 14:57:36.159331: train loss : -0.8006
2022-07-07 14:57:40.626190: validation loss: -0.7651
2022-07-07 14:57:40.652373: Average global foreground Dice: [0.8084]
2022-07-07 14:57:40.672264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:57:41.195610: Suus1 maybe_update_lr lr: 0.005686
2022-07-07 14:57:41.197976: This epoch took 72.475044 s

2022-07-07 14:57:41.200156: 
epoch:  233
2022-07-07 14:58:48.575017: train loss : -0.7937
2022-07-07 14:58:53.047113: validation loss: -0.7388
2022-07-07 14:58:53.052545: Average global foreground Dice: [0.7841]
2022-07-07 14:58:53.055197: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 14:58:53.529515: Suus1 maybe_update_lr lr: 0.005667
2022-07-07 14:58:53.531739: This epoch took 72.329440 s

2022-07-07 14:58:53.533635: 
epoch:  234
2022-07-07 15:00:00.971488: train loss : -0.7861
2022-07-07 15:00:05.454138: validation loss: -0.7613
2022-07-07 15:00:05.476185: Average global foreground Dice: [0.803]
2022-07-07 15:00:05.478612: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:00:06.019590: Suus1 maybe_update_lr lr: 0.005647
2022-07-07 15:00:06.028898: This epoch took 72.492918 s

2022-07-07 15:00:06.031150: 
epoch:  235
2022-07-07 15:01:13.483171: train loss : -0.7842
2022-07-07 15:01:17.970169: validation loss: -0.7526
2022-07-07 15:01:17.974082: Average global foreground Dice: [0.7946]
2022-07-07 15:01:17.993870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:01:18.590054: Suus1 maybe_update_lr lr: 0.005628
2022-07-07 15:01:18.592558: This epoch took 72.559358 s

2022-07-07 15:01:18.616262: 
epoch:  236
2022-07-07 15:02:26.070035: train loss : -0.8054
2022-07-07 15:02:30.437794: validation loss: -0.7651
2022-07-07 15:02:30.450985: Average global foreground Dice: [0.8034]
2022-07-07 15:02:30.455324: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:02:31.053215: Suus1 maybe_update_lr lr: 0.005609
2022-07-07 15:02:31.055459: This epoch took 72.427517 s

2022-07-07 15:02:31.057636: 
epoch:  237
2022-07-07 15:03:38.553868: train loss : -0.7979
2022-07-07 15:03:42.989300: validation loss: -0.7622
2022-07-07 15:03:43.000655: Average global foreground Dice: [0.8014]
2022-07-07 15:03:43.015477: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:03:43.615544: Suus1 maybe_update_lr lr: 0.00559
2022-07-07 15:03:43.617800: This epoch took 72.558157 s

2022-07-07 15:03:43.619713: 
epoch:  238
2022-07-07 15:04:51.131938: train loss : -0.8021
2022-07-07 15:04:55.619098: validation loss: -0.7698
2022-07-07 15:04:55.666667: Average global foreground Dice: [0.8116]
2022-07-07 15:04:55.688269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:04:56.271595: Suus1 maybe_update_lr lr: 0.005571
2022-07-07 15:04:56.274133: This epoch took 72.652542 s

2022-07-07 15:04:56.276220: 
epoch:  239
2022-07-07 15:06:03.694556: train loss : -0.8140
2022-07-07 15:06:08.228434: validation loss: -0.7617
2022-07-07 15:06:08.246562: Average global foreground Dice: [0.7943]
2022-07-07 15:06:08.277464: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:06:08.806353: Suus1 maybe_update_lr lr: 0.005551
2022-07-07 15:06:08.808573: This epoch took 72.530350 s

2022-07-07 15:06:08.810636: 
epoch:  240
2022-07-07 15:07:16.300916: train loss : -0.8084
2022-07-07 15:07:20.671366: validation loss: -0.7737
2022-07-07 15:07:20.682499: Average global foreground Dice: [0.8162]
2022-07-07 15:07:20.693739: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:07:21.275296: Suus1 maybe_update_lr lr: 0.005532
2022-07-07 15:07:21.297307: This epoch took 72.484762 s

2022-07-07 15:07:21.317605: 
epoch:  241
2022-07-07 15:08:28.654871: train loss : -0.8089
2022-07-07 15:08:33.170685: validation loss: -0.7405
2022-07-07 15:08:33.210229: Average global foreground Dice: [0.7831]
2022-07-07 15:08:33.246272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:08:33.924217: Suus1 maybe_update_lr lr: 0.005513
2022-07-07 15:08:33.926242: This epoch took 72.588345 s

2022-07-07 15:08:33.928193: 
epoch:  242
2022-07-07 15:09:41.367910: train loss : -0.8106
2022-07-07 15:09:45.872915: validation loss: -0.7583
2022-07-07 15:09:45.879909: Average global foreground Dice: [0.7961]
2022-07-07 15:09:45.893252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:09:46.470833: Suus1 maybe_update_lr lr: 0.005494
2022-07-07 15:09:46.475157: This epoch took 72.544989 s

2022-07-07 15:09:46.477499: 
epoch:  243
2022-07-07 15:10:53.851024: train loss : -0.8007
2022-07-07 15:10:58.233986: validation loss: -0.7689
2022-07-07 15:10:58.243927: Average global foreground Dice: [0.8081]
2022-07-07 15:10:58.264399: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:10:58.849556: Suus1 maybe_update_lr lr: 0.005474
2022-07-07 15:10:58.852352: This epoch took 72.372736 s

2022-07-07 15:10:58.857360: 
epoch:  244
2022-07-07 15:12:06.212431: train loss : -0.7957
2022-07-07 15:12:10.979007: validation loss: -0.7573
2022-07-07 15:12:10.982468: Average global foreground Dice: [0.7977]
2022-07-07 15:12:10.984835: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:12:11.648933: Suus1 maybe_update_lr lr: 0.005455
2022-07-07 15:12:11.651448: This epoch took 72.789588 s

2022-07-07 15:12:11.653558: 
epoch:  245
2022-07-07 15:13:19.026869: train loss : -0.8117
2022-07-07 15:13:23.508376: validation loss: -0.7775
2022-07-07 15:13:23.542763: Average global foreground Dice: [0.8251]
2022-07-07 15:13:23.575494: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:13:24.068778: Suus1 maybe_update_lr lr: 0.005436
2022-07-07 15:13:24.070977: This epoch took 72.415393 s

2022-07-07 15:13:24.072935: 
epoch:  246
2022-07-07 15:14:31.537628: train loss : -0.8137
2022-07-07 15:14:36.064539: validation loss: -0.7688
2022-07-07 15:14:36.083737: Average global foreground Dice: [0.8114]
2022-07-07 15:14:36.113390: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:14:36.649263: Suus1 maybe_update_lr lr: 0.005417
2022-07-07 15:14:36.651688: This epoch took 72.576628 s

2022-07-07 15:14:36.653658: 
epoch:  247
2022-07-07 15:15:43.952199: train loss : -0.8110
2022-07-07 15:15:48.404539: validation loss: -0.7523
2022-07-07 15:15:48.413895: Average global foreground Dice: [0.8033]
2022-07-07 15:15:48.443074: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:15:48.968881: Suus1 maybe_update_lr lr: 0.005397
2022-07-07 15:15:48.971244: This epoch took 72.315308 s

2022-07-07 15:15:48.973440: 
epoch:  248
2022-07-07 15:16:56.472929: train loss : -0.8134
2022-07-07 15:17:00.829108: validation loss: -0.7758
2022-07-07 15:17:00.834937: Average global foreground Dice: [0.8109]
2022-07-07 15:17:00.837072: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:17:01.312526: Suus1 maybe_update_lr lr: 0.005378
2022-07-07 15:17:01.314894: This epoch took 72.339087 s

2022-07-07 15:17:01.316957: 
epoch:  249
2022-07-07 15:18:08.699229: train loss : -0.8149
2022-07-07 15:18:13.156573: validation loss: -0.7865
2022-07-07 15:18:13.161271: Average global foreground Dice: [0.8257]
2022-07-07 15:18:13.163425: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:18:13.615771: Suus1 maybe_update_lr lr: 0.005359
2022-07-07 15:18:13.618041: saving scheduled checkpoint file...
2022-07-07 15:18:13.671037: saving checkpoint...
2022-07-07 15:18:14.799541: done, saving took 1.18 seconds
2022-07-07 15:18:14.816680: done
2022-07-07 15:18:14.819037: saving best epoch checkpoint...
2022-07-07 15:18:14.863137: saving checkpoint...
2022-07-07 15:18:15.873948: done, saving took 1.05 seconds
2022-07-07 15:18:15.891157: This epoch took 74.572280 s

2022-07-07 15:18:15.893412: 
epoch:  250
2022-07-07 15:19:23.361851: train loss : -0.8092
2022-07-07 15:19:27.822193: validation loss: -0.7524
2022-07-07 15:19:27.835857: Average global foreground Dice: [0.7992]
2022-07-07 15:19:27.858245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:19:28.453030: Suus1 maybe_update_lr lr: 0.00534
2022-07-07 15:19:28.455667: This epoch took 72.560120 s

2022-07-07 15:19:28.458102: 
epoch:  251
2022-07-07 15:20:35.882714: train loss : -0.7959
2022-07-07 15:20:40.220086: validation loss: -0.7601
2022-07-07 15:20:40.244782: Average global foreground Dice: [0.8003]
2022-07-07 15:20:40.252366: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:20:40.788237: Suus1 maybe_update_lr lr: 0.00532
2022-07-07 15:20:40.798862: This epoch took 72.338579 s

2022-07-07 15:20:40.811343: 
epoch:  252
2022-07-07 15:21:48.329278: train loss : -0.8083
2022-07-07 15:21:52.729120: validation loss: -0.7708
2022-07-07 15:21:52.736352: Average global foreground Dice: [0.8076]
2022-07-07 15:21:52.738623: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:21:53.494821: Suus1 maybe_update_lr lr: 0.005301
2022-07-07 15:21:53.497091: This epoch took 72.682553 s

2022-07-07 15:21:53.499355: 
epoch:  253
2022-07-07 15:23:00.982250: train loss : -0.8182
2022-07-07 15:23:05.503660: validation loss: -0.7613
2022-07-07 15:23:05.508959: Average global foreground Dice: [0.8002]
2022-07-07 15:23:05.511323: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:23:06.044492: Suus1 maybe_update_lr lr: 0.005282
2022-07-07 15:23:06.051567: This epoch took 72.550186 s

2022-07-07 15:23:06.054697: 
epoch:  254
2022-07-07 15:24:13.578611: train loss : -0.8111
2022-07-07 15:24:17.908967: validation loss: -0.7776
2022-07-07 15:24:17.914528: Average global foreground Dice: [0.8206]
2022-07-07 15:24:17.916841: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:24:18.413697: Suus1 maybe_update_lr lr: 0.005262
2022-07-07 15:24:18.416175: saving best epoch checkpoint...
2022-07-07 15:24:18.463616: saving checkpoint...
2022-07-07 15:24:19.501585: done, saving took 1.08 seconds
2022-07-07 15:24:19.516583: This epoch took 73.455064 s

2022-07-07 15:24:19.518851: 
epoch:  255
2022-07-07 15:25:26.957057: train loss : -0.8156
2022-07-07 15:25:31.417212: validation loss: -0.7952
2022-07-07 15:25:31.443514: Average global foreground Dice: [0.833]
2022-07-07 15:25:31.462667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:25:32.015355: Suus1 maybe_update_lr lr: 0.005243
2022-07-07 15:25:32.017678: saving best epoch checkpoint...
2022-07-07 15:25:32.063533: saving checkpoint...
2022-07-07 15:25:33.046257: done, saving took 1.03 seconds
2022-07-07 15:25:33.061444: This epoch took 73.540404 s

2022-07-07 15:25:33.063438: 
epoch:  256
2022-07-07 15:26:40.402269: train loss : -0.8183
2022-07-07 15:26:45.022816: validation loss: -0.7756
2022-07-07 15:26:45.044641: Average global foreground Dice: [0.8088]
2022-07-07 15:26:45.051784: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:26:45.601032: Suus1 maybe_update_lr lr: 0.005224
2022-07-07 15:26:45.616284: This epoch took 72.550771 s

2022-07-07 15:26:45.638231: 
epoch:  257
2022-07-07 15:27:53.099000: train loss : -0.8192
2022-07-07 15:27:57.585158: validation loss: -0.7729
2022-07-07 15:27:57.592195: Average global foreground Dice: [0.8117]
2022-07-07 15:27:57.594421: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:27:58.209519: Suus1 maybe_update_lr lr: 0.005204
2022-07-07 15:27:58.211831: saving best epoch checkpoint...
2022-07-07 15:27:58.259971: saving checkpoint...
2022-07-07 15:27:59.249835: done, saving took 1.04 seconds
2022-07-07 15:27:59.263777: This epoch took 73.603529 s

2022-07-07 15:27:59.265933: 
epoch:  258
2022-07-07 15:29:06.695369: train loss : -0.8035
2022-07-07 15:29:11.293823: validation loss: -0.7679
2022-07-07 15:29:11.311328: Average global foreground Dice: [0.809]
2022-07-07 15:29:11.318250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:29:11.825168: Suus1 maybe_update_lr lr: 0.005185
2022-07-07 15:29:11.827467: This epoch took 72.559354 s

2022-07-07 15:29:11.829566: 
epoch:  259
2022-07-07 15:30:19.268506: train loss : -0.8092
2022-07-07 15:30:23.647808: validation loss: -0.7758
2022-07-07 15:30:23.655094: Average global foreground Dice: [0.8149]
2022-07-07 15:30:23.661286: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:30:24.188382: Suus1 maybe_update_lr lr: 0.005166
2022-07-07 15:30:24.190850: saving best epoch checkpoint...
2022-07-07 15:30:24.235789: saving checkpoint...
2022-07-07 15:30:25.305669: done, saving took 1.11 seconds
2022-07-07 15:30:25.320614: This epoch took 73.489074 s

2022-07-07 15:30:25.322996: 
epoch:  260
2022-07-07 15:31:32.699284: train loss : -0.8229
2022-07-07 15:31:37.069409: validation loss: -0.7670
2022-07-07 15:31:37.075208: Average global foreground Dice: [0.8066]
2022-07-07 15:31:37.100266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:31:37.550485: Suus1 maybe_update_lr lr: 0.005146
2022-07-07 15:31:37.566962: This epoch took 72.241832 s

2022-07-07 15:31:37.588272: 
epoch:  261
2022-07-07 15:32:45.086353: train loss : -0.8106
2022-07-07 15:32:49.593021: validation loss: -0.7825
2022-07-07 15:32:49.617942: Average global foreground Dice: [0.8213]
2022-07-07 15:32:49.639101: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:32:50.135567: Suus1 maybe_update_lr lr: 0.005127
2022-07-07 15:32:50.137248: saving best epoch checkpoint...
2022-07-07 15:32:50.170901: saving checkpoint...
2022-07-07 15:32:51.131528: done, saving took 0.99 seconds
2022-07-07 15:32:51.145063: This epoch took 73.548526 s

2022-07-07 15:32:51.147400: 
epoch:  262
2022-07-07 15:33:58.527159: train loss : -0.8188
2022-07-07 15:34:02.980662: validation loss: -0.7811
2022-07-07 15:34:02.984266: Average global foreground Dice: [0.8191]
2022-07-07 15:34:02.986740: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:34:03.475327: Suus1 maybe_update_lr lr: 0.005107
2022-07-07 15:34:03.477541: saving best epoch checkpoint...
2022-07-07 15:34:03.510146: saving checkpoint...
2022-07-07 15:34:04.452777: done, saving took 0.97 seconds
2022-07-07 15:34:04.466804: This epoch took 73.317085 s

2022-07-07 15:34:04.468906: 
epoch:  263
2022-07-07 15:35:11.923303: train loss : -0.8277
2022-07-07 15:35:16.455639: validation loss: -0.7638
2022-07-07 15:35:16.485887: Average global foreground Dice: [0.8055]
2022-07-07 15:35:16.495635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:35:17.084355: Suus1 maybe_update_lr lr: 0.005088
2022-07-07 15:35:17.086862: This epoch took 72.615798 s

2022-07-07 15:35:17.088937: 
epoch:  264
2022-07-07 15:36:24.500062: train loss : -0.8159
2022-07-07 15:36:29.018142: validation loss: -0.7576
2022-07-07 15:36:29.027227: Average global foreground Dice: [0.8034]
2022-07-07 15:36:29.044538: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:36:29.565361: Suus1 maybe_update_lr lr: 0.005069
2022-07-07 15:36:29.567746: This epoch took 72.476830 s

2022-07-07 15:36:29.569666: 
epoch:  265
2022-07-07 15:37:37.132624: train loss : -0.8170
2022-07-07 15:37:41.583961: validation loss: -0.7791
2022-07-07 15:37:41.603619: Average global foreground Dice: [0.8148]
2022-07-07 15:37:41.613136: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:37:42.170403: Suus1 maybe_update_lr lr: 0.005049
2022-07-07 15:37:42.192324: This epoch took 72.620703 s

2022-07-07 15:37:42.203321: 
epoch:  266
2022-07-07 15:38:49.606506: train loss : -0.8230
2022-07-07 15:38:54.128670: validation loss: -0.7595
2022-07-07 15:38:54.145615: Average global foreground Dice: [0.8039]
2022-07-07 15:38:54.153667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:38:54.620282: Suus1 maybe_update_lr lr: 0.00503
2022-07-07 15:38:54.622661: This epoch took 72.406396 s

2022-07-07 15:38:54.624709: 
epoch:  267
2022-07-07 15:40:01.943101: train loss : -0.8346
2022-07-07 15:40:06.320767: validation loss: -0.7727
2022-07-07 15:40:06.348799: Average global foreground Dice: [0.8173]
2022-07-07 15:40:06.362354: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:40:06.900675: Suus1 maybe_update_lr lr: 0.00501
2022-07-07 15:40:06.903101: This epoch took 72.276421 s

2022-07-07 15:40:06.905208: 
epoch:  268
2022-07-07 15:41:14.332787: train loss : -0.8125
2022-07-07 15:41:18.809231: validation loss: -0.7539
2022-07-07 15:41:18.820728: Average global foreground Dice: [0.797]
2022-07-07 15:41:18.832794: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:41:19.321368: Suus1 maybe_update_lr lr: 0.004991
2022-07-07 15:41:19.323514: This epoch took 72.416201 s

2022-07-07 15:41:19.325603: 
epoch:  269
2022-07-07 15:42:26.867261: train loss : -0.8190
2022-07-07 15:42:31.360824: validation loss: -0.7652
2022-07-07 15:42:31.370043: Average global foreground Dice: [0.8033]
2022-07-07 15:42:31.394279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:42:31.930134: Suus1 maybe_update_lr lr: 0.004971
2022-07-07 15:42:31.934201: This epoch took 72.606561 s

2022-07-07 15:42:31.936356: 
epoch:  270
2022-07-07 15:43:39.375249: train loss : -0.8215
2022-07-07 15:43:44.102703: validation loss: -0.7634
2022-07-07 15:43:44.110057: Average global foreground Dice: [0.8036]
2022-07-07 15:43:44.126261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:43:44.617264: Suus1 maybe_update_lr lr: 0.004952
2022-07-07 15:43:44.619627: This epoch took 72.681033 s

2022-07-07 15:43:44.621572: 
epoch:  271
2022-07-07 15:44:52.031487: train loss : -0.8147
2022-07-07 15:44:56.731275: validation loss: -0.7813
2022-07-07 15:44:56.762824: Average global foreground Dice: [0.8205]
2022-07-07 15:44:56.790257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:44:57.295016: Suus1 maybe_update_lr lr: 0.004933
2022-07-07 15:44:57.297416: This epoch took 72.673864 s

2022-07-07 15:44:57.299511: 
epoch:  272
2022-07-07 15:46:04.653205: train loss : -0.8132
2022-07-07 15:46:09.074111: validation loss: -0.7811
2022-07-07 15:46:09.083051: Average global foreground Dice: [0.8186]
2022-07-07 15:46:09.096905: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:46:09.621892: Suus1 maybe_update_lr lr: 0.004913
2022-07-07 15:46:09.647435: This epoch took 72.345859 s

2022-07-07 15:46:09.672243: 
epoch:  273
2022-07-07 15:47:17.212439: train loss : -0.8255
2022-07-07 15:47:21.717912: validation loss: -0.7734
2022-07-07 15:47:21.728727: Average global foreground Dice: [0.8211]
2022-07-07 15:47:21.741396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:47:22.274284: Suus1 maybe_update_lr lr: 0.004894
2022-07-07 15:47:22.277388: This epoch took 72.575121 s

2022-07-07 15:47:22.279383: 
epoch:  274
2022-07-07 15:48:29.826830: train loss : -0.8153
2022-07-07 15:48:34.274028: validation loss: -0.7801
2022-07-07 15:48:34.280297: Average global foreground Dice: [0.8222]
2022-07-07 15:48:34.285835: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:48:34.849389: Suus1 maybe_update_lr lr: 0.004874
2022-07-07 15:48:34.852101: saving best epoch checkpoint...
2022-07-07 15:48:34.906665: saving checkpoint...
2022-07-07 15:48:35.873018: done, saving took 1.02 seconds
2022-07-07 15:48:35.888555: This epoch took 73.607323 s

2022-07-07 15:48:35.890752: 
epoch:  275
2022-07-07 15:49:43.383016: train loss : -0.8152
2022-07-07 15:49:47.943575: validation loss: -0.7770
2022-07-07 15:49:47.948842: Average global foreground Dice: [0.8132]
2022-07-07 15:49:47.968321: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:49:48.567536: Suus1 maybe_update_lr lr: 0.004855
2022-07-07 15:49:48.570120: saving best epoch checkpoint...
2022-07-07 15:49:48.625324: saving checkpoint...
2022-07-07 15:49:49.624851: done, saving took 1.05 seconds
2022-07-07 15:49:49.639902: This epoch took 73.747090 s

2022-07-07 15:49:49.642087: 
epoch:  276
2022-07-07 15:50:56.912390: train loss : -0.8248
2022-07-07 15:51:01.373819: validation loss: -0.7676
2022-07-07 15:51:01.418692: Average global foreground Dice: [0.8086]
2022-07-07 15:51:01.440292: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:51:01.987970: Suus1 maybe_update_lr lr: 0.004835
2022-07-07 15:51:01.990420: This epoch took 72.346306 s

2022-07-07 15:51:01.992473: 
epoch:  277
2022-07-07 15:52:09.272933: train loss : -0.8193
2022-07-07 15:52:13.725979: validation loss: -0.7711
2022-07-07 15:52:13.749787: Average global foreground Dice: [0.8168]
2022-07-07 15:52:13.752765: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:52:14.335347: Suus1 maybe_update_lr lr: 0.004816
2022-07-07 15:52:14.337690: saving best epoch checkpoint...
2022-07-07 15:52:14.386644: saving checkpoint...
2022-07-07 15:52:15.487027: done, saving took 1.15 seconds
2022-07-07 15:52:15.503037: This epoch took 73.508420 s

2022-07-07 15:52:15.505890: 
epoch:  278
2022-07-07 15:53:22.871098: train loss : -0.8239
2022-07-07 15:53:27.429350: validation loss: -0.7660
2022-07-07 15:53:27.439873: Average global foreground Dice: [0.8088]
2022-07-07 15:53:27.444598: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:53:27.955921: Suus1 maybe_update_lr lr: 0.004796
2022-07-07 15:53:27.962611: This epoch took 72.454364 s

2022-07-07 15:53:27.972255: 
epoch:  279
2022-07-07 15:54:35.364891: train loss : -0.8109
2022-07-07 15:54:39.747459: validation loss: -0.7625
2022-07-07 15:54:39.752295: Average global foreground Dice: [0.8029]
2022-07-07 15:54:39.755330: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:54:40.243917: Suus1 maybe_update_lr lr: 0.004776
2022-07-07 15:54:40.248825: This epoch took 72.266606 s

2022-07-07 15:54:40.253421: 
epoch:  280
2022-07-07 15:55:47.686831: train loss : -0.8228
2022-07-07 15:55:52.144491: validation loss: -0.7700
2022-07-07 15:55:52.155959: Average global foreground Dice: [0.8069]
2022-07-07 15:55:52.169821: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:55:52.711660: Suus1 maybe_update_lr lr: 0.004757
2022-07-07 15:55:52.714075: This epoch took 72.448779 s

2022-07-07 15:55:52.715972: 
epoch:  281
2022-07-07 15:57:00.074018: train loss : -0.8125
2022-07-07 15:57:04.459748: validation loss: -0.7482
2022-07-07 15:57:04.467786: Average global foreground Dice: [0.779]
2022-07-07 15:57:04.472054: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:57:04.927352: Suus1 maybe_update_lr lr: 0.004737
2022-07-07 15:57:04.929238: This epoch took 72.211201 s

2022-07-07 15:57:04.931144: 
epoch:  282
2022-07-07 15:58:12.259848: train loss : -0.8224
2022-07-07 15:58:17.318425: validation loss: -0.7735
2022-07-07 15:58:17.339715: Average global foreground Dice: [0.817]
2022-07-07 15:58:17.343753: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:58:17.959156: Suus1 maybe_update_lr lr: 0.004718
2022-07-07 15:58:17.962810: This epoch took 73.029146 s

2022-07-07 15:58:17.967364: 
epoch:  283
2022-07-07 15:59:25.268374: train loss : -0.8147
2022-07-07 15:59:30.163487: validation loss: -0.7778
2022-07-07 15:59:30.180164: Average global foreground Dice: [0.8192]
2022-07-07 15:59:30.195270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 15:59:30.732540: Suus1 maybe_update_lr lr: 0.004698
2022-07-07 15:59:30.735922: This epoch took 72.766327 s

2022-07-07 15:59:30.753153: 
epoch:  284
2022-07-07 16:00:38.241014: train loss : -0.8220
2022-07-07 16:00:42.613663: validation loss: -0.7620
2022-07-07 16:00:42.616204: Average global foreground Dice: [0.8027]
2022-07-07 16:00:42.618358: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:00:43.079493: Suus1 maybe_update_lr lr: 0.004679
2022-07-07 16:00:43.081693: This epoch took 72.320953 s

2022-07-07 16:00:43.083688: 
epoch:  285
2022-07-07 16:01:50.469538: train loss : -0.8232
2022-07-07 16:01:54.850496: validation loss: -0.7861
2022-07-07 16:01:54.862018: Average global foreground Dice: [0.8209]
2022-07-07 16:01:54.888128: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:01:55.405794: Suus1 maybe_update_lr lr: 0.004659
2022-07-07 16:01:55.408052: This epoch took 72.322391 s

2022-07-07 16:01:55.409940: 
epoch:  286
2022-07-07 16:03:02.884593: train loss : -0.8253
2022-07-07 16:03:07.261202: validation loss: -0.7588
2022-07-07 16:03:07.304101: Average global foreground Dice: [0.8071]
2022-07-07 16:03:07.314619: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:03:08.000612: Suus1 maybe_update_lr lr: 0.004639
2022-07-07 16:03:08.003136: This epoch took 72.591273 s

2022-07-07 16:03:08.005368: 
epoch:  287
2022-07-07 16:04:15.444450: train loss : -0.8200
2022-07-07 16:04:19.945816: validation loss: -0.7768
2022-07-07 16:04:19.950930: Average global foreground Dice: [0.8186]
2022-07-07 16:04:19.953512: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:04:20.391103: Suus1 maybe_update_lr lr: 0.00462
2022-07-07 16:04:20.402806: This epoch took 72.395184 s

2022-07-07 16:04:20.405057: 
epoch:  288
2022-07-07 16:05:27.755046: train loss : -0.8248
2022-07-07 16:05:32.200460: validation loss: -0.7632
2022-07-07 16:05:32.204263: Average global foreground Dice: [0.8089]
2022-07-07 16:05:32.211078: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:05:32.816441: Suus1 maybe_update_lr lr: 0.0046
2022-07-07 16:05:32.819355: This epoch took 72.412172 s

2022-07-07 16:05:32.821443: 
epoch:  289
2022-07-07 16:06:40.545052: train loss : -0.8184
2022-07-07 16:06:45.086460: validation loss: -0.7301
2022-07-07 16:06:45.101155: Average global foreground Dice: [0.7777]
2022-07-07 16:06:45.119206: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:06:45.782241: Suus1 maybe_update_lr lr: 0.004581
2022-07-07 16:06:45.802304: This epoch took 72.978681 s

2022-07-07 16:06:45.835258: 
epoch:  290
2022-07-07 16:07:53.267853: train loss : -0.7952
2022-07-07 16:07:57.695806: validation loss: -0.7601
2022-07-07 16:07:57.706800: Average global foreground Dice: [0.8077]
2022-07-07 16:07:57.711635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:07:58.246052: Suus1 maybe_update_lr lr: 0.004561
2022-07-07 16:07:58.248621: This epoch took 72.394267 s

2022-07-07 16:07:58.250678: 
epoch:  291
2022-07-07 16:09:05.719884: train loss : -0.8015
2022-07-07 16:09:10.082192: validation loss: -0.7660
2022-07-07 16:09:10.087150: Average global foreground Dice: [0.8052]
2022-07-07 16:09:10.114087: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:09:10.685314: Suus1 maybe_update_lr lr: 0.004541
2022-07-07 16:09:10.715304: This epoch took 72.462622 s

2022-07-07 16:09:10.748269: 
epoch:  292
2022-07-07 16:10:18.247091: train loss : -0.8034
2022-07-07 16:10:22.788616: validation loss: -0.7407
2022-07-07 16:10:22.829947: Average global foreground Dice: [0.7955]
2022-07-07 16:10:22.840422: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:10:23.321826: Suus1 maybe_update_lr lr: 0.004522
2022-07-07 16:10:23.325271: This epoch took 72.568628 s

2022-07-07 16:10:23.328101: 
epoch:  293
2022-07-07 16:11:30.841915: train loss : -0.8130
2022-07-07 16:11:35.205519: validation loss: -0.7760
2022-07-07 16:11:35.228631: Average global foreground Dice: [0.8057]
2022-07-07 16:11:35.230936: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:11:35.795930: Suus1 maybe_update_lr lr: 0.004502
2022-07-07 16:11:35.798417: This epoch took 72.445368 s

2022-07-07 16:11:35.800651: 
epoch:  294
2022-07-07 16:12:43.221982: train loss : -0.8281
2022-07-07 16:12:47.692542: validation loss: -0.7837
2022-07-07 16:12:47.713424: Average global foreground Dice: [0.8225]
2022-07-07 16:12:47.724735: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:12:48.322865: Suus1 maybe_update_lr lr: 0.004482
2022-07-07 16:12:48.325449: This epoch took 72.522837 s

2022-07-07 16:12:48.327554: 
epoch:  295
2022-07-07 16:13:55.850730: train loss : -0.8269
2022-07-07 16:14:00.334888: validation loss: -0.7447
2022-07-07 16:14:00.350206: Average global foreground Dice: [0.7965]
2022-07-07 16:14:00.361473: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:14:00.930767: Suus1 maybe_update_lr lr: 0.004463
2022-07-07 16:14:00.946773: This epoch took 72.617254 s

2022-07-07 16:14:00.969260: 
epoch:  296
2022-07-07 16:15:08.418010: train loss : -0.8093
2022-07-07 16:15:13.053337: validation loss: -0.7378
2022-07-07 16:15:13.067058: Average global foreground Dice: [0.7828]
2022-07-07 16:15:13.081845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:15:13.649997: Suus1 maybe_update_lr lr: 0.004443
2022-07-07 16:15:13.652552: This epoch took 72.655276 s

2022-07-07 16:15:13.654664: 
epoch:  297
2022-07-07 16:16:21.150012: train loss : -0.8094
2022-07-07 16:16:25.605230: validation loss: -0.7500
2022-07-07 16:16:25.619710: Average global foreground Dice: [0.8016]
2022-07-07 16:16:25.631252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:16:26.223268: Suus1 maybe_update_lr lr: 0.004423
2022-07-07 16:16:26.225926: This epoch took 72.569116 s

2022-07-07 16:16:26.228243: 
epoch:  298
2022-07-07 16:17:33.700584: train loss : -0.8060
2022-07-07 16:17:38.194981: validation loss: -0.7739
2022-07-07 16:17:38.217762: Average global foreground Dice: [0.8127]
2022-07-07 16:17:38.238759: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:17:38.895288: Suus1 maybe_update_lr lr: 0.004404
2022-07-07 16:17:38.897250: This epoch took 72.666735 s

2022-07-07 16:17:38.899154: 
epoch:  299
2022-07-07 16:18:46.340311: train loss : -0.8186
2022-07-07 16:18:50.982773: validation loss: -0.7727
2022-07-07 16:18:50.989732: Average global foreground Dice: [0.8115]
2022-07-07 16:18:50.999585: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:18:51.545940: Suus1 maybe_update_lr lr: 0.004384
2022-07-07 16:18:51.548308: saving scheduled checkpoint file...
2022-07-07 16:18:51.586243: saving checkpoint...
2022-07-07 16:18:52.615580: done, saving took 1.06 seconds
2022-07-07 16:18:52.630439: done
2022-07-07 16:18:52.632885: This epoch took 73.731800 s

2022-07-07 16:18:52.635185: 
epoch:  300
2022-07-07 16:20:00.021431: train loss : -0.8256
2022-07-07 16:20:04.521327: validation loss: -0.7703
2022-07-07 16:20:04.532122: Average global foreground Dice: [0.809]
2022-07-07 16:20:04.541329: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:20:05.213061: Suus1 maybe_update_lr lr: 0.004364
2022-07-07 16:20:05.215578: This epoch took 72.577857 s

2022-07-07 16:20:05.217708: 
epoch:  301
2022-07-07 16:21:12.726888: train loss : -0.8308
2022-07-07 16:21:17.430218: validation loss: -0.7728
2022-07-07 16:21:17.448414: Average global foreground Dice: [0.8131]
2022-07-07 16:21:17.476729: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:21:18.116270: Suus1 maybe_update_lr lr: 0.004344
2022-07-07 16:21:18.118606: This epoch took 72.898874 s

2022-07-07 16:21:18.120619: 
epoch:  302
2022-07-07 16:22:25.522864: train loss : -0.8285
2022-07-07 16:22:30.140932: validation loss: -0.7982
2022-07-07 16:22:30.145409: Average global foreground Dice: [0.8358]
2022-07-07 16:22:30.147756: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:22:30.647821: Suus1 maybe_update_lr lr: 0.004325
2022-07-07 16:22:30.667305: This epoch took 72.543749 s

2022-07-07 16:22:30.690251: 
epoch:  303
2022-07-07 16:23:38.164600: train loss : -0.8310
2022-07-07 16:23:42.569103: validation loss: -0.7773
2022-07-07 16:23:42.607847: Average global foreground Dice: [0.814]
2022-07-07 16:23:42.622118: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:23:43.090469: Suus1 maybe_update_lr lr: 0.004305
2022-07-07 16:23:43.092847: This epoch took 72.382595 s

2022-07-07 16:23:43.095040: 
epoch:  304
2022-07-07 16:24:50.605373: train loss : -0.8330
2022-07-07 16:24:55.093396: validation loss: -0.7719
2022-07-07 16:24:55.110720: Average global foreground Dice: [0.8105]
2022-07-07 16:24:55.158270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:24:55.771455: Suus1 maybe_update_lr lr: 0.004285
2022-07-07 16:24:55.773617: This epoch took 72.676178 s

2022-07-07 16:24:55.775459: 
epoch:  305
2022-07-07 16:26:03.195733: train loss : -0.8375
2022-07-07 16:26:07.735853: validation loss: -0.7806
2022-07-07 16:26:07.760705: Average global foreground Dice: [0.8154]
2022-07-07 16:26:07.765030: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:26:08.371588: Suus1 maybe_update_lr lr: 0.004265
2022-07-07 16:26:08.402074: This epoch took 72.624653 s

2022-07-07 16:26:08.405204: 
epoch:  306
2022-07-07 16:27:15.884931: train loss : -0.8346
2022-07-07 16:27:20.365524: validation loss: -0.7726
2022-07-07 16:27:20.371220: Average global foreground Dice: [0.8187]
2022-07-07 16:27:20.373526: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:27:21.097908: Suus1 maybe_update_lr lr: 0.004245
2022-07-07 16:27:21.123452: This epoch took 72.697161 s

2022-07-07 16:27:21.137105: 
epoch:  307
2022-07-07 16:28:28.597471: train loss : -0.8380
2022-07-07 16:28:33.058585: validation loss: -0.7712
2022-07-07 16:28:33.063193: Average global foreground Dice: [0.8119]
2022-07-07 16:28:33.069669: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:28:33.631857: Suus1 maybe_update_lr lr: 0.004226
2022-07-07 16:28:33.634166: This epoch took 72.477900 s

2022-07-07 16:28:33.636410: 
epoch:  308
2022-07-07 16:29:41.054706: train loss : -0.8310
2022-07-07 16:29:45.618057: validation loss: -0.7545
2022-07-07 16:29:45.631155: Average global foreground Dice: [0.7971]
2022-07-07 16:29:45.643074: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:29:46.247940: Suus1 maybe_update_lr lr: 0.004206
2022-07-07 16:29:46.269686: This epoch took 72.631011 s

2022-07-07 16:29:46.285371: 
epoch:  309
2022-07-07 16:30:53.801028: train loss : -0.8321
2022-07-07 16:30:58.185747: validation loss: -0.7616
2022-07-07 16:30:58.192629: Average global foreground Dice: [0.8062]
2022-07-07 16:30:58.211823: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:30:58.759261: Suus1 maybe_update_lr lr: 0.004186
2022-07-07 16:30:58.761645: This epoch took 72.462392 s

2022-07-07 16:30:58.763786: 
epoch:  310
2022-07-07 16:32:06.241042: train loss : -0.8326
2022-07-07 16:32:10.770515: validation loss: -0.7852
2022-07-07 16:32:10.773971: Average global foreground Dice: [0.821]
2022-07-07 16:32:10.786820: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:32:11.298306: Suus1 maybe_update_lr lr: 0.004166
2022-07-07 16:32:11.305905: This epoch took 72.539815 s

2022-07-07 16:32:11.312404: 
epoch:  311
2022-07-07 16:33:18.782876: train loss : -0.8426
2022-07-07 16:33:23.186971: validation loss: -0.7614
2022-07-07 16:33:23.204725: Average global foreground Dice: [0.808]
2022-07-07 16:33:23.208696: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:33:23.744447: Suus1 maybe_update_lr lr: 0.004146
2022-07-07 16:33:23.764768: This epoch took 72.446745 s

2022-07-07 16:33:23.775021: 
epoch:  312
2022-07-07 16:34:31.175923: train loss : -0.8429
2022-07-07 16:34:35.645911: validation loss: -0.7746
2022-07-07 16:34:35.650736: Average global foreground Dice: [0.8107]
2022-07-07 16:34:35.657420: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:34:36.250249: Suus1 maybe_update_lr lr: 0.004127
2022-07-07 16:34:36.252830: This epoch took 72.464689 s

2022-07-07 16:34:36.255104: 
epoch:  313
2022-07-07 16:35:43.653350: train loss : -0.8459
2022-07-07 16:35:48.624164: validation loss: -0.7729
2022-07-07 16:35:48.657754: Average global foreground Dice: [0.8154]
2022-07-07 16:35:48.679271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:35:49.239039: Suus1 maybe_update_lr lr: 0.004107
2022-07-07 16:35:49.256535: This epoch took 72.999338 s

2022-07-07 16:35:49.273258: 
epoch:  314
2022-07-07 16:36:56.901120: train loss : -0.8362
2022-07-07 16:37:01.563187: validation loss: -0.7588
2022-07-07 16:37:01.567163: Average global foreground Dice: [0.8001]
2022-07-07 16:37:01.595272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:37:02.155525: Suus1 maybe_update_lr lr: 0.004087
2022-07-07 16:37:02.192997: This epoch took 72.901735 s

2022-07-07 16:37:02.214247: 
epoch:  315
2022-07-07 16:38:09.834771: train loss : -0.8383
2022-07-07 16:38:14.496159: validation loss: -0.7847
2022-07-07 16:38:14.511932: Average global foreground Dice: [0.8218]
2022-07-07 16:38:14.548890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:38:15.026237: Suus1 maybe_update_lr lr: 0.004067
2022-07-07 16:38:15.028931: This epoch took 72.788501 s

2022-07-07 16:38:15.031053: 
epoch:  316
2022-07-07 16:39:22.881202: train loss : -0.8365
2022-07-07 16:39:27.216689: validation loss: -0.7657
2022-07-07 16:39:27.223861: Average global foreground Dice: [0.8068]
2022-07-07 16:39:27.238899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:39:27.861693: Suus1 maybe_update_lr lr: 0.004047
2022-07-07 16:39:27.872979: This epoch took 72.839961 s

2022-07-07 16:39:27.900400: 
epoch:  317
2022-07-07 16:40:35.427981: train loss : -0.8402
2022-07-07 16:40:40.669202: validation loss: -0.7815
2022-07-07 16:40:40.719397: Average global foreground Dice: [0.8174]
2022-07-07 16:40:40.752814: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:40:41.393501: Suus1 maybe_update_lr lr: 0.004027
2022-07-07 16:40:41.421633: This epoch took 73.479251 s

2022-07-07 16:40:41.453251: 
epoch:  318
2022-07-07 16:41:49.281573: train loss : -0.8418
2022-07-07 16:41:53.949728: validation loss: -0.7787
2022-07-07 16:41:53.971451: Average global foreground Dice: [0.8149]
2022-07-07 16:41:53.983902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:41:54.626903: Suus1 maybe_update_lr lr: 0.004007
2022-07-07 16:41:54.654371: This epoch took 73.167052 s

2022-07-07 16:41:54.667819: 
epoch:  319
2022-07-07 16:43:03.042875: train loss : -0.8459
2022-07-07 16:43:07.900551: validation loss: -0.7831
2022-07-07 16:43:07.915698: Average global foreground Dice: [0.8287]
2022-07-07 16:43:07.932708: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:43:08.518376: Suus1 maybe_update_lr lr: 0.003987
2022-07-07 16:43:08.521470: saving best epoch checkpoint...
2022-07-07 16:43:08.593044: saving checkpoint...
2022-07-07 16:43:10.193607: done, saving took 1.67 seconds
2022-07-07 16:43:10.209038: This epoch took 75.518412 s

2022-07-07 16:43:10.211114: 
epoch:  320
2022-07-07 16:44:18.160527: train loss : -0.8320
2022-07-07 16:44:22.765460: validation loss: -0.7585
2022-07-07 16:44:22.792394: Average global foreground Dice: [0.8018]
2022-07-07 16:44:22.794522: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:44:23.437329: Suus1 maybe_update_lr lr: 0.003967
2022-07-07 16:44:23.440461: This epoch took 73.227289 s

2022-07-07 16:44:23.457701: 
epoch:  321
2022-07-07 16:45:31.799906: train loss : -0.8372
2022-07-07 16:45:36.537749: validation loss: -0.7689
2022-07-07 16:45:36.571811: Average global foreground Dice: [0.8148]
2022-07-07 16:45:36.603522: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:45:37.256555: Suus1 maybe_update_lr lr: 0.003947
2022-07-07 16:45:37.276306: This epoch took 73.802885 s

2022-07-07 16:45:37.291273: 
epoch:  322
2022-07-07 16:46:45.318542: train loss : -0.8361
2022-07-07 16:46:50.167175: validation loss: -0.7607
2022-07-07 16:46:50.188048: Average global foreground Dice: [0.8034]
2022-07-07 16:46:50.196167: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:46:50.904659: Suus1 maybe_update_lr lr: 0.003927
2022-07-07 16:46:50.926340: This epoch took 73.588071 s

2022-07-07 16:46:50.948361: 
epoch:  323
2022-07-07 16:47:59.100661: train loss : -0.8430
2022-07-07 16:48:03.934638: validation loss: -0.7784
2022-07-07 16:48:03.943611: Average global foreground Dice: [0.8177]
2022-07-07 16:48:03.946026: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:48:04.429797: Suus1 maybe_update_lr lr: 0.003907
2022-07-07 16:48:04.438302: This epoch took 73.460958 s

2022-07-07 16:48:04.443599: 
epoch:  324
2022-07-07 16:49:12.657696: train loss : -0.8413
2022-07-07 16:49:17.657438: validation loss: -0.7644
2022-07-07 16:49:17.688785: Average global foreground Dice: [0.805]
2022-07-07 16:49:17.700288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:49:18.368891: Suus1 maybe_update_lr lr: 0.003887
2022-07-07 16:49:18.373053: This epoch took 73.927138 s

2022-07-07 16:49:18.377755: 
epoch:  325
2022-07-07 16:50:26.335073: train loss : -0.8412
2022-07-07 16:50:31.253670: validation loss: -0.7704
2022-07-07 16:50:31.258146: Average global foreground Dice: [0.8094]
2022-07-07 16:50:31.265098: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:50:32.068928: Suus1 maybe_update_lr lr: 0.003867
2022-07-07 16:50:32.084574: This epoch took 73.700440 s

2022-07-07 16:50:32.088404: 
epoch:  326
2022-07-07 16:51:40.348208: train loss : -0.8461
2022-07-07 16:51:45.065008: validation loss: -0.7756
2022-07-07 16:51:45.082100: Average global foreground Dice: [0.8154]
2022-07-07 16:51:45.096435: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:51:45.687657: Suus1 maybe_update_lr lr: 0.003847
2022-07-07 16:51:45.722391: This epoch took 73.608923 s

2022-07-07 16:51:45.750075: 
epoch:  327
2022-07-07 16:52:54.030778: train loss : -0.8318
2022-07-07 16:52:58.781083: validation loss: -0.7438
2022-07-07 16:52:58.803777: Average global foreground Dice: [0.7883]
2022-07-07 16:52:58.840296: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:52:59.466516: Suus1 maybe_update_lr lr: 0.003827
2022-07-07 16:52:59.514508: This epoch took 73.734870 s

2022-07-07 16:52:59.535275: 
epoch:  328
2022-07-07 16:54:07.561375: train loss : -0.8244
2022-07-07 16:54:12.204654: validation loss: -0.7582
2022-07-07 16:54:12.245399: Average global foreground Dice: [0.7997]
2022-07-07 16:54:12.275493: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:54:12.802522: Suus1 maybe_update_lr lr: 0.003807
2022-07-07 16:54:12.839996: This epoch took 73.274583 s

2022-07-07 16:54:12.854317: 
epoch:  329
2022-07-07 16:55:21.057102: train loss : -0.8383
2022-07-07 16:55:25.726128: validation loss: -0.7676
2022-07-07 16:55:25.753774: Average global foreground Dice: [0.8077]
2022-07-07 16:55:25.789274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:55:26.459909: Suus1 maybe_update_lr lr: 0.003787
2022-07-07 16:55:26.465754: This epoch took 73.605544 s

2022-07-07 16:55:26.480282: 
epoch:  330
2022-07-07 16:56:34.623147: train loss : -0.8303
2022-07-07 16:56:39.458416: validation loss: -0.7969
2022-07-07 16:56:39.482275: Average global foreground Dice: [0.832]
2022-07-07 16:56:39.503237: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:56:40.024206: Suus1 maybe_update_lr lr: 0.003767
2022-07-07 16:56:40.049625: This epoch took 73.557683 s

2022-07-07 16:56:40.082253: 
epoch:  331
2022-07-07 16:57:48.309056: train loss : -0.8409
2022-07-07 16:57:53.238405: validation loss: -0.7690
2022-07-07 16:57:53.265542: Average global foreground Dice: [0.8123]
2022-07-07 16:57:53.271098: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:57:53.868048: Suus1 maybe_update_lr lr: 0.003747
2022-07-07 16:57:53.897326: This epoch took 73.789555 s

2022-07-07 16:57:53.928859: 
epoch:  332
2022-07-07 16:59:02.286954: train loss : -0.8479
2022-07-07 16:59:07.005763: validation loss: -0.7663
2022-07-07 16:59:07.010050: Average global foreground Dice: [0.8068]
2022-07-07 16:59:07.041586: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 16:59:07.650728: Suus1 maybe_update_lr lr: 0.003727
2022-07-07 16:59:07.677278: This epoch took 73.715986 s

2022-07-07 16:59:07.710224: 
epoch:  333
2022-07-07 17:00:15.608354: train loss : -0.8443
2022-07-07 17:00:20.169631: validation loss: -0.7581
2022-07-07 17:00:20.173554: Average global foreground Dice: [0.7974]
2022-07-07 17:00:20.175807: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:00:20.792190: Suus1 maybe_update_lr lr: 0.003707
2022-07-07 17:00:20.821385: This epoch took 73.089128 s

2022-07-07 17:00:20.850274: 
epoch:  334
2022-07-07 17:01:29.214430: train loss : -0.8484
2022-07-07 17:01:34.092755: validation loss: -0.7781
2022-07-07 17:01:34.097913: Average global foreground Dice: [0.8172]
2022-07-07 17:01:34.103402: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:01:34.572825: Suus1 maybe_update_lr lr: 0.003687
2022-07-07 17:01:34.575585: This epoch took 73.681325 s

2022-07-07 17:01:34.578799: 
epoch:  335
2022-07-07 17:02:42.888979: train loss : -0.8471
2022-07-07 17:02:47.650913: validation loss: -0.7528
2022-07-07 17:02:47.671930: Average global foreground Dice: [0.7982]
2022-07-07 17:02:47.704036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:02:48.345484: Suus1 maybe_update_lr lr: 0.003667
2022-07-07 17:02:48.373300: This epoch took 73.767123 s

2022-07-07 17:02:48.386140: 
epoch:  336
2022-07-07 17:03:56.311894: train loss : -0.8460
2022-07-07 17:04:01.119948: validation loss: -0.7615
2022-07-07 17:04:01.141938: Average global foreground Dice: [0.8024]
2022-07-07 17:04:01.148211: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:04:01.926735: Suus1 maybe_update_lr lr: 0.003647
2022-07-07 17:04:01.943318: This epoch took 73.524197 s

2022-07-07 17:04:01.957263: 
epoch:  337
2022-07-07 17:05:09.983698: train loss : -0.8322
2022-07-07 17:05:14.609702: validation loss: -0.7804
2022-07-07 17:05:14.621752: Average global foreground Dice: [0.8204]
2022-07-07 17:05:14.630005: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:05:15.317258: Suus1 maybe_update_lr lr: 0.003627
2022-07-07 17:05:15.331479: This epoch took 73.359773 s

2022-07-07 17:05:15.336999: 
epoch:  338
2022-07-07 17:06:23.720983: train loss : -0.8427
2022-07-07 17:06:28.464712: validation loss: -0.7814
2022-07-07 17:06:28.516616: Average global foreground Dice: [0.8216]
2022-07-07 17:06:28.545897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:06:29.111500: Suus1 maybe_update_lr lr: 0.003606
2022-07-07 17:06:29.143063: This epoch took 73.801624 s

2022-07-07 17:06:29.186661: 
epoch:  339
2022-07-07 17:07:37.371352: train loss : -0.8419
2022-07-07 17:07:42.448219: validation loss: -0.7740
2022-07-07 17:07:42.462138: Average global foreground Dice: [0.8139]
2022-07-07 17:07:42.466958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:07:43.114467: Suus1 maybe_update_lr lr: 0.003586
2022-07-07 17:07:43.128673: This epoch took 73.911860 s

2022-07-07 17:07:43.133055: 
epoch:  340
2022-07-07 17:08:51.349310: train loss : -0.8388
2022-07-07 17:08:56.236445: validation loss: -0.7487
2022-07-07 17:08:56.253986: Average global foreground Dice: [0.7911]
2022-07-07 17:08:56.263266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:08:56.908287: Suus1 maybe_update_lr lr: 0.003566
2022-07-07 17:08:56.912910: This epoch took 73.759875 s

2022-07-07 17:08:56.930353: 
epoch:  341
2022-07-07 17:10:05.241691: train loss : -0.8494
2022-07-07 17:10:09.810247: validation loss: -0.7739
2022-07-07 17:10:09.814922: Average global foreground Dice: [0.8158]
2022-07-07 17:10:09.819113: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:10:10.464765: Suus1 maybe_update_lr lr: 0.003546
2022-07-07 17:10:10.489334: This epoch took 73.545942 s

2022-07-07 17:10:10.493781: 
epoch:  342
2022-07-07 17:11:18.621321: train loss : -0.8500
2022-07-07 17:11:23.487056: validation loss: -0.7815
2022-07-07 17:11:23.490302: Average global foreground Dice: [0.8223]
2022-07-07 17:11:23.507767: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:11:24.229450: Suus1 maybe_update_lr lr: 0.003526
2022-07-07 17:11:24.256091: This epoch took 73.758453 s

2022-07-07 17:11:24.282442: 
epoch:  343
2022-07-07 17:12:32.288857: train loss : -0.8486
2022-07-07 17:12:36.948748: validation loss: -0.7675
2022-07-07 17:12:36.951919: Average global foreground Dice: [0.8066]
2022-07-07 17:12:36.965845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:12:37.690826: Suus1 maybe_update_lr lr: 0.003505
2022-07-07 17:12:37.723613: This epoch took 73.408328 s

2022-07-07 17:12:37.759316: 
epoch:  344
2022-07-07 17:13:46.156080: train loss : -0.8367
2022-07-07 17:13:51.094138: validation loss: -0.7370
2022-07-07 17:13:51.125771: Average global foreground Dice: [0.7876]
2022-07-07 17:13:51.167621: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:13:51.756014: Suus1 maybe_update_lr lr: 0.003485
2022-07-07 17:13:51.758491: This epoch took 73.957229 s

2022-07-07 17:13:51.760652: 
epoch:  345
2022-07-07 17:14:59.706435: train loss : -0.8388
2022-07-07 17:15:04.320748: validation loss: -0.7580
2022-07-07 17:15:04.348758: Average global foreground Dice: [0.8095]
2022-07-07 17:15:04.368357: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:15:04.964370: Suus1 maybe_update_lr lr: 0.003465
2022-07-07 17:15:04.978713: This epoch took 73.215770 s

2022-07-07 17:15:05.023315: 
epoch:  346
2022-07-07 17:16:13.114174: train loss : -0.8466
2022-07-07 17:16:17.933573: validation loss: -0.7544
2022-07-07 17:16:17.955579: Average global foreground Dice: [0.7931]
2022-07-07 17:16:17.959892: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:16:18.568456: Suus1 maybe_update_lr lr: 0.003445
2022-07-07 17:16:18.578857: This epoch took 73.514203 s

2022-07-07 17:16:18.614246: 
epoch:  347
2022-07-07 17:17:26.600300: train loss : -0.8381
2022-07-07 17:17:31.412041: validation loss: -0.7573
2022-07-07 17:17:31.453707: Average global foreground Dice: [0.8009]
2022-07-07 17:17:31.481146: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:17:32.026767: Suus1 maybe_update_lr lr: 0.003424
2022-07-07 17:17:32.032588: This epoch took 73.395319 s

2022-07-07 17:17:32.039335: 
epoch:  348
2022-07-07 17:18:39.934554: train loss : -0.8405
2022-07-07 17:18:44.650563: validation loss: -0.7688
2022-07-07 17:18:44.683195: Average global foreground Dice: [0.8116]
2022-07-07 17:18:44.704364: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:18:45.402763: Suus1 maybe_update_lr lr: 0.003404
2022-07-07 17:18:45.419019: This epoch took 73.370304 s

2022-07-07 17:18:45.423673: 
epoch:  349
2022-07-07 17:19:53.577368: train loss : -0.8455
2022-07-07 17:19:58.362273: validation loss: -0.7586
2022-07-07 17:19:58.385628: Average global foreground Dice: [0.808]
2022-07-07 17:19:58.423337: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:19:58.966196: Suus1 maybe_update_lr lr: 0.003384
2022-07-07 17:19:58.975060: saving scheduled checkpoint file...
2022-07-07 17:19:59.062740: saving checkpoint...
2022-07-07 17:20:00.360279: done, saving took 1.37 seconds
2022-07-07 17:20:00.378468: done
2022-07-07 17:20:00.380635: This epoch took 74.953868 s

2022-07-07 17:20:00.382780: 
epoch:  350
2022-07-07 17:21:08.209265: train loss : -0.8484
2022-07-07 17:21:13.337032: validation loss: -0.7316
2022-07-07 17:21:13.361917: Average global foreground Dice: [0.7879]
2022-07-07 17:21:13.408506: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:21:14.262975: Suus1 maybe_update_lr lr: 0.003364
2022-07-07 17:21:14.272313: This epoch took 73.887454 s

2022-07-07 17:21:14.311292: 
epoch:  351
2022-07-07 17:22:22.223109: train loss : -0.8494
2022-07-07 17:22:27.234275: validation loss: -0.7490
2022-07-07 17:22:27.264733: Average global foreground Dice: [0.7961]
2022-07-07 17:22:27.285914: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:22:27.928645: Suus1 maybe_update_lr lr: 0.003343
2022-07-07 17:22:27.960334: This epoch took 73.644205 s

2022-07-07 17:22:27.992340: 
epoch:  352
2022-07-07 17:23:35.901203: train loss : -0.8448
2022-07-07 17:23:40.659008: validation loss: -0.7734
2022-07-07 17:23:40.689802: Average global foreground Dice: [0.8118]
2022-07-07 17:23:40.717527: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:23:41.373905: Suus1 maybe_update_lr lr: 0.003323
2022-07-07 17:23:41.387393: This epoch took 73.376774 s

2022-07-07 17:23:41.396036: 
epoch:  353
2022-07-07 17:24:49.558137: train loss : -0.8479
2022-07-07 17:24:54.445992: validation loss: -0.7675
2022-07-07 17:24:54.455883: Average global foreground Dice: [0.8045]
2022-07-07 17:24:54.487370: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:24:55.040946: Suus1 maybe_update_lr lr: 0.003303
2022-07-07 17:24:55.054407: This epoch took 73.654539 s

2022-07-07 17:24:55.109466: 
epoch:  354
2022-07-07 17:26:03.110380: train loss : -0.8476
2022-07-07 17:26:07.778442: validation loss: -0.7705
2022-07-07 17:26:07.813828: Average global foreground Dice: [0.8111]
2022-07-07 17:26:07.850548: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:26:08.466477: Suus1 maybe_update_lr lr: 0.003282
2022-07-07 17:26:08.471897: This epoch took 73.339946 s

2022-07-07 17:26:08.475111: 
epoch:  355
2022-07-07 17:27:16.460493: train loss : -0.8553
2022-07-07 17:27:20.977603: validation loss: -0.7764
2022-07-07 17:27:20.999130: Average global foreground Dice: [0.8151]
2022-07-07 17:27:21.017160: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:27:21.846444: Suus1 maybe_update_lr lr: 0.003262
2022-07-07 17:27:21.880299: This epoch took 73.402839 s

2022-07-07 17:27:21.887898: 
epoch:  356
2022-07-07 17:28:30.071959: train loss : -0.8573
2022-07-07 17:28:34.836776: validation loss: -0.7687
2022-07-07 17:28:34.850553: Average global foreground Dice: [0.8061]
2022-07-07 17:28:34.855117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:28:35.455519: Suus1 maybe_update_lr lr: 0.003241
2022-07-07 17:28:35.491324: This epoch took 73.597970 s

2022-07-07 17:28:35.524239: 
epoch:  357
2022-07-07 17:29:43.764712: train loss : -0.8509
2022-07-07 17:29:48.386716: validation loss: -0.7726
2022-07-07 17:29:48.419065: Average global foreground Dice: [0.8118]
2022-07-07 17:29:48.440359: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:29:49.036657: Suus1 maybe_update_lr lr: 0.003221
2022-07-07 17:29:49.046642: This epoch took 73.476359 s

2022-07-07 17:29:49.051940: 
epoch:  358
2022-07-07 17:30:57.212456: train loss : -0.8569
2022-07-07 17:31:01.941724: validation loss: -0.7502
2022-07-07 17:31:01.975821: Average global foreground Dice: [0.7938]
2022-07-07 17:31:02.010404: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:31:02.661021: Suus1 maybe_update_lr lr: 0.003201
2022-07-07 17:31:02.697477: This epoch took 73.635084 s

2022-07-07 17:31:02.725290: 
epoch:  359
2022-07-07 17:32:10.696945: train loss : -0.8527
2022-07-07 17:32:15.213416: validation loss: -0.7878
2022-07-07 17:32:15.241987: Average global foreground Dice: [0.8313]
2022-07-07 17:32:15.274465: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:32:16.175205: Suus1 maybe_update_lr lr: 0.00318
2022-07-07 17:32:16.206296: This epoch took 73.447969 s

2022-07-07 17:32:16.228241: 
epoch:  360
2022-07-07 17:33:24.228105: train loss : -0.8506
2022-07-07 17:33:28.848549: validation loss: -0.7840
2022-07-07 17:33:28.853968: Average global foreground Dice: [0.821]
2022-07-07 17:33:28.856382: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:33:29.452034: Suus1 maybe_update_lr lr: 0.00316
2022-07-07 17:33:29.506404: This epoch took 73.245166 s

2022-07-07 17:33:29.527332: 
epoch:  361
2022-07-07 17:34:37.898171: train loss : -0.8578
2022-07-07 17:34:42.598185: validation loss: -0.7845
2022-07-07 17:34:42.602694: Average global foreground Dice: [0.8189]
2022-07-07 17:34:42.605290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:34:43.180808: Suus1 maybe_update_lr lr: 0.003139
2022-07-07 17:34:43.201354: This epoch took 73.642721 s

2022-07-07 17:34:43.222389: 
epoch:  362
2022-07-07 17:35:51.488573: train loss : -0.8552
2022-07-07 17:35:56.433926: validation loss: -0.7717
2022-07-07 17:35:56.466688: Average global foreground Dice: [0.8092]
2022-07-07 17:35:56.491254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:35:57.025054: Suus1 maybe_update_lr lr: 0.003119
2022-07-07 17:35:57.063496: This epoch took 73.794082 s

2022-07-07 17:35:57.093911: 
epoch:  363
2022-07-07 17:37:05.079280: train loss : -0.8552
2022-07-07 17:37:09.846463: validation loss: -0.7670
2022-07-07 17:37:09.865589: Average global foreground Dice: [0.8095]
2022-07-07 17:37:09.901340: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:37:10.555070: Suus1 maybe_update_lr lr: 0.003098
2022-07-07 17:37:10.583453: This epoch took 73.470198 s

2022-07-07 17:37:10.622370: 
epoch:  364
2022-07-07 17:38:18.762052: train loss : -0.8629
2022-07-07 17:38:23.469117: validation loss: -0.7764
2022-07-07 17:38:23.496240: Average global foreground Dice: [0.8169]
2022-07-07 17:38:23.526273: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:38:24.168651: Suus1 maybe_update_lr lr: 0.003078
2022-07-07 17:38:24.194327: This epoch took 73.539933 s

2022-07-07 17:38:24.197767: 
epoch:  365
2022-07-07 17:39:32.348110: train loss : -0.8551
2022-07-07 17:39:37.157274: validation loss: -0.7659
2022-07-07 17:39:37.178657: Average global foreground Dice: [0.8086]
2022-07-07 17:39:37.206246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:39:37.723023: Suus1 maybe_update_lr lr: 0.003057
2022-07-07 17:39:37.740305: This epoch took 73.515056 s

2022-07-07 17:39:37.777836: 
epoch:  366
2022-07-07 17:40:46.029196: train loss : -0.8474
2022-07-07 17:40:51.337669: validation loss: -0.7879
2022-07-07 17:40:51.371556: Average global foreground Dice: [0.8201]
2022-07-07 17:40:51.396262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:40:52.061282: Suus1 maybe_update_lr lr: 0.003037
2022-07-07 17:40:52.075471: This epoch took 74.291770 s

2022-07-07 17:40:52.116294: 
epoch:  367
2022-07-07 17:41:59.972458: train loss : -0.8531
2022-07-07 17:42:04.590043: validation loss: -0.7558
2022-07-07 17:42:04.621438: Average global foreground Dice: [0.8053]
2022-07-07 17:42:04.630271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:42:05.277457: Suus1 maybe_update_lr lr: 0.003016
2022-07-07 17:42:05.296662: This epoch took 73.149551 s

2022-07-07 17:42:05.308261: 
epoch:  368
2022-07-07 17:43:13.305348: train loss : -0.8513
2022-07-07 17:43:18.365164: validation loss: -0.7872
2022-07-07 17:43:18.397641: Average global foreground Dice: [0.829]
2022-07-07 17:43:18.437406: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:43:19.033259: Suus1 maybe_update_lr lr: 0.002996
2022-07-07 17:43:19.061668: This epoch took 73.750305 s

2022-07-07 17:43:19.078954: 
epoch:  369
2022-07-07 17:44:27.119970: train loss : -0.8524
2022-07-07 17:44:31.802094: validation loss: -0.7564
2022-07-07 17:44:31.807399: Average global foreground Dice: [0.7879]
2022-07-07 17:44:31.810165: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:44:32.436666: Suus1 maybe_update_lr lr: 0.002975
2022-07-07 17:44:32.462477: This epoch took 73.379205 s

2022-07-07 17:44:32.484257: 
epoch:  370
2022-07-07 17:45:40.677952: train loss : -0.8480
2022-07-07 17:45:45.535919: validation loss: -0.7602
2022-07-07 17:45:45.549774: Average global foreground Dice: [0.8033]
2022-07-07 17:45:45.565911: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:45:46.161309: Suus1 maybe_update_lr lr: 0.002954
2022-07-07 17:45:46.182223: This epoch took 73.673974 s

2022-07-07 17:45:46.197259: 
epoch:  371
2022-07-07 17:46:54.118199: train loss : -0.8571
2022-07-07 17:46:59.364787: validation loss: -0.7759
2022-07-07 17:46:59.386787: Average global foreground Dice: [0.822]
2022-07-07 17:46:59.418327: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:47:00.111632: Suus1 maybe_update_lr lr: 0.002934
2022-07-07 17:47:00.114171: This epoch took 73.891529 s

2022-07-07 17:47:00.118610: 
epoch:  372
2022-07-07 17:48:08.157103: train loss : -0.8560
2022-07-07 17:48:12.998543: validation loss: -0.7644
2022-07-07 17:48:13.010470: Average global foreground Dice: [0.8166]
2022-07-07 17:48:13.017727: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:48:13.653005: Suus1 maybe_update_lr lr: 0.002913
2022-07-07 17:48:13.666079: This epoch took 73.521163 s

2022-07-07 17:48:13.673720: 
epoch:  373
2022-07-07 17:49:22.191236: train loss : -0.8547
2022-07-07 17:49:26.911158: validation loss: -0.7914
2022-07-07 17:49:26.944803: Average global foreground Dice: [0.8328]
2022-07-07 17:49:26.982264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:49:27.578091: Suus1 maybe_update_lr lr: 0.002892
2022-07-07 17:49:27.609340: saving best epoch checkpoint...
2022-07-07 17:49:27.689262: saving checkpoint...
2022-07-07 17:49:28.847164: done, saving took 1.22 seconds
2022-07-07 17:49:28.864917: This epoch took 75.168041 s

2022-07-07 17:49:28.866928: 
epoch:  374
2022-07-07 17:50:36.707320: train loss : -0.8583
2022-07-07 17:50:41.339827: validation loss: -0.7949
2022-07-07 17:50:41.370901: Average global foreground Dice: [0.8269]
2022-07-07 17:50:41.408589: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:50:42.021385: Suus1 maybe_update_lr lr: 0.002872
2022-07-07 17:50:42.044339: saving best epoch checkpoint...
2022-07-07 17:50:42.123597: saving checkpoint...
2022-07-07 17:50:43.348828: done, saving took 1.28 seconds
2022-07-07 17:50:43.363661: This epoch took 74.494681 s

2022-07-07 17:50:43.365923: 
epoch:  375
2022-07-07 17:51:51.563097: train loss : -0.8641
2022-07-07 17:51:57.073758: validation loss: -0.7693
2022-07-07 17:51:57.091717: Average global foreground Dice: [0.8112]
2022-07-07 17:51:57.099768: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:51:57.836945: Suus1 maybe_update_lr lr: 0.002851
2022-07-07 17:51:57.849128: This epoch took 74.481136 s

2022-07-07 17:51:57.889268: 
epoch:  376
2022-07-07 17:53:05.964967: train loss : -0.8580
2022-07-07 17:53:10.631306: validation loss: -0.7819
2022-07-07 17:53:10.647315: Average global foreground Dice: [0.8176]
2022-07-07 17:53:10.658336: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:53:11.362129: Suus1 maybe_update_lr lr: 0.00283
2022-07-07 17:53:11.391080: This epoch took 73.488044 s

2022-07-07 17:53:11.402264: 
epoch:  377
2022-07-07 17:54:19.516481: train loss : -0.8595
2022-07-07 17:54:24.182982: validation loss: -0.7679
2022-07-07 17:54:24.186912: Average global foreground Dice: [0.8126]
2022-07-07 17:54:24.218359: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:54:25.265192: Suus1 maybe_update_lr lr: 0.00281
2022-07-07 17:54:25.273251: This epoch took 73.865919 s

2022-07-07 17:54:25.278080: 
epoch:  378
2022-07-07 17:55:33.141672: train loss : -0.8537
2022-07-07 17:55:38.036146: validation loss: -0.7494
2022-07-07 17:55:38.058083: Average global foreground Dice: [0.7967]
2022-07-07 17:55:38.074615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:55:38.749677: Suus1 maybe_update_lr lr: 0.002789
2022-07-07 17:55:38.753472: This epoch took 73.471213 s

2022-07-07 17:55:38.783065: 
epoch:  379
2022-07-07 17:56:46.960552: train loss : -0.8557
2022-07-07 17:56:51.606651: validation loss: -0.7901
2022-07-07 17:56:51.659198: Average global foreground Dice: [0.8272]
2022-07-07 17:56:51.687601: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:56:52.333347: Suus1 maybe_update_lr lr: 0.002768
2022-07-07 17:56:52.381325: This epoch took 73.590572 s

2022-07-07 17:56:52.397255: 
epoch:  380
2022-07-07 17:58:00.562642: train loss : -0.8649
2022-07-07 17:58:05.319071: validation loss: -0.7914
2022-07-07 17:58:05.344442: Average global foreground Dice: [0.826]
2022-07-07 17:58:05.359938: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:58:05.886134: Suus1 maybe_update_lr lr: 0.002747
2022-07-07 17:58:05.899269: saving best epoch checkpoint...
2022-07-07 17:58:05.999830: saving checkpoint...
2022-07-07 17:58:07.033591: done, saving took 1.11 seconds
2022-07-07 17:58:07.049282: This epoch took 74.641477 s

2022-07-07 17:58:07.051255: 
epoch:  381
2022-07-07 17:59:15.082930: train loss : -0.8603
2022-07-07 17:59:19.687681: validation loss: -0.7686
2022-07-07 17:59:19.726640: Average global foreground Dice: [0.8061]
2022-07-07 17:59:19.739107: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 17:59:20.299608: Suus1 maybe_update_lr lr: 0.002727
2022-07-07 17:59:20.312312: This epoch took 73.259164 s

2022-07-07 17:59:20.335033: 
epoch:  382
2022-07-07 18:00:28.280431: train loss : -0.8621
2022-07-07 18:00:32.961028: validation loss: -0.7588
2022-07-07 18:00:32.964124: Average global foreground Dice: [0.8041]
2022-07-07 18:00:32.966204: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:00:33.742424: Suus1 maybe_update_lr lr: 0.002706
2022-07-07 18:00:33.760274: This epoch took 73.420439 s

2022-07-07 18:00:33.768400: 
epoch:  383
2022-07-07 18:01:42.108865: train loss : -0.8607
2022-07-07 18:01:46.810281: validation loss: -0.7582
2022-07-07 18:01:46.829823: Average global foreground Dice: [0.7976]
2022-07-07 18:01:46.849268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:01:47.453418: Suus1 maybe_update_lr lr: 0.002685
2022-07-07 18:01:47.481563: This epoch took 73.684353 s

2022-07-07 18:01:47.519256: 
epoch:  384
2022-07-07 18:02:55.877736: train loss : -0.8675
2022-07-07 18:03:00.495013: validation loss: -0.7874
2022-07-07 18:03:00.513894: Average global foreground Dice: [0.8168]
2022-07-07 18:03:00.544345: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:03:01.132497: Suus1 maybe_update_lr lr: 0.002664
2022-07-07 18:03:01.143486: This epoch took 73.599147 s

2022-07-07 18:03:01.166312: 
epoch:  385
2022-07-07 18:04:09.313324: train loss : -0.8662
2022-07-07 18:04:14.381958: validation loss: -0.7751
2022-07-07 18:04:14.407963: Average global foreground Dice: [0.8185]
2022-07-07 18:04:14.429579: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:04:15.208079: Suus1 maybe_update_lr lr: 0.002643
2022-07-07 18:04:15.237402: This epoch took 74.059163 s

2022-07-07 18:04:15.280255: 
epoch:  386
2022-07-07 18:05:23.759237: train loss : -0.8549
2022-07-07 18:05:28.534660: validation loss: -0.7739
2022-07-07 18:05:28.550293: Average global foreground Dice: [0.8108]
2022-07-07 18:05:28.580989: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:05:29.170692: Suus1 maybe_update_lr lr: 0.002622
2022-07-07 18:05:29.199312: This epoch took 73.903826 s

2022-07-07 18:05:29.224247: 
epoch:  387
2022-07-07 18:06:37.276927: train loss : -0.8634
2022-07-07 18:06:42.171096: validation loss: -0.7487
2022-07-07 18:06:42.191084: Average global foreground Dice: [0.801]
2022-07-07 18:06:42.206163: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:06:42.932677: Suus1 maybe_update_lr lr: 0.002601
2022-07-07 18:06:42.948017: This epoch took 73.681758 s

2022-07-07 18:06:42.959800: 
epoch:  388
2022-07-07 18:07:50.876631: train loss : -0.8635
2022-07-07 18:07:55.637103: validation loss: -0.7824
2022-07-07 18:07:55.643346: Average global foreground Dice: [0.8183]
2022-07-07 18:07:55.657909: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:07:56.258343: Suus1 maybe_update_lr lr: 0.002581
2022-07-07 18:07:56.271882: This epoch took 73.301569 s

2022-07-07 18:07:56.302239: 
epoch:  389
2022-07-07 18:09:04.314372: train loss : -0.8615
2022-07-07 18:09:08.968434: validation loss: -0.7700
2022-07-07 18:09:08.987382: Average global foreground Dice: [0.8113]
2022-07-07 18:09:08.993459: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:09:09.792366: Suus1 maybe_update_lr lr: 0.00256
2022-07-07 18:09:09.820386: This epoch took 73.498118 s

2022-07-07 18:09:09.860317: 
epoch:  390
2022-07-07 18:10:18.071073: train loss : -0.8644
2022-07-07 18:10:22.908069: validation loss: -0.7713
2022-07-07 18:10:22.911218: Average global foreground Dice: [0.8087]
2022-07-07 18:10:22.913308: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:10:23.577622: Suus1 maybe_update_lr lr: 0.002539
2022-07-07 18:10:23.596419: This epoch took 73.714211 s

2022-07-07 18:10:23.616403: 
epoch:  391
2022-07-07 18:11:32.043768: train loss : -0.8665
2022-07-07 18:11:36.766359: validation loss: -0.7835
2022-07-07 18:11:36.780166: Average global foreground Dice: [0.8226]
2022-07-07 18:11:36.789220: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:11:37.557885: Suus1 maybe_update_lr lr: 0.002518
2022-07-07 18:11:37.577427: This epoch took 73.937884 s

2022-07-07 18:11:37.596482: 
epoch:  392
2022-07-07 18:12:45.516125: train loss : -0.8613
2022-07-07 18:12:50.390004: validation loss: -0.7680
2022-07-07 18:12:50.400152: Average global foreground Dice: [0.8111]
2022-07-07 18:12:50.415052: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:12:50.992899: Suus1 maybe_update_lr lr: 0.002497
2022-07-07 18:12:51.014327: This epoch took 73.401758 s

2022-07-07 18:12:51.049327: 
epoch:  393
2022-07-07 18:13:59.386316: train loss : -0.8645
2022-07-07 18:14:04.150758: validation loss: -0.7470
2022-07-07 18:14:04.194844: Average global foreground Dice: [0.8007]
2022-07-07 18:14:04.238315: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:14:04.990485: Suus1 maybe_update_lr lr: 0.002476
2022-07-07 18:14:05.016364: This epoch took 73.932346 s

2022-07-07 18:14:05.066246: 
epoch:  394
2022-07-07 18:15:13.549482: train loss : -0.8623
2022-07-07 18:15:18.541000: validation loss: -0.7778
2022-07-07 18:15:18.578115: Average global foreground Dice: [0.8201]
2022-07-07 18:15:18.610422: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:15:19.232031: Suus1 maybe_update_lr lr: 0.002455
2022-07-07 18:15:19.235584: This epoch took 74.125335 s

2022-07-07 18:15:19.265241: 
epoch:  395
2022-07-07 18:16:27.357693: train loss : -0.8670
2022-07-07 18:16:31.878388: validation loss: -0.7861
2022-07-07 18:16:31.913865: Average global foreground Dice: [0.8247]
2022-07-07 18:16:31.950159: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:16:32.563612: Suus1 maybe_update_lr lr: 0.002434
2022-07-07 18:16:32.592299: This epoch took 73.293986 s

2022-07-07 18:16:32.624143: 
epoch:  396
2022-07-07 18:17:40.715647: train loss : -0.8585
2022-07-07 18:17:45.323590: validation loss: -0.7771
2022-07-07 18:17:45.353864: Average global foreground Dice: [0.8122]
2022-07-07 18:17:45.385316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:17:46.118920: Suus1 maybe_update_lr lr: 0.002413
2022-07-07 18:17:46.128713: This epoch took 73.493071 s

2022-07-07 18:17:46.131016: 
epoch:  397
2022-07-07 18:18:54.233232: train loss : -0.8691
2022-07-07 18:18:58.917185: validation loss: -0.7755
2022-07-07 18:18:58.946739: Average global foreground Dice: [0.8169]
2022-07-07 18:18:58.971553: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:18:59.563784: Suus1 maybe_update_lr lr: 0.002391
2022-07-07 18:18:59.573353: This epoch took 73.440381 s

2022-07-07 18:18:59.606761: 
epoch:  398
2022-07-07 18:20:07.846833: train loss : -0.8592
2022-07-07 18:20:12.911052: validation loss: -0.7787
2022-07-07 18:20:12.921857: Average global foreground Dice: [0.8117]
2022-07-07 18:20:12.951297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:20:13.644516: Suus1 maybe_update_lr lr: 0.00237
2022-07-07 18:20:13.647317: This epoch took 74.036447 s

2022-07-07 18:20:13.649744: 
epoch:  399
2022-07-07 18:21:21.501890: train loss : -0.8675
2022-07-07 18:21:26.273613: validation loss: -0.7856
2022-07-07 18:21:26.306829: Average global foreground Dice: [0.8197]
2022-07-07 18:21:26.346263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:21:26.896005: Suus1 maybe_update_lr lr: 0.002349
2022-07-07 18:21:26.924355: saving scheduled checkpoint file...
2022-07-07 18:21:27.084355: saving checkpoint...
2022-07-07 18:21:28.182926: done, saving took 1.23 seconds
2022-07-07 18:21:28.200146: done
2022-07-07 18:21:28.202373: This epoch took 74.550298 s

2022-07-07 18:21:28.204442: 
epoch:  400
2022-07-07 18:22:36.425403: train loss : -0.8615
2022-07-07 18:22:41.082353: validation loss: -0.7603
2022-07-07 18:22:41.085234: Average global foreground Dice: [0.793]
2022-07-07 18:22:41.097291: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:22:41.752543: Suus1 maybe_update_lr lr: 0.002328
2022-07-07 18:22:41.759718: This epoch took 73.553213 s

2022-07-07 18:22:41.778057: 
epoch:  401
2022-07-07 18:23:50.274479: train loss : -0.8661
2022-07-07 18:23:55.098902: validation loss: -0.7660
2022-07-07 18:23:55.132102: Average global foreground Dice: [0.8074]
2022-07-07 18:23:55.170355: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:23:55.847593: Suus1 maybe_update_lr lr: 0.002307
2022-07-07 18:23:55.850780: This epoch took 74.063325 s

2022-07-07 18:23:55.854960: 
epoch:  402
2022-07-07 18:25:04.012815: train loss : -0.8640
2022-07-07 18:25:08.922359: validation loss: -0.8027
2022-07-07 18:25:08.948100: Average global foreground Dice: [0.8389]
2022-07-07 18:25:08.994275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:25:09.598289: Suus1 maybe_update_lr lr: 0.002286
2022-07-07 18:25:09.600992: This epoch took 73.707580 s

2022-07-07 18:25:09.603306: 
epoch:  403
2022-07-07 18:26:17.428424: train loss : -0.8647
2022-07-07 18:26:22.133099: validation loss: -0.7629
2022-07-07 18:26:22.159900: Average global foreground Dice: [0.8024]
2022-07-07 18:26:22.193999: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:26:22.829715: Suus1 maybe_update_lr lr: 0.002264
2022-07-07 18:26:22.846802: This epoch took 73.241543 s

2022-07-07 18:26:22.871407: 
epoch:  404
2022-07-07 18:27:30.876845: train loss : -0.8725
2022-07-07 18:27:35.424592: validation loss: -0.7841
2022-07-07 18:27:35.427901: Average global foreground Dice: [0.8203]
2022-07-07 18:27:35.432593: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:27:36.018003: Suus1 maybe_update_lr lr: 0.002243
2022-07-07 18:27:36.050347: This epoch took 73.158934 s

2022-07-07 18:27:36.070389: 
epoch:  405
2022-07-07 18:28:44.138122: train loss : -0.8718
2022-07-07 18:28:49.115367: validation loss: -0.7660
2022-07-07 18:28:49.118572: Average global foreground Dice: [0.8113]
2022-07-07 18:28:49.137713: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:28:49.771449: Suus1 maybe_update_lr lr: 0.002222
2022-07-07 18:28:49.774172: This epoch took 73.679784 s

2022-07-07 18:28:49.776166: 
epoch:  406
2022-07-07 18:29:57.634063: train loss : -0.8658
2022-07-07 18:30:02.565253: validation loss: -0.7649
2022-07-07 18:30:02.573799: Average global foreground Dice: [0.8086]
2022-07-07 18:30:02.587362: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:30:03.209326: Suus1 maybe_update_lr lr: 0.002201
2022-07-07 18:30:03.246453: This epoch took 73.459841 s

2022-07-07 18:30:03.253823: 
epoch:  407
2022-07-07 18:31:11.142260: train loss : -0.8715
2022-07-07 18:31:15.984208: validation loss: -0.7825
2022-07-07 18:31:16.013309: Average global foreground Dice: [0.8183]
2022-07-07 18:31:16.029284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:31:16.612816: Suus1 maybe_update_lr lr: 0.002179
2022-07-07 18:31:16.625378: This epoch took 73.369184 s

2022-07-07 18:31:16.643368: 
epoch:  408
2022-07-07 18:32:24.847230: train loss : -0.8685
2022-07-07 18:32:29.661199: validation loss: -0.7797
2022-07-07 18:32:29.664316: Average global foreground Dice: [0.823]
2022-07-07 18:32:29.667905: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:32:30.240061: Suus1 maybe_update_lr lr: 0.002158
2022-07-07 18:32:30.243044: This epoch took 73.594508 s

2022-07-07 18:32:30.268525: 
epoch:  409
2022-07-07 18:33:38.160847: train loss : -0.8682
2022-07-07 18:33:43.152388: validation loss: -0.7588
2022-07-07 18:33:43.159170: Average global foreground Dice: [0.8054]
2022-07-07 18:33:43.166923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:33:43.870062: Suus1 maybe_update_lr lr: 0.002137
2022-07-07 18:33:43.886499: This epoch took 73.585236 s

2022-07-07 18:33:43.914884: 
epoch:  410
2022-07-07 18:34:52.149221: train loss : -0.8704
2022-07-07 18:34:57.364465: validation loss: -0.7766
2022-07-07 18:34:57.385283: Average global foreground Dice: [0.809]
2022-07-07 18:34:57.388307: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:34:57.968723: Suus1 maybe_update_lr lr: 0.002115
2022-07-07 18:34:57.971540: This epoch took 74.043197 s

2022-07-07 18:34:57.977365: 
epoch:  411
2022-07-07 18:36:06.137960: train loss : -0.8680
2022-07-07 18:36:10.858485: validation loss: -0.7964
2022-07-07 18:36:10.862957: Average global foreground Dice: [0.8339]
2022-07-07 18:36:10.865686: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:36:11.521033: Suus1 maybe_update_lr lr: 0.002094
2022-07-07 18:36:11.540316: This epoch took 73.524049 s

2022-07-07 18:36:11.573247: 
epoch:  412
2022-07-07 18:37:19.397487: train loss : -0.8651
2022-07-07 18:37:24.095938: validation loss: -0.7800
2022-07-07 18:37:24.129200: Average global foreground Dice: [0.8182]
2022-07-07 18:37:24.169467: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:37:24.732521: Suus1 maybe_update_lr lr: 0.002072
2022-07-07 18:37:24.735706: saving best epoch checkpoint...
2022-07-07 18:37:24.802436: saving checkpoint...
2022-07-07 18:37:26.021666: done, saving took 1.27 seconds
2022-07-07 18:37:26.039804: This epoch took 74.448945 s

2022-07-07 18:37:26.043859: 
epoch:  413
2022-07-07 18:38:33.852389: train loss : -0.8716
2022-07-07 18:38:38.898894: validation loss: -0.7677
2022-07-07 18:38:38.919497: Average global foreground Dice: [0.8172]
2022-07-07 18:38:38.925941: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:38:39.600067: Suus1 maybe_update_lr lr: 0.002051
2022-07-07 18:38:39.611567: saving best epoch checkpoint...
2022-07-07 18:38:39.679551: saving checkpoint...
2022-07-07 18:38:41.084832: done, saving took 1.47 seconds
2022-07-07 18:38:41.100277: This epoch took 75.054128 s

2022-07-07 18:38:41.102500: 
epoch:  414
2022-07-07 18:39:48.846731: train loss : -0.8692
2022-07-07 18:39:53.429605: validation loss: -0.7764
2022-07-07 18:39:53.467972: Average global foreground Dice: [0.8164]
2022-07-07 18:39:53.471801: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:39:54.248069: Suus1 maybe_update_lr lr: 0.00203
2022-07-07 18:39:54.269301: saving best epoch checkpoint...
2022-07-07 18:39:54.345299: saving checkpoint...
2022-07-07 18:39:55.414255: done, saving took 1.12 seconds
2022-07-07 18:39:55.430238: This epoch took 74.325689 s

2022-07-07 18:39:55.432309: 
epoch:  415
2022-07-07 18:41:03.128197: train loss : -0.8762
2022-07-07 18:41:07.842716: validation loss: -0.7789
2022-07-07 18:41:07.849629: Average global foreground Dice: [0.8146]
2022-07-07 18:41:07.897623: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:41:08.423617: Suus1 maybe_update_lr lr: 0.002008
2022-07-07 18:41:08.433894: This epoch took 72.999603 s

2022-07-07 18:41:08.443315: 
epoch:  416
2022-07-07 18:42:16.473252: train loss : -0.8737
2022-07-07 18:42:21.400231: validation loss: -0.7779
2022-07-07 18:42:21.419941: Average global foreground Dice: [0.8121]
2022-07-07 18:42:21.434874: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:42:22.032598: Suus1 maybe_update_lr lr: 0.001987
2022-07-07 18:42:22.035226: This epoch took 73.558918 s

2022-07-07 18:42:22.038941: 
epoch:  417
2022-07-07 18:43:30.231858: train loss : -0.8711
2022-07-07 18:43:35.084735: validation loss: -0.7835
2022-07-07 18:43:35.099353: Average global foreground Dice: [0.8217]
2022-07-07 18:43:35.104645: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:43:35.855253: Suus1 maybe_update_lr lr: 0.001965
2022-07-07 18:43:35.879354: saving best epoch checkpoint...
2022-07-07 18:43:35.936331: saving checkpoint...
2022-07-07 18:43:37.112223: done, saving took 1.23 seconds
2022-07-07 18:43:37.129082: This epoch took 75.087926 s

2022-07-07 18:43:37.131260: 
epoch:  418
2022-07-07 18:44:45.056830: train loss : -0.8757
2022-07-07 18:44:49.548958: validation loss: -0.7874
2022-07-07 18:44:49.566875: Average global foreground Dice: [0.8265]
2022-07-07 18:44:49.578295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:44:50.477605: Suus1 maybe_update_lr lr: 0.001943
2022-07-07 18:44:50.480796: saving best epoch checkpoint...
2022-07-07 18:44:50.557160: saving checkpoint...
2022-07-07 18:44:51.866543: done, saving took 1.35 seconds
2022-07-07 18:44:51.883610: This epoch took 74.750192 s

2022-07-07 18:44:51.890694: 
epoch:  419
2022-07-07 18:45:59.877653: train loss : -0.8734
2022-07-07 18:46:04.777577: validation loss: -0.7813
2022-07-07 18:46:04.814950: Average global foreground Dice: [0.8207]
2022-07-07 18:46:04.866301: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:46:05.478382: Suus1 maybe_update_lr lr: 0.001922
2022-07-07 18:46:05.481171: saving best epoch checkpoint...
2022-07-07 18:46:05.523460: saving checkpoint...
2022-07-07 18:46:06.651477: done, saving took 1.16 seconds
2022-07-07 18:46:06.666091: This epoch took 74.772904 s

2022-07-07 18:46:06.668230: 
epoch:  420
2022-07-07 18:47:14.439270: train loss : -0.8683
2022-07-07 18:47:19.043646: validation loss: -0.7691
2022-07-07 18:47:19.083953: Average global foreground Dice: [0.8077]
2022-07-07 18:47:19.088040: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:47:19.648937: Suus1 maybe_update_lr lr: 0.0019
2022-07-07 18:47:19.677580: This epoch took 73.007397 s

2022-07-07 18:47:19.708330: 
epoch:  421
2022-07-07 18:48:27.750182: train loss : -0.8733
2022-07-07 18:48:32.737272: validation loss: -0.7558
2022-07-07 18:48:32.740370: Average global foreground Dice: [0.8073]
2022-07-07 18:48:32.742598: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:48:33.430021: Suus1 maybe_update_lr lr: 0.001879
2022-07-07 18:48:33.432683: This epoch took 73.704187 s

2022-07-07 18:48:33.452247: 
epoch:  422
2022-07-07 18:49:42.064125: train loss : -0.8658
2022-07-07 18:49:46.651214: validation loss: -0.7830
2022-07-07 18:49:46.655823: Average global foreground Dice: [0.8226]
2022-07-07 18:49:46.660327: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:49:47.340260: Suus1 maybe_update_lr lr: 0.001857
2022-07-07 18:49:47.354345: This epoch took 73.879991 s

2022-07-07 18:49:47.366375: 
epoch:  423
2022-07-07 18:50:55.577126: train loss : -0.8770
2022-07-07 18:51:00.441314: validation loss: -0.7836
2022-07-07 18:51:00.460254: Average global foreground Dice: [0.8157]
2022-07-07 18:51:00.477627: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:51:01.018693: Suus1 maybe_update_lr lr: 0.001835
2022-07-07 18:51:01.071335: This epoch took 73.693587 s

2022-07-07 18:51:01.086790: 
epoch:  424
2022-07-07 18:52:09.401094: train loss : -0.8794
2022-07-07 18:52:14.426537: validation loss: -0.7696
2022-07-07 18:52:14.430375: Average global foreground Dice: [0.815]
2022-07-07 18:52:14.432645: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:52:14.998679: Suus1 maybe_update_lr lr: 0.001813
2022-07-07 18:52:15.007789: This epoch took 73.892678 s

2022-07-07 18:52:15.027873: 
epoch:  425
2022-07-07 18:53:22.948682: train loss : -0.8674
2022-07-07 18:53:27.908926: validation loss: -0.7791
2022-07-07 18:53:27.931892: Average global foreground Dice: [0.8174]
2022-07-07 18:53:27.955513: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:53:28.694949: Suus1 maybe_update_lr lr: 0.001792
2022-07-07 18:53:28.710648: This epoch took 73.663676 s

2022-07-07 18:53:28.723477: 
epoch:  426
2022-07-07 18:54:36.945497: train loss : -0.8719
2022-07-07 18:54:41.607259: validation loss: -0.7589
2022-07-07 18:54:41.626284: Average global foreground Dice: [0.8054]
2022-07-07 18:54:41.653933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:54:42.155763: Suus1 maybe_update_lr lr: 0.00177
2022-07-07 18:54:42.176013: This epoch took 73.440705 s

2022-07-07 18:54:42.180486: 
epoch:  427
2022-07-07 18:55:50.144257: train loss : -0.8753
2022-07-07 18:55:55.195722: validation loss: -0.7825
2022-07-07 18:55:55.229821: Average global foreground Dice: [0.8231]
2022-07-07 18:55:55.263348: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:55:55.818609: Suus1 maybe_update_lr lr: 0.001748
2022-07-07 18:55:55.837344: This epoch took 73.630632 s

2022-07-07 18:55:55.845577: 
epoch:  428
2022-07-07 18:57:03.898293: train loss : -0.8764
2022-07-07 18:57:08.663462: validation loss: -0.7700
2022-07-07 18:57:08.688753: Average global foreground Dice: [0.8084]
2022-07-07 18:57:08.717497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:57:09.365530: Suus1 maybe_update_lr lr: 0.001726
2022-07-07 18:57:09.398965: This epoch took 73.538976 s

2022-07-07 18:57:09.431749: 
epoch:  429
2022-07-07 18:58:17.598464: train loss : -0.8805
2022-07-07 18:58:22.404714: validation loss: -0.7727
2022-07-07 18:58:22.418283: Average global foreground Dice: [0.8094]
2022-07-07 18:58:22.428810: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:58:22.894919: Suus1 maybe_update_lr lr: 0.001704
2022-07-07 18:58:22.904538: This epoch took 73.453795 s

2022-07-07 18:58:22.923600: 
epoch:  430
2022-07-07 18:59:31.020120: train loss : -0.8763
2022-07-07 18:59:35.816163: validation loss: -0.7663
2022-07-07 18:59:35.837078: Average global foreground Dice: [0.8088]
2022-07-07 18:59:35.855621: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 18:59:36.389729: Suus1 maybe_update_lr lr: 0.001682
2022-07-07 18:59:36.393690: This epoch took 73.456964 s

2022-07-07 18:59:36.411540: 
epoch:  431
2022-07-07 19:00:44.232080: train loss : -0.8787
2022-07-07 19:00:48.922192: validation loss: -0.7866
2022-07-07 19:00:48.926191: Average global foreground Dice: [0.8284]
2022-07-07 19:00:48.928228: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:00:49.578660: Suus1 maybe_update_lr lr: 0.00166
2022-07-07 19:00:49.623299: This epoch took 73.195961 s

2022-07-07 19:00:49.656241: 
epoch:  432
2022-07-07 19:01:58.017489: train loss : -0.8685
2022-07-07 19:02:02.765031: validation loss: -0.7646
2022-07-07 19:02:02.787738: Average global foreground Dice: [0.8101]
2022-07-07 19:02:02.821300: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:02:03.509665: Suus1 maybe_update_lr lr: 0.001638
2022-07-07 19:02:03.512183: This epoch took 73.799930 s

2022-07-07 19:02:03.529414: 
epoch:  433
2022-07-07 19:03:11.779089: train loss : -0.8778
2022-07-07 19:03:16.390745: validation loss: -0.7971
2022-07-07 19:03:16.399239: Average global foreground Dice: [0.827]
2022-07-07 19:03:16.422921: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:03:17.021317: Suus1 maybe_update_lr lr: 0.001616
2022-07-07 19:03:17.025791: This epoch took 73.454519 s

2022-07-07 19:03:17.039602: 
epoch:  434
2022-07-07 19:04:25.113522: train loss : -0.8819
2022-07-07 19:04:29.921965: validation loss: -0.7669
2022-07-07 19:04:29.960787: Average global foreground Dice: [0.8042]
2022-07-07 19:04:29.986858: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:04:30.547535: Suus1 maybe_update_lr lr: 0.001594
2022-07-07 19:04:30.577314: This epoch took 73.522930 s

2022-07-07 19:04:30.587475: 
epoch:  435
2022-07-07 19:05:38.689661: train loss : -0.8801
2022-07-07 19:05:43.267255: validation loss: -0.7608
2022-07-07 19:05:43.281748: Average global foreground Dice: [0.8005]
2022-07-07 19:05:43.311544: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:05:43.926547: Suus1 maybe_update_lr lr: 0.001572
2022-07-07 19:05:43.957328: This epoch took 73.354021 s

2022-07-07 19:05:43.977404: 
epoch:  436
2022-07-07 19:06:52.022475: train loss : -0.8792
2022-07-07 19:06:56.942515: validation loss: -0.7938
2022-07-07 19:06:56.981778: Average global foreground Dice: [0.8298]
2022-07-07 19:06:57.008495: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:06:57.653912: Suus1 maybe_update_lr lr: 0.00155
2022-07-07 19:06:57.678817: This epoch took 73.689561 s

2022-07-07 19:06:57.705438: 
epoch:  437
2022-07-07 19:08:05.642785: train loss : -0.8794
2022-07-07 19:08:10.531715: validation loss: -0.7679
2022-07-07 19:08:10.559787: Average global foreground Dice: [0.8094]
2022-07-07 19:08:10.590692: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:08:11.284332: Suus1 maybe_update_lr lr: 0.001528
2022-07-07 19:08:11.311356: This epoch took 73.594698 s

2022-07-07 19:08:11.328381: 
epoch:  438
2022-07-07 19:09:19.224851: train loss : -0.8780
2022-07-07 19:09:24.110506: validation loss: -0.7688
2022-07-07 19:09:24.117611: Average global foreground Dice: [0.8105]
2022-07-07 19:09:24.142266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:09:24.773828: Suus1 maybe_update_lr lr: 0.001506
2022-07-07 19:09:24.779795: This epoch took 73.440939 s

2022-07-07 19:09:24.793583: 
epoch:  439
2022-07-07 19:10:32.746913: train loss : -0.8767
2022-07-07 19:10:37.627577: validation loss: -0.7942
2022-07-07 19:10:37.639268: Average global foreground Dice: [0.831]
2022-07-07 19:10:37.648375: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:10:38.249358: Suus1 maybe_update_lr lr: 0.001483
2022-07-07 19:10:38.268663: This epoch took 73.465804 s

2022-07-07 19:10:38.283847: 
epoch:  440
2022-07-07 19:11:46.503412: train loss : -0.8817
2022-07-07 19:11:51.187067: validation loss: -0.7690
2022-07-07 19:11:51.190030: Average global foreground Dice: [0.8087]
2022-07-07 19:11:51.193073: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:11:51.731790: Suus1 maybe_update_lr lr: 0.001461
2022-07-07 19:11:51.760864: This epoch took 73.463991 s

2022-07-07 19:11:51.793251: 
epoch:  441
2022-07-07 19:13:00.266982: train loss : -0.8713
2022-07-07 19:13:05.041500: validation loss: -0.7760
2022-07-07 19:13:05.075698: Average global foreground Dice: [0.8172]
2022-07-07 19:13:05.092800: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:13:05.653160: Suus1 maybe_update_lr lr: 0.001439
2022-07-07 19:13:05.699386: This epoch took 73.887109 s

2022-07-07 19:13:05.760347: 
epoch:  442
2022-07-07 19:14:13.751102: train loss : -0.8827
2022-07-07 19:14:18.976065: validation loss: -0.7822
2022-07-07 19:14:19.018903: Average global foreground Dice: [0.8201]
2022-07-07 19:14:19.044671: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:14:19.700001: Suus1 maybe_update_lr lr: 0.001416
2022-07-07 19:14:19.728300: This epoch took 73.943004 s

2022-07-07 19:14:19.731171: 
epoch:  443
2022-07-07 19:15:27.746577: train loss : -0.8860
2022-07-07 19:15:32.504894: validation loss: -0.7699
2022-07-07 19:15:32.524299: Average global foreground Dice: [0.811]
2022-07-07 19:15:32.527140: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:15:33.063361: Suus1 maybe_update_lr lr: 0.001394
2022-07-07 19:15:33.081704: This epoch took 73.327406 s

2022-07-07 19:15:33.088334: 
epoch:  444
2022-07-07 19:16:41.164240: train loss : -0.8745
2022-07-07 19:16:45.969193: validation loss: -0.7720
2022-07-07 19:16:45.998680: Average global foreground Dice: [0.809]
2022-07-07 19:16:46.015201: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:16:46.712132: Suus1 maybe_update_lr lr: 0.001372
2022-07-07 19:16:46.720341: This epoch took 73.624506 s

2022-07-07 19:16:46.748350: 
epoch:  445
2022-07-07 19:17:55.069108: train loss : -0.8802
2022-07-07 19:17:59.719126: validation loss: -0.7955
2022-07-07 19:17:59.734111: Average global foreground Dice: [0.8288]
2022-07-07 19:17:59.767308: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:18:00.496435: Suus1 maybe_update_lr lr: 0.001349
2022-07-07 19:18:00.508636: This epoch took 73.721303 s

2022-07-07 19:18:00.545869: 
epoch:  446
2022-07-07 19:19:08.749620: train loss : -0.8817
2022-07-07 19:19:13.543640: validation loss: -0.7762
2022-07-07 19:19:13.575878: Average global foreground Dice: [0.8121]
2022-07-07 19:19:13.611733: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:19:14.203185: Suus1 maybe_update_lr lr: 0.001327
2022-07-07 19:19:14.226413: This epoch took 73.668751 s

2022-07-07 19:19:14.260263: 
epoch:  447
2022-07-07 19:20:22.201472: train loss : -0.8798
2022-07-07 19:20:27.014817: validation loss: -0.7723
2022-07-07 19:20:27.025646: Average global foreground Dice: [0.8135]
2022-07-07 19:20:27.027991: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:20:27.731778: Suus1 maybe_update_lr lr: 0.001304
2022-07-07 19:20:27.737084: This epoch took 73.454817 s

2022-07-07 19:20:27.748526: 
epoch:  448
2022-07-07 19:21:35.946537: train loss : -0.8853
2022-07-07 19:21:40.687212: validation loss: -0.7701
2022-07-07 19:21:40.704893: Average global foreground Dice: [0.8125]
2022-07-07 19:21:40.713432: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:21:41.346162: Suus1 maybe_update_lr lr: 0.001282
2022-07-07 19:21:41.355602: This epoch took 73.590347 s

2022-07-07 19:21:41.364105: 
epoch:  449
2022-07-07 19:22:49.604333: train loss : -0.8771
2022-07-07 19:22:54.596045: validation loss: -0.7853
2022-07-07 19:22:54.615211: Average global foreground Dice: [0.8249]
2022-07-07 19:22:54.626447: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:22:55.162264: Suus1 maybe_update_lr lr: 0.001259
2022-07-07 19:22:55.191383: saving scheduled checkpoint file...
2022-07-07 19:22:55.247107: saving checkpoint...
2022-07-07 19:22:56.386332: done, saving took 1.18 seconds
2022-07-07 19:22:56.401208: done
2022-07-07 19:22:56.403569: This epoch took 75.028634 s

2022-07-07 19:22:56.405644: 
epoch:  450
2022-07-07 19:24:04.329531: train loss : -0.8725
2022-07-07 19:24:08.880612: validation loss: -0.7611
2022-07-07 19:24:08.891292: Average global foreground Dice: [0.8019]
2022-07-07 19:24:08.894911: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:24:09.383446: Suus1 maybe_update_lr lr: 0.001236
2022-07-07 19:24:09.417331: This epoch took 73.009661 s

2022-07-07 19:24:09.450278: 
epoch:  451
2022-07-07 19:25:17.723621: train loss : -0.8823
2022-07-07 19:25:22.432851: validation loss: -0.7853
2022-07-07 19:25:22.459222: Average global foreground Dice: [0.8196]
2022-07-07 19:25:22.496395: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:25:23.274248: Suus1 maybe_update_lr lr: 0.001214
2022-07-07 19:25:23.302349: This epoch took 73.819053 s

2022-07-07 19:25:23.331410: 
epoch:  452
2022-07-07 19:26:31.237797: train loss : -0.8806
2022-07-07 19:26:35.969883: validation loss: -0.7754
2022-07-07 19:26:35.979950: Average global foreground Dice: [0.8163]
2022-07-07 19:26:35.986321: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:26:36.656623: Suus1 maybe_update_lr lr: 0.001191
2022-07-07 19:26:36.688321: This epoch took 73.322946 s

2022-07-07 19:26:36.721226: 
epoch:  453
2022-07-07 19:27:44.746382: train loss : -0.8834
2022-07-07 19:27:49.459149: validation loss: -0.7718
2022-07-07 19:27:49.492011: Average global foreground Dice: [0.8124]
2022-07-07 19:27:49.526358: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:27:50.138459: Suus1 maybe_update_lr lr: 0.001168
2022-07-07 19:27:50.149242: This epoch took 73.405992 s

2022-07-07 19:27:50.162444: 
epoch:  454
2022-07-07 19:28:58.348850: train loss : -0.8848
2022-07-07 19:29:02.986739: validation loss: -0.7853
2022-07-07 19:29:02.990338: Average global foreground Dice: [0.8285]
2022-07-07 19:29:02.992667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:29:03.686002: Suus1 maybe_update_lr lr: 0.001145
2022-07-07 19:29:03.688336: This epoch took 73.499052 s

2022-07-07 19:29:03.690160: 
epoch:  455
2022-07-07 19:30:11.867800: train loss : -0.8813
2022-07-07 19:30:16.596705: validation loss: -0.7769
2022-07-07 19:30:16.637003: Average global foreground Dice: [0.8184]
2022-07-07 19:30:16.653649: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:30:17.186138: Suus1 maybe_update_lr lr: 0.001122
2022-07-07 19:30:17.188683: This epoch took 73.496614 s

2022-07-07 19:30:17.190969: 
epoch:  456
2022-07-07 19:31:25.090078: train loss : -0.8851
2022-07-07 19:31:29.826227: validation loss: -0.7965
2022-07-07 19:31:29.829360: Average global foreground Dice: [0.829]
2022-07-07 19:31:29.831862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:31:30.378776: Suus1 maybe_update_lr lr: 0.001099
2022-07-07 19:31:30.381439: saving best epoch checkpoint...
2022-07-07 19:31:30.448118: saving checkpoint...
2022-07-07 19:31:31.862667: done, saving took 1.47 seconds
2022-07-07 19:31:31.880452: This epoch took 74.687359 s

2022-07-07 19:31:31.883490: 
epoch:  457
2022-07-07 19:32:39.517107: train loss : -0.8879
2022-07-07 19:32:44.253660: validation loss: -0.7766
2022-07-07 19:32:44.276131: Average global foreground Dice: [0.822]
2022-07-07 19:32:44.321165: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:32:44.949573: Suus1 maybe_update_lr lr: 0.001076
2022-07-07 19:32:44.978405: saving best epoch checkpoint...
2022-07-07 19:32:45.053359: saving checkpoint...
2022-07-07 19:32:46.470211: done, saving took 1.47 seconds
2022-07-07 19:32:46.486597: This epoch took 74.600544 s

2022-07-07 19:32:46.489037: 
epoch:  458
2022-07-07 19:33:54.463639: train loss : -0.8869
2022-07-07 19:33:59.347704: validation loss: -0.7915
2022-07-07 19:33:59.350583: Average global foreground Dice: [0.8293]
2022-07-07 19:33:59.352781: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:33:59.963856: Suus1 maybe_update_lr lr: 0.001053
2022-07-07 19:33:59.970448: saving best epoch checkpoint...
2022-07-07 19:34:00.018353: saving checkpoint...
2022-07-07 19:34:01.127600: done, saving took 1.15 seconds
2022-07-07 19:34:01.140621: This epoch took 74.649981 s

2022-07-07 19:34:01.142561: 
epoch:  459
2022-07-07 19:35:09.141622: train loss : -0.8823
2022-07-07 19:35:13.807358: validation loss: -0.7760
2022-07-07 19:35:13.826944: Average global foreground Dice: [0.817]
2022-07-07 19:35:13.846117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:35:14.392521: Suus1 maybe_update_lr lr: 0.00103
2022-07-07 19:35:14.419473: This epoch took 73.274926 s

2022-07-07 19:35:14.448250: 
epoch:  460
2022-07-07 19:36:22.549269: train loss : -0.8858
2022-07-07 19:36:27.311500: validation loss: -0.7651
2022-07-07 19:36:27.359058: Average global foreground Dice: [0.8051]
2022-07-07 19:36:27.388149: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:36:27.994396: Suus1 maybe_update_lr lr: 0.001007
2022-07-07 19:36:28.022433: This epoch took 73.541142 s

2022-07-07 19:36:28.051265: 
epoch:  461
2022-07-07 19:37:36.310011: train loss : -0.8868
2022-07-07 19:37:40.926740: validation loss: -0.7776
2022-07-07 19:37:40.943456: Average global foreground Dice: [0.819]
2022-07-07 19:37:40.974273: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:37:41.502720: Suus1 maybe_update_lr lr: 0.000983
2022-07-07 19:37:41.505320: This epoch took 73.432035 s

2022-07-07 19:37:41.507414: 
epoch:  462
2022-07-07 19:38:49.335983: train loss : -0.8869
2022-07-07 19:38:54.094289: validation loss: -0.7851
2022-07-07 19:38:54.101088: Average global foreground Dice: [0.8232]
2022-07-07 19:38:54.134359: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:38:54.646510: Suus1 maybe_update_lr lr: 0.00096
2022-07-07 19:38:54.649686: This epoch took 73.140298 s

2022-07-07 19:38:54.672974: 
epoch:  463
2022-07-07 19:40:02.770747: train loss : -0.8863
2022-07-07 19:40:07.539875: validation loss: -0.7763
2022-07-07 19:40:07.587035: Average global foreground Dice: [0.8161]
2022-07-07 19:40:07.626342: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:40:08.260875: Suus1 maybe_update_lr lr: 0.000937
2022-07-07 19:40:08.291712: This epoch took 73.603242 s

2022-07-07 19:40:08.312215: 
epoch:  464
2022-07-07 19:41:16.599354: train loss : -0.8867
2022-07-07 19:41:21.303308: validation loss: -0.7731
2022-07-07 19:41:21.308932: Average global foreground Dice: [0.8115]
2022-07-07 19:41:21.311142: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:41:21.849429: Suus1 maybe_update_lr lr: 0.000913
2022-07-07 19:41:21.852570: This epoch took 73.516170 s

2022-07-07 19:41:21.863113: 
epoch:  465
2022-07-07 19:42:29.947109: train loss : -0.8898
2022-07-07 19:42:34.754081: validation loss: -0.7642
2022-07-07 19:42:34.757687: Average global foreground Dice: [0.8056]
2022-07-07 19:42:34.759948: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:42:35.263624: Suus1 maybe_update_lr lr: 0.00089
2022-07-07 19:42:35.292379: This epoch took 73.406100 s

2022-07-07 19:42:35.323304: 
epoch:  466
2022-07-07 19:43:43.678642: train loss : -0.8905
2022-07-07 19:43:48.353884: validation loss: -0.7878
2022-07-07 19:43:48.357641: Average global foreground Dice: [0.829]
2022-07-07 19:43:48.380208: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:43:48.964414: Suus1 maybe_update_lr lr: 0.000866
2022-07-07 19:43:48.996339: This epoch took 73.640985 s

2022-07-07 19:43:49.036276: 
epoch:  467
2022-07-07 19:44:57.516713: train loss : -0.8838
2022-07-07 19:45:02.385784: validation loss: -0.7682
2022-07-07 19:45:02.407519: Average global foreground Dice: [0.8106]
2022-07-07 19:45:02.411150: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:45:03.024740: Suus1 maybe_update_lr lr: 0.000842
2022-07-07 19:45:03.028393: This epoch took 73.964108 s

2022-07-07 19:45:03.043733: 
epoch:  468
2022-07-07 19:46:11.286602: train loss : -0.8890
2022-07-07 19:46:16.083647: validation loss: -0.7759
2022-07-07 19:46:16.087471: Average global foreground Dice: [0.8137]
2022-07-07 19:46:16.099395: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:46:16.628466: Suus1 maybe_update_lr lr: 0.000819
2022-07-07 19:46:16.658416: This epoch took 73.611520 s

2022-07-07 19:46:16.686256: 
epoch:  469
2022-07-07 19:47:24.859282: train loss : -0.8900
2022-07-07 19:47:29.721142: validation loss: -0.7625
2022-07-07 19:47:29.742579: Average global foreground Dice: [0.8037]
2022-07-07 19:47:29.758355: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:47:30.495853: Suus1 maybe_update_lr lr: 0.000795
2022-07-07 19:47:30.508765: This epoch took 73.803288 s

2022-07-07 19:47:30.523303: 
epoch:  470
2022-07-07 19:48:38.363893: train loss : -0.8910
2022-07-07 19:48:42.928372: validation loss: -0.7915
2022-07-07 19:48:42.964853: Average global foreground Dice: [0.8264]
2022-07-07 19:48:42.980294: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:48:43.528281: Suus1 maybe_update_lr lr: 0.000771
2022-07-07 19:48:43.563203: This epoch took 73.002953 s

2022-07-07 19:48:43.573425: 
epoch:  471
2022-07-07 19:49:51.568584: train loss : -0.8890
2022-07-07 19:49:56.639603: validation loss: -0.7818
2022-07-07 19:49:56.667822: Average global foreground Dice: [0.8228]
2022-07-07 19:49:56.701309: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:49:57.277251: Suus1 maybe_update_lr lr: 0.000747
2022-07-07 19:49:57.279600: This epoch took 73.676223 s

2022-07-07 19:49:57.302269: 
epoch:  472
2022-07-07 19:51:05.282843: train loss : -0.8869
2022-07-07 19:51:10.131662: validation loss: -0.7772
2022-07-07 19:51:10.154296: Average global foreground Dice: [0.82]
2022-07-07 19:51:10.167691: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:51:10.735379: Suus1 maybe_update_lr lr: 0.000723
2022-07-07 19:51:10.748617: This epoch took 73.423353 s

2022-07-07 19:51:10.751549: 
epoch:  473
2022-07-07 19:52:18.989404: train loss : -0.8902
2022-07-07 19:52:23.681397: validation loss: -0.7767
2022-07-07 19:52:23.684918: Average global foreground Dice: [0.8079]
2022-07-07 19:52:23.688076: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:52:24.213064: Suus1 maybe_update_lr lr: 0.000699
2022-07-07 19:52:24.217062: This epoch took 73.445585 s

2022-07-07 19:52:24.225236: 
epoch:  474
2022-07-07 19:53:32.089051: train loss : -0.8931
2022-07-07 19:53:37.255639: validation loss: -0.7549
2022-07-07 19:53:37.269081: Average global foreground Dice: [0.8071]
2022-07-07 19:53:37.288131: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:53:37.950884: Suus1 maybe_update_lr lr: 0.000675
2022-07-07 19:53:37.963055: This epoch took 73.731037 s

2022-07-07 19:53:37.965983: 
epoch:  475
2022-07-07 19:54:46.034188: train loss : -0.8855
2022-07-07 19:54:50.810019: validation loss: -0.7729
2022-07-07 19:54:50.840952: Average global foreground Dice: [0.8153]
2022-07-07 19:54:50.880933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:54:51.526040: Suus1 maybe_update_lr lr: 0.00065
2022-07-07 19:54:51.537895: This epoch took 73.547598 s

2022-07-07 19:54:51.553257: 
epoch:  476
2022-07-07 19:55:59.710116: train loss : -0.8897
2022-07-07 19:56:04.486563: validation loss: -0.7861
2022-07-07 19:56:04.515792: Average global foreground Dice: [0.8239]
2022-07-07 19:56:04.549297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:56:05.130709: Suus1 maybe_update_lr lr: 0.000626
2022-07-07 19:56:05.134811: This epoch took 73.550513 s

2022-07-07 19:56:05.158244: 
epoch:  477
2022-07-07 19:57:13.308398: train loss : -0.8848
2022-07-07 19:57:17.991213: validation loss: -0.7836
2022-07-07 19:57:18.028877: Average global foreground Dice: [0.8232]
2022-07-07 19:57:18.049896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:57:18.575598: Suus1 maybe_update_lr lr: 0.000601
2022-07-07 19:57:18.578060: This epoch took 73.393807 s

2022-07-07 19:57:18.580144: 
epoch:  478
2022-07-07 19:58:26.871756: train loss : -0.8876
2022-07-07 19:58:31.619317: validation loss: -0.7815
2022-07-07 19:58:31.644259: Average global foreground Dice: [0.8238]
2022-07-07 19:58:31.653224: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:58:32.221007: Suus1 maybe_update_lr lr: 0.000577
2022-07-07 19:58:32.245189: This epoch took 73.663001 s

2022-07-07 19:58:32.267375: 
epoch:  479
2022-07-07 19:59:40.656091: train loss : -0.8876
2022-07-07 19:59:45.437697: validation loss: -0.7625
2022-07-07 19:59:45.461792: Average global foreground Dice: [0.8034]
2022-07-07 19:59:45.490461: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 19:59:46.158152: Suus1 maybe_update_lr lr: 0.000552
2022-07-07 19:59:46.181281: This epoch took 73.902245 s

2022-07-07 19:59:46.184675: 
epoch:  480
2022-07-07 20:00:54.342358: train loss : -0.8896
2022-07-07 20:00:59.100336: validation loss: -0.7998
2022-07-07 20:00:59.122776: Average global foreground Dice: [0.8379]
2022-07-07 20:00:59.125519: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:00:59.660860: Suus1 maybe_update_lr lr: 0.000527
2022-07-07 20:00:59.687644: This epoch took 73.488072 s

2022-07-07 20:00:59.720266: 
epoch:  481
2022-07-07 20:02:07.994363: train loss : -0.8913
2022-07-07 20:02:12.766445: validation loss: -0.7658
2022-07-07 20:02:12.791727: Average global foreground Dice: [0.8055]
2022-07-07 20:02:12.801515: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:02:13.484480: Suus1 maybe_update_lr lr: 0.000502
2022-07-07 20:02:13.511337: This epoch took 73.766071 s

2022-07-07 20:02:13.565263: 
epoch:  482
2022-07-07 20:03:21.553900: train loss : -0.8895
2022-07-07 20:03:26.173359: validation loss: -0.7743
2022-07-07 20:03:26.185534: Average global foreground Dice: [0.8126]
2022-07-07 20:03:26.194529: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:03:26.779201: Suus1 maybe_update_lr lr: 0.000477
2022-07-07 20:03:26.793976: This epoch took 73.195735 s

2022-07-07 20:03:26.816937: 
epoch:  483
2022-07-07 20:04:34.931528: train loss : -0.8896
2022-07-07 20:04:39.611186: validation loss: -0.7686
2022-07-07 20:04:39.653449: Average global foreground Dice: [0.812]
2022-07-07 20:04:39.683292: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:04:40.233332: Suus1 maybe_update_lr lr: 0.000451
2022-07-07 20:04:40.262348: This epoch took 73.429306 s

2022-07-07 20:04:40.276900: 
epoch:  484
2022-07-07 20:05:48.530142: train loss : -0.8917
2022-07-07 20:05:53.180380: validation loss: -0.7549
2022-07-07 20:05:53.194783: Average global foreground Dice: [0.8006]
2022-07-07 20:05:53.216671: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:05:53.754610: Suus1 maybe_update_lr lr: 0.000426
2022-07-07 20:05:53.768913: This epoch took 73.474708 s

2022-07-07 20:05:53.771828: 
epoch:  485
2022-07-07 20:07:01.700342: train loss : -0.8873
2022-07-07 20:07:06.382384: validation loss: -0.7644
2022-07-07 20:07:06.430045: Average global foreground Dice: [0.8084]
2022-07-07 20:07:06.457047: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:07:07.073989: Suus1 maybe_update_lr lr: 0.0004
2022-07-07 20:07:07.077301: This epoch took 73.288306 s

2022-07-07 20:07:07.082645: 
epoch:  486
2022-07-07 20:08:15.284506: train loss : -0.8915
2022-07-07 20:08:20.110554: validation loss: -0.7862
2022-07-07 20:08:20.115156: Average global foreground Dice: [0.8179]
2022-07-07 20:08:20.117257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:08:20.719474: Suus1 maybe_update_lr lr: 0.000375
2022-07-07 20:08:20.729043: This epoch took 73.624246 s

2022-07-07 20:08:20.740504: 
epoch:  487
2022-07-07 20:09:28.680722: train loss : -0.8891
2022-07-07 20:09:33.619791: validation loss: -0.7732
2022-07-07 20:09:33.643046: Average global foreground Dice: [0.8116]
2022-07-07 20:09:33.647497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:09:34.417964: Suus1 maybe_update_lr lr: 0.000348
2022-07-07 20:09:34.438339: This epoch took 73.693718 s

2022-07-07 20:09:34.461236: 
epoch:  488
2022-07-07 20:10:42.376954: train loss : -0.8934
2022-07-07 20:10:46.910491: validation loss: -0.8035
2022-07-07 20:10:46.960978: Average global foreground Dice: [0.8366]
2022-07-07 20:10:46.971303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:10:47.623230: Suus1 maybe_update_lr lr: 0.000322
2022-07-07 20:10:47.625210: This epoch took 73.158868 s

2022-07-07 20:10:47.627486: 
epoch:  489
2022-07-07 20:11:56.081772: train loss : -0.8924
2022-07-07 20:12:00.986960: validation loss: -0.7779
2022-07-07 20:12:01.041859: Average global foreground Dice: [0.8136]
2022-07-07 20:12:01.069487: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:12:01.652799: Suus1 maybe_update_lr lr: 0.000296
2022-07-07 20:12:01.691006: This epoch took 74.061033 s

2022-07-07 20:12:01.695460: 
epoch:  490
2022-07-07 20:13:09.788911: train loss : -0.8903
2022-07-07 20:13:14.446374: validation loss: -0.7649
2022-07-07 20:13:14.449873: Average global foreground Dice: [0.8065]
2022-07-07 20:13:14.479504: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:13:15.188103: Suus1 maybe_update_lr lr: 0.000269
2022-07-07 20:13:15.191174: This epoch took 73.477484 s

2022-07-07 20:13:15.208807: 
epoch:  491
2022-07-07 20:14:23.135852: train loss : -0.8904
2022-07-07 20:14:27.704054: validation loss: -0.7889
2022-07-07 20:14:27.713756: Average global foreground Dice: [0.8241]
2022-07-07 20:14:27.723539: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:14:28.277550: Suus1 maybe_update_lr lr: 0.000242
2022-07-07 20:14:28.296298: This epoch took 73.083257 s

2022-07-07 20:14:28.322242: 
epoch:  492
2022-07-07 20:15:36.518824: train loss : -0.8953
2022-07-07 20:15:41.168160: validation loss: -0.7616
2022-07-07 20:15:41.180754: Average global foreground Dice: [0.8073]
2022-07-07 20:15:41.212446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:15:41.908161: Suus1 maybe_update_lr lr: 0.000215
2022-07-07 20:15:41.946597: This epoch took 73.592951 s

2022-07-07 20:15:41.970039: 
epoch:  493
2022-07-07 20:16:50.028759: train loss : -0.8919
2022-07-07 20:16:54.715270: validation loss: -0.7474
2022-07-07 20:16:54.728720: Average global foreground Dice: [0.7954]
2022-07-07 20:16:54.752288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:16:55.467195: Suus1 maybe_update_lr lr: 0.000187
2022-07-07 20:16:55.480024: This epoch took 73.506495 s

2022-07-07 20:16:55.492472: 
epoch:  494
2022-07-07 20:18:03.545111: train loss : -0.8867
2022-07-07 20:18:08.241790: validation loss: -0.7643
2022-07-07 20:18:08.265743: Average global foreground Dice: [0.8055]
2022-07-07 20:18:08.286242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:18:08.882207: Suus1 maybe_update_lr lr: 0.000158
2022-07-07 20:18:08.909347: This epoch took 73.385961 s

2022-07-07 20:18:08.940262: 
epoch:  495
2022-07-07 20:19:16.931957: train loss : -0.8931
2022-07-07 20:19:21.697131: validation loss: -0.7804
2022-07-07 20:19:21.704905: Average global foreground Dice: [0.8227]
2022-07-07 20:19:21.730324: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:19:22.253638: Suus1 maybe_update_lr lr: 0.00013
2022-07-07 20:19:22.258066: This epoch took 73.285749 s

2022-07-07 20:19:22.269806: 
epoch:  496
2022-07-07 20:20:30.425046: train loss : -0.8915
2022-07-07 20:20:35.209918: validation loss: -0.7993
2022-07-07 20:20:35.219184: Average global foreground Dice: [0.8321]
2022-07-07 20:20:35.250068: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:20:35.983913: Suus1 maybe_update_lr lr: 0.0001
2022-07-07 20:20:36.009549: This epoch took 73.731408 s

2022-07-07 20:20:36.045650: 
epoch:  497
2022-07-07 20:21:44.124801: train loss : -0.8911
2022-07-07 20:21:48.934278: validation loss: -0.7891
2022-07-07 20:21:48.964421: Average global foreground Dice: [0.8245]
2022-07-07 20:21:48.988954: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:21:49.663809: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-07 20:21:49.691600: This epoch took 73.643228 s

2022-07-07 20:21:49.738291: 
epoch:  498
2022-07-07 20:22:57.928273: train loss : -0.8941
2022-07-07 20:23:02.637025: validation loss: -0.7706
2022-07-07 20:23:02.667777: Average global foreground Dice: [0.8173]
2022-07-07 20:23:02.674208: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:23:03.287662: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-07 20:23:03.312384: This epoch took 73.564219 s

2022-07-07 20:23:03.314830: 
epoch:  499
2022-07-07 20:24:11.372548: train loss : -0.8944
2022-07-07 20:24:15.991475: validation loss: -0.7652
2022-07-07 20:24:15.996042: Average global foreground Dice: [0.8147]
2022-07-07 20:24:16.006731: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:24:16.598727: Suus1 maybe_update_lr lr: 0.0
2022-07-07 20:24:16.601300: saving scheduled checkpoint file...
2022-07-07 20:24:16.665642: saving checkpoint...
2022-07-07 20:24:18.173471: done, saving took 1.56 seconds
2022-07-07 20:24:18.191179: done
2022-07-07 20:24:18.193284: This epoch took 74.856007 s

2022-07-07 20:24:18.223838: saving checkpoint...
2022-07-07 20:24:19.566902: done, saving took 1.37 seconds
panc_025 (2, 75, 447, 447)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 447, 447)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 112, 223], [0, 112, 223]]
number of tiles: 27
computing Gaussian
done
prediction done
suus panc_025 transposed
suus panc_025 not saving softmax
suus panc_025 voeg toe aan pred_gt tuples voor later
panc_035 (2, 73, 391, 391)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 391, 391)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 84, 167], [0, 84, 167]]
number of tiles: 27
using precomputed Gaussian
prediction done
suus panc_035 transposed
suus panc_035 not saving softmax
suus panc_035 voeg toe aan pred_gt tuples voor later
panc_041 (2, 82, 510, 510)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_041 transposed
suus panc_041 not saving softmax
suus panc_041 voeg toe aan pred_gt tuples voor later
panc_045 (2, 82, 521, 521)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_045 transposed
suus panc_045 not saving softmax
suus panc_045 voeg toe aan pred_gt tuples voor later
panc_052 (2, 89, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_052 transposed
suus panc_052 not saving softmax
suus panc_052 voeg toe aan pred_gt tuples voor later
panc_056 (2, 84, 488, 488)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_056 transposed
suus panc_056 not saving softmax
suus panc_056 voeg toe aan pred_gt tuples voor later
panc_078 (2, 76, 452, 452)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_078 transposed
suus panc_078 not saving softmax
suus panc_078 voeg toe aan pred_gt tuples voor later
panc_091 (2, 71, 521, 521)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_091 transposed
suus panc_091 not saving softmax
suus panc_091 voeg toe aan pred_gt tuples voor later
panc_103 (2, 90, 422, 422)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 422, 422)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 99, 198], [0, 99, 198]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_103 transposed
suus panc_103 not saving softmax
suus panc_103 voeg toe aan pred_gt tuples voor later
panc_106 (2, 82, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_106 transposed
suus panc_106 not saving softmax
suus panc_106 voeg toe aan pred_gt tuples voor later
panc_114 (2, 98, 451, 451)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 451, 451)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 76, 151, 227], [0, 76, 151, 227]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_114 transposed
suus panc_114 not saving softmax
suus panc_114 voeg toe aan pred_gt tuples voor later
panc_117 (2, 161, 421, 421)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 421, 421)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 98, 197], [0, 98, 197]]
number of tiles: 72
using precomputed Gaussian
prediction done
suus panc_117 transposed
suus panc_117 not saving softmax
suus panc_117 voeg toe aan pred_gt tuples voor later
panc_125 (2, 102, 594, 594)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_125 transposed
suus panc_125 not saving softmax
suus panc_125 voeg toe aan pred_gt tuples voor later
panc_135 (2, 120, 461, 461)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_135 transposed
suus panc_135 not saving softmax
suus panc_135 voeg toe aan pred_gt tuples voor later
panc_140 (2, 112, 523, 523)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_140 transposed
suus panc_140 not saving softmax
suus panc_140 voeg toe aan pred_gt tuples voor later
panc_166 (2, 95, 590, 590)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_166 transposed
suus panc_166 not saving softmax
suus panc_166 voeg toe aan pred_gt tuples voor later
panc_178 (2, 110, 511, 511)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_178 transposed
suus panc_178 not saving softmax
suus panc_178 voeg toe aan pred_gt tuples voor later
panc_187 (2, 95, 536, 536)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_187 transposed
suus panc_187 not saving softmax
suus panc_187 voeg toe aan pred_gt tuples voor later
panc_199 (2, 95, 512, 512)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_199 transposed
suus panc_199 not saving softmax
suus panc_199 voeg toe aan pred_gt tuples voor later
panc_200 (2, 89, 599, 599)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 599, 599)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 188, 281, 375], [0, 94, 188, 281, 375]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_200 transposed
suus panc_200 not saving softmax
suus panc_200 voeg toe aan pred_gt tuples voor later
panc_249 (2, 123, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 123, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50, 66, 83], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 150
using precomputed Gaussian
prediction done
suus panc_249 transposed
suus panc_249 not saving softmax
suus panc_249 voeg toe aan pred_gt tuples voor later
panc_262 (2, 76, 480, 480)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_262 transposed
suus panc_262 not saving softmax
suus panc_262 voeg toe aan pred_gt tuples voor later
panc_264 (2, 109, 534, 534)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 534, 534)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 103, 207, 310], [0, 103, 207, 310]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_264 transposed
suus panc_264 not saving softmax
suus panc_264 voeg toe aan pred_gt tuples voor later
panc_266 (2, 97, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_266 transposed
suus panc_266 not saving softmax
suus panc_266 voeg toe aan pred_gt tuples voor later
panc_269 (2, 113, 496, 496)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_269 transposed
suus panc_269 not saving softmax
suus panc_269 voeg toe aan pred_gt tuples voor later
panc_280 (2, 97, 592, 592)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_280 transposed
suus panc_280 not saving softmax
suus panc_280 voeg toe aan pred_gt tuples voor later
panc_283 (2, 107, 452, 452)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_283 transposed
suus panc_283 not saving softmax
suus panc_283 voeg toe aan pred_gt tuples voor later
panc_293 (2, 107, 571, 571)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_293 transposed
suus panc_293 not saving softmax
suus panc_293 voeg toe aan pred_gt tuples voor later
panc_301 (2, 83, 532, 532)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_301 transposed
suus panc_301 not saving softmax
suus panc_301 voeg toe aan pred_gt tuples voor later
panc_310 (2, 81, 588, 588)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_310 transposed
suus panc_310 not saving softmax
suus panc_310 voeg toe aan pred_gt tuples voor later
panc_312 (2, 75, 592, 592)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 75
using precomputed Gaussian
prediction done
suus panc_312 transposed
suus panc_312 not saving softmax
suus panc_312 voeg toe aan pred_gt tuples voor later
panc_313 (2, 95, 523, 523)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_313 transposed
suus panc_313 not saving softmax
suus panc_313 voeg toe aan pred_gt tuples voor later
panc_323 (2, 95, 612, 612)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 612, 612)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 97, 194, 291, 388], [0, 97, 194, 291, 388]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_323 transposed
suus panc_323 not saving softmax
suus panc_323 voeg toe aan pred_gt tuples voor later
panc_329 (2, 79, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 75
using precomputed Gaussian
prediction done
suus panc_329 transposed
suus panc_329 not saving softmax
suus panc_329 voeg toe aan pred_gt tuples voor later
panc_342 (2, 117, 522, 522)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_342 transposed
suus panc_342 not saving softmax
suus panc_342 voeg toe aan pred_gt tuples voor later
panc_343 (2, 86, 497, 497)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_343 transposed
suus panc_343 not saving softmax
suus panc_343 voeg toe aan pred_gt tuples voor later
panc_351 (2, 88, 430, 430)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_351 transposed
suus panc_351 not saving softmax
suus panc_351 voeg toe aan pred_gt tuples voor later
panc_354 (2, 162, 529, 529)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 162, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 70, 87, 105, 122], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 128
using precomputed Gaussian
prediction done
suus panc_354 transposed
suus panc_354 not saving softmax
suus panc_354 voeg toe aan pred_gt tuples voor later
panc_358 (2, 178, 465, 465)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 178, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 79, 99, 118, 138], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 128
using precomputed Gaussian
prediction done
suus panc_358 transposed
suus panc_358 not saving softmax
suus panc_358 voeg toe aan pred_gt tuples voor later
panc_361 (2, 136, 399, 399)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 136, 399, 399)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96], [0, 88, 175], [0, 88, 175]]
number of tiles: 54
using precomputed Gaussian
prediction done
suus panc_361 transposed
suus panc_361 not saving softmax
suus panc_361 voeg toe aan pred_gt tuples voor later
panc_366 (2, 121, 563, 563)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 563, 563)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 85, 170, 254, 339], [0, 85, 170, 254, 339]]
number of tiles: 150
using precomputed Gaussian
prediction done
suus panc_366 transposed
suus panc_366 not saving softmax
suus panc_366 voeg toe aan pred_gt tuples voor later
panc_370 (2, 182, 431, 431)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 431, 431)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 104, 207], [0, 104, 207]]
number of tiles: 81
using precomputed Gaussian
prediction done
suus panc_370 transposed
suus panc_370 not saving softmax
suus panc_370 voeg toe aan pred_gt tuples voor later
panc_380 (2, 126, 569, 569)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 150
using precomputed Gaussian
prediction done
suus panc_380 transposed
suus panc_380 not saving softmax
suus panc_380 voeg toe aan pred_gt tuples voor later
panc_388 (2, 114, 567, 567)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 567, 567)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 86, 172, 257, 343], [0, 86, 172, 257, 343]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_388 transposed
suus panc_388 not saving softmax
suus panc_388 voeg toe aan pred_gt tuples voor later
panc_389 (2, 118, 543, 543)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 118, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_389 transposed
suus panc_389 not saving softmax
suus panc_389 voeg toe aan pred_gt tuples voor later
panc_405 (2, 89, 517, 517)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_405 transposed
suus panc_405 not saving softmax
suus panc_405 voeg toe aan pred_gt tuples voor later
panc_414 (2, 84, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_414 transposed
suus panc_414 not saving softmax
suus panc_414 voeg toe aan pred_gt tuples voor later
panc_421 (2, 105, 620, 620)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 620, 620)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 99, 198, 297, 396], [0, 99, 198, 297, 396]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_421 transposed
suus panc_421 not saving softmax
suus panc_421 voeg toe aan pred_gt tuples voor later
2022-07-07 20:47:43.717490: finished prediction
2022-07-07 20:47:43.722276: evaluation of raw predictions
2022-07-07 20:47:59.667089: determining postprocessing
Foreground vs background
before: 0.8156157988880741
after:  0.8156541780041374
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_025.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_103.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_178.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_269.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_323.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_366.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_035.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_106.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_187.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_280.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_329.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_370.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_041.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_114.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_199.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_283.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_342.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_380.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_045.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_117.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_200.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_293.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_343.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_388.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_052.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_125.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_249.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_301.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_351.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_389.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_056.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_135.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_262.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_310.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_354.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_405.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_078.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_140.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_264.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_312.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_358.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_414.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_091.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_166.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_266.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_313.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_361.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/validation_raw/panc_421.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='2', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-07 20:48:50.801709: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-07 20:48:57.659441: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-07 20:48:57.675278: The split file contains 5 splits.
2022-07-07 20:48:57.677546: Desired fold for training: 2
2022-07-07 20:48:57.679552: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-07 20:49:00.439261: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-07 20:49:13.797792: Unable to plot network architecture:
2022-07-07 20:49:13.802266: local variable 'g' referenced before assignment
2022-07-07 20:49:13.804509: 
printing the network instead:

2022-07-07 20:49:13.806683: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-07 20:49:13.810808: 

2022-07-07 20:49:13.813015: 
epoch:  0
2022-07-07 20:50:32.750914: train loss : 0.0173
2022-07-07 20:50:46.486865: validation loss: -0.1132
2022-07-07 20:50:46.489620: Average global foreground Dice: [0.223]
2022-07-07 20:50:46.495141: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:50:46.886291: Suus1 maybe_update_lr lr: 0.009982
2022-07-07 20:50:46.889071: This epoch took 93.073952 s

2022-07-07 20:50:46.891496: 
epoch:  1
2022-07-07 20:51:54.841458: train loss : -0.1605
2022-07-07 20:52:09.986313: validation loss: -0.2432
2022-07-07 20:52:09.990373: Average global foreground Dice: [0.3706]
2022-07-07 20:52:09.992409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:52:10.388739: Suus1 maybe_update_lr lr: 0.009964
2022-07-07 20:52:10.390963: saving best epoch checkpoint...
2022-07-07 20:52:10.446690: saving checkpoint...
2022-07-07 20:52:11.403282: done, saving took 1.01 seconds
2022-07-07 20:52:11.420706: This epoch took 84.526942 s

2022-07-07 20:52:11.424182: 
epoch:  2
2022-07-07 20:53:19.473387: train loss : -0.2280
2022-07-07 20:53:25.166513: validation loss: -0.2379
2022-07-07 20:53:25.170063: Average global foreground Dice: [0.3436]
2022-07-07 20:53:25.174642: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:53:25.588917: Suus1 maybe_update_lr lr: 0.009946
2022-07-07 20:53:25.591082: saving best epoch checkpoint...
2022-07-07 20:53:25.641379: saving checkpoint...
2022-07-07 20:53:26.934443: done, saving took 1.34 seconds
2022-07-07 20:53:26.953405: This epoch took 75.526257 s

2022-07-07 20:53:26.955908: 
epoch:  3
2022-07-07 20:54:35.252320: train loss : -0.2649
2022-07-07 20:54:40.824235: validation loss: -0.3192
2022-07-07 20:54:40.827702: Average global foreground Dice: [0.4299]
2022-07-07 20:54:40.829990: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:54:41.262988: Suus1 maybe_update_lr lr: 0.009928
2022-07-07 20:54:41.265265: saving best epoch checkpoint...
2022-07-07 20:54:41.328970: saving checkpoint...
2022-07-07 20:54:42.276903: done, saving took 1.01 seconds
2022-07-07 20:54:42.292390: This epoch took 75.333975 s

2022-07-07 20:54:42.294477: 
epoch:  4
2022-07-07 20:55:50.239960: train loss : -0.3128
2022-07-07 20:55:56.888287: validation loss: -0.3964
2022-07-07 20:55:56.891284: Average global foreground Dice: [0.4818]
2022-07-07 20:55:56.893304: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:55:57.296862: Suus1 maybe_update_lr lr: 0.00991
2022-07-07 20:55:57.298983: saving best epoch checkpoint...
2022-07-07 20:55:57.352240: saving checkpoint...
2022-07-07 20:55:58.493945: done, saving took 1.19 seconds
2022-07-07 20:55:58.512805: This epoch took 76.216213 s

2022-07-07 20:55:58.515182: 
epoch:  5
2022-07-07 20:57:06.656484: train loss : -0.3590
2022-07-07 20:57:13.018113: validation loss: -0.4038
2022-07-07 20:57:13.020638: Average global foreground Dice: [0.5076]
2022-07-07 20:57:13.022853: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:57:13.437389: Suus1 maybe_update_lr lr: 0.009892
2022-07-07 20:57:13.439558: saving best epoch checkpoint...
2022-07-07 20:57:13.506450: saving checkpoint...
2022-07-07 20:57:14.527157: done, saving took 1.09 seconds
2022-07-07 20:57:14.620314: This epoch took 76.102526 s

2022-07-07 20:57:14.686234: 
epoch:  6
2022-07-07 20:58:22.908798: train loss : -0.4010
2022-07-07 20:58:28.362303: validation loss: -0.4796
2022-07-07 20:58:28.365019: Average global foreground Dice: [0.5696]
2022-07-07 20:58:28.366926: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:58:28.776608: Suus1 maybe_update_lr lr: 0.009874
2022-07-07 20:58:28.778806: saving best epoch checkpoint...
2022-07-07 20:58:28.830146: saving checkpoint...
2022-07-07 20:58:29.859992: done, saving took 1.08 seconds
2022-07-07 20:58:29.875460: This epoch took 75.123196 s

2022-07-07 20:58:29.877619: 
epoch:  7
2022-07-07 20:59:38.288591: train loss : -0.3882
2022-07-07 20:59:43.606804: validation loss: -0.4628
2022-07-07 20:59:43.610574: Average global foreground Dice: [0.5649]
2022-07-07 20:59:43.612902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 20:59:44.040188: Suus1 maybe_update_lr lr: 0.009856
2022-07-07 20:59:44.042370: saving best epoch checkpoint...
2022-07-07 20:59:44.108945: saving checkpoint...
2022-07-07 20:59:45.131541: done, saving took 1.09 seconds
2022-07-07 20:59:45.146111: This epoch took 75.266414 s

2022-07-07 20:59:45.148204: 
epoch:  8
2022-07-07 21:00:53.162493: train loss : -0.4573
2022-07-07 21:00:59.689344: validation loss: -0.4269
2022-07-07 21:00:59.693729: Average global foreground Dice: [0.5161]
2022-07-07 21:00:59.714885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:01:00.210636: Suus1 maybe_update_lr lr: 0.009838
2022-07-07 21:01:00.213712: saving best epoch checkpoint...
2022-07-07 21:01:00.271163: saving checkpoint...
2022-07-07 21:01:01.406263: done, saving took 1.19 seconds
2022-07-07 21:01:01.421813: This epoch took 76.271651 s

2022-07-07 21:01:01.423784: 
epoch:  9
2022-07-07 21:02:09.343444: train loss : -0.4524
2022-07-07 21:02:14.769429: validation loss: -0.5245
2022-07-07 21:02:14.772271: Average global foreground Dice: [0.6052]
2022-07-07 21:02:14.774532: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:02:15.197808: Suus1 maybe_update_lr lr: 0.00982
2022-07-07 21:02:15.200053: saving best epoch checkpoint...
2022-07-07 21:02:15.248686: saving checkpoint...
2022-07-07 21:02:16.268915: done, saving took 1.07 seconds
2022-07-07 21:02:16.285533: This epoch took 74.859861 s

2022-07-07 21:02:16.287688: 
epoch:  10
2022-07-07 21:03:24.426881: train loss : -0.4932
2022-07-07 21:03:29.439833: validation loss: -0.5707
2022-07-07 21:03:29.451339: Average global foreground Dice: [0.6504]
2022-07-07 21:03:29.455161: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:03:29.934602: Suus1 maybe_update_lr lr: 0.009802
2022-07-07 21:03:29.936938: saving best epoch checkpoint...
2022-07-07 21:03:29.980726: saving checkpoint...
2022-07-07 21:03:31.304786: done, saving took 1.37 seconds
2022-07-07 21:03:31.319727: This epoch took 75.030065 s

2022-07-07 21:03:31.321985: 
epoch:  11
2022-07-07 21:04:39.422984: train loss : -0.4981
2022-07-07 21:04:44.677520: validation loss: -0.5249
2022-07-07 21:04:44.695539: Average global foreground Dice: [0.6083]
2022-07-07 21:04:44.700284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:04:45.350735: Suus1 maybe_update_lr lr: 0.009784
2022-07-07 21:04:45.353738: saving best epoch checkpoint...
2022-07-07 21:04:45.425419: saving checkpoint...
2022-07-07 21:04:46.530043: done, saving took 1.17 seconds
2022-07-07 21:04:46.545072: This epoch took 75.220941 s

2022-07-07 21:04:46.547626: 
epoch:  12
2022-07-07 21:05:54.677182: train loss : -0.5232
2022-07-07 21:05:59.938456: validation loss: -0.5552
2022-07-07 21:05:59.940746: Average global foreground Dice: [0.6475]
2022-07-07 21:05:59.943306: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:06:00.390419: Suus1 maybe_update_lr lr: 0.009766
2022-07-07 21:06:00.393127: saving best epoch checkpoint...
2022-07-07 21:06:00.486984: saving checkpoint...
2022-07-07 21:06:01.834289: done, saving took 1.44 seconds
2022-07-07 21:06:01.850962: This epoch took 75.300218 s

2022-07-07 21:06:01.852984: 
epoch:  13
2022-07-07 21:07:09.870904: train loss : -0.5365
2022-07-07 21:07:14.894997: validation loss: -0.5509
2022-07-07 21:07:14.899630: Average global foreground Dice: [0.6201]
2022-07-07 21:07:14.912197: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:07:15.419678: Suus1 maybe_update_lr lr: 0.009748
2022-07-07 21:07:15.432974: saving best epoch checkpoint...
2022-07-07 21:07:15.482682: saving checkpoint...
2022-07-07 21:07:16.569581: done, saving took 1.13 seconds
2022-07-07 21:07:16.584449: This epoch took 74.729526 s

2022-07-07 21:07:16.586513: 
epoch:  14
2022-07-07 21:08:24.334434: train loss : -0.5277
2022-07-07 21:08:29.137250: validation loss: -0.5552
2022-07-07 21:08:29.152853: Average global foreground Dice: [0.629]
2022-07-07 21:08:29.155413: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:08:29.802790: Suus1 maybe_update_lr lr: 0.00973
2022-07-07 21:08:29.816296: saving best epoch checkpoint...
2022-07-07 21:08:29.873028: saving checkpoint...
2022-07-07 21:08:31.003656: done, saving took 1.18 seconds
2022-07-07 21:08:31.018288: This epoch took 74.429746 s

2022-07-07 21:08:31.020644: 
epoch:  15
2022-07-07 21:09:38.919919: train loss : -0.5576
2022-07-07 21:09:44.003083: validation loss: -0.5379
2022-07-07 21:09:44.006908: Average global foreground Dice: [0.6122]
2022-07-07 21:09:44.009407: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:09:44.451538: Suus1 maybe_update_lr lr: 0.009712
2022-07-07 21:09:44.453756: saving best epoch checkpoint...
2022-07-07 21:09:44.498236: saving checkpoint...
2022-07-07 21:09:45.482253: done, saving took 1.03 seconds
2022-07-07 21:09:45.496989: This epoch took 74.474100 s

2022-07-07 21:09:45.498915: 
epoch:  16
2022-07-07 21:10:53.322123: train loss : -0.5617
2022-07-07 21:10:58.505764: validation loss: -0.6195
2022-07-07 21:10:58.508697: Average global foreground Dice: [0.6844]
2022-07-07 21:10:58.510806: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:10:58.957899: Suus1 maybe_update_lr lr: 0.009693
2022-07-07 21:10:58.960040: saving best epoch checkpoint...
2022-07-07 21:10:59.010530: saving checkpoint...
2022-07-07 21:11:00.202845: done, saving took 1.24 seconds
2022-07-07 21:11:00.218003: This epoch took 74.717169 s

2022-07-07 21:11:00.220314: 
epoch:  17
2022-07-07 21:12:08.325890: train loss : -0.5742
2022-07-07 21:12:13.271705: validation loss: -0.6114
2022-07-07 21:12:13.286569: Average global foreground Dice: [0.6865]
2022-07-07 21:12:13.305259: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:12:13.800842: Suus1 maybe_update_lr lr: 0.009675
2022-07-07 21:12:13.832253: saving best epoch checkpoint...
2022-07-07 21:12:13.940185: saving checkpoint...
2022-07-07 21:12:15.025723: done, saving took 1.19 seconds
2022-07-07 21:12:15.041428: This epoch took 74.818824 s

2022-07-07 21:12:15.043594: 
epoch:  18
2022-07-07 21:13:23.138855: train loss : -0.5789
2022-07-07 21:13:27.823802: validation loss: -0.6153
2022-07-07 21:13:27.827535: Average global foreground Dice: [0.6821]
2022-07-07 21:13:27.846337: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:13:28.405720: Suus1 maybe_update_lr lr: 0.009657
2022-07-07 21:13:28.408305: saving best epoch checkpoint...
2022-07-07 21:13:28.456544: saving checkpoint...
2022-07-07 21:13:29.666864: done, saving took 1.26 seconds
2022-07-07 21:13:29.681805: This epoch took 74.636117 s

2022-07-07 21:13:29.683864: 
epoch:  19
2022-07-07 21:14:37.404631: train loss : -0.5775
2022-07-07 21:14:42.509064: validation loss: -0.6234
2022-07-07 21:14:42.526344: Average global foreground Dice: [0.6935]
2022-07-07 21:14:42.528587: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:14:43.010995: Suus1 maybe_update_lr lr: 0.009639
2022-07-07 21:14:43.040367: saving best epoch checkpoint...
2022-07-07 21:14:43.106138: saving checkpoint...
2022-07-07 21:14:44.335628: done, saving took 1.28 seconds
2022-07-07 21:14:44.354091: This epoch took 74.667855 s

2022-07-07 21:14:44.356589: 
epoch:  20
2022-07-07 21:15:52.159302: train loss : -0.5681
2022-07-07 21:15:57.008448: validation loss: -0.5772
2022-07-07 21:15:57.017522: Average global foreground Dice: [0.6562]
2022-07-07 21:15:57.019559: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:15:57.791616: Suus1 maybe_update_lr lr: 0.009621
2022-07-07 21:15:57.795468: saving best epoch checkpoint...
2022-07-07 21:15:57.870692: saving checkpoint...
2022-07-07 21:15:59.009945: done, saving took 1.19 seconds
2022-07-07 21:15:59.023947: This epoch took 74.665320 s

2022-07-07 21:15:59.025913: 
epoch:  21
2022-07-07 21:17:06.944510: train loss : -0.5891
2022-07-07 21:17:11.530520: validation loss: -0.5960
2022-07-07 21:17:11.560466: Average global foreground Dice: [0.6666]
2022-07-07 21:17:11.596285: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:17:12.247156: Suus1 maybe_update_lr lr: 0.009603
2022-07-07 21:17:12.269268: saving best epoch checkpoint...
2022-07-07 21:17:12.315240: saving checkpoint...
2022-07-07 21:17:13.416730: done, saving took 1.13 seconds
2022-07-07 21:17:13.430318: This epoch took 74.402054 s

2022-07-07 21:17:13.432578: 
epoch:  22
2022-07-07 21:18:21.180841: train loss : -0.5854
2022-07-07 21:18:26.117404: validation loss: -0.6252
2022-07-07 21:18:26.175658: Average global foreground Dice: [0.6917]
2022-07-07 21:18:26.203194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:18:26.714160: Suus1 maybe_update_lr lr: 0.009585
2022-07-07 21:18:26.716948: saving best epoch checkpoint...
2022-07-07 21:18:26.753394: saving checkpoint...
2022-07-07 21:18:28.078355: done, saving took 1.36 seconds
2022-07-07 21:18:28.112482: This epoch took 74.677837 s

2022-07-07 21:18:28.114900: 
epoch:  23
2022-07-07 21:19:35.848403: train loss : -0.6275
2022-07-07 21:19:40.377374: validation loss: -0.6322
2022-07-07 21:19:40.398305: Average global foreground Dice: [0.6934]
2022-07-07 21:19:40.414079: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:19:40.914737: Suus1 maybe_update_lr lr: 0.009567
2022-07-07 21:19:40.916988: saving best epoch checkpoint...
2022-07-07 21:19:40.964311: saving checkpoint...
2022-07-07 21:19:41.994581: done, saving took 1.07 seconds
2022-07-07 21:19:42.013020: This epoch took 73.895715 s

2022-07-07 21:19:42.016117: 
epoch:  24
2022-07-07 21:20:49.767336: train loss : -0.6278
2022-07-07 21:20:54.200871: validation loss: -0.6066
2022-07-07 21:20:54.213836: Average global foreground Dice: [0.6808]
2022-07-07 21:20:54.247526: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:20:54.777994: Suus1 maybe_update_lr lr: 0.009549
2022-07-07 21:20:54.788591: saving best epoch checkpoint...
2022-07-07 21:20:54.834053: saving checkpoint...
2022-07-07 21:20:56.024235: done, saving took 1.22 seconds
2022-07-07 21:20:56.037563: This epoch took 74.017095 s

2022-07-07 21:20:56.039536: 
epoch:  25
2022-07-07 21:22:03.740546: train loss : -0.5950
2022-07-07 21:22:08.244569: validation loss: -0.6411
2022-07-07 21:22:08.258962: Average global foreground Dice: [0.7004]
2022-07-07 21:22:08.284096: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:22:08.900245: Suus1 maybe_update_lr lr: 0.009531
2022-07-07 21:22:08.915967: saving best epoch checkpoint...
2022-07-07 21:22:08.961970: saving checkpoint...
2022-07-07 21:22:10.164271: done, saving took 1.24 seconds
2022-07-07 21:22:10.177376: This epoch took 74.135995 s

2022-07-07 21:22:10.179518: 
epoch:  26
2022-07-07 21:23:18.006682: train loss : -0.6350
2022-07-07 21:23:22.850343: validation loss: -0.6659
2022-07-07 21:23:22.862521: Average global foreground Dice: [0.7247]
2022-07-07 21:23:22.864991: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:23:23.399892: Suus1 maybe_update_lr lr: 0.009513
2022-07-07 21:23:23.402323: saving best epoch checkpoint...
2022-07-07 21:23:23.450888: saving checkpoint...
2022-07-07 21:23:24.606277: done, saving took 1.20 seconds
2022-07-07 21:23:24.621159: This epoch took 74.439306 s

2022-07-07 21:23:24.623449: 
epoch:  27
2022-07-07 21:24:32.833000: train loss : -0.6187
2022-07-07 21:24:37.377634: validation loss: -0.6350
2022-07-07 21:24:37.380471: Average global foreground Dice: [0.6871]
2022-07-07 21:24:37.382553: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:24:37.812570: Suus1 maybe_update_lr lr: 0.009495
2022-07-07 21:24:37.814857: saving best epoch checkpoint...
2022-07-07 21:24:37.863138: saving checkpoint...
2022-07-07 21:24:38.932375: done, saving took 1.12 seconds
2022-07-07 21:24:38.946627: This epoch took 74.320550 s

2022-07-07 21:24:38.948570: 
epoch:  28
2022-07-07 21:25:47.123329: train loss : -0.6288
2022-07-07 21:25:51.801209: validation loss: -0.6231
2022-07-07 21:25:51.833692: Average global foreground Dice: [0.6936]
2022-07-07 21:25:51.868279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:25:52.505553: Suus1 maybe_update_lr lr: 0.009476
2022-07-07 21:25:52.507740: saving best epoch checkpoint...
2022-07-07 21:25:52.565870: saving checkpoint...
2022-07-07 21:25:53.914152: done, saving took 1.40 seconds
2022-07-07 21:25:53.927844: This epoch took 74.977233 s

2022-07-07 21:25:53.929939: 
epoch:  29
2022-07-07 21:27:01.977666: train loss : -0.6340
2022-07-07 21:27:06.506008: validation loss: -0.6468
2022-07-07 21:27:06.517703: Average global foreground Dice: [0.7106]
2022-07-07 21:27:06.522024: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:27:07.065914: Suus1 maybe_update_lr lr: 0.009458
2022-07-07 21:27:07.081257: saving best epoch checkpoint...
2022-07-07 21:27:07.139005: saving checkpoint...
2022-07-07 21:27:08.380047: done, saving took 1.28 seconds
2022-07-07 21:27:08.393748: This epoch took 74.461665 s

2022-07-07 21:27:08.395888: 
epoch:  30
2022-07-07 21:28:16.455048: train loss : -0.6368
2022-07-07 21:28:21.250273: validation loss: -0.6462
2022-07-07 21:28:21.253232: Average global foreground Dice: [0.7102]
2022-07-07 21:28:21.255687: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:28:21.782789: Suus1 maybe_update_lr lr: 0.00944
2022-07-07 21:28:21.796409: saving best epoch checkpoint...
2022-07-07 21:28:21.836284: saving checkpoint...
2022-07-07 21:28:23.002835: done, saving took 1.20 seconds
2022-07-07 21:28:23.016208: This epoch took 74.618312 s

2022-07-07 21:28:23.018311: 
epoch:  31
2022-07-07 21:29:30.960413: train loss : -0.6350
2022-07-07 21:29:35.645074: validation loss: -0.6787
2022-07-07 21:29:35.674730: Average global foreground Dice: [0.7413]
2022-07-07 21:29:35.683810: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:29:36.180192: Suus1 maybe_update_lr lr: 0.009422
2022-07-07 21:29:36.182215: saving best epoch checkpoint...
2022-07-07 21:29:36.217164: saving checkpoint...
2022-07-07 21:29:37.299296: done, saving took 1.11 seconds
2022-07-07 21:29:37.318759: This epoch took 74.298378 s

2022-07-07 21:29:37.320958: 
epoch:  32
2022-07-07 21:30:45.160367: train loss : -0.6486
2022-07-07 21:30:49.811548: validation loss: -0.6958
2022-07-07 21:30:49.815377: Average global foreground Dice: [0.7485]
2022-07-07 21:30:49.822475: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:30:50.293312: Suus1 maybe_update_lr lr: 0.009404
2022-07-07 21:30:50.303088: saving best epoch checkpoint...
2022-07-07 21:30:50.344720: saving checkpoint...
2022-07-07 21:30:51.678737: done, saving took 1.37 seconds
2022-07-07 21:30:51.692914: This epoch took 74.369802 s

2022-07-07 21:30:51.694906: 
epoch:  33
2022-07-07 21:31:59.406199: train loss : -0.6330
2022-07-07 21:32:04.010496: validation loss: -0.6955
2022-07-07 21:32:04.015644: Average global foreground Dice: [0.7487]
2022-07-07 21:32:04.022329: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:32:04.532281: Suus1 maybe_update_lr lr: 0.009386
2022-07-07 21:32:04.535086: saving best epoch checkpoint...
2022-07-07 21:32:04.568470: saving checkpoint...
2022-07-07 21:32:05.623028: done, saving took 1.09 seconds
2022-07-07 21:32:05.638183: This epoch took 73.941231 s

2022-07-07 21:32:05.640374: 
epoch:  34
2022-07-07 21:33:13.464013: train loss : -0.6412
2022-07-07 21:33:18.547049: validation loss: -0.6332
2022-07-07 21:33:18.550147: Average global foreground Dice: [0.7028]
2022-07-07 21:33:18.552322: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:33:19.121154: Suus1 maybe_update_lr lr: 0.009368
2022-07-07 21:33:19.123661: saving best epoch checkpoint...
2022-07-07 21:33:19.170269: saving checkpoint...
2022-07-07 21:33:20.202106: done, saving took 1.07 seconds
2022-07-07 21:33:20.216543: This epoch took 74.574080 s

2022-07-07 21:33:20.218682: 
epoch:  35
2022-07-07 21:34:27.905967: train loss : -0.6536
2022-07-07 21:34:32.400223: validation loss: -0.6975
2022-07-07 21:34:32.403457: Average global foreground Dice: [0.7498]
2022-07-07 21:34:32.407654: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:34:33.007947: Suus1 maybe_update_lr lr: 0.00935
2022-07-07 21:34:33.010340: saving best epoch checkpoint...
2022-07-07 21:34:33.044919: saving checkpoint...
2022-07-07 21:34:34.073961: done, saving took 1.06 seconds
2022-07-07 21:34:34.087389: This epoch took 73.866599 s

2022-07-07 21:34:34.089479: 
epoch:  36
2022-07-07 21:35:41.475439: train loss : -0.6527
2022-07-07 21:35:45.999087: validation loss: -0.6685
2022-07-07 21:35:46.001978: Average global foreground Dice: [0.7207]
2022-07-07 21:35:46.004029: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:35:46.611727: Suus1 maybe_update_lr lr: 0.009331
2022-07-07 21:35:46.613817: saving best epoch checkpoint...
2022-07-07 21:35:46.645794: saving checkpoint...
2022-07-07 21:35:47.500547: done, saving took 0.88 seconds
2022-07-07 21:35:47.514186: This epoch took 73.422835 s

2022-07-07 21:35:47.516283: 
epoch:  37
2022-07-07 21:36:55.007772: train loss : -0.6554
2022-07-07 21:36:59.351903: validation loss: -0.6628
2022-07-07 21:36:59.354864: Average global foreground Dice: [0.724]
2022-07-07 21:36:59.359522: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:36:59.827158: Suus1 maybe_update_lr lr: 0.009313
2022-07-07 21:36:59.829245: saving best epoch checkpoint...
2022-07-07 21:36:59.860207: saving checkpoint...
2022-07-07 21:37:00.797361: done, saving took 0.97 seconds
2022-07-07 21:37:00.811655: This epoch took 73.293398 s

2022-07-07 21:37:00.813827: 
epoch:  38
2022-07-07 21:38:08.133335: train loss : -0.6752
2022-07-07 21:38:12.497703: validation loss: -0.7161
2022-07-07 21:38:12.500747: Average global foreground Dice: [0.7632]
2022-07-07 21:38:12.502690: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:38:12.997397: Suus1 maybe_update_lr lr: 0.009295
2022-07-07 21:38:13.000166: saving best epoch checkpoint...
2022-07-07 21:38:13.034917: saving checkpoint...
2022-07-07 21:38:13.884440: done, saving took 0.88 seconds
2022-07-07 21:38:13.898674: This epoch took 73.082674 s

2022-07-07 21:38:13.900882: 
epoch:  39
2022-07-07 21:39:21.378068: train loss : -0.6753
2022-07-07 21:39:25.744280: validation loss: -0.6785
2022-07-07 21:39:25.758821: Average global foreground Dice: [0.7345]
2022-07-07 21:39:25.761068: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:39:26.278110: Suus1 maybe_update_lr lr: 0.009277
2022-07-07 21:39:26.280216: saving best epoch checkpoint...
2022-07-07 21:39:26.312804: saving checkpoint...
2022-07-07 21:39:27.144503: done, saving took 0.86 seconds
2022-07-07 21:39:27.158684: This epoch took 73.255647 s

2022-07-07 21:39:27.161842: 
epoch:  40
2022-07-07 21:40:34.483232: train loss : -0.6539
2022-07-07 21:40:38.882207: validation loss: -0.6728
2022-07-07 21:40:38.908221: Average global foreground Dice: [0.7281]
2022-07-07 21:40:38.920307: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:40:39.418396: Suus1 maybe_update_lr lr: 0.009259
2022-07-07 21:40:39.420556: saving best epoch checkpoint...
2022-07-07 21:40:39.453693: saving checkpoint...
2022-07-07 21:40:40.311706: done, saving took 0.89 seconds
2022-07-07 21:40:40.325204: This epoch took 73.161116 s

2022-07-07 21:40:40.327271: 
epoch:  41
2022-07-07 21:41:47.690259: train loss : -0.6654
2022-07-07 21:41:52.088727: validation loss: -0.6930
2022-07-07 21:41:52.091954: Average global foreground Dice: [0.7514]
2022-07-07 21:41:52.095835: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:41:52.551284: Suus1 maybe_update_lr lr: 0.009241
2022-07-07 21:41:52.557952: saving best epoch checkpoint...
2022-07-07 21:41:52.592135: saving checkpoint...
2022-07-07 21:41:53.488560: done, saving took 0.93 seconds
2022-07-07 21:41:53.503254: This epoch took 73.173759 s

2022-07-07 21:41:53.505540: 
epoch:  42
2022-07-07 21:43:00.952772: train loss : -0.6667
2022-07-07 21:43:05.423217: validation loss: -0.6861
2022-07-07 21:43:05.427215: Average global foreground Dice: [0.742]
2022-07-07 21:43:05.449280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:43:05.981968: Suus1 maybe_update_lr lr: 0.009223
2022-07-07 21:43:05.984411: saving best epoch checkpoint...
2022-07-07 21:43:06.034770: saving checkpoint...
2022-07-07 21:43:07.144910: done, saving took 1.16 seconds
2022-07-07 21:43:07.159367: This epoch took 73.651655 s

2022-07-07 21:43:07.161384: 
epoch:  43
2022-07-07 21:44:14.486478: train loss : -0.6937
2022-07-07 21:44:18.977015: validation loss: -0.7258
2022-07-07 21:44:18.987890: Average global foreground Dice: [0.7727]
2022-07-07 21:44:18.993698: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:44:19.468129: Suus1 maybe_update_lr lr: 0.009204
2022-07-07 21:44:19.471032: saving best epoch checkpoint...
2022-07-07 21:44:19.515299: saving checkpoint...
2022-07-07 21:44:20.473841: done, saving took 1.00 seconds
2022-07-07 21:44:20.489295: This epoch took 73.325610 s

2022-07-07 21:44:20.491727: 
epoch:  44
2022-07-07 21:45:27.949296: train loss : -0.6821
2022-07-07 21:45:32.586728: validation loss: -0.6994
2022-07-07 21:45:32.590704: Average global foreground Dice: [0.7568]
2022-07-07 21:45:32.592835: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:45:33.139520: Suus1 maybe_update_lr lr: 0.009186
2022-07-07 21:45:33.141028: saving best epoch checkpoint...
2022-07-07 21:45:33.181600: saving checkpoint...
2022-07-07 21:45:34.276206: done, saving took 1.13 seconds
2022-07-07 21:45:34.289339: This epoch took 73.795364 s

2022-07-07 21:45:34.291335: 
epoch:  45
2022-07-07 21:46:41.591868: train loss : -0.6871
2022-07-07 21:46:45.959972: validation loss: -0.7018
2022-07-07 21:46:45.966302: Average global foreground Dice: [0.7577]
2022-07-07 21:46:45.968497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:46:46.408609: Suus1 maybe_update_lr lr: 0.009168
2022-07-07 21:46:46.410705: saving best epoch checkpoint...
2022-07-07 21:46:46.443913: saving checkpoint...
2022-07-07 21:46:47.398211: done, saving took 0.99 seconds
2022-07-07 21:46:47.411931: This epoch took 73.118703 s

2022-07-07 21:46:47.414011: 
epoch:  46
2022-07-07 21:47:54.753559: train loss : -0.6873
2022-07-07 21:47:59.482972: validation loss: -0.7127
2022-07-07 21:47:59.514716: Average global foreground Dice: [0.7599]
2022-07-07 21:47:59.519374: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:48:00.035891: Suus1 maybe_update_lr lr: 0.00915
2022-07-07 21:48:00.038050: saving best epoch checkpoint...
2022-07-07 21:48:00.072919: saving checkpoint...
2022-07-07 21:48:01.086731: done, saving took 1.05 seconds
2022-07-07 21:48:01.100009: This epoch took 73.684065 s

2022-07-07 21:48:01.102536: 
epoch:  47
2022-07-07 21:49:08.482350: train loss : -0.6818
2022-07-07 21:49:12.948002: validation loss: -0.7057
2022-07-07 21:49:12.953735: Average global foreground Dice: [0.7583]
2022-07-07 21:49:12.955865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:49:13.480798: Suus1 maybe_update_lr lr: 0.009132
2022-07-07 21:49:13.483243: saving best epoch checkpoint...
2022-07-07 21:49:13.519164: saving checkpoint...
2022-07-07 21:49:14.364460: done, saving took 0.88 seconds
2022-07-07 21:49:14.378555: This epoch took 73.273973 s

2022-07-07 21:49:14.380882: 
epoch:  48
2022-07-07 21:50:21.632314: train loss : -0.6762
2022-07-07 21:50:26.046236: validation loss: -0.7087
2022-07-07 21:50:26.055452: Average global foreground Dice: [0.7612]
2022-07-07 21:50:26.061738: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:50:26.654480: Suus1 maybe_update_lr lr: 0.009114
2022-07-07 21:50:26.660804: saving best epoch checkpoint...
2022-07-07 21:50:26.695995: saving checkpoint...
2022-07-07 21:50:27.534859: done, saving took 0.87 seconds
2022-07-07 21:50:27.547964: This epoch took 73.164696 s

2022-07-07 21:50:27.549954: 
epoch:  49
2022-07-07 21:51:35.037375: train loss : -0.6829
2022-07-07 21:51:39.382209: validation loss: -0.6941
2022-07-07 21:51:39.397976: Average global foreground Dice: [0.7492]
2022-07-07 21:51:39.406219: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:51:40.043640: Suus1 maybe_update_lr lr: 0.009095
2022-07-07 21:51:40.046136: saving scheduled checkpoint file...
2022-07-07 21:51:40.081139: saving checkpoint...
2022-07-07 21:51:41.018484: done, saving took 0.97 seconds
2022-07-07 21:51:41.034866: done
2022-07-07 21:51:41.037657: saving best epoch checkpoint...
2022-07-07 21:51:41.066017: saving checkpoint...
2022-07-07 21:51:41.998213: done, saving took 0.96 seconds
2022-07-07 21:51:42.011755: This epoch took 74.459776 s

2022-07-07 21:51:42.013891: 
epoch:  50
2022-07-07 21:52:49.252371: train loss : -0.6943
2022-07-07 21:52:53.648577: validation loss: -0.6860
2022-07-07 21:52:53.695216: Average global foreground Dice: [0.7395]
2022-07-07 21:52:53.697737: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:52:54.140631: Suus1 maybe_update_lr lr: 0.009077
2022-07-07 21:52:54.142878: saving best epoch checkpoint...
2022-07-07 21:52:54.179674: saving checkpoint...
2022-07-07 21:52:55.020407: done, saving took 0.88 seconds
2022-07-07 21:52:55.034361: This epoch took 73.018427 s

2022-07-07 21:52:55.036556: 
epoch:  51
2022-07-07 21:54:02.240824: train loss : -0.7040
2022-07-07 21:54:06.652282: validation loss: -0.6982
2022-07-07 21:54:06.667784: Average global foreground Dice: [0.7492]
2022-07-07 21:54:06.681863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:54:07.215202: Suus1 maybe_update_lr lr: 0.009059
2022-07-07 21:54:07.217490: saving best epoch checkpoint...
2022-07-07 21:54:07.271765: saving checkpoint...
2022-07-07 21:54:08.211458: done, saving took 0.98 seconds
2022-07-07 21:54:08.225749: This epoch took 73.187170 s

2022-07-07 21:54:08.227754: 
epoch:  52
2022-07-07 21:55:15.474492: train loss : -0.7056
2022-07-07 21:55:19.940410: validation loss: -0.7129
2022-07-07 21:55:19.943581: Average global foreground Dice: [0.7712]
2022-07-07 21:55:19.955633: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:55:20.446187: Suus1 maybe_update_lr lr: 0.009041
2022-07-07 21:55:20.448348: saving best epoch checkpoint...
2022-07-07 21:55:20.485084: saving checkpoint...
2022-07-07 21:55:21.671933: done, saving took 1.22 seconds
2022-07-07 21:55:21.687068: This epoch took 73.457096 s

2022-07-07 21:55:21.689503: 
epoch:  53
2022-07-07 21:56:28.987408: train loss : -0.7111
2022-07-07 21:56:33.318903: validation loss: -0.7388
2022-07-07 21:56:33.336898: Average global foreground Dice: [0.7832]
2022-07-07 21:56:33.340101: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:56:34.013255: Suus1 maybe_update_lr lr: 0.009023
2022-07-07 21:56:34.015876: saving best epoch checkpoint...
2022-07-07 21:56:34.047685: saving checkpoint...
2022-07-07 21:56:35.096271: done, saving took 1.08 seconds
2022-07-07 21:56:35.110198: This epoch took 73.418246 s

2022-07-07 21:56:35.112217: 
epoch:  54
2022-07-07 21:57:42.475159: train loss : -0.6954
2022-07-07 21:57:46.869160: validation loss: -0.6880
2022-07-07 21:57:46.872072: Average global foreground Dice: [0.7399]
2022-07-07 21:57:46.881737: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:57:47.467696: Suus1 maybe_update_lr lr: 0.009004
2022-07-07 21:57:47.469871: This epoch took 72.355679 s

2022-07-07 21:57:47.471713: 
epoch:  55
2022-07-07 21:58:54.817104: train loss : -0.7062
2022-07-07 21:58:59.460118: validation loss: -0.7220
2022-07-07 21:58:59.484691: Average global foreground Dice: [0.7701]
2022-07-07 21:58:59.501832: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 21:59:00.029633: Suus1 maybe_update_lr lr: 0.008986
2022-07-07 21:59:00.031910: saving best epoch checkpoint...
2022-07-07 21:59:00.067300: saving checkpoint...
2022-07-07 21:59:01.034326: done, saving took 1.00 seconds
2022-07-07 21:59:01.048280: This epoch took 73.574585 s

2022-07-07 21:59:01.050471: 
epoch:  56
2022-07-07 22:00:08.352467: train loss : -0.7052
2022-07-07 22:00:12.813213: validation loss: -0.7139
2022-07-07 22:00:12.816694: Average global foreground Dice: [0.7612]
2022-07-07 22:00:12.819036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:00:13.385253: Suus1 maybe_update_lr lr: 0.008968
2022-07-07 22:00:13.417334: saving best epoch checkpoint...
2022-07-07 22:00:13.479113: saving checkpoint...
2022-07-07 22:00:14.320931: done, saving took 0.87 seconds
2022-07-07 22:00:14.334850: This epoch took 73.282340 s

2022-07-07 22:00:14.337084: 
epoch:  57
2022-07-07 22:01:21.579399: train loss : -0.6769
2022-07-07 22:01:25.971550: validation loss: -0.7073
2022-07-07 22:01:25.996733: Average global foreground Dice: [0.7487]
2022-07-07 22:01:26.012015: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:01:26.544666: Suus1 maybe_update_lr lr: 0.00895
2022-07-07 22:01:26.548275: This epoch took 72.209234 s

2022-07-07 22:01:26.551595: 
epoch:  58
2022-07-07 22:02:33.831592: train loss : -0.7011
2022-07-07 22:02:38.275327: validation loss: -0.6851
2022-07-07 22:02:38.278586: Average global foreground Dice: [0.7353]
2022-07-07 22:02:38.280822: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:02:38.780083: Suus1 maybe_update_lr lr: 0.008931
2022-07-07 22:02:38.792856: This epoch took 72.239159 s

2022-07-07 22:02:38.795803: 
epoch:  59
2022-07-07 22:03:46.056454: train loss : -0.7008
2022-07-07 22:03:50.512776: validation loss: -0.6784
2022-07-07 22:03:50.517672: Average global foreground Dice: [0.7371]
2022-07-07 22:03:50.519969: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:03:50.996776: Suus1 maybe_update_lr lr: 0.008913
2022-07-07 22:03:50.999194: This epoch took 72.201347 s

2022-07-07 22:03:51.001132: 
epoch:  60
2022-07-07 22:04:58.423276: train loss : -0.6966
2022-07-07 22:05:02.796128: validation loss: -0.6991
2022-07-07 22:05:02.800397: Average global foreground Dice: [0.7539]
2022-07-07 22:05:02.802511: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:05:03.369413: Suus1 maybe_update_lr lr: 0.008895
2022-07-07 22:05:03.371811: This epoch took 72.368903 s

2022-07-07 22:05:03.373961: 
epoch:  61
2022-07-07 22:06:10.697349: train loss : -0.7257
2022-07-07 22:06:15.028388: validation loss: -0.7266
2022-07-07 22:06:15.062873: Average global foreground Dice: [0.7793]
2022-07-07 22:06:15.081393: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:06:15.651918: Suus1 maybe_update_lr lr: 0.008877
2022-07-07 22:06:15.654879: saving best epoch checkpoint...
2022-07-07 22:06:15.703456: saving checkpoint...
2022-07-07 22:06:16.688847: done, saving took 1.03 seconds
2022-07-07 22:06:16.704786: This epoch took 73.328842 s

2022-07-07 22:06:16.707161: 
epoch:  62
2022-07-07 22:07:23.927138: train loss : -0.7032
2022-07-07 22:07:28.293406: validation loss: -0.6976
2022-07-07 22:07:28.297281: Average global foreground Dice: [0.7462]
2022-07-07 22:07:28.306242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:07:28.753013: Suus1 maybe_update_lr lr: 0.008859
2022-07-07 22:07:28.755372: This epoch took 72.045827 s

2022-07-07 22:07:28.758528: 
epoch:  63
2022-07-07 22:08:36.120873: train loss : -0.6894
2022-07-07 22:08:40.529874: validation loss: -0.6871
2022-07-07 22:08:40.533221: Average global foreground Dice: [0.744]
2022-07-07 22:08:40.535043: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:08:41.056529: Suus1 maybe_update_lr lr: 0.00884
2022-07-07 22:08:41.097329: This epoch took 72.336535 s

2022-07-07 22:08:41.152238: 
epoch:  64
2022-07-07 22:09:48.445277: train loss : -0.6856
2022-07-07 22:09:52.904841: validation loss: -0.7257
2022-07-07 22:09:52.909045: Average global foreground Dice: [0.7731]
2022-07-07 22:09:52.912383: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:09:53.356898: Suus1 maybe_update_lr lr: 0.008822
2022-07-07 22:09:53.359344: saving best epoch checkpoint...
2022-07-07 22:09:53.413472: saving checkpoint...
2022-07-07 22:09:54.467072: done, saving took 1.11 seconds
2022-07-07 22:09:54.483268: This epoch took 73.308251 s

2022-07-07 22:09:54.485378: 
epoch:  65
2022-07-07 22:11:01.824944: train loss : -0.7163
2022-07-07 22:11:06.543906: validation loss: -0.7289
2022-07-07 22:11:06.570859: Average global foreground Dice: [0.7754]
2022-07-07 22:11:06.582310: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:11:07.107635: Suus1 maybe_update_lr lr: 0.008804
2022-07-07 22:11:07.109903: saving best epoch checkpoint...
2022-07-07 22:11:07.156783: saving checkpoint...
2022-07-07 22:11:08.152523: done, saving took 1.04 seconds
2022-07-07 22:11:08.168502: This epoch took 73.681095 s

2022-07-07 22:11:08.170864: 
epoch:  66
2022-07-07 22:12:15.451599: train loss : -0.7099
2022-07-07 22:12:19.926387: validation loss: -0.7230
2022-07-07 22:12:19.955262: Average global foreground Dice: [0.7709]
2022-07-07 22:12:19.967097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:12:20.426170: Suus1 maybe_update_lr lr: 0.008785
2022-07-07 22:12:20.427924: saving best epoch checkpoint...
2022-07-07 22:12:20.472429: saving checkpoint...
2022-07-07 22:12:21.380159: done, saving took 0.95 seconds
2022-07-07 22:12:21.396119: This epoch took 73.223037 s

2022-07-07 22:12:21.398201: 
epoch:  67
2022-07-07 22:13:28.758667: train loss : -0.7191
2022-07-07 22:13:33.329164: validation loss: -0.7135
2022-07-07 22:13:33.332358: Average global foreground Dice: [0.7645]
2022-07-07 22:13:33.334596: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:13:33.847088: Suus1 maybe_update_lr lr: 0.008767
2022-07-07 22:13:33.849361: saving best epoch checkpoint...
2022-07-07 22:13:33.892652: saving checkpoint...
2022-07-07 22:13:34.969172: done, saving took 1.12 seconds
2022-07-07 22:13:34.984231: This epoch took 73.583842 s

2022-07-07 22:13:34.986510: 
epoch:  68
2022-07-07 22:14:42.221172: train loss : -0.7303
2022-07-07 22:14:46.776742: validation loss: -0.6988
2022-07-07 22:14:46.779937: Average global foreground Dice: [0.748]
2022-07-07 22:14:46.782340: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:14:47.227496: Suus1 maybe_update_lr lr: 0.008749
2022-07-07 22:14:47.229988: This epoch took 72.241199 s

2022-07-07 22:14:47.232172: 
epoch:  69
2022-07-07 22:15:54.649908: train loss : -0.7096
2022-07-07 22:15:59.252716: validation loss: -0.6981
2022-07-07 22:15:59.283410: Average global foreground Dice: [0.7553]
2022-07-07 22:15:59.303056: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:16:00.087518: Suus1 maybe_update_lr lr: 0.008731
2022-07-07 22:16:00.090138: This epoch took 72.855673 s

2022-07-07 22:16:00.092382: 
epoch:  70
2022-07-07 22:17:07.451679: train loss : -0.7253
2022-07-07 22:17:11.985652: validation loss: -0.7055
2022-07-07 22:17:11.997432: Average global foreground Dice: [0.758]
2022-07-07 22:17:12.013478: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:17:12.546650: Suus1 maybe_update_lr lr: 0.008712
2022-07-07 22:17:12.558928: This epoch took 72.464247 s

2022-07-07 22:17:12.566444: 
epoch:  71
2022-07-07 22:18:19.913181: train loss : -0.7353
2022-07-07 22:18:24.341368: validation loss: -0.7384
2022-07-07 22:18:24.355379: Average global foreground Dice: [0.7842]
2022-07-07 22:18:24.358407: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:18:24.903658: Suus1 maybe_update_lr lr: 0.008694
2022-07-07 22:18:24.906241: saving best epoch checkpoint...
2022-07-07 22:18:24.956491: saving checkpoint...
2022-07-07 22:18:25.953873: done, saving took 1.05 seconds
2022-07-07 22:18:25.968795: This epoch took 73.399848 s

2022-07-07 22:18:25.970985: 
epoch:  72
2022-07-07 22:19:33.295476: train loss : -0.7243
2022-07-07 22:19:37.814081: validation loss: -0.7050
2022-07-07 22:19:37.835781: Average global foreground Dice: [0.758]
2022-07-07 22:19:37.849857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:19:38.392810: Suus1 maybe_update_lr lr: 0.008676
2022-07-07 22:19:38.395100: This epoch took 72.421890 s

2022-07-07 22:19:38.397181: 
epoch:  73
2022-07-07 22:20:45.726776: train loss : -0.7215
2022-07-07 22:20:50.298587: validation loss: -0.7144
2022-07-07 22:20:50.321960: Average global foreground Dice: [0.7611]
2022-07-07 22:20:50.330167: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:20:50.868169: Suus1 maybe_update_lr lr: 0.008658
2022-07-07 22:20:50.876431: saving best epoch checkpoint...
2022-07-07 22:20:50.944518: saving checkpoint...
2022-07-07 22:20:51.960930: done, saving took 1.07 seconds
2022-07-07 22:20:51.976914: This epoch took 73.577784 s

2022-07-07 22:20:51.978998: 
epoch:  74
2022-07-07 22:21:59.361411: train loss : -0.6984
2022-07-07 22:22:03.704856: validation loss: -0.7022
2022-07-07 22:22:03.717062: Average global foreground Dice: [0.752]
2022-07-07 22:22:03.723429: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:22:04.188616: Suus1 maybe_update_lr lr: 0.008639
2022-07-07 22:22:04.191181: This epoch took 72.209872 s

2022-07-07 22:22:04.193460: 
epoch:  75
2022-07-07 22:23:11.501720: train loss : -0.7177
2022-07-07 22:23:15.945424: validation loss: -0.7219
2022-07-07 22:23:15.982821: Average global foreground Dice: [0.7703]
2022-07-07 22:23:16.004263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:23:16.625727: Suus1 maybe_update_lr lr: 0.008621
2022-07-07 22:23:16.628183: saving best epoch checkpoint...
2022-07-07 22:23:16.673893: saving checkpoint...
2022-07-07 22:23:17.661824: done, saving took 1.03 seconds
2022-07-07 22:23:17.677035: This epoch took 73.481273 s

2022-07-07 22:23:17.679335: 
epoch:  76
2022-07-07 22:24:24.956134: train loss : -0.7075
2022-07-07 22:24:29.490538: validation loss: -0.7466
2022-07-07 22:24:29.495955: Average global foreground Dice: [0.7912]
2022-07-07 22:24:29.498169: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:24:30.082377: Suus1 maybe_update_lr lr: 0.008603
2022-07-07 22:24:30.084880: saving best epoch checkpoint...
2022-07-07 22:24:30.120078: saving checkpoint...
2022-07-07 22:24:31.067271: done, saving took 0.98 seconds
2022-07-07 22:24:31.081453: This epoch took 73.399963 s

2022-07-07 22:24:31.083769: 
epoch:  77
2022-07-07 22:25:38.319214: train loss : -0.7315
2022-07-07 22:25:42.708814: validation loss: -0.7079
2022-07-07 22:25:42.742878: Average global foreground Dice: [0.7592]
2022-07-07 22:25:42.775279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:25:43.330091: Suus1 maybe_update_lr lr: 0.008584
2022-07-07 22:25:43.332619: This epoch took 72.246472 s

2022-07-07 22:25:43.334698: 
epoch:  78
2022-07-07 22:26:50.527427: train loss : -0.7201
2022-07-07 22:26:54.942484: validation loss: -0.7508
2022-07-07 22:26:54.956589: Average global foreground Dice: [0.7952]
2022-07-07 22:26:54.970906: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:26:55.528777: Suus1 maybe_update_lr lr: 0.008566
2022-07-07 22:26:55.530986: saving best epoch checkpoint...
2022-07-07 22:26:55.565808: saving checkpoint...
2022-07-07 22:26:56.434300: done, saving took 0.90 seconds
2022-07-07 22:26:56.448381: This epoch took 73.111554 s

2022-07-07 22:26:56.450637: 
epoch:  79
2022-07-07 22:28:03.694235: train loss : -0.7233
2022-07-07 22:28:08.127051: validation loss: -0.7212
2022-07-07 22:28:08.150935: Average global foreground Dice: [0.7773]
2022-07-07 22:28:08.156050: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:28:08.662658: Suus1 maybe_update_lr lr: 0.008548
2022-07-07 22:28:08.665126: saving best epoch checkpoint...
2022-07-07 22:28:08.701364: saving checkpoint...
2022-07-07 22:28:09.619767: done, saving took 0.95 seconds
2022-07-07 22:28:09.633929: This epoch took 73.181176 s

2022-07-07 22:28:09.636218: 
epoch:  80
2022-07-07 22:29:16.942978: train loss : -0.7416
2022-07-07 22:29:21.471560: validation loss: -0.7400
2022-07-07 22:29:21.487371: Average global foreground Dice: [0.7854]
2022-07-07 22:29:21.497730: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:29:22.072991: Suus1 maybe_update_lr lr: 0.008529
2022-07-07 22:29:22.075337: saving best epoch checkpoint...
2022-07-07 22:29:22.108272: saving checkpoint...
2022-07-07 22:29:23.103326: done, saving took 1.03 seconds
2022-07-07 22:29:23.117395: This epoch took 73.479137 s

2022-07-07 22:29:23.119657: 
epoch:  81
2022-07-07 22:30:30.412757: train loss : -0.7380
2022-07-07 22:30:34.788865: validation loss: -0.7487
2022-07-07 22:30:34.798896: Average global foreground Dice: [0.7874]
2022-07-07 22:30:34.815327: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:30:35.369588: Suus1 maybe_update_lr lr: 0.008511
2022-07-07 22:30:35.371648: saving best epoch checkpoint...
2022-07-07 22:30:35.403381: saving checkpoint...
2022-07-07 22:30:36.428458: done, saving took 1.05 seconds
2022-07-07 22:30:36.442372: This epoch took 73.320449 s

2022-07-07 22:30:36.444588: 
epoch:  82
2022-07-07 22:31:43.618261: train loss : -0.7513
2022-07-07 22:31:48.031065: validation loss: -0.7504
2022-07-07 22:31:48.042619: Average global foreground Dice: [0.7986]
2022-07-07 22:31:48.053891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:31:48.596967: Suus1 maybe_update_lr lr: 0.008493
2022-07-07 22:31:48.599380: saving best epoch checkpoint...
2022-07-07 22:31:48.631222: saving checkpoint...
2022-07-07 22:31:49.614289: done, saving took 1.01 seconds
2022-07-07 22:31:49.629395: This epoch took 73.182641 s

2022-07-07 22:31:49.631690: 
epoch:  83
2022-07-07 22:32:56.883270: train loss : -0.7250
2022-07-07 22:33:01.385507: validation loss: -0.7068
2022-07-07 22:33:01.389054: Average global foreground Dice: [0.7536]
2022-07-07 22:33:01.391302: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:33:01.896422: Suus1 maybe_update_lr lr: 0.008474
2022-07-07 22:33:01.898798: This epoch took 72.264931 s

2022-07-07 22:33:01.901161: 
epoch:  84
2022-07-07 22:34:09.253671: train loss : -0.7304
2022-07-07 22:34:13.681466: validation loss: -0.7249
2022-07-07 22:34:13.689124: Average global foreground Dice: [0.7761]
2022-07-07 22:34:13.712282: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:34:14.267239: Suus1 maybe_update_lr lr: 0.008456
2022-07-07 22:34:14.271799: This epoch took 72.368325 s

2022-07-07 22:34:14.273873: 
epoch:  85
2022-07-07 22:35:21.521439: train loss : -0.7483
2022-07-07 22:35:26.123931: validation loss: -0.7566
2022-07-07 22:35:26.145637: Average global foreground Dice: [0.7969]
2022-07-07 22:35:26.148964: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:35:26.800017: Suus1 maybe_update_lr lr: 0.008438
2022-07-07 22:35:26.802367: saving best epoch checkpoint...
2022-07-07 22:35:26.848835: saving checkpoint...
2022-07-07 22:35:27.857396: done, saving took 1.05 seconds
2022-07-07 22:35:27.872857: This epoch took 73.597074 s

2022-07-07 22:35:27.874882: 
epoch:  86
2022-07-07 22:36:35.116836: train loss : -0.7420
2022-07-07 22:36:39.598882: validation loss: -0.7214
2022-07-07 22:36:39.663635: Average global foreground Dice: [0.7637]
2022-07-07 22:36:39.673125: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:36:40.238829: Suus1 maybe_update_lr lr: 0.008419
2022-07-07 22:36:40.250910: This epoch took 72.373808 s

2022-07-07 22:36:40.253122: 
epoch:  87
2022-07-07 22:37:47.479772: train loss : -0.7447
2022-07-07 22:37:51.952036: validation loss: -0.7689
2022-07-07 22:37:51.955705: Average global foreground Dice: [0.8074]
2022-07-07 22:37:51.958088: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:37:52.458011: Suus1 maybe_update_lr lr: 0.008401
2022-07-07 22:37:52.460364: saving best epoch checkpoint...
2022-07-07 22:37:52.511060: saving checkpoint...
2022-07-07 22:37:53.480930: done, saving took 1.02 seconds
2022-07-07 22:37:53.497487: This epoch took 73.242239 s

2022-07-07 22:37:53.499712: 
epoch:  88
2022-07-07 22:39:00.787780: train loss : -0.7419
2022-07-07 22:39:05.171477: validation loss: -0.7363
2022-07-07 22:39:05.177754: Average global foreground Dice: [0.777]
2022-07-07 22:39:05.180172: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:39:05.606374: Suus1 maybe_update_lr lr: 0.008383
2022-07-07 22:39:05.608584: saving best epoch checkpoint...
2022-07-07 22:39:05.656248: saving checkpoint...
2022-07-07 22:39:06.547950: done, saving took 0.94 seconds
2022-07-07 22:39:06.563468: This epoch took 73.061520 s

2022-07-07 22:39:06.565627: 
epoch:  89
2022-07-07 22:40:13.917824: train loss : -0.7332
2022-07-07 22:40:18.501618: validation loss: -0.7293
2022-07-07 22:40:18.519302: Average global foreground Dice: [0.7767]
2022-07-07 22:40:18.533299: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:40:19.139671: Suus1 maybe_update_lr lr: 0.008364
2022-07-07 22:40:19.142047: This epoch took 72.574411 s

2022-07-07 22:40:19.144072: 
epoch:  90
2022-07-07 22:41:26.400849: train loss : -0.7214
2022-07-07 22:41:30.851888: validation loss: -0.7422
2022-07-07 22:41:30.861273: Average global foreground Dice: [0.7923]
2022-07-07 22:41:30.874567: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:41:31.405927: Suus1 maybe_update_lr lr: 0.008346
2022-07-07 22:41:31.408385: saving best epoch checkpoint...
2022-07-07 22:41:31.460602: saving checkpoint...
2022-07-07 22:41:32.470304: done, saving took 1.06 seconds
2022-07-07 22:41:32.486078: This epoch took 73.340026 s

2022-07-07 22:41:32.488426: 
epoch:  91
2022-07-07 22:42:39.766635: train loss : -0.7314
2022-07-07 22:42:44.212471: validation loss: -0.7631
2022-07-07 22:42:44.231873: Average global foreground Dice: [0.8017]
2022-07-07 22:42:44.247030: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:42:44.798197: Suus1 maybe_update_lr lr: 0.008328
2022-07-07 22:42:44.800704: saving best epoch checkpoint...
2022-07-07 22:42:44.846766: saving checkpoint...
2022-07-07 22:42:45.828383: done, saving took 1.03 seconds
2022-07-07 22:42:45.844845: This epoch took 73.354216 s

2022-07-07 22:42:45.847088: 
epoch:  92
2022-07-07 22:43:53.075392: train loss : -0.7425
2022-07-07 22:43:57.557518: validation loss: -0.7004
2022-07-07 22:43:57.576821: Average global foreground Dice: [0.7433]
2022-07-07 22:43:57.603297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:43:58.220997: Suus1 maybe_update_lr lr: 0.008309
2022-07-07 22:43:58.226541: This epoch took 72.377086 s

2022-07-07 22:43:58.228741: 
epoch:  93
2022-07-07 22:45:05.519061: train loss : -0.7348
2022-07-07 22:45:09.972760: validation loss: -0.7323
2022-07-07 22:45:09.976067: Average global foreground Dice: [0.7743]
2022-07-07 22:45:09.978966: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:45:10.620476: Suus1 maybe_update_lr lr: 0.008291
2022-07-07 22:45:10.622622: This epoch took 72.391867 s

2022-07-07 22:45:10.624501: 
epoch:  94
2022-07-07 22:46:17.926146: train loss : -0.7402
2022-07-07 22:46:22.267694: validation loss: -0.7438
2022-07-07 22:46:22.273193: Average global foreground Dice: [0.7853]
2022-07-07 22:46:22.276183: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:46:22.786362: Suus1 maybe_update_lr lr: 0.008272
2022-07-07 22:46:22.788588: This epoch took 72.161994 s

2022-07-07 22:46:22.790645: 
epoch:  95
2022-07-07 22:47:30.087710: train loss : -0.7435
2022-07-07 22:47:34.463064: validation loss: -0.7132
2022-07-07 22:47:34.504072: Average global foreground Dice: [0.7612]
2022-07-07 22:47:34.515845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:47:35.026537: Suus1 maybe_update_lr lr: 0.008254
2022-07-07 22:47:35.028820: This epoch took 72.236089 s

2022-07-07 22:47:35.031174: 
epoch:  96
2022-07-07 22:48:42.391348: train loss : -0.7495
2022-07-07 22:48:46.986005: validation loss: -0.7421
2022-07-07 22:48:47.017668: Average global foreground Dice: [0.7881]
2022-07-07 22:48:47.030263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:48:47.521041: Suus1 maybe_update_lr lr: 0.008236
2022-07-07 22:48:47.523512: This epoch took 72.490442 s

2022-07-07 22:48:47.525393: 
epoch:  97
2022-07-07 22:49:54.852329: train loss : -0.7398
2022-07-07 22:49:59.323013: validation loss: -0.7432
2022-07-07 22:49:59.328803: Average global foreground Dice: [0.7875]
2022-07-07 22:49:59.352266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:49:59.857525: Suus1 maybe_update_lr lr: 0.008217
2022-07-07 22:49:59.859988: This epoch took 72.332699 s

2022-07-07 22:49:59.864290: 
epoch:  98
2022-07-07 22:51:07.238964: train loss : -0.7438
2022-07-07 22:51:11.775612: validation loss: -0.7513
2022-07-07 22:51:11.780408: Average global foreground Dice: [0.7928]
2022-07-07 22:51:11.783062: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:51:12.233543: Suus1 maybe_update_lr lr: 0.008199
2022-07-07 22:51:12.236020: This epoch took 72.369521 s

2022-07-07 22:51:12.238137: 
epoch:  99
2022-07-07 22:52:19.573268: train loss : -0.7510
2022-07-07 22:52:24.015133: validation loss: -0.7849
2022-07-07 22:52:24.049746: Average global foreground Dice: [0.8187]
2022-07-07 22:52:24.052314: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:52:24.559298: Suus1 maybe_update_lr lr: 0.008181
2022-07-07 22:52:24.561609: saving scheduled checkpoint file...
2022-07-07 22:52:24.611489: saving checkpoint...
2022-07-07 22:52:25.577792: done, saving took 1.01 seconds
2022-07-07 22:52:25.595120: done
2022-07-07 22:52:25.597274: saving best epoch checkpoint...
2022-07-07 22:52:25.643764: saving checkpoint...
2022-07-07 22:52:26.599703: done, saving took 1.00 seconds
2022-07-07 22:52:26.615056: This epoch took 74.374825 s

2022-07-07 22:52:26.617325: 
epoch:  100
2022-07-07 22:53:33.809682: train loss : -0.7595
2022-07-07 22:53:38.270156: validation loss: -0.7467
2022-07-07 22:53:38.291665: Average global foreground Dice: [0.7868]
2022-07-07 22:53:38.314276: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:53:39.092006: Suus1 maybe_update_lr lr: 0.008162
2022-07-07 22:53:39.094178: saving best epoch checkpoint...
2022-07-07 22:53:39.136824: saving checkpoint...
2022-07-07 22:53:40.011887: done, saving took 0.92 seconds
2022-07-07 22:53:40.027300: This epoch took 73.407861 s

2022-07-07 22:53:40.029746: 
epoch:  101
2022-07-07 22:54:47.237204: train loss : -0.7518
2022-07-07 22:54:51.616028: validation loss: -0.7545
2022-07-07 22:54:51.627491: Average global foreground Dice: [0.8054]
2022-07-07 22:54:51.631957: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:54:52.120732: Suus1 maybe_update_lr lr: 0.008144
2022-07-07 22:54:52.123127: saving best epoch checkpoint...
2022-07-07 22:54:52.176470: saving checkpoint...
2022-07-07 22:54:53.173487: done, saving took 1.05 seconds
2022-07-07 22:54:53.189661: This epoch took 73.157758 s

2022-07-07 22:54:53.191703: 
epoch:  102
2022-07-07 22:56:00.507143: train loss : -0.7553
2022-07-07 22:56:05.099706: validation loss: -0.7599
2022-07-07 22:56:05.111350: Average global foreground Dice: [0.7931]
2022-07-07 22:56:05.124026: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:56:05.771420: Suus1 maybe_update_lr lr: 0.008125
2022-07-07 22:56:05.773820: saving best epoch checkpoint...
2022-07-07 22:56:05.821888: saving checkpoint...
2022-07-07 22:56:06.841875: done, saving took 1.07 seconds
2022-07-07 22:56:06.858412: This epoch took 73.664829 s

2022-07-07 22:56:06.860694: 
epoch:  103
2022-07-07 22:57:14.101936: train loss : -0.7602
2022-07-07 22:57:18.520009: validation loss: -0.7533
2022-07-07 22:57:18.532496: Average global foreground Dice: [0.7872]
2022-07-07 22:57:18.542635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:57:19.073593: Suus1 maybe_update_lr lr: 0.008107
2022-07-07 22:57:19.076240: saving best epoch checkpoint...
2022-07-07 22:57:19.124973: saving checkpoint...
2022-07-07 22:57:20.123374: done, saving took 1.04 seconds
2022-07-07 22:57:20.139970: This epoch took 73.277156 s

2022-07-07 22:57:20.142542: 
epoch:  104
2022-07-07 22:58:27.455181: train loss : -0.7599
2022-07-07 22:58:31.860060: validation loss: -0.7293
2022-07-07 22:58:31.864020: Average global foreground Dice: [0.7714]
2022-07-07 22:58:31.866241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:58:32.360259: Suus1 maybe_update_lr lr: 0.008088
2022-07-07 22:58:32.381268: This epoch took 72.236202 s

2022-07-07 22:58:32.383854: 
epoch:  105
2022-07-07 22:59:39.895815: train loss : -0.7630
2022-07-07 22:59:44.298267: validation loss: -0.7198
2022-07-07 22:59:44.312257: Average global foreground Dice: [0.7601]
2022-07-07 22:59:44.325558: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 22:59:44.813971: Suus1 maybe_update_lr lr: 0.00807
2022-07-07 22:59:44.819231: This epoch took 72.433089 s

2022-07-07 22:59:44.821887: 
epoch:  106
2022-07-07 23:00:52.160435: train loss : -0.7443
2022-07-07 23:00:56.839242: validation loss: -0.7566
2022-07-07 23:00:56.843764: Average global foreground Dice: [0.798]
2022-07-07 23:00:56.848164: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:00:57.347625: Suus1 maybe_update_lr lr: 0.008052
2022-07-07 23:00:57.368202: This epoch took 72.543800 s

2022-07-07 23:00:57.370994: 
epoch:  107
2022-07-07 23:02:04.695770: train loss : -0.7511
2022-07-07 23:02:09.210109: validation loss: -0.7399
2022-07-07 23:02:09.221930: Average global foreground Dice: [0.7803]
2022-07-07 23:02:09.240226: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:02:09.715566: Suus1 maybe_update_lr lr: 0.008033
2022-07-07 23:02:09.718153: This epoch took 72.344949 s

2022-07-07 23:02:09.720185: 
epoch:  108
2022-07-07 23:03:17.140107: train loss : -0.7573
2022-07-07 23:03:21.677102: validation loss: -0.7478
2022-07-07 23:03:21.691456: Average global foreground Dice: [0.79]
2022-07-07 23:03:21.696826: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:03:22.343356: Suus1 maybe_update_lr lr: 0.008015
2022-07-07 23:03:22.345814: This epoch took 72.623682 s

2022-07-07 23:03:22.348035: 
epoch:  109
2022-07-07 23:04:29.682273: train loss : -0.7312
2022-07-07 23:04:34.236662: validation loss: -0.7310
2022-07-07 23:04:34.242508: Average global foreground Dice: [0.779]
2022-07-07 23:04:34.244201: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:04:34.774747: Suus1 maybe_update_lr lr: 0.007996
2022-07-07 23:04:34.777138: This epoch took 72.426883 s

2022-07-07 23:04:34.779237: 
epoch:  110
2022-07-07 23:05:42.136099: train loss : -0.7525
2022-07-07 23:05:46.515305: validation loss: -0.7443
2022-07-07 23:05:46.518499: Average global foreground Dice: [0.7888]
2022-07-07 23:05:46.525312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:05:47.057011: Suus1 maybe_update_lr lr: 0.007978
2022-07-07 23:05:47.059521: This epoch took 72.278147 s

2022-07-07 23:05:47.061679: 
epoch:  111
2022-07-07 23:06:54.371317: train loss : -0.7520
2022-07-07 23:06:58.791132: validation loss: -0.7321
2022-07-07 23:06:58.793727: Average global foreground Dice: [0.7784]
2022-07-07 23:06:58.797465: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:06:59.319341: Suus1 maybe_update_lr lr: 0.007959
2022-07-07 23:06:59.321698: This epoch took 72.257940 s

2022-07-07 23:06:59.323974: 
epoch:  112
2022-07-07 23:08:06.668657: train loss : -0.7533
2022-07-07 23:08:11.101202: validation loss: -0.7439
2022-07-07 23:08:11.119952: Average global foreground Dice: [0.786]
2022-07-07 23:08:11.140255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:08:11.765251: Suus1 maybe_update_lr lr: 0.007941
2022-07-07 23:08:11.768190: This epoch took 72.442175 s

2022-07-07 23:08:11.772234: 
epoch:  113
2022-07-07 23:09:19.207016: train loss : -0.7436
2022-07-07 23:09:23.920085: validation loss: -0.7319
2022-07-07 23:09:23.940706: Average global foreground Dice: [0.7707]
2022-07-07 23:09:23.948861: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:09:24.621772: Suus1 maybe_update_lr lr: 0.007922
2022-07-07 23:09:24.624147: This epoch took 72.849720 s

2022-07-07 23:09:24.626215: 
epoch:  114
2022-07-07 23:10:31.859128: train loss : -0.7448
2022-07-07 23:10:36.504944: validation loss: -0.7321
2022-07-07 23:10:36.538618: Average global foreground Dice: [0.773]
2022-07-07 23:10:36.546252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:10:37.059730: Suus1 maybe_update_lr lr: 0.007904
2022-07-07 23:10:37.062092: This epoch took 72.433892 s

2022-07-07 23:10:37.065179: 
epoch:  115
2022-07-07 23:11:44.403044: train loss : -0.7550
2022-07-07 23:11:48.862141: validation loss: -0.7349
2022-07-07 23:11:48.865208: Average global foreground Dice: [0.783]
2022-07-07 23:11:48.867325: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:11:49.356478: Suus1 maybe_update_lr lr: 0.007885
2022-07-07 23:11:49.358763: This epoch took 72.290530 s

2022-07-07 23:11:49.360792: 
epoch:  116
2022-07-07 23:12:56.740763: train loss : -0.7478
2022-07-07 23:13:01.234201: validation loss: -0.7535
2022-07-07 23:13:01.257701: Average global foreground Dice: [0.7883]
2022-07-07 23:13:01.279271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:13:01.785908: Suus1 maybe_update_lr lr: 0.007867
2022-07-07 23:13:01.788274: This epoch took 72.425507 s

2022-07-07 23:13:01.790401: 
epoch:  117
2022-07-07 23:14:09.186482: train loss : -0.7418
2022-07-07 23:14:13.632879: validation loss: -0.7480
2022-07-07 23:14:13.671045: Average global foreground Dice: [0.7919]
2022-07-07 23:14:13.680342: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:14:14.246189: Suus1 maybe_update_lr lr: 0.007848
2022-07-07 23:14:14.248703: This epoch took 72.456195 s

2022-07-07 23:14:14.250860: 
epoch:  118
2022-07-07 23:15:21.575403: train loss : -0.7548
2022-07-07 23:15:25.911165: validation loss: -0.7397
2022-07-07 23:15:25.932502: Average global foreground Dice: [0.7878]
2022-07-07 23:15:25.941882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:15:26.400454: Suus1 maybe_update_lr lr: 0.00783
2022-07-07 23:15:26.402925: This epoch took 72.149882 s

2022-07-07 23:15:26.404972: 
epoch:  119
2022-07-07 23:16:33.712520: train loss : -0.7536
2022-07-07 23:16:38.188556: validation loss: -0.7401
2022-07-07 23:16:38.208166: Average global foreground Dice: [0.7831]
2022-07-07 23:16:38.221928: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:16:38.741866: Suus1 maybe_update_lr lr: 0.007811
2022-07-07 23:16:38.744222: This epoch took 72.337172 s

2022-07-07 23:16:38.746390: 
epoch:  120
2022-07-07 23:17:46.015117: train loss : -0.7490
2022-07-07 23:17:50.466623: validation loss: -0.7443
2022-07-07 23:17:50.494282: Average global foreground Dice: [0.7944]
2022-07-07 23:17:50.503897: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:17:51.074243: Suus1 maybe_update_lr lr: 0.007793
2022-07-07 23:17:51.076558: This epoch took 72.328124 s

2022-07-07 23:17:51.078578: 
epoch:  121
2022-07-07 23:18:58.512961: train loss : -0.7579
2022-07-07 23:19:02.958886: validation loss: -0.7330
2022-07-07 23:19:02.972745: Average global foreground Dice: [0.7742]
2022-07-07 23:19:02.975077: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:19:03.495245: Suus1 maybe_update_lr lr: 0.007774
2022-07-07 23:19:03.497960: This epoch took 72.417343 s

2022-07-07 23:19:03.500856: 
epoch:  122
2022-07-07 23:20:10.772952: train loss : -0.7492
2022-07-07 23:20:15.344217: validation loss: -0.7678
2022-07-07 23:20:15.366626: Average global foreground Dice: [0.8088]
2022-07-07 23:20:15.380467: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:20:15.929318: Suus1 maybe_update_lr lr: 0.007756
2022-07-07 23:20:15.931551: This epoch took 72.427176 s

2022-07-07 23:20:15.933627: 
epoch:  123
2022-07-07 23:21:23.205399: train loss : -0.7552
2022-07-07 23:21:27.555269: validation loss: -0.7323
2022-07-07 23:21:27.575953: Average global foreground Dice: [0.7867]
2022-07-07 23:21:27.590571: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:21:28.086431: Suus1 maybe_update_lr lr: 0.007737
2022-07-07 23:21:28.088981: This epoch took 72.153172 s

2022-07-07 23:21:28.091107: 
epoch:  124
2022-07-07 23:22:35.424472: train loss : -0.7618
2022-07-07 23:22:39.862249: validation loss: -0.7545
2022-07-07 23:22:39.865399: Average global foreground Dice: [0.7935]
2022-07-07 23:22:39.867646: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:22:40.340673: Suus1 maybe_update_lr lr: 0.007719
2022-07-07 23:22:40.343381: saving best epoch checkpoint...
2022-07-07 23:22:40.391077: saving checkpoint...
2022-07-07 23:22:41.299814: done, saving took 0.95 seconds
2022-07-07 23:22:41.315143: This epoch took 73.221881 s

2022-07-07 23:22:41.317135: 
epoch:  125
2022-07-07 23:23:48.635819: train loss : -0.7515
2022-07-07 23:23:53.090801: validation loss: -0.7587
2022-07-07 23:23:53.129760: Average global foreground Dice: [0.7947]
2022-07-07 23:23:53.146679: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:23:53.685061: Suus1 maybe_update_lr lr: 0.0077
2022-07-07 23:23:53.687288: saving best epoch checkpoint...
2022-07-07 23:23:53.735403: saving checkpoint...
2022-07-07 23:23:54.673342: done, saving took 0.98 seconds
2022-07-07 23:23:54.689567: This epoch took 73.370472 s

2022-07-07 23:23:54.691920: 
epoch:  126
2022-07-07 23:25:02.065520: train loss : -0.7700
2022-07-07 23:25:06.471328: validation loss: -0.7537
2022-07-07 23:25:06.474671: Average global foreground Dice: [0.7907]
2022-07-07 23:25:06.492558: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:25:06.992019: Suus1 maybe_update_lr lr: 0.007682
2022-07-07 23:25:06.994328: saving best epoch checkpoint...
2022-07-07 23:25:07.038376: saving checkpoint...
2022-07-07 23:25:07.983479: done, saving took 0.99 seconds
2022-07-07 23:25:08.000653: This epoch took 73.306699 s

2022-07-07 23:25:08.002959: 
epoch:  127
2022-07-07 23:26:15.399247: train loss : -0.7409
2022-07-07 23:26:19.875586: validation loss: -0.7473
2022-07-07 23:26:19.889173: Average global foreground Dice: [0.7869]
2022-07-07 23:26:19.898591: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:26:20.430898: Suus1 maybe_update_lr lr: 0.007663
2022-07-07 23:26:20.433205: This epoch took 72.428068 s

2022-07-07 23:26:20.435300: 
epoch:  128
2022-07-07 23:27:27.931293: train loss : -0.7631
2022-07-07 23:27:32.334261: validation loss: -0.7625
2022-07-07 23:27:32.358369: Average global foreground Dice: [0.8053]
2022-07-07 23:27:32.365604: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:27:32.966808: Suus1 maybe_update_lr lr: 0.007645
2022-07-07 23:27:32.969340: saving best epoch checkpoint...
2022-07-07 23:27:33.023020: saving checkpoint...
2022-07-07 23:27:34.095160: done, saving took 1.12 seconds
2022-07-07 23:27:34.111075: This epoch took 73.673656 s

2022-07-07 23:27:34.113165: 
epoch:  129
2022-07-07 23:28:41.545681: train loss : -0.7649
2022-07-07 23:28:46.060325: validation loss: -0.7656
2022-07-07 23:28:46.077689: Average global foreground Dice: [0.8065]
2022-07-07 23:28:46.080196: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:28:46.613864: Suus1 maybe_update_lr lr: 0.007626
2022-07-07 23:28:46.617190: saving best epoch checkpoint...
2022-07-07 23:28:46.663310: saving checkpoint...
2022-07-07 23:28:47.624568: done, saving took 1.00 seconds
2022-07-07 23:28:47.641812: This epoch took 73.526668 s

2022-07-07 23:28:47.644499: 
epoch:  130
2022-07-07 23:29:54.972750: train loss : -0.7633
2022-07-07 23:29:59.361148: validation loss: -0.7355
2022-07-07 23:29:59.364614: Average global foreground Dice: [0.7707]
2022-07-07 23:29:59.366765: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:29:59.810550: Suus1 maybe_update_lr lr: 0.007608
2022-07-07 23:29:59.813271: This epoch took 72.166049 s

2022-07-07 23:29:59.815293: 
epoch:  131
2022-07-07 23:31:07.356831: train loss : -0.7641
2022-07-07 23:31:11.848969: validation loss: -0.7225
2022-07-07 23:31:11.861294: Average global foreground Dice: [0.7674]
2022-07-07 23:31:11.867903: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:31:12.370489: Suus1 maybe_update_lr lr: 0.007589
2022-07-07 23:31:12.372908: This epoch took 72.555678 s

2022-07-07 23:31:12.375005: 
epoch:  132
2022-07-07 23:32:19.725541: train loss : -0.7775
2022-07-07 23:32:24.182316: validation loss: -0.7480
2022-07-07 23:32:24.191516: Average global foreground Dice: [0.7895]
2022-07-07 23:32:24.206530: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:32:24.849334: Suus1 maybe_update_lr lr: 0.007571
2022-07-07 23:32:24.851702: This epoch took 72.474617 s

2022-07-07 23:32:24.853834: 
epoch:  133
2022-07-07 23:33:32.255028: train loss : -0.7823
2022-07-07 23:33:36.618980: validation loss: -0.7480
2022-07-07 23:33:36.639611: Average global foreground Dice: [0.7959]
2022-07-07 23:33:36.659353: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:33:37.226310: Suus1 maybe_update_lr lr: 0.007552
2022-07-07 23:33:37.228773: This epoch took 72.372981 s

2022-07-07 23:33:37.231020: 
epoch:  134
2022-07-07 23:34:44.508395: train loss : -0.7546
2022-07-07 23:34:48.924292: validation loss: -0.7788
2022-07-07 23:34:48.927383: Average global foreground Dice: [0.8179]
2022-07-07 23:34:48.929401: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:34:49.444980: Suus1 maybe_update_lr lr: 0.007533
2022-07-07 23:34:49.447096: This epoch took 72.213932 s

2022-07-07 23:34:49.448957: 
epoch:  135
2022-07-07 23:35:56.798483: train loss : -0.7604
2022-07-07 23:36:01.385107: validation loss: -0.7381
2022-07-07 23:36:01.391777: Average global foreground Dice: [0.7673]
2022-07-07 23:36:01.394201: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:36:01.839780: Suus1 maybe_update_lr lr: 0.007515
2022-07-07 23:36:01.842206: This epoch took 72.391351 s

2022-07-07 23:36:01.844282: 
epoch:  136
2022-07-07 23:37:09.205171: train loss : -0.7678
2022-07-07 23:37:13.604913: validation loss: -0.7202
2022-07-07 23:37:13.619110: Average global foreground Dice: [0.7653]
2022-07-07 23:37:13.621425: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:37:14.117874: Suus1 maybe_update_lr lr: 0.007496
2022-07-07 23:37:14.120314: This epoch took 72.273880 s

2022-07-07 23:37:14.122426: 
epoch:  137
2022-07-07 23:38:21.446419: train loss : -0.7581
2022-07-07 23:38:25.812152: validation loss: -0.7704
2022-07-07 23:38:25.845246: Average global foreground Dice: [0.806]
2022-07-07 23:38:25.858323: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:38:26.333104: Suus1 maybe_update_lr lr: 0.007478
2022-07-07 23:38:26.335129: This epoch took 72.210626 s

2022-07-07 23:38:26.337141: 
epoch:  138
2022-07-07 23:39:33.588115: train loss : -0.7619
2022-07-07 23:39:37.990948: validation loss: -0.7386
2022-07-07 23:39:38.025495: Average global foreground Dice: [0.7868]
2022-07-07 23:39:38.053262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:39:38.650468: Suus1 maybe_update_lr lr: 0.007459
2022-07-07 23:39:38.652718: This epoch took 72.313802 s

2022-07-07 23:39:38.654668: 
epoch:  139
2022-07-07 23:40:46.141826: train loss : -0.7427
2022-07-07 23:40:50.489299: validation loss: -0.7591
2022-07-07 23:40:50.492617: Average global foreground Dice: [0.8006]
2022-07-07 23:40:50.517409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:40:51.097515: Suus1 maybe_update_lr lr: 0.00744
2022-07-07 23:40:51.100152: This epoch took 72.443582 s

2022-07-07 23:40:51.102296: 
epoch:  140
2022-07-07 23:41:58.354328: train loss : -0.7579
2022-07-07 23:42:02.800608: validation loss: -0.7742
2022-07-07 23:42:02.804399: Average global foreground Dice: [0.8118]
2022-07-07 23:42:02.806745: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:42:03.258209: Suus1 maybe_update_lr lr: 0.007422
2022-07-07 23:42:03.260826: saving best epoch checkpoint...
2022-07-07 23:42:03.296805: saving checkpoint...
2022-07-07 23:42:04.285351: done, saving took 1.02 seconds
2022-07-07 23:42:04.299984: This epoch took 73.195650 s

2022-07-07 23:42:04.302410: 
epoch:  141
2022-07-07 23:43:11.585370: train loss : -0.7698
2022-07-07 23:43:16.007486: validation loss: -0.7169
2022-07-07 23:43:16.010951: Average global foreground Dice: [0.7609]
2022-07-07 23:43:16.025292: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:43:16.530680: Suus1 maybe_update_lr lr: 0.007403
2022-07-07 23:43:16.533187: This epoch took 72.228552 s

2022-07-07 23:43:16.535225: 
epoch:  142
2022-07-07 23:44:23.880691: train loss : -0.7680
2022-07-07 23:44:28.381120: validation loss: -0.7427
2022-07-07 23:44:28.390642: Average global foreground Dice: [0.783]
2022-07-07 23:44:28.395255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:44:28.879161: Suus1 maybe_update_lr lr: 0.007385
2022-07-07 23:44:28.881655: This epoch took 72.344404 s

2022-07-07 23:44:28.883727: 
epoch:  143
2022-07-07 23:45:36.100368: train loss : -0.7750
2022-07-07 23:45:40.475364: validation loss: -0.7269
2022-07-07 23:45:40.484023: Average global foreground Dice: [0.7664]
2022-07-07 23:45:40.496389: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:45:41.004892: Suus1 maybe_update_lr lr: 0.007366
2022-07-07 23:45:41.007128: This epoch took 72.121331 s

2022-07-07 23:45:41.009040: 
epoch:  144
2022-07-07 23:46:48.316216: train loss : -0.7782
2022-07-07 23:46:52.758004: validation loss: -0.7495
2022-07-07 23:46:52.773790: Average global foreground Dice: [0.7997]
2022-07-07 23:46:52.776068: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:46:53.357070: Suus1 maybe_update_lr lr: 0.007347
2022-07-07 23:46:53.360437: This epoch took 72.349338 s

2022-07-07 23:46:53.385267: 
epoch:  145
2022-07-07 23:48:00.684775: train loss : -0.7783
2022-07-07 23:48:05.085335: validation loss: -0.7769
2022-07-07 23:48:05.092398: Average global foreground Dice: [0.8165]
2022-07-07 23:48:05.095223: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:48:05.552627: Suus1 maybe_update_lr lr: 0.007329
2022-07-07 23:48:05.554769: This epoch took 72.136518 s

2022-07-07 23:48:05.556717: 
epoch:  146
2022-07-07 23:49:12.882743: train loss : -0.7749
2022-07-07 23:49:17.314144: validation loss: -0.7677
2022-07-07 23:49:17.319508: Average global foreground Dice: [0.8034]
2022-07-07 23:49:17.321630: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:49:17.817475: Suus1 maybe_update_lr lr: 0.00731
2022-07-07 23:49:17.820133: This epoch took 72.261544 s

2022-07-07 23:49:17.822287: 
epoch:  147
2022-07-07 23:50:25.054171: train loss : -0.7842
2022-07-07 23:50:29.480267: validation loss: -0.7715
2022-07-07 23:50:29.489658: Average global foreground Dice: [0.8091]
2022-07-07 23:50:29.500152: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:50:30.028679: Suus1 maybe_update_lr lr: 0.007291
2022-07-07 23:50:30.030979: saving best epoch checkpoint...
2022-07-07 23:50:30.076158: saving checkpoint...
2022-07-07 23:50:31.160413: done, saving took 1.13 seconds
2022-07-07 23:50:31.178829: This epoch took 73.354280 s

2022-07-07 23:50:31.181343: 
epoch:  148
2022-07-07 23:51:38.504360: train loss : -0.7770
2022-07-07 23:51:42.948432: validation loss: -0.7529
2022-07-07 23:51:42.960147: Average global foreground Dice: [0.794]
2022-07-07 23:51:42.980981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:51:43.543519: Suus1 maybe_update_lr lr: 0.007273
2022-07-07 23:51:43.545799: saving best epoch checkpoint...
2022-07-07 23:51:43.592132: saving checkpoint...
2022-07-07 23:51:44.593872: done, saving took 1.05 seconds
2022-07-07 23:51:44.609300: This epoch took 73.425791 s

2022-07-07 23:51:44.611688: 
epoch:  149
2022-07-07 23:52:51.862695: train loss : -0.7612
2022-07-07 23:52:56.309325: validation loss: -0.7430
2022-07-07 23:52:56.314930: Average global foreground Dice: [0.7824]
2022-07-07 23:52:56.331619: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:52:56.889445: Suus1 maybe_update_lr lr: 0.007254
2022-07-07 23:52:56.891817: saving scheduled checkpoint file...
2022-07-07 23:52:56.937910: saving checkpoint...
2022-07-07 23:52:57.879614: done, saving took 0.99 seconds
2022-07-07 23:52:57.896224: done
2022-07-07 23:52:57.898570: This epoch took 73.284722 s

2022-07-07 23:52:57.900558: 
epoch:  150
2022-07-07 23:54:05.143872: train loss : -0.7778
2022-07-07 23:54:09.579246: validation loss: -0.7513
2022-07-07 23:54:09.619713: Average global foreground Dice: [0.7884]
2022-07-07 23:54:09.623116: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:54:10.226092: Suus1 maybe_update_lr lr: 0.007236
2022-07-07 23:54:10.228464: This epoch took 72.325790 s

2022-07-07 23:54:10.230460: 
epoch:  151
2022-07-07 23:55:17.563959: train loss : -0.7732
2022-07-07 23:55:21.895381: validation loss: -0.7684
2022-07-07 23:55:21.899201: Average global foreground Dice: [0.8043]
2022-07-07 23:55:21.901799: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:55:22.351780: Suus1 maybe_update_lr lr: 0.007217
2022-07-07 23:55:22.354115: This epoch took 72.121490 s

2022-07-07 23:55:22.356198: 
epoch:  152
2022-07-07 23:56:29.754786: train loss : -0.7693
2022-07-07 23:56:34.182084: validation loss: -0.7648
2022-07-07 23:56:34.213779: Average global foreground Dice: [0.8011]
2022-07-07 23:56:34.241517: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:56:34.794387: Suus1 maybe_update_lr lr: 0.007198
2022-07-07 23:56:34.824336: saving best epoch checkpoint...
2022-07-07 23:56:34.901424: saving checkpoint...
2022-07-07 23:56:35.917401: done, saving took 1.07 seconds
2022-07-07 23:56:35.932839: This epoch took 73.574507 s

2022-07-07 23:56:35.935189: 
epoch:  153
2022-07-07 23:57:43.161042: train loss : -0.7674
2022-07-07 23:57:47.533508: validation loss: -0.7699
2022-07-07 23:57:47.537037: Average global foreground Dice: [0.8087]
2022-07-07 23:57:47.539171: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:57:48.024904: Suus1 maybe_update_lr lr: 0.00718
2022-07-07 23:57:48.027256: saving best epoch checkpoint...
2022-07-07 23:57:48.079683: saving checkpoint...
2022-07-07 23:57:49.115323: done, saving took 1.09 seconds
2022-07-07 23:57:49.130895: This epoch took 73.193549 s

2022-07-07 23:57:49.133080: 
epoch:  154
2022-07-07 23:58:56.449035: train loss : -0.7729
2022-07-07 23:59:00.750042: validation loss: -0.7565
2022-07-07 23:59:00.757862: Average global foreground Dice: [0.8089]
2022-07-07 23:59:00.759987: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-07 23:59:01.460580: Suus1 maybe_update_lr lr: 0.007161
2022-07-07 23:59:01.463120: saving best epoch checkpoint...
2022-07-07 23:59:01.492870: saving checkpoint...
2022-07-07 23:59:02.436477: done, saving took 0.97 seconds
2022-07-07 23:59:02.450378: This epoch took 73.315019 s

2022-07-07 23:59:02.452644: 
epoch:  155
2022-07-08 00:00:09.739476: train loss : -0.7797
2022-07-08 00:00:14.166796: validation loss: -0.7660
2022-07-08 00:00:14.170030: Average global foreground Dice: [0.8067]
2022-07-08 00:00:14.201696: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:00:14.814467: Suus1 maybe_update_lr lr: 0.007142
2022-07-08 00:00:14.817162: saving best epoch checkpoint...
2022-07-08 00:00:14.849098: saving checkpoint...
2022-07-08 00:00:15.848854: done, saving took 1.03 seconds
2022-07-08 00:00:15.863357: This epoch took 73.408584 s

2022-07-08 00:00:15.865605: 
epoch:  156
2022-07-08 00:01:23.187361: train loss : -0.7769
2022-07-08 00:01:27.574022: validation loss: -0.7278
2022-07-08 00:01:27.588022: Average global foreground Dice: [0.782]
2022-07-08 00:01:27.594929: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:01:28.096728: Suus1 maybe_update_lr lr: 0.007123
2022-07-08 00:01:28.099063: This epoch took 72.231100 s

2022-07-08 00:01:28.101224: 
epoch:  157
2022-07-08 00:02:35.374611: train loss : -0.7868
2022-07-08 00:02:39.846873: validation loss: -0.7666
2022-07-08 00:02:39.865478: Average global foreground Dice: [0.8057]
2022-07-08 00:02:39.871983: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:02:40.341565: Suus1 maybe_update_lr lr: 0.007105
2022-07-08 00:02:40.343842: This epoch took 72.240567 s

2022-07-08 00:02:40.345920: 
epoch:  158
2022-07-08 00:03:47.684482: train loss : -0.7813
2022-07-08 00:03:52.013676: validation loss: -0.7860
2022-07-08 00:03:52.026670: Average global foreground Dice: [0.8249]
2022-07-08 00:03:52.042938: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:03:52.548194: Suus1 maybe_update_lr lr: 0.007086
2022-07-08 00:03:52.550508: saving best epoch checkpoint...
2022-07-08 00:03:52.585286: saving checkpoint...
2022-07-08 00:03:53.614547: done, saving took 1.06 seconds
2022-07-08 00:03:53.629066: This epoch took 73.280978 s

2022-07-08 00:03:53.631392: 
epoch:  159
2022-07-08 00:05:00.909144: train loss : -0.7804
2022-07-08 00:05:05.272610: validation loss: -0.7353
2022-07-08 00:05:05.284873: Average global foreground Dice: [0.7772]
2022-07-08 00:05:05.288353: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:05:05.763349: Suus1 maybe_update_lr lr: 0.007067
2022-07-08 00:05:05.765676: This epoch took 72.132092 s

2022-07-08 00:05:05.767848: 
epoch:  160
2022-07-08 00:06:13.227314: train loss : -0.7761
2022-07-08 00:06:17.592640: validation loss: -0.7437
2022-07-08 00:06:17.620648: Average global foreground Dice: [0.7837]
2022-07-08 00:06:17.628623: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:06:18.146787: Suus1 maybe_update_lr lr: 0.007049
2022-07-08 00:06:18.150738: This epoch took 72.380741 s

2022-07-08 00:06:18.153297: 
epoch:  161
2022-07-08 00:07:25.459615: train loss : -0.7780
2022-07-08 00:07:29.853242: validation loss: -0.7504
2022-07-08 00:07:29.885923: Average global foreground Dice: [0.7962]
2022-07-08 00:07:29.905255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:07:30.450470: Suus1 maybe_update_lr lr: 0.00703
2022-07-08 00:07:30.452837: This epoch took 72.297141 s

2022-07-08 00:07:30.454904: 
epoch:  162
2022-07-08 00:08:37.817745: train loss : -0.7725
2022-07-08 00:08:42.329364: validation loss: -0.7541
2022-07-08 00:08:42.346172: Average global foreground Dice: [0.7988]
2022-07-08 00:08:42.350580: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:08:42.873988: Suus1 maybe_update_lr lr: 0.007011
2022-07-08 00:08:42.876386: This epoch took 72.419421 s

2022-07-08 00:08:42.878733: 
epoch:  163
2022-07-08 00:09:50.267885: train loss : -0.7719
2022-07-08 00:09:54.619205: validation loss: -0.7730
2022-07-08 00:09:54.622589: Average global foreground Dice: [0.8079]
2022-07-08 00:09:54.626489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:09:55.268710: Suus1 maybe_update_lr lr: 0.006992
2022-07-08 00:09:55.271131: This epoch took 72.390373 s

2022-07-08 00:09:55.273292: 
epoch:  164
2022-07-08 00:11:02.613600: train loss : -0.7604
2022-07-08 00:11:07.058625: validation loss: -0.7361
2022-07-08 00:11:07.061255: Average global foreground Dice: [0.7824]
2022-07-08 00:11:07.065047: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:11:07.551556: Suus1 maybe_update_lr lr: 0.006974
2022-07-08 00:11:07.553730: This epoch took 72.278185 s

2022-07-08 00:11:07.555677: 
epoch:  165
2022-07-08 00:12:14.874091: train loss : -0.7652
2022-07-08 00:12:19.340908: validation loss: -0.7628
2022-07-08 00:12:19.344348: Average global foreground Dice: [0.8046]
2022-07-08 00:12:19.374295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:12:19.884134: Suus1 maybe_update_lr lr: 0.006955
2022-07-08 00:12:19.886407: This epoch took 72.328734 s

2022-07-08 00:12:19.888469: 
epoch:  166
2022-07-08 00:13:27.234267: train loss : -0.7872
2022-07-08 00:13:31.641342: validation loss: -0.7718
2022-07-08 00:13:31.645766: Average global foreground Dice: [0.8084]
2022-07-08 00:13:31.651384: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:13:32.151782: Suus1 maybe_update_lr lr: 0.006936
2022-07-08 00:13:32.154098: This epoch took 72.263704 s

2022-07-08 00:13:32.156321: 
epoch:  167
2022-07-08 00:14:39.484218: train loss : -0.7835
2022-07-08 00:14:43.942345: validation loss: -0.7548
2022-07-08 00:14:43.958346: Average global foreground Dice: [0.7935]
2022-07-08 00:14:43.990282: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:14:44.584918: Suus1 maybe_update_lr lr: 0.006918
2022-07-08 00:14:44.587585: This epoch took 72.429219 s

2022-07-08 00:14:44.595019: 
epoch:  168
2022-07-08 00:15:51.977545: train loss : -0.7770
2022-07-08 00:15:56.541099: validation loss: -0.7605
2022-07-08 00:15:56.575013: Average global foreground Dice: [0.8]
2022-07-08 00:15:56.588489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:15:57.081990: Suus1 maybe_update_lr lr: 0.006899
2022-07-08 00:15:57.084525: This epoch took 72.482373 s

2022-07-08 00:15:57.086719: 
epoch:  169
2022-07-08 00:17:04.372610: train loss : -0.7792
2022-07-08 00:17:08.764609: validation loss: -0.7591
2022-07-08 00:17:08.771771: Average global foreground Dice: [0.7919]
2022-07-08 00:17:08.792267: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:17:09.341591: Suus1 maybe_update_lr lr: 0.00688
2022-07-08 00:17:09.343970: This epoch took 72.255211 s

2022-07-08 00:17:09.345993: 
epoch:  170
2022-07-08 00:18:16.668274: train loss : -0.7773
2022-07-08 00:18:21.222471: validation loss: -0.7746
2022-07-08 00:18:21.225799: Average global foreground Dice: [0.8154]
2022-07-08 00:18:21.228189: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:18:21.713403: Suus1 maybe_update_lr lr: 0.006861
2022-07-08 00:18:21.715770: This epoch took 72.367669 s

2022-07-08 00:18:21.718043: 
epoch:  171
2022-07-08 00:19:29.038792: train loss : -0.7835
2022-07-08 00:19:33.525894: validation loss: -0.7834
2022-07-08 00:19:33.539761: Average global foreground Dice: [0.8083]
2022-07-08 00:19:33.557586: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:19:34.173442: Suus1 maybe_update_lr lr: 0.006842
2022-07-08 00:19:34.176119: saving best epoch checkpoint...
2022-07-08 00:19:34.224270: saving checkpoint...
2022-07-08 00:19:35.309985: done, saving took 1.13 seconds
2022-07-08 00:19:35.325522: This epoch took 73.605101 s

2022-07-08 00:19:35.327751: 
epoch:  172
2022-07-08 00:20:42.665071: train loss : -0.7859
2022-07-08 00:20:47.154877: validation loss: -0.7672
2022-07-08 00:20:47.175638: Average global foreground Dice: [0.8076]
2022-07-08 00:20:47.206443: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:20:47.774974: Suus1 maybe_update_lr lr: 0.006824
2022-07-08 00:20:47.777406: saving best epoch checkpoint...
2022-07-08 00:20:47.824807: saving checkpoint...
2022-07-08 00:20:48.809980: done, saving took 1.03 seconds
2022-07-08 00:20:48.826183: This epoch took 73.496149 s

2022-07-08 00:20:48.828417: 
epoch:  173
2022-07-08 00:21:56.149944: train loss : -0.7914
2022-07-08 00:22:00.500399: validation loss: -0.7710
2022-07-08 00:22:00.519451: Average global foreground Dice: [0.8077]
2022-07-08 00:22:00.526972: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:22:01.003627: Suus1 maybe_update_lr lr: 0.006805
2022-07-08 00:22:01.006365: saving best epoch checkpoint...
2022-07-08 00:22:01.061943: saving checkpoint...
2022-07-08 00:22:02.122779: done, saving took 1.11 seconds
2022-07-08 00:22:02.139764: This epoch took 73.308846 s

2022-07-08 00:22:02.142684: 
epoch:  174
2022-07-08 00:23:09.611747: train loss : -0.7839
2022-07-08 00:23:14.254206: validation loss: -0.7616
2022-07-08 00:23:14.269863: Average global foreground Dice: [0.7959]
2022-07-08 00:23:14.296034: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:23:14.857993: Suus1 maybe_update_lr lr: 0.006786
2022-07-08 00:23:14.860390: This epoch took 72.714987 s

2022-07-08 00:23:14.862546: 
epoch:  175
2022-07-08 00:24:22.239768: train loss : -0.7929
2022-07-08 00:24:26.666340: validation loss: -0.7701
2022-07-08 00:24:26.669401: Average global foreground Dice: [0.8084]
2022-07-08 00:24:26.671752: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:24:27.130021: Suus1 maybe_update_lr lr: 0.006767
2022-07-08 00:24:27.141791: saving best epoch checkpoint...
2022-07-08 00:24:27.246499: saving checkpoint...
2022-07-08 00:24:28.227054: done, saving took 1.06 seconds
2022-07-08 00:24:28.243052: This epoch took 73.378355 s

2022-07-08 00:24:28.245392: 
epoch:  176
2022-07-08 00:25:35.487497: train loss : -0.7806
2022-07-08 00:25:40.064369: validation loss: -0.7588
2022-07-08 00:25:40.074288: Average global foreground Dice: [0.7997]
2022-07-08 00:25:40.088094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:25:40.619789: Suus1 maybe_update_lr lr: 0.006749
2022-07-08 00:25:40.625136: This epoch took 72.377588 s

2022-07-08 00:25:40.627316: 
epoch:  177
2022-07-08 00:26:48.072057: train loss : -0.7730
2022-07-08 00:26:52.667286: validation loss: -0.7519
2022-07-08 00:26:52.690805: Average global foreground Dice: [0.7975]
2022-07-08 00:26:52.712341: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:26:53.309047: Suus1 maybe_update_lr lr: 0.00673
2022-07-08 00:26:53.311550: This epoch took 72.676806 s

2022-07-08 00:26:53.313753: 
epoch:  178
2022-07-08 00:28:00.624997: train loss : -0.7818
2022-07-08 00:28:04.968467: validation loss: -0.7767
2022-07-08 00:28:04.980970: Average global foreground Dice: [0.8157]
2022-07-08 00:28:04.991645: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:28:05.503285: Suus1 maybe_update_lr lr: 0.006711
2022-07-08 00:28:05.505642: saving best epoch checkpoint...
2022-07-08 00:28:05.554034: saving checkpoint...
2022-07-08 00:28:06.657645: done, saving took 1.15 seconds
2022-07-08 00:28:06.673294: This epoch took 73.357511 s

2022-07-08 00:28:06.675607: 
epoch:  179
2022-07-08 00:29:13.993776: train loss : -0.7769
2022-07-08 00:29:18.386373: validation loss: -0.7692
2022-07-08 00:29:18.391871: Average global foreground Dice: [0.8042]
2022-07-08 00:29:18.394148: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:29:18.891076: Suus1 maybe_update_lr lr: 0.006692
2022-07-08 00:29:18.917336: saving best epoch checkpoint...
2022-07-08 00:29:18.971596: saving checkpoint...
2022-07-08 00:29:20.021899: done, saving took 1.08 seconds
2022-07-08 00:29:20.036222: This epoch took 73.358342 s

2022-07-08 00:29:20.038430: 
epoch:  180
2022-07-08 00:30:27.332863: train loss : -0.7776
2022-07-08 00:30:31.902270: validation loss: -0.7647
2022-07-08 00:30:31.923067: Average global foreground Dice: [0.8012]
2022-07-08 00:30:31.942129: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:30:32.477083: Suus1 maybe_update_lr lr: 0.006673
2022-07-08 00:30:32.479400: This epoch took 72.438877 s

2022-07-08 00:30:32.481546: 
epoch:  181
2022-07-08 00:31:39.755738: train loss : -0.7683
2022-07-08 00:31:44.189349: validation loss: -0.7708
2022-07-08 00:31:44.221595: Average global foreground Dice: [0.8105]
2022-07-08 00:31:44.226300: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:31:44.767664: Suus1 maybe_update_lr lr: 0.006654
2022-07-08 00:31:44.769945: saving best epoch checkpoint...
2022-07-08 00:31:44.802097: saving checkpoint...
2022-07-08 00:31:45.885861: done, saving took 1.11 seconds
2022-07-08 00:31:45.900225: This epoch took 73.416550 s

2022-07-08 00:31:45.902541: 
epoch:  182
2022-07-08 00:32:53.223641: train loss : -0.7712
2022-07-08 00:32:57.818729: validation loss: -0.7649
2022-07-08 00:32:57.821971: Average global foreground Dice: [0.8036]
2022-07-08 00:32:57.825173: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:32:58.347003: Suus1 maybe_update_lr lr: 0.006636
2022-07-08 00:32:58.349543: saving best epoch checkpoint...
2022-07-08 00:32:58.383354: saving checkpoint...
2022-07-08 00:32:59.377847: done, saving took 1.03 seconds
2022-07-08 00:32:59.392052: This epoch took 73.487406 s

2022-07-08 00:32:59.394446: 
epoch:  183
2022-07-08 00:34:06.687346: train loss : -0.7852
2022-07-08 00:34:11.178369: validation loss: -0.7538
2022-07-08 00:34:11.195211: Average global foreground Dice: [0.7952]
2022-07-08 00:34:11.199566: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:34:11.811251: Suus1 maybe_update_lr lr: 0.006617
2022-07-08 00:34:11.816694: This epoch took 72.419797 s

2022-07-08 00:34:11.821232: 
epoch:  184
2022-07-08 00:35:19.066359: train loss : -0.7812
2022-07-08 00:35:23.445975: validation loss: -0.7502
2022-07-08 00:35:23.450093: Average global foreground Dice: [0.7865]
2022-07-08 00:35:23.452743: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:35:23.990392: Suus1 maybe_update_lr lr: 0.006598
2022-07-08 00:35:23.993053: This epoch took 72.165228 s

2022-07-08 00:35:23.995473: 
epoch:  185
2022-07-08 00:36:31.441042: train loss : -0.7910
2022-07-08 00:36:35.885131: validation loss: -0.7657
2022-07-08 00:36:35.893575: Average global foreground Dice: [0.7991]
2022-07-08 00:36:35.905769: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:36:36.436045: Suus1 maybe_update_lr lr: 0.006579
2022-07-08 00:36:36.438668: This epoch took 72.440886 s

2022-07-08 00:36:36.441126: 
epoch:  186
2022-07-08 00:37:43.684641: train loss : -0.7840
2022-07-08 00:37:48.039491: validation loss: -0.7575
2022-07-08 00:37:48.046519: Average global foreground Dice: [0.7959]
2022-07-08 00:37:48.051392: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:37:48.639919: Suus1 maybe_update_lr lr: 0.00656
2022-07-08 00:37:48.642160: This epoch took 72.198729 s

2022-07-08 00:37:48.644419: 
epoch:  187
2022-07-08 00:38:55.939734: train loss : -0.7825
2022-07-08 00:39:00.423023: validation loss: -0.7891
2022-07-08 00:39:00.427333: Average global foreground Dice: [0.8231]
2022-07-08 00:39:00.430004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:39:00.908756: Suus1 maybe_update_lr lr: 0.006541
2022-07-08 00:39:00.911601: This epoch took 72.265096 s

2022-07-08 00:39:00.915152: 
epoch:  188
2022-07-08 00:40:08.204196: train loss : -0.7606
2022-07-08 00:40:12.669182: validation loss: -0.7373
2022-07-08 00:40:12.686602: Average global foreground Dice: [0.7806]
2022-07-08 00:40:12.692252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:40:13.195512: Suus1 maybe_update_lr lr: 0.006522
2022-07-08 00:40:13.197497: This epoch took 72.277994 s

2022-07-08 00:40:13.200231: 
epoch:  189
2022-07-08 00:41:20.580959: train loss : -0.7944
2022-07-08 00:41:25.047649: validation loss: -0.7879
2022-07-08 00:41:25.054255: Average global foreground Dice: [0.8208]
2022-07-08 00:41:25.056885: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:41:25.589785: Suus1 maybe_update_lr lr: 0.006504
2022-07-08 00:41:25.592080: This epoch took 72.389729 s

2022-07-08 00:41:25.594502: 
epoch:  190
2022-07-08 00:42:32.997171: train loss : -0.7945
2022-07-08 00:42:37.638207: validation loss: -0.7571
2022-07-08 00:42:37.645159: Average global foreground Dice: [0.7973]
2022-07-08 00:42:37.647522: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:42:38.155622: Suus1 maybe_update_lr lr: 0.006485
2022-07-08 00:42:38.158010: This epoch took 72.561340 s

2022-07-08 00:42:38.160084: 
epoch:  191
2022-07-08 00:43:45.525161: train loss : -0.7964
2022-07-08 00:43:50.037174: validation loss: -0.7715
2022-07-08 00:43:50.044507: Average global foreground Dice: [0.8064]
2022-07-08 00:43:50.048749: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:43:50.494165: Suus1 maybe_update_lr lr: 0.006466
2022-07-08 00:43:50.496518: This epoch took 72.334409 s

2022-07-08 00:43:50.498758: 
epoch:  192
2022-07-08 00:44:57.879656: train loss : -0.7834
2022-07-08 00:45:02.351805: validation loss: -0.7625
2022-07-08 00:45:02.377543: Average global foreground Dice: [0.7954]
2022-07-08 00:45:02.383049: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:45:02.957834: Suus1 maybe_update_lr lr: 0.006447
2022-07-08 00:45:02.960570: This epoch took 72.459631 s

2022-07-08 00:45:02.962620: 
epoch:  193
2022-07-08 00:46:10.379825: train loss : -0.7867
2022-07-08 00:46:14.776852: validation loss: -0.7735
2022-07-08 00:46:14.796625: Average global foreground Dice: [0.8083]
2022-07-08 00:46:14.802692: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:46:15.311817: Suus1 maybe_update_lr lr: 0.006428
2022-07-08 00:46:15.314191: This epoch took 72.349653 s

2022-07-08 00:46:15.316311: 
epoch:  194
2022-07-08 00:47:22.556020: train loss : -0.7856
2022-07-08 00:47:27.202051: validation loss: -0.7532
2022-07-08 00:47:27.207442: Average global foreground Dice: [0.793]
2022-07-08 00:47:27.214254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:47:27.718399: Suus1 maybe_update_lr lr: 0.006409
2022-07-08 00:47:27.720549: This epoch took 72.402187 s

2022-07-08 00:47:27.722510: 
epoch:  195
2022-07-08 00:48:35.085010: train loss : -0.7968
2022-07-08 00:48:39.484746: validation loss: -0.7393
2022-07-08 00:48:39.488407: Average global foreground Dice: [0.7843]
2022-07-08 00:48:39.506851: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:48:40.002890: Suus1 maybe_update_lr lr: 0.00639
2022-07-08 00:48:40.005373: This epoch took 72.280487 s

2022-07-08 00:48:40.007760: 
epoch:  196
2022-07-08 00:49:47.399647: train loss : -0.7889
2022-07-08 00:49:51.801280: validation loss: -0.7534
2022-07-08 00:49:51.814600: Average global foreground Dice: [0.7921]
2022-07-08 00:49:51.817235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:49:52.339875: Suus1 maybe_update_lr lr: 0.006371
2022-07-08 00:49:52.342364: This epoch took 72.332480 s

2022-07-08 00:49:52.344476: 
epoch:  197
2022-07-08 00:50:59.655602: train loss : -0.7864
2022-07-08 00:51:04.093992: validation loss: -0.7664
2022-07-08 00:51:04.122019: Average global foreground Dice: [0.8063]
2022-07-08 00:51:04.140948: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:51:04.602535: Suus1 maybe_update_lr lr: 0.006352
2022-07-08 00:51:04.604988: This epoch took 72.258486 s

2022-07-08 00:51:04.607146: 
epoch:  198
2022-07-08 00:52:11.966064: train loss : -0.7867
2022-07-08 00:52:16.564175: validation loss: -0.7499
2022-07-08 00:52:16.593948: Average global foreground Dice: [0.7954]
2022-07-08 00:52:16.609948: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:52:17.119105: Suus1 maybe_update_lr lr: 0.006333
2022-07-08 00:52:17.121662: This epoch took 72.512439 s

2022-07-08 00:52:17.124019: 
epoch:  199
2022-07-08 00:53:24.531607: train loss : -0.7759
2022-07-08 00:53:28.984256: validation loss: -0.7475
2022-07-08 00:53:28.987454: Average global foreground Dice: [0.7987]
2022-07-08 00:53:28.989621: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:53:29.497670: Suus1 maybe_update_lr lr: 0.006314
2022-07-08 00:53:29.499821: saving scheduled checkpoint file...
2022-07-08 00:53:29.545411: saving checkpoint...
2022-07-08 00:53:30.621968: done, saving took 1.12 seconds
2022-07-08 00:53:30.638076: done
2022-07-08 00:53:30.640254: This epoch took 73.513929 s

2022-07-08 00:53:30.642385: 
epoch:  200
2022-07-08 00:54:38.044673: train loss : -0.7924
2022-07-08 00:54:42.524094: validation loss: -0.7323
2022-07-08 00:54:42.548725: Average global foreground Dice: [0.7812]
2022-07-08 00:54:42.568284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:54:43.119269: Suus1 maybe_update_lr lr: 0.006296
2022-07-08 00:54:43.121669: This epoch took 72.477166 s

2022-07-08 00:54:43.123741: 
epoch:  201
2022-07-08 00:55:50.457300: train loss : -0.7795
2022-07-08 00:55:55.028761: validation loss: -0.7416
2022-07-08 00:55:55.033512: Average global foreground Dice: [0.7813]
2022-07-08 00:55:55.035889: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:55:55.676980: Suus1 maybe_update_lr lr: 0.006277
2022-07-08 00:55:55.679394: This epoch took 72.553500 s

2022-07-08 00:55:55.681655: 
epoch:  202
2022-07-08 00:57:03.081711: train loss : -0.7865
2022-07-08 00:57:07.533740: validation loss: -0.7647
2022-07-08 00:57:07.538876: Average global foreground Dice: [0.8088]
2022-07-08 00:57:07.541004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:57:08.076173: Suus1 maybe_update_lr lr: 0.006258
2022-07-08 00:57:08.079037: This epoch took 72.395380 s

2022-07-08 00:57:08.081270: 
epoch:  203
2022-07-08 00:58:15.433505: train loss : -0.7884
2022-07-08 00:58:19.810014: validation loss: -0.7634
2022-07-08 00:58:19.829643: Average global foreground Dice: [0.8077]
2022-07-08 00:58:19.851258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:58:20.355089: Suus1 maybe_update_lr lr: 0.006239
2022-07-08 00:58:20.357780: This epoch took 72.274348 s

2022-07-08 00:58:20.360120: 
epoch:  204
2022-07-08 00:59:27.642128: train loss : -0.7889
2022-07-08 00:59:32.074230: validation loss: -0.7752
2022-07-08 00:59:32.086471: Average global foreground Dice: [0.8167]
2022-07-08 00:59:32.097345: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 00:59:32.611609: Suus1 maybe_update_lr lr: 0.00622
2022-07-08 00:59:32.614115: This epoch took 72.251965 s

2022-07-08 00:59:32.617863: 
epoch:  205
2022-07-08 01:00:39.817478: train loss : -0.7962
2022-07-08 01:00:44.159440: validation loss: -0.7524
2022-07-08 01:00:44.176209: Average global foreground Dice: [0.7917]
2022-07-08 01:00:44.199501: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:00:44.690707: Suus1 maybe_update_lr lr: 0.006201
2022-07-08 01:00:44.692898: This epoch took 72.071549 s

2022-07-08 01:00:44.695066: 
epoch:  206
2022-07-08 01:01:52.017873: train loss : -0.7978
2022-07-08 01:01:56.463161: validation loss: -0.7617
2022-07-08 01:01:56.466617: Average global foreground Dice: [0.8048]
2022-07-08 01:01:56.469430: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:01:56.933107: Suus1 maybe_update_lr lr: 0.006182
2022-07-08 01:01:56.935814: This epoch took 72.238553 s

2022-07-08 01:01:56.938056: 
epoch:  207
2022-07-08 01:03:04.185617: train loss : -0.7981
2022-07-08 01:03:08.544513: validation loss: -0.7535
2022-07-08 01:03:08.551763: Average global foreground Dice: [0.8051]
2022-07-08 01:03:08.554223: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:03:08.991533: Suus1 maybe_update_lr lr: 0.006163
2022-07-08 01:03:08.994349: This epoch took 72.053957 s

2022-07-08 01:03:08.996800: 
epoch:  208
2022-07-08 01:04:16.309015: train loss : -0.7898
2022-07-08 01:04:20.740119: validation loss: -0.7828
2022-07-08 01:04:20.752175: Average global foreground Dice: [0.8125]
2022-07-08 01:04:20.754417: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:04:21.252421: Suus1 maybe_update_lr lr: 0.006144
2022-07-08 01:04:21.254758: This epoch took 72.255767 s

2022-07-08 01:04:21.256953: 
epoch:  209
2022-07-08 01:05:28.609329: train loss : -0.7926
2022-07-08 01:05:32.990097: validation loss: -0.7983
2022-07-08 01:05:33.016964: Average global foreground Dice: [0.8325]
2022-07-08 01:05:33.019606: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:05:33.456998: Suus1 maybe_update_lr lr: 0.006125
2022-07-08 01:05:33.459413: saving best epoch checkpoint...
2022-07-08 01:05:33.504786: saving checkpoint...
2022-07-08 01:05:34.697600: done, saving took 1.24 seconds
2022-07-08 01:05:34.713871: This epoch took 73.454915 s

2022-07-08 01:05:34.716251: 
epoch:  210
2022-07-08 01:06:41.963672: train loss : -0.8068
2022-07-08 01:06:46.439203: validation loss: -0.7761
2022-07-08 01:06:46.464794: Average global foreground Dice: [0.8052]
2022-07-08 01:06:46.475792: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:06:47.052826: Suus1 maybe_update_lr lr: 0.006106
2022-07-08 01:06:47.055306: saving best epoch checkpoint...
2022-07-08 01:06:47.099187: saving checkpoint...
2022-07-08 01:06:48.107137: done, saving took 1.05 seconds
2022-07-08 01:06:48.123511: This epoch took 73.404968 s

2022-07-08 01:06:48.125905: 
epoch:  211
2022-07-08 01:07:55.535468: train loss : -0.8008
2022-07-08 01:07:59.993358: validation loss: -0.7584
2022-07-08 01:08:00.006675: Average global foreground Dice: [0.797]
2022-07-08 01:08:00.009268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:08:00.500049: Suus1 maybe_update_lr lr: 0.006087
2022-07-08 01:08:00.502507: This epoch took 72.374321 s

2022-07-08 01:08:00.504741: 
epoch:  212
2022-07-08 01:09:07.827174: train loss : -0.8099
2022-07-08 01:09:12.344676: validation loss: -0.7831
2022-07-08 01:09:12.355023: Average global foreground Dice: [0.8168]
2022-07-08 01:09:12.367866: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:09:12.941916: Suus1 maybe_update_lr lr: 0.006068
2022-07-08 01:09:12.944532: saving best epoch checkpoint...
2022-07-08 01:09:12.994455: saving checkpoint...
2022-07-08 01:09:14.169226: done, saving took 1.22 seconds
2022-07-08 01:09:14.186705: This epoch took 73.679792 s

2022-07-08 01:09:14.188954: 
epoch:  213
2022-07-08 01:10:21.453667: train loss : -0.7992
2022-07-08 01:10:25.984299: validation loss: -0.7744
2022-07-08 01:10:25.994000: Average global foreground Dice: [0.8081]
2022-07-08 01:10:25.998848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:10:26.518360: Suus1 maybe_update_lr lr: 0.006049
2022-07-08 01:10:26.520743: saving best epoch checkpoint...
2022-07-08 01:10:26.566771: saving checkpoint...
2022-07-08 01:10:27.722564: done, saving took 1.20 seconds
2022-07-08 01:10:27.737898: This epoch took 73.546631 s

2022-07-08 01:10:27.740229: 
epoch:  214
2022-07-08 01:11:35.087843: train loss : -0.8049
2022-07-08 01:11:39.433209: validation loss: -0.7555
2022-07-08 01:11:39.440850: Average global foreground Dice: [0.7891]
2022-07-08 01:11:39.459312: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:11:39.960151: Suus1 maybe_update_lr lr: 0.00603
2022-07-08 01:11:39.962357: This epoch took 72.219590 s

2022-07-08 01:11:39.964406: 
epoch:  215
2022-07-08 01:12:47.338021: train loss : -0.7972
2022-07-08 01:12:51.871844: validation loss: -0.7700
2022-07-08 01:12:51.879036: Average global foreground Dice: [0.8084]
2022-07-08 01:12:51.881418: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:12:52.326754: Suus1 maybe_update_lr lr: 0.006011
2022-07-08 01:12:52.331284: This epoch took 72.364827 s

2022-07-08 01:12:52.342776: 
epoch:  216
2022-07-08 01:13:59.716553: train loss : -0.7957
2022-07-08 01:14:04.165574: validation loss: -0.7643
2022-07-08 01:14:04.179723: Average global foreground Dice: [0.8008]
2022-07-08 01:14:04.183878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:14:04.658096: Suus1 maybe_update_lr lr: 0.005991
2022-07-08 01:14:04.662670: This epoch took 72.316897 s

2022-07-08 01:14:04.664890: 
epoch:  217
2022-07-08 01:15:12.018348: train loss : -0.7949
2022-07-08 01:15:16.448467: validation loss: -0.7622
2022-07-08 01:15:16.454871: Average global foreground Dice: [0.7925]
2022-07-08 01:15:16.471926: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:15:17.301322: Suus1 maybe_update_lr lr: 0.005972
2022-07-08 01:15:17.303680: This epoch took 72.636464 s

2022-07-08 01:15:17.305784: 
epoch:  218
2022-07-08 01:16:24.536999: train loss : -0.8015
2022-07-08 01:16:29.090011: validation loss: -0.7794
2022-07-08 01:16:29.101846: Average global foreground Dice: [0.8079]
2022-07-08 01:16:29.123333: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:16:29.594382: Suus1 maybe_update_lr lr: 0.005953
2022-07-08 01:16:29.596889: This epoch took 72.288958 s

2022-07-08 01:16:29.598958: 
epoch:  219
2022-07-08 01:17:36.908566: train loss : -0.7949
2022-07-08 01:17:41.401042: validation loss: -0.7411
2022-07-08 01:17:41.414386: Average global foreground Dice: [0.7825]
2022-07-08 01:17:41.417466: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:17:41.865324: Suus1 maybe_update_lr lr: 0.005934
2022-07-08 01:17:41.867752: This epoch took 72.266744 s

2022-07-08 01:17:41.869950: 
epoch:  220
2022-07-08 01:18:49.195286: train loss : -0.7910
2022-07-08 01:18:53.801783: validation loss: -0.7679
2022-07-08 01:18:53.832753: Average global foreground Dice: [0.8004]
2022-07-08 01:18:53.845719: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:18:54.336107: Suus1 maybe_update_lr lr: 0.005915
2022-07-08 01:18:54.338328: This epoch took 72.466290 s

2022-07-08 01:18:54.340363: 
epoch:  221
2022-07-08 01:20:01.703199: train loss : -0.7985
2022-07-08 01:20:06.120894: validation loss: -0.7592
2022-07-08 01:20:06.135932: Average global foreground Dice: [0.7936]
2022-07-08 01:20:06.145715: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:20:06.652663: Suus1 maybe_update_lr lr: 0.005896
2022-07-08 01:20:06.655387: This epoch took 72.312909 s

2022-07-08 01:20:06.657604: 
epoch:  222
2022-07-08 01:21:13.912542: train loss : -0.7926
2022-07-08 01:21:18.353616: validation loss: -0.7599
2022-07-08 01:21:18.404737: Average global foreground Dice: [0.7951]
2022-07-08 01:21:18.437281: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:21:18.913531: Suus1 maybe_update_lr lr: 0.005877
2022-07-08 01:21:18.916103: This epoch took 72.256379 s

2022-07-08 01:21:18.918396: 
epoch:  223
2022-07-08 01:22:26.188861: train loss : -0.8023
2022-07-08 01:22:30.588014: validation loss: -0.7768
2022-07-08 01:22:30.612541: Average global foreground Dice: [0.8085]
2022-07-08 01:22:30.642263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:22:31.216993: Suus1 maybe_update_lr lr: 0.005858
2022-07-08 01:22:31.219324: This epoch took 72.298714 s

2022-07-08 01:22:31.221345: 
epoch:  224
2022-07-08 01:23:38.514573: train loss : -0.8079
2022-07-08 01:23:43.144885: validation loss: -0.7821
2022-07-08 01:23:43.148591: Average global foreground Dice: [0.8199]
2022-07-08 01:23:43.151483: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:23:43.664564: Suus1 maybe_update_lr lr: 0.005839
2022-07-08 01:23:43.674917: This epoch took 72.451260 s

2022-07-08 01:23:43.688273: 
epoch:  225
2022-07-08 01:24:51.017907: train loss : -0.8111
2022-07-08 01:24:55.465999: validation loss: -0.7539
2022-07-08 01:24:55.477344: Average global foreground Dice: [0.7958]
2022-07-08 01:24:55.491668: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:24:55.946337: Suus1 maybe_update_lr lr: 0.00582
2022-07-08 01:24:55.948927: This epoch took 72.247400 s

2022-07-08 01:24:55.951157: 
epoch:  226
2022-07-08 01:26:03.250560: train loss : -0.8118
2022-07-08 01:26:07.747088: validation loss: -0.7692
2022-07-08 01:26:07.769962: Average global foreground Dice: [0.8076]
2022-07-08 01:26:07.784728: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:26:08.348779: Suus1 maybe_update_lr lr: 0.005801
2022-07-08 01:26:08.351133: This epoch took 72.397914 s

2022-07-08 01:26:08.353169: 
epoch:  227
2022-07-08 01:27:15.566064: train loss : -0.8004
2022-07-08 01:27:20.017213: validation loss: -0.7561
2022-07-08 01:27:20.033499: Average global foreground Dice: [0.7904]
2022-07-08 01:27:20.069077: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:27:20.567297: Suus1 maybe_update_lr lr: 0.005781
2022-07-08 01:27:20.570211: This epoch took 72.215037 s

2022-07-08 01:27:20.572537: 
epoch:  228
2022-07-08 01:28:27.849498: train loss : -0.7879
2022-07-08 01:28:32.480689: validation loss: -0.7840
2022-07-08 01:28:32.488779: Average global foreground Dice: [0.8189]
2022-07-08 01:28:32.491815: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:28:32.925560: Suus1 maybe_update_lr lr: 0.005762
2022-07-08 01:28:32.927886: This epoch took 72.353356 s

2022-07-08 01:28:32.929960: 
epoch:  229
2022-07-08 01:29:40.243472: train loss : -0.7583
2022-07-08 01:29:44.703888: validation loss: -0.7502
2022-07-08 01:29:44.739780: Average global foreground Dice: [0.7945]
2022-07-08 01:29:44.772247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:29:45.224196: Suus1 maybe_update_lr lr: 0.005743
2022-07-08 01:29:45.226590: This epoch took 72.294596 s

2022-07-08 01:29:45.228731: 
epoch:  230
2022-07-08 01:30:52.504753: train loss : -0.7844
2022-07-08 01:30:57.125620: validation loss: -0.7759
2022-07-08 01:30:57.150710: Average global foreground Dice: [0.8131]
2022-07-08 01:30:57.163439: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:30:57.708253: Suus1 maybe_update_lr lr: 0.005724
2022-07-08 01:30:57.710386: This epoch took 72.480185 s

2022-07-08 01:30:57.712373: 
epoch:  231
2022-07-08 01:32:05.081017: train loss : -0.7922
2022-07-08 01:32:09.497983: validation loss: -0.7361
2022-07-08 01:32:09.518729: Average global foreground Dice: [0.7831]
2022-07-08 01:32:09.530275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:32:10.087790: Suus1 maybe_update_lr lr: 0.005705
2022-07-08 01:32:10.090486: This epoch took 72.376337 s

2022-07-08 01:32:10.092597: 
epoch:  232
2022-07-08 01:33:17.492656: train loss : -0.7862
2022-07-08 01:33:21.887066: validation loss: -0.7524
2022-07-08 01:33:21.897817: Average global foreground Dice: [0.7954]
2022-07-08 01:33:21.914055: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:33:22.468324: Suus1 maybe_update_lr lr: 0.005686
2022-07-08 01:33:22.470468: This epoch took 72.375823 s

2022-07-08 01:33:22.472350: 
epoch:  233
2022-07-08 01:34:29.851159: train loss : -0.8041
2022-07-08 01:34:34.168943: validation loss: -0.7791
2022-07-08 01:34:34.195626: Average global foreground Dice: [0.822]
2022-07-08 01:34:34.198574: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:34:34.704228: Suus1 maybe_update_lr lr: 0.005667
2022-07-08 01:34:34.706651: This epoch took 72.232512 s

2022-07-08 01:34:34.708703: 
epoch:  234
2022-07-08 01:35:41.976822: train loss : -0.8116
2022-07-08 01:35:46.410908: validation loss: -0.7899
2022-07-08 01:35:46.420909: Average global foreground Dice: [0.8249]
2022-07-08 01:35:46.449877: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:35:46.990384: Suus1 maybe_update_lr lr: 0.005647
2022-07-08 01:35:46.993536: This epoch took 72.282851 s

2022-07-08 01:35:46.996160: 
epoch:  235
2022-07-08 01:36:54.236224: train loss : -0.8135
2022-07-08 01:36:58.680691: validation loss: -0.7749
2022-07-08 01:36:58.685967: Average global foreground Dice: [0.8128]
2022-07-08 01:36:58.688240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:36:59.181433: Suus1 maybe_update_lr lr: 0.005628
2022-07-08 01:36:59.183695: saving best epoch checkpoint...
2022-07-08 01:36:59.229849: saving checkpoint...
2022-07-08 01:37:00.273704: done, saving took 1.09 seconds
2022-07-08 01:37:00.291318: This epoch took 73.293052 s

2022-07-08 01:37:00.293878: 
epoch:  236
2022-07-08 01:38:07.492926: train loss : -0.8052
2022-07-08 01:38:11.959247: validation loss: -0.7774
2022-07-08 01:38:11.971579: Average global foreground Dice: [0.8163]
2022-07-08 01:38:11.973952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:38:12.455789: Suus1 maybe_update_lr lr: 0.005609
2022-07-08 01:38:12.457883: saving best epoch checkpoint...
2022-07-08 01:38:12.506464: saving checkpoint...
2022-07-08 01:38:13.445539: done, saving took 0.99 seconds
2022-07-08 01:38:13.460763: This epoch took 73.164754 s

2022-07-08 01:38:13.462855: 
epoch:  237
2022-07-08 01:39:20.647911: train loss : -0.7996
2022-07-08 01:39:25.209575: validation loss: -0.7741
2022-07-08 01:39:25.213235: Average global foreground Dice: [0.8115]
2022-07-08 01:39:25.215530: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:39:25.688648: Suus1 maybe_update_lr lr: 0.00559
2022-07-08 01:39:25.709334: saving best epoch checkpoint...
2022-07-08 01:39:25.794462: saving checkpoint...
2022-07-08 01:39:26.976441: done, saving took 1.25 seconds
2022-07-08 01:39:26.993737: This epoch took 73.528755 s

2022-07-08 01:39:26.995947: 
epoch:  238
2022-07-08 01:40:34.348148: train loss : -0.8053
2022-07-08 01:40:38.903130: validation loss: -0.7737
2022-07-08 01:40:38.907951: Average global foreground Dice: [0.8069]
2022-07-08 01:40:38.910208: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:40:39.522030: Suus1 maybe_update_lr lr: 0.005571
2022-07-08 01:40:39.524846: This epoch took 72.526638 s

2022-07-08 01:40:39.526966: 
epoch:  239
2022-07-08 01:41:46.922038: train loss : -0.7961
2022-07-08 01:41:51.354310: validation loss: -0.7406
2022-07-08 01:41:51.357592: Average global foreground Dice: [0.787]
2022-07-08 01:41:51.360471: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:41:51.840385: Suus1 maybe_update_lr lr: 0.005551
2022-07-08 01:41:51.842815: This epoch took 72.313796 s

2022-07-08 01:41:51.844820: 
epoch:  240
2022-07-08 01:42:59.217139: train loss : -0.7934
2022-07-08 01:43:03.614053: validation loss: -0.7890
2022-07-08 01:43:03.635211: Average global foreground Dice: [0.8215]
2022-07-08 01:43:03.644030: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:43:04.276882: Suus1 maybe_update_lr lr: 0.005532
2022-07-08 01:43:04.279175: This epoch took 72.432415 s

2022-07-08 01:43:04.281371: 
epoch:  241
2022-07-08 01:44:11.674349: train loss : -0.7969
2022-07-08 01:44:16.089171: validation loss: -0.7727
2022-07-08 01:44:16.094713: Average global foreground Dice: [0.8066]
2022-07-08 01:44:16.097593: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:44:16.570041: Suus1 maybe_update_lr lr: 0.005513
2022-07-08 01:44:16.574102: This epoch took 72.290616 s

2022-07-08 01:44:16.576204: 
epoch:  242
2022-07-08 01:45:23.941388: train loss : -0.7977
2022-07-08 01:45:28.424399: validation loss: -0.7757
2022-07-08 01:45:28.428480: Average global foreground Dice: [0.8078]
2022-07-08 01:45:28.458258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:45:29.094866: Suus1 maybe_update_lr lr: 0.005494
2022-07-08 01:45:29.097179: This epoch took 72.517593 s

2022-07-08 01:45:29.099318: 
epoch:  243
2022-07-08 01:46:36.475076: train loss : -0.7945
2022-07-08 01:46:40.917296: validation loss: -0.7586
2022-07-08 01:46:40.920456: Average global foreground Dice: [0.7969]
2022-07-08 01:46:40.942391: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:46:41.589821: Suus1 maybe_update_lr lr: 0.005474
2022-07-08 01:46:41.592303: This epoch took 72.490870 s

2022-07-08 01:46:41.594364: 
epoch:  244
2022-07-08 01:47:48.971139: train loss : -0.8042
2022-07-08 01:47:53.611413: validation loss: -0.7839
2022-07-08 01:47:53.623613: Average global foreground Dice: [0.8152]
2022-07-08 01:47:53.630194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:47:54.176419: Suus1 maybe_update_lr lr: 0.005455
2022-07-08 01:47:54.178609: This epoch took 72.582131 s

2022-07-08 01:47:54.180506: 
epoch:  245
2022-07-08 01:49:01.529781: train loss : -0.8045
2022-07-08 01:49:05.883626: validation loss: -0.7621
2022-07-08 01:49:05.912662: Average global foreground Dice: [0.7992]
2022-07-08 01:49:05.934282: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:49:06.512868: Suus1 maybe_update_lr lr: 0.005436
2022-07-08 01:49:06.515264: This epoch took 72.332861 s

2022-07-08 01:49:06.517234: 
epoch:  246
2022-07-08 01:50:13.855790: train loss : -0.8063
2022-07-08 01:50:18.264317: validation loss: -0.7610
2022-07-08 01:50:18.267672: Average global foreground Dice: [0.8044]
2022-07-08 01:50:18.276187: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:50:18.735709: Suus1 maybe_update_lr lr: 0.005417
2022-07-08 01:50:18.738042: This epoch took 72.218820 s

2022-07-08 01:50:18.740216: 
epoch:  247
2022-07-08 01:51:26.169051: train loss : -0.7900
2022-07-08 01:51:30.707289: validation loss: -0.7560
2022-07-08 01:51:30.724805: Average global foreground Dice: [0.7952]
2022-07-08 01:51:30.745120: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:51:31.217299: Suus1 maybe_update_lr lr: 0.005397
2022-07-08 01:51:31.219712: This epoch took 72.476680 s

2022-07-08 01:51:31.221864: 
epoch:  248
2022-07-08 01:52:38.647320: train loss : -0.7984
2022-07-08 01:52:42.997992: validation loss: -0.7579
2022-07-08 01:52:43.018923: Average global foreground Dice: [0.7921]
2022-07-08 01:52:43.022773: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:52:43.490007: Suus1 maybe_update_lr lr: 0.005378
2022-07-08 01:52:43.492807: This epoch took 72.268846 s

2022-07-08 01:52:43.495188: 
epoch:  249
2022-07-08 01:53:50.902871: train loss : -0.7827
2022-07-08 01:53:55.345550: validation loss: -0.7596
2022-07-08 01:53:55.352464: Average global foreground Dice: [0.7989]
2022-07-08 01:53:55.385044: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:53:55.910081: Suus1 maybe_update_lr lr: 0.005359
2022-07-08 01:53:55.912569: saving scheduled checkpoint file...
2022-07-08 01:53:55.968485: saving checkpoint...
2022-07-08 01:53:57.025793: done, saving took 1.11 seconds
2022-07-08 01:53:57.044246: done
2022-07-08 01:53:57.046586: This epoch took 73.549126 s

2022-07-08 01:53:57.048823: 
epoch:  250
2022-07-08 01:55:04.414193: train loss : -0.7976
2022-07-08 01:55:08.956420: validation loss: -0.7679
2022-07-08 01:55:08.998830: Average global foreground Dice: [0.8076]
2022-07-08 01:55:09.006158: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:55:09.471343: Suus1 maybe_update_lr lr: 0.00534
2022-07-08 01:55:09.475986: This epoch took 72.425059 s

2022-07-08 01:55:09.478345: 
epoch:  251
2022-07-08 01:56:16.898350: train loss : -0.8089
2022-07-08 01:56:21.363709: validation loss: -0.7507
2022-07-08 01:56:21.381386: Average global foreground Dice: [0.7904]
2022-07-08 01:56:21.391681: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:56:21.877575: Suus1 maybe_update_lr lr: 0.00532
2022-07-08 01:56:21.892338: This epoch took 72.411691 s

2022-07-08 01:56:21.905265: 
epoch:  252
2022-07-08 01:57:29.341319: train loss : -0.8104
2022-07-08 01:57:33.761085: validation loss: -0.7928
2022-07-08 01:57:33.764631: Average global foreground Dice: [0.8296]
2022-07-08 01:57:33.766685: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:57:34.327075: Suus1 maybe_update_lr lr: 0.005301
2022-07-08 01:57:34.329629: This epoch took 72.400298 s

2022-07-08 01:57:34.331669: 
epoch:  253
2022-07-08 01:58:41.730406: train loss : -0.8180
2022-07-08 01:58:46.328921: validation loss: -0.7489
2022-07-08 01:58:46.338163: Average global foreground Dice: [0.7926]
2022-07-08 01:58:46.350859: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:58:46.908291: Suus1 maybe_update_lr lr: 0.005282
2022-07-08 01:58:46.910717: This epoch took 72.576981 s

2022-07-08 01:58:46.912606: 
epoch:  254
2022-07-08 01:59:54.394325: train loss : -0.8184
2022-07-08 01:59:58.828012: validation loss: -0.7797
2022-07-08 01:59:58.832723: Average global foreground Dice: [0.8075]
2022-07-08 01:59:58.835088: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 01:59:59.354905: Suus1 maybe_update_lr lr: 0.005262
2022-07-08 01:59:59.360901: This epoch took 72.446364 s

2022-07-08 01:59:59.366746: 
epoch:  255
2022-07-08 02:01:06.711471: train loss : -0.8178
2022-07-08 02:01:11.082276: validation loss: -0.7832
2022-07-08 02:01:11.110777: Average global foreground Dice: [0.8242]
2022-07-08 02:01:11.119297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:01:11.658914: Suus1 maybe_update_lr lr: 0.005243
2022-07-08 02:01:11.661190: This epoch took 72.292270 s

2022-07-08 02:01:11.663232: 
epoch:  256
2022-07-08 02:02:19.011913: train loss : -0.8200
2022-07-08 02:02:23.434308: validation loss: -0.7656
2022-07-08 02:02:23.439427: Average global foreground Dice: [0.8028]
2022-07-08 02:02:23.441617: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:02:23.916796: Suus1 maybe_update_lr lr: 0.005224
2022-07-08 02:02:23.919273: This epoch took 72.254122 s

2022-07-08 02:02:23.921362: 
epoch:  257
2022-07-08 02:03:31.253396: train loss : -0.8255
2022-07-08 02:03:35.793569: validation loss: -0.7703
2022-07-08 02:03:35.802423: Average global foreground Dice: [0.8063]
2022-07-08 02:03:35.817720: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:03:36.375798: Suus1 maybe_update_lr lr: 0.005204
2022-07-08 02:03:36.378327: This epoch took 72.454969 s

2022-07-08 02:03:36.380341: 
epoch:  258
2022-07-08 02:04:43.756770: train loss : -0.8232
2022-07-08 02:04:48.144763: validation loss: -0.7662
2022-07-08 02:04:48.184786: Average global foreground Dice: [0.8022]
2022-07-08 02:04:48.211287: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:04:48.854825: Suus1 maybe_update_lr lr: 0.005185
2022-07-08 02:04:48.857252: This epoch took 72.474947 s

2022-07-08 02:04:48.859420: 
epoch:  259
2022-07-08 02:05:56.191162: train loss : -0.8208
2022-07-08 02:06:00.692442: validation loss: -0.7848
2022-07-08 02:06:00.714541: Average global foreground Dice: [0.8182]
2022-07-08 02:06:00.727106: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:06:01.302722: Suus1 maybe_update_lr lr: 0.005166
2022-07-08 02:06:01.305221: This epoch took 72.443553 s

2022-07-08 02:06:01.307570: 
epoch:  260
2022-07-08 02:07:08.701645: train loss : -0.8205
2022-07-08 02:07:13.292649: validation loss: -0.7748
2022-07-08 02:07:13.297611: Average global foreground Dice: [0.809]
2022-07-08 02:07:13.310349: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:07:13.892679: Suus1 maybe_update_lr lr: 0.005146
2022-07-08 02:07:13.895186: This epoch took 72.584841 s

2022-07-08 02:07:13.897201: 
epoch:  261
2022-07-08 02:08:21.283014: train loss : -0.8227
2022-07-08 02:08:25.664258: validation loss: -0.7821
2022-07-08 02:08:25.680662: Average global foreground Dice: [0.8148]
2022-07-08 02:08:25.683048: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:08:26.274352: Suus1 maybe_update_lr lr: 0.005127
2022-07-08 02:08:26.276732: saving best epoch checkpoint...
2022-07-08 02:08:26.328115: saving checkpoint...
2022-07-08 02:08:27.413670: done, saving took 1.13 seconds
2022-07-08 02:08:27.429842: This epoch took 73.530504 s

2022-07-08 02:08:27.432269: 
epoch:  262
2022-07-08 02:09:34.705568: train loss : -0.8117
2022-07-08 02:09:39.223322: validation loss: -0.7726
2022-07-08 02:09:39.253694: Average global foreground Dice: [0.8059]
2022-07-08 02:09:39.273975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:09:39.775006: Suus1 maybe_update_lr lr: 0.005107
2022-07-08 02:09:39.777481: This epoch took 72.343102 s

2022-07-08 02:09:39.779619: 
epoch:  263
2022-07-08 02:10:47.220346: train loss : -0.8168
2022-07-08 02:10:51.692026: validation loss: -0.7679
2022-07-08 02:10:51.704319: Average global foreground Dice: [0.8072]
2022-07-08 02:10:51.707117: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:10:52.236895: Suus1 maybe_update_lr lr: 0.005088
2022-07-08 02:10:52.239321: This epoch took 72.457430 s

2022-07-08 02:10:52.241318: 
epoch:  264
2022-07-08 02:11:59.617499: train loss : -0.8105
2022-07-08 02:12:04.144793: validation loss: -0.7815
2022-07-08 02:12:04.152463: Average global foreground Dice: [0.8186]
2022-07-08 02:12:04.165320: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:12:04.728761: Suus1 maybe_update_lr lr: 0.005069
2022-07-08 02:12:04.730709: saving best epoch checkpoint...
2022-07-08 02:12:04.785851: saving checkpoint...
2022-07-08 02:12:05.950253: done, saving took 1.22 seconds
2022-07-08 02:12:05.966068: This epoch took 73.722815 s

2022-07-08 02:12:05.968658: 
epoch:  265
2022-07-08 02:13:13.233540: train loss : -0.7938
2022-07-08 02:13:17.714255: validation loss: -0.7571
2022-07-08 02:13:17.720323: Average global foreground Dice: [0.8021]
2022-07-08 02:13:17.726997: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:13:18.218103: Suus1 maybe_update_lr lr: 0.005049
2022-07-08 02:13:18.229532: This epoch took 72.258691 s

2022-07-08 02:13:18.231893: 
epoch:  266
2022-07-08 02:14:25.816045: train loss : -0.7972
2022-07-08 02:14:30.314045: validation loss: -0.7636
2022-07-08 02:14:30.324484: Average global foreground Dice: [0.8023]
2022-07-08 02:14:30.326946: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:14:30.973601: Suus1 maybe_update_lr lr: 0.00503
2022-07-08 02:14:30.976490: This epoch took 72.742403 s

2022-07-08 02:14:30.979459: 
epoch:  267
2022-07-08 02:15:38.283417: train loss : -0.8097
2022-07-08 02:15:42.745485: validation loss: -0.7896
2022-07-08 02:15:42.763382: Average global foreground Dice: [0.8248]
2022-07-08 02:15:42.765811: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:15:43.399629: Suus1 maybe_update_lr lr: 0.00501
2022-07-08 02:15:43.402201: saving best epoch checkpoint...
2022-07-08 02:15:43.447870: saving checkpoint...
2022-07-08 02:15:44.469269: done, saving took 1.07 seconds
2022-07-08 02:15:44.485062: This epoch took 73.503409 s

2022-07-08 02:15:44.487272: 
epoch:  268
2022-07-08 02:16:51.828927: train loss : -0.8141
2022-07-08 02:16:56.399577: validation loss: -0.7805
2022-07-08 02:16:56.422922: Average global foreground Dice: [0.8149]
2022-07-08 02:16:56.425268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:16:56.908349: Suus1 maybe_update_lr lr: 0.004991
2022-07-08 02:16:56.929291: saving best epoch checkpoint...
2022-07-08 02:16:57.039992: saving checkpoint...
2022-07-08 02:16:58.009314: done, saving took 1.06 seconds
2022-07-08 02:16:58.025358: This epoch took 73.535766 s

2022-07-08 02:16:58.027544: 
epoch:  269
2022-07-08 02:18:05.377787: train loss : -0.8177
2022-07-08 02:18:09.763151: validation loss: -0.7743
2022-07-08 02:18:09.775421: Average global foreground Dice: [0.81]
2022-07-08 02:18:09.789410: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:18:10.347269: Suus1 maybe_update_lr lr: 0.004971
2022-07-08 02:18:10.349507: saving best epoch checkpoint...
2022-07-08 02:18:10.394193: saving checkpoint...
2022-07-08 02:18:11.436837: done, saving took 1.09 seconds
2022-07-08 02:18:11.451119: This epoch took 73.421517 s

2022-07-08 02:18:11.453211: 
epoch:  270
2022-07-08 02:19:18.754972: train loss : -0.8155
2022-07-08 02:19:23.281655: validation loss: -0.7748
2022-07-08 02:19:23.290738: Average global foreground Dice: [0.8128]
2022-07-08 02:19:23.318129: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:19:23.857262: Suus1 maybe_update_lr lr: 0.004952
2022-07-08 02:19:23.867143: saving best epoch checkpoint...
2022-07-08 02:19:23.932660: saving checkpoint...
2022-07-08 02:19:24.873073: done, saving took 0.99 seconds
2022-07-08 02:19:24.887892: This epoch took 73.432600 s

2022-07-08 02:19:24.889941: 
epoch:  271
2022-07-08 02:20:32.274101: train loss : -0.8176
2022-07-08 02:20:36.929553: validation loss: -0.7812
2022-07-08 02:20:36.942312: Average global foreground Dice: [0.8153]
2022-07-08 02:20:36.960957: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:20:37.468699: Suus1 maybe_update_lr lr: 0.004933
2022-07-08 02:20:37.471160: saving best epoch checkpoint...
2022-07-08 02:20:37.524018: saving checkpoint...
2022-07-08 02:20:38.564271: done, saving took 1.09 seconds
2022-07-08 02:20:38.579696: This epoch took 73.687357 s

2022-07-08 02:20:38.582000: 
epoch:  272
2022-07-08 02:21:45.891210: train loss : -0.8215
2022-07-08 02:21:50.443506: validation loss: -0.7899
2022-07-08 02:21:50.473743: Average global foreground Dice: [0.8229]
2022-07-08 02:21:50.496221: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:21:51.000760: Suus1 maybe_update_lr lr: 0.004913
2022-07-08 02:21:51.019216: saving best epoch checkpoint...
2022-07-08 02:21:51.071862: saving checkpoint...
2022-07-08 02:21:52.141757: done, saving took 1.12 seconds
2022-07-08 02:21:52.158054: This epoch took 73.573801 s

2022-07-08 02:21:52.160123: 
epoch:  273
2022-07-08 02:22:59.497946: train loss : -0.8149
2022-07-08 02:23:04.011241: validation loss: -0.7821
2022-07-08 02:23:04.014692: Average global foreground Dice: [0.8148]
2022-07-08 02:23:04.035708: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:23:04.536563: Suus1 maybe_update_lr lr: 0.004894
2022-07-08 02:23:04.538766: saving best epoch checkpoint...
2022-07-08 02:23:04.588816: saving checkpoint...
2022-07-08 02:23:05.488487: done, saving took 0.95 seconds
2022-07-08 02:23:05.503784: This epoch took 73.341659 s

2022-07-08 02:23:05.505843: 
epoch:  274
2022-07-08 02:24:12.819534: train loss : -0.8244
2022-07-08 02:24:17.296449: validation loss: -0.7837
2022-07-08 02:24:17.316365: Average global foreground Dice: [0.8137]
2022-07-08 02:24:17.323050: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:24:17.814771: Suus1 maybe_update_lr lr: 0.004874
2022-07-08 02:24:17.817290: saving best epoch checkpoint...
2022-07-08 02:24:17.867963: saving checkpoint...
2022-07-08 02:24:19.043779: done, saving took 1.22 seconds
2022-07-08 02:24:19.058250: This epoch took 73.550369 s

2022-07-08 02:24:19.060338: 
epoch:  275
2022-07-08 02:25:26.381773: train loss : -0.8205
2022-07-08 02:25:30.799544: validation loss: -0.7609
2022-07-08 02:25:30.834795: Average global foreground Dice: [0.8028]
2022-07-08 02:25:30.858272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:25:31.408114: Suus1 maybe_update_lr lr: 0.004855
2022-07-08 02:25:31.411458: This epoch took 72.348926 s

2022-07-08 02:25:31.415985: 
epoch:  276
2022-07-08 02:26:38.868998: train loss : -0.8298
2022-07-08 02:26:43.430821: validation loss: -0.7977
2022-07-08 02:26:43.458642: Average global foreground Dice: [0.8269]
2022-07-08 02:26:43.480255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:26:44.057144: Suus1 maybe_update_lr lr: 0.004835
2022-07-08 02:26:44.076305: saving best epoch checkpoint...
2022-07-08 02:26:44.153696: saving checkpoint...
2022-07-08 02:26:45.126003: done, saving took 1.03 seconds
2022-07-08 02:26:45.139939: This epoch took 73.721812 s

2022-07-08 02:26:45.142039: 
epoch:  277
2022-07-08 02:27:52.479506: train loss : -0.8307
2022-07-08 02:27:57.038914: validation loss: -0.7912
2022-07-08 02:27:57.049782: Average global foreground Dice: [0.827]
2022-07-08 02:27:57.062338: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:27:57.591917: Suus1 maybe_update_lr lr: 0.004816
2022-07-08 02:27:57.594276: saving best epoch checkpoint...
2022-07-08 02:27:57.630883: saving checkpoint...
2022-07-08 02:27:58.684408: done, saving took 1.09 seconds
2022-07-08 02:27:58.698525: This epoch took 73.554389 s

2022-07-08 02:27:58.700819: 
epoch:  278
2022-07-08 02:29:06.014154: train loss : -0.8270
2022-07-08 02:29:10.459342: validation loss: -0.7753
2022-07-08 02:29:10.497811: Average global foreground Dice: [0.8099]
2022-07-08 02:29:10.518112: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:29:10.999840: Suus1 maybe_update_lr lr: 0.004796
2022-07-08 02:29:11.022327: This epoch took 72.319439 s

2022-07-08 02:29:11.042270: 
epoch:  279
2022-07-08 02:30:18.560967: train loss : -0.8215
2022-07-08 02:30:23.034585: validation loss: -0.7341
2022-07-08 02:30:23.046855: Average global foreground Dice: [0.766]
2022-07-08 02:30:23.049025: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:30:23.558508: Suus1 maybe_update_lr lr: 0.004776
2022-07-08 02:30:23.571135: This epoch took 72.502369 s

2022-07-08 02:30:23.602155: 
epoch:  280
2022-07-08 02:31:30.995945: train loss : -0.8264
2022-07-08 02:31:35.467677: validation loss: -0.7506
2022-07-08 02:31:35.473697: Average global foreground Dice: [0.7964]
2022-07-08 02:31:35.481952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:31:36.005615: Suus1 maybe_update_lr lr: 0.004757
2022-07-08 02:31:36.008070: This epoch took 72.385742 s

2022-07-08 02:31:36.010151: 
epoch:  281
2022-07-08 02:32:43.485704: train loss : -0.8114
2022-07-08 02:32:47.810819: validation loss: -0.7864
2022-07-08 02:32:47.821361: Average global foreground Dice: [0.8213]
2022-07-08 02:32:47.823534: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:32:48.326997: Suus1 maybe_update_lr lr: 0.004737
2022-07-08 02:32:48.329469: This epoch took 72.317270 s

2022-07-08 02:32:48.331471: 
epoch:  282
2022-07-08 02:33:55.748753: train loss : -0.8021
2022-07-08 02:34:00.205449: validation loss: -0.7512
2022-07-08 02:34:00.211674: Average global foreground Dice: [0.7981]
2022-07-08 02:34:00.231694: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:34:00.857769: Suus1 maybe_update_lr lr: 0.004718
2022-07-08 02:34:00.860061: This epoch took 72.526551 s

2022-07-08 02:34:00.862102: 
epoch:  283
2022-07-08 02:35:08.243482: train loss : -0.8185
2022-07-08 02:35:12.755200: validation loss: -0.7852
2022-07-08 02:35:12.766249: Average global foreground Dice: [0.8171]
2022-07-08 02:35:12.771786: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:35:13.372508: Suus1 maybe_update_lr lr: 0.004698
2022-07-08 02:35:13.374756: This epoch took 72.510761 s

2022-07-08 02:35:13.376826: 
epoch:  284
2022-07-08 02:36:20.801076: train loss : -0.8068
2022-07-08 02:36:25.236779: validation loss: -0.7748
2022-07-08 02:36:25.241240: Average global foreground Dice: [0.8106]
2022-07-08 02:36:25.258409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:36:25.828214: Suus1 maybe_update_lr lr: 0.004679
2022-07-08 02:36:25.847354: This epoch took 72.468427 s

2022-07-08 02:36:25.886243: 
epoch:  285
2022-07-08 02:37:33.186921: train loss : -0.8199
2022-07-08 02:37:37.596257: validation loss: -0.7288
2022-07-08 02:37:37.601151: Average global foreground Dice: [0.7774]
2022-07-08 02:37:37.617978: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:37:38.099512: Suus1 maybe_update_lr lr: 0.004659
2022-07-08 02:37:38.101571: This epoch took 72.205566 s

2022-07-08 02:37:38.103326: 
epoch:  286
2022-07-08 02:38:45.452508: train loss : -0.8057
2022-07-08 02:38:50.098939: validation loss: -0.7730
2022-07-08 02:38:50.113478: Average global foreground Dice: [0.8113]
2022-07-08 02:38:50.144273: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:38:50.645016: Suus1 maybe_update_lr lr: 0.004639
2022-07-08 02:38:50.647674: This epoch took 72.542498 s

2022-07-08 02:38:50.649657: 
epoch:  287
2022-07-08 02:39:57.914895: train loss : -0.8224
2022-07-08 02:40:02.387680: validation loss: -0.7477
2022-07-08 02:40:02.429453: Average global foreground Dice: [0.7929]
2022-07-08 02:40:02.432409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:40:03.008225: Suus1 maybe_update_lr lr: 0.00462
2022-07-08 02:40:03.010423: This epoch took 72.358782 s

2022-07-08 02:40:03.012518: 
epoch:  288
2022-07-08 02:41:10.312989: train loss : -0.8275
2022-07-08 02:41:14.745881: validation loss: -0.7564
2022-07-08 02:41:14.779751: Average global foreground Dice: [0.7867]
2022-07-08 02:41:14.803297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:41:15.367546: Suus1 maybe_update_lr lr: 0.0046
2022-07-08 02:41:15.371948: This epoch took 72.357502 s

2022-07-08 02:41:15.374665: 
epoch:  289
2022-07-08 02:42:22.661167: train loss : -0.8093
2022-07-08 02:42:27.030104: validation loss: -0.7208
2022-07-08 02:42:27.033950: Average global foreground Dice: [0.7606]
2022-07-08 02:42:27.036295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:42:27.531677: Suus1 maybe_update_lr lr: 0.004581
2022-07-08 02:42:27.534057: This epoch took 72.157202 s

2022-07-08 02:42:27.536123: 
epoch:  290
2022-07-08 02:43:34.965440: train loss : -0.8039
2022-07-08 02:43:39.308803: validation loss: -0.7612
2022-07-08 02:43:39.333560: Average global foreground Dice: [0.7937]
2022-07-08 02:43:39.353285: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:43:39.915312: Suus1 maybe_update_lr lr: 0.004561
2022-07-08 02:43:39.917433: This epoch took 72.379287 s

2022-07-08 02:43:39.919453: 
epoch:  291
2022-07-08 02:44:47.396985: train loss : -0.8096
2022-07-08 02:44:51.752208: validation loss: -0.7728
2022-07-08 02:44:51.761727: Average global foreground Dice: [0.8096]
2022-07-08 02:44:51.773989: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:44:52.350671: Suus1 maybe_update_lr lr: 0.004541
2022-07-08 02:44:52.352890: This epoch took 72.431390 s

2022-07-08 02:44:52.354859: 
epoch:  292
2022-07-08 02:45:59.603578: train loss : -0.8102
2022-07-08 02:46:04.021598: validation loss: -0.7669
2022-07-08 02:46:04.034650: Average global foreground Dice: [0.8025]
2022-07-08 02:46:04.047809: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:46:04.593688: Suus1 maybe_update_lr lr: 0.004522
2022-07-08 02:46:04.596291: This epoch took 72.239500 s

2022-07-08 02:46:04.598544: 
epoch:  293
2022-07-08 02:47:12.066084: train loss : -0.8183
2022-07-08 02:47:16.413266: validation loss: -0.7566
2022-07-08 02:47:16.426204: Average global foreground Dice: [0.8052]
2022-07-08 02:47:16.448284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:47:16.931476: Suus1 maybe_update_lr lr: 0.004502
2022-07-08 02:47:16.933696: This epoch took 72.326355 s

2022-07-08 02:47:16.935591: 
epoch:  294
2022-07-08 02:48:24.424567: train loss : -0.8230
2022-07-08 02:48:28.903495: validation loss: -0.7723
2022-07-08 02:48:28.911600: Average global foreground Dice: [0.8107]
2022-07-08 02:48:28.931212: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:48:29.460145: Suus1 maybe_update_lr lr: 0.004482
2022-07-08 02:48:29.462568: This epoch took 72.525016 s

2022-07-08 02:48:29.464789: 
epoch:  295
2022-07-08 02:49:36.820182: train loss : -0.8267
2022-07-08 02:49:41.359454: validation loss: -0.7704
2022-07-08 02:49:41.366630: Average global foreground Dice: [0.8085]
2022-07-08 02:49:41.382761: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:49:41.903524: Suus1 maybe_update_lr lr: 0.004463
2022-07-08 02:49:41.905768: This epoch took 72.438792 s

2022-07-08 02:49:41.907973: 
epoch:  296
2022-07-08 02:50:49.324810: train loss : -0.8269
2022-07-08 02:50:53.745906: validation loss: -0.7913
2022-07-08 02:50:53.763386: Average global foreground Dice: [0.8262]
2022-07-08 02:50:53.765586: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:50:54.257636: Suus1 maybe_update_lr lr: 0.004443
2022-07-08 02:50:54.260343: This epoch took 72.350163 s

2022-07-08 02:50:54.262549: 
epoch:  297
2022-07-08 02:52:01.592112: train loss : -0.8209
2022-07-08 02:52:05.980729: validation loss: -0.7605
2022-07-08 02:52:06.011789: Average global foreground Dice: [0.7937]
2022-07-08 02:52:06.031223: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:52:06.617017: Suus1 maybe_update_lr lr: 0.004423
2022-07-08 02:52:06.619509: This epoch took 72.354694 s

2022-07-08 02:52:06.621559: 
epoch:  298
2022-07-08 02:53:14.137190: train loss : -0.8203
2022-07-08 02:53:18.496563: validation loss: -0.7713
2022-07-08 02:53:18.510327: Average global foreground Dice: [0.808]
2022-07-08 02:53:18.522797: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:53:19.044487: Suus1 maybe_update_lr lr: 0.004404
2022-07-08 02:53:19.046641: This epoch took 72.423220 s

2022-07-08 02:53:19.050557: 
epoch:  299
2022-07-08 02:54:26.396807: train loss : -0.8185
2022-07-08 02:54:30.818899: validation loss: -0.7614
2022-07-08 02:54:30.836560: Average global foreground Dice: [0.7996]
2022-07-08 02:54:30.855252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:54:31.483987: Suus1 maybe_update_lr lr: 0.004384
2022-07-08 02:54:31.486125: saving scheduled checkpoint file...
2022-07-08 02:54:31.532588: saving checkpoint...
2022-07-08 02:54:32.461662: done, saving took 0.97 seconds
2022-07-08 02:54:32.479857: done
2022-07-08 02:54:32.482124: This epoch took 73.429582 s

2022-07-08 02:54:32.484348: 
epoch:  300
2022-07-08 02:55:39.771711: train loss : -0.8255
2022-07-08 02:55:44.233643: validation loss: -0.7795
2022-07-08 02:55:44.267663: Average global foreground Dice: [0.8119]
2022-07-08 02:55:44.284615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:55:44.902757: Suus1 maybe_update_lr lr: 0.004364
2022-07-08 02:55:44.904959: This epoch took 72.418429 s

2022-07-08 02:55:44.906973: 
epoch:  301
2022-07-08 02:56:52.298820: train loss : -0.8247
2022-07-08 02:56:56.759067: validation loss: -0.7867
2022-07-08 02:56:56.804782: Average global foreground Dice: [0.8267]
2022-07-08 02:56:56.826980: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:56:57.538421: Suus1 maybe_update_lr lr: 0.004344
2022-07-08 02:56:57.540536: This epoch took 72.626534 s

2022-07-08 02:56:57.542397: 
epoch:  302
2022-07-08 02:58:04.996758: train loss : -0.8181
2022-07-08 02:58:09.313747: validation loss: -0.7855
2022-07-08 02:58:09.318976: Average global foreground Dice: [0.8218]
2022-07-08 02:58:09.320628: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:58:09.790579: Suus1 maybe_update_lr lr: 0.004325
2022-07-08 02:58:09.793048: This epoch took 72.248642 s

2022-07-08 02:58:09.816283: 
epoch:  303
2022-07-08 02:59:17.256416: train loss : -0.8247
2022-07-08 02:59:21.605215: validation loss: -0.7647
2022-07-08 02:59:21.616315: Average global foreground Dice: [0.8095]
2022-07-08 02:59:21.643747: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 02:59:22.137327: Suus1 maybe_update_lr lr: 0.004305
2022-07-08 02:59:22.139755: This epoch took 72.301493 s

2022-07-08 02:59:22.141887: 
epoch:  304
2022-07-08 03:00:29.493222: train loss : -0.8298
2022-07-08 03:00:33.816615: validation loss: -0.7854
2022-07-08 03:00:33.828122: Average global foreground Dice: [0.8158]
2022-07-08 03:00:33.838701: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:00:34.364063: Suus1 maybe_update_lr lr: 0.004285
2022-07-08 03:00:34.366297: This epoch took 72.222281 s

2022-07-08 03:00:34.368356: 
epoch:  305
2022-07-08 03:01:41.821987: train loss : -0.8354
2022-07-08 03:01:46.190823: validation loss: -0.7807
2022-07-08 03:01:46.193731: Average global foreground Dice: [0.8184]
2022-07-08 03:01:46.211108: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:01:46.675372: Suus1 maybe_update_lr lr: 0.004265
2022-07-08 03:01:46.677722: This epoch took 72.307389 s

2022-07-08 03:01:46.680254: 
epoch:  306
2022-07-08 03:02:54.062388: train loss : -0.8345
2022-07-08 03:02:58.546644: validation loss: -0.7980
2022-07-08 03:02:58.560842: Average global foreground Dice: [0.8303]
2022-07-08 03:02:58.578669: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:02:59.030185: Suus1 maybe_update_lr lr: 0.004245
2022-07-08 03:02:59.032454: This epoch took 72.350002 s

2022-07-08 03:02:59.034626: 
epoch:  307
2022-07-08 03:04:06.345320: train loss : -0.8250
2022-07-08 03:04:10.761773: validation loss: -0.7811
2022-07-08 03:04:10.804656: Average global foreground Dice: [0.8144]
2022-07-08 03:04:10.837298: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:04:11.358567: Suus1 maybe_update_lr lr: 0.004226
2022-07-08 03:04:11.361180: This epoch took 72.324525 s

2022-07-08 03:04:11.363425: 
epoch:  308
2022-07-08 03:05:18.649712: train loss : -0.8239
2022-07-08 03:05:23.117049: validation loss: -0.7762
2022-07-08 03:05:23.138406: Average global foreground Dice: [0.8071]
2022-07-08 03:05:23.154834: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:05:23.602241: Suus1 maybe_update_lr lr: 0.004206
2022-07-08 03:05:23.605644: This epoch took 72.240140 s

2022-07-08 03:05:23.608798: 
epoch:  309
2022-07-08 03:06:30.925994: train loss : -0.8193
2022-07-08 03:06:35.358186: validation loss: -0.7826
2022-07-08 03:06:35.397005: Average global foreground Dice: [0.8213]
2022-07-08 03:06:35.405613: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:06:35.958174: Suus1 maybe_update_lr lr: 0.004186
2022-07-08 03:06:35.960710: This epoch took 72.349522 s

2022-07-08 03:06:35.962619: 
epoch:  310
2022-07-08 03:07:43.349992: train loss : -0.8123
2022-07-08 03:07:47.750674: validation loss: -0.7680
2022-07-08 03:07:47.786759: Average global foreground Dice: [0.8017]
2022-07-08 03:07:47.819292: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:07:48.429316: Suus1 maybe_update_lr lr: 0.004166
2022-07-08 03:07:48.433266: This epoch took 72.468628 s

2022-07-08 03:07:48.445868: 
epoch:  311
2022-07-08 03:08:55.852185: train loss : -0.8222
2022-07-08 03:09:00.430140: validation loss: -0.7672
2022-07-08 03:09:00.435645: Average global foreground Dice: [0.8039]
2022-07-08 03:09:00.450143: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:09:01.057024: Suus1 maybe_update_lr lr: 0.004146
2022-07-08 03:09:01.059341: This epoch took 72.596850 s

2022-07-08 03:09:01.061218: 
epoch:  312
2022-07-08 03:10:08.388567: train loss : -0.8231
2022-07-08 03:10:12.746407: validation loss: -0.7804
2022-07-08 03:10:12.756973: Average global foreground Dice: [0.8175]
2022-07-08 03:10:12.763204: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:10:13.274468: Suus1 maybe_update_lr lr: 0.004127
2022-07-08 03:10:13.276750: This epoch took 72.213620 s

2022-07-08 03:10:13.279018: 
epoch:  313
2022-07-08 03:11:20.737338: train loss : -0.8228
2022-07-08 03:11:25.183994: validation loss: -0.7749
2022-07-08 03:11:25.209634: Average global foreground Dice: [0.8119]
2022-07-08 03:11:25.229565: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:11:25.793983: Suus1 maybe_update_lr lr: 0.004107
2022-07-08 03:11:25.796289: This epoch took 72.515209 s

2022-07-08 03:11:25.798704: 
epoch:  314
2022-07-08 03:12:33.132690: train loss : -0.8227
2022-07-08 03:12:37.543114: validation loss: -0.7774
2022-07-08 03:12:37.573618: Average global foreground Dice: [0.8103]
2022-07-08 03:12:37.580382: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:12:38.121674: Suus1 maybe_update_lr lr: 0.004087
2022-07-08 03:12:38.124534: This epoch took 72.323657 s

2022-07-08 03:12:38.126983: 
epoch:  315
2022-07-08 03:13:45.372887: train loss : -0.8218
2022-07-08 03:13:49.740518: validation loss: -0.7867
2022-07-08 03:13:49.744925: Average global foreground Dice: [0.8219]
2022-07-08 03:13:49.746960: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:13:50.238361: Suus1 maybe_update_lr lr: 0.004067
2022-07-08 03:13:50.241082: This epoch took 72.111590 s

2022-07-08 03:13:50.243556: 
epoch:  316
2022-07-08 03:14:57.602329: train loss : -0.8337
2022-07-08 03:15:02.165276: validation loss: -0.8089
2022-07-08 03:15:02.183349: Average global foreground Dice: [0.8364]
2022-07-08 03:15:02.204272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:15:02.768929: Suus1 maybe_update_lr lr: 0.004047
2022-07-08 03:15:02.773281: saving best epoch checkpoint...
2022-07-08 03:15:02.829335: saving checkpoint...
2022-07-08 03:15:03.811029: done, saving took 1.04 seconds
2022-07-08 03:15:03.828425: This epoch took 73.582567 s

2022-07-08 03:15:03.830775: 
epoch:  317
2022-07-08 03:16:11.401150: train loss : -0.8392
2022-07-08 03:16:15.851884: validation loss: -0.7768
2022-07-08 03:16:15.862324: Average global foreground Dice: [0.8076]
2022-07-08 03:16:15.875316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:16:16.388244: Suus1 maybe_update_lr lr: 0.004027
2022-07-08 03:16:16.390491: This epoch took 72.557274 s

2022-07-08 03:16:16.392339: 
epoch:  318
2022-07-08 03:17:23.729093: train loss : -0.8365
2022-07-08 03:17:28.398828: validation loss: -0.7865
2022-07-08 03:17:28.417805: Average global foreground Dice: [0.8184]
2022-07-08 03:17:28.433266: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:17:28.924712: Suus1 maybe_update_lr lr: 0.004007
2022-07-08 03:17:28.927094: This epoch took 72.532937 s

2022-07-08 03:17:28.929144: 
epoch:  319
2022-07-08 03:18:36.290655: train loss : -0.8387
2022-07-08 03:18:40.715253: validation loss: -0.7936
2022-07-08 03:18:40.718820: Average global foreground Dice: [0.8303]
2022-07-08 03:18:40.720950: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:18:41.336228: Suus1 maybe_update_lr lr: 0.003987
2022-07-08 03:18:41.338488: saving best epoch checkpoint...
2022-07-08 03:18:41.387698: saving checkpoint...
2022-07-08 03:18:42.515212: done, saving took 1.17 seconds
2022-07-08 03:18:42.529373: This epoch took 73.598078 s

2022-07-08 03:18:42.531666: 
epoch:  320
2022-07-08 03:19:49.867543: train loss : -0.8410
2022-07-08 03:19:54.230742: validation loss: -0.7831
2022-07-08 03:19:54.240623: Average global foreground Dice: [0.8222]
2022-07-08 03:19:54.244252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:19:54.731124: Suus1 maybe_update_lr lr: 0.003967
2022-07-08 03:19:54.733273: saving best epoch checkpoint...
2022-07-08 03:19:54.764700: saving checkpoint...
2022-07-08 03:19:55.695308: done, saving took 0.96 seconds
2022-07-08 03:19:55.709872: This epoch took 73.176150 s

2022-07-08 03:19:55.712227: 
epoch:  321
2022-07-08 03:21:03.080319: train loss : -0.8387
2022-07-08 03:21:07.643105: validation loss: -0.7694
2022-07-08 03:21:07.655705: Average global foreground Dice: [0.8019]
2022-07-08 03:21:07.685667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:21:08.191809: Suus1 maybe_update_lr lr: 0.003947
2022-07-08 03:21:08.194032: This epoch took 72.479357 s

2022-07-08 03:21:08.196137: 
epoch:  322
2022-07-08 03:22:15.576134: train loss : -0.8383
2022-07-08 03:22:19.917593: validation loss: -0.7957
2022-07-08 03:22:19.932781: Average global foreground Dice: [0.828]
2022-07-08 03:22:19.952028: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:22:20.481240: Suus1 maybe_update_lr lr: 0.003927
2022-07-08 03:22:20.483700: This epoch took 72.285519 s

2022-07-08 03:22:20.485721: 
epoch:  323
2022-07-08 03:23:27.932994: train loss : -0.8396
2022-07-08 03:23:32.376666: validation loss: -0.7802
2022-07-08 03:23:32.397692: Average global foreground Dice: [0.821]
2022-07-08 03:23:32.406345: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:23:33.014383: Suus1 maybe_update_lr lr: 0.003907
2022-07-08 03:23:33.016803: saving best epoch checkpoint...
2022-07-08 03:23:33.048918: saving checkpoint...
2022-07-08 03:23:34.044031: done, saving took 1.03 seconds
2022-07-08 03:23:34.057941: This epoch took 73.569746 s

2022-07-08 03:23:34.060064: 
epoch:  324
2022-07-08 03:24:41.306275: train loss : -0.8391
2022-07-08 03:24:45.716839: validation loss: -0.7737
2022-07-08 03:24:45.729924: Average global foreground Dice: [0.8097]
2022-07-08 03:24:45.744513: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:24:46.351506: Suus1 maybe_update_lr lr: 0.003887
2022-07-08 03:24:46.353819: This epoch took 72.291642 s

2022-07-08 03:24:46.355986: 
epoch:  325
2022-07-08 03:25:53.753709: train loss : -0.8423
2022-07-08 03:25:58.235843: validation loss: -0.7609
2022-07-08 03:25:58.249808: Average global foreground Dice: [0.7996]
2022-07-08 03:25:58.260397: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:25:58.894764: Suus1 maybe_update_lr lr: 0.003867
2022-07-08 03:25:58.897196: This epoch took 72.539308 s

2022-07-08 03:25:58.899383: 
epoch:  326
2022-07-08 03:27:06.249932: train loss : -0.8426
2022-07-08 03:27:10.731214: validation loss: -0.7911
2022-07-08 03:27:10.746261: Average global foreground Dice: [0.8257]
2022-07-08 03:27:10.756271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:27:11.282200: Suus1 maybe_update_lr lr: 0.003847
2022-07-08 03:27:11.284517: This epoch took 72.383203 s

2022-07-08 03:27:11.286497: 
epoch:  327
2022-07-08 03:28:18.708382: train loss : -0.8369
2022-07-08 03:28:23.201610: validation loss: -0.7929
2022-07-08 03:28:23.212496: Average global foreground Dice: [0.831]
2022-07-08 03:28:23.228680: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:28:23.822140: Suus1 maybe_update_lr lr: 0.003827
2022-07-08 03:28:23.824615: saving best epoch checkpoint...
2022-07-08 03:28:23.867469: saving checkpoint...
2022-07-08 03:28:24.925390: done, saving took 1.10 seconds
2022-07-08 03:28:24.940361: This epoch took 73.651922 s

2022-07-08 03:28:24.942528: 
epoch:  328
2022-07-08 03:29:32.327167: train loss : -0.8407
2022-07-08 03:29:36.782748: validation loss: -0.7859
2022-07-08 03:29:36.788602: Average global foreground Dice: [0.8186]
2022-07-08 03:29:36.809251: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:29:37.436743: Suus1 maybe_update_lr lr: 0.003807
2022-07-08 03:29:37.439073: saving best epoch checkpoint...
2022-07-08 03:29:37.486950: saving checkpoint...
2022-07-08 03:29:38.478840: done, saving took 1.04 seconds
2022-07-08 03:29:38.495150: This epoch took 73.550500 s

2022-07-08 03:29:38.497674: 
epoch:  329
2022-07-08 03:30:45.775480: train loss : -0.8391
2022-07-08 03:30:50.333065: validation loss: -0.7755
2022-07-08 03:30:50.346591: Average global foreground Dice: [0.8058]
2022-07-08 03:30:50.355639: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:30:50.889523: Suus1 maybe_update_lr lr: 0.003787
2022-07-08 03:30:50.892103: This epoch took 72.391859 s

2022-07-08 03:30:50.894710: 
epoch:  330
2022-07-08 03:31:58.275651: train loss : -0.8445
2022-07-08 03:32:02.764407: validation loss: -0.7699
2022-07-08 03:32:02.772980: Average global foreground Dice: [0.8093]
2022-07-08 03:32:02.789927: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:32:03.286073: Suus1 maybe_update_lr lr: 0.003767
2022-07-08 03:32:03.288527: This epoch took 72.391771 s

2022-07-08 03:32:03.290536: 
epoch:  331
2022-07-08 03:33:10.616384: train loss : -0.8408
2022-07-08 03:33:14.997773: validation loss: -0.7750
2022-07-08 03:33:15.000730: Average global foreground Dice: [0.8122]
2022-07-08 03:33:15.003800: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:33:15.527457: Suus1 maybe_update_lr lr: 0.003747
2022-07-08 03:33:15.529747: This epoch took 72.237231 s

2022-07-08 03:33:15.531638: 
epoch:  332
2022-07-08 03:34:22.906909: train loss : -0.8370
2022-07-08 03:34:27.285065: validation loss: -0.7541
2022-07-08 03:34:27.293712: Average global foreground Dice: [0.7963]
2022-07-08 03:34:27.307775: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:34:27.898554: Suus1 maybe_update_lr lr: 0.003727
2022-07-08 03:34:27.900837: This epoch took 72.367282 s

2022-07-08 03:34:27.902757: 
epoch:  333
2022-07-08 03:35:35.257236: train loss : -0.8325
2022-07-08 03:35:39.570613: validation loss: -0.7739
2022-07-08 03:35:39.588340: Average global foreground Dice: [0.8097]
2022-07-08 03:35:39.590602: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:35:40.085493: Suus1 maybe_update_lr lr: 0.003707
2022-07-08 03:35:40.087965: This epoch took 72.183424 s

2022-07-08 03:35:40.089849: 
epoch:  334
2022-07-08 03:36:47.421504: train loss : -0.8330
2022-07-08 03:36:51.760738: validation loss: -0.7876
2022-07-08 03:36:51.764704: Average global foreground Dice: [0.8177]
2022-07-08 03:36:51.783253: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:36:52.265098: Suus1 maybe_update_lr lr: 0.003687
2022-07-08 03:36:52.267416: This epoch took 72.175586 s

2022-07-08 03:36:52.269376: 
epoch:  335
2022-07-08 03:37:59.586302: train loss : -0.8466
2022-07-08 03:38:03.956412: validation loss: -0.7934
2022-07-08 03:38:03.984627: Average global foreground Dice: [0.8322]
2022-07-08 03:38:03.996849: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:38:04.573828: Suus1 maybe_update_lr lr: 0.003667
2022-07-08 03:38:04.576124: This epoch took 72.304822 s

2022-07-08 03:38:04.578970: 
epoch:  336
2022-07-08 03:39:11.951995: train loss : -0.8440
2022-07-08 03:39:16.381659: validation loss: -0.7780
2022-07-08 03:39:16.398768: Average global foreground Dice: [0.8144]
2022-07-08 03:39:16.413908: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:39:17.004326: Suus1 maybe_update_lr lr: 0.003647
2022-07-08 03:39:17.006739: This epoch took 72.424887 s

2022-07-08 03:39:17.008873: 
epoch:  337
2022-07-08 03:40:24.480201: train loss : -0.8444
2022-07-08 03:40:28.859203: validation loss: -0.7834
2022-07-08 03:40:28.876108: Average global foreground Dice: [0.8168]
2022-07-08 03:40:28.886432: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:40:29.430553: Suus1 maybe_update_lr lr: 0.003627
2022-07-08 03:40:29.432696: This epoch took 72.421748 s

2022-07-08 03:40:29.434597: 
epoch:  338
2022-07-08 03:41:36.874967: train loss : -0.8437
2022-07-08 03:41:41.246981: validation loss: -0.7757
2022-07-08 03:41:41.259812: Average global foreground Dice: [0.8098]
2022-07-08 03:41:41.271055: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:41:41.783294: Suus1 maybe_update_lr lr: 0.003606
2022-07-08 03:41:41.785811: This epoch took 72.349214 s

2022-07-08 03:41:41.788077: 
epoch:  339
2022-07-08 03:42:49.145681: train loss : -0.8450
2022-07-08 03:42:53.499793: validation loss: -0.7779
2022-07-08 03:42:53.503449: Average global foreground Dice: [0.8105]
2022-07-08 03:42:53.507753: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:42:53.962421: Suus1 maybe_update_lr lr: 0.003586
2022-07-08 03:42:53.964570: This epoch took 72.174236 s

2022-07-08 03:42:53.966573: 
epoch:  340
2022-07-08 03:44:01.305607: train loss : -0.8431
2022-07-08 03:44:05.645157: validation loss: -0.7899
2022-07-08 03:44:05.651997: Average global foreground Dice: [0.8234]
2022-07-08 03:44:05.668696: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:44:06.175308: Suus1 maybe_update_lr lr: 0.003566
2022-07-08 03:44:06.177585: This epoch took 72.209132 s

2022-07-08 03:44:06.179838: 
epoch:  341
2022-07-08 03:45:13.512370: train loss : -0.8491
2022-07-08 03:45:17.821020: validation loss: -0.7905
2022-07-08 03:45:17.829865: Average global foreground Dice: [0.8282]
2022-07-08 03:45:17.839242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:45:18.504427: Suus1 maybe_update_lr lr: 0.003546
2022-07-08 03:45:18.506740: This epoch took 72.324688 s

2022-07-08 03:45:18.508713: 
epoch:  342
2022-07-08 03:46:25.811606: train loss : -0.8506
2022-07-08 03:46:30.237696: validation loss: -0.7634
2022-07-08 03:46:30.240792: Average global foreground Dice: [0.8107]
2022-07-08 03:46:30.246143: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:46:30.789474: Suus1 maybe_update_lr lr: 0.003526
2022-07-08 03:46:30.791837: This epoch took 72.281166 s

2022-07-08 03:46:30.793977: 
epoch:  343
2022-07-08 03:47:38.266387: train loss : -0.8467
2022-07-08 03:47:42.676025: validation loss: -0.8032
2022-07-08 03:47:42.697522: Average global foreground Dice: [0.8338]
2022-07-08 03:47:42.699853: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:47:43.220134: Suus1 maybe_update_lr lr: 0.003505
2022-07-08 03:47:43.222626: saving best epoch checkpoint...
2022-07-08 03:47:43.268701: saving checkpoint...
2022-07-08 03:47:44.232139: done, saving took 1.01 seconds
2022-07-08 03:47:44.248351: This epoch took 73.452261 s

2022-07-08 03:47:44.250655: 
epoch:  344
2022-07-08 03:48:51.661494: train loss : -0.8443
2022-07-08 03:48:56.111328: validation loss: -0.7707
2022-07-08 03:48:56.136147: Average global foreground Dice: [0.8079]
2022-07-08 03:48:56.140215: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:48:56.829752: Suus1 maybe_update_lr lr: 0.003485
2022-07-08 03:48:56.832029: This epoch took 72.579319 s

2022-07-08 03:48:56.834088: 
epoch:  345
2022-07-08 03:50:04.258547: train loss : -0.8308
2022-07-08 03:50:08.714171: validation loss: -0.7657
2022-07-08 03:50:08.736880: Average global foreground Dice: [0.7982]
2022-07-08 03:50:08.741284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:50:09.206097: Suus1 maybe_update_lr lr: 0.003465
2022-07-08 03:50:09.208474: This epoch took 72.372393 s

2022-07-08 03:50:09.210548: 
epoch:  346
2022-07-08 03:51:16.660987: train loss : -0.8428
2022-07-08 03:51:21.018715: validation loss: -0.7777
2022-07-08 03:51:21.022376: Average global foreground Dice: [0.8146]
2022-07-08 03:51:21.027817: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:51:21.517762: Suus1 maybe_update_lr lr: 0.003445
2022-07-08 03:51:21.520149: This epoch took 72.307545 s

2022-07-08 03:51:21.522172: 
epoch:  347
2022-07-08 03:52:28.836647: train loss : -0.8434
2022-07-08 03:52:33.226269: validation loss: -0.7717
2022-07-08 03:52:33.230239: Average global foreground Dice: [0.8078]
2022-07-08 03:52:33.232436: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:52:33.674250: Suus1 maybe_update_lr lr: 0.003424
2022-07-08 03:52:33.676660: This epoch took 72.152452 s

2022-07-08 03:52:33.678536: 
epoch:  348
2022-07-08 03:53:41.165093: train loss : -0.8477
2022-07-08 03:53:45.549836: validation loss: -0.7646
2022-07-08 03:53:45.553623: Average global foreground Dice: [0.7986]
2022-07-08 03:53:45.577242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:53:46.121786: Suus1 maybe_update_lr lr: 0.003404
2022-07-08 03:53:46.124227: This epoch took 72.443710 s

2022-07-08 03:53:46.126432: 
epoch:  349
2022-07-08 03:54:53.489375: train loss : -0.8483
2022-07-08 03:54:57.811683: validation loss: -0.7787
2022-07-08 03:54:57.827826: Average global foreground Dice: [0.8101]
2022-07-08 03:54:57.847288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:54:58.333038: Suus1 maybe_update_lr lr: 0.003384
2022-07-08 03:54:58.335237: saving scheduled checkpoint file...
2022-07-08 03:54:58.381626: saving checkpoint...
2022-07-08 03:54:59.277084: done, saving took 0.94 seconds
2022-07-08 03:54:59.302343: done
2022-07-08 03:54:59.304812: This epoch took 73.176273 s

2022-07-08 03:54:59.306936: 
epoch:  350
2022-07-08 03:56:06.616635: train loss : -0.8469
2022-07-08 03:56:11.051621: validation loss: -0.7914
2022-07-08 03:56:11.055022: Average global foreground Dice: [0.8252]
2022-07-08 03:56:11.057168: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:56:11.545871: Suus1 maybe_update_lr lr: 0.003364
2022-07-08 03:56:11.548166: This epoch took 72.239219 s

2022-07-08 03:56:11.550160: 
epoch:  351
2022-07-08 03:57:18.904433: train loss : -0.8416
2022-07-08 03:57:23.379979: validation loss: -0.7773
2022-07-08 03:57:23.390711: Average global foreground Dice: [0.8099]
2022-07-08 03:57:23.395069: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:57:23.876568: Suus1 maybe_update_lr lr: 0.003343
2022-07-08 03:57:23.878891: This epoch took 72.326740 s

2022-07-08 03:57:23.880958: 
epoch:  352
2022-07-08 03:58:31.220115: train loss : -0.8491
2022-07-08 03:58:35.575898: validation loss: -0.7552
2022-07-08 03:58:35.599764: Average global foreground Dice: [0.7985]
2022-07-08 03:58:35.625284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:58:36.184895: Suus1 maybe_update_lr lr: 0.003323
2022-07-08 03:58:36.187278: This epoch took 72.304304 s

2022-07-08 03:58:36.189459: 
epoch:  353
2022-07-08 03:59:43.622405: train loss : -0.8520
2022-07-08 03:59:48.248377: validation loss: -0.7812
2022-07-08 03:59:48.274772: Average global foreground Dice: [0.8181]
2022-07-08 03:59:48.288896: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 03:59:48.962099: Suus1 maybe_update_lr lr: 0.003303
2022-07-08 03:59:48.964417: This epoch took 72.772909 s

2022-07-08 03:59:48.966259: 
epoch:  354
2022-07-08 04:00:56.368236: train loss : -0.8494
2022-07-08 04:01:00.827993: validation loss: -0.7641
2022-07-08 04:01:00.835481: Average global foreground Dice: [0.8039]
2022-07-08 04:01:00.841309: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:01:01.305510: Suus1 maybe_update_lr lr: 0.003282
2022-07-08 04:01:01.307924: This epoch took 72.339781 s

2022-07-08 04:01:01.309984: 
epoch:  355
2022-07-08 04:02:08.742863: train loss : -0.8539
2022-07-08 04:02:13.264314: validation loss: -0.7824
2022-07-08 04:02:13.273675: Average global foreground Dice: [0.8183]
2022-07-08 04:02:13.295717: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:02:13.921548: Suus1 maybe_update_lr lr: 0.003262
2022-07-08 04:02:13.923944: This epoch took 72.611875 s

2022-07-08 04:02:13.927305: 
epoch:  356
2022-07-08 04:03:21.260372: train loss : -0.8532
2022-07-08 04:03:26.122530: validation loss: -0.7793
2022-07-08 04:03:26.125900: Average global foreground Dice: [0.8123]
2022-07-08 04:03:26.128452: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:03:26.692450: Suus1 maybe_update_lr lr: 0.003241
2022-07-08 04:03:26.694841: This epoch took 72.765356 s

2022-07-08 04:03:26.696937: 
epoch:  357
2022-07-08 04:04:33.986015: train loss : -0.8516
2022-07-08 04:04:38.367404: validation loss: -0.7991
2022-07-08 04:04:38.375676: Average global foreground Dice: [0.8261]
2022-07-08 04:04:38.407898: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:04:38.894147: Suus1 maybe_update_lr lr: 0.003221
2022-07-08 04:04:38.896468: This epoch took 72.196671 s

2022-07-08 04:04:38.898643: 
epoch:  358
2022-07-08 04:05:46.270662: train loss : -0.8548
2022-07-08 04:05:50.758569: validation loss: -0.7811
2022-07-08 04:05:50.790677: Average global foreground Dice: [0.8123]
2022-07-08 04:05:50.803257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:05:51.348514: Suus1 maybe_update_lr lr: 0.003201
2022-07-08 04:05:51.350795: This epoch took 72.449973 s

2022-07-08 04:05:51.352866: 
epoch:  359
2022-07-08 04:06:58.656128: train loss : -0.8522
2022-07-08 04:07:02.967691: validation loss: -0.7715
2022-07-08 04:07:03.007821: Average global foreground Dice: [0.8068]
2022-07-08 04:07:03.029272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:07:03.508416: Suus1 maybe_update_lr lr: 0.00318
2022-07-08 04:07:03.510432: This epoch took 72.155612 s

2022-07-08 04:07:03.512424: 
epoch:  360
2022-07-08 04:08:10.879572: train loss : -0.8492
2022-07-08 04:08:15.447869: validation loss: -0.7731
2022-07-08 04:08:15.455413: Average global foreground Dice: [0.8115]
2022-07-08 04:08:15.486273: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:08:16.055359: Suus1 maybe_update_lr lr: 0.00316
2022-07-08 04:08:16.057626: This epoch took 72.543346 s

2022-07-08 04:08:16.059796: 
epoch:  361
2022-07-08 04:09:23.469776: train loss : -0.8531
2022-07-08 04:09:28.124599: validation loss: -0.8047
2022-07-08 04:09:28.168783: Average global foreground Dice: [0.8412]
2022-07-08 04:09:28.190380: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:09:28.814797: Suus1 maybe_update_lr lr: 0.003139
2022-07-08 04:09:28.817157: This epoch took 72.755245 s

2022-07-08 04:09:28.819335: 
epoch:  362
2022-07-08 04:10:36.146430: train loss : -0.8519
2022-07-08 04:10:40.610971: validation loss: -0.7778
2022-07-08 04:10:40.613928: Average global foreground Dice: [0.813]
2022-07-08 04:10:40.629149: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:10:41.137715: Suus1 maybe_update_lr lr: 0.003119
2022-07-08 04:10:41.140007: This epoch took 72.318145 s

2022-07-08 04:10:41.141990: 
epoch:  363
2022-07-08 04:11:48.526296: train loss : -0.8538
2022-07-08 04:11:52.917393: validation loss: -0.7745
2022-07-08 04:11:52.924703: Average global foreground Dice: [0.8081]
2022-07-08 04:11:52.938285: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:11:53.520986: Suus1 maybe_update_lr lr: 0.003098
2022-07-08 04:11:53.523286: This epoch took 72.379370 s

2022-07-08 04:11:53.525715: 
epoch:  364
2022-07-08 04:13:00.904406: train loss : -0.8551
2022-07-08 04:13:05.398281: validation loss: -0.7640
2022-07-08 04:13:05.413021: Average global foreground Dice: [0.8048]
2022-07-08 04:13:05.415917: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:13:06.114153: Suus1 maybe_update_lr lr: 0.003078
2022-07-08 04:13:06.116915: This epoch took 72.589217 s

2022-07-08 04:13:06.119408: 
epoch:  365
2022-07-08 04:14:13.550172: train loss : -0.8465
2022-07-08 04:14:17.965402: validation loss: -0.7618
2022-07-08 04:14:17.970796: Average global foreground Dice: [0.797]
2022-07-08 04:14:17.972872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:14:18.488542: Suus1 maybe_update_lr lr: 0.003057
2022-07-08 04:14:18.491046: This epoch took 72.368854 s

2022-07-08 04:14:18.493036: 
epoch:  366
2022-07-08 04:15:25.921161: train loss : -0.8515
2022-07-08 04:15:30.406698: validation loss: -0.7851
2022-07-08 04:15:30.412144: Average global foreground Dice: [0.8164]
2022-07-08 04:15:30.418536: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:15:30.969232: Suus1 maybe_update_lr lr: 0.003037
2022-07-08 04:15:30.973420: This epoch took 72.478265 s

2022-07-08 04:15:30.975718: 
epoch:  367
2022-07-08 04:16:38.390594: train loss : -0.8552
2022-07-08 04:16:42.836293: validation loss: -0.7831
2022-07-08 04:16:42.839554: Average global foreground Dice: [0.8145]
2022-07-08 04:16:42.841758: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:16:43.300387: Suus1 maybe_update_lr lr: 0.003016
2022-07-08 04:16:43.302740: This epoch took 72.324811 s

2022-07-08 04:16:43.304790: 
epoch:  368
2022-07-08 04:17:50.656786: train loss : -0.8604
2022-07-08 04:17:55.139676: validation loss: -0.7844
2022-07-08 04:17:55.150814: Average global foreground Dice: [0.8204]
2022-07-08 04:17:55.163760: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:17:55.669129: Suus1 maybe_update_lr lr: 0.002996
2022-07-08 04:17:55.671293: This epoch took 72.362614 s

2022-07-08 04:17:55.673267: 
epoch:  369
2022-07-08 04:19:03.142644: train loss : -0.8621
2022-07-08 04:19:07.596113: validation loss: -0.7714
2022-07-08 04:19:07.598754: Average global foreground Dice: [0.8163]
2022-07-08 04:19:07.601326: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:19:08.240847: Suus1 maybe_update_lr lr: 0.002975
2022-07-08 04:19:08.243072: This epoch took 72.567858 s

2022-07-08 04:19:08.245135: 
epoch:  370
2022-07-08 04:20:15.674933: train loss : -0.8585
2022-07-08 04:20:20.179320: validation loss: -0.7721
2022-07-08 04:20:20.186017: Average global foreground Dice: [0.8064]
2022-07-08 04:20:20.188114: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:20:20.635116: Suus1 maybe_update_lr lr: 0.002954
2022-07-08 04:20:20.637426: This epoch took 72.390289 s

2022-07-08 04:20:20.639333: 
epoch:  371
2022-07-08 04:21:28.092849: train loss : -0.8527
2022-07-08 04:21:32.543732: validation loss: -0.7776
2022-07-08 04:21:32.556648: Average global foreground Dice: [0.815]
2022-07-08 04:21:32.581280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:21:33.090616: Suus1 maybe_update_lr lr: 0.002934
2022-07-08 04:21:33.092848: This epoch took 72.451635 s

2022-07-08 04:21:33.094787: 
epoch:  372
2022-07-08 04:22:40.531088: train loss : -0.8560
2022-07-08 04:22:45.012668: validation loss: -0.7935
2022-07-08 04:22:45.016961: Average global foreground Dice: [0.8283]
2022-07-08 04:22:45.021382: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:22:45.457992: Suus1 maybe_update_lr lr: 0.002913
2022-07-08 04:22:45.460044: This epoch took 72.363440 s

2022-07-08 04:22:45.461341: 
epoch:  373
2022-07-08 04:23:52.884439: train loss : -0.8596
2022-07-08 04:23:57.306052: validation loss: -0.8050
2022-07-08 04:23:57.312419: Average global foreground Dice: [0.8346]
2022-07-08 04:23:57.319621: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:23:57.781829: Suus1 maybe_update_lr lr: 0.002892
2022-07-08 04:23:57.784315: This epoch took 72.320631 s

2022-07-08 04:23:57.786552: 
epoch:  374
2022-07-08 04:25:05.266624: train loss : -0.8581
2022-07-08 04:25:09.658605: validation loss: -0.7802
2022-07-08 04:25:09.661841: Average global foreground Dice: [0.818]
2022-07-08 04:25:09.664084: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:25:10.140560: Suus1 maybe_update_lr lr: 0.002872
2022-07-08 04:25:10.142969: This epoch took 72.354459 s

2022-07-08 04:25:10.145126: 
epoch:  375
2022-07-08 04:26:17.514271: train loss : -0.8523
2022-07-08 04:26:21.853889: validation loss: -0.7730
2022-07-08 04:26:21.875906: Average global foreground Dice: [0.8109]
2022-07-08 04:26:21.888489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:26:22.500496: Suus1 maybe_update_lr lr: 0.002851
2022-07-08 04:26:22.502894: This epoch took 72.355050 s

2022-07-08 04:26:22.504978: 
epoch:  376
2022-07-08 04:27:29.918702: train loss : -0.8583
2022-07-08 04:27:34.440392: validation loss: -0.8021
2022-07-08 04:27:34.474710: Average global foreground Dice: [0.8319]
2022-07-08 04:27:34.484115: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:27:34.957607: Suus1 maybe_update_lr lr: 0.00283
2022-07-08 04:27:34.959833: saving best epoch checkpoint...
2022-07-08 04:27:35.009307: saving checkpoint...
2022-07-08 04:27:35.951431: done, saving took 0.99 seconds
2022-07-08 04:27:35.968226: This epoch took 73.461203 s

2022-07-08 04:27:35.970204: 
epoch:  377
2022-07-08 04:28:43.316359: train loss : -0.8593
2022-07-08 04:28:47.674980: validation loss: -0.7726
2022-07-08 04:28:47.678526: Average global foreground Dice: [0.8049]
2022-07-08 04:28:47.695643: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:28:48.392478: Suus1 maybe_update_lr lr: 0.00281
2022-07-08 04:28:48.394994: This epoch took 72.422818 s

2022-07-08 04:28:48.397043: 
epoch:  378
2022-07-08 04:29:55.821803: train loss : -0.8556
2022-07-08 04:30:00.274233: validation loss: -0.7670
2022-07-08 04:30:00.277548: Average global foreground Dice: [0.8048]
2022-07-08 04:30:00.279664: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:30:00.851487: Suus1 maybe_update_lr lr: 0.002789
2022-07-08 04:30:00.853376: This epoch took 72.454227 s

2022-07-08 04:30:00.855201: 
epoch:  379
2022-07-08 04:31:08.224439: train loss : -0.8542
2022-07-08 04:31:12.805205: validation loss: -0.7797
2022-07-08 04:31:12.825579: Average global foreground Dice: [0.8155]
2022-07-08 04:31:12.828560: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:31:13.459997: Suus1 maybe_update_lr lr: 0.002768
2022-07-08 04:31:13.480955: This epoch took 72.623707 s

2022-07-08 04:31:13.483137: 
epoch:  380
2022-07-08 04:32:20.849005: train loss : -0.8572
2022-07-08 04:32:25.385338: validation loss: -0.7667
2022-07-08 04:32:25.405629: Average global foreground Dice: [0.7957]
2022-07-08 04:32:25.409194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:32:25.995142: Suus1 maybe_update_lr lr: 0.002747
2022-07-08 04:32:25.997383: This epoch took 72.511950 s

2022-07-08 04:32:25.999517: 
epoch:  381
2022-07-08 04:33:33.515271: train loss : -0.8591
2022-07-08 04:33:37.893323: validation loss: -0.7713
2022-07-08 04:33:37.901797: Average global foreground Dice: [0.8085]
2022-07-08 04:33:37.907629: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:33:38.389257: Suus1 maybe_update_lr lr: 0.002727
2022-07-08 04:33:38.391426: This epoch took 72.389853 s

2022-07-08 04:33:38.393541: 
epoch:  382
2022-07-08 04:34:45.837525: train loss : -0.8614
2022-07-08 04:34:50.537497: validation loss: -0.7928
2022-07-08 04:34:50.552010: Average global foreground Dice: [0.8245]
2022-07-08 04:34:50.584572: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:34:51.101056: Suus1 maybe_update_lr lr: 0.002706
2022-07-08 04:34:51.103445: This epoch took 72.707021 s

2022-07-08 04:34:51.105369: 
epoch:  383
2022-07-08 04:35:58.567363: train loss : -0.8571
2022-07-08 04:36:02.902886: validation loss: -0.7735
2022-07-08 04:36:02.926632: Average global foreground Dice: [0.81]
2022-07-08 04:36:02.944637: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:36:03.422601: Suus1 maybe_update_lr lr: 0.002685
2022-07-08 04:36:03.431191: This epoch took 72.323730 s

2022-07-08 04:36:03.443954: 
epoch:  384
2022-07-08 04:37:10.766589: train loss : -0.8552
2022-07-08 04:37:15.250239: validation loss: -0.7799
2022-07-08 04:37:15.254956: Average global foreground Dice: [0.8112]
2022-07-08 04:37:15.259994: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:37:15.826429: Suus1 maybe_update_lr lr: 0.002664
2022-07-08 04:37:15.828669: This epoch took 72.382213 s

2022-07-08 04:37:15.830930: 
epoch:  385
2022-07-08 04:38:23.207297: train loss : -0.8606
2022-07-08 04:38:27.569984: validation loss: -0.7779
2022-07-08 04:38:27.604433: Average global foreground Dice: [0.8074]
2022-07-08 04:38:27.606969: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:38:28.083040: Suus1 maybe_update_lr lr: 0.002643
2022-07-08 04:38:28.088099: This epoch took 72.254969 s

2022-07-08 04:38:28.090780: 
epoch:  386
2022-07-08 04:39:35.561654: train loss : -0.8502
2022-07-08 04:39:40.022898: validation loss: -0.7800
2022-07-08 04:39:40.038749: Average global foreground Dice: [0.8124]
2022-07-08 04:39:40.099341: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:39:40.758011: Suus1 maybe_update_lr lr: 0.002622
2022-07-08 04:39:40.759753: This epoch took 72.665990 s

2022-07-08 04:39:40.762285: 
epoch:  387
2022-07-08 04:40:48.135333: train loss : -0.8605
2022-07-08 04:40:52.583186: validation loss: -0.7890
2022-07-08 04:40:52.608578: Average global foreground Dice: [0.8147]
2022-07-08 04:40:52.616786: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:40:53.239585: Suus1 maybe_update_lr lr: 0.002601
2022-07-08 04:40:53.242014: This epoch took 72.477816 s

2022-07-08 04:40:53.244110: 
epoch:  388
2022-07-08 04:42:00.783928: train loss : -0.8537
2022-07-08 04:42:05.100480: validation loss: -0.7875
2022-07-08 04:42:05.103939: Average global foreground Dice: [0.8201]
2022-07-08 04:42:05.105962: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:42:05.549863: Suus1 maybe_update_lr lr: 0.002581
2022-07-08 04:42:05.552356: This epoch took 72.306201 s

2022-07-08 04:42:05.554415: 
epoch:  389
2022-07-08 04:43:13.216749: train loss : -0.8566
2022-07-08 04:43:17.606021: validation loss: -0.7802
2022-07-08 04:43:17.619385: Average global foreground Dice: [0.8164]
2022-07-08 04:43:17.622056: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:43:18.186691: Suus1 maybe_update_lr lr: 0.00256
2022-07-08 04:43:18.188833: This epoch took 72.632212 s

2022-07-08 04:43:18.190965: 
epoch:  390
2022-07-08 04:44:25.580802: train loss : -0.8539
2022-07-08 04:44:30.024342: validation loss: -0.8024
2022-07-08 04:44:30.030361: Average global foreground Dice: [0.8333]
2022-07-08 04:44:30.052539: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:44:30.537559: Suus1 maybe_update_lr lr: 0.002539
2022-07-08 04:44:30.540113: This epoch took 72.347246 s

2022-07-08 04:44:30.542170: 
epoch:  391
2022-07-08 04:45:37.864074: train loss : -0.8573
2022-07-08 04:45:42.226346: validation loss: -0.8078
2022-07-08 04:45:42.235745: Average global foreground Dice: [0.8418]
2022-07-08 04:45:42.256672: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:45:42.730904: Suus1 maybe_update_lr lr: 0.002518
2022-07-08 04:45:42.733047: saving best epoch checkpoint...
2022-07-08 04:45:42.784539: saving checkpoint...
2022-07-08 04:45:43.664659: done, saving took 0.93 seconds
2022-07-08 04:45:43.680222: This epoch took 73.136076 s

2022-07-08 04:45:43.682406: 
epoch:  392
2022-07-08 04:46:51.013719: train loss : -0.8568
2022-07-08 04:46:55.460694: validation loss: -0.7636
2022-07-08 04:46:55.473083: Average global foreground Dice: [0.8043]
2022-07-08 04:46:55.475557: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:46:55.938844: Suus1 maybe_update_lr lr: 0.002497
2022-07-08 04:46:55.941376: This epoch took 72.256812 s

2022-07-08 04:46:55.943404: 
epoch:  393
2022-07-08 04:48:03.352746: train loss : -0.8582
2022-07-08 04:48:07.790872: validation loss: -0.7736
2022-07-08 04:48:07.794413: Average global foreground Dice: [0.8079]
2022-07-08 04:48:07.796724: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:48:08.332224: Suus1 maybe_update_lr lr: 0.002476
2022-07-08 04:48:08.334028: This epoch took 72.388583 s

2022-07-08 04:48:08.336627: 
epoch:  394
2022-07-08 04:49:15.829371: train loss : -0.8584
2022-07-08 04:49:20.190304: validation loss: -0.7728
2022-07-08 04:49:20.193648: Average global foreground Dice: [0.8073]
2022-07-08 04:49:20.196101: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:49:20.843810: Suus1 maybe_update_lr lr: 0.002455
2022-07-08 04:49:20.846250: This epoch took 72.506580 s

2022-07-08 04:49:20.848495: 
epoch:  395
2022-07-08 04:50:28.450751: train loss : -0.8576
2022-07-08 04:50:32.892497: validation loss: -0.7846
2022-07-08 04:50:32.905945: Average global foreground Dice: [0.8193]
2022-07-08 04:50:32.929260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:50:33.483570: Suus1 maybe_update_lr lr: 0.002434
2022-07-08 04:50:33.485545: This epoch took 72.634660 s

2022-07-08 04:50:33.487460: 
epoch:  396
2022-07-08 04:51:41.036223: train loss : -0.8640
2022-07-08 04:51:45.452897: validation loss: -0.7913
2022-07-08 04:51:45.475780: Average global foreground Dice: [0.8249]
2022-07-08 04:51:45.488297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:51:46.047867: Suus1 maybe_update_lr lr: 0.002413
2022-07-08 04:51:46.050447: This epoch took 72.561158 s

2022-07-08 04:51:46.052616: 
epoch:  397
2022-07-08 04:52:53.446896: train loss : -0.8669
2022-07-08 04:52:57.880750: validation loss: -0.7778
2022-07-08 04:52:57.889354: Average global foreground Dice: [0.8186]
2022-07-08 04:52:57.890789: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:52:58.517074: Suus1 maybe_update_lr lr: 0.002391
2022-07-08 04:52:58.520369: This epoch took 72.464957 s

2022-07-08 04:52:58.523318: 
epoch:  398
2022-07-08 04:54:05.841238: train loss : -0.8662
2022-07-08 04:54:10.247989: validation loss: -0.7966
2022-07-08 04:54:10.251086: Average global foreground Dice: [0.8359]
2022-07-08 04:54:10.253396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:54:10.703482: Suus1 maybe_update_lr lr: 0.00237
2022-07-08 04:54:10.705615: saving best epoch checkpoint...
2022-07-08 04:54:10.756880: saving checkpoint...
2022-07-08 04:54:11.800266: done, saving took 1.09 seconds
2022-07-08 04:54:11.816691: This epoch took 73.291395 s

2022-07-08 04:54:11.818925: 
epoch:  399
2022-07-08 04:55:19.224676: train loss : -0.8617
2022-07-08 04:55:23.554212: validation loss: -0.7742
2022-07-08 04:55:23.566353: Average global foreground Dice: [0.816]
2022-07-08 04:55:23.581658: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:55:24.065216: Suus1 maybe_update_lr lr: 0.002349
2022-07-08 04:55:24.067323: saving scheduled checkpoint file...
2022-07-08 04:55:24.115732: saving checkpoint...
2022-07-08 04:55:25.103606: done, saving took 1.03 seconds
2022-07-08 04:55:25.129407: done
2022-07-08 04:55:25.131548: This epoch took 73.310450 s

2022-07-08 04:55:25.133547: 
epoch:  400
2022-07-08 04:56:32.488577: train loss : -0.8599
2022-07-08 04:56:36.964833: validation loss: -0.7925
2022-07-08 04:56:36.974322: Average global foreground Dice: [0.8216]
2022-07-08 04:56:36.977033: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:56:37.603697: Suus1 maybe_update_lr lr: 0.002328
2022-07-08 04:56:37.605720: saving best epoch checkpoint...
2022-07-08 04:56:37.654676: saving checkpoint...
2022-07-08 04:56:38.633570: done, saving took 1.03 seconds
2022-07-08 04:56:38.649494: This epoch took 73.513974 s

2022-07-08 04:56:38.651659: 
epoch:  401
2022-07-08 04:57:46.084563: train loss : -0.8633
2022-07-08 04:57:50.458359: validation loss: -0.8020
2022-07-08 04:57:50.468743: Average global foreground Dice: [0.8373]
2022-07-08 04:57:50.470921: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:57:51.123239: Suus1 maybe_update_lr lr: 0.002307
2022-07-08 04:57:51.125381: saving best epoch checkpoint...
2022-07-08 04:57:51.157563: saving checkpoint...
2022-07-08 04:57:52.113519: done, saving took 0.99 seconds
2022-07-08 04:57:52.127909: This epoch took 73.474246 s

2022-07-08 04:57:52.130343: 
epoch:  402
2022-07-08 04:58:59.447716: train loss : -0.8703
2022-07-08 04:59:03.865325: validation loss: -0.7857
2022-07-08 04:59:03.873286: Average global foreground Dice: [0.8181]
2022-07-08 04:59:03.875472: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 04:59:04.340347: Suus1 maybe_update_lr lr: 0.002286
2022-07-08 04:59:04.342205: This epoch took 72.209490 s

2022-07-08 04:59:04.344913: 
epoch:  403
2022-07-08 05:00:11.641576: train loss : -0.8667
2022-07-08 05:00:16.148052: validation loss: -0.7876
2022-07-08 05:00:16.159427: Average global foreground Dice: [0.8208]
2022-07-08 05:00:16.164016: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:00:16.712443: Suus1 maybe_update_lr lr: 0.002264
2022-07-08 05:00:16.714761: This epoch took 72.367888 s

2022-07-08 05:00:16.716669: 
epoch:  404
2022-07-08 05:01:24.216914: train loss : -0.8682
2022-07-08 05:01:28.630336: validation loss: -0.7745
2022-07-08 05:01:28.652285: Average global foreground Dice: [0.813]
2022-07-08 05:01:28.660290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:01:29.164938: Suus1 maybe_update_lr lr: 0.002243
2022-07-08 05:01:29.167152: This epoch took 72.448586 s

2022-07-08 05:01:29.169042: 
epoch:  405
2022-07-08 05:02:36.491663: train loss : -0.8713
2022-07-08 05:02:40.849002: validation loss: -0.7764
2022-07-08 05:02:40.853389: Average global foreground Dice: [0.8154]
2022-07-08 05:02:40.855717: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:02:41.302288: Suus1 maybe_update_lr lr: 0.002222
2022-07-08 05:02:41.304824: This epoch took 72.133939 s

2022-07-08 05:02:41.307049: 
epoch:  406
2022-07-08 05:03:48.674470: train loss : -0.8721
2022-07-08 05:03:53.065502: validation loss: -0.7942
2022-07-08 05:03:53.081740: Average global foreground Dice: [0.8238]
2022-07-08 05:03:53.085135: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:03:53.571721: Suus1 maybe_update_lr lr: 0.002201
2022-07-08 05:03:53.574071: This epoch took 72.264621 s

2022-07-08 05:03:53.576080: 
epoch:  407
2022-07-08 05:05:00.867408: train loss : -0.8607
2022-07-08 05:05:05.247412: validation loss: -0.7773
2022-07-08 05:05:05.279005: Average global foreground Dice: [0.8183]
2022-07-08 05:05:05.299273: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:05:05.768889: Suus1 maybe_update_lr lr: 0.002179
2022-07-08 05:05:05.771309: This epoch took 72.193144 s

2022-07-08 05:05:05.773327: 
epoch:  408
2022-07-08 05:06:13.261045: train loss : -0.8640
2022-07-08 05:06:17.699675: validation loss: -0.7880
2022-07-08 05:06:17.714011: Average global foreground Dice: [0.8181]
2022-07-08 05:06:17.719319: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:06:18.235640: Suus1 maybe_update_lr lr: 0.002158
2022-07-08 05:06:18.238058: This epoch took 72.462611 s

2022-07-08 05:06:18.240293: 
epoch:  409
2022-07-08 05:07:25.653058: train loss : -0.8676
2022-07-08 05:07:30.171662: validation loss: -0.7963
2022-07-08 05:07:30.190851: Average global foreground Dice: [0.8324]
2022-07-08 05:07:30.197766: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:07:30.679677: Suus1 maybe_update_lr lr: 0.002137
2022-07-08 05:07:30.682037: saving best epoch checkpoint...
2022-07-08 05:07:30.731807: saving checkpoint...
2022-07-08 05:07:31.762333: done, saving took 1.08 seconds
2022-07-08 05:07:31.777765: This epoch took 73.535383 s

2022-07-08 05:07:31.780171: 
epoch:  410
2022-07-08 05:08:39.085742: train loss : -0.8646
2022-07-08 05:08:43.486741: validation loss: -0.7556
2022-07-08 05:08:43.490910: Average global foreground Dice: [0.7953]
2022-07-08 05:08:43.493348: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:08:44.067375: Suus1 maybe_update_lr lr: 0.002115
2022-07-08 05:08:44.069599: This epoch took 72.287031 s

2022-07-08 05:08:44.071613: 
epoch:  411
2022-07-08 05:09:51.503357: train loss : -0.8644
2022-07-08 05:09:55.897314: validation loss: -0.7990
2022-07-08 05:09:55.939937: Average global foreground Dice: [0.8309]
2022-07-08 05:09:55.957290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:09:56.456346: Suus1 maybe_update_lr lr: 0.002094
2022-07-08 05:09:56.458726: This epoch took 72.385168 s

2022-07-08 05:09:56.460876: 
epoch:  412
2022-07-08 05:11:03.843166: train loss : -0.8635
2022-07-08 05:11:08.300191: validation loss: -0.7776
2022-07-08 05:11:08.335626: Average global foreground Dice: [0.8175]
2022-07-08 05:11:08.360277: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:11:08.928471: Suus1 maybe_update_lr lr: 0.002072
2022-07-08 05:11:08.930784: This epoch took 72.467835 s

2022-07-08 05:11:08.932743: 
epoch:  413
2022-07-08 05:12:16.321215: train loss : -0.8610
2022-07-08 05:12:20.772782: validation loss: -0.7790
2022-07-08 05:12:20.776081: Average global foreground Dice: [0.8122]
2022-07-08 05:12:20.778313: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:12:21.232931: Suus1 maybe_update_lr lr: 0.002051
2022-07-08 05:12:21.235437: This epoch took 72.300931 s

2022-07-08 05:12:21.237784: 
epoch:  414
2022-07-08 05:13:28.561032: train loss : -0.8639
2022-07-08 05:13:33.028160: validation loss: -0.7860
2022-07-08 05:13:33.051450: Average global foreground Dice: [0.8263]
2022-07-08 05:13:33.073652: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:13:33.563560: Suus1 maybe_update_lr lr: 0.00203
2022-07-08 05:13:33.580716: This epoch took 72.340651 s

2022-07-08 05:13:33.585144: 
epoch:  415
2022-07-08 05:14:40.925249: train loss : -0.8686
2022-07-08 05:14:45.302426: validation loss: -0.7890
2022-07-08 05:14:45.305910: Average global foreground Dice: [0.8232]
2022-07-08 05:14:45.308181: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:14:45.809577: Suus1 maybe_update_lr lr: 0.002008
2022-07-08 05:14:45.811930: This epoch took 72.221895 s

2022-07-08 05:14:45.814869: 
epoch:  416
2022-07-08 05:15:53.099160: train loss : -0.8702
2022-07-08 05:15:57.483654: validation loss: -0.7705
2022-07-08 05:15:57.490479: Average global foreground Dice: [0.8084]
2022-07-08 05:15:57.494744: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:15:57.984051: Suus1 maybe_update_lr lr: 0.001987
2022-07-08 05:15:57.986373: This epoch took 72.169229 s

2022-07-08 05:15:57.988580: 
epoch:  417
2022-07-08 05:17:05.335945: train loss : -0.8699
2022-07-08 05:17:09.830154: validation loss: -0.7944
2022-07-08 05:17:09.850161: Average global foreground Dice: [0.8203]
2022-07-08 05:17:09.862443: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:17:10.413803: Suus1 maybe_update_lr lr: 0.001965
2022-07-08 05:17:10.416491: This epoch took 72.425905 s

2022-07-08 05:17:10.418850: 
epoch:  418
2022-07-08 05:18:17.824549: train loss : -0.8734
2022-07-08 05:18:22.217943: validation loss: -0.7975
2022-07-08 05:18:22.232099: Average global foreground Dice: [0.826]
2022-07-08 05:18:22.242923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:18:22.827877: Suus1 maybe_update_lr lr: 0.001943
2022-07-08 05:18:22.830643: This epoch took 72.409701 s

2022-07-08 05:18:22.832618: 
epoch:  419
2022-07-08 05:19:30.243391: train loss : -0.8701
2022-07-08 05:19:34.718931: validation loss: -0.7857
2022-07-08 05:19:34.722341: Average global foreground Dice: [0.8184]
2022-07-08 05:19:34.724476: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:19:35.194917: Suus1 maybe_update_lr lr: 0.001922
2022-07-08 05:19:35.208802: This epoch took 72.374073 s

2022-07-08 05:19:35.228616: 
epoch:  420
2022-07-08 05:20:42.645000: train loss : -0.8630
2022-07-08 05:20:47.145902: validation loss: -0.7872
2022-07-08 05:20:47.150383: Average global foreground Dice: [0.822]
2022-07-08 05:20:47.163569: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:20:47.663257: Suus1 maybe_update_lr lr: 0.0019
2022-07-08 05:20:47.665810: This epoch took 72.418329 s

2022-07-08 05:20:47.667984: 
epoch:  421
2022-07-08 05:21:55.064215: train loss : -0.8695
2022-07-08 05:21:59.397105: validation loss: -0.7742
2022-07-08 05:21:59.425781: Average global foreground Dice: [0.8051]
2022-07-08 05:21:59.445288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:21:59.926065: Suus1 maybe_update_lr lr: 0.001879
2022-07-08 05:21:59.928348: This epoch took 72.258293 s

2022-07-08 05:21:59.930409: 
epoch:  422
2022-07-08 05:23:07.234944: train loss : -0.8752
2022-07-08 05:23:11.632401: validation loss: -0.7807
2022-07-08 05:23:11.636321: Average global foreground Dice: [0.8118]
2022-07-08 05:23:11.638992: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:23:12.114318: Suus1 maybe_update_lr lr: 0.001857
2022-07-08 05:23:12.116892: This epoch took 72.184444 s

2022-07-08 05:23:12.119077: 
epoch:  423
2022-07-08 05:24:19.601074: train loss : -0.8650
2022-07-08 05:24:24.063564: validation loss: -0.7792
2022-07-08 05:24:24.081422: Average global foreground Dice: [0.8115]
2022-07-08 05:24:24.085960: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:24:24.693467: Suus1 maybe_update_lr lr: 0.001835
2022-07-08 05:24:24.698056: This epoch took 72.576887 s

2022-07-08 05:24:24.700260: 
epoch:  424
2022-07-08 05:25:32.089857: train loss : -0.8749
2022-07-08 05:25:36.490801: validation loss: -0.7922
2022-07-08 05:25:36.508794: Average global foreground Dice: [0.8199]
2022-07-08 05:25:36.534048: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:25:37.052291: Suus1 maybe_update_lr lr: 0.001813
2022-07-08 05:25:37.054861: This epoch took 72.352510 s

2022-07-08 05:25:37.056871: 
epoch:  425
2022-07-08 05:26:44.454936: train loss : -0.8720
2022-07-08 05:26:49.037764: validation loss: -0.7957
2022-07-08 05:26:49.041773: Average global foreground Dice: [0.8294]
2022-07-08 05:26:49.052806: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:26:49.570510: Suus1 maybe_update_lr lr: 0.001792
2022-07-08 05:26:49.572888: This epoch took 72.514027 s

2022-07-08 05:26:49.575120: 
epoch:  426
2022-07-08 05:27:56.931153: train loss : -0.8742
2022-07-08 05:28:01.312255: validation loss: -0.7768
2022-07-08 05:28:01.315594: Average global foreground Dice: [0.8051]
2022-07-08 05:28:01.317941: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:28:01.788821: Suus1 maybe_update_lr lr: 0.00177
2022-07-08 05:28:01.791388: This epoch took 72.214245 s

2022-07-08 05:28:01.793566: 
epoch:  427
2022-07-08 05:29:09.142738: train loss : -0.8747
2022-07-08 05:29:13.502383: validation loss: -0.7959
2022-07-08 05:29:13.505997: Average global foreground Dice: [0.8263]
2022-07-08 05:29:13.536276: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:29:14.078639: Suus1 maybe_update_lr lr: 0.001748
2022-07-08 05:29:14.080875: This epoch took 72.285223 s

2022-07-08 05:29:14.082870: 
epoch:  428
2022-07-08 05:30:21.388608: train loss : -0.8786
2022-07-08 05:30:25.832541: validation loss: -0.7818
2022-07-08 05:30:25.868654: Average global foreground Dice: [0.8189]
2022-07-08 05:30:25.883391: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:30:26.465580: Suus1 maybe_update_lr lr: 0.001726
2022-07-08 05:30:26.468030: This epoch took 72.382999 s

2022-07-08 05:30:26.470192: 
epoch:  429
2022-07-08 05:31:33.880136: train loss : -0.8704
2022-07-08 05:31:38.397881: validation loss: -0.7934
2022-07-08 05:31:38.431766: Average global foreground Dice: [0.8202]
2022-07-08 05:31:38.460294: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:31:38.966841: Suus1 maybe_update_lr lr: 0.001704
2022-07-08 05:31:38.969075: This epoch took 72.496710 s

2022-07-08 05:31:38.971180: 
epoch:  430
2022-07-08 05:32:46.325524: train loss : -0.8731
2022-07-08 05:32:51.015863: validation loss: -0.7998
2022-07-08 05:32:51.024725: Average global foreground Dice: [0.8322]
2022-07-08 05:32:51.037260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:32:51.692656: Suus1 maybe_update_lr lr: 0.001682
2022-07-08 05:32:51.695440: This epoch took 72.722059 s

2022-07-08 05:32:51.697748: 
epoch:  431
2022-07-08 05:33:59.168590: train loss : -0.8736
2022-07-08 05:34:03.692685: validation loss: -0.7882
2022-07-08 05:34:03.695701: Average global foreground Dice: [0.8191]
2022-07-08 05:34:03.697264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:34:04.253375: Suus1 maybe_update_lr lr: 0.00166
2022-07-08 05:34:04.255634: This epoch took 72.555847 s

2022-07-08 05:34:04.257555: 
epoch:  432
2022-07-08 05:35:11.602115: train loss : -0.8757
2022-07-08 05:35:16.141490: validation loss: -0.7931
2022-07-08 05:35:16.147334: Average global foreground Dice: [0.8255]
2022-07-08 05:35:16.169272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:35:16.686686: Suus1 maybe_update_lr lr: 0.001638
2022-07-08 05:35:16.689491: This epoch took 72.429982 s

2022-07-08 05:35:16.691715: 
epoch:  433
2022-07-08 05:36:24.085074: train loss : -0.8775
2022-07-08 05:36:28.555323: validation loss: -0.7712
2022-07-08 05:36:28.572076: Average global foreground Dice: [0.8056]
2022-07-08 05:36:28.578394: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:36:29.062255: Suus1 maybe_update_lr lr: 0.001616
2022-07-08 05:36:29.082297: This epoch took 72.388597 s

2022-07-08 05:36:29.104314: 
epoch:  434
2022-07-08 05:37:36.486644: train loss : -0.8770
2022-07-08 05:37:40.855413: validation loss: -0.7753
2022-07-08 05:37:40.860168: Average global foreground Dice: [0.8073]
2022-07-08 05:37:40.876049: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:37:41.442290: Suus1 maybe_update_lr lr: 0.001594
2022-07-08 05:37:41.444703: This epoch took 72.319734 s

2022-07-08 05:37:41.446707: 
epoch:  435
2022-07-08 05:38:48.799197: train loss : -0.8717
2022-07-08 05:38:53.252286: validation loss: -0.7806
2022-07-08 05:38:53.260671: Average global foreground Dice: [0.8137]
2022-07-08 05:38:53.262870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:38:53.710731: Suus1 maybe_update_lr lr: 0.001572
2022-07-08 05:38:53.712927: This epoch took 72.264210 s

2022-07-08 05:38:53.714779: 
epoch:  436
2022-07-08 05:40:01.136205: train loss : -0.8738
2022-07-08 05:40:05.506293: validation loss: -0.7853
2022-07-08 05:40:05.512888: Average global foreground Dice: [0.8223]
2022-07-08 05:40:05.515241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:40:05.984169: Suus1 maybe_update_lr lr: 0.00155
2022-07-08 05:40:05.990877: This epoch took 72.274248 s

2022-07-08 05:40:05.998233: 
epoch:  437
2022-07-08 05:41:13.360853: train loss : -0.8792
2022-07-08 05:41:17.777459: validation loss: -0.8056
2022-07-08 05:41:17.794697: Average global foreground Dice: [0.829]
2022-07-08 05:41:17.806417: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:41:18.362454: Suus1 maybe_update_lr lr: 0.001528
2022-07-08 05:41:18.365394: This epoch took 72.364874 s

2022-07-08 05:41:18.367824: 
epoch:  438
2022-07-08 05:42:25.707790: train loss : -0.8757
2022-07-08 05:42:30.120699: validation loss: -0.7978
2022-07-08 05:42:30.124324: Average global foreground Dice: [0.8315]
2022-07-08 05:42:30.126745: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:42:30.582682: Suus1 maybe_update_lr lr: 0.001506
2022-07-08 05:42:30.584799: This epoch took 72.212746 s

2022-07-08 05:42:30.586971: 
epoch:  439
2022-07-08 05:43:37.865450: train loss : -0.8818
2022-07-08 05:43:42.394161: validation loss: -0.7852
2022-07-08 05:43:42.397966: Average global foreground Dice: [0.8166]
2022-07-08 05:43:42.411825: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:43:43.004601: Suus1 maybe_update_lr lr: 0.001483
2022-07-08 05:43:43.006887: This epoch took 72.417922 s

2022-07-08 05:43:43.008901: 
epoch:  440
2022-07-08 05:44:50.419829: train loss : -0.8750
2022-07-08 05:44:54.877238: validation loss: -0.7889
2022-07-08 05:44:54.893827: Average global foreground Dice: [0.8188]
2022-07-08 05:44:54.912958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:44:55.395723: Suus1 maybe_update_lr lr: 0.001461
2022-07-08 05:44:55.417951: This epoch took 72.407153 s

2022-07-08 05:44:55.420294: 
epoch:  441
2022-07-08 05:46:02.693345: train loss : -0.8765
2022-07-08 05:46:07.197979: validation loss: -0.7904
2022-07-08 05:46:07.204018: Average global foreground Dice: [0.8244]
2022-07-08 05:46:07.227234: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:46:07.711060: Suus1 maybe_update_lr lr: 0.001439
2022-07-08 05:46:07.713197: This epoch took 72.290607 s

2022-07-08 05:46:07.715283: 
epoch:  442
2022-07-08 05:47:14.994307: train loss : -0.8773
2022-07-08 05:47:19.588878: validation loss: -0.7950
2022-07-08 05:47:19.598090: Average global foreground Dice: [0.8262]
2022-07-08 05:47:19.601948: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:47:20.062396: Suus1 maybe_update_lr lr: 0.001416
2022-07-08 05:47:20.064569: saving best epoch checkpoint...
2022-07-08 05:47:20.109962: saving checkpoint...
2022-07-08 05:47:21.062399: done, saving took 1.00 seconds
2022-07-08 05:47:21.077888: This epoch took 73.360493 s

2022-07-08 05:47:21.080031: 
epoch:  443
2022-07-08 05:48:28.429746: train loss : -0.8802
2022-07-08 05:48:32.932511: validation loss: -0.7982
2022-07-08 05:48:32.943701: Average global foreground Dice: [0.8242]
2022-07-08 05:48:32.954140: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:48:33.461416: Suus1 maybe_update_lr lr: 0.001394
2022-07-08 05:48:33.470150: saving best epoch checkpoint...
2022-07-08 05:48:33.549151: saving checkpoint...
2022-07-08 05:48:34.560615: done, saving took 1.08 seconds
2022-07-08 05:48:34.576497: This epoch took 73.494524 s

2022-07-08 05:48:34.578638: 
epoch:  444
2022-07-08 05:49:41.772310: train loss : -0.8763
2022-07-08 05:49:46.329240: validation loss: -0.7791
2022-07-08 05:49:46.344234: Average global foreground Dice: [0.8197]
2022-07-08 05:49:46.351191: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:49:46.863247: Suus1 maybe_update_lr lr: 0.001372
2022-07-08 05:49:46.865553: This epoch took 72.284696 s

2022-07-08 05:49:46.867606: 
epoch:  445
2022-07-08 05:50:54.207004: train loss : -0.8767
2022-07-08 05:50:58.662955: validation loss: -0.7673
2022-07-08 05:50:58.674003: Average global foreground Dice: [0.8045]
2022-07-08 05:50:58.676239: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:50:59.127264: Suus1 maybe_update_lr lr: 0.001349
2022-07-08 05:50:59.129764: This epoch took 72.260233 s

2022-07-08 05:50:59.131747: 
epoch:  446
2022-07-08 05:52:06.544427: train loss : -0.8773
2022-07-08 05:52:10.999406: validation loss: -0.7704
2022-07-08 05:52:11.050691: Average global foreground Dice: [0.8111]
2022-07-08 05:52:11.065409: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:52:11.606741: Suus1 maybe_update_lr lr: 0.001327
2022-07-08 05:52:11.609070: This epoch took 72.475410 s

2022-07-08 05:52:11.611053: 
epoch:  447
2022-07-08 05:53:18.871712: train loss : -0.8755
2022-07-08 05:53:23.245705: validation loss: -0.7910
2022-07-08 05:53:23.249465: Average global foreground Dice: [0.8234]
2022-07-08 05:53:23.251927: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:53:23.790925: Suus1 maybe_update_lr lr: 0.001304
2022-07-08 05:53:23.793536: This epoch took 72.180637 s

2022-07-08 05:53:23.795476: 
epoch:  448
2022-07-08 05:54:31.144676: train loss : -0.8793
2022-07-08 05:54:35.467359: validation loss: -0.7676
2022-07-08 05:54:35.480507: Average global foreground Dice: [0.8014]
2022-07-08 05:54:35.490515: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:54:35.945409: Suus1 maybe_update_lr lr: 0.001282
2022-07-08 05:54:35.947993: This epoch took 72.150574 s

2022-07-08 05:54:35.950492: 
epoch:  449
2022-07-08 05:55:43.371326: train loss : -0.8785
2022-07-08 05:55:47.809223: validation loss: -0.7924
2022-07-08 05:55:47.826958: Average global foreground Dice: [0.8209]
2022-07-08 05:55:47.829243: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:55:48.283857: Suus1 maybe_update_lr lr: 0.001259
2022-07-08 05:55:48.302290: saving scheduled checkpoint file...
2022-07-08 05:55:48.403224: saving checkpoint...
2022-07-08 05:55:49.402270: done, saving took 1.08 seconds
2022-07-08 05:55:49.420216: done
2022-07-08 05:55:49.422436: This epoch took 73.469588 s

2022-07-08 05:55:49.424507: 
epoch:  450
2022-07-08 05:56:56.753303: train loss : -0.8848
2022-07-08 05:57:01.343453: validation loss: -0.7875
2022-07-08 05:57:01.356683: Average global foreground Dice: [0.8195]
2022-07-08 05:57:01.366190: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:57:02.097287: Suus1 maybe_update_lr lr: 0.001236
2022-07-08 05:57:02.099429: This epoch took 72.672714 s

2022-07-08 05:57:02.101468: 
epoch:  451
2022-07-08 05:58:09.339566: train loss : -0.8801
2022-07-08 05:58:13.845477: validation loss: -0.7726
2022-07-08 05:58:13.860646: Average global foreground Dice: [0.8111]
2022-07-08 05:58:13.876635: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:58:14.344242: Suus1 maybe_update_lr lr: 0.001214
2022-07-08 05:58:14.346624: This epoch took 72.243212 s

2022-07-08 05:58:14.348954: 
epoch:  452
2022-07-08 05:59:21.701344: train loss : -0.8817
2022-07-08 05:59:26.077466: validation loss: -0.7575
2022-07-08 05:59:26.090251: Average global foreground Dice: [0.794]
2022-07-08 05:59:26.092444: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 05:59:26.540124: Suus1 maybe_update_lr lr: 0.001191
2022-07-08 05:59:26.542368: This epoch took 72.189470 s

2022-07-08 05:59:26.544543: 
epoch:  453
2022-07-08 06:00:33.849759: train loss : -0.8775
2022-07-08 06:00:38.268344: validation loss: -0.7684
2022-07-08 06:00:38.280267: Average global foreground Dice: [0.8035]
2022-07-08 06:00:38.282461: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:00:38.829286: Suus1 maybe_update_lr lr: 0.001168
2022-07-08 06:00:38.832080: This epoch took 72.285594 s

2022-07-08 06:00:38.834481: 
epoch:  454
2022-07-08 06:01:46.160750: train loss : -0.8828
2022-07-08 06:01:50.622855: validation loss: -0.7883
2022-07-08 06:01:50.625922: Average global foreground Dice: [0.8271]
2022-07-08 06:01:50.628134: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:01:51.159492: Suus1 maybe_update_lr lr: 0.001145
2022-07-08 06:01:51.161777: This epoch took 72.324896 s

2022-07-08 06:01:51.164246: 
epoch:  455
2022-07-08 06:02:58.503378: train loss : -0.8806
2022-07-08 06:03:02.913057: validation loss: -0.7980
2022-07-08 06:03:02.916494: Average global foreground Dice: [0.8302]
2022-07-08 06:03:02.932415: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:03:03.435148: Suus1 maybe_update_lr lr: 0.001122
2022-07-08 06:03:03.437428: This epoch took 72.270759 s

2022-07-08 06:03:03.439477: 
epoch:  456
2022-07-08 06:04:10.864733: train loss : -0.8794
2022-07-08 06:04:15.338662: validation loss: -0.7903
2022-07-08 06:04:15.343511: Average global foreground Dice: [0.8256]
2022-07-08 06:04:15.345647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:04:15.891111: Suus1 maybe_update_lr lr: 0.001099
2022-07-08 06:04:15.893455: This epoch took 72.451920 s

2022-07-08 06:04:15.895484: 
epoch:  457
2022-07-08 06:05:23.150138: train loss : -0.8829
2022-07-08 06:05:27.693923: validation loss: -0.7857
2022-07-08 06:05:27.697397: Average global foreground Dice: [0.8227]
2022-07-08 06:05:27.718933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:05:28.172962: Suus1 maybe_update_lr lr: 0.001076
2022-07-08 06:05:28.175398: This epoch took 72.277746 s

2022-07-08 06:05:28.177502: 
epoch:  458
2022-07-08 06:06:35.644673: train loss : -0.8844
2022-07-08 06:06:40.160247: validation loss: -0.7786
2022-07-08 06:06:40.181262: Average global foreground Dice: [0.8148]
2022-07-08 06:06:40.208148: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:06:40.726402: Suus1 maybe_update_lr lr: 0.001053
2022-07-08 06:06:40.728830: This epoch took 72.549403 s

2022-07-08 06:06:40.730935: 
epoch:  459
2022-07-08 06:07:48.207261: train loss : -0.8778
2022-07-08 06:07:52.612322: validation loss: -0.7668
2022-07-08 06:07:52.615129: Average global foreground Dice: [0.804]
2022-07-08 06:07:52.617436: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:07:53.048919: Suus1 maybe_update_lr lr: 0.00103
2022-07-08 06:07:53.051133: This epoch took 72.318119 s

2022-07-08 06:07:53.053017: 
epoch:  460
2022-07-08 06:09:00.334531: train loss : -0.8825
2022-07-08 06:09:04.714846: validation loss: -0.8000
2022-07-08 06:09:04.729727: Average global foreground Dice: [0.8331]
2022-07-08 06:09:04.733924: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:09:05.179750: Suus1 maybe_update_lr lr: 0.001007
2022-07-08 06:09:05.181861: This epoch took 72.126781 s

2022-07-08 06:09:05.183732: 
epoch:  461
2022-07-08 06:10:12.575627: train loss : -0.8827
2022-07-08 06:10:17.233109: validation loss: -0.7853
2022-07-08 06:10:17.236865: Average global foreground Dice: [0.8238]
2022-07-08 06:10:17.239236: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:10:17.839144: Suus1 maybe_update_lr lr: 0.000983
2022-07-08 06:10:17.841440: This epoch took 72.655833 s

2022-07-08 06:10:17.843443: 
epoch:  462
2022-07-08 06:11:25.251443: train loss : -0.8814
2022-07-08 06:11:29.761266: validation loss: -0.7882
2022-07-08 06:11:29.768646: Average global foreground Dice: [0.8224]
2022-07-08 06:11:29.772805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:11:30.257360: Suus1 maybe_update_lr lr: 0.00096
2022-07-08 06:11:30.260085: This epoch took 72.414408 s

2022-07-08 06:11:30.262159: 
epoch:  463
2022-07-08 06:12:37.765659: train loss : -0.8811
2022-07-08 06:12:42.300314: validation loss: -0.8019
2022-07-08 06:12:42.315499: Average global foreground Dice: [0.8311]
2022-07-08 06:12:42.341624: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:12:42.856168: Suus1 maybe_update_lr lr: 0.000937
2022-07-08 06:12:42.885546: This epoch took 72.621256 s

2022-07-08 06:12:42.895449: 
epoch:  464
2022-07-08 06:13:50.342415: train loss : -0.8765
2022-07-08 06:13:54.732459: validation loss: -0.7908
2022-07-08 06:13:54.750932: Average global foreground Dice: [0.8221]
2022-07-08 06:13:54.753060: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:13:55.337948: Suus1 maybe_update_lr lr: 0.000913
2022-07-08 06:13:55.340466: This epoch took 72.427168 s

2022-07-08 06:13:55.342481: 
epoch:  465
2022-07-08 06:15:02.680928: train loss : -0.8779
2022-07-08 06:15:07.151222: validation loss: -0.7820
2022-07-08 06:15:07.175793: Average global foreground Dice: [0.8069]
2022-07-08 06:15:07.208270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:15:07.861935: Suus1 maybe_update_lr lr: 0.00089
2022-07-08 06:15:07.864306: This epoch took 72.519744 s

2022-07-08 06:15:07.866369: 
epoch:  466
2022-07-08 06:16:15.248321: train loss : -0.8794
2022-07-08 06:16:19.692051: validation loss: -0.7756
2022-07-08 06:16:19.714724: Average global foreground Dice: [0.8142]
2022-07-08 06:16:19.731308: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:16:20.268363: Suus1 maybe_update_lr lr: 0.000866
2022-07-08 06:16:20.270710: This epoch took 72.402442 s

2022-07-08 06:16:20.272884: 
epoch:  467
2022-07-08 06:17:27.533563: train loss : -0.8837
2022-07-08 06:17:32.018657: validation loss: -0.7816
2022-07-08 06:17:32.051275: Average global foreground Dice: [0.8115]
2022-07-08 06:17:32.082286: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:17:32.646508: Suus1 maybe_update_lr lr: 0.000842
2022-07-08 06:17:32.648853: This epoch took 72.373741 s

2022-07-08 06:17:32.651897: 
epoch:  468
2022-07-08 06:18:39.930061: train loss : -0.8873
2022-07-08 06:18:44.424398: validation loss: -0.7707
2022-07-08 06:18:44.450929: Average global foreground Dice: [0.8146]
2022-07-08 06:18:44.481385: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:18:45.090341: Suus1 maybe_update_lr lr: 0.000819
2022-07-08 06:18:45.092928: This epoch took 72.438931 s

2022-07-08 06:18:45.121262: 
epoch:  469
2022-07-08 06:19:52.393694: train loss : -0.8870
2022-07-08 06:19:56.848345: validation loss: -0.7982
2022-07-08 06:19:56.850772: Average global foreground Dice: [0.8259]
2022-07-08 06:19:56.853235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:19:57.462478: Suus1 maybe_update_lr lr: 0.000795
2022-07-08 06:19:57.464976: This epoch took 72.322749 s

2022-07-08 06:19:57.467224: 
epoch:  470
2022-07-08 06:21:04.933252: train loss : -0.8835
2022-07-08 06:21:09.406595: validation loss: -0.7856
2022-07-08 06:21:09.440757: Average global foreground Dice: [0.8173]
2022-07-08 06:21:09.473263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:21:10.079691: Suus1 maybe_update_lr lr: 0.000771
2022-07-08 06:21:10.082071: This epoch took 72.612036 s

2022-07-08 06:21:10.084257: 
epoch:  471
2022-07-08 06:22:17.497594: train loss : -0.8825
2022-07-08 06:22:21.966007: validation loss: -0.7806
2022-07-08 06:22:22.008681: Average global foreground Dice: [0.8134]
2022-07-08 06:22:22.023890: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:22:22.507964: Suus1 maybe_update_lr lr: 0.000747
2022-07-08 06:22:22.525660: This epoch took 72.439008 s

2022-07-08 06:22:22.545970: 
epoch:  472
2022-07-08 06:23:29.853007: train loss : -0.8857
2022-07-08 06:23:34.291247: validation loss: -0.7775
2022-07-08 06:23:34.303738: Average global foreground Dice: [0.8117]
2022-07-08 06:23:34.313001: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:23:34.998386: Suus1 maybe_update_lr lr: 0.000723
2022-07-08 06:23:35.000790: This epoch took 72.434727 s

2022-07-08 06:23:35.002864: 
epoch:  473
2022-07-08 06:24:42.322200: train loss : -0.8888
2022-07-08 06:24:46.791773: validation loss: -0.7917
2022-07-08 06:24:46.804386: Average global foreground Dice: [0.8204]
2022-07-08 06:24:46.817070: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:24:47.402483: Suus1 maybe_update_lr lr: 0.000699
2022-07-08 06:24:47.404866: This epoch took 72.400137 s

2022-07-08 06:24:47.407088: 
epoch:  474
2022-07-08 06:25:54.721286: train loss : -0.8852
2022-07-08 06:25:59.079197: validation loss: -0.7792
2022-07-08 06:25:59.092113: Average global foreground Dice: [0.8153]
2022-07-08 06:25:59.095881: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:25:59.588809: Suus1 maybe_update_lr lr: 0.000675
2022-07-08 06:25:59.591262: This epoch took 72.182210 s

2022-07-08 06:25:59.593275: 
epoch:  475
2022-07-08 06:27:06.884605: train loss : -0.8865
2022-07-08 06:27:11.341048: validation loss: -0.7806
2022-07-08 06:27:11.348272: Average global foreground Dice: [0.8231]
2022-07-08 06:27:11.350199: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:27:11.803880: Suus1 maybe_update_lr lr: 0.00065
2022-07-08 06:27:11.806167: This epoch took 72.210973 s

2022-07-08 06:27:11.808668: 
epoch:  476
2022-07-08 06:28:19.138128: train loss : -0.8881
2022-07-08 06:28:23.633904: validation loss: -0.7722
2022-07-08 06:28:23.636922: Average global foreground Dice: [0.8098]
2022-07-08 06:28:23.639123: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:28:24.088801: Suus1 maybe_update_lr lr: 0.000626
2022-07-08 06:28:24.093109: This epoch took 72.282534 s

2022-07-08 06:28:24.095269: 
epoch:  477
2022-07-08 06:29:31.417866: train loss : -0.8884
2022-07-08 06:29:35.823454: validation loss: -0.8040
2022-07-08 06:29:35.832513: Average global foreground Dice: [0.8336]
2022-07-08 06:29:35.869520: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:29:36.376204: Suus1 maybe_update_lr lr: 0.000601
2022-07-08 06:29:36.378862: This epoch took 72.281537 s

2022-07-08 06:29:36.380924: 
epoch:  478
2022-07-08 06:30:43.661529: train loss : -0.8900
2022-07-08 06:30:48.005436: validation loss: -0.8078
2022-07-08 06:30:48.047612: Average global foreground Dice: [0.8355]
2022-07-08 06:30:48.054801: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:30:48.612939: Suus1 maybe_update_lr lr: 0.000577
2022-07-08 06:30:48.615342: This epoch took 72.232532 s

2022-07-08 06:30:48.617634: 
epoch:  479
2022-07-08 06:31:55.986475: train loss : -0.8893
2022-07-08 06:32:00.435868: validation loss: -0.7730
2022-07-08 06:32:00.443438: Average global foreground Dice: [0.8137]
2022-07-08 06:32:00.447956: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:32:00.952807: Suus1 maybe_update_lr lr: 0.000552
2022-07-08 06:32:00.955003: This epoch took 72.335243 s

2022-07-08 06:32:00.957101: 
epoch:  480
2022-07-08 06:33:08.375560: train loss : -0.8898
2022-07-08 06:33:12.889162: validation loss: -0.7865
2022-07-08 06:33:12.893542: Average global foreground Dice: [0.818]
2022-07-08 06:33:12.895823: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:33:13.530059: Suus1 maybe_update_lr lr: 0.000527
2022-07-08 06:33:13.532418: This epoch took 72.573331 s

2022-07-08 06:33:13.534461: 
epoch:  481
2022-07-08 06:34:20.840186: train loss : -0.8852
2022-07-08 06:34:25.429862: validation loss: -0.7825
2022-07-08 06:34:25.450686: Average global foreground Dice: [0.8217]
2022-07-08 06:34:25.461546: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:34:25.971164: Suus1 maybe_update_lr lr: 0.000502
2022-07-08 06:34:25.988653: This epoch took 72.452146 s

2022-07-08 06:34:26.000854: 
epoch:  482
2022-07-08 06:35:33.395911: train loss : -0.8803
2022-07-08 06:35:37.759162: validation loss: -0.7997
2022-07-08 06:35:37.763051: Average global foreground Dice: [0.8316]
2022-07-08 06:35:37.765248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:35:38.268843: Suus1 maybe_update_lr lr: 0.000477
2022-07-08 06:35:38.271507: This epoch took 72.268554 s

2022-07-08 06:35:38.273603: 
epoch:  483
2022-07-08 06:36:45.612424: train loss : -0.8901
2022-07-08 06:36:50.107080: validation loss: -0.8018
2022-07-08 06:36:50.115152: Average global foreground Dice: [0.8341]
2022-07-08 06:36:50.123104: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:36:50.662703: Suus1 maybe_update_lr lr: 0.000451
2022-07-08 06:36:50.664912: saving best epoch checkpoint...
2022-07-08 06:36:50.716089: saving checkpoint...
2022-07-08 06:36:51.707767: done, saving took 1.04 seconds
2022-07-08 06:36:51.723419: This epoch took 73.447830 s

2022-07-08 06:36:51.725569: 
epoch:  484
2022-07-08 06:37:59.195598: train loss : -0.8903
2022-07-08 06:38:03.601797: validation loss: -0.8022
2022-07-08 06:38:03.617408: Average global foreground Dice: [0.837]
2022-07-08 06:38:03.626081: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:38:04.250772: Suus1 maybe_update_lr lr: 0.000426
2022-07-08 06:38:04.253278: saving best epoch checkpoint...
2022-07-08 06:38:04.300884: saving checkpoint...
2022-07-08 06:38:05.288327: done, saving took 1.03 seconds
2022-07-08 06:38:05.305114: This epoch took 73.577358 s

2022-07-08 06:38:05.307515: 
epoch:  485
2022-07-08 06:39:12.613551: train loss : -0.8895
2022-07-08 06:39:17.068785: validation loss: -0.7782
2022-07-08 06:39:17.099254: Average global foreground Dice: [0.8094]
2022-07-08 06:39:17.102125: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:39:17.597699: Suus1 maybe_update_lr lr: 0.0004
2022-07-08 06:39:17.599897: This epoch took 72.290037 s

2022-07-08 06:39:17.601944: 
epoch:  486
2022-07-08 06:40:24.950170: train loss : -0.8894
2022-07-08 06:40:29.491819: validation loss: -0.7892
2022-07-08 06:40:29.506728: Average global foreground Dice: [0.8187]
2022-07-08 06:40:29.519654: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:40:30.082888: Suus1 maybe_update_lr lr: 0.000375
2022-07-08 06:40:30.085634: This epoch took 72.481638 s

2022-07-08 06:40:30.088038: 
epoch:  487
2022-07-08 06:41:37.384539: train loss : -0.8840
2022-07-08 06:41:41.803901: validation loss: -0.7710
2022-07-08 06:41:41.811055: Average global foreground Dice: [0.8083]
2022-07-08 06:41:41.820249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:41:42.322451: Suus1 maybe_update_lr lr: 0.000348
2022-07-08 06:41:42.324887: This epoch took 72.234735 s

2022-07-08 06:41:42.326982: 
epoch:  488
2022-07-08 06:42:49.756358: train loss : -0.8880
2022-07-08 06:42:54.340651: validation loss: -0.7990
2022-07-08 06:42:54.348754: Average global foreground Dice: [0.8279]
2022-07-08 06:42:54.354233: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:42:54.813306: Suus1 maybe_update_lr lr: 0.000322
2022-07-08 06:42:54.832322: This epoch took 72.503292 s

2022-07-08 06:42:54.834641: 
epoch:  489
2022-07-08 06:44:02.154278: train loss : -0.8886
2022-07-08 06:44:06.568396: validation loss: -0.7788
2022-07-08 06:44:06.572850: Average global foreground Dice: [0.8177]
2022-07-08 06:44:06.574961: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:44:07.041450: Suus1 maybe_update_lr lr: 0.000296
2022-07-08 06:44:07.060305: This epoch took 72.223334 s

2022-07-08 06:44:07.082252: 
epoch:  490
2022-07-08 06:45:14.478309: train loss : -0.8851
2022-07-08 06:45:18.922385: validation loss: -0.7958
2022-07-08 06:45:18.925740: Average global foreground Dice: [0.8267]
2022-07-08 06:45:18.934022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:45:19.410477: Suus1 maybe_update_lr lr: 0.000269
2022-07-08 06:45:19.413289: This epoch took 72.328662 s

2022-07-08 06:45:19.415481: 
epoch:  491
2022-07-08 06:46:26.809667: train loss : -0.8895
2022-07-08 06:46:31.191500: validation loss: -0.7962
2022-07-08 06:46:31.197305: Average global foreground Dice: [0.8233]
2022-07-08 06:46:31.213622: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:46:31.792569: Suus1 maybe_update_lr lr: 0.000242
2022-07-08 06:46:31.794864: This epoch took 72.377333 s

2022-07-08 06:46:31.796975: 
epoch:  492
2022-07-08 06:47:39.143735: train loss : -0.8915
2022-07-08 06:47:43.538509: validation loss: -0.8000
2022-07-08 06:47:43.543040: Average global foreground Dice: [0.829]
2022-07-08 06:47:43.545529: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:47:44.001882: Suus1 maybe_update_lr lr: 0.000215
2022-07-08 06:47:44.004364: This epoch took 72.205247 s

2022-07-08 06:47:44.006439: 
epoch:  493
2022-07-08 06:48:51.394294: train loss : -0.8900
2022-07-08 06:48:55.789085: validation loss: -0.7918
2022-07-08 06:48:55.799244: Average global foreground Dice: [0.824]
2022-07-08 06:48:55.801586: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:48:56.345280: Suus1 maybe_update_lr lr: 0.000187
2022-07-08 06:48:56.347719: This epoch took 72.339206 s

2022-07-08 06:48:56.349755: 
epoch:  494
2022-07-08 06:50:03.749150: train loss : -0.8937
2022-07-08 06:50:08.176213: validation loss: -0.7924
2022-07-08 06:50:08.204796: Average global foreground Dice: [0.8238]
2022-07-08 06:50:08.227274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:50:08.730550: Suus1 maybe_update_lr lr: 0.000158
2022-07-08 06:50:08.733063: This epoch took 72.381227 s

2022-07-08 06:50:08.735122: 
epoch:  495
2022-07-08 06:51:16.187278: train loss : -0.8900
2022-07-08 06:51:20.681072: validation loss: -0.7981
2022-07-08 06:51:20.696229: Average global foreground Dice: [0.8261]
2022-07-08 06:51:20.701649: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:51:21.252748: Suus1 maybe_update_lr lr: 0.00013
2022-07-08 06:51:21.255347: This epoch took 72.518213 s

2022-07-08 06:51:21.257271: 
epoch:  496
2022-07-08 06:52:28.619334: train loss : -0.8892
2022-07-08 06:52:33.046584: validation loss: -0.7977
2022-07-08 06:52:33.082583: Average global foreground Dice: [0.8345]
2022-07-08 06:52:33.096503: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:52:33.684317: Suus1 maybe_update_lr lr: 0.0001
2022-07-08 06:52:33.687065: saving best epoch checkpoint...
2022-07-08 06:52:33.739656: saving checkpoint...
2022-07-08 06:52:34.720393: done, saving took 1.03 seconds
2022-07-08 06:52:34.736479: This epoch took 73.477166 s

2022-07-08 06:52:34.738559: 
epoch:  497
2022-07-08 06:53:42.030357: train loss : -0.8898
2022-07-08 06:53:46.628110: validation loss: -0.7878
2022-07-08 06:53:46.630719: Average global foreground Dice: [0.8241]
2022-07-08 06:53:46.633052: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:53:47.094666: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-08 06:53:47.120640: This epoch took 72.379970 s

2022-07-08 06:53:47.148263: 
epoch:  498
2022-07-08 06:54:54.532396: train loss : -0.8927
2022-07-08 06:54:58.926302: validation loss: -0.8066
2022-07-08 06:54:58.943111: Average global foreground Dice: [0.8382]
2022-07-08 06:54:58.945375: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:54:59.550056: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-08 06:54:59.552578: saving best epoch checkpoint...
2022-07-08 06:54:59.600103: saving checkpoint...
2022-07-08 06:55:00.611932: done, saving took 1.06 seconds
2022-07-08 06:55:00.627149: This epoch took 73.456904 s

2022-07-08 06:55:00.629291: 
epoch:  499
2022-07-08 06:56:07.981127: train loss : -0.8916
2022-07-08 06:56:12.592302: validation loss: -0.8091
2022-07-08 06:56:12.607095: Average global foreground Dice: [0.8398]
2022-07-08 06:56:12.619331: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 06:56:13.245672: Suus1 maybe_update_lr lr: 0.0
2022-07-08 06:56:13.247831: saving scheduled checkpoint file...
2022-07-08 06:56:13.299431: saving checkpoint...
2022-07-08 06:56:14.186620: done, saving took 0.94 seconds
2022-07-08 06:56:14.203169: done
2022-07-08 06:56:14.205418: saving best epoch checkpoint...
2022-07-08 06:56:14.249652: saving checkpoint...
2022-07-08 06:56:15.236684: done, saving took 1.03 seconds
2022-07-08 06:56:15.251899: This epoch took 74.620228 s

2022-07-08 06:56:15.296167: saving checkpoint...
2022-07-08 06:56:16.319599: done, saving took 1.07 seconds
panc_005 (2, 104, 585, 585)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 585, 585)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 90, 180, 271, 361], [0, 90, 180, 271, 361]]
number of tiles: 125
computing Gaussian
done
prediction done
suus panc_005 transposed
suus panc_005 not saving softmax
suus panc_005 voeg toe aan pred_gt tuples voor later
panc_015 (2, 87, 467, 467)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_015 transposed
suus panc_015 not saving softmax
suus panc_015 voeg toe aan pred_gt tuples voor later
panc_021 (2, 93, 551, 551)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_021 transposed
suus panc_021 not saving softmax
suus panc_021 voeg toe aan pred_gt tuples voor later
panc_032 (2, 89, 589, 589)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 589, 589)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 91, 182, 274, 365], [0, 91, 182, 274, 365]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_032 transposed
suus panc_032 not saving softmax
suus panc_032 voeg toe aan pred_gt tuples voor later
panc_037 (2, 71, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
suus panc_037 transposed
suus panc_037 not saving softmax
suus panc_037 voeg toe aan pred_gt tuples voor later
panc_043 (2, 78, 476, 476)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 476, 476)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38], [0, 84, 168, 252], [0, 84, 168, 252]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_043 transposed
suus panc_043 not saving softmax
suus panc_043 voeg toe aan pred_gt tuples voor later
panc_055 (2, 96, 523, 523)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_055 transposed
suus panc_055 not saving softmax
suus panc_055 voeg toe aan pred_gt tuples voor later
panc_061 (2, 93, 561, 561)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_061 transposed
suus panc_061 not saving softmax
suus panc_061 voeg toe aan pred_gt tuples voor later
panc_084 (2, 82, 465, 465)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_084 transposed
suus panc_084 not saving softmax
suus panc_084 voeg toe aan pred_gt tuples voor later
panc_094 (2, 84, 461, 461)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_094 transposed
suus panc_094 not saving softmax
suus panc_094 voeg toe aan pred_gt tuples voor later
panc_096 (2, 108, 590, 590)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51, 68], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_096 transposed
suus panc_096 not saving softmax
suus panc_096 voeg toe aan pred_gt tuples voor later
panc_102 (2, 92, 506, 506)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 506, 506)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 188, 282], [0, 94, 188, 282]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_102 transposed
suus panc_102 not saving softmax
suus panc_102 voeg toe aan pred_gt tuples voor later
panc_124 (2, 82, 607, 607)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_124 transposed
suus panc_124 not saving softmax
suus panc_124 voeg toe aan pred_gt tuples voor later
panc_138 (2, 95, 598, 598)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_138 transposed
suus panc_138 not saving softmax
suus panc_138 voeg toe aan pred_gt tuples voor later
panc_167 (2, 101, 485, 485)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 485, 485)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 87, 174, 261], [0, 87, 174, 261]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_167 transposed
suus panc_167 not saving softmax
suus panc_167 voeg toe aan pred_gt tuples voor later
panc_175 (2, 91, 496, 496)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_175 transposed
suus panc_175 not saving softmax
suus panc_175 voeg toe aan pred_gt tuples voor later
panc_179 (2, 89, 501, 501)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 501, 501)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 92, 185, 277], [0, 92, 185, 277]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_179 transposed
suus panc_179 not saving softmax
suus panc_179 voeg toe aan pred_gt tuples voor later
panc_183 (2, 76, 524, 524)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_183 transposed
suus panc_183 not saving softmax
suus panc_183 voeg toe aan pred_gt tuples voor later
panc_196 (2, 92, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_196 transposed
suus panc_196 not saving softmax
suus panc_196 voeg toe aan pred_gt tuples voor later
panc_198 (2, 111, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_198 transposed
suus panc_198 not saving softmax
suus panc_198 voeg toe aan pred_gt tuples voor later
panc_203 (2, 106, 486, 486)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_203 transposed
suus panc_203 not saving softmax
suus panc_203 voeg toe aan pred_gt tuples voor later
panc_222 (2, 77, 386, 386)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 386, 386)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 81, 162], [0, 81, 162]]
number of tiles: 27
using precomputed Gaussian
prediction done
suus panc_222 transposed
suus panc_222 not saving softmax
suus panc_222 voeg toe aan pred_gt tuples voor later
panc_230 (2, 96, 497, 497)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_230 transposed
suus panc_230 not saving softmax
suus panc_230 voeg toe aan pred_gt tuples voor later
panc_231 (2, 93, 505, 505)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_231 transposed
suus panc_231 not saving softmax
suus panc_231 voeg toe aan pred_gt tuples voor later
panc_239 (2, 92, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_239 transposed
suus panc_239 not saving softmax
suus panc_239 voeg toe aan pred_gt tuples voor later
panc_244 (2, 103, 579, 579)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 579, 579)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 89, 178, 266, 355], [0, 89, 178, 266, 355]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_244 transposed
suus panc_244 not saving softmax
suus panc_244 voeg toe aan pred_gt tuples voor later
panc_247 (2, 89, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_247 transposed
suus panc_247 not saving softmax
suus panc_247 voeg toe aan pred_gt tuples voor later
panc_254 (2, 101, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_254 transposed
suus panc_254 not saving softmax
suus panc_254 voeg toe aan pred_gt tuples voor later
panc_267 (2, 89, 434, 434)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 434, 434)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 105, 210], [0, 105, 210]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_267 transposed
suus panc_267 not saving softmax
suus panc_267 voeg toe aan pred_gt tuples voor later
panc_270 (2, 87, 511, 511)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_270 transposed
suus panc_270 not saving softmax
suus panc_270 voeg toe aan pred_gt tuples voor later
panc_274 (2, 115, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 115, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 56, 75], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
suus panc_274 transposed
suus panc_274 not saving softmax
suus panc_274 voeg toe aan pred_gt tuples voor later
panc_277 (2, 109, 607, 607)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_277 transposed
suus panc_277 not saving softmax
suus panc_277 voeg toe aan pred_gt tuples voor later
panc_278 (2, 100, 562, 562)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 562, 562)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 84, 169, 254, 338], [0, 84, 169, 254, 338]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_278 transposed
suus panc_278 not saving softmax
suus panc_278 voeg toe aan pred_gt tuples voor later
panc_289 (2, 96, 439, 439)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 439, 439)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 108, 215], [0, 108, 215]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_289 transposed
suus panc_289 not saving softmax
suus panc_289 voeg toe aan pred_gt tuples voor later
panc_290 (2, 97, 584, 584)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_290 transposed
suus panc_290 not saving softmax
suus panc_290 voeg toe aan pred_gt tuples voor later
panc_291 (2, 97, 584, 584)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_291 transposed
suus panc_291 not saving softmax
suus panc_291 voeg toe aan pred_gt tuples voor later
panc_297 (2, 101, 576, 576)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 576, 576)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 88, 176, 264, 352], [0, 88, 176, 264, 352]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_297 transposed
suus panc_297 not saving softmax
suus panc_297 voeg toe aan pred_gt tuples voor later
panc_299 (2, 83, 436, 436)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 106, 212], [0, 106, 212]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_299 transposed
suus panc_299 not saving softmax
suus panc_299 voeg toe aan pred_gt tuples voor later
panc_303 (2, 113, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_303 transposed
suus panc_303 not saving softmax
suus panc_303 voeg toe aan pred_gt tuples voor later
panc_320 (2, 91, 473, 473)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_320 transposed
suus panc_320 not saving softmax
suus panc_320 voeg toe aan pred_gt tuples voor later
panc_328 (2, 95, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_328 transposed
suus panc_328 not saving softmax
suus panc_328 voeg toe aan pred_gt tuples voor later
panc_331 (2, 101, 510, 510)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_331 transposed
suus panc_331 not saving softmax
suus panc_331 voeg toe aan pred_gt tuples voor later
panc_339 (2, 105, 592, 592)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_339 transposed
suus panc_339 not saving softmax
suus panc_339 voeg toe aan pred_gt tuples voor later
panc_344 (2, 112, 492, 492)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 492, 492)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 89, 179, 268], [0, 89, 179, 268]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_344 transposed
suus panc_344 not saving softmax
suus panc_344 voeg toe aan pred_gt tuples voor later
panc_355 (2, 172, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 172, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 75, 94, 113, 132], [0, 112, 224], [0, 112, 224]]
number of tiles: 72
using precomputed Gaussian
prediction done
suus panc_355 transposed
suus panc_355 not saving softmax
suus panc_355 voeg toe aan pred_gt tuples voor later
panc_387 (2, 100, 498, 498)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_387 transposed
suus panc_387 not saving softmax
suus panc_387 voeg toe aan pred_gt tuples voor later
panc_392 (2, 114, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
suus panc_392 transposed
suus panc_392 not saving softmax
suus panc_392 voeg toe aan pred_gt tuples voor later
panc_395 (2, 170, 496, 496)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 170, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56, 74, 93, 111, 130], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 128
using precomputed Gaussian
prediction done
suus panc_395 transposed
suus panc_395 not saving softmax
suus panc_395 voeg toe aan pred_gt tuples voor later
2022-07-08 07:18:40.043561: finished prediction
2022-07-08 07:18:40.047736: evaluation of raw predictions
2022-07-08 07:18:49.758976: determining postprocessing
Foreground vs background
before: 0.8296315632359018
after:  0.8296548276156323
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_005.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_084.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_179.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_239.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_278.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_328.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_015.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_094.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_183.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_244.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_289.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_331.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_021.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_096.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_196.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_247.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_290.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_339.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_032.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_102.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_198.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_254.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_291.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_344.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_037.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_124.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_203.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_267.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_297.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_355.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_043.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_138.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_222.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_270.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_299.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_387.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_055.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_167.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_230.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_274.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_303.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_392.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_061.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_175.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_231.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_277.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_320.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/validation_raw/panc_395.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='3', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-08 07:19:21.530801: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-08 07:19:23.569943: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-08 07:19:23.581402: The split file contains 5 splits.
2022-07-08 07:19:23.583600: Desired fold for training: 3
2022-07-08 07:19:23.585950: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-08 07:19:25.504463: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-08 07:19:41.607220: Unable to plot network architecture:
2022-07-08 07:19:41.610886: local variable 'g' referenced before assignment
2022-07-08 07:19:41.613016: 
printing the network instead:

2022-07-08 07:19:41.615090: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-08 07:19:41.618854: 

2022-07-08 07:19:41.621047: 
epoch:  0
2022-07-08 07:21:00.290599: train loss : -0.0264
2022-07-08 07:21:15.202703: validation loss: -0.1508
2022-07-08 07:21:15.205906: Average global foreground Dice: [0.3063]
2022-07-08 07:21:15.208137: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:21:15.587802: Suus1 maybe_update_lr lr: 0.009982
2022-07-08 07:21:15.591003: This epoch took 93.967731 s

2022-07-08 07:21:15.593486: 
epoch:  1
2022-07-08 07:22:22.806862: train loss : -0.1752
2022-07-08 07:22:29.034351: validation loss: -0.1655
2022-07-08 07:22:29.037524: Average global foreground Dice: [0.2974]
2022-07-08 07:22:29.039762: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:22:29.459723: Suus1 maybe_update_lr lr: 0.009964
2022-07-08 07:22:29.463777: This epoch took 73.868101 s

2022-07-08 07:22:29.466954: 
epoch:  2
2022-07-08 07:23:36.789897: train loss : -0.2662
2022-07-08 07:23:43.685853: validation loss: -0.2975
2022-07-08 07:23:43.688683: Average global foreground Dice: [0.4267]
2022-07-08 07:23:43.690563: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:23:44.093791: Suus1 maybe_update_lr lr: 0.009946
2022-07-08 07:23:44.096172: saving best epoch checkpoint...
2022-07-08 07:23:44.149643: saving checkpoint...
2022-07-08 07:23:45.161272: done, saving took 1.06 seconds
2022-07-08 07:23:45.181147: This epoch took 75.708656 s

2022-07-08 07:23:45.184053: 
epoch:  3
2022-07-08 07:24:52.499542: train loss : -0.3093
2022-07-08 07:24:58.670034: validation loss: -0.3073
2022-07-08 07:24:58.675914: Average global foreground Dice: [0.421]
2022-07-08 07:24:58.677891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:24:59.084769: Suus1 maybe_update_lr lr: 0.009928
2022-07-08 07:24:59.087032: saving best epoch checkpoint...
2022-07-08 07:24:59.140132: saving checkpoint...
2022-07-08 07:25:00.051463: done, saving took 0.96 seconds
2022-07-08 07:25:00.065917: This epoch took 74.879358 s

2022-07-08 07:25:00.068261: 
epoch:  4
2022-07-08 07:26:07.318169: train loss : -0.3534
2022-07-08 07:26:14.088046: validation loss: -0.3514
2022-07-08 07:26:14.091471: Average global foreground Dice: [0.4585]
2022-07-08 07:26:14.093705: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:26:14.584080: Suus1 maybe_update_lr lr: 0.00991
2022-07-08 07:26:14.586819: saving best epoch checkpoint...
2022-07-08 07:26:14.622146: saving checkpoint...
2022-07-08 07:26:15.682559: done, saving took 1.09 seconds
2022-07-08 07:26:15.720647: This epoch took 75.650122 s

2022-07-08 07:26:15.722708: 
epoch:  5
2022-07-08 07:27:22.968759: train loss : -0.4018
2022-07-08 07:27:29.805027: validation loss: -0.3788
2022-07-08 07:27:29.807935: Average global foreground Dice: [0.4802]
2022-07-08 07:27:29.810102: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:27:30.244621: Suus1 maybe_update_lr lr: 0.009892
2022-07-08 07:27:30.247154: saving best epoch checkpoint...
2022-07-08 07:27:30.289344: saving checkpoint...
2022-07-08 07:27:31.304198: done, saving took 1.05 seconds
2022-07-08 07:27:31.319364: This epoch took 75.594402 s

2022-07-08 07:27:31.321503: 
epoch:  6
2022-07-08 07:28:38.393932: train loss : -0.4083
2022-07-08 07:28:45.435117: validation loss: -0.3889
2022-07-08 07:28:45.437756: Average global foreground Dice: [0.4849]
2022-07-08 07:28:45.439817: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:28:45.829390: Suus1 maybe_update_lr lr: 0.009874
2022-07-08 07:28:45.832026: saving best epoch checkpoint...
2022-07-08 07:28:45.882693: saving checkpoint...
2022-07-08 07:28:46.962955: done, saving took 1.13 seconds
2022-07-08 07:28:46.979411: This epoch took 75.655836 s

2022-07-08 07:28:46.981450: 
epoch:  7
2022-07-08 07:29:54.196047: train loss : -0.4778
2022-07-08 07:29:59.279281: validation loss: -0.4278
2022-07-08 07:29:59.282903: Average global foreground Dice: [0.5212]
2022-07-08 07:29:59.285228: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:29:59.693593: Suus1 maybe_update_lr lr: 0.009856
2022-07-08 07:29:59.695585: saving best epoch checkpoint...
2022-07-08 07:29:59.746933: saving checkpoint...
2022-07-08 07:30:00.723134: done, saving took 1.03 seconds
2022-07-08 07:30:00.739887: This epoch took 73.756212 s

2022-07-08 07:30:00.742287: 
epoch:  8
2022-07-08 07:31:08.087470: train loss : -0.4902
2022-07-08 07:31:12.686381: validation loss: -0.4200
2022-07-08 07:31:12.689569: Average global foreground Dice: [0.5162]
2022-07-08 07:31:12.693774: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:31:13.119619: Suus1 maybe_update_lr lr: 0.009838
2022-07-08 07:31:13.121708: saving best epoch checkpoint...
2022-07-08 07:31:13.174525: saving checkpoint...
2022-07-08 07:31:14.199944: done, saving took 1.08 seconds
2022-07-08 07:31:14.216782: This epoch took 73.472198 s

2022-07-08 07:31:14.218926: 
epoch:  9
2022-07-08 07:32:21.487800: train loss : -0.4673
2022-07-08 07:32:27.089195: validation loss: -0.4241
2022-07-08 07:32:27.096601: Average global foreground Dice: [0.527]
2022-07-08 07:32:27.098863: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:32:27.557157: Suus1 maybe_update_lr lr: 0.00982
2022-07-08 07:32:27.559718: saving best epoch checkpoint...
2022-07-08 07:32:27.608301: saving checkpoint...
2022-07-08 07:32:28.545206: done, saving took 0.98 seconds
2022-07-08 07:32:28.561170: This epoch took 74.340203 s

2022-07-08 07:32:28.563975: 
epoch:  10
2022-07-08 07:33:36.026830: train loss : -0.4921
2022-07-08 07:33:40.545062: validation loss: -0.4306
2022-07-08 07:33:40.548009: Average global foreground Dice: [0.5319]
2022-07-08 07:33:40.550182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:33:40.981683: Suus1 maybe_update_lr lr: 0.009802
2022-07-08 07:33:40.985952: saving best epoch checkpoint...
2022-07-08 07:33:41.044765: saving checkpoint...
2022-07-08 07:33:42.030388: done, saving took 1.04 seconds
2022-07-08 07:33:42.046497: This epoch took 73.478916 s

2022-07-08 07:33:42.048557: 
epoch:  11
2022-07-08 07:34:49.379463: train loss : -0.5110
2022-07-08 07:34:53.827479: validation loss: -0.4964
2022-07-08 07:34:53.830925: Average global foreground Dice: [0.5791]
2022-07-08 07:34:53.833416: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:34:54.228605: Suus1 maybe_update_lr lr: 0.009784
2022-07-08 07:34:54.230961: saving best epoch checkpoint...
2022-07-08 07:34:54.277316: saving checkpoint...
2022-07-08 07:34:55.233938: done, saving took 1.00 seconds
2022-07-08 07:34:55.249963: This epoch took 73.199363 s

2022-07-08 07:34:55.256249: 
epoch:  12
2022-07-08 07:36:02.464010: train loss : -0.5064
2022-07-08 07:36:07.393489: validation loss: -0.4876
2022-07-08 07:36:07.397726: Average global foreground Dice: [0.5866]
2022-07-08 07:36:07.401812: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:36:07.806515: Suus1 maybe_update_lr lr: 0.009766
2022-07-08 07:36:07.808986: saving best epoch checkpoint...
2022-07-08 07:36:07.856616: saving checkpoint...
2022-07-08 07:36:09.000370: done, saving took 1.19 seconds
2022-07-08 07:36:09.017639: This epoch took 73.759108 s

2022-07-08 07:36:09.019813: 
epoch:  13
2022-07-08 07:37:16.337511: train loss : -0.5246
2022-07-08 07:37:21.349310: validation loss: -0.5166
2022-07-08 07:37:21.352502: Average global foreground Dice: [0.6116]
2022-07-08 07:37:21.354826: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:37:21.742991: Suus1 maybe_update_lr lr: 0.009748
2022-07-08 07:37:21.745298: saving best epoch checkpoint...
2022-07-08 07:37:21.792319: saving checkpoint...
2022-07-08 07:37:22.794243: done, saving took 1.05 seconds
2022-07-08 07:37:22.810091: This epoch took 73.788194 s

2022-07-08 07:37:22.812386: 
epoch:  14
2022-07-08 07:38:29.888472: train loss : -0.5635
2022-07-08 07:38:34.306329: validation loss: -0.5211
2022-07-08 07:38:34.309586: Average global foreground Dice: [0.6043]
2022-07-08 07:38:34.312007: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:38:34.850849: Suus1 maybe_update_lr lr: 0.00973
2022-07-08 07:38:34.853346: saving best epoch checkpoint...
2022-07-08 07:38:34.909479: saving checkpoint...
2022-07-08 07:38:35.974895: done, saving took 1.12 seconds
2022-07-08 07:38:35.989887: This epoch took 73.175546 s

2022-07-08 07:38:35.992168: 
epoch:  15
2022-07-08 07:39:43.194807: train loss : -0.5473
2022-07-08 07:39:47.624501: validation loss: -0.4820
2022-07-08 07:39:47.627371: Average global foreground Dice: [0.5866]
2022-07-08 07:39:47.629876: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:39:48.090777: Suus1 maybe_update_lr lr: 0.009712
2022-07-08 07:39:48.093133: saving best epoch checkpoint...
2022-07-08 07:39:48.148545: saving checkpoint...
2022-07-08 07:39:49.207087: done, saving took 1.11 seconds
2022-07-08 07:39:49.224226: This epoch took 73.230026 s

2022-07-08 07:39:49.226999: 
epoch:  16
2022-07-08 07:40:56.588006: train loss : -0.5726
2022-07-08 07:41:01.138919: validation loss: -0.5228
2022-07-08 07:41:01.145572: Average global foreground Dice: [0.6097]
2022-07-08 07:41:01.147950: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:41:01.571508: Suus1 maybe_update_lr lr: 0.009693
2022-07-08 07:41:01.582985: saving best epoch checkpoint...
2022-07-08 07:41:01.628695: saving checkpoint...
2022-07-08 07:41:02.765384: done, saving took 1.18 seconds
2022-07-08 07:41:02.780688: This epoch took 73.551267 s

2022-07-08 07:41:02.782817: 
epoch:  17
2022-07-08 07:42:09.977819: train loss : -0.5782
2022-07-08 07:42:16.143158: validation loss: -0.5196
2022-07-08 07:42:16.147888: Average global foreground Dice: [0.605]
2022-07-08 07:42:16.154916: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:42:16.620602: Suus1 maybe_update_lr lr: 0.009675
2022-07-08 07:42:16.636839: saving best epoch checkpoint...
2022-07-08 07:42:16.718314: saving checkpoint...
2022-07-08 07:42:17.690058: done, saving took 1.03 seconds
2022-07-08 07:42:17.704567: This epoch took 74.919727 s

2022-07-08 07:42:17.706585: 
epoch:  18
2022-07-08 07:43:24.885046: train loss : -0.5864
2022-07-08 07:43:29.309224: validation loss: -0.5717
2022-07-08 07:43:29.312603: Average global foreground Dice: [0.6613]
2022-07-08 07:43:29.315172: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:43:29.750446: Suus1 maybe_update_lr lr: 0.009657
2022-07-08 07:43:29.754261: saving best epoch checkpoint...
2022-07-08 07:43:29.800128: saving checkpoint...
2022-07-08 07:43:30.900434: done, saving took 1.14 seconds
2022-07-08 07:43:30.916248: This epoch took 73.207641 s

2022-07-08 07:43:30.918555: 
epoch:  19
2022-07-08 07:44:38.226239: train loss : -0.6011
2022-07-08 07:44:42.612890: validation loss: -0.5419
2022-07-08 07:44:42.616210: Average global foreground Dice: [0.6131]
2022-07-08 07:44:42.618634: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:44:43.035011: Suus1 maybe_update_lr lr: 0.009639
2022-07-08 07:44:43.037200: saving best epoch checkpoint...
2022-07-08 07:44:43.079235: saving checkpoint...
2022-07-08 07:44:44.034600: done, saving took 1.00 seconds
2022-07-08 07:44:44.049981: This epoch took 73.129257 s

2022-07-08 07:44:44.052137: 
epoch:  20
2022-07-08 07:45:51.234685: train loss : -0.6081
2022-07-08 07:45:56.722150: validation loss: -0.5655
2022-07-08 07:45:56.725344: Average global foreground Dice: [0.6398]
2022-07-08 07:45:56.727377: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:45:57.310574: Suus1 maybe_update_lr lr: 0.009621
2022-07-08 07:45:57.313070: saving best epoch checkpoint...
2022-07-08 07:45:57.346848: saving checkpoint...
2022-07-08 07:45:58.371713: done, saving took 1.06 seconds
2022-07-08 07:45:58.386533: This epoch took 74.332275 s

2022-07-08 07:45:58.388860: 
epoch:  21
2022-07-08 07:47:05.543950: train loss : -0.5931
2022-07-08 07:47:09.874909: validation loss: -0.5573
2022-07-08 07:47:09.878356: Average global foreground Dice: [0.6288]
2022-07-08 07:47:09.880615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:47:10.340506: Suus1 maybe_update_lr lr: 0.009603
2022-07-08 07:47:10.342807: saving best epoch checkpoint...
2022-07-08 07:47:10.376127: saving checkpoint...
2022-07-08 07:47:11.395514: done, saving took 1.05 seconds
2022-07-08 07:47:11.410173: This epoch took 73.019001 s

2022-07-08 07:47:11.412455: 
epoch:  22
2022-07-08 07:48:18.581462: train loss : -0.6170
2022-07-08 07:48:22.833767: validation loss: -0.5766
2022-07-08 07:48:22.836960: Average global foreground Dice: [0.6567]
2022-07-08 07:48:22.839260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:48:23.259359: Suus1 maybe_update_lr lr: 0.009585
2022-07-08 07:48:23.261502: saving best epoch checkpoint...
2022-07-08 07:48:23.293718: saving checkpoint...
2022-07-08 07:48:24.292775: done, saving took 1.03 seconds
2022-07-08 07:48:24.306506: This epoch took 72.892021 s

2022-07-08 07:48:24.308621: 
epoch:  23
2022-07-08 07:49:31.485305: train loss : -0.6137
2022-07-08 07:49:35.773415: validation loss: -0.6064
2022-07-08 07:49:35.776349: Average global foreground Dice: [0.6709]
2022-07-08 07:49:35.778794: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:49:36.211388: Suus1 maybe_update_lr lr: 0.009567
2022-07-08 07:49:36.214384: saving best epoch checkpoint...
2022-07-08 07:49:36.248117: saving checkpoint...
2022-07-08 07:49:37.202584: done, saving took 0.99 seconds
2022-07-08 07:49:37.216882: This epoch took 72.906209 s

2022-07-08 07:49:37.219168: 
epoch:  24
2022-07-08 07:50:44.458070: train loss : -0.6289
2022-07-08 07:50:48.856384: validation loss: -0.6082
2022-07-08 07:50:48.859403: Average global foreground Dice: [0.6652]
2022-07-08 07:50:48.862749: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:50:49.306306: Suus1 maybe_update_lr lr: 0.009549
2022-07-08 07:50:49.308676: saving best epoch checkpoint...
2022-07-08 07:50:49.341358: saving checkpoint...
2022-07-08 07:50:50.360150: done, saving took 1.05 seconds
2022-07-08 07:50:50.375652: This epoch took 73.154513 s

2022-07-08 07:50:50.378002: 
epoch:  25
2022-07-08 07:51:57.636263: train loss : -0.6389
2022-07-08 07:52:01.947249: validation loss: -0.6068
2022-07-08 07:52:01.950040: Average global foreground Dice: [0.6787]
2022-07-08 07:52:01.952878: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:52:02.491776: Suus1 maybe_update_lr lr: 0.009531
2022-07-08 07:52:02.493860: saving best epoch checkpoint...
2022-07-08 07:52:02.526306: saving checkpoint...
2022-07-08 07:52:03.482404: done, saving took 0.99 seconds
2022-07-08 07:52:03.497614: This epoch took 73.117479 s

2022-07-08 07:52:03.499838: 
epoch:  26
2022-07-08 07:53:10.771501: train loss : -0.6435
2022-07-08 07:53:15.097374: validation loss: -0.5771
2022-07-08 07:53:15.115508: Average global foreground Dice: [0.659]
2022-07-08 07:53:15.143298: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:53:15.587584: Suus1 maybe_update_lr lr: 0.009513
2022-07-08 07:53:15.589971: saving best epoch checkpoint...
2022-07-08 07:53:15.635814: saving checkpoint...
2022-07-08 07:53:16.640234: done, saving took 1.05 seconds
2022-07-08 07:53:16.655391: This epoch took 73.153564 s

2022-07-08 07:53:16.657509: 
epoch:  27
2022-07-08 07:54:23.963617: train loss : -0.6195
2022-07-08 07:54:28.232254: validation loss: -0.5881
2022-07-08 07:54:28.236475: Average global foreground Dice: [0.6567]
2022-07-08 07:54:28.238795: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:54:28.742312: Suus1 maybe_update_lr lr: 0.009495
2022-07-08 07:54:28.744708: saving best epoch checkpoint...
2022-07-08 07:54:28.789797: saving checkpoint...
2022-07-08 07:54:29.806790: done, saving took 1.06 seconds
2022-07-08 07:54:29.822189: This epoch took 73.162432 s

2022-07-08 07:54:29.824775: 
epoch:  28
2022-07-08 07:55:37.053293: train loss : -0.6328
2022-07-08 07:55:41.364713: validation loss: -0.6233
2022-07-08 07:55:41.368091: Average global foreground Dice: [0.6962]
2022-07-08 07:55:41.370801: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:55:41.977873: Suus1 maybe_update_lr lr: 0.009476
2022-07-08 07:55:41.980072: saving best epoch checkpoint...
2022-07-08 07:55:42.011462: saving checkpoint...
2022-07-08 07:55:42.977510: done, saving took 1.00 seconds
2022-07-08 07:55:42.992261: This epoch took 73.165043 s

2022-07-08 07:55:42.994486: 
epoch:  29
2022-07-08 07:56:50.268081: train loss : -0.6462
2022-07-08 07:56:54.899531: validation loss: -0.6333
2022-07-08 07:56:54.902892: Average global foreground Dice: [0.7046]
2022-07-08 07:56:54.905224: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:56:55.365768: Suus1 maybe_update_lr lr: 0.009458
2022-07-08 07:56:55.368088: saving best epoch checkpoint...
2022-07-08 07:56:55.400977: saving checkpoint...
2022-07-08 07:56:56.440036: done, saving took 1.07 seconds
2022-07-08 07:56:56.454981: This epoch took 73.458156 s

2022-07-08 07:56:56.457407: 
epoch:  30
2022-07-08 07:58:03.656298: train loss : -0.6612
2022-07-08 07:58:08.158888: validation loss: -0.6366
2022-07-08 07:58:08.162104: Average global foreground Dice: [0.7054]
2022-07-08 07:58:08.164613: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:58:08.574243: Suus1 maybe_update_lr lr: 0.00944
2022-07-08 07:58:08.576732: saving best epoch checkpoint...
2022-07-08 07:58:08.611183: saving checkpoint...
2022-07-08 07:58:09.628249: done, saving took 1.05 seconds
2022-07-08 07:58:09.642239: This epoch took 73.182785 s

2022-07-08 07:58:09.644339: 
epoch:  31
2022-07-08 07:59:16.812857: train loss : -0.6769
2022-07-08 07:59:21.168884: validation loss: -0.6055
2022-07-08 07:59:21.178560: Average global foreground Dice: [0.6759]
2022-07-08 07:59:21.184882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 07:59:21.620855: Suus1 maybe_update_lr lr: 0.009422
2022-07-08 07:59:21.623430: saving best epoch checkpoint...
2022-07-08 07:59:21.657814: saving checkpoint...
2022-07-08 07:59:22.639987: done, saving took 1.01 seconds
2022-07-08 07:59:22.654223: This epoch took 73.007826 s

2022-07-08 07:59:22.656407: 
epoch:  32
2022-07-08 08:00:29.984987: train loss : -0.6497
2022-07-08 08:00:34.334922: validation loss: -0.6381
2022-07-08 08:00:34.338080: Average global foreground Dice: [0.6949]
2022-07-08 08:00:34.340260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:00:34.794108: Suus1 maybe_update_lr lr: 0.009404
2022-07-08 08:00:34.796506: saving best epoch checkpoint...
2022-07-08 08:00:34.833352: saving checkpoint...
2022-07-08 08:00:35.951945: done, saving took 1.15 seconds
2022-07-08 08:00:35.965207: This epoch took 73.306818 s

2022-07-08 08:00:35.967280: 
epoch:  33
2022-07-08 08:01:43.255952: train loss : -0.6571
2022-07-08 08:01:47.695446: validation loss: -0.6408
2022-07-08 08:01:47.739823: Average global foreground Dice: [0.7082]
2022-07-08 08:01:47.758951: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:01:48.316371: Suus1 maybe_update_lr lr: 0.009386
2022-07-08 08:01:48.318840: saving best epoch checkpoint...
2022-07-08 08:01:48.351608: saving checkpoint...
2022-07-08 08:01:49.306888: done, saving took 0.99 seconds
2022-07-08 08:01:49.322318: This epoch took 73.353011 s

2022-07-08 08:01:49.324808: 
epoch:  34
2022-07-08 08:02:56.563262: train loss : -0.6685
2022-07-08 08:03:00.925006: validation loss: -0.6131
2022-07-08 08:03:00.952964: Average global foreground Dice: [0.6905]
2022-07-08 08:03:00.955319: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:03:01.424864: Suus1 maybe_update_lr lr: 0.009368
2022-07-08 08:03:01.427809: saving best epoch checkpoint...
2022-07-08 08:03:01.461571: saving checkpoint...
2022-07-08 08:03:02.477538: done, saving took 1.05 seconds
2022-07-08 08:03:02.491981: This epoch took 73.164757 s

2022-07-08 08:03:02.494140: 
epoch:  35
2022-07-08 08:04:09.842137: train loss : -0.6586
2022-07-08 08:04:14.275835: validation loss: -0.5943
2022-07-08 08:04:14.292033: Average global foreground Dice: [0.6671]
2022-07-08 08:04:14.320545: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:04:14.854639: Suus1 maybe_update_lr lr: 0.00935
2022-07-08 08:04:14.857478: saving best epoch checkpoint...
2022-07-08 08:04:14.900148: saving checkpoint...
2022-07-08 08:04:15.737075: done, saving took 0.87 seconds
2022-07-08 08:04:15.751605: This epoch took 73.255156 s

2022-07-08 08:04:15.753590: 
epoch:  36
2022-07-08 08:05:23.051911: train loss : -0.6671
2022-07-08 08:05:27.598043: validation loss: -0.6397
2022-07-08 08:05:27.629984: Average global foreground Dice: [0.7155]
2022-07-08 08:05:27.638262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:05:28.172909: Suus1 maybe_update_lr lr: 0.009331
2022-07-08 08:05:28.178519: saving best epoch checkpoint...
2022-07-08 08:05:28.213508: saving checkpoint...
2022-07-08 08:05:29.348150: done, saving took 1.17 seconds
2022-07-08 08:05:29.363347: This epoch took 73.607656 s

2022-07-08 08:05:29.365332: 
epoch:  37
2022-07-08 08:06:36.518539: train loss : -0.6620
2022-07-08 08:06:40.872464: validation loss: -0.6365
2022-07-08 08:06:40.902863: Average global foreground Dice: [0.7036]
2022-07-08 08:06:40.933664: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:06:41.406123: Suus1 maybe_update_lr lr: 0.009313
2022-07-08 08:06:41.408428: saving best epoch checkpoint...
2022-07-08 08:06:41.444517: saving checkpoint...
2022-07-08 08:06:42.463301: done, saving took 1.05 seconds
2022-07-08 08:06:42.478356: This epoch took 73.111020 s

2022-07-08 08:06:42.480675: 
epoch:  38
2022-07-08 08:07:49.696597: train loss : -0.6888
2022-07-08 08:07:53.995378: validation loss: -0.6469
2022-07-08 08:07:54.009727: Average global foreground Dice: [0.709]
2022-07-08 08:07:54.025719: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:07:54.489670: Suus1 maybe_update_lr lr: 0.009295
2022-07-08 08:07:54.491924: saving best epoch checkpoint...
2022-07-08 08:07:54.525263: saving checkpoint...
2022-07-08 08:07:55.381451: done, saving took 0.89 seconds
2022-07-08 08:07:55.395272: This epoch took 72.911924 s

2022-07-08 08:07:55.397344: 
epoch:  39
2022-07-08 08:09:02.819222: train loss : -0.6932
2022-07-08 08:09:07.220709: validation loss: -0.7001
2022-07-08 08:09:07.225651: Average global foreground Dice: [0.7538]
2022-07-08 08:09:07.229509: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:09:07.814418: Suus1 maybe_update_lr lr: 0.009277
2022-07-08 08:09:07.816678: saving best epoch checkpoint...
2022-07-08 08:09:07.850477: saving checkpoint...
2022-07-08 08:09:08.872836: done, saving took 1.05 seconds
2022-07-08 08:09:08.886639: This epoch took 73.487389 s

2022-07-08 08:09:08.888993: 
epoch:  40
2022-07-08 08:10:16.217831: train loss : -0.6998
2022-07-08 08:10:20.587865: validation loss: -0.6726
2022-07-08 08:10:20.592385: Average global foreground Dice: [0.7307]
2022-07-08 08:10:20.599680: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:10:21.039705: Suus1 maybe_update_lr lr: 0.009259
2022-07-08 08:10:21.042095: saving best epoch checkpoint...
2022-07-08 08:10:21.076887: saving checkpoint...
2022-07-08 08:10:22.090092: done, saving took 1.05 seconds
2022-07-08 08:10:22.104851: This epoch took 73.213627 s

2022-07-08 08:10:22.107162: 
epoch:  41
2022-07-08 08:11:29.284677: train loss : -0.6985
2022-07-08 08:11:33.726852: validation loss: -0.6279
2022-07-08 08:11:33.730102: Average global foreground Dice: [0.6853]
2022-07-08 08:11:33.734215: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:11:34.212922: Suus1 maybe_update_lr lr: 0.009241
2022-07-08 08:11:34.215390: saving best epoch checkpoint...
2022-07-08 08:11:34.248743: saving checkpoint...
2022-07-08 08:11:35.204900: done, saving took 0.99 seconds
2022-07-08 08:11:35.220568: This epoch took 73.111188 s

2022-07-08 08:11:35.222706: 
epoch:  42
2022-07-08 08:12:42.418998: train loss : -0.6880
2022-07-08 08:12:46.982393: validation loss: -0.6416
2022-07-08 08:12:47.014158: Average global foreground Dice: [0.7066]
2022-07-08 08:12:47.028098: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:12:47.522662: Suus1 maybe_update_lr lr: 0.009223
2022-07-08 08:12:47.525682: saving best epoch checkpoint...
2022-07-08 08:12:47.558631: saving checkpoint...
2022-07-08 08:12:48.523246: done, saving took 1.00 seconds
2022-07-08 08:12:48.538090: This epoch took 73.313317 s

2022-07-08 08:12:48.540133: 
epoch:  43
2022-07-08 08:13:55.762924: train loss : -0.6801
2022-07-08 08:14:00.121773: validation loss: -0.6609
2022-07-08 08:14:00.154606: Average global foreground Dice: [0.7215]
2022-07-08 08:14:00.176267: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:14:00.691418: Suus1 maybe_update_lr lr: 0.009204
2022-07-08 08:14:00.712276: saving best epoch checkpoint...
2022-07-08 08:14:00.798209: saving checkpoint...
2022-07-08 08:14:01.866531: done, saving took 1.13 seconds
2022-07-08 08:14:01.881863: This epoch took 73.339794 s

2022-07-08 08:14:01.884197: 
epoch:  44
2022-07-08 08:15:09.191088: train loss : -0.6997
2022-07-08 08:15:13.532280: validation loss: -0.6637
2022-07-08 08:15:13.553241: Average global foreground Dice: [0.729]
2022-07-08 08:15:13.561631: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:15:14.036779: Suus1 maybe_update_lr lr: 0.009186
2022-07-08 08:15:14.039082: saving best epoch checkpoint...
2022-07-08 08:15:14.080324: saving checkpoint...
2022-07-08 08:15:15.165548: done, saving took 1.12 seconds
2022-07-08 08:15:15.181974: This epoch took 73.295640 s

2022-07-08 08:15:15.184484: 
epoch:  45
2022-07-08 08:16:22.574826: train loss : -0.7060
2022-07-08 08:16:26.971482: validation loss: -0.6404
2022-07-08 08:16:26.978906: Average global foreground Dice: [0.6965]
2022-07-08 08:16:26.992459: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:16:27.585726: Suus1 maybe_update_lr lr: 0.009168
2022-07-08 08:16:27.588092: saving best epoch checkpoint...
2022-07-08 08:16:27.621550: saving checkpoint...
2022-07-08 08:16:28.446313: done, saving took 0.86 seconds
2022-07-08 08:16:28.460048: This epoch took 73.273172 s

2022-07-08 08:16:28.462213: 
epoch:  46
2022-07-08 08:17:35.663536: train loss : -0.7020
2022-07-08 08:17:40.056192: validation loss: -0.6440
2022-07-08 08:17:40.061343: Average global foreground Dice: [0.7033]
2022-07-08 08:17:40.063602: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:17:40.544647: Suus1 maybe_update_lr lr: 0.00915
2022-07-08 08:17:40.546907: saving best epoch checkpoint...
2022-07-08 08:17:40.578158: saving checkpoint...
2022-07-08 08:17:41.493037: done, saving took 0.94 seconds
2022-07-08 08:17:41.506249: This epoch took 73.042011 s

2022-07-08 08:17:41.508123: 
epoch:  47
2022-07-08 08:18:48.740325: train loss : -0.6927
2022-07-08 08:18:53.234643: validation loss: -0.6501
2022-07-08 08:18:53.239564: Average global foreground Dice: [0.7191]
2022-07-08 08:18:53.244457: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:18:53.710674: Suus1 maybe_update_lr lr: 0.009132
2022-07-08 08:18:53.713061: saving best epoch checkpoint...
2022-07-08 08:18:53.745537: saving checkpoint...
2022-07-08 08:18:54.740328: done, saving took 1.03 seconds
2022-07-08 08:18:54.754618: This epoch took 73.244690 s

2022-07-08 08:18:54.756759: 
epoch:  48
2022-07-08 08:20:01.996737: train loss : -0.7064
2022-07-08 08:20:06.465966: validation loss: -0.6595
2022-07-08 08:20:06.483677: Average global foreground Dice: [0.7273]
2022-07-08 08:20:06.492436: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:20:07.105347: Suus1 maybe_update_lr lr: 0.009114
2022-07-08 08:20:07.107702: saving best epoch checkpoint...
2022-07-08 08:20:07.141264: saving checkpoint...
2022-07-08 08:20:08.064801: done, saving took 0.95 seconds
2022-07-08 08:20:08.079280: This epoch took 73.320335 s

2022-07-08 08:20:08.081449: 
epoch:  49
2022-07-08 08:21:15.311324: train loss : -0.6986
2022-07-08 08:21:19.657335: validation loss: -0.6397
2022-07-08 08:21:19.701427: Average global foreground Dice: [0.7132]
2022-07-08 08:21:19.732710: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:21:20.331033: Suus1 maybe_update_lr lr: 0.009095
2022-07-08 08:21:20.333496: saving scheduled checkpoint file...
2022-07-08 08:21:20.365396: saving checkpoint...
2022-07-08 08:21:21.314293: done, saving took 0.98 seconds
2022-07-08 08:21:21.329644: done
2022-07-08 08:21:21.332471: saving best epoch checkpoint...
2022-07-08 08:21:21.361001: saving checkpoint...
2022-07-08 08:21:22.324272: done, saving took 0.99 seconds
2022-07-08 08:21:22.338453: This epoch took 74.254759 s

2022-07-08 08:21:22.340677: 
epoch:  50
2022-07-08 08:22:29.536142: train loss : -0.6984
2022-07-08 08:22:33.954070: validation loss: -0.6484
2022-07-08 08:22:33.996786: Average global foreground Dice: [0.7176]
2022-07-08 08:22:34.006975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:22:34.506363: Suus1 maybe_update_lr lr: 0.009077
2022-07-08 08:22:34.519657: saving best epoch checkpoint...
2022-07-08 08:22:34.554216: saving checkpoint...
2022-07-08 08:22:35.508403: done, saving took 0.99 seconds
2022-07-08 08:22:35.523600: This epoch took 73.180865 s

2022-07-08 08:22:35.525816: 
epoch:  51
2022-07-08 08:23:42.792647: train loss : -0.7116
2022-07-08 08:23:47.197085: validation loss: -0.6728
2022-07-08 08:23:47.211848: Average global foreground Dice: [0.7361]
2022-07-08 08:23:47.230576: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:23:47.833459: Suus1 maybe_update_lr lr: 0.009059
2022-07-08 08:23:47.835795: saving best epoch checkpoint...
2022-07-08 08:23:47.881119: saving checkpoint...
2022-07-08 08:23:48.708505: done, saving took 0.87 seconds
2022-07-08 08:23:48.724032: This epoch took 73.195963 s

2022-07-08 08:23:48.726216: 
epoch:  52
2022-07-08 08:24:55.917990: train loss : -0.7183
2022-07-08 08:25:00.233383: validation loss: -0.6968
2022-07-08 08:25:00.241780: Average global foreground Dice: [0.7511]
2022-07-08 08:25:00.247076: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:25:00.695051: Suus1 maybe_update_lr lr: 0.009041
2022-07-08 08:25:00.697438: saving best epoch checkpoint...
2022-07-08 08:25:00.744166: saving checkpoint...
2022-07-08 08:25:01.865964: done, saving took 1.17 seconds
2022-07-08 08:25:01.881092: This epoch took 73.152728 s

2022-07-08 08:25:01.883245: 
epoch:  53
2022-07-08 08:26:09.125940: train loss : -0.7064
2022-07-08 08:26:13.781731: validation loss: -0.6595
2022-07-08 08:26:13.785394: Average global foreground Dice: [0.7109]
2022-07-08 08:26:13.787938: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:26:14.298107: Suus1 maybe_update_lr lr: 0.009023
2022-07-08 08:26:14.306537: saving best epoch checkpoint...
2022-07-08 08:26:14.360800: saving checkpoint...
2022-07-08 08:26:15.325035: done, saving took 1.01 seconds
2022-07-08 08:26:15.338821: This epoch took 73.453548 s

2022-07-08 08:26:15.340846: 
epoch:  54
2022-07-08 08:27:22.596546: train loss : -0.7295
2022-07-08 08:27:26.940570: validation loss: -0.6703
2022-07-08 08:27:26.944098: Average global foreground Dice: [0.7407]
2022-07-08 08:27:26.946251: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:27:27.386499: Suus1 maybe_update_lr lr: 0.009004
2022-07-08 08:27:27.392623: saving best epoch checkpoint...
2022-07-08 08:27:27.468940: saving checkpoint...
2022-07-08 08:27:28.616379: done, saving took 1.18 seconds
2022-07-08 08:27:28.631069: This epoch took 73.288000 s

2022-07-08 08:27:28.633358: 
epoch:  55
2022-07-08 08:28:35.962359: train loss : -0.7243
2022-07-08 08:28:40.303912: validation loss: -0.6310
2022-07-08 08:28:40.316379: Average global foreground Dice: [0.6928]
2022-07-08 08:28:40.318702: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:28:40.792517: Suus1 maybe_update_lr lr: 0.008986
2022-07-08 08:28:40.795001: This epoch took 72.159485 s

2022-07-08 08:28:40.797268: 
epoch:  56
2022-07-08 08:29:48.034793: train loss : -0.7139
2022-07-08 08:29:52.416266: validation loss: -0.6523
2022-07-08 08:29:52.423620: Average global foreground Dice: [0.7229]
2022-07-08 08:29:52.427347: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:29:52.896819: Suus1 maybe_update_lr lr: 0.008968
2022-07-08 08:29:52.899196: This epoch took 72.099816 s

2022-07-08 08:29:52.901252: 
epoch:  57
2022-07-08 08:31:00.219229: train loss : -0.7232
2022-07-08 08:31:04.646337: validation loss: -0.6669
2022-07-08 08:31:04.665146: Average global foreground Dice: [0.7357]
2022-07-08 08:31:04.667634: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:31:05.164320: Suus1 maybe_update_lr lr: 0.00895
2022-07-08 08:31:05.184329: saving best epoch checkpoint...
2022-07-08 08:31:05.239549: saving checkpoint...
2022-07-08 08:31:06.315922: done, saving took 1.11 seconds
2022-07-08 08:31:06.330672: This epoch took 73.427353 s

2022-07-08 08:31:06.332954: 
epoch:  58
2022-07-08 08:32:13.555617: train loss : -0.7277
2022-07-08 08:32:17.951457: validation loss: -0.6459
2022-07-08 08:32:17.954132: Average global foreground Dice: [0.7048]
2022-07-08 08:32:17.960160: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:32:18.448319: Suus1 maybe_update_lr lr: 0.008931
2022-07-08 08:32:18.450783: This epoch took 72.115729 s

2022-07-08 08:32:18.453438: 
epoch:  59
2022-07-08 08:33:25.718358: train loss : -0.7171
2022-07-08 08:33:30.053786: validation loss: -0.6614
2022-07-08 08:33:30.073390: Average global foreground Dice: [0.7255]
2022-07-08 08:33:30.092757: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:33:30.675167: Suus1 maybe_update_lr lr: 0.008913
2022-07-08 08:33:30.677565: saving best epoch checkpoint...
2022-07-08 08:33:30.714027: saving checkpoint...
2022-07-08 08:33:31.713136: done, saving took 1.03 seconds
2022-07-08 08:33:31.727672: This epoch took 73.271918 s

2022-07-08 08:33:31.729973: 
epoch:  60
2022-07-08 08:34:38.905601: train loss : -0.7293
2022-07-08 08:34:43.219658: validation loss: -0.6545
2022-07-08 08:34:43.240733: Average global foreground Dice: [0.724]
2022-07-08 08:34:43.245835: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:34:43.763921: Suus1 maybe_update_lr lr: 0.008895
2022-07-08 08:34:43.766234: saving best epoch checkpoint...
2022-07-08 08:34:43.798751: saving checkpoint...
2022-07-08 08:34:44.891111: done, saving took 1.12 seconds
2022-07-08 08:34:44.906856: This epoch took 73.174739 s

2022-07-08 08:34:44.909213: 
epoch:  61
2022-07-08 08:35:52.132136: train loss : -0.7303
2022-07-08 08:35:56.543603: validation loss: -0.6763
2022-07-08 08:35:56.550115: Average global foreground Dice: [0.7352]
2022-07-08 08:35:56.556403: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:35:57.070282: Suus1 maybe_update_lr lr: 0.008877
2022-07-08 08:35:57.072654: saving best epoch checkpoint...
2022-07-08 08:35:57.104660: saving checkpoint...
2022-07-08 08:35:58.079690: done, saving took 1.01 seconds
2022-07-08 08:35:58.093701: This epoch took 73.182115 s

2022-07-08 08:35:58.095983: 
epoch:  62
2022-07-08 08:37:05.352835: train loss : -0.7290
2022-07-08 08:37:09.688829: validation loss: -0.6433
2022-07-08 08:37:09.692625: Average global foreground Dice: [0.7044]
2022-07-08 08:37:09.703403: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:37:10.218400: Suus1 maybe_update_lr lr: 0.008859
2022-07-08 08:37:10.221112: This epoch took 72.122909 s

2022-07-08 08:37:10.223368: 
epoch:  63
2022-07-08 08:38:17.413861: train loss : -0.7200
2022-07-08 08:38:21.722651: validation loss: -0.6794
2022-07-08 08:38:21.748104: Average global foreground Dice: [0.7433]
2022-07-08 08:38:21.762274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:38:22.323229: Suus1 maybe_update_lr lr: 0.00884
2022-07-08 08:38:22.325507: saving best epoch checkpoint...
2022-07-08 08:38:22.356940: saving checkpoint...
2022-07-08 08:38:23.232706: done, saving took 0.91 seconds
2022-07-08 08:38:23.248302: This epoch took 73.022771 s

2022-07-08 08:38:23.250824: 
epoch:  64
2022-07-08 08:39:30.434027: train loss : -0.7086
2022-07-08 08:39:34.829343: validation loss: -0.6802
2022-07-08 08:39:34.832325: Average global foreground Dice: [0.7363]
2022-07-08 08:39:34.834884: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:39:35.270794: Suus1 maybe_update_lr lr: 0.008822
2022-07-08 08:39:35.273087: saving best epoch checkpoint...
2022-07-08 08:39:35.307420: saving checkpoint...
2022-07-08 08:39:36.302230: done, saving took 1.03 seconds
2022-07-08 08:39:36.316383: This epoch took 73.063338 s

2022-07-08 08:39:36.318406: 
epoch:  65
2022-07-08 08:40:43.573262: train loss : -0.7290
2022-07-08 08:40:48.002821: validation loss: -0.6729
2022-07-08 08:40:48.045197: Average global foreground Dice: [0.7485]
2022-07-08 08:40:48.059249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:40:48.593153: Suus1 maybe_update_lr lr: 0.008804
2022-07-08 08:40:48.595345: saving best epoch checkpoint...
2022-07-08 08:40:48.627504: saving checkpoint...
2022-07-08 08:40:49.635908: done, saving took 1.04 seconds
2022-07-08 08:40:49.649798: This epoch took 73.329247 s

2022-07-08 08:40:49.652116: 
epoch:  66
2022-07-08 08:41:56.810503: train loss : -0.7350
2022-07-08 08:42:01.235356: validation loss: -0.6550
2022-07-08 08:42:01.240300: Average global foreground Dice: [0.7202]
2022-07-08 08:42:01.242563: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:42:01.699217: Suus1 maybe_update_lr lr: 0.008785
2022-07-08 08:42:01.701779: This epoch took 72.047438 s

2022-07-08 08:42:01.703740: 
epoch:  67
2022-07-08 08:43:09.122824: train loss : -0.7129
2022-07-08 08:43:13.528403: validation loss: -0.6845
2022-07-08 08:43:13.537039: Average global foreground Dice: [0.7524]
2022-07-08 08:43:13.539456: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:43:14.007097: Suus1 maybe_update_lr lr: 0.008767
2022-07-08 08:43:14.009738: saving best epoch checkpoint...
2022-07-08 08:43:14.042794: saving checkpoint...
2022-07-08 08:43:14.983905: done, saving took 0.97 seconds
2022-07-08 08:43:14.999125: This epoch took 73.293407 s

2022-07-08 08:43:15.001611: 
epoch:  68
2022-07-08 08:44:22.365354: train loss : -0.7238
2022-07-08 08:44:26.830531: validation loss: -0.6819
2022-07-08 08:44:26.836172: Average global foreground Dice: [0.733]
2022-07-08 08:44:26.862174: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:44:27.547141: Suus1 maybe_update_lr lr: 0.008749
2022-07-08 08:44:27.549396: saving best epoch checkpoint...
2022-07-08 08:44:27.581246: saving checkpoint...
2022-07-08 08:44:28.558155: done, saving took 1.01 seconds
2022-07-08 08:44:28.572373: This epoch took 73.568566 s

2022-07-08 08:44:28.574521: 
epoch:  69
2022-07-08 08:45:35.807326: train loss : -0.7225
2022-07-08 08:45:40.192520: validation loss: -0.7127
2022-07-08 08:45:40.206474: Average global foreground Dice: [0.7606]
2022-07-08 08:45:40.218976: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:45:40.766668: Suus1 maybe_update_lr lr: 0.008731
2022-07-08 08:45:40.768966: saving best epoch checkpoint...
2022-07-08 08:45:40.800916: saving checkpoint...
2022-07-08 08:45:41.735997: done, saving took 0.97 seconds
2022-07-08 08:45:41.750297: This epoch took 73.173756 s

2022-07-08 08:45:41.752322: 
epoch:  70
2022-07-08 08:46:48.978533: train loss : -0.7450
2022-07-08 08:46:53.267218: validation loss: -0.6957
2022-07-08 08:46:53.285297: Average global foreground Dice: [0.7417]
2022-07-08 08:46:53.291438: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:46:53.824503: Suus1 maybe_update_lr lr: 0.008712
2022-07-08 08:46:53.826985: saving best epoch checkpoint...
2022-07-08 08:46:53.860038: saving checkpoint...
2022-07-08 08:46:54.669658: done, saving took 0.84 seconds
2022-07-08 08:46:54.684483: This epoch took 72.930196 s

2022-07-08 08:46:54.686561: 
epoch:  71
2022-07-08 08:48:01.865702: train loss : -0.7306
2022-07-08 08:48:06.359299: validation loss: -0.6092
2022-07-08 08:48:06.365595: Average global foreground Dice: [0.6793]
2022-07-08 08:48:06.403059: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:48:06.920499: Suus1 maybe_update_lr lr: 0.008694
2022-07-08 08:48:06.923021: This epoch took 72.234358 s

2022-07-08 08:48:06.925267: 
epoch:  72
2022-07-08 08:49:14.110243: train loss : -0.7263
2022-07-08 08:49:18.492136: validation loss: -0.6731
2022-07-08 08:49:18.522838: Average global foreground Dice: [0.723]
2022-07-08 08:49:18.525016: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:49:19.018508: Suus1 maybe_update_lr lr: 0.008676
2022-07-08 08:49:19.051678: This epoch took 72.124428 s

2022-07-08 08:49:19.070255: 
epoch:  73
2022-07-08 08:50:26.344776: train loss : -0.7307
2022-07-08 08:50:30.821571: validation loss: -0.6838
2022-07-08 08:50:30.825531: Average global foreground Dice: [0.7389]
2022-07-08 08:50:30.827694: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:50:31.284892: Suus1 maybe_update_lr lr: 0.008658
2022-07-08 08:50:31.295444: This epoch took 72.200179 s

2022-07-08 08:50:31.306248: 
epoch:  74
2022-07-08 08:51:38.475512: train loss : -0.7349
2022-07-08 08:51:42.850934: validation loss: -0.6567
2022-07-08 08:51:42.873005: Average global foreground Dice: [0.7188]
2022-07-08 08:51:42.900268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:51:43.400071: Suus1 maybe_update_lr lr: 0.008639
2022-07-08 08:51:43.402226: This epoch took 72.074974 s

2022-07-08 08:51:43.404090: 
epoch:  75
2022-07-08 08:52:50.599250: train loss : -0.7441
2022-07-08 08:52:54.975868: validation loss: -0.6941
2022-07-08 08:52:54.980218: Average global foreground Dice: [0.7487]
2022-07-08 08:52:54.982474: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:52:55.415926: Suus1 maybe_update_lr lr: 0.008621
2022-07-08 08:52:55.446321: This epoch took 72.040455 s

2022-07-08 08:52:55.466248: 
epoch:  76
2022-07-08 08:54:02.709624: train loss : -0.7460
2022-07-08 08:54:07.159657: validation loss: -0.6854
2022-07-08 08:54:07.169751: Average global foreground Dice: [0.7459]
2022-07-08 08:54:07.189638: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:54:07.730271: Suus1 maybe_update_lr lr: 0.008603
2022-07-08 08:54:07.732966: This epoch took 72.253709 s

2022-07-08 08:54:07.735876: 
epoch:  77
2022-07-08 08:55:14.999369: train loss : -0.7277
2022-07-08 08:55:19.435422: validation loss: -0.7051
2022-07-08 08:55:19.446876: Average global foreground Dice: [0.7535]
2022-07-08 08:55:19.450577: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:55:19.968658: Suus1 maybe_update_lr lr: 0.008584
2022-07-08 08:55:19.970916: saving best epoch checkpoint...
2022-07-08 08:55:20.002761: saving checkpoint...
2022-07-08 08:55:20.926077: done, saving took 0.95 seconds
2022-07-08 08:55:20.939667: This epoch took 73.201777 s

2022-07-08 08:55:20.941697: 
epoch:  78
2022-07-08 08:56:28.182050: train loss : -0.7242
2022-07-08 08:56:32.692313: validation loss: -0.6702
2022-07-08 08:56:32.726062: Average global foreground Dice: [0.7308]
2022-07-08 08:56:32.745736: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:56:33.279920: Suus1 maybe_update_lr lr: 0.008566
2022-07-08 08:56:33.282630: This epoch took 72.338967 s

2022-07-08 08:56:33.285288: 
epoch:  79
2022-07-08 08:57:40.446330: train loss : -0.7323
2022-07-08 08:57:44.908113: validation loss: -0.6574
2022-07-08 08:57:44.918425: Average global foreground Dice: [0.7225]
2022-07-08 08:57:44.922007: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:57:45.545331: Suus1 maybe_update_lr lr: 0.008548
2022-07-08 08:57:45.548260: This epoch took 72.260591 s

2022-07-08 08:57:45.550290: 
epoch:  80
2022-07-08 08:58:52.725114: train loss : -0.7481
2022-07-08 08:58:57.171766: validation loss: -0.6835
2022-07-08 08:58:57.198861: Average global foreground Dice: [0.7395]
2022-07-08 08:58:57.201354: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 08:58:57.764210: Suus1 maybe_update_lr lr: 0.008529
2022-07-08 08:58:57.766886: This epoch took 72.214631 s

2022-07-08 08:58:57.769156: 
epoch:  81
2022-07-08 09:00:04.976967: train loss : -0.7491
2022-07-08 09:00:09.425458: validation loss: -0.7017
2022-07-08 09:00:09.470326: Average global foreground Dice: [0.7579]
2022-07-08 09:00:09.485585: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:00:10.003959: Suus1 maybe_update_lr lr: 0.008511
2022-07-08 09:00:10.006321: saving best epoch checkpoint...
2022-07-08 09:00:10.042067: saving checkpoint...
2022-07-08 09:00:10.893971: done, saving took 0.89 seconds
2022-07-08 09:00:10.908584: This epoch took 73.137385 s

2022-07-08 09:00:10.910654: 
epoch:  82
2022-07-08 09:01:18.106225: train loss : -0.7477
2022-07-08 09:01:22.492369: validation loss: -0.6790
2022-07-08 09:01:22.519848: Average global foreground Dice: [0.7364]
2022-07-08 09:01:22.545294: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:01:23.085661: Suus1 maybe_update_lr lr: 0.008493
2022-07-08 09:01:23.105074: saving best epoch checkpoint...
2022-07-08 09:01:23.192792: saving checkpoint...
2022-07-08 09:01:24.185922: done, saving took 1.05 seconds
2022-07-08 09:01:24.200748: This epoch took 73.288066 s

2022-07-08 09:01:24.203049: 
epoch:  83
2022-07-08 09:02:31.377458: train loss : -0.7647
2022-07-08 09:02:35.806636: validation loss: -0.6942
2022-07-08 09:02:35.812095: Average global foreground Dice: [0.7533]
2022-07-08 09:02:35.814131: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:02:36.273314: Suus1 maybe_update_lr lr: 0.008474
2022-07-08 09:02:36.274980: saving best epoch checkpoint...
2022-07-08 09:02:36.318342: saving checkpoint...
2022-07-08 09:02:37.252517: done, saving took 0.97 seconds
2022-07-08 09:02:37.268043: This epoch took 73.062718 s

2022-07-08 09:02:37.270325: 
epoch:  84
2022-07-08 09:03:44.570276: train loss : -0.7377
2022-07-08 09:03:49.054576: validation loss: -0.6195
2022-07-08 09:03:49.062239: Average global foreground Dice: [0.6858]
2022-07-08 09:03:49.066446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:03:49.602800: Suus1 maybe_update_lr lr: 0.008456
2022-07-08 09:03:49.604952: This epoch took 72.332538 s

2022-07-08 09:03:49.607295: 
epoch:  85
2022-07-08 09:04:56.961604: train loss : -0.7367
2022-07-08 09:05:01.303996: validation loss: -0.7005
2022-07-08 09:05:01.310313: Average global foreground Dice: [0.7604]
2022-07-08 09:05:01.312921: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:05:01.922643: Suus1 maybe_update_lr lr: 0.008438
2022-07-08 09:05:01.924954: This epoch took 72.315640 s

2022-07-08 09:05:01.926857: 
epoch:  86
2022-07-08 09:06:09.289412: train loss : -0.7531
2022-07-08 09:06:13.733997: validation loss: -0.6125
2022-07-08 09:06:13.744377: Average global foreground Dice: [0.6946]
2022-07-08 09:06:13.751451: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:06:14.341525: Suus1 maybe_update_lr lr: 0.008419
2022-07-08 09:06:14.343793: This epoch took 72.415085 s

2022-07-08 09:06:14.345901: 
epoch:  87
2022-07-08 09:07:21.622706: train loss : -0.7610
2022-07-08 09:07:26.108337: validation loss: -0.6851
2022-07-08 09:07:26.122214: Average global foreground Dice: [0.7479]
2022-07-08 09:07:26.143148: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:07:26.665218: Suus1 maybe_update_lr lr: 0.008401
2022-07-08 09:07:26.667732: This epoch took 72.319803 s

2022-07-08 09:07:26.669843: 
epoch:  88
2022-07-08 09:08:34.005717: train loss : -0.7534
2022-07-08 09:08:38.436452: validation loss: -0.6939
2022-07-08 09:08:38.439348: Average global foreground Dice: [0.7536]
2022-07-08 09:08:38.442200: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:08:39.022731: Suus1 maybe_update_lr lr: 0.008383
2022-07-08 09:08:39.025133: This epoch took 72.353348 s

2022-07-08 09:08:39.027205: 
epoch:  89
2022-07-08 09:09:46.242951: train loss : -0.7531
2022-07-08 09:09:50.750273: validation loss: -0.6908
2022-07-08 09:09:50.768752: Average global foreground Dice: [0.7442]
2022-07-08 09:09:50.780022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:09:51.338249: Suus1 maybe_update_lr lr: 0.008364
2022-07-08 09:09:51.340336: This epoch took 72.311183 s

2022-07-08 09:09:51.342322: 
epoch:  90
2022-07-08 09:10:58.656142: train loss : -0.7548
2022-07-08 09:11:03.080601: validation loss: -0.6822
2022-07-08 09:11:03.103548: Average global foreground Dice: [0.7405]
2022-07-08 09:11:03.122931: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:11:03.726488: Suus1 maybe_update_lr lr: 0.008346
2022-07-08 09:11:03.741749: This epoch took 72.397278 s

2022-07-08 09:11:03.760620: 
epoch:  91
2022-07-08 09:12:11.014522: train loss : -0.7454
2022-07-08 09:12:15.403697: validation loss: -0.6905
2022-07-08 09:12:15.430947: Average global foreground Dice: [0.755]
2022-07-08 09:12:15.452321: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:12:15.975085: Suus1 maybe_update_lr lr: 0.008328
2022-07-08 09:12:15.977228: saving best epoch checkpoint...
2022-07-08 09:12:16.023694: saving checkpoint...
2022-07-08 09:12:17.091588: done, saving took 1.11 seconds
2022-07-08 09:12:17.107754: This epoch took 73.334336 s

2022-07-08 09:12:17.109962: 
epoch:  92
2022-07-08 09:13:24.405100: train loss : -0.7521
2022-07-08 09:13:28.793539: validation loss: -0.7204
2022-07-08 09:13:28.819634: Average global foreground Dice: [0.7765]
2022-07-08 09:13:28.827658: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:13:29.450371: Suus1 maybe_update_lr lr: 0.008309
2022-07-08 09:13:29.452358: saving best epoch checkpoint...
2022-07-08 09:13:29.494751: saving checkpoint...
2022-07-08 09:13:30.494240: done, saving took 1.04 seconds
2022-07-08 09:13:30.510037: This epoch took 73.397837 s

2022-07-08 09:13:30.512315: 
epoch:  93
2022-07-08 09:14:37.707396: train loss : -0.7615
2022-07-08 09:14:42.030479: validation loss: -0.7024
2022-07-08 09:14:42.065395: Average global foreground Dice: [0.7548]
2022-07-08 09:14:42.078936: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:14:42.547163: Suus1 maybe_update_lr lr: 0.008291
2022-07-08 09:14:42.549660: saving best epoch checkpoint...
2022-07-08 09:14:42.596785: saving checkpoint...
2022-07-08 09:14:43.639153: done, saving took 1.09 seconds
2022-07-08 09:14:43.654783: This epoch took 73.140279 s

2022-07-08 09:14:43.657134: 
epoch:  94
2022-07-08 09:15:50.997541: train loss : -0.7627
2022-07-08 09:15:55.534141: validation loss: -0.6946
2022-07-08 09:15:55.542486: Average global foreground Dice: [0.7492]
2022-07-08 09:15:55.544882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:15:56.019140: Suus1 maybe_update_lr lr: 0.008272
2022-07-08 09:15:56.021837: saving best epoch checkpoint...
2022-07-08 09:15:56.059048: saving checkpoint...
2022-07-08 09:15:57.085967: done, saving took 1.06 seconds
2022-07-08 09:15:57.100616: This epoch took 73.441597 s

2022-07-08 09:15:57.102800: 
epoch:  95
2022-07-08 09:17:04.330913: train loss : -0.7431
2022-07-08 09:17:08.753794: validation loss: -0.7064
2022-07-08 09:17:08.768550: Average global foreground Dice: [0.746]
2022-07-08 09:17:08.776856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:17:09.287668: Suus1 maybe_update_lr lr: 0.008254
2022-07-08 09:17:09.289885: saving best epoch checkpoint...
2022-07-08 09:17:09.321776: saving checkpoint...
2022-07-08 09:17:10.505437: done, saving took 1.21 seconds
2022-07-08 09:17:10.521274: This epoch took 73.416350 s

2022-07-08 09:17:10.523797: 
epoch:  96
2022-07-08 09:18:17.717599: train loss : -0.7547
2022-07-08 09:18:22.141251: validation loss: -0.7071
2022-07-08 09:18:22.171970: Average global foreground Dice: [0.7618]
2022-07-08 09:18:22.174497: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:18:22.759376: Suus1 maybe_update_lr lr: 0.008236
2022-07-08 09:18:22.761593: saving best epoch checkpoint...
2022-07-08 09:18:22.793882: saving checkpoint...
2022-07-08 09:18:23.735703: done, saving took 0.97 seconds
2022-07-08 09:18:23.749687: This epoch took 73.223695 s

2022-07-08 09:18:23.751838: 
epoch:  97
2022-07-08 09:19:30.938082: train loss : -0.7756
2022-07-08 09:19:35.381557: validation loss: -0.7080
2022-07-08 09:19:35.414305: Average global foreground Dice: [0.7643]
2022-07-08 09:19:35.441216: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:19:35.938146: Suus1 maybe_update_lr lr: 0.008217
2022-07-08 09:19:35.940328: saving best epoch checkpoint...
2022-07-08 09:19:35.973377: saving checkpoint...
2022-07-08 09:19:36.906072: done, saving took 0.96 seconds
2022-07-08 09:19:36.920915: This epoch took 73.167166 s

2022-07-08 09:19:36.923087: 
epoch:  98
2022-07-08 09:20:44.218795: train loss : -0.7667
2022-07-08 09:20:48.645724: validation loss: -0.6966
2022-07-08 09:20:48.684259: Average global foreground Dice: [0.7529]
2022-07-08 09:20:48.705472: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:20:49.237298: Suus1 maybe_update_lr lr: 0.008199
2022-07-08 09:20:49.239491: saving best epoch checkpoint...
2022-07-08 09:20:49.273151: saving checkpoint...
2022-07-08 09:20:50.203636: done, saving took 0.96 seconds
2022-07-08 09:20:50.218640: This epoch took 73.293552 s

2022-07-08 09:20:50.220908: 
epoch:  99
2022-07-08 09:21:57.522507: train loss : -0.7668
2022-07-08 09:22:01.993567: validation loss: -0.7202
2022-07-08 09:22:01.999202: Average global foreground Dice: [0.7739]
2022-07-08 09:22:02.001621: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:22:02.631863: Suus1 maybe_update_lr lr: 0.008181
2022-07-08 09:22:02.634172: saving scheduled checkpoint file...
2022-07-08 09:22:02.665941: saving checkpoint...
2022-07-08 09:22:03.615788: done, saving took 0.98 seconds
2022-07-08 09:22:03.680727: done
2022-07-08 09:22:03.682853: saving best epoch checkpoint...
2022-07-08 09:22:03.711190: saving checkpoint...
2022-07-08 09:22:04.644597: done, saving took 0.96 seconds
2022-07-08 09:22:04.659143: This epoch took 74.436099 s

2022-07-08 09:22:04.661330: 
epoch:  100
2022-07-08 09:23:11.884171: train loss : -0.7637
2022-07-08 09:23:16.256592: validation loss: -0.6916
2022-07-08 09:23:16.275263: Average global foreground Dice: [0.746]
2022-07-08 09:23:16.277508: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:23:16.737618: Suus1 maybe_update_lr lr: 0.008162
2022-07-08 09:23:16.739968: This epoch took 72.076420 s

2022-07-08 09:23:16.741952: 
epoch:  101
2022-07-08 09:24:24.110847: train loss : -0.7499
2022-07-08 09:24:28.482038: validation loss: -0.7415
2022-07-08 09:24:28.485305: Average global foreground Dice: [0.785]
2022-07-08 09:24:28.506908: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:24:28.974428: Suus1 maybe_update_lr lr: 0.008144
2022-07-08 09:24:28.977782: saving best epoch checkpoint...
2022-07-08 09:24:29.011264: saving checkpoint...
2022-07-08 09:24:30.078880: done, saving took 1.10 seconds
2022-07-08 09:24:30.093686: This epoch took 73.349805 s

2022-07-08 09:24:30.096228: 
epoch:  102
2022-07-08 09:25:37.423941: train loss : -0.7644
2022-07-08 09:25:41.812545: validation loss: -0.7236
2022-07-08 09:25:41.821340: Average global foreground Dice: [0.7715]
2022-07-08 09:25:41.823457: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:25:42.296897: Suus1 maybe_update_lr lr: 0.008125
2022-07-08 09:25:42.299184: saving best epoch checkpoint...
2022-07-08 09:25:42.332252: saving checkpoint...
2022-07-08 09:25:43.246782: done, saving took 0.95 seconds
2022-07-08 09:25:43.260669: This epoch took 73.162214 s

2022-07-08 09:25:43.262826: 
epoch:  103
2022-07-08 09:26:50.469004: train loss : -0.7602
2022-07-08 09:26:54.959908: validation loss: -0.6958
2022-07-08 09:26:54.968692: Average global foreground Dice: [0.7467]
2022-07-08 09:26:54.983281: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:26:55.466403: Suus1 maybe_update_lr lr: 0.008107
2022-07-08 09:26:55.476613: This epoch took 72.211510 s

2022-07-08 09:26:55.479826: 
epoch:  104
2022-07-08 09:28:02.840543: train loss : -0.7526
2022-07-08 09:28:07.215128: validation loss: -0.7104
2022-07-08 09:28:07.218907: Average global foreground Dice: [0.7595]
2022-07-08 09:28:07.221299: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:28:07.784273: Suus1 maybe_update_lr lr: 0.008088
2022-07-08 09:28:07.786678: This epoch took 72.304870 s

2022-07-08 09:28:07.788762: 
epoch:  105
2022-07-08 09:29:15.225524: train loss : -0.7451
2022-07-08 09:29:19.550957: validation loss: -0.6815
2022-07-08 09:29:19.579910: Average global foreground Dice: [0.7438]
2022-07-08 09:29:19.601373: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:29:20.207879: Suus1 maybe_update_lr lr: 0.00807
2022-07-08 09:29:20.210094: This epoch took 72.419425 s

2022-07-08 09:29:20.211972: 
epoch:  106
2022-07-08 09:30:27.519255: train loss : -0.7616
2022-07-08 09:30:31.854168: validation loss: -0.7164
2022-07-08 09:30:31.880242: Average global foreground Dice: [0.7724]
2022-07-08 09:30:31.895352: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:30:32.400334: Suus1 maybe_update_lr lr: 0.008052
2022-07-08 09:30:32.402343: saving best epoch checkpoint...
2022-07-08 09:30:32.432449: saving checkpoint...
2022-07-08 09:30:33.346890: done, saving took 0.94 seconds
2022-07-08 09:30:33.361627: This epoch took 73.147710 s

2022-07-08 09:30:33.363550: 
epoch:  107
2022-07-08 09:31:40.815655: train loss : -0.7621
2022-07-08 09:31:45.246982: validation loss: -0.7234
2022-07-08 09:31:45.256804: Average global foreground Dice: [0.7735]
2022-07-08 09:31:45.272701: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:31:45.786348: Suus1 maybe_update_lr lr: 0.008033
2022-07-08 09:31:45.788630: saving best epoch checkpoint...
2022-07-08 09:31:45.822321: saving checkpoint...
2022-07-08 09:31:46.749023: done, saving took 0.96 seconds
2022-07-08 09:31:46.763410: This epoch took 73.397836 s

2022-07-08 09:31:46.765754: 
epoch:  108
2022-07-08 09:32:54.073133: train loss : -0.7720
2022-07-08 09:32:58.480330: validation loss: -0.7171
2022-07-08 09:32:58.515667: Average global foreground Dice: [0.7645]
2022-07-08 09:32:58.518034: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:32:59.098481: Suus1 maybe_update_lr lr: 0.008015
2022-07-08 09:32:59.100916: saving best epoch checkpoint...
2022-07-08 09:32:59.132958: saving checkpoint...
2022-07-08 09:32:59.972575: done, saving took 0.87 seconds
2022-07-08 09:32:59.986649: This epoch took 73.218748 s

2022-07-08 09:32:59.988697: 
epoch:  109
2022-07-08 09:34:07.242648: train loss : -0.7718
2022-07-08 09:34:11.646860: validation loss: -0.6887
2022-07-08 09:34:11.667682: Average global foreground Dice: [0.7541]
2022-07-08 09:34:11.669909: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:34:12.207785: Suus1 maybe_update_lr lr: 0.007996
2022-07-08 09:34:12.210082: This epoch took 72.219543 s

2022-07-08 09:34:12.212050: 
epoch:  110
2022-07-08 09:35:19.374896: train loss : -0.7538
2022-07-08 09:35:23.918916: validation loss: -0.7064
2022-07-08 09:35:23.933769: Average global foreground Dice: [0.7503]
2022-07-08 09:35:23.936671: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:35:24.555067: Suus1 maybe_update_lr lr: 0.007978
2022-07-08 09:35:24.557404: This epoch took 72.343461 s

2022-07-08 09:35:24.559306: 
epoch:  111
2022-07-08 09:36:31.723059: train loss : -0.7639
2022-07-08 09:36:36.177862: validation loss: -0.7037
2022-07-08 09:36:36.182261: Average global foreground Dice: [0.7618]
2022-07-08 09:36:36.188722: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:36:36.662194: Suus1 maybe_update_lr lr: 0.007959
2022-07-08 09:36:36.664403: This epoch took 72.103197 s

2022-07-08 09:36:36.678324: 
epoch:  112
2022-07-08 09:37:43.870235: train loss : -0.7604
2022-07-08 09:37:48.301762: validation loss: -0.6841
2022-07-08 09:37:48.328593: Average global foreground Dice: [0.7438]
2022-07-08 09:37:48.333167: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:37:48.908428: Suus1 maybe_update_lr lr: 0.007941
2022-07-08 09:37:48.910621: This epoch took 72.228960 s

2022-07-08 09:37:48.912457: 
epoch:  113
2022-07-08 09:38:56.042810: train loss : -0.7610
2022-07-08 09:39:00.469318: validation loss: -0.7068
2022-07-08 09:39:00.474884: Average global foreground Dice: [0.7559]
2022-07-08 09:39:00.477980: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:39:00.919981: Suus1 maybe_update_lr lr: 0.007922
2022-07-08 09:39:00.922245: This epoch took 72.007849 s

2022-07-08 09:39:00.924226: 
epoch:  114
2022-07-08 09:40:08.091454: train loss : -0.7712
2022-07-08 09:40:12.507528: validation loss: -0.6929
2022-07-08 09:40:12.515505: Average global foreground Dice: [0.7621]
2022-07-08 09:40:12.544958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:40:13.060023: Suus1 maybe_update_lr lr: 0.007904
2022-07-08 09:40:13.062195: This epoch took 72.132806 s

2022-07-08 09:40:13.064267: 
epoch:  115
2022-07-08 09:41:20.214714: train loss : -0.7665
2022-07-08 09:41:24.760974: validation loss: -0.7133
2022-07-08 09:41:24.768425: Average global foreground Dice: [0.7712]
2022-07-08 09:41:24.770747: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:41:25.425920: Suus1 maybe_update_lr lr: 0.007885
2022-07-08 09:41:25.428236: This epoch took 72.362009 s

2022-07-08 09:41:25.461410: 
epoch:  116
2022-07-08 09:42:32.697816: train loss : -0.7574
2022-07-08 09:42:37.020294: validation loss: -0.7552
2022-07-08 09:42:37.044675: Average global foreground Dice: [0.7913]
2022-07-08 09:42:37.051319: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:42:37.767253: Suus1 maybe_update_lr lr: 0.007867
2022-07-08 09:42:37.770413: saving best epoch checkpoint...
2022-07-08 09:42:37.820441: saving checkpoint...
2022-07-08 09:42:38.823510: done, saving took 1.05 seconds
2022-07-08 09:42:38.839120: This epoch took 73.357578 s

2022-07-08 09:42:38.841539: 
epoch:  117
2022-07-08 09:43:45.974427: train loss : -0.7737
2022-07-08 09:43:50.436947: validation loss: -0.7382
2022-07-08 09:43:50.442220: Average global foreground Dice: [0.779]
2022-07-08 09:43:50.452868: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:43:51.026944: Suus1 maybe_update_lr lr: 0.007848
2022-07-08 09:43:51.029308: saving best epoch checkpoint...
2022-07-08 09:43:51.061258: saving checkpoint...
2022-07-08 09:43:52.099392: done, saving took 1.07 seconds
2022-07-08 09:43:52.113850: This epoch took 73.270111 s

2022-07-08 09:43:52.116129: 
epoch:  118
2022-07-08 09:44:59.296417: train loss : -0.7621
2022-07-08 09:45:03.679663: validation loss: -0.7013
2022-07-08 09:45:03.702890: Average global foreground Dice: [0.7606]
2022-07-08 09:45:03.711815: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:45:04.155043: Suus1 maybe_update_lr lr: 0.00783
2022-07-08 09:45:04.157321: This epoch took 72.039083 s

2022-07-08 09:45:04.159461: 
epoch:  119
2022-07-08 09:46:11.324311: train loss : -0.7453
2022-07-08 09:46:15.654218: validation loss: -0.7249
2022-07-08 09:46:15.658309: Average global foreground Dice: [0.7744]
2022-07-08 09:46:15.661360: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:46:16.127370: Suus1 maybe_update_lr lr: 0.007811
2022-07-08 09:46:16.129820: saving best epoch checkpoint...
2022-07-08 09:46:16.161231: saving checkpoint...
2022-07-08 09:46:17.075788: done, saving took 0.94 seconds
2022-07-08 09:46:17.090348: This epoch took 72.928991 s

2022-07-08 09:46:17.092417: 
epoch:  120
2022-07-08 09:47:24.250330: train loss : -0.7577
2022-07-08 09:47:28.625106: validation loss: -0.6876
2022-07-08 09:47:28.629058: Average global foreground Dice: [0.7479]
2022-07-08 09:47:28.660578: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:47:29.249770: Suus1 maybe_update_lr lr: 0.007793
2022-07-08 09:47:29.251990: This epoch took 72.157536 s

2022-07-08 09:47:29.253960: 
epoch:  121
2022-07-08 09:48:36.457445: train loss : -0.7604
2022-07-08 09:48:41.021673: validation loss: -0.7186
2022-07-08 09:48:41.026405: Average global foreground Dice: [0.7686]
2022-07-08 09:48:41.028532: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:48:41.488301: Suus1 maybe_update_lr lr: 0.007774
2022-07-08 09:48:41.491100: This epoch took 72.235182 s

2022-07-08 09:48:41.493776: 
epoch:  122
2022-07-08 09:49:48.771217: train loss : -0.7648
2022-07-08 09:49:53.065909: validation loss: -0.6919
2022-07-08 09:49:53.085741: Average global foreground Dice: [0.7506]
2022-07-08 09:49:53.103221: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:49:53.662905: Suus1 maybe_update_lr lr: 0.007756
2022-07-08 09:49:53.665229: This epoch took 72.165909 s

2022-07-08 09:49:53.667073: 
epoch:  123
2022-07-08 09:51:00.880696: train loss : -0.7567
2022-07-08 09:51:05.268420: validation loss: -0.7256
2022-07-08 09:51:05.282432: Average global foreground Dice: [0.7702]
2022-07-08 09:51:05.307566: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:51:05.831872: Suus1 maybe_update_lr lr: 0.007737
2022-07-08 09:51:05.834018: This epoch took 72.165113 s

2022-07-08 09:51:05.835986: 
epoch:  124
2022-07-08 09:52:13.045228: train loss : -0.7590
2022-07-08 09:52:17.642595: validation loss: -0.7367
2022-07-08 09:52:17.647213: Average global foreground Dice: [0.7854]
2022-07-08 09:52:17.649445: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:52:18.109424: Suus1 maybe_update_lr lr: 0.007719
2022-07-08 09:52:18.114480: saving best epoch checkpoint...
2022-07-08 09:52:18.160126: saving checkpoint...
2022-07-08 09:52:19.128091: done, saving took 1.01 seconds
2022-07-08 09:52:19.143971: This epoch took 73.306161 s

2022-07-08 09:52:19.146371: 
epoch:  125
2022-07-08 09:53:26.397035: train loss : -0.7686
2022-07-08 09:53:30.815862: validation loss: -0.6894
2022-07-08 09:53:30.839648: Average global foreground Dice: [0.756]
2022-07-08 09:53:30.861938: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:53:31.592167: Suus1 maybe_update_lr lr: 0.0077
2022-07-08 09:53:31.594441: This epoch took 72.445676 s

2022-07-08 09:53:31.596392: 
epoch:  126
2022-07-08 09:54:38.943414: train loss : -0.7704
2022-07-08 09:54:43.439473: validation loss: -0.7000
2022-07-08 09:54:43.457372: Average global foreground Dice: [0.7588]
2022-07-08 09:54:43.459521: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:54:44.021473: Suus1 maybe_update_lr lr: 0.007682
2022-07-08 09:54:44.023640: This epoch took 72.425189 s

2022-07-08 09:54:44.025587: 
epoch:  127
2022-07-08 09:55:51.284060: train loss : -0.7695
2022-07-08 09:55:55.633024: validation loss: -0.7334
2022-07-08 09:55:55.637750: Average global foreground Dice: [0.7838]
2022-07-08 09:55:55.656787: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:55:56.294141: Suus1 maybe_update_lr lr: 0.007663
2022-07-08 09:55:56.296577: saving best epoch checkpoint...
2022-07-08 09:55:56.326724: saving checkpoint...
2022-07-08 09:55:57.431991: done, saving took 1.13 seconds
2022-07-08 09:55:57.446073: This epoch took 73.418572 s

2022-07-08 09:55:57.448364: 
epoch:  128
2022-07-08 09:57:04.659417: train loss : -0.7424
2022-07-08 09:57:09.003735: validation loss: -0.7101
2022-07-08 09:57:09.037914: Average global foreground Dice: [0.7631]
2022-07-08 09:57:09.050297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:57:09.507451: Suus1 maybe_update_lr lr: 0.007645
2022-07-08 09:57:09.509645: This epoch took 72.058928 s

2022-07-08 09:57:09.511569: 
epoch:  129
2022-07-08 09:58:16.739614: train loss : -0.7337
2022-07-08 09:58:21.065484: validation loss: -0.7067
2022-07-08 09:58:21.078274: Average global foreground Dice: [0.7579]
2022-07-08 09:58:21.086788: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:58:21.572382: Suus1 maybe_update_lr lr: 0.007626
2022-07-08 09:58:21.574645: This epoch took 72.061145 s

2022-07-08 09:58:21.576509: 
epoch:  130
2022-07-08 09:59:28.908930: train loss : -0.7443
2022-07-08 09:59:33.296156: validation loss: -0.7158
2022-07-08 09:59:33.308474: Average global foreground Dice: [0.7672]
2022-07-08 09:59:33.316969: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 09:59:33.807298: Suus1 maybe_update_lr lr: 0.007608
2022-07-08 09:59:33.809586: This epoch took 72.231241 s

2022-07-08 09:59:33.811687: 
epoch:  131
2022-07-08 10:00:40.979796: train loss : -0.7654
2022-07-08 10:00:45.348724: validation loss: -0.6379
2022-07-08 10:00:45.351578: Average global foreground Dice: [0.7028]
2022-07-08 10:00:45.353719: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:00:45.806057: Suus1 maybe_update_lr lr: 0.007589
2022-07-08 10:00:45.808686: This epoch took 71.994972 s

2022-07-08 10:00:45.810861: 
epoch:  132
2022-07-08 10:01:53.164868: train loss : -0.7669
2022-07-08 10:01:57.478763: validation loss: -0.6886
2022-07-08 10:01:57.492933: Average global foreground Dice: [0.7437]
2022-07-08 10:01:57.500256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:01:58.065594: Suus1 maybe_update_lr lr: 0.007571
2022-07-08 10:01:58.068136: This epoch took 72.255315 s

2022-07-08 10:01:58.070163: 
epoch:  133
2022-07-08 10:03:05.338639: train loss : -0.7664
2022-07-08 10:03:09.861645: validation loss: -0.6733
2022-07-08 10:03:09.865890: Average global foreground Dice: [0.7363]
2022-07-08 10:03:09.868197: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:03:10.531315: Suus1 maybe_update_lr lr: 0.007552
2022-07-08 10:03:10.533556: This epoch took 72.461282 s

2022-07-08 10:03:10.535656: 
epoch:  134
2022-07-08 10:04:17.728773: train loss : -0.7782
2022-07-08 10:04:22.131476: validation loss: -0.7309
2022-07-08 10:04:22.147306: Average global foreground Dice: [0.7757]
2022-07-08 10:04:22.149581: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:04:22.591164: Suus1 maybe_update_lr lr: 0.007533
2022-07-08 10:04:22.593722: This epoch took 72.056058 s

2022-07-08 10:04:22.596220: 
epoch:  135
2022-07-08 10:05:29.803493: train loss : -0.7747
2022-07-08 10:05:34.362099: validation loss: -0.7442
2022-07-08 10:05:34.379089: Average global foreground Dice: [0.7825]
2022-07-08 10:05:34.391702: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:05:34.925867: Suus1 maybe_update_lr lr: 0.007515
2022-07-08 10:05:34.928027: This epoch took 72.327997 s

2022-07-08 10:05:34.929916: 
epoch:  136
2022-07-08 10:06:42.211506: train loss : -0.7476
2022-07-08 10:06:46.675086: validation loss: -0.6915
2022-07-08 10:06:46.677930: Average global foreground Dice: [0.7544]
2022-07-08 10:06:46.689552: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:06:47.212244: Suus1 maybe_update_lr lr: 0.007496
2022-07-08 10:06:47.214492: This epoch took 72.282619 s

2022-07-08 10:06:47.216469: 
epoch:  137
2022-07-08 10:07:54.491586: train loss : -0.7794
2022-07-08 10:07:58.905355: validation loss: -0.6883
2022-07-08 10:07:58.930730: Average global foreground Dice: [0.7574]
2022-07-08 10:07:58.951290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:07:59.523603: Suus1 maybe_update_lr lr: 0.007478
2022-07-08 10:07:59.525573: This epoch took 72.307160 s

2022-07-08 10:07:59.527529: 
epoch:  138
2022-07-08 10:09:06.779846: train loss : -0.7773
2022-07-08 10:09:11.098979: validation loss: -0.7142
2022-07-08 10:09:11.161726: Average global foreground Dice: [0.7686]
2022-07-08 10:09:11.187271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:09:11.715111: Suus1 maybe_update_lr lr: 0.007459
2022-07-08 10:09:11.724374: This epoch took 72.194964 s

2022-07-08 10:09:11.726446: 
epoch:  139
2022-07-08 10:10:19.022365: train loss : -0.7814
2022-07-08 10:10:23.671852: validation loss: -0.7122
2022-07-08 10:10:23.713897: Average global foreground Dice: [0.7593]
2022-07-08 10:10:23.735264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:10:24.240678: Suus1 maybe_update_lr lr: 0.00744
2022-07-08 10:10:24.255167: This epoch took 72.526877 s

2022-07-08 10:10:24.280307: 
epoch:  140
2022-07-08 10:11:31.600805: train loss : -0.7742
2022-07-08 10:11:36.167153: validation loss: -0.7209
2022-07-08 10:11:36.184311: Average global foreground Dice: [0.7671]
2022-07-08 10:11:36.202225: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:11:36.743718: Suus1 maybe_update_lr lr: 0.007422
2022-07-08 10:11:36.745665: This epoch took 72.443430 s

2022-07-08 10:11:36.747432: 
epoch:  141
2022-07-08 10:12:43.948979: train loss : -0.7806
2022-07-08 10:12:48.397010: validation loss: -0.7041
2022-07-08 10:12:48.402118: Average global foreground Dice: [0.764]
2022-07-08 10:12:48.404257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:12:48.982063: Suus1 maybe_update_lr lr: 0.007403
2022-07-08 10:12:48.984461: This epoch took 72.235161 s

2022-07-08 10:12:48.986522: 
epoch:  142
2022-07-08 10:13:56.428736: train loss : -0.7604
2022-07-08 10:14:00.920756: validation loss: -0.6992
2022-07-08 10:14:00.937287: Average global foreground Dice: [0.7567]
2022-07-08 10:14:00.939399: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:14:01.514699: Suus1 maybe_update_lr lr: 0.007385
2022-07-08 10:14:01.519681: This epoch took 72.531175 s

2022-07-08 10:14:01.542366: 
epoch:  143
2022-07-08 10:15:08.797945: train loss : -0.7777
2022-07-08 10:15:13.276096: validation loss: -0.7251
2022-07-08 10:15:13.279171: Average global foreground Dice: [0.7685]
2022-07-08 10:15:13.281426: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:15:13.765364: Suus1 maybe_update_lr lr: 0.007366
2022-07-08 10:15:13.778562: This epoch took 72.225302 s

2022-07-08 10:15:13.780637: 
epoch:  144
2022-07-08 10:16:21.153682: train loss : -0.7954
2022-07-08 10:16:25.502609: validation loss: -0.7479
2022-07-08 10:16:25.526200: Average global foreground Dice: [0.7966]
2022-07-08 10:16:25.537096: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:16:26.127720: Suus1 maybe_update_lr lr: 0.007347
2022-07-08 10:16:26.129893: This epoch took 72.347219 s

2022-07-08 10:16:26.131943: 
epoch:  145
2022-07-08 10:17:33.411168: train loss : -0.7853
2022-07-08 10:17:37.848477: validation loss: -0.7468
2022-07-08 10:17:37.867011: Average global foreground Dice: [0.7948]
2022-07-08 10:17:37.875168: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:17:38.321095: Suus1 maybe_update_lr lr: 0.007329
2022-07-08 10:17:38.326496: saving best epoch checkpoint...
2022-07-08 10:17:38.376846: saving checkpoint...
2022-07-08 10:17:39.335743: done, saving took 1.01 seconds
2022-07-08 10:17:39.350100: This epoch took 73.216319 s

2022-07-08 10:17:39.352199: 
epoch:  146
2022-07-08 10:18:46.670915: train loss : -0.7715
2022-07-08 10:18:51.134224: validation loss: -0.7324
2022-07-08 10:18:51.136857: Average global foreground Dice: [0.7817]
2022-07-08 10:18:51.138982: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:18:51.636385: Suus1 maybe_update_lr lr: 0.00731
2022-07-08 10:18:51.638662: saving best epoch checkpoint...
2022-07-08 10:18:51.672506: saving checkpoint...
2022-07-08 10:18:52.564081: done, saving took 0.92 seconds
2022-07-08 10:18:52.578874: This epoch took 73.224720 s

2022-07-08 10:18:52.580972: 
epoch:  147
2022-07-08 10:19:59.845913: train loss : -0.7757
2022-07-08 10:20:04.209689: validation loss: -0.7738
2022-07-08 10:20:04.216746: Average global foreground Dice: [0.8059]
2022-07-08 10:20:04.226380: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:20:04.694640: Suus1 maybe_update_lr lr: 0.007291
2022-07-08 10:20:04.696838: saving best epoch checkpoint...
2022-07-08 10:20:04.748062: saving checkpoint...
2022-07-08 10:20:05.781670: done, saving took 1.08 seconds
2022-07-08 10:20:05.797077: This epoch took 73.214622 s

2022-07-08 10:20:05.799419: 
epoch:  148
2022-07-08 10:21:13.181015: train loss : -0.7811
2022-07-08 10:21:17.551208: validation loss: -0.7114
2022-07-08 10:21:17.580219: Average global foreground Dice: [0.7604]
2022-07-08 10:21:17.593743: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:21:18.397875: Suus1 maybe_update_lr lr: 0.007273
2022-07-08 10:21:18.400184: This epoch took 72.598616 s

2022-07-08 10:21:18.402326: 
epoch:  149
2022-07-08 10:22:25.675815: train loss : -0.7770
2022-07-08 10:22:30.231411: validation loss: -0.7258
2022-07-08 10:22:30.263685: Average global foreground Dice: [0.7744]
2022-07-08 10:22:30.270299: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:22:30.763113: Suus1 maybe_update_lr lr: 0.007254
2022-07-08 10:22:30.784282: saving scheduled checkpoint file...
2022-07-08 10:22:30.850443: saving checkpoint...
2022-07-08 10:22:31.744853: done, saving took 0.94 seconds
2022-07-08 10:22:31.759807: done
2022-07-08 10:22:31.761778: This epoch took 73.357037 s

2022-07-08 10:22:31.763737: 
epoch:  150
2022-07-08 10:23:39.061826: train loss : -0.7885
2022-07-08 10:23:43.387363: validation loss: -0.7334
2022-07-08 10:23:43.392150: Average global foreground Dice: [0.7834]
2022-07-08 10:23:43.394366: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:23:43.838091: Suus1 maybe_update_lr lr: 0.007236
2022-07-08 10:23:43.840235: saving best epoch checkpoint...
2022-07-08 10:23:43.875218: saving checkpoint...
2022-07-08 10:23:44.800767: done, saving took 0.96 seconds
2022-07-08 10:23:44.814853: This epoch took 73.049350 s

2022-07-08 10:23:44.816902: 
epoch:  151
2022-07-08 10:24:52.242789: train loss : -0.7847
2022-07-08 10:24:56.715324: validation loss: -0.7369
2022-07-08 10:24:56.728227: Average global foreground Dice: [0.7857]
2022-07-08 10:24:56.747764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:24:57.304692: Suus1 maybe_update_lr lr: 0.007217
2022-07-08 10:24:57.307224: saving best epoch checkpoint...
2022-07-08 10:24:57.338311: saving checkpoint...
2022-07-08 10:24:58.171995: done, saving took 0.86 seconds
2022-07-08 10:24:58.185783: This epoch took 73.366840 s

2022-07-08 10:24:58.188042: 
epoch:  152
2022-07-08 10:26:05.437095: train loss : -0.7883
2022-07-08 10:26:09.978366: validation loss: -0.7193
2022-07-08 10:26:09.989529: Average global foreground Dice: [0.7645]
2022-07-08 10:26:10.001655: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:26:10.553340: Suus1 maybe_update_lr lr: 0.007198
2022-07-08 10:26:10.556043: This epoch took 72.366035 s

2022-07-08 10:26:10.558249: 
epoch:  153
2022-07-08 10:27:17.962638: train loss : -0.7783
2022-07-08 10:27:22.345823: validation loss: -0.7162
2022-07-08 10:27:22.350969: Average global foreground Dice: [0.7716]
2022-07-08 10:27:22.353238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:27:22.898035: Suus1 maybe_update_lr lr: 0.00718
2022-07-08 10:27:22.906775: This epoch took 72.346305 s

2022-07-08 10:27:22.908984: 
epoch:  154
2022-07-08 10:28:30.290765: train loss : -0.7860
2022-07-08 10:28:34.659686: validation loss: -0.7146
2022-07-08 10:28:34.666330: Average global foreground Dice: [0.7659]
2022-07-08 10:28:34.685282: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:28:35.258605: Suus1 maybe_update_lr lr: 0.007161
2022-07-08 10:28:35.260796: This epoch took 72.349849 s

2022-07-08 10:28:35.262674: 
epoch:  155
2022-07-08 10:29:42.804132: train loss : -0.7731
2022-07-08 10:29:47.242812: validation loss: -0.6759
2022-07-08 10:29:47.246229: Average global foreground Dice: [0.7406]
2022-07-08 10:29:47.248243: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:29:47.701756: Suus1 maybe_update_lr lr: 0.007142
2022-07-08 10:29:47.703842: This epoch took 72.439327 s

2022-07-08 10:29:47.705862: 
epoch:  156
2022-07-08 10:30:55.197260: train loss : -0.7606
2022-07-08 10:30:59.759226: validation loss: -0.7138
2022-07-08 10:30:59.762626: Average global foreground Dice: [0.7711]
2022-07-08 10:30:59.764814: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:31:00.302678: Suus1 maybe_update_lr lr: 0.007123
2022-07-08 10:31:00.305685: This epoch took 72.597929 s

2022-07-08 10:31:00.307748: 
epoch:  157
2022-07-08 10:32:07.754015: train loss : -0.7437
2022-07-08 10:32:12.307528: validation loss: -0.6747
2022-07-08 10:32:12.332825: Average global foreground Dice: [0.7409]
2022-07-08 10:32:12.342647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:32:12.846562: Suus1 maybe_update_lr lr: 0.007105
2022-07-08 10:32:12.848822: This epoch took 72.539216 s

2022-07-08 10:32:12.850724: 
epoch:  158
2022-07-08 10:33:20.362191: train loss : -0.7667
2022-07-08 10:33:24.729500: validation loss: -0.7325
2022-07-08 10:33:24.734285: Average global foreground Dice: [0.7774]
2022-07-08 10:33:24.736383: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:33:25.220003: Suus1 maybe_update_lr lr: 0.007086
2022-07-08 10:33:25.222049: This epoch took 72.369417 s

2022-07-08 10:33:25.223964: 
epoch:  159
2022-07-08 10:34:32.469101: train loss : -0.7713
2022-07-08 10:34:36.915966: validation loss: -0.6792
2022-07-08 10:34:36.923833: Average global foreground Dice: [0.7391]
2022-07-08 10:34:36.932319: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:34:37.512813: Suus1 maybe_update_lr lr: 0.007067
2022-07-08 10:34:37.514978: This epoch took 72.289155 s

2022-07-08 10:34:37.516974: 
epoch:  160
2022-07-08 10:35:44.865572: train loss : -0.7809
2022-07-08 10:35:49.227500: validation loss: -0.7334
2022-07-08 10:35:49.230617: Average global foreground Dice: [0.7849]
2022-07-08 10:35:49.248083: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:35:49.823362: Suus1 maybe_update_lr lr: 0.007049
2022-07-08 10:35:49.825523: This epoch took 72.306691 s

2022-07-08 10:35:49.827404: 
epoch:  161
2022-07-08 10:36:57.342887: train loss : -0.7784
2022-07-08 10:37:01.903417: validation loss: -0.7366
2022-07-08 10:37:01.907037: Average global foreground Dice: [0.7833]
2022-07-08 10:37:01.917857: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:37:02.407188: Suus1 maybe_update_lr lr: 0.00703
2022-07-08 10:37:02.409896: This epoch took 72.580597 s

2022-07-08 10:37:02.412007: 
epoch:  162
2022-07-08 10:38:10.052826: train loss : -0.7841
2022-07-08 10:38:14.677762: validation loss: -0.7130
2022-07-08 10:38:14.700761: Average global foreground Dice: [0.7702]
2022-07-08 10:38:14.718411: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:38:15.223419: Suus1 maybe_update_lr lr: 0.007011
2022-07-08 10:38:15.225817: This epoch took 72.811743 s

2022-07-08 10:38:15.227862: 
epoch:  163
2022-07-08 10:39:22.588722: train loss : -0.7927
2022-07-08 10:39:26.920893: validation loss: -0.7343
2022-07-08 10:39:26.933087: Average global foreground Dice: [0.7855]
2022-07-08 10:39:26.945301: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:39:27.529449: Suus1 maybe_update_lr lr: 0.006992
2022-07-08 10:39:27.531846: This epoch took 72.301975 s

2022-07-08 10:39:27.533731: 
epoch:  164
2022-07-08 10:40:34.813864: train loss : -0.7874
2022-07-08 10:40:39.205737: validation loss: -0.7226
2022-07-08 10:40:39.221772: Average global foreground Dice: [0.773]
2022-07-08 10:40:39.229978: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:40:39.725999: Suus1 maybe_update_lr lr: 0.006974
2022-07-08 10:40:39.728358: This epoch took 72.192706 s

2022-07-08 10:40:39.730361: 
epoch:  165
2022-07-08 10:41:46.984949: train loss : -0.7813
2022-07-08 10:41:51.388710: validation loss: -0.6878
2022-07-08 10:41:51.406452: Average global foreground Dice: [0.7392]
2022-07-08 10:41:51.410295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:41:51.908947: Suus1 maybe_update_lr lr: 0.006955
2022-07-08 10:41:51.911156: This epoch took 72.178769 s

2022-07-08 10:41:51.913557: 
epoch:  166
2022-07-08 10:42:59.212807: train loss : -0.7869
2022-07-08 10:43:03.587268: validation loss: -0.7173
2022-07-08 10:43:03.590372: Average global foreground Dice: [0.7704]
2022-07-08 10:43:03.592542: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:43:04.086570: Suus1 maybe_update_lr lr: 0.006936
2022-07-08 10:43:04.088614: This epoch took 72.172825 s

2022-07-08 10:43:04.090503: 
epoch:  167
2022-07-08 10:44:11.347430: train loss : -0.7931
2022-07-08 10:44:15.820900: validation loss: -0.6888
2022-07-08 10:44:15.840839: Average global foreground Dice: [0.7558]
2022-07-08 10:44:15.843902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:44:16.429733: Suus1 maybe_update_lr lr: 0.006918
2022-07-08 10:44:16.431869: This epoch took 72.339498 s

2022-07-08 10:44:16.433814: 
epoch:  168
2022-07-08 10:45:23.728877: train loss : -0.7716
2022-07-08 10:45:28.244198: validation loss: -0.7063
2022-07-08 10:45:28.247204: Average global foreground Dice: [0.7584]
2022-07-08 10:45:28.249372: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:45:28.815668: Suus1 maybe_update_lr lr: 0.006899
2022-07-08 10:45:28.818145: This epoch took 72.382485 s

2022-07-08 10:45:28.820167: 
epoch:  169
2022-07-08 10:46:36.139429: train loss : -0.7823
2022-07-08 10:46:40.499280: validation loss: -0.7510
2022-07-08 10:46:40.514860: Average global foreground Dice: [0.8001]
2022-07-08 10:46:40.549283: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:46:41.093108: Suus1 maybe_update_lr lr: 0.00688
2022-07-08 10:46:41.095214: This epoch took 72.273191 s

2022-07-08 10:46:41.097052: 
epoch:  170
2022-07-08 10:47:48.427231: train loss : -0.7918
2022-07-08 10:47:52.804315: validation loss: -0.7439
2022-07-08 10:47:52.807331: Average global foreground Dice: [0.7992]
2022-07-08 10:47:52.820256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:47:53.310880: Suus1 maybe_update_lr lr: 0.006861
2022-07-08 10:47:53.313335: This epoch took 72.214379 s

2022-07-08 10:47:53.315331: 
epoch:  171
2022-07-08 10:49:00.707981: train loss : -0.7864
2022-07-08 10:49:05.168803: validation loss: -0.6917
2022-07-08 10:49:05.179149: Average global foreground Dice: [0.7473]
2022-07-08 10:49:05.183955: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:49:05.678061: Suus1 maybe_update_lr lr: 0.006842
2022-07-08 10:49:05.692294: This epoch took 72.375071 s

2022-07-08 10:49:05.694558: 
epoch:  172
2022-07-08 10:50:12.938779: train loss : -0.8005
2022-07-08 10:50:17.398523: validation loss: -0.7253
2022-07-08 10:50:17.402220: Average global foreground Dice: [0.7775]
2022-07-08 10:50:17.445431: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:50:18.061909: Suus1 maybe_update_lr lr: 0.006824
2022-07-08 10:50:18.064171: This epoch took 72.367590 s

2022-07-08 10:50:18.066141: 
epoch:  173
2022-07-08 10:51:25.434637: train loss : -0.7999
2022-07-08 10:51:29.838595: validation loss: -0.7093
2022-07-08 10:51:29.866061: Average global foreground Dice: [0.7626]
2022-07-08 10:51:29.868352: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:51:30.482837: Suus1 maybe_update_lr lr: 0.006805
2022-07-08 10:51:30.485598: This epoch took 72.417577 s

2022-07-08 10:51:30.488027: 
epoch:  174
2022-07-08 10:52:37.848357: train loss : -0.7915
2022-07-08 10:52:42.165474: validation loss: -0.7166
2022-07-08 10:52:42.169358: Average global foreground Dice: [0.7849]
2022-07-08 10:52:42.177016: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:52:42.652758: Suus1 maybe_update_lr lr: 0.006786
2022-07-08 10:52:42.654953: This epoch took 72.164587 s

2022-07-08 10:52:42.656926: 
epoch:  175
2022-07-08 10:53:49.862113: train loss : -0.7837
2022-07-08 10:53:54.182468: validation loss: -0.7283
2022-07-08 10:53:54.185326: Average global foreground Dice: [0.7792]
2022-07-08 10:53:54.187517: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:53:54.672372: Suus1 maybe_update_lr lr: 0.006767
2022-07-08 10:53:54.674591: This epoch took 72.015463 s

2022-07-08 10:53:54.676489: 
epoch:  176
2022-07-08 10:55:01.963867: train loss : -0.7850
2022-07-08 10:55:06.328046: validation loss: -0.7330
2022-07-08 10:55:06.333205: Average global foreground Dice: [0.776]
2022-07-08 10:55:06.335536: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:55:06.790078: Suus1 maybe_update_lr lr: 0.006749
2022-07-08 10:55:06.792517: This epoch took 72.113849 s

2022-07-08 10:55:06.794581: 
epoch:  177
2022-07-08 10:56:14.208081: train loss : -0.7987
2022-07-08 10:56:18.831409: validation loss: -0.7501
2022-07-08 10:56:18.895690: Average global foreground Dice: [0.7906]
2022-07-08 10:56:18.928275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:56:19.422426: Suus1 maybe_update_lr lr: 0.00673
2022-07-08 10:56:19.424702: This epoch took 72.628086 s

2022-07-08 10:56:19.426656: 
epoch:  178
2022-07-08 10:57:26.822510: train loss : -0.7997
2022-07-08 10:57:31.167938: validation loss: -0.7351
2022-07-08 10:57:31.189763: Average global foreground Dice: [0.7819]
2022-07-08 10:57:31.204872: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:57:31.674654: Suus1 maybe_update_lr lr: 0.006711
2022-07-08 10:57:31.676973: saving best epoch checkpoint...
2022-07-08 10:57:31.714460: saving checkpoint...
2022-07-08 10:57:32.761496: done, saving took 1.08 seconds
2022-07-08 10:57:32.777079: This epoch took 73.348692 s

2022-07-08 10:57:32.779277: 
epoch:  179
2022-07-08 10:58:40.048792: train loss : -0.7976
2022-07-08 10:58:44.497117: validation loss: -0.7256
2022-07-08 10:58:44.500514: Average global foreground Dice: [0.7774]
2022-07-08 10:58:44.502562: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:58:45.020962: Suus1 maybe_update_lr lr: 0.006692
2022-07-08 10:58:45.023266: saving best epoch checkpoint...
2022-07-08 10:58:45.058064: saving checkpoint...
2022-07-08 10:58:46.044139: done, saving took 1.02 seconds
2022-07-08 10:58:46.058517: This epoch took 73.277023 s

2022-07-08 10:58:46.060791: 
epoch:  180
2022-07-08 10:59:53.455154: train loss : -0.8006
2022-07-08 10:59:57.869844: validation loss: -0.7147
2022-07-08 10:59:57.878243: Average global foreground Dice: [0.7635]
2022-07-08 10:59:57.889256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 10:59:58.390755: Suus1 maybe_update_lr lr: 0.006673
2022-07-08 10:59:58.392922: This epoch took 72.330070 s

2022-07-08 10:59:58.394900: 
epoch:  181
2022-07-08 11:01:05.714737: train loss : -0.7987
2022-07-08 11:01:10.205997: validation loss: -0.7666
2022-07-08 11:01:10.241163: Average global foreground Dice: [0.8132]
2022-07-08 11:01:10.261924: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:01:10.757341: Suus1 maybe_update_lr lr: 0.006654
2022-07-08 11:01:10.776325: saving best epoch checkpoint...
2022-07-08 11:01:10.843732: saving checkpoint...
2022-07-08 11:01:11.801953: done, saving took 1.00 seconds
2022-07-08 11:01:11.816560: This epoch took 73.419782 s

2022-07-08 11:01:11.818639: 
epoch:  182
2022-07-08 11:02:19.124189: train loss : -0.7997
2022-07-08 11:02:23.445372: validation loss: -0.7301
2022-07-08 11:02:23.452010: Average global foreground Dice: [0.7729]
2022-07-08 11:02:23.465389: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:02:23.965476: Suus1 maybe_update_lr lr: 0.006636
2022-07-08 11:02:23.967838: This epoch took 72.147120 s

2022-07-08 11:02:23.970085: 
epoch:  183
2022-07-08 11:03:31.322857: train loss : -0.7928
2022-07-08 11:03:35.618906: validation loss: -0.7402
2022-07-08 11:03:35.624473: Average global foreground Dice: [0.7925]
2022-07-08 11:03:35.626672: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:03:36.127349: Suus1 maybe_update_lr lr: 0.006617
2022-07-08 11:03:36.129431: saving best epoch checkpoint...
2022-07-08 11:03:36.160455: saving checkpoint...
2022-07-08 11:03:37.106056: done, saving took 0.97 seconds
2022-07-08 11:03:37.120589: This epoch took 73.148259 s

2022-07-08 11:03:37.122824: 
epoch:  184
2022-07-08 11:04:44.496157: train loss : -0.7969
2022-07-08 11:04:48.809838: validation loss: -0.7058
2022-07-08 11:04:48.819894: Average global foreground Dice: [0.7594]
2022-07-08 11:04:48.834277: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:04:49.297150: Suus1 maybe_update_lr lr: 0.006598
2022-07-08 11:04:49.299612: This epoch took 72.174433 s

2022-07-08 11:04:49.301600: 
epoch:  185
2022-07-08 11:05:56.639501: train loss : -0.7992
2022-07-08 11:06:01.047115: validation loss: -0.7301
2022-07-08 11:06:01.089009: Average global foreground Dice: [0.7807]
2022-07-08 11:06:01.116337: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:06:01.609431: Suus1 maybe_update_lr lr: 0.006579
2022-07-08 11:06:01.611662: This epoch took 72.308090 s

2022-07-08 11:06:01.613639: 
epoch:  186
2022-07-08 11:07:08.958343: train loss : -0.7953
2022-07-08 11:07:13.407408: validation loss: -0.7710
2022-07-08 11:07:13.413555: Average global foreground Dice: [0.8122]
2022-07-08 11:07:13.415133: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:07:13.862968: Suus1 maybe_update_lr lr: 0.00656
2022-07-08 11:07:13.865212: saving best epoch checkpoint...
2022-07-08 11:07:13.907980: saving checkpoint...
2022-07-08 11:07:14.935596: done, saving took 1.07 seconds
2022-07-08 11:07:14.949103: This epoch took 73.333422 s

2022-07-08 11:07:14.951037: 
epoch:  187
2022-07-08 11:08:22.422945: train loss : -0.7931
2022-07-08 11:08:26.887323: validation loss: -0.7241
2022-07-08 11:08:26.912050: Average global foreground Dice: [0.7692]
2022-07-08 11:08:26.923657: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:08:27.427355: Suus1 maybe_update_lr lr: 0.006541
2022-07-08 11:08:27.429662: This epoch took 72.476588 s

2022-07-08 11:08:27.431684: 
epoch:  188
2022-07-08 11:09:34.683796: train loss : -0.8003
2022-07-08 11:09:39.095230: validation loss: -0.7363
2022-07-08 11:09:39.116579: Average global foreground Dice: [0.7708]
2022-07-08 11:09:39.136163: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:09:39.609828: Suus1 maybe_update_lr lr: 0.006522
2022-07-08 11:09:39.611989: This epoch took 72.178325 s

2022-07-08 11:09:39.613831: 
epoch:  189
2022-07-08 11:10:46.877476: train loss : -0.8079
2022-07-08 11:10:51.352654: validation loss: -0.7282
2022-07-08 11:10:51.375655: Average global foreground Dice: [0.7839]
2022-07-08 11:10:51.387143: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:10:51.912112: Suus1 maybe_update_lr lr: 0.006504
2022-07-08 11:10:51.914445: This epoch took 72.298690 s

2022-07-08 11:10:51.916329: 
epoch:  190
2022-07-08 11:11:59.220229: train loss : -0.8030
2022-07-08 11:12:03.835517: validation loss: -0.7083
2022-07-08 11:12:03.839053: Average global foreground Dice: [0.7594]
2022-07-08 11:12:03.843287: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:12:04.328434: Suus1 maybe_update_lr lr: 0.006485
2022-07-08 11:12:04.339130: This epoch took 72.420946 s

2022-07-08 11:12:04.342794: 
epoch:  191
2022-07-08 11:13:11.759611: train loss : -0.7870
2022-07-08 11:13:16.107468: validation loss: -0.7176
2022-07-08 11:13:16.120570: Average global foreground Dice: [0.7682]
2022-07-08 11:13:16.133433: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:13:16.715305: Suus1 maybe_update_lr lr: 0.006466
2022-07-08 11:13:16.717655: This epoch took 72.371042 s

2022-07-08 11:13:16.719656: 
epoch:  192
2022-07-08 11:14:24.155521: train loss : -0.7747
2022-07-08 11:14:28.581713: validation loss: -0.7426
2022-07-08 11:14:28.593921: Average global foreground Dice: [0.7904]
2022-07-08 11:14:28.607949: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:14:29.143226: Suus1 maybe_update_lr lr: 0.006447
2022-07-08 11:14:29.145348: This epoch took 72.423803 s

2022-07-08 11:14:29.147280: 
epoch:  193
2022-07-08 11:15:36.428464: train loss : -0.7993
2022-07-08 11:15:40.970881: validation loss: -0.7410
2022-07-08 11:15:41.001630: Average global foreground Dice: [0.7902]
2022-07-08 11:15:41.016251: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:15:41.610065: Suus1 maybe_update_lr lr: 0.006428
2022-07-08 11:15:41.612203: This epoch took 72.462725 s

2022-07-08 11:15:41.614201: 
epoch:  194
2022-07-08 11:16:48.814453: train loss : -0.7912
2022-07-08 11:16:53.269690: validation loss: -0.7198
2022-07-08 11:16:53.303768: Average global foreground Dice: [0.7769]
2022-07-08 11:16:53.325263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:16:53.826526: Suus1 maybe_update_lr lr: 0.006409
2022-07-08 11:16:53.828731: This epoch took 72.212521 s

2022-07-08 11:16:53.830986: 
epoch:  195
2022-07-08 11:18:01.047237: train loss : -0.7936
2022-07-08 11:18:05.435892: validation loss: -0.7340
2022-07-08 11:18:05.444854: Average global foreground Dice: [0.7867]
2022-07-08 11:18:05.462375: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:18:06.055789: Suus1 maybe_update_lr lr: 0.00639
2022-07-08 11:18:06.058278: This epoch took 72.224182 s

2022-07-08 11:18:06.060322: 
epoch:  196
2022-07-08 11:19:13.411336: train loss : -0.7914
2022-07-08 11:19:17.759242: validation loss: -0.7319
2022-07-08 11:19:17.780805: Average global foreground Dice: [0.7777]
2022-07-08 11:19:17.787136: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:19:18.290171: Suus1 maybe_update_lr lr: 0.006371
2022-07-08 11:19:18.292679: This epoch took 72.230397 s

2022-07-08 11:19:18.294686: 
epoch:  197
2022-07-08 11:20:25.486667: train loss : -0.8054
2022-07-08 11:20:29.932368: validation loss: -0.7233
2022-07-08 11:20:29.937661: Average global foreground Dice: [0.7724]
2022-07-08 11:20:29.939844: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:20:30.417898: Suus1 maybe_update_lr lr: 0.006352
2022-07-08 11:20:30.420061: This epoch took 72.123398 s

2022-07-08 11:20:30.421960: 
epoch:  198
2022-07-08 11:21:37.774960: train loss : -0.8002
2022-07-08 11:21:42.380265: validation loss: -0.7256
2022-07-08 11:21:42.387453: Average global foreground Dice: [0.7793]
2022-07-08 11:21:42.389825: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:21:42.962386: Suus1 maybe_update_lr lr: 0.006333
2022-07-08 11:21:42.964759: This epoch took 72.540898 s

2022-07-08 11:21:42.966800: 
epoch:  199
2022-07-08 11:22:50.274252: train loss : -0.7896
2022-07-08 11:22:54.702423: validation loss: -0.7117
2022-07-08 11:22:54.726680: Average global foreground Dice: [0.7659]
2022-07-08 11:22:54.747468: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:22:55.305254: Suus1 maybe_update_lr lr: 0.006314
2022-07-08 11:22:55.307567: saving scheduled checkpoint file...
2022-07-08 11:22:55.348271: saving checkpoint...
2022-07-08 11:22:56.372006: done, saving took 1.06 seconds
2022-07-08 11:22:56.388316: done
2022-07-08 11:22:56.390744: This epoch took 73.421785 s

2022-07-08 11:22:56.392721: 
epoch:  200
2022-07-08 11:24:03.702944: train loss : -0.7930
2022-07-08 11:24:08.286697: validation loss: -0.7326
2022-07-08 11:24:08.306622: Average global foreground Dice: [0.7873]
2022-07-08 11:24:08.316603: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:24:08.957753: Suus1 maybe_update_lr lr: 0.006296
2022-07-08 11:24:08.959873: This epoch took 72.565208 s

2022-07-08 11:24:08.961947: 
epoch:  201
2022-07-08 11:25:16.162523: train loss : -0.8015
2022-07-08 11:25:20.598910: validation loss: -0.7178
2022-07-08 11:25:20.609051: Average global foreground Dice: [0.7718]
2022-07-08 11:25:20.611994: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:25:21.222512: Suus1 maybe_update_lr lr: 0.006277
2022-07-08 11:25:21.224216: This epoch took 72.260271 s

2022-07-08 11:25:21.226621: 
epoch:  202
2022-07-08 11:26:28.578097: train loss : -0.7980
2022-07-08 11:26:33.123076: validation loss: -0.7498
2022-07-08 11:26:33.133646: Average global foreground Dice: [0.7952]
2022-07-08 11:26:33.139235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:26:33.698574: Suus1 maybe_update_lr lr: 0.006258
2022-07-08 11:26:33.700778: This epoch took 72.472420 s

2022-07-08 11:26:33.702642: 
epoch:  203
2022-07-08 11:27:40.934705: train loss : -0.7909
2022-07-08 11:27:45.400599: validation loss: -0.7150
2022-07-08 11:27:45.404488: Average global foreground Dice: [0.7679]
2022-07-08 11:27:45.413328: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:27:45.883758: Suus1 maybe_update_lr lr: 0.006239
2022-07-08 11:27:45.885857: This epoch took 72.181355 s

2022-07-08 11:27:45.887786: 
epoch:  204
2022-07-08 11:28:53.133501: train loss : -0.7968
2022-07-08 11:28:57.595265: validation loss: -0.7254
2022-07-08 11:28:57.635813: Average global foreground Dice: [0.7702]
2022-07-08 11:28:57.666301: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:28:58.152658: Suus1 maybe_update_lr lr: 0.00622
2022-07-08 11:28:58.154836: This epoch took 72.265161 s

2022-07-08 11:28:58.156698: 
epoch:  205
2022-07-08 11:30:05.470140: train loss : -0.7896
2022-07-08 11:30:09.910675: validation loss: -0.7453
2022-07-08 11:30:09.933679: Average global foreground Dice: [0.7873]
2022-07-08 11:30:09.952022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:30:10.508343: Suus1 maybe_update_lr lr: 0.006201
2022-07-08 11:30:10.510706: This epoch took 72.352092 s

2022-07-08 11:30:10.512843: 
epoch:  206
2022-07-08 11:31:17.807293: train loss : -0.7983
2022-07-08 11:31:22.437349: validation loss: -0.7109
2022-07-08 11:31:22.454036: Average global foreground Dice: [0.7652]
2022-07-08 11:31:22.458107: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:31:23.022776: Suus1 maybe_update_lr lr: 0.006182
2022-07-08 11:31:23.025141: This epoch took 72.510419 s

2022-07-08 11:31:23.027189: 
epoch:  207
2022-07-08 11:32:30.272241: train loss : -0.7927
2022-07-08 11:32:34.615589: validation loss: -0.7300
2022-07-08 11:32:34.641230: Average global foreground Dice: [0.7895]
2022-07-08 11:32:34.675388: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:32:35.311973: Suus1 maybe_update_lr lr: 0.006163
2022-07-08 11:32:35.314132: This epoch took 72.284974 s

2022-07-08 11:32:35.316121: 
epoch:  208
2022-07-08 11:33:42.594842: train loss : -0.7941
2022-07-08 11:33:47.120596: validation loss: -0.7226
2022-07-08 11:33:47.139714: Average global foreground Dice: [0.7693]
2022-07-08 11:33:47.159314: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:33:47.749249: Suus1 maybe_update_lr lr: 0.006144
2022-07-08 11:33:47.751381: This epoch took 72.433354 s

2022-07-08 11:33:47.753997: 
epoch:  209
2022-07-08 11:34:54.943556: train loss : -0.7988
2022-07-08 11:34:59.350014: validation loss: -0.7476
2022-07-08 11:34:59.384781: Average global foreground Dice: [0.7959]
2022-07-08 11:34:59.391077: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:34:59.881745: Suus1 maybe_update_lr lr: 0.006125
2022-07-08 11:34:59.884084: This epoch took 72.128192 s

2022-07-08 11:34:59.886123: 
epoch:  210
2022-07-08 11:36:07.088102: train loss : -0.8046
2022-07-08 11:36:11.953116: validation loss: -0.7415
2022-07-08 11:36:11.966892: Average global foreground Dice: [0.7911]
2022-07-08 11:36:11.979825: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:36:12.524800: Suus1 maybe_update_lr lr: 0.006106
2022-07-08 11:36:12.527119: This epoch took 72.638929 s

2022-07-08 11:36:12.529148: 
epoch:  211
2022-07-08 11:37:19.663897: train loss : -0.7999
2022-07-08 11:37:24.085212: validation loss: -0.7267
2022-07-08 11:37:24.112823: Average global foreground Dice: [0.7814]
2022-07-08 11:37:24.118762: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:37:24.593679: Suus1 maybe_update_lr lr: 0.006087
2022-07-08 11:37:24.595884: This epoch took 72.064678 s

2022-07-08 11:37:24.597913: 
epoch:  212
2022-07-08 11:38:31.638200: train loss : -0.8017
2022-07-08 11:38:36.130617: validation loss: -0.7507
2022-07-08 11:38:36.155379: Average global foreground Dice: [0.7984]
2022-07-08 11:38:36.174487: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:38:36.739408: Suus1 maybe_update_lr lr: 0.006068
2022-07-08 11:38:36.741739: saving best epoch checkpoint...
2022-07-08 11:38:36.774827: saving checkpoint...
2022-07-08 11:38:37.814768: done, saving took 1.07 seconds
2022-07-08 11:38:37.828507: This epoch took 73.228747 s

2022-07-08 11:38:37.830513: 
epoch:  213
2022-07-08 11:39:44.858442: train loss : -0.7933
2022-07-08 11:39:49.359855: validation loss: -0.7402
2022-07-08 11:39:49.384980: Average global foreground Dice: [0.7774]
2022-07-08 11:39:49.416322: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:39:49.947389: Suus1 maybe_update_lr lr: 0.006049
2022-07-08 11:39:49.949528: This epoch took 72.116970 s

2022-07-08 11:39:49.951502: 
epoch:  214
2022-07-08 11:40:57.017426: train loss : -0.8085
2022-07-08 11:41:01.409779: validation loss: -0.7188
2022-07-08 11:41:01.417403: Average global foreground Dice: [0.773]
2022-07-08 11:41:01.423603: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:41:01.930044: Suus1 maybe_update_lr lr: 0.00603
2022-07-08 11:41:01.944328: This epoch took 71.990852 s

2022-07-08 11:41:01.957301: 
epoch:  215
2022-07-08 11:42:09.030070: train loss : -0.7791
2022-07-08 11:42:13.353878: validation loss: -0.7365
2022-07-08 11:42:13.362199: Average global foreground Dice: [0.7851]
2022-07-08 11:42:13.391933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:42:13.900445: Suus1 maybe_update_lr lr: 0.006011
2022-07-08 11:42:13.902865: This epoch took 71.933304 s

2022-07-08 11:42:13.904979: 
epoch:  216
2022-07-08 11:43:20.986614: train loss : -0.7931
2022-07-08 11:43:25.340834: validation loss: -0.7584
2022-07-08 11:43:25.345135: Average global foreground Dice: [0.7996]
2022-07-08 11:43:25.347442: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:43:25.791851: Suus1 maybe_update_lr lr: 0.005991
2022-07-08 11:43:25.794153: saving best epoch checkpoint...
2022-07-08 11:43:25.828567: saving checkpoint...
2022-07-08 11:43:26.774569: done, saving took 0.98 seconds
2022-07-08 11:43:26.789281: This epoch took 72.882270 s

2022-07-08 11:43:26.791453: 
epoch:  217
2022-07-08 11:44:33.900674: train loss : -0.7922
2022-07-08 11:44:38.279252: validation loss: -0.7473
2022-07-08 11:44:38.298348: Average global foreground Dice: [0.7904]
2022-07-08 11:44:38.306394: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:44:38.854903: Suus1 maybe_update_lr lr: 0.005972
2022-07-08 11:44:38.857182: saving best epoch checkpoint...
2022-07-08 11:44:38.913147: saving checkpoint...
2022-07-08 11:44:39.994992: done, saving took 1.14 seconds
2022-07-08 11:44:40.009448: This epoch took 73.215922 s

2022-07-08 11:44:40.011369: 
epoch:  218
2022-07-08 11:45:47.097605: train loss : -0.8007
2022-07-08 11:45:51.503928: validation loss: -0.7404
2022-07-08 11:45:51.515710: Average global foreground Dice: [0.7993]
2022-07-08 11:45:51.543377: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:45:52.122780: Suus1 maybe_update_lr lr: 0.005953
2022-07-08 11:45:52.125524: saving best epoch checkpoint...
2022-07-08 11:45:52.158872: saving checkpoint...
2022-07-08 11:45:53.236748: done, saving took 1.11 seconds
2022-07-08 11:45:53.252159: This epoch took 73.238900 s

2022-07-08 11:45:53.254287: 
epoch:  219
2022-07-08 11:47:00.309269: train loss : -0.7915
2022-07-08 11:47:04.668003: validation loss: -0.7323
2022-07-08 11:47:04.695669: Average global foreground Dice: [0.7821]
2022-07-08 11:47:04.747260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:47:05.266590: Suus1 maybe_update_lr lr: 0.005934
2022-07-08 11:47:05.268927: This epoch took 72.012174 s

2022-07-08 11:47:05.270887: 
epoch:  220
2022-07-08 11:48:12.329876: train loss : -0.7976
2022-07-08 11:48:16.788130: validation loss: -0.7524
2022-07-08 11:48:16.798857: Average global foreground Dice: [0.7994]
2022-07-08 11:48:16.806715: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:48:17.325978: Suus1 maybe_update_lr lr: 0.005915
2022-07-08 11:48:17.328408: saving best epoch checkpoint...
2022-07-08 11:48:17.360914: saving checkpoint...
2022-07-08 11:48:18.300871: done, saving took 0.97 seconds
2022-07-08 11:48:18.315482: This epoch took 73.042447 s

2022-07-08 11:48:18.317793: 
epoch:  221
2022-07-08 11:49:25.392139: train loss : -0.8014
2022-07-08 11:49:29.967285: validation loss: -0.7195
2022-07-08 11:49:29.977920: Average global foreground Dice: [0.7583]
2022-07-08 11:49:29.982261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:49:30.448259: Suus1 maybe_update_lr lr: 0.005896
2022-07-08 11:49:30.450916: This epoch took 72.130782 s

2022-07-08 11:49:30.457033: 
epoch:  222
2022-07-08 11:50:37.730230: train loss : -0.8113
2022-07-08 11:50:42.229831: validation loss: -0.7060
2022-07-08 11:50:42.252677: Average global foreground Dice: [0.7673]
2022-07-08 11:50:42.255230: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:50:42.746040: Suus1 maybe_update_lr lr: 0.005877
2022-07-08 11:50:42.748382: This epoch took 72.287618 s

2022-07-08 11:50:42.750266: 
epoch:  223
2022-07-08 11:51:49.889324: train loss : -0.7871
2022-07-08 11:51:54.249391: validation loss: -0.7449
2022-07-08 11:51:54.281453: Average global foreground Dice: [0.7866]
2022-07-08 11:51:54.283741: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:51:54.751238: Suus1 maybe_update_lr lr: 0.005858
2022-07-08 11:51:54.754133: This epoch took 72.001857 s

2022-07-08 11:51:54.756229: 
epoch:  224
2022-07-08 11:53:01.942971: train loss : -0.7956
2022-07-08 11:53:06.352866: validation loss: -0.7206
2022-07-08 11:53:06.356785: Average global foreground Dice: [0.7706]
2022-07-08 11:53:06.373745: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:53:06.834808: Suus1 maybe_update_lr lr: 0.005839
2022-07-08 11:53:06.837120: This epoch took 72.078916 s

2022-07-08 11:53:06.839201: 
epoch:  225
2022-07-08 11:54:14.075795: train loss : -0.7881
2022-07-08 11:54:18.562446: validation loss: -0.7265
2022-07-08 11:54:18.568714: Average global foreground Dice: [0.7763]
2022-07-08 11:54:18.571830: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:54:19.000539: Suus1 maybe_update_lr lr: 0.00582
2022-07-08 11:54:19.002956: This epoch took 72.161555 s

2022-07-08 11:54:19.004967: 
epoch:  226
2022-07-08 11:55:26.161212: train loss : -0.8042
2022-07-08 11:55:30.486035: validation loss: -0.7523
2022-07-08 11:55:30.501554: Average global foreground Dice: [0.8046]
2022-07-08 11:55:30.520811: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:55:30.970733: Suus1 maybe_update_lr lr: 0.005801
2022-07-08 11:55:30.972968: This epoch took 71.966095 s

2022-07-08 11:55:30.975030: 
epoch:  227
2022-07-08 11:56:38.292392: train loss : -0.8072
2022-07-08 11:56:42.890612: validation loss: -0.7557
2022-07-08 11:56:42.910577: Average global foreground Dice: [0.8001]
2022-07-08 11:56:42.923127: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:56:43.451967: Suus1 maybe_update_lr lr: 0.005781
2022-07-08 11:56:43.454400: This epoch took 72.477357 s

2022-07-08 11:56:43.456537: 
epoch:  228
2022-07-08 11:57:50.600231: train loss : -0.8097
2022-07-08 11:57:54.924873: validation loss: -0.7291
2022-07-08 11:57:54.932363: Average global foreground Dice: [0.7784]
2022-07-08 11:57:54.950263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:57:55.544371: Suus1 maybe_update_lr lr: 0.005762
2022-07-08 11:57:55.546440: This epoch took 72.087944 s

2022-07-08 11:57:55.548354: 
epoch:  229
2022-07-08 11:59:02.795422: train loss : -0.7963
2022-07-08 11:59:07.283636: validation loss: -0.7008
2022-07-08 11:59:07.297653: Average global foreground Dice: [0.7636]
2022-07-08 11:59:07.300064: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 11:59:07.870962: Suus1 maybe_update_lr lr: 0.005743
2022-07-08 11:59:07.873241: This epoch took 72.323100 s

2022-07-08 11:59:07.875142: 
epoch:  230
2022-07-08 12:00:15.093637: train loss : -0.7961
2022-07-08 12:00:19.538310: validation loss: -0.7020
2022-07-08 12:00:19.555640: Average global foreground Dice: [0.7493]
2022-07-08 12:00:19.565289: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:00:20.064197: Suus1 maybe_update_lr lr: 0.005724
2022-07-08 12:00:20.066374: This epoch took 72.189408 s

2022-07-08 12:00:20.068375: 
epoch:  231
2022-07-08 12:01:27.352163: train loss : -0.7911
2022-07-08 12:01:31.795787: validation loss: -0.7479
2022-07-08 12:01:31.799378: Average global foreground Dice: [0.796]
2022-07-08 12:01:31.800899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:01:32.280289: Suus1 maybe_update_lr lr: 0.005705
2022-07-08 12:01:32.282459: This epoch took 72.212061 s

2022-07-08 12:01:32.284421: 
epoch:  232
2022-07-08 12:02:39.529692: train loss : -0.7933
2022-07-08 12:02:43.953597: validation loss: -0.7305
2022-07-08 12:02:43.985518: Average global foreground Dice: [0.782]
2022-07-08 12:02:44.000335: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:02:44.549328: Suus1 maybe_update_lr lr: 0.005686
2022-07-08 12:02:44.551505: This epoch took 72.265169 s

2022-07-08 12:02:44.553471: 
epoch:  233
2022-07-08 12:03:51.833650: train loss : -0.8016
2022-07-08 12:03:56.266070: validation loss: -0.7453
2022-07-08 12:03:56.296907: Average global foreground Dice: [0.7987]
2022-07-08 12:03:56.307708: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:03:56.993636: Suus1 maybe_update_lr lr: 0.005667
2022-07-08 12:03:56.996070: This epoch took 72.440593 s

2022-07-08 12:03:56.998010: 
epoch:  234
2022-07-08 12:05:04.419719: train loss : -0.8050
2022-07-08 12:05:08.972805: validation loss: -0.7450
2022-07-08 12:05:09.012156: Average global foreground Dice: [0.7961]
2022-07-08 12:05:09.015202: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:05:09.529869: Suus1 maybe_update_lr lr: 0.005647
2022-07-08 12:05:09.532252: This epoch took 72.532294 s

2022-07-08 12:05:09.534437: 
epoch:  235
2022-07-08 12:06:16.965708: train loss : -0.7999
2022-07-08 12:06:21.476344: validation loss: -0.7340
2022-07-08 12:06:21.479638: Average global foreground Dice: [0.7826]
2022-07-08 12:06:21.481844: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:06:21.946481: Suus1 maybe_update_lr lr: 0.005628
2022-07-08 12:06:21.949226: This epoch took 72.412642 s

2022-07-08 12:06:21.951465: 
epoch:  236
2022-07-08 12:07:29.239917: train loss : -0.7820
2022-07-08 12:07:33.601161: validation loss: -0.7447
2022-07-08 12:07:33.608056: Average global foreground Dice: [0.7851]
2022-07-08 12:07:33.611654: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:07:34.087904: Suus1 maybe_update_lr lr: 0.005609
2022-07-08 12:07:34.089898: This epoch took 72.136195 s

2022-07-08 12:07:34.092608: 
epoch:  237
2022-07-08 12:08:41.409280: train loss : -0.7811
2022-07-08 12:08:45.776516: validation loss: -0.7144
2022-07-08 12:08:45.786137: Average global foreground Dice: [0.7681]
2022-07-08 12:08:45.805285: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:08:46.402751: Suus1 maybe_update_lr lr: 0.00559
2022-07-08 12:08:46.404963: This epoch took 72.310468 s

2022-07-08 12:08:46.406949: 
epoch:  238
2022-07-08 12:09:53.750088: train loss : -0.7925
2022-07-08 12:09:58.065908: validation loss: -0.7383
2022-07-08 12:09:58.130476: Average global foreground Dice: [0.7898]
2022-07-08 12:09:58.149289: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:09:58.647678: Suus1 maybe_update_lr lr: 0.005571
2022-07-08 12:09:58.649791: This epoch took 72.240885 s

2022-07-08 12:09:58.651569: 
epoch:  239
2022-07-08 12:11:06.033969: train loss : -0.8062
2022-07-08 12:11:10.426803: validation loss: -0.7318
2022-07-08 12:11:10.429740: Average global foreground Dice: [0.7836]
2022-07-08 12:11:10.431762: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:11:10.919834: Suus1 maybe_update_lr lr: 0.005551
2022-07-08 12:11:10.921981: This epoch took 72.268562 s

2022-07-08 12:11:10.923944: 
epoch:  240
2022-07-08 12:12:18.280459: train loss : -0.8099
2022-07-08 12:12:22.745090: validation loss: -0.7025
2022-07-08 12:12:22.779549: Average global foreground Dice: [0.7612]
2022-07-08 12:12:22.784588: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:12:23.257395: Suus1 maybe_update_lr lr: 0.005532
2022-07-08 12:12:23.259592: This epoch took 72.333813 s

2022-07-08 12:12:23.261611: 
epoch:  241
2022-07-08 12:13:30.655243: train loss : -0.8073
2022-07-08 12:13:35.022835: validation loss: -0.7477
2022-07-08 12:13:35.037585: Average global foreground Dice: [0.7903]
2022-07-08 12:13:35.069415: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:13:35.613479: Suus1 maybe_update_lr lr: 0.005513
2022-07-08 12:13:35.615608: This epoch took 72.352038 s

2022-07-08 12:13:35.617468: 
epoch:  242
2022-07-08 12:14:43.026965: train loss : -0.8003
2022-07-08 12:14:47.494025: validation loss: -0.7115
2022-07-08 12:14:47.509195: Average global foreground Dice: [0.7655]
2022-07-08 12:14:47.512250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:14:48.125002: Suus1 maybe_update_lr lr: 0.005494
2022-07-08 12:14:48.127205: This epoch took 72.507752 s

2022-07-08 12:14:48.129088: 
epoch:  243
2022-07-08 12:15:55.493870: train loss : -0.8192
2022-07-08 12:15:59.982744: validation loss: -0.7338
2022-07-08 12:16:00.019531: Average global foreground Dice: [0.7783]
2022-07-08 12:16:00.039781: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:16:00.612706: Suus1 maybe_update_lr lr: 0.005474
2022-07-08 12:16:00.615163: This epoch took 72.484299 s

2022-07-08 12:16:00.633121: 
epoch:  244
2022-07-08 12:17:08.037917: train loss : -0.8040
2022-07-08 12:17:12.473988: validation loss: -0.7386
2022-07-08 12:17:12.479944: Average global foreground Dice: [0.7894]
2022-07-08 12:17:12.488143: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:17:12.981629: Suus1 maybe_update_lr lr: 0.005455
2022-07-08 12:17:13.003317: This epoch took 72.367751 s

2022-07-08 12:17:13.025254: 
epoch:  245
2022-07-08 12:18:20.420069: train loss : -0.8149
2022-07-08 12:18:24.896166: validation loss: -0.7669
2022-07-08 12:18:24.922153: Average global foreground Dice: [0.8133]
2022-07-08 12:18:24.941836: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:18:25.479625: Suus1 maybe_update_lr lr: 0.005436
2022-07-08 12:18:25.490282: This epoch took 72.447034 s

2022-07-08 12:18:25.493386: 
epoch:  246
2022-07-08 12:19:32.916317: train loss : -0.8095
2022-07-08 12:19:37.472631: validation loss: -0.7257
2022-07-08 12:19:37.488459: Average global foreground Dice: [0.7767]
2022-07-08 12:19:37.504940: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:19:38.180974: Suus1 maybe_update_lr lr: 0.005417
2022-07-08 12:19:38.183137: This epoch took 72.685864 s

2022-07-08 12:19:38.185153: 
epoch:  247
2022-07-08 12:20:45.649620: train loss : -0.8118
2022-07-08 12:20:50.079516: validation loss: -0.7310
2022-07-08 12:20:50.103705: Average global foreground Dice: [0.7854]
2022-07-08 12:20:50.139769: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:20:50.698880: Suus1 maybe_update_lr lr: 0.005397
2022-07-08 12:20:50.701036: This epoch took 72.513935 s

2022-07-08 12:20:50.702886: 
epoch:  248
2022-07-08 12:21:58.026005: train loss : -0.8172
2022-07-08 12:22:02.529675: validation loss: -0.7497
2022-07-08 12:22:02.563777: Average global foreground Dice: [0.7906]
2022-07-08 12:22:02.607290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:22:03.153204: Suus1 maybe_update_lr lr: 0.005378
2022-07-08 12:22:03.155628: This epoch took 72.450947 s

2022-07-08 12:22:03.157427: 
epoch:  249
2022-07-08 12:23:10.574199: train loss : -0.8167
2022-07-08 12:23:15.000423: validation loss: -0.7338
2022-07-08 12:23:15.003950: Average global foreground Dice: [0.7836]
2022-07-08 12:23:15.006084: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:23:15.523102: Suus1 maybe_update_lr lr: 0.005359
2022-07-08 12:23:15.525151: saving scheduled checkpoint file...
2022-07-08 12:23:15.557539: saving checkpoint...
2022-07-08 12:23:16.465719: done, saving took 0.94 seconds
2022-07-08 12:23:16.480967: done
2022-07-08 12:23:16.483014: This epoch took 73.323806 s

2022-07-08 12:23:16.485150: 
epoch:  250
2022-07-08 12:24:23.710989: train loss : -0.8179
2022-07-08 12:24:28.135677: validation loss: -0.7707
2022-07-08 12:24:28.148792: Average global foreground Dice: [0.8107]
2022-07-08 12:24:28.169081: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:24:28.615272: Suus1 maybe_update_lr lr: 0.00534
2022-07-08 12:24:28.617735: saving best epoch checkpoint...
2022-07-08 12:24:28.664445: saving checkpoint...
2022-07-08 12:24:29.681030: done, saving took 1.06 seconds
2022-07-08 12:24:29.695942: This epoch took 73.208719 s

2022-07-08 12:24:29.697990: 
epoch:  251
2022-07-08 12:25:36.908240: train loss : -0.8176
2022-07-08 12:25:41.235683: validation loss: -0.7256
2022-07-08 12:25:41.239337: Average global foreground Dice: [0.7732]
2022-07-08 12:25:41.241541: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:25:41.712980: Suus1 maybe_update_lr lr: 0.00532
2022-07-08 12:25:41.715036: This epoch took 72.015139 s

2022-07-08 12:25:41.716952: 
epoch:  252
2022-07-08 12:26:49.079890: train loss : -0.8123
2022-07-08 12:26:53.651489: validation loss: -0.7659
2022-07-08 12:26:53.654607: Average global foreground Dice: [0.8013]
2022-07-08 12:26:53.664703: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:26:54.138063: Suus1 maybe_update_lr lr: 0.005301
2022-07-08 12:26:54.140332: saving best epoch checkpoint...
2022-07-08 12:26:54.195279: saving checkpoint...
2022-07-08 12:26:55.250626: done, saving took 1.11 seconds
2022-07-08 12:26:55.265564: This epoch took 73.546700 s

2022-07-08 12:26:55.267574: 
epoch:  253
2022-07-08 12:28:02.379810: train loss : -0.8240
2022-07-08 12:28:06.726394: validation loss: -0.7030
2022-07-08 12:28:06.732795: Average global foreground Dice: [0.755]
2022-07-08 12:28:06.734800: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:28:07.229775: Suus1 maybe_update_lr lr: 0.005282
2022-07-08 12:28:07.232013: This epoch took 71.962491 s

2022-07-08 12:28:07.233806: 
epoch:  254
2022-07-08 12:29:14.379611: train loss : -0.8183
2022-07-08 12:29:18.798497: validation loss: -0.7738
2022-07-08 12:29:18.802863: Average global foreground Dice: [0.8119]
2022-07-08 12:29:18.807855: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:29:19.318694: Suus1 maybe_update_lr lr: 0.005262
2022-07-08 12:29:19.320909: This epoch took 72.085134 s

2022-07-08 12:29:19.322876: 
epoch:  255
2022-07-08 12:30:26.618731: train loss : -0.8242
2022-07-08 12:30:31.251269: validation loss: -0.7264
2022-07-08 12:30:31.257458: Average global foreground Dice: [0.7744]
2022-07-08 12:30:31.262232: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:30:31.818260: Suus1 maybe_update_lr lr: 0.005243
2022-07-08 12:30:31.822887: This epoch took 72.498106 s

2022-07-08 12:30:31.825029: 
epoch:  256
2022-07-08 12:31:39.074607: train loss : -0.8112
2022-07-08 12:31:43.492524: validation loss: -0.7435
2022-07-08 12:31:43.528792: Average global foreground Dice: [0.7923]
2022-07-08 12:31:43.531194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:31:44.061992: Suus1 maybe_update_lr lr: 0.005224
2022-07-08 12:31:44.064150: This epoch took 72.237194 s

2022-07-08 12:31:44.066062: 
epoch:  257
2022-07-08 12:32:51.440453: train loss : -0.8194
2022-07-08 12:32:55.871150: validation loss: -0.7685
2022-07-08 12:32:55.889546: Average global foreground Dice: [0.808]
2022-07-08 12:32:55.909269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:32:56.381990: Suus1 maybe_update_lr lr: 0.005204
2022-07-08 12:32:56.384187: saving best epoch checkpoint...
2022-07-08 12:32:56.418294: saving checkpoint...
2022-07-08 12:32:57.398481: done, saving took 1.01 seconds
2022-07-08 12:32:57.412311: This epoch took 73.344405 s

2022-07-08 12:32:57.414485: 
epoch:  258
2022-07-08 12:34:04.671788: train loss : -0.8218
2022-07-08 12:34:09.158334: validation loss: -0.7567
2022-07-08 12:34:09.176136: Average global foreground Dice: [0.8029]
2022-07-08 12:34:09.181247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:34:09.633048: Suus1 maybe_update_lr lr: 0.005185
2022-07-08 12:34:09.635481: saving best epoch checkpoint...
2022-07-08 12:34:09.671515: saving checkpoint...
2022-07-08 12:34:10.653026: done, saving took 1.02 seconds
2022-07-08 12:34:10.666762: This epoch took 73.250249 s

2022-07-08 12:34:10.668918: 
epoch:  259
2022-07-08 12:35:17.881531: train loss : -0.8220
2022-07-08 12:35:22.241796: validation loss: -0.7740
2022-07-08 12:35:22.260638: Average global foreground Dice: [0.8116]
2022-07-08 12:35:22.295664: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:35:22.821231: Suus1 maybe_update_lr lr: 0.005166
2022-07-08 12:35:22.823331: saving best epoch checkpoint...
2022-07-08 12:35:22.855153: saving checkpoint...
2022-07-08 12:35:23.808484: done, saving took 0.98 seconds
2022-07-08 12:35:23.821839: This epoch took 73.150839 s

2022-07-08 12:35:23.824034: 
epoch:  260
2022-07-08 12:36:31.093812: train loss : -0.8262
2022-07-08 12:36:35.686792: validation loss: -0.6945
2022-07-08 12:36:35.720114: Average global foreground Dice: [0.74]
2022-07-08 12:36:35.749681: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:36:36.287622: Suus1 maybe_update_lr lr: 0.005146
2022-07-08 12:36:36.289861: This epoch took 72.463887 s

2022-07-08 12:36:36.291686: 
epoch:  261
2022-07-08 12:37:43.634830: train loss : -0.8160
2022-07-08 12:37:48.141662: validation loss: -0.7197
2022-07-08 12:37:48.171520: Average global foreground Dice: [0.7736]
2022-07-08 12:37:48.193669: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:37:48.911475: Suus1 maybe_update_lr lr: 0.005127
2022-07-08 12:37:48.914041: This epoch took 72.620368 s

2022-07-08 12:37:48.939425: 
epoch:  262
2022-07-08 12:38:56.261614: train loss : -0.8214
2022-07-08 12:39:00.626684: validation loss: -0.7314
2022-07-08 12:39:00.650042: Average global foreground Dice: [0.7788]
2022-07-08 12:39:00.674696: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:39:01.331847: Suus1 maybe_update_lr lr: 0.005107
2022-07-08 12:39:01.334246: This epoch took 72.352285 s

2022-07-08 12:39:01.336054: 
epoch:  263
2022-07-08 12:40:08.697570: train loss : -0.8115
2022-07-08 12:40:13.256506: validation loss: -0.7374
2022-07-08 12:40:13.269571: Average global foreground Dice: [0.784]
2022-07-08 12:40:13.282728: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:40:13.805795: Suus1 maybe_update_lr lr: 0.005088
2022-07-08 12:40:13.808347: This epoch took 72.470434 s

2022-07-08 12:40:13.810397: 
epoch:  264
2022-07-08 12:41:21.190979: train loss : -0.8160
2022-07-08 12:41:25.612045: validation loss: -0.7416
2022-07-08 12:41:25.615579: Average global foreground Dice: [0.7954]
2022-07-08 12:41:25.618277: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:41:26.064237: Suus1 maybe_update_lr lr: 0.005069
2022-07-08 12:41:26.066822: This epoch took 72.253397 s

2022-07-08 12:41:26.069751: 
epoch:  265
2022-07-08 12:42:33.382098: train loss : -0.8263
2022-07-08 12:42:37.945121: validation loss: -0.7680
2022-07-08 12:42:37.961515: Average global foreground Dice: [0.8024]
2022-07-08 12:42:37.966463: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:42:38.502159: Suus1 maybe_update_lr lr: 0.005049
2022-07-08 12:42:38.507728: This epoch took 72.436070 s

2022-07-08 12:42:38.519116: 
epoch:  266
2022-07-08 12:43:45.879675: train loss : -0.8267
2022-07-08 12:43:50.223376: validation loss: -0.7242
2022-07-08 12:43:50.227197: Average global foreground Dice: [0.7738]
2022-07-08 12:43:50.230911: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:43:50.751860: Suus1 maybe_update_lr lr: 0.00503
2022-07-08 12:43:50.754001: This epoch took 72.230171 s

2022-07-08 12:43:50.755958: 
epoch:  267
2022-07-08 12:44:58.066158: train loss : -0.8204
2022-07-08 12:45:02.409315: validation loss: -0.7609
2022-07-08 12:45:02.413181: Average global foreground Dice: [0.8033]
2022-07-08 12:45:02.415183: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:45:02.904774: Suus1 maybe_update_lr lr: 0.00501
2022-07-08 12:45:02.907043: This epoch took 72.149299 s

2022-07-08 12:45:02.909249: 
epoch:  268
2022-07-08 12:46:10.277992: train loss : -0.8229
2022-07-08 12:46:14.640215: validation loss: -0.7582
2022-07-08 12:46:14.663787: Average global foreground Dice: [0.8014]
2022-07-08 12:46:14.672841: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:46:15.153106: Suus1 maybe_update_lr lr: 0.004991
2022-07-08 12:46:15.155154: This epoch took 72.243758 s

2022-07-08 12:46:15.156952: 
epoch:  269
2022-07-08 12:47:22.442394: train loss : -0.8343
2022-07-08 12:47:26.757296: validation loss: -0.7503
2022-07-08 12:47:26.761759: Average global foreground Dice: [0.798]
2022-07-08 12:47:26.765970: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:47:27.382411: Suus1 maybe_update_lr lr: 0.004971
2022-07-08 12:47:27.384707: This epoch took 72.225893 s

2022-07-08 12:47:27.386559: 
epoch:  270
2022-07-08 12:48:34.891366: train loss : -0.8197
2022-07-08 12:48:39.182725: validation loss: -0.7396
2022-07-08 12:48:39.216348: Average global foreground Dice: [0.7785]
2022-07-08 12:48:39.229345: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:48:39.769677: Suus1 maybe_update_lr lr: 0.004952
2022-07-08 12:48:39.771932: This epoch took 72.383530 s

2022-07-08 12:48:39.773972: 
epoch:  271
2022-07-08 12:49:47.071168: train loss : -0.8166
2022-07-08 12:49:51.535410: validation loss: -0.7257
2022-07-08 12:49:51.549820: Average global foreground Dice: [0.7749]
2022-07-08 12:49:51.564834: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:49:52.164572: Suus1 maybe_update_lr lr: 0.004933
2022-07-08 12:49:52.166700: This epoch took 72.390851 s

2022-07-08 12:49:52.168613: 
epoch:  272
2022-07-08 12:50:59.479397: train loss : -0.8232
2022-07-08 12:51:03.862233: validation loss: -0.7116
2022-07-08 12:51:03.889827: Average global foreground Dice: [0.7665]
2022-07-08 12:51:03.892013: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:51:04.337243: Suus1 maybe_update_lr lr: 0.004913
2022-07-08 12:51:04.339774: This epoch took 72.169338 s

2022-07-08 12:51:04.341855: 
epoch:  273
2022-07-08 12:52:11.741378: train loss : -0.8247
2022-07-08 12:52:16.195774: validation loss: -0.7587
2022-07-08 12:52:16.200764: Average global foreground Dice: [0.8047]
2022-07-08 12:52:16.203131: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:52:16.670648: Suus1 maybe_update_lr lr: 0.004894
2022-07-08 12:52:16.672805: This epoch took 72.328932 s

2022-07-08 12:52:16.674917: 
epoch:  274
2022-07-08 12:53:24.084359: train loss : -0.8113
2022-07-08 12:53:28.419526: validation loss: -0.7294
2022-07-08 12:53:28.430311: Average global foreground Dice: [0.7821]
2022-07-08 12:53:28.438386: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:53:28.921249: Suus1 maybe_update_lr lr: 0.004874
2022-07-08 12:53:28.923582: This epoch took 72.246705 s

2022-07-08 12:53:28.925734: 
epoch:  275
2022-07-08 12:54:36.338850: train loss : -0.8128
2022-07-08 12:54:40.874578: validation loss: -0.7322
2022-07-08 12:54:40.877882: Average global foreground Dice: [0.7942]
2022-07-08 12:54:40.882069: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:54:41.396752: Suus1 maybe_update_lr lr: 0.004855
2022-07-08 12:54:41.429346: This epoch took 72.501493 s

2022-07-08 12:54:41.462250: 
epoch:  276
2022-07-08 12:55:48.889623: train loss : -0.8137
2022-07-08 12:55:53.315300: validation loss: -0.7622
2022-07-08 12:55:53.344482: Average global foreground Dice: [0.8087]
2022-07-08 12:55:53.365086: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:55:53.857788: Suus1 maybe_update_lr lr: 0.004835
2022-07-08 12:55:53.860022: This epoch took 72.364752 s

2022-07-08 12:55:53.862051: 
epoch:  277
2022-07-08 12:57:01.186355: train loss : -0.8207
2022-07-08 12:57:05.791867: validation loss: -0.7660
2022-07-08 12:57:05.801484: Average global foreground Dice: [0.8053]
2022-07-08 12:57:05.819319: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:57:06.311722: Suus1 maybe_update_lr lr: 0.004816
2022-07-08 12:57:06.313892: This epoch took 72.449818 s

2022-07-08 12:57:06.315823: 
epoch:  278
2022-07-08 12:58:13.732586: train loss : -0.8250
2022-07-08 12:58:18.231325: validation loss: -0.7476
2022-07-08 12:58:18.236722: Average global foreground Dice: [0.7921]
2022-07-08 12:58:18.247777: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:58:18.786430: Suus1 maybe_update_lr lr: 0.004796
2022-07-08 12:58:18.788463: This epoch took 72.470728 s

2022-07-08 12:58:18.790250: 
epoch:  279
2022-07-08 12:59:26.200059: train loss : -0.8276
2022-07-08 12:59:30.488626: validation loss: -0.7509
2022-07-08 12:59:30.505239: Average global foreground Dice: [0.7976]
2022-07-08 12:59:30.530445: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 12:59:30.993428: Suus1 maybe_update_lr lr: 0.004776
2022-07-08 12:59:30.995609: This epoch took 72.203414 s

2022-07-08 12:59:30.997760: 
epoch:  280
2022-07-08 13:00:38.314150: train loss : -0.8218
2022-07-08 13:00:42.772691: validation loss: -0.7508
2022-07-08 13:00:42.775010: Average global foreground Dice: [0.8046]
2022-07-08 13:00:42.788269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:00:43.331812: Suus1 maybe_update_lr lr: 0.004757
2022-07-08 13:00:43.333957: saving best epoch checkpoint...
2022-07-08 13:00:43.366175: saving checkpoint...
2022-07-08 13:00:44.278164: done, saving took 0.94 seconds
2022-07-08 13:00:44.292349: This epoch took 73.292674 s

2022-07-08 13:00:44.294555: 
epoch:  281
2022-07-08 13:01:51.592323: train loss : -0.8187
2022-07-08 13:01:56.010327: validation loss: -0.7542
2022-07-08 13:01:56.038644: Average global foreground Dice: [0.7971]
2022-07-08 13:01:56.065288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:01:56.571639: Suus1 maybe_update_lr lr: 0.004737
2022-07-08 13:01:56.574070: saving best epoch checkpoint...
2022-07-08 13:01:56.607143: saving checkpoint...
2022-07-08 13:01:57.530211: done, saving took 0.95 seconds
2022-07-08 13:01:57.545051: This epoch took 73.248465 s

2022-07-08 13:01:57.547355: 
epoch:  282
2022-07-08 13:03:04.951448: train loss : -0.8232
2022-07-08 13:03:09.392765: validation loss: -0.7559
2022-07-08 13:03:09.395800: Average global foreground Dice: [0.803]
2022-07-08 13:03:09.398540: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:03:09.919312: Suus1 maybe_update_lr lr: 0.004718
2022-07-08 13:03:09.921553: saving best epoch checkpoint...
2022-07-08 13:03:09.973610: saving checkpoint...
2022-07-08 13:03:10.929939: done, saving took 1.01 seconds
2022-07-08 13:03:10.944821: This epoch took 73.395575 s

2022-07-08 13:03:10.946848: 
epoch:  283
2022-07-08 13:04:18.276173: train loss : -0.8235
2022-07-08 13:04:22.722078: validation loss: -0.7556
2022-07-08 13:04:22.724950: Average global foreground Dice: [0.7903]
2022-07-08 13:04:22.728023: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:04:23.186854: Suus1 maybe_update_lr lr: 0.004698
2022-07-08 13:04:23.188948: This epoch took 72.240225 s

2022-07-08 13:04:23.190832: 
epoch:  284
2022-07-08 13:05:30.450413: train loss : -0.8299
2022-07-08 13:05:34.829690: validation loss: -0.7669
2022-07-08 13:05:34.837708: Average global foreground Dice: [0.8053]
2022-07-08 13:05:34.839939: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:05:35.310914: Suus1 maybe_update_lr lr: 0.004679
2022-07-08 13:05:35.313649: saving best epoch checkpoint...
2022-07-08 13:05:35.361893: saving checkpoint...
2022-07-08 13:05:36.413355: done, saving took 1.10 seconds
2022-07-08 13:05:36.426688: This epoch took 73.234049 s

2022-07-08 13:05:36.428788: 
epoch:  285
2022-07-08 13:06:43.655725: train loss : -0.8282
2022-07-08 13:06:48.158400: validation loss: -0.7406
2022-07-08 13:06:48.181695: Average global foreground Dice: [0.7856]
2022-07-08 13:06:48.203262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:06:48.790036: Suus1 maybe_update_lr lr: 0.004659
2022-07-08 13:06:48.792381: This epoch took 72.361388 s

2022-07-08 13:06:48.794339: 
epoch:  286
2022-07-08 13:07:56.124718: train loss : -0.8231
2022-07-08 13:08:00.629782: validation loss: -0.7639
2022-07-08 13:08:00.640268: Average global foreground Dice: [0.8031]
2022-07-08 13:08:00.646156: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:08:01.104916: Suus1 maybe_update_lr lr: 0.004639
2022-07-08 13:08:01.131601: This epoch took 72.335404 s

2022-07-08 13:08:01.147186: 
epoch:  287
2022-07-08 13:09:08.471592: train loss : -0.8321
2022-07-08 13:09:12.957298: validation loss: -0.7888
2022-07-08 13:09:12.960539: Average global foreground Dice: [0.8296]
2022-07-08 13:09:12.962879: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:09:13.453321: Suus1 maybe_update_lr lr: 0.00462
2022-07-08 13:09:13.455627: saving best epoch checkpoint...
2022-07-08 13:09:13.488894: saving checkpoint...
2022-07-08 13:09:14.419220: done, saving took 0.96 seconds
2022-07-08 13:09:14.433336: This epoch took 73.279696 s

2022-07-08 13:09:14.435524: 
epoch:  288
2022-07-08 13:10:21.710270: train loss : -0.8215
2022-07-08 13:10:26.025836: validation loss: -0.7234
2022-07-08 13:10:26.040233: Average global foreground Dice: [0.7709]
2022-07-08 13:10:26.042303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:10:26.517595: Suus1 maybe_update_lr lr: 0.0046
2022-07-08 13:10:26.519860: This epoch took 72.082342 s

2022-07-08 13:10:26.521768: 
epoch:  289
2022-07-08 13:11:33.844315: train loss : -0.8304
2022-07-08 13:11:38.179463: validation loss: -0.7619
2022-07-08 13:11:38.218669: Average global foreground Dice: [0.8025]
2022-07-08 13:11:38.231258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:11:38.776186: Suus1 maybe_update_lr lr: 0.004581
2022-07-08 13:11:38.778438: This epoch took 72.254776 s

2022-07-08 13:11:38.780304: 
epoch:  290
2022-07-08 13:12:46.059030: train loss : -0.8350
2022-07-08 13:12:50.651587: validation loss: -0.7441
2022-07-08 13:12:50.657900: Average global foreground Dice: [0.7926]
2022-07-08 13:12:50.679278: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:12:51.276829: Suus1 maybe_update_lr lr: 0.004561
2022-07-08 13:12:51.279096: This epoch took 72.496869 s

2022-07-08 13:12:51.281230: 
epoch:  291
2022-07-08 13:13:58.707132: train loss : -0.8232
2022-07-08 13:14:03.050352: validation loss: -0.7068
2022-07-08 13:14:03.081793: Average global foreground Dice: [0.7624]
2022-07-08 13:14:03.103279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:14:03.646334: Suus1 maybe_update_lr lr: 0.004541
2022-07-08 13:14:03.648442: This epoch took 72.365193 s

2022-07-08 13:14:03.650422: 
epoch:  292
2022-07-08 13:15:11.097212: train loss : -0.8175
2022-07-08 13:15:15.548318: validation loss: -0.6800
2022-07-08 13:15:15.568401: Average global foreground Dice: [0.74]
2022-07-08 13:15:15.594212: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:15:16.096890: Suus1 maybe_update_lr lr: 0.004522
2022-07-08 13:15:16.116331: This epoch took 72.464085 s

2022-07-08 13:15:16.124700: 
epoch:  293
2022-07-08 13:16:23.523621: train loss : -0.8194
2022-07-08 13:16:28.223172: validation loss: -0.7721
2022-07-08 13:16:28.244977: Average global foreground Dice: [0.8116]
2022-07-08 13:16:28.271414: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:16:28.826299: Suus1 maybe_update_lr lr: 0.004502
2022-07-08 13:16:28.828591: This epoch took 72.701786 s

2022-07-08 13:16:28.830623: 
epoch:  294
2022-07-08 13:17:36.180629: train loss : -0.8231
2022-07-08 13:17:40.555156: validation loss: -0.7589
2022-07-08 13:17:40.558234: Average global foreground Dice: [0.8063]
2022-07-08 13:17:40.560616: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:17:41.059639: Suus1 maybe_update_lr lr: 0.004482
2022-07-08 13:17:41.062144: This epoch took 72.229593 s

2022-07-08 13:17:41.070124: 
epoch:  295
2022-07-08 13:18:48.457182: train loss : -0.8362
2022-07-08 13:18:52.962748: validation loss: -0.7547
2022-07-08 13:18:52.968257: Average global foreground Dice: [0.7952]
2022-07-08 13:18:52.970446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:18:53.557237: Suus1 maybe_update_lr lr: 0.004463
2022-07-08 13:18:53.559477: This epoch took 72.485828 s

2022-07-08 13:18:53.561531: 
epoch:  296
2022-07-08 13:20:00.878082: train loss : -0.8299
2022-07-08 13:20:05.671466: validation loss: -0.7594
2022-07-08 13:20:05.699268: Average global foreground Dice: [0.8065]
2022-07-08 13:20:05.718989: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:20:06.285213: Suus1 maybe_update_lr lr: 0.004443
2022-07-08 13:20:06.302023: This epoch took 72.738469 s

2022-07-08 13:20:06.309352: 
epoch:  297
2022-07-08 13:21:13.718240: train loss : -0.8309
2022-07-08 13:21:18.066199: validation loss: -0.7444
2022-07-08 13:21:18.084225: Average global foreground Dice: [0.7901]
2022-07-08 13:21:18.088852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:21:18.550248: Suus1 maybe_update_lr lr: 0.004423
2022-07-08 13:21:18.552600: This epoch took 72.241080 s

2022-07-08 13:21:18.554488: 
epoch:  298
2022-07-08 13:22:25.955371: train loss : -0.8297
2022-07-08 13:22:30.370647: validation loss: -0.7686
2022-07-08 13:22:30.383661: Average global foreground Dice: [0.8069]
2022-07-08 13:22:30.385774: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:22:30.853883: Suus1 maybe_update_lr lr: 0.004404
2022-07-08 13:22:30.899468: This epoch took 72.343159 s

2022-07-08 13:22:30.902827: 
epoch:  299
2022-07-08 13:23:38.387079: train loss : -0.8304
2022-07-08 13:23:42.745742: validation loss: -0.7688
2022-07-08 13:23:42.749223: Average global foreground Dice: [0.812]
2022-07-08 13:23:42.751386: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:23:43.217678: Suus1 maybe_update_lr lr: 0.004384
2022-07-08 13:23:43.219898: saving scheduled checkpoint file...
2022-07-08 13:23:43.261134: saving checkpoint...
2022-07-08 13:23:44.175326: done, saving took 0.95 seconds
2022-07-08 13:23:44.193327: done
2022-07-08 13:23:44.195811: This epoch took 73.290949 s

2022-07-08 13:23:44.198087: 
epoch:  300
2022-07-08 13:24:51.427663: train loss : -0.8313
2022-07-08 13:24:55.924280: validation loss: -0.7502
2022-07-08 13:24:55.955425: Average global foreground Dice: [0.7927]
2022-07-08 13:24:55.971268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:24:56.472801: Suus1 maybe_update_lr lr: 0.004364
2022-07-08 13:24:56.475005: This epoch took 72.274620 s

2022-07-08 13:24:56.477001: 
epoch:  301
2022-07-08 13:26:03.852913: train loss : -0.8341
2022-07-08 13:26:08.264561: validation loss: -0.7666
2022-07-08 13:26:08.280165: Average global foreground Dice: [0.809]
2022-07-08 13:26:08.293755: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:26:08.771424: Suus1 maybe_update_lr lr: 0.004344
2022-07-08 13:26:08.773647: This epoch took 72.294792 s

2022-07-08 13:26:08.775663: 
epoch:  302
2022-07-08 13:27:16.130224: train loss : -0.8259
2022-07-08 13:27:20.613723: validation loss: -0.7753
2022-07-08 13:27:20.627661: Average global foreground Dice: [0.8191]
2022-07-08 13:27:20.640731: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:27:21.431565: Suus1 maybe_update_lr lr: 0.004325
2022-07-08 13:27:21.433940: saving best epoch checkpoint...
2022-07-08 13:27:21.464328: saving checkpoint...
2022-07-08 13:27:22.581126: done, saving took 1.14 seconds
2022-07-08 13:27:22.595340: This epoch took 73.816174 s

2022-07-08 13:27:22.597451: 
epoch:  303
2022-07-08 13:28:29.797462: train loss : -0.8110
2022-07-08 13:28:34.325391: validation loss: -0.7450
2022-07-08 13:28:34.336499: Average global foreground Dice: [0.7901]
2022-07-08 13:28:34.363270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:28:34.923133: Suus1 maybe_update_lr lr: 0.004305
2022-07-08 13:28:34.925570: This epoch took 72.326093 s

2022-07-08 13:28:34.927584: 
epoch:  304
2022-07-08 13:29:42.265840: train loss : -0.8210
2022-07-08 13:29:46.749338: validation loss: -0.7341
2022-07-08 13:29:46.765692: Average global foreground Dice: [0.783]
2022-07-08 13:29:46.791092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:29:47.303312: Suus1 maybe_update_lr lr: 0.004285
2022-07-08 13:29:47.305883: This epoch took 72.376218 s

2022-07-08 13:29:47.307819: 
epoch:  305
2022-07-08 13:30:54.653288: train loss : -0.8363
2022-07-08 13:30:58.957226: validation loss: -0.7584
2022-07-08 13:30:58.960859: Average global foreground Dice: [0.7962]
2022-07-08 13:30:58.962954: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:30:59.539825: Suus1 maybe_update_lr lr: 0.004265
2022-07-08 13:30:59.556081: This epoch took 72.246423 s

2022-07-08 13:30:59.558164: 
epoch:  306
2022-07-08 13:32:06.870604: train loss : -0.8325
2022-07-08 13:32:11.232880: validation loss: -0.7675
2022-07-08 13:32:11.252259: Average global foreground Dice: [0.8097]
2022-07-08 13:32:11.257256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:32:11.766958: Suus1 maybe_update_lr lr: 0.004245
2022-07-08 13:32:11.769354: This epoch took 72.209155 s

2022-07-08 13:32:11.771212: 
epoch:  307
2022-07-08 13:33:19.174545: train loss : -0.8346
2022-07-08 13:33:23.664897: validation loss: -0.7251
2022-07-08 13:33:23.670171: Average global foreground Dice: [0.78]
2022-07-08 13:33:23.672751: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:33:24.182441: Suus1 maybe_update_lr lr: 0.004226
2022-07-08 13:33:24.185036: This epoch took 72.411927 s

2022-07-08 13:33:24.187227: 
epoch:  308
2022-07-08 13:34:31.612468: train loss : -0.8351
2022-07-08 13:34:36.057580: validation loss: -0.7493
2022-07-08 13:34:36.089873: Average global foreground Dice: [0.8017]
2022-07-08 13:34:36.103616: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:34:36.677221: Suus1 maybe_update_lr lr: 0.004206
2022-07-08 13:34:36.679357: This epoch took 72.490718 s

2022-07-08 13:34:36.681411: 
epoch:  309
2022-07-08 13:35:44.063974: train loss : -0.8401
2022-07-08 13:35:48.530846: validation loss: -0.7424
2022-07-08 13:35:48.552392: Average global foreground Dice: [0.7895]
2022-07-08 13:35:48.582270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:35:49.174746: Suus1 maybe_update_lr lr: 0.004186
2022-07-08 13:35:49.177127: This epoch took 72.493667 s

2022-07-08 13:35:49.179339: 
epoch:  310
2022-07-08 13:36:56.493604: train loss : -0.8382
2022-07-08 13:37:00.816951: validation loss: -0.7244
2022-07-08 13:37:00.824352: Average global foreground Dice: [0.7707]
2022-07-08 13:37:00.826925: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:37:01.307551: Suus1 maybe_update_lr lr: 0.004166
2022-07-08 13:37:01.309847: This epoch took 72.128370 s

2022-07-08 13:37:01.312443: 
epoch:  311
2022-07-08 13:38:08.668536: train loss : -0.8389
2022-07-08 13:38:13.154090: validation loss: -0.7436
2022-07-08 13:38:13.159533: Average global foreground Dice: [0.7873]
2022-07-08 13:38:13.173770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:38:13.711849: Suus1 maybe_update_lr lr: 0.004146
2022-07-08 13:38:13.714211: This epoch took 72.399688 s

2022-07-08 13:38:13.716252: 
epoch:  312
2022-07-08 13:39:21.093917: train loss : -0.8386
2022-07-08 13:39:25.545490: validation loss: -0.7562
2022-07-08 13:39:25.572958: Average global foreground Dice: [0.798]
2022-07-08 13:39:25.590950: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:39:26.091322: Suus1 maybe_update_lr lr: 0.004127
2022-07-08 13:39:26.093604: This epoch took 72.375356 s

2022-07-08 13:39:26.095843: 
epoch:  313
2022-07-08 13:40:33.459316: train loss : -0.8426
2022-07-08 13:40:37.790010: validation loss: -0.7611
2022-07-08 13:40:37.800683: Average global foreground Dice: [0.7987]
2022-07-08 13:40:37.803385: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:40:38.274018: Suus1 maybe_update_lr lr: 0.004107
2022-07-08 13:40:38.276440: This epoch took 72.178431 s

2022-07-08 13:40:38.278515: 
epoch:  314
2022-07-08 13:41:45.528333: train loss : -0.8387
2022-07-08 13:41:49.959429: validation loss: -0.7853
2022-07-08 13:41:49.971168: Average global foreground Dice: [0.8186]
2022-07-08 13:41:49.973694: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:41:50.461617: Suus1 maybe_update_lr lr: 0.004087
2022-07-08 13:41:50.464073: This epoch took 72.183433 s

2022-07-08 13:41:50.466235: 
epoch:  315
2022-07-08 13:42:57.735962: train loss : -0.8459
2022-07-08 13:43:02.227280: validation loss: -0.7520
2022-07-08 13:43:02.247234: Average global foreground Dice: [0.7958]
2022-07-08 13:43:02.262974: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:43:02.813346: Suus1 maybe_update_lr lr: 0.004067
2022-07-08 13:43:02.815994: This epoch took 72.347713 s

2022-07-08 13:43:02.818121: 
epoch:  316
2022-07-08 13:44:10.204884: train loss : -0.8261
2022-07-08 13:44:14.645876: validation loss: -0.7526
2022-07-08 13:44:14.652549: Average global foreground Dice: [0.802]
2022-07-08 13:44:14.660850: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:44:15.199526: Suus1 maybe_update_lr lr: 0.004047
2022-07-08 13:44:15.201865: This epoch took 72.381358 s

2022-07-08 13:44:15.203969: 
epoch:  317
2022-07-08 13:45:22.516677: train loss : -0.8384
2022-07-08 13:45:27.005084: validation loss: -0.7588
2022-07-08 13:45:27.010324: Average global foreground Dice: [0.7993]
2022-07-08 13:45:27.020439: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:45:27.507216: Suus1 maybe_update_lr lr: 0.004027
2022-07-08 13:45:27.509562: This epoch took 72.303557 s

2022-07-08 13:45:27.511464: 
epoch:  318
2022-07-08 13:46:34.802466: train loss : -0.8428
2022-07-08 13:46:39.319766: validation loss: -0.7561
2022-07-08 13:46:39.326576: Average global foreground Dice: [0.7973]
2022-07-08 13:46:39.338255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:46:39.878003: Suus1 maybe_update_lr lr: 0.004007
2022-07-08 13:46:39.884107: This epoch took 72.370772 s

2022-07-08 13:46:39.908020: 
epoch:  319
2022-07-08 13:47:47.301519: train loss : -0.8344
2022-07-08 13:47:51.656039: validation loss: -0.7616
2022-07-08 13:47:51.662641: Average global foreground Dice: [0.8062]
2022-07-08 13:47:51.682243: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:47:52.143706: Suus1 maybe_update_lr lr: 0.003987
2022-07-08 13:47:52.145883: This epoch took 72.234563 s

2022-07-08 13:47:52.147973: 
epoch:  320
2022-07-08 13:48:59.496032: train loss : -0.8428
2022-07-08 13:49:03.954218: validation loss: -0.7143
2022-07-08 13:49:03.958278: Average global foreground Dice: [0.7685]
2022-07-08 13:49:03.960559: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:49:04.413966: Suus1 maybe_update_lr lr: 0.003967
2022-07-08 13:49:04.436477: This epoch took 72.286323 s

2022-07-08 13:49:04.447246: 
epoch:  321
2022-07-08 13:50:11.799951: train loss : -0.8445
2022-07-08 13:50:16.333934: validation loss: -0.7655
2022-07-08 13:50:16.346544: Average global foreground Dice: [0.8127]
2022-07-08 13:50:16.350817: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:50:16.865781: Suus1 maybe_update_lr lr: 0.003947
2022-07-08 13:50:16.868563: This epoch took 72.418114 s

2022-07-08 13:50:16.870487: 
epoch:  322
2022-07-08 13:51:24.332789: train loss : -0.8405
2022-07-08 13:51:28.787409: validation loss: -0.7644
2022-07-08 13:51:28.799425: Average global foreground Dice: [0.806]
2022-07-08 13:51:28.818004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:51:29.306527: Suus1 maybe_update_lr lr: 0.003927
2022-07-08 13:51:29.311609: This epoch took 72.439215 s

2022-07-08 13:51:29.313824: 
epoch:  323
2022-07-08 13:52:36.710875: train loss : -0.8405
2022-07-08 13:52:41.128494: validation loss: -0.7369
2022-07-08 13:52:41.131104: Average global foreground Dice: [0.7784]
2022-07-08 13:52:41.133161: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:52:41.696082: Suus1 maybe_update_lr lr: 0.003907
2022-07-08 13:52:41.698025: This epoch took 72.382138 s

2022-07-08 13:52:41.699722: 
epoch:  324
2022-07-08 13:53:49.152343: train loss : -0.8389
2022-07-08 13:53:53.595218: validation loss: -0.7603
2022-07-08 13:53:53.601171: Average global foreground Dice: [0.7999]
2022-07-08 13:53:53.603276: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:53:54.074986: Suus1 maybe_update_lr lr: 0.003887
2022-07-08 13:53:54.077560: This epoch took 72.376058 s

2022-07-08 13:53:54.079568: 
epoch:  325
2022-07-08 13:55:01.563686: train loss : -0.8447
2022-07-08 13:55:06.158804: validation loss: -0.7916
2022-07-08 13:55:06.200305: Average global foreground Dice: [0.8304]
2022-07-08 13:55:06.246328: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:55:06.924578: Suus1 maybe_update_lr lr: 0.003867
2022-07-08 13:55:06.976372: saving best epoch checkpoint...
2022-07-08 13:55:07.063347: saving checkpoint...
2022-07-08 13:55:08.085879: done, saving took 1.07 seconds
2022-07-08 13:55:08.102057: This epoch took 74.020414 s

2022-07-08 13:55:08.104459: 
epoch:  326
2022-07-08 13:56:15.587008: train loss : -0.8473
2022-07-08 13:56:19.939119: validation loss: -0.7734
2022-07-08 13:56:19.949128: Average global foreground Dice: [0.813]
2022-07-08 13:56:19.951471: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:56:20.419831: Suus1 maybe_update_lr lr: 0.003847
2022-07-08 13:56:20.422260: saving best epoch checkpoint...
2022-07-08 13:56:20.476675: saving checkpoint...
2022-07-08 13:56:21.437612: done, saving took 1.01 seconds
2022-07-08 13:56:21.452316: This epoch took 73.345752 s

2022-07-08 13:56:21.454291: 
epoch:  327
2022-07-08 13:57:28.765000: train loss : -0.8495
2022-07-08 13:57:33.358246: validation loss: -0.7645
2022-07-08 13:57:33.384720: Average global foreground Dice: [0.8054]
2022-07-08 13:57:33.406898: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:57:34.054741: Suus1 maybe_update_lr lr: 0.003827
2022-07-08 13:57:34.057006: saving best epoch checkpoint...
2022-07-08 13:57:34.111129: saving checkpoint...
2022-07-08 13:57:35.201124: done, saving took 1.14 seconds
2022-07-08 13:57:35.215172: This epoch took 73.758907 s

2022-07-08 13:57:35.217234: 
epoch:  328
2022-07-08 13:58:42.564877: train loss : -0.8341
2022-07-08 13:58:47.005966: validation loss: -0.7538
2022-07-08 13:58:47.022761: Average global foreground Dice: [0.7979]
2022-07-08 13:58:47.041379: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 13:58:47.656329: Suus1 maybe_update_lr lr: 0.003807
2022-07-08 13:58:47.675511: This epoch took 72.456151 s

2022-07-08 13:58:47.684111: 
epoch:  329
2022-07-08 13:59:55.049767: train loss : -0.8401
2022-07-08 13:59:59.490152: validation loss: -0.7556
2022-07-08 13:59:59.524922: Average global foreground Dice: [0.8001]
2022-07-08 13:59:59.537749: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:00:00.107064: Suus1 maybe_update_lr lr: 0.003787
2022-07-08 14:00:00.111572: This epoch took 72.423544 s

2022-07-08 14:00:00.114297: 
epoch:  330
2022-07-08 14:01:07.577566: train loss : -0.8445
2022-07-08 14:01:11.951241: validation loss: -0.7614
2022-07-08 14:01:11.967386: Average global foreground Dice: [0.8077]
2022-07-08 14:01:11.969525: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:01:12.449493: Suus1 maybe_update_lr lr: 0.003767
2022-07-08 14:01:12.451741: saving best epoch checkpoint...
2022-07-08 14:01:12.482631: saving checkpoint...
2022-07-08 14:01:13.394189: done, saving took 0.94 seconds
2022-07-08 14:01:13.407561: This epoch took 73.290790 s

2022-07-08 14:01:13.409648: 
epoch:  331
2022-07-08 14:02:20.656684: train loss : -0.8508
2022-07-08 14:02:25.013901: validation loss: -0.7706
2022-07-08 14:02:25.039899: Average global foreground Dice: [0.8113]
2022-07-08 14:02:25.058370: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:02:25.629230: Suus1 maybe_update_lr lr: 0.003747
2022-07-08 14:02:25.663417: saving best epoch checkpoint...
2022-07-08 14:02:25.720257: saving checkpoint...
2022-07-08 14:02:26.764470: done, saving took 1.09 seconds
2022-07-08 14:02:26.778484: This epoch took 73.366927 s

2022-07-08 14:02:26.780543: 
epoch:  332
2022-07-08 14:03:33.961017: train loss : -0.8511
2022-07-08 14:03:38.306458: validation loss: -0.7411
2022-07-08 14:03:38.316165: Average global foreground Dice: [0.798]
2022-07-08 14:03:38.318360: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:03:38.805799: Suus1 maybe_update_lr lr: 0.003727
2022-07-08 14:03:38.808095: This epoch took 72.025535 s

2022-07-08 14:03:38.810061: 
epoch:  333
2022-07-08 14:04:46.094106: train loss : -0.8441
2022-07-08 14:04:50.609918: validation loss: -0.7475
2022-07-08 14:04:50.633777: Average global foreground Dice: [0.7846]
2022-07-08 14:04:50.643763: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:04:51.187511: Suus1 maybe_update_lr lr: 0.003707
2022-07-08 14:04:51.189802: This epoch took 72.377798 s

2022-07-08 14:04:51.192937: 
epoch:  334
2022-07-08 14:05:58.500024: train loss : -0.8436
2022-07-08 14:06:02.848644: validation loss: -0.7471
2022-07-08 14:06:02.860980: Average global foreground Dice: [0.7973]
2022-07-08 14:06:02.866583: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:06:03.421238: Suus1 maybe_update_lr lr: 0.003687
2022-07-08 14:06:03.428091: This epoch took 72.233246 s

2022-07-08 14:06:03.434090: 
epoch:  335
2022-07-08 14:07:10.920494: train loss : -0.8403
2022-07-08 14:07:15.484641: validation loss: -0.7548
2022-07-08 14:07:15.498508: Average global foreground Dice: [0.8005]
2022-07-08 14:07:15.512337: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:07:16.145287: Suus1 maybe_update_lr lr: 0.003667
2022-07-08 14:07:16.159046: This epoch took 72.722454 s

2022-07-08 14:07:16.179263: 
epoch:  336
2022-07-08 14:08:23.652905: train loss : -0.8459
2022-07-08 14:08:28.014925: validation loss: -0.7692
2022-07-08 14:08:28.018223: Average global foreground Dice: [0.8128]
2022-07-08 14:08:28.061887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:08:28.698515: Suus1 maybe_update_lr lr: 0.003647
2022-07-08 14:08:28.700713: This epoch took 72.499460 s

2022-07-08 14:08:28.702682: 
epoch:  337
2022-07-08 14:09:36.049995: train loss : -0.8427
2022-07-08 14:09:40.589436: validation loss: -0.7616
2022-07-08 14:09:40.607691: Average global foreground Dice: [0.8073]
2022-07-08 14:09:40.625865: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:09:41.128046: Suus1 maybe_update_lr lr: 0.003627
2022-07-08 14:09:41.130301: This epoch took 72.425639 s

2022-07-08 14:09:41.132461: 
epoch:  338
2022-07-08 14:10:48.489804: train loss : -0.8477
2022-07-08 14:10:52.871531: validation loss: -0.7757
2022-07-08 14:10:52.892466: Average global foreground Dice: [0.8165]
2022-07-08 14:10:52.926420: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:10:53.443027: Suus1 maybe_update_lr lr: 0.003606
2022-07-08 14:10:53.445136: saving best epoch checkpoint...
2022-07-08 14:10:53.475149: saving checkpoint...
2022-07-08 14:10:54.409523: done, saving took 0.96 seconds
2022-07-08 14:10:54.423134: This epoch took 73.272403 s

2022-07-08 14:10:54.425326: 
epoch:  339
2022-07-08 14:12:01.714381: train loss : -0.8463
2022-07-08 14:12:06.349025: validation loss: -0.7811
2022-07-08 14:12:06.365207: Average global foreground Dice: [0.8205]
2022-07-08 14:12:06.385886: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:12:06.967524: Suus1 maybe_update_lr lr: 0.003586
2022-07-08 14:12:06.969700: saving best epoch checkpoint...
2022-07-08 14:12:07.004125: saving checkpoint...
2022-07-08 14:12:07.955457: done, saving took 0.98 seconds
2022-07-08 14:12:07.968670: This epoch took 73.541205 s

2022-07-08 14:12:07.970738: 
epoch:  340
2022-07-08 14:13:15.229977: train loss : -0.8371
2022-07-08 14:13:19.664751: validation loss: -0.7379
2022-07-08 14:13:19.692075: Average global foreground Dice: [0.7983]
2022-07-08 14:13:19.695295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:13:20.198543: Suus1 maybe_update_lr lr: 0.003566
2022-07-08 14:13:20.200937: This epoch took 72.228052 s

2022-07-08 14:13:20.203019: 
epoch:  341
2022-07-08 14:14:27.582409: train loss : -0.8427
2022-07-08 14:14:31.915334: validation loss: -0.7740
2022-07-08 14:14:31.919052: Average global foreground Dice: [0.8089]
2022-07-08 14:14:31.921282: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:14:32.370220: Suus1 maybe_update_lr lr: 0.003546
2022-07-08 14:14:32.372403: This epoch took 72.167378 s

2022-07-08 14:14:32.374233: 
epoch:  342
2022-07-08 14:15:39.798826: train loss : -0.8382
2022-07-08 14:15:44.164194: validation loss: -0.7475
2022-07-08 14:15:44.180289: Average global foreground Dice: [0.8]
2022-07-08 14:15:44.186882: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:15:44.700434: Suus1 maybe_update_lr lr: 0.003526
2022-07-08 14:15:44.702797: This epoch took 72.326725 s

2022-07-08 14:15:44.704801: 
epoch:  343
2022-07-08 14:16:52.070925: train loss : -0.8441
2022-07-08 14:16:56.802322: validation loss: -0.7707
2022-07-08 14:16:56.810004: Average global foreground Dice: [0.8139]
2022-07-08 14:16:56.814717: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:16:57.292337: Suus1 maybe_update_lr lr: 0.003505
2022-07-08 14:16:57.311286: saving best epoch checkpoint...
2022-07-08 14:16:57.388463: saving checkpoint...
2022-07-08 14:16:58.350456: done, saving took 1.02 seconds
2022-07-08 14:16:58.366003: This epoch took 73.659182 s

2022-07-08 14:16:58.368065: 
epoch:  344
2022-07-08 14:18:05.683314: train loss : -0.8439
2022-07-08 14:18:10.280420: validation loss: -0.7294
2022-07-08 14:18:10.287990: Average global foreground Dice: [0.7823]
2022-07-08 14:18:10.311421: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:18:10.953498: Suus1 maybe_update_lr lr: 0.003485
2022-07-08 14:18:10.955648: This epoch took 72.585592 s

2022-07-08 14:18:10.957659: 
epoch:  345
2022-07-08 14:19:18.302203: train loss : -0.8459
2022-07-08 14:19:22.678162: validation loss: -0.7699
2022-07-08 14:19:22.689481: Average global foreground Dice: [0.8172]
2022-07-08 14:19:22.698286: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:19:23.224765: Suus1 maybe_update_lr lr: 0.003465
2022-07-08 14:19:23.226899: This epoch took 72.267165 s

2022-07-08 14:19:23.228927: 
epoch:  346
2022-07-08 14:20:30.490423: train loss : -0.8526
2022-07-08 14:20:34.883797: validation loss: -0.7551
2022-07-08 14:20:34.920903: Average global foreground Dice: [0.8027]
2022-07-08 14:20:34.934326: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:20:35.511449: Suus1 maybe_update_lr lr: 0.003445
2022-07-08 14:20:35.521959: This epoch took 72.291130 s

2022-07-08 14:20:35.524554: 
epoch:  347
2022-07-08 14:21:42.873094: train loss : -0.8461
2022-07-08 14:21:47.343739: validation loss: -0.7340
2022-07-08 14:21:47.356174: Average global foreground Dice: [0.7914]
2022-07-08 14:21:47.360604: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:21:47.839955: Suus1 maybe_update_lr lr: 0.003424
2022-07-08 14:21:47.842220: This epoch took 72.315660 s

2022-07-08 14:21:47.843759: 
epoch:  348
2022-07-08 14:22:55.161175: train loss : -0.8434
2022-07-08 14:22:59.605540: validation loss: -0.7512
2022-07-08 14:22:59.612560: Average global foreground Dice: [0.7938]
2022-07-08 14:22:59.625015: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:23:00.128186: Suus1 maybe_update_lr lr: 0.003404
2022-07-08 14:23:00.130278: This epoch took 72.284042 s

2022-07-08 14:23:00.132153: 
epoch:  349
2022-07-08 14:24:07.450679: train loss : -0.8444
2022-07-08 14:24:11.913529: validation loss: -0.7529
2022-07-08 14:24:11.917507: Average global foreground Dice: [0.7939]
2022-07-08 14:24:11.919619: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:24:12.422372: Suus1 maybe_update_lr lr: 0.003384
2022-07-08 14:24:12.424594: saving scheduled checkpoint file...
2022-07-08 14:24:12.467410: saving checkpoint...
2022-07-08 14:24:13.458966: done, saving took 1.03 seconds
2022-07-08 14:24:13.476943: done
2022-07-08 14:24:13.479423: This epoch took 73.345524 s

2022-07-08 14:24:13.481545: 
epoch:  350
2022-07-08 14:25:20.849819: train loss : -0.8422
2022-07-08 14:25:25.270884: validation loss: -0.7444
2022-07-08 14:25:25.306459: Average global foreground Dice: [0.7941]
2022-07-08 14:25:25.324989: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:25:25.897175: Suus1 maybe_update_lr lr: 0.003364
2022-07-08 14:25:25.899536: This epoch took 72.415696 s

2022-07-08 14:25:25.901921: 
epoch:  351
2022-07-08 14:26:33.247477: train loss : -0.8487
2022-07-08 14:26:37.644651: validation loss: -0.7525
2022-07-08 14:26:37.654630: Average global foreground Dice: [0.8008]
2022-07-08 14:26:37.673887: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:26:38.123036: Suus1 maybe_update_lr lr: 0.003343
2022-07-08 14:26:38.125340: This epoch took 72.221211 s

2022-07-08 14:26:38.127297: 
epoch:  352
2022-07-08 14:27:45.427670: train loss : -0.8479
2022-07-08 14:27:50.344879: validation loss: -0.7722
2022-07-08 14:27:50.361453: Average global foreground Dice: [0.8138]
2022-07-08 14:27:50.376525: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:27:50.929724: Suus1 maybe_update_lr lr: 0.003323
2022-07-08 14:27:50.932070: This epoch took 72.802856 s

2022-07-08 14:27:50.934149: 
epoch:  353
2022-07-08 14:28:58.199633: train loss : -0.8591
2022-07-08 14:29:02.597265: validation loss: -0.7233
2022-07-08 14:29:02.612657: Average global foreground Dice: [0.7706]
2022-07-08 14:29:02.617679: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:29:03.251372: Suus1 maybe_update_lr lr: 0.003303
2022-07-08 14:29:03.253666: This epoch took 72.317581 s

2022-07-08 14:29:03.255726: 
epoch:  354
2022-07-08 14:30:10.589389: train loss : -0.8556
2022-07-08 14:30:14.994027: validation loss: -0.7644
2022-07-08 14:30:15.001268: Average global foreground Dice: [0.8116]
2022-07-08 14:30:15.007416: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:30:15.549109: Suus1 maybe_update_lr lr: 0.003282
2022-07-08 14:30:15.551448: This epoch took 72.293848 s

2022-07-08 14:30:15.553480: 
epoch:  355
2022-07-08 14:31:22.943452: train loss : -0.8597
2022-07-08 14:31:27.331532: validation loss: -0.7464
2022-07-08 14:31:27.336327: Average global foreground Dice: [0.7948]
2022-07-08 14:31:27.347456: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:31:27.795942: Suus1 maybe_update_lr lr: 0.003262
2022-07-08 14:31:27.798219: This epoch took 72.242685 s

2022-07-08 14:31:27.800413: 
epoch:  356
2022-07-08 14:32:35.151876: train loss : -0.8586
2022-07-08 14:32:39.811019: validation loss: -0.7357
2022-07-08 14:32:39.820484: Average global foreground Dice: [0.7889]
2022-07-08 14:32:39.847198: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:32:40.360362: Suus1 maybe_update_lr lr: 0.003241
2022-07-08 14:32:40.362596: This epoch took 72.560184 s

2022-07-08 14:32:40.364790: 
epoch:  357
2022-07-08 14:33:47.696957: train loss : -0.8573
2022-07-08 14:33:52.177162: validation loss: -0.7463
2022-07-08 14:33:52.219222: Average global foreground Dice: [0.787]
2022-07-08 14:33:52.233401: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:33:52.919720: Suus1 maybe_update_lr lr: 0.003221
2022-07-08 14:33:52.927839: This epoch took 72.561087 s

2022-07-08 14:33:52.953257: 
epoch:  358
2022-07-08 14:35:00.208338: train loss : -0.8512
2022-07-08 14:35:04.650457: validation loss: -0.7514
2022-07-08 14:35:04.677195: Average global foreground Dice: [0.799]
2022-07-08 14:35:04.720262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:35:05.238719: Suus1 maybe_update_lr lr: 0.003201
2022-07-08 14:35:05.241142: This epoch took 72.284724 s

2022-07-08 14:35:05.243251: 
epoch:  359
2022-07-08 14:36:12.552217: train loss : -0.8617
2022-07-08 14:36:16.883627: validation loss: -0.7645
2022-07-08 14:36:16.910789: Average global foreground Dice: [0.81]
2022-07-08 14:36:16.913902: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:36:17.478457: Suus1 maybe_update_lr lr: 0.00318
2022-07-08 14:36:17.480872: This epoch took 72.235458 s

2022-07-08 14:36:17.482911: 
epoch:  360
2022-07-08 14:37:24.765187: train loss : -0.8623
2022-07-08 14:37:29.272836: validation loss: -0.7559
2022-07-08 14:37:29.297059: Average global foreground Dice: [0.7993]
2022-07-08 14:37:29.302854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:37:29.839306: Suus1 maybe_update_lr lr: 0.00316
2022-07-08 14:37:29.867374: This epoch took 72.382426 s

2022-07-08 14:37:29.909243: 
epoch:  361
2022-07-08 14:38:37.270477: train loss : -0.8555
2022-07-08 14:38:41.948274: validation loss: -0.7364
2022-07-08 14:38:41.953050: Average global foreground Dice: [0.7837]
2022-07-08 14:38:41.971245: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:38:42.550644: Suus1 maybe_update_lr lr: 0.003139
2022-07-08 14:38:42.572315: This epoch took 72.659431 s

2022-07-08 14:38:42.594263: 
epoch:  362
2022-07-08 14:39:49.993224: train loss : -0.8600
2022-07-08 14:39:54.424778: validation loss: -0.7572
2022-07-08 14:39:54.438293: Average global foreground Dice: [0.8062]
2022-07-08 14:39:54.452330: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:39:55.047085: Suus1 maybe_update_lr lr: 0.003119
2022-07-08 14:39:55.050449: This epoch took 72.424171 s

2022-07-08 14:39:55.057256: 
epoch:  363
2022-07-08 14:41:02.387442: train loss : -0.8528
2022-07-08 14:41:06.861461: validation loss: -0.7412
2022-07-08 14:41:06.869141: Average global foreground Dice: [0.7803]
2022-07-08 14:41:06.873415: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:41:07.464728: Suus1 maybe_update_lr lr: 0.003098
2022-07-08 14:41:07.467069: This epoch took 72.407371 s

2022-07-08 14:41:07.469212: 
epoch:  364
2022-07-08 14:42:14.979563: train loss : -0.8552
2022-07-08 14:42:19.531874: validation loss: -0.7390
2022-07-08 14:42:19.540638: Average global foreground Dice: [0.7912]
2022-07-08 14:42:19.542847: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:42:20.026214: Suus1 maybe_update_lr lr: 0.003078
2022-07-08 14:42:20.028587: This epoch took 72.557340 s

2022-07-08 14:42:20.030617: 
epoch:  365
2022-07-08 14:43:27.391081: train loss : -0.8540
2022-07-08 14:43:31.788369: validation loss: -0.7596
2022-07-08 14:43:31.799444: Average global foreground Dice: [0.7998]
2022-07-08 14:43:31.820487: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:43:32.364167: Suus1 maybe_update_lr lr: 0.003057
2022-07-08 14:43:32.366814: This epoch took 72.334023 s

2022-07-08 14:43:32.398268: 
epoch:  366
2022-07-08 14:44:39.666080: train loss : -0.8607
2022-07-08 14:44:44.136088: validation loss: -0.7645
2022-07-08 14:44:44.157340: Average global foreground Dice: [0.8136]
2022-07-08 14:44:44.164589: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:44:44.726455: Suus1 maybe_update_lr lr: 0.003037
2022-07-08 14:44:44.749849: This epoch took 72.318563 s

2022-07-08 14:44:44.769680: 
epoch:  367
2022-07-08 14:45:52.036138: train loss : -0.8575
2022-07-08 14:45:56.561069: validation loss: -0.7685
2022-07-08 14:45:56.582392: Average global foreground Dice: [0.8043]
2022-07-08 14:45:56.602780: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:45:57.069828: Suus1 maybe_update_lr lr: 0.003016
2022-07-08 14:45:57.076232: This epoch took 72.304607 s

2022-07-08 14:45:57.078422: 
epoch:  368
2022-07-08 14:47:04.348024: train loss : -0.8565
2022-07-08 14:47:08.705245: validation loss: -0.7383
2022-07-08 14:47:08.720312: Average global foreground Dice: [0.7887]
2022-07-08 14:47:08.727912: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:47:09.185809: Suus1 maybe_update_lr lr: 0.002996
2022-07-08 14:47:09.190083: This epoch took 72.109750 s

2022-07-08 14:47:09.193600: 
epoch:  369
2022-07-08 14:48:16.557654: train loss : -0.8592
2022-07-08 14:48:20.960896: validation loss: -0.7486
2022-07-08 14:48:20.975585: Average global foreground Dice: [0.7941]
2022-07-08 14:48:20.977845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:48:21.582237: Suus1 maybe_update_lr lr: 0.002975
2022-07-08 14:48:21.584434: This epoch took 72.388792 s

2022-07-08 14:48:21.586369: 
epoch:  370
2022-07-08 14:49:28.840728: train loss : -0.8549
2022-07-08 14:49:33.424805: validation loss: -0.7648
2022-07-08 14:49:33.451318: Average global foreground Dice: [0.8099]
2022-07-08 14:49:33.483303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:49:34.064230: Suus1 maybe_update_lr lr: 0.002954
2022-07-08 14:49:34.066641: This epoch took 72.478338 s

2022-07-08 14:49:34.068779: 
epoch:  371
2022-07-08 14:50:41.298760: train loss : -0.8610
2022-07-08 14:50:45.679552: validation loss: -0.7383
2022-07-08 14:50:45.690427: Average global foreground Dice: [0.7783]
2022-07-08 14:50:45.692703: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:50:46.186956: Suus1 maybe_update_lr lr: 0.002934
2022-07-08 14:50:46.192673: This epoch took 72.121948 s

2022-07-08 14:50:46.195673: 
epoch:  372
2022-07-08 14:51:53.687103: train loss : -0.8532
2022-07-08 14:51:58.178295: validation loss: -0.7750
2022-07-08 14:51:58.211736: Average global foreground Dice: [0.8172]
2022-07-08 14:51:58.230994: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:51:58.668654: Suus1 maybe_update_lr lr: 0.002913
2022-07-08 14:51:58.698165: This epoch took 72.500473 s

2022-07-08 14:51:58.718444: 
epoch:  373
2022-07-08 14:53:06.174960: train loss : -0.8570
2022-07-08 14:53:10.819422: validation loss: -0.7454
2022-07-08 14:53:10.832539: Average global foreground Dice: [0.7961]
2022-07-08 14:53:10.841840: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:53:11.430705: Suus1 maybe_update_lr lr: 0.002892
2022-07-08 14:53:11.457263: This epoch took 72.718986 s

2022-07-08 14:53:11.477282: 
epoch:  374
2022-07-08 14:54:19.015556: train loss : -0.8609
2022-07-08 14:54:23.442280: validation loss: -0.7606
2022-07-08 14:54:23.455336: Average global foreground Dice: [0.8007]
2022-07-08 14:54:23.463709: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:54:24.052483: Suus1 maybe_update_lr lr: 0.002872
2022-07-08 14:54:24.054966: This epoch took 72.556552 s

2022-07-08 14:54:24.056990: 
epoch:  375
2022-07-08 14:55:31.301440: train loss : -0.8544
2022-07-08 14:55:35.680401: validation loss: -0.7555
2022-07-08 14:55:35.699708: Average global foreground Dice: [0.8026]
2022-07-08 14:55:35.710695: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:55:36.200407: Suus1 maybe_update_lr lr: 0.002851
2022-07-08 14:55:36.202695: This epoch took 72.143766 s

2022-07-08 14:55:36.204661: 
epoch:  376
2022-07-08 14:56:43.566821: train loss : -0.8605
2022-07-08 14:56:47.998303: validation loss: -0.7742
2022-07-08 14:56:48.018920: Average global foreground Dice: [0.818]
2022-07-08 14:56:48.050862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:56:48.599163: Suus1 maybe_update_lr lr: 0.00283
2022-07-08 14:56:48.601824: This epoch took 72.395151 s

2022-07-08 14:56:48.603879: 
epoch:  377
2022-07-08 14:57:56.012729: train loss : -0.8668
2022-07-08 14:58:00.399006: validation loss: -0.7549
2022-07-08 14:58:00.411101: Average global foreground Dice: [0.7999]
2022-07-08 14:58:00.414542: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:58:00.876934: Suus1 maybe_update_lr lr: 0.00281
2022-07-08 14:58:00.879349: This epoch took 72.273448 s

2022-07-08 14:58:00.881253: 
epoch:  378
2022-07-08 14:59:08.285959: train loss : -0.8619
2022-07-08 14:59:12.657935: validation loss: -0.7201
2022-07-08 14:59:12.666306: Average global foreground Dice: [0.7715]
2022-07-08 14:59:12.698210: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 14:59:13.338022: Suus1 maybe_update_lr lr: 0.002789
2022-07-08 14:59:13.340472: This epoch took 72.457163 s

2022-07-08 14:59:13.342549: 
epoch:  379
2022-07-08 15:00:20.612615: train loss : -0.8646
2022-07-08 15:00:25.065823: validation loss: -0.7520
2022-07-08 15:00:25.095062: Average global foreground Dice: [0.7977]
2022-07-08 15:00:25.108114: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:00:25.690995: Suus1 maybe_update_lr lr: 0.002768
2022-07-08 15:00:25.695724: This epoch took 72.350985 s

2022-07-08 15:00:25.700814: 
epoch:  380
2022-07-08 15:01:32.949112: train loss : -0.8604
2022-07-08 15:01:37.413241: validation loss: -0.7345
2022-07-08 15:01:37.442791: Average global foreground Dice: [0.7808]
2022-07-08 15:01:37.464477: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:01:37.982505: Suus1 maybe_update_lr lr: 0.002747
2022-07-08 15:01:37.984937: This epoch took 72.281789 s

2022-07-08 15:01:37.987018: 
epoch:  381
2022-07-08 15:02:45.305050: train loss : -0.8575
2022-07-08 15:02:49.871571: validation loss: -0.7673
2022-07-08 15:02:49.876112: Average global foreground Dice: [0.8059]
2022-07-08 15:02:49.890214: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:02:50.397434: Suus1 maybe_update_lr lr: 0.002727
2022-07-08 15:02:50.399763: This epoch took 72.410827 s

2022-07-08 15:02:50.401860: 
epoch:  382
2022-07-08 15:03:57.652666: train loss : -0.8616
2022-07-08 15:04:02.044085: validation loss: -0.7328
2022-07-08 15:04:02.048010: Average global foreground Dice: [0.7835]
2022-07-08 15:04:02.057703: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:04:02.635943: Suus1 maybe_update_lr lr: 0.002706
2022-07-08 15:04:02.638162: This epoch took 72.234306 s

2022-07-08 15:04:02.640109: 
epoch:  383
2022-07-08 15:05:10.002170: train loss : -0.8619
2022-07-08 15:05:14.408607: validation loss: -0.7844
2022-07-08 15:05:14.419845: Average global foreground Dice: [0.8225]
2022-07-08 15:05:14.435713: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:05:14.959585: Suus1 maybe_update_lr lr: 0.002685
2022-07-08 15:05:14.961834: This epoch took 72.319820 s

2022-07-08 15:05:14.963812: 
epoch:  384
2022-07-08 15:06:22.239827: train loss : -0.8622
2022-07-08 15:06:26.673426: validation loss: -0.7440
2022-07-08 15:06:26.677127: Average global foreground Dice: [0.7979]
2022-07-08 15:06:26.679637: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:06:27.174764: Suus1 maybe_update_lr lr: 0.002664
2022-07-08 15:06:27.177267: This epoch took 72.211576 s

2022-07-08 15:06:27.179495: 
epoch:  385
2022-07-08 15:07:34.459966: train loss : -0.8673
2022-07-08 15:07:38.908803: validation loss: -0.7634
2022-07-08 15:07:38.934133: Average global foreground Dice: [0.8042]
2022-07-08 15:07:38.944787: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:07:39.428069: Suus1 maybe_update_lr lr: 0.002643
2022-07-08 15:07:39.430428: This epoch took 72.248976 s

2022-07-08 15:07:39.432323: 
epoch:  386
2022-07-08 15:08:46.806013: train loss : -0.8602
2022-07-08 15:08:51.309174: validation loss: -0.7547
2022-07-08 15:08:51.342854: Average global foreground Dice: [0.7949]
2022-07-08 15:08:51.375256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:08:51.872170: Suus1 maybe_update_lr lr: 0.002622
2022-07-08 15:08:51.874327: This epoch took 72.439989 s

2022-07-08 15:08:51.876409: 
epoch:  387
2022-07-08 15:09:59.081582: train loss : -0.8669
2022-07-08 15:10:03.553887: validation loss: -0.7582
2022-07-08 15:10:03.585876: Average global foreground Dice: [0.8047]
2022-07-08 15:10:03.606459: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:10:04.083091: Suus1 maybe_update_lr lr: 0.002601
2022-07-08 15:10:04.085497: This epoch took 72.207084 s

2022-07-08 15:10:04.087520: 
epoch:  388
2022-07-08 15:11:11.382846: train loss : -0.8666
2022-07-08 15:11:15.774957: validation loss: -0.7625
2022-07-08 15:11:15.813869: Average global foreground Dice: [0.8082]
2022-07-08 15:11:15.843094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:11:16.407768: Suus1 maybe_update_lr lr: 0.002581
2022-07-08 15:11:16.410254: This epoch took 72.320546 s

2022-07-08 15:11:16.412184: 
epoch:  389
2022-07-08 15:12:23.704626: train loss : -0.8558
2022-07-08 15:12:28.127523: validation loss: -0.7627
2022-07-08 15:12:28.137182: Average global foreground Dice: [0.7998]
2022-07-08 15:12:28.141770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:12:28.650519: Suus1 maybe_update_lr lr: 0.00256
2022-07-08 15:12:28.652221: This epoch took 72.238188 s

2022-07-08 15:12:28.655015: 
epoch:  390
2022-07-08 15:13:36.010358: train loss : -0.8625
2022-07-08 15:13:40.545758: validation loss: -0.7458
2022-07-08 15:13:40.557638: Average global foreground Dice: [0.7932]
2022-07-08 15:13:40.559834: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:13:41.230531: Suus1 maybe_update_lr lr: 0.002539
2022-07-08 15:13:41.232918: This epoch took 72.575957 s

2022-07-08 15:13:41.235672: 
epoch:  391
2022-07-08 15:14:48.741773: train loss : -0.8624
2022-07-08 15:14:53.116955: validation loss: -0.7405
2022-07-08 15:14:53.142772: Average global foreground Dice: [0.787]
2022-07-08 15:14:53.147830: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:14:53.617488: Suus1 maybe_update_lr lr: 0.002518
2022-07-08 15:14:53.619849: This epoch took 72.381390 s

2022-07-08 15:14:53.621822: 
epoch:  392
2022-07-08 15:16:00.942916: train loss : -0.8619
2022-07-08 15:16:05.554079: validation loss: -0.7739
2022-07-08 15:16:05.578819: Average global foreground Dice: [0.8095]
2022-07-08 15:16:05.590321: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:16:06.233360: Suus1 maybe_update_lr lr: 0.002497
2022-07-08 15:16:06.235671: This epoch took 72.611879 s

2022-07-08 15:16:06.237589: 
epoch:  393
2022-07-08 15:17:13.613281: train loss : -0.8656
2022-07-08 15:17:18.034956: validation loss: -0.7829
2022-07-08 15:17:18.049720: Average global foreground Dice: [0.8222]
2022-07-08 15:17:18.066281: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:17:18.705584: Suus1 maybe_update_lr lr: 0.002476
2022-07-08 15:17:18.707832: This epoch took 72.468388 s

2022-07-08 15:17:18.709788: 
epoch:  394
2022-07-08 15:18:26.062900: train loss : -0.8608
2022-07-08 15:18:30.563758: validation loss: -0.7545
2022-07-08 15:18:30.567061: Average global foreground Dice: [0.8007]
2022-07-08 15:18:30.569296: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:18:31.123631: Suus1 maybe_update_lr lr: 0.002455
2022-07-08 15:18:31.128276: This epoch took 72.416481 s

2022-07-08 15:18:31.129770: 
epoch:  395
2022-07-08 15:19:38.480501: train loss : -0.8687
2022-07-08 15:19:42.908084: validation loss: -0.7458
2022-07-08 15:19:42.917054: Average global foreground Dice: [0.7959]
2022-07-08 15:19:42.937081: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:19:43.419335: Suus1 maybe_update_lr lr: 0.002434
2022-07-08 15:19:43.421571: This epoch took 72.286598 s

2022-07-08 15:19:43.423646: 
epoch:  396
2022-07-08 15:20:50.701343: train loss : -0.8652
2022-07-08 15:20:55.007797: validation loss: -0.7462
2022-07-08 15:20:55.012682: Average global foreground Dice: [0.7881]
2022-07-08 15:20:55.014888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:20:55.471244: Suus1 maybe_update_lr lr: 0.002413
2022-07-08 15:20:55.473563: This epoch took 72.047854 s

2022-07-08 15:20:55.475553: 
epoch:  397
2022-07-08 15:22:02.839731: train loss : -0.8686
2022-07-08 15:22:07.254398: validation loss: -0.7627
2022-07-08 15:22:07.279687: Average global foreground Dice: [0.8036]
2022-07-08 15:22:07.282854: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:22:07.888756: Suus1 maybe_update_lr lr: 0.002391
2022-07-08 15:22:07.891827: This epoch took 72.414298 s

2022-07-08 15:22:07.894195: 
epoch:  398
2022-07-08 15:23:15.386199: train loss : -0.8647
2022-07-08 15:23:19.721347: validation loss: -0.7570
2022-07-08 15:23:19.724225: Average global foreground Dice: [0.8091]
2022-07-08 15:23:19.732028: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:23:20.433487: Suus1 maybe_update_lr lr: 0.00237
2022-07-08 15:23:20.436043: This epoch took 72.539505 s

2022-07-08 15:23:20.438013: 
epoch:  399
2022-07-08 15:24:27.776799: train loss : -0.8721
2022-07-08 15:24:32.186599: validation loss: -0.7395
2022-07-08 15:24:32.189929: Average global foreground Dice: [0.7866]
2022-07-08 15:24:32.203554: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:24:32.729137: Suus1 maybe_update_lr lr: 0.002349
2022-07-08 15:24:32.731276: saving scheduled checkpoint file...
2022-07-08 15:24:32.763963: saving checkpoint...
2022-07-08 15:24:33.694317: done, saving took 0.96 seconds
2022-07-08 15:24:33.708853: done
2022-07-08 15:24:33.710920: This epoch took 73.270884 s

2022-07-08 15:24:33.712824: 
epoch:  400
2022-07-08 15:25:41.132256: train loss : -0.8679
2022-07-08 15:25:45.569615: validation loss: -0.7361
2022-07-08 15:25:45.587698: Average global foreground Dice: [0.7868]
2022-07-08 15:25:45.595381: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:25:46.167706: Suus1 maybe_update_lr lr: 0.002328
2022-07-08 15:25:46.169917: This epoch took 72.455212 s

2022-07-08 15:25:46.171981: 
epoch:  401
2022-07-08 15:26:53.541490: train loss : -0.8732
2022-07-08 15:26:58.000021: validation loss: -0.7590
2022-07-08 15:26:58.044718: Average global foreground Dice: [0.7991]
2022-07-08 15:26:58.081036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:26:58.581621: Suus1 maybe_update_lr lr: 0.002307
2022-07-08 15:26:58.591318: This epoch took 72.417380 s

2022-07-08 15:26:58.593290: 
epoch:  402
2022-07-08 15:28:05.960521: train loss : -0.8733
2022-07-08 15:28:10.371936: validation loss: -0.7661
2022-07-08 15:28:10.401702: Average global foreground Dice: [0.8086]
2022-07-08 15:28:10.427773: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:28:10.982750: Suus1 maybe_update_lr lr: 0.002286
2022-07-08 15:28:10.984970: This epoch took 72.389790 s

2022-07-08 15:28:10.986907: 
epoch:  403
2022-07-08 15:29:18.339433: train loss : -0.8710
2022-07-08 15:29:22.764105: validation loss: -0.7361
2022-07-08 15:29:22.769335: Average global foreground Dice: [0.7842]
2022-07-08 15:29:22.771526: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:29:23.425826: Suus1 maybe_update_lr lr: 0.002264
2022-07-08 15:29:23.429012: This epoch took 72.439725 s

2022-07-08 15:29:23.432113: 
epoch:  404
2022-07-08 15:30:30.771474: train loss : -0.8670
2022-07-08 15:30:35.337383: validation loss: -0.7489
2022-07-08 15:30:35.340359: Average global foreground Dice: [0.7926]
2022-07-08 15:30:35.342512: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:30:35.845504: Suus1 maybe_update_lr lr: 0.002243
2022-07-08 15:30:35.865040: This epoch took 72.430690 s

2022-07-08 15:30:35.867709: 
epoch:  405
2022-07-08 15:31:43.228391: train loss : -0.8673
2022-07-08 15:31:47.764307: validation loss: -0.7601
2022-07-08 15:31:47.767260: Average global foreground Dice: [0.8087]
2022-07-08 15:31:47.769223: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:31:48.219870: Suus1 maybe_update_lr lr: 0.002222
2022-07-08 15:31:48.222043: This epoch took 72.348387 s

2022-07-08 15:31:48.223827: 
epoch:  406
2022-07-08 15:32:55.524064: train loss : -0.8699
2022-07-08 15:32:59.930821: validation loss: -0.7442
2022-07-08 15:32:59.935727: Average global foreground Dice: [0.788]
2022-07-08 15:32:59.937837: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:33:00.390148: Suus1 maybe_update_lr lr: 0.002201
2022-07-08 15:33:00.392606: This epoch took 72.166856 s

2022-07-08 15:33:00.394462: 
epoch:  407
2022-07-08 15:34:07.723692: train loss : -0.8716
2022-07-08 15:34:12.047446: validation loss: -0.7416
2022-07-08 15:34:12.073729: Average global foreground Dice: [0.785]
2022-07-08 15:34:12.076092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:34:12.702072: Suus1 maybe_update_lr lr: 0.002179
2022-07-08 15:34:12.704489: This epoch took 72.308049 s

2022-07-08 15:34:12.706465: 
epoch:  408
2022-07-08 15:35:20.113032: train loss : -0.8714
2022-07-08 15:35:24.521444: validation loss: -0.7737
2022-07-08 15:35:24.525819: Average global foreground Dice: [0.8099]
2022-07-08 15:35:24.532094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:35:25.005275: Suus1 maybe_update_lr lr: 0.002158
2022-07-08 15:35:25.007603: This epoch took 72.299151 s

2022-07-08 15:35:25.009754: 
epoch:  409
2022-07-08 15:36:32.468022: train loss : -0.8718
2022-07-08 15:36:36.871340: validation loss: -0.7716
2022-07-08 15:36:36.876991: Average global foreground Dice: [0.8084]
2022-07-08 15:36:36.879202: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:36:37.360545: Suus1 maybe_update_lr lr: 0.002137
2022-07-08 15:36:37.362741: This epoch took 72.351191 s

2022-07-08 15:36:37.364661: 
epoch:  410
2022-07-08 15:37:44.708413: train loss : -0.8702
2022-07-08 15:37:49.028629: validation loss: -0.7789
2022-07-08 15:37:49.043500: Average global foreground Dice: [0.8138]
2022-07-08 15:37:49.064016: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:37:49.597427: Suus1 maybe_update_lr lr: 0.002115
2022-07-08 15:37:49.599505: This epoch took 72.233035 s

2022-07-08 15:37:49.601370: 
epoch:  411
2022-07-08 15:38:56.917784: train loss : -0.8687
2022-07-08 15:39:01.382914: validation loss: -0.7558
2022-07-08 15:39:01.389118: Average global foreground Dice: [0.7942]
2022-07-08 15:39:01.391246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:39:01.850498: Suus1 maybe_update_lr lr: 0.002094
2022-07-08 15:39:01.852809: This epoch took 72.249507 s

2022-07-08 15:39:01.854992: 
epoch:  412
2022-07-08 15:40:09.140349: train loss : -0.8691
2022-07-08 15:40:13.610116: validation loss: -0.7763
2022-07-08 15:40:13.623885: Average global foreground Dice: [0.822]
2022-07-08 15:40:13.645079: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:40:14.273295: Suus1 maybe_update_lr lr: 0.002072
2022-07-08 15:40:14.275539: This epoch took 72.418345 s

2022-07-08 15:40:14.277580: 
epoch:  413
2022-07-08 15:41:21.531598: train loss : -0.8752
2022-07-08 15:41:26.233175: validation loss: -0.7783
2022-07-08 15:41:26.236987: Average global foreground Dice: [0.8124]
2022-07-08 15:41:26.238916: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:41:26.773956: Suus1 maybe_update_lr lr: 0.002051
2022-07-08 15:41:26.776213: This epoch took 72.496735 s

2022-07-08 15:41:26.778346: 
epoch:  414
2022-07-08 15:42:34.053305: train loss : -0.8743
2022-07-08 15:42:38.487709: validation loss: -0.7660
2022-07-08 15:42:38.497095: Average global foreground Dice: [0.81]
2022-07-08 15:42:38.507803: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:42:38.965158: Suus1 maybe_update_lr lr: 0.00203
2022-07-08 15:42:38.975706: This epoch took 72.195427 s

2022-07-08 15:42:38.977963: 
epoch:  415
2022-07-08 15:43:46.173611: train loss : -0.8741
2022-07-08 15:43:50.577779: validation loss: -0.7703
2022-07-08 15:43:50.581651: Average global foreground Dice: [0.809]
2022-07-08 15:43:50.589418: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:43:51.108794: Suus1 maybe_update_lr lr: 0.002008
2022-07-08 15:43:51.110910: This epoch took 72.130864 s

2022-07-08 15:43:51.112796: 
epoch:  416
2022-07-08 15:44:58.429810: train loss : -0.8757
2022-07-08 15:45:02.877457: validation loss: -0.7819
2022-07-08 15:45:02.890121: Average global foreground Dice: [0.8139]
2022-07-08 15:45:02.908068: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:45:03.542398: Suus1 maybe_update_lr lr: 0.001987
2022-07-08 15:45:03.544697: This epoch took 72.430022 s

2022-07-08 15:45:03.546514: 
epoch:  417
2022-07-08 15:46:10.799219: train loss : -0.8716
2022-07-08 15:46:15.147488: validation loss: -0.7445
2022-07-08 15:46:15.150849: Average global foreground Dice: [0.7942]
2022-07-08 15:46:15.153052: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:46:15.812999: Suus1 maybe_update_lr lr: 0.001965
2022-07-08 15:46:15.815259: This epoch took 72.266981 s

2022-07-08 15:46:15.817414: 
epoch:  418
2022-07-08 15:47:23.158653: train loss : -0.8688
2022-07-08 15:47:27.529220: validation loss: -0.7550
2022-07-08 15:47:27.551613: Average global foreground Dice: [0.7991]
2022-07-08 15:47:27.564255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:47:28.098072: Suus1 maybe_update_lr lr: 0.001943
2022-07-08 15:47:28.100620: This epoch took 72.281301 s

2022-07-08 15:47:28.102592: 
epoch:  419
2022-07-08 15:48:35.316380: train loss : -0.8744
2022-07-08 15:48:39.871819: validation loss: -0.7770
2022-07-08 15:48:39.888727: Average global foreground Dice: [0.8102]
2022-07-08 15:48:39.905284: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:48:40.475724: Suus1 maybe_update_lr lr: 0.001922
2022-07-08 15:48:40.477818: This epoch took 72.373189 s

2022-07-08 15:48:40.479839: 
epoch:  420
2022-07-08 15:49:47.792669: train loss : -0.8651
2022-07-08 15:49:52.229836: validation loss: -0.7535
2022-07-08 15:49:52.282592: Average global foreground Dice: [0.7969]
2022-07-08 15:49:52.304275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:49:52.844370: Suus1 maybe_update_lr lr: 0.0019
2022-07-08 15:49:52.846495: This epoch took 72.364695 s

2022-07-08 15:49:52.848459: 
epoch:  421
2022-07-08 15:51:00.137474: train loss : -0.8769
2022-07-08 15:51:04.572984: validation loss: -0.7648
2022-07-08 15:51:04.612826: Average global foreground Dice: [0.8106]
2022-07-08 15:51:04.640338: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:51:05.255971: Suus1 maybe_update_lr lr: 0.001879
2022-07-08 15:51:05.258190: This epoch took 72.407939 s

2022-07-08 15:51:05.260714: 
epoch:  422
2022-07-08 15:52:12.646116: train loss : -0.8711
2022-07-08 15:52:17.165738: validation loss: -0.7668
2022-07-08 15:52:17.180098: Average global foreground Dice: [0.8065]
2022-07-08 15:52:17.191714: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:52:17.743106: Suus1 maybe_update_lr lr: 0.001857
2022-07-08 15:52:17.751058: This epoch took 72.488184 s

2022-07-08 15:52:17.754807: 
epoch:  423
2022-07-08 15:53:25.100397: train loss : -0.8732
2022-07-08 15:53:29.717215: validation loss: -0.7595
2022-07-08 15:53:29.728976: Average global foreground Dice: [0.8035]
2022-07-08 15:53:29.734080: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:53:30.227550: Suus1 maybe_update_lr lr: 0.001835
2022-07-08 15:53:30.240554: This epoch took 72.451869 s

2022-07-08 15:53:30.264264: 
epoch:  424
2022-07-08 15:54:37.654090: train loss : -0.8761
2022-07-08 15:54:42.194968: validation loss: -0.7556
2022-07-08 15:54:42.199362: Average global foreground Dice: [0.7999]
2022-07-08 15:54:42.201791: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:54:42.689382: Suus1 maybe_update_lr lr: 0.001813
2022-07-08 15:54:42.691473: This epoch took 72.405097 s

2022-07-08 15:54:42.693404: 
epoch:  425
2022-07-08 15:55:49.996865: train loss : -0.8731
2022-07-08 15:55:54.538743: validation loss: -0.7828
2022-07-08 15:55:54.556484: Average global foreground Dice: [0.8183]
2022-07-08 15:55:54.570357: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:55:55.147552: Suus1 maybe_update_lr lr: 0.001792
2022-07-08 15:55:55.149707: This epoch took 72.454338 s

2022-07-08 15:55:55.152613: 
epoch:  426
2022-07-08 15:57:02.435505: train loss : -0.8806
2022-07-08 15:57:06.826610: validation loss: -0.7620
2022-07-08 15:57:06.855394: Average global foreground Dice: [0.8037]
2022-07-08 15:57:06.868870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:57:07.355947: Suus1 maybe_update_lr lr: 0.00177
2022-07-08 15:57:07.358359: This epoch took 72.203926 s

2022-07-08 15:57:07.360369: 
epoch:  427
2022-07-08 15:58:14.624286: train loss : -0.8777
2022-07-08 15:58:19.051757: validation loss: -0.7622
2022-07-08 15:58:19.078964: Average global foreground Dice: [0.8001]
2022-07-08 15:58:19.098582: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:58:19.606671: Suus1 maybe_update_lr lr: 0.001748
2022-07-08 15:58:19.608794: This epoch took 72.246529 s

2022-07-08 15:58:19.610660: 
epoch:  428
2022-07-08 15:59:27.092669: train loss : -0.8740
2022-07-08 15:59:31.655157: validation loss: -0.7627
2022-07-08 15:59:31.683319: Average global foreground Dice: [0.7983]
2022-07-08 15:59:31.699170: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 15:59:32.233418: Suus1 maybe_update_lr lr: 0.001726
2022-07-08 15:59:32.235802: This epoch took 72.623353 s

2022-07-08 15:59:32.237717: 
epoch:  429
2022-07-08 16:00:39.635641: train loss : -0.8750
2022-07-08 16:00:44.086095: validation loss: -0.7901
2022-07-08 16:00:44.093314: Average global foreground Dice: [0.8248]
2022-07-08 16:00:44.110091: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:00:44.658039: Suus1 maybe_update_lr lr: 0.001704
2022-07-08 16:00:44.660443: saving best epoch checkpoint...
2022-07-08 16:00:44.694782: saving checkpoint...
2022-07-08 16:00:45.652789: done, saving took 0.99 seconds
2022-07-08 16:00:45.670855: This epoch took 73.431110 s

2022-07-08 16:00:45.673153: 
epoch:  430
2022-07-08 16:01:52.957052: train loss : -0.8805
2022-07-08 16:01:57.336231: validation loss: -0.7461
2022-07-08 16:01:57.365934: Average global foreground Dice: [0.7864]
2022-07-08 16:01:57.380259: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:01:57.853243: Suus1 maybe_update_lr lr: 0.001682
2022-07-08 16:01:57.855634: This epoch took 72.180363 s

2022-07-08 16:01:57.857683: 
epoch:  431
2022-07-08 16:03:05.438671: train loss : -0.8697
2022-07-08 16:03:09.777298: validation loss: -0.7421
2022-07-08 16:03:09.780942: Average global foreground Dice: [0.7945]
2022-07-08 16:03:09.782990: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:03:10.259064: Suus1 maybe_update_lr lr: 0.00166
2022-07-08 16:03:10.261388: This epoch took 72.401792 s

2022-07-08 16:03:10.263385: 
epoch:  432
2022-07-08 16:04:17.586432: train loss : -0.8760
2022-07-08 16:04:21.960701: validation loss: -0.7528
2022-07-08 16:04:21.980810: Average global foreground Dice: [0.8023]
2022-07-08 16:04:22.003291: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:04:22.580373: Suus1 maybe_update_lr lr: 0.001638
2022-07-08 16:04:22.582705: This epoch took 72.317425 s

2022-07-08 16:04:22.584540: 
epoch:  433
2022-07-08 16:05:30.021996: train loss : -0.8756
2022-07-08 16:05:34.439500: validation loss: -0.7640
2022-07-08 16:05:34.442468: Average global foreground Dice: [0.8043]
2022-07-08 16:05:34.444672: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:05:34.875670: Suus1 maybe_update_lr lr: 0.001616
2022-07-08 16:05:34.878121: This epoch took 72.291775 s

2022-07-08 16:05:34.880138: 
epoch:  434
2022-07-08 16:06:42.365340: train loss : -0.8764
2022-07-08 16:06:47.003343: validation loss: -0.7818
2022-07-08 16:06:47.024549: Average global foreground Dice: [0.8202]
2022-07-08 16:06:47.035930: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:06:47.643004: Suus1 maybe_update_lr lr: 0.001594
2022-07-08 16:06:47.645524: This epoch took 72.763499 s

2022-07-08 16:06:47.647392: 
epoch:  435
2022-07-08 16:07:54.934074: train loss : -0.8770
2022-07-08 16:07:59.331251: validation loss: -0.7284
2022-07-08 16:07:59.339615: Average global foreground Dice: [0.7702]
2022-07-08 16:07:59.342064: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:07:59.837679: Suus1 maybe_update_lr lr: 0.001572
2022-07-08 16:07:59.839920: This epoch took 72.190671 s

2022-07-08 16:07:59.841908: 
epoch:  436
2022-07-08 16:09:07.112398: train loss : -0.8743
2022-07-08 16:09:11.614403: validation loss: -0.7926
2022-07-08 16:09:11.634994: Average global foreground Dice: [0.8265]
2022-07-08 16:09:11.646279: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:09:12.230938: Suus1 maybe_update_lr lr: 0.00155
2022-07-08 16:09:12.233083: This epoch took 72.389239 s

2022-07-08 16:09:12.234894: 
epoch:  437
2022-07-08 16:10:19.675966: train loss : -0.8776
2022-07-08 16:10:24.046866: validation loss: -0.7629
2022-07-08 16:10:24.049894: Average global foreground Dice: [0.8076]
2022-07-08 16:10:24.052071: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:10:24.541612: Suus1 maybe_update_lr lr: 0.001528
2022-07-08 16:10:24.544029: This epoch took 72.307200 s

2022-07-08 16:10:24.545915: 
epoch:  438
2022-07-08 16:11:31.901430: train loss : -0.8780
2022-07-08 16:11:36.296971: validation loss: -0.7555
2022-07-08 16:11:36.302428: Average global foreground Dice: [0.7996]
2022-07-08 16:11:36.322267: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:11:36.881122: Suus1 maybe_update_lr lr: 0.001506
2022-07-08 16:11:36.883480: This epoch took 72.335599 s

2022-07-08 16:11:36.885526: 
epoch:  439
2022-07-08 16:12:44.199736: train loss : -0.8773
2022-07-08 16:12:48.790912: validation loss: -0.7596
2022-07-08 16:12:48.794821: Average global foreground Dice: [0.8027]
2022-07-08 16:12:48.797008: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:12:49.266045: Suus1 maybe_update_lr lr: 0.001483
2022-07-08 16:12:49.268511: This epoch took 72.380902 s

2022-07-08 16:12:49.270437: 
epoch:  440
2022-07-08 16:13:56.685676: train loss : -0.8792
2022-07-08 16:14:01.120035: validation loss: -0.7545
2022-07-08 16:14:01.123660: Average global foreground Dice: [0.7955]
2022-07-08 16:14:01.125946: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:14:01.621331: Suus1 maybe_update_lr lr: 0.001461
2022-07-08 16:14:01.623659: This epoch took 72.351405 s

2022-07-08 16:14:01.625606: 
epoch:  441
2022-07-08 16:15:09.022738: train loss : -0.8725
2022-07-08 16:15:13.605494: validation loss: -0.7629
2022-07-08 16:15:13.636758: Average global foreground Dice: [0.8022]
2022-07-08 16:15:13.658256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:15:14.241949: Suus1 maybe_update_lr lr: 0.001439
2022-07-08 16:15:14.244236: This epoch took 72.616682 s

2022-07-08 16:15:14.246186: 
epoch:  442
2022-07-08 16:16:21.581763: train loss : -0.8789
2022-07-08 16:16:26.014272: validation loss: -0.7667
2022-07-08 16:16:26.026683: Average global foreground Dice: [0.8116]
2022-07-08 16:16:26.029355: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:16:26.549609: Suus1 maybe_update_lr lr: 0.001416
2022-07-08 16:16:26.551948: This epoch took 72.303738 s

2022-07-08 16:16:26.553887: 
epoch:  443
2022-07-08 16:17:33.949265: train loss : -0.8822
2022-07-08 16:17:38.311986: validation loss: -0.7640
2022-07-08 16:17:38.316499: Average global foreground Dice: [0.8088]
2022-07-08 16:17:38.332304: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:17:38.894658: Suus1 maybe_update_lr lr: 0.001394
2022-07-08 16:17:38.896985: This epoch took 72.341289 s

2022-07-08 16:17:38.898958: 
epoch:  444
2022-07-08 16:18:46.216419: train loss : -0.8835
2022-07-08 16:18:50.788153: validation loss: -0.7827
2022-07-08 16:18:50.814697: Average global foreground Dice: [0.8171]
2022-07-08 16:18:50.847271: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:18:51.487158: Suus1 maybe_update_lr lr: 0.001372
2022-07-08 16:18:51.500643: This epoch took 72.599804 s

2022-07-08 16:18:51.503025: 
epoch:  445
2022-07-08 16:19:58.878471: train loss : -0.8779
2022-07-08 16:20:03.409450: validation loss: -0.7524
2022-07-08 16:20:03.428691: Average global foreground Dice: [0.8039]
2022-07-08 16:20:03.459665: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:20:04.033937: Suus1 maybe_update_lr lr: 0.001349
2022-07-08 16:20:04.036174: This epoch took 72.531055 s

2022-07-08 16:20:04.038692: 
epoch:  446
2022-07-08 16:21:11.262647: train loss : -0.8817
2022-07-08 16:21:15.891340: validation loss: -0.7759
2022-07-08 16:21:15.895973: Average global foreground Dice: [0.8174]
2022-07-08 16:21:15.898270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:21:16.352398: Suus1 maybe_update_lr lr: 0.001327
2022-07-08 16:21:16.354841: saving best epoch checkpoint...
2022-07-08 16:21:16.416715: saving checkpoint...
2022-07-08 16:21:17.342959: done, saving took 0.99 seconds
2022-07-08 16:21:17.358239: This epoch took 73.317279 s

2022-07-08 16:21:17.360262: 
epoch:  447
2022-07-08 16:22:24.553096: train loss : -0.8802
2022-07-08 16:22:28.903700: validation loss: -0.7731
2022-07-08 16:22:28.915162: Average global foreground Dice: [0.8162]
2022-07-08 16:22:28.935520: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:22:29.408378: Suus1 maybe_update_lr lr: 0.001304
2022-07-08 16:22:29.410546: saving best epoch checkpoint...
2022-07-08 16:22:29.460172: saving checkpoint...
2022-07-08 16:22:30.489219: done, saving took 1.08 seconds
2022-07-08 16:22:30.502865: This epoch took 73.140626 s

2022-07-08 16:22:30.505050: 
epoch:  448
2022-07-08 16:23:37.736628: train loss : -0.8861
2022-07-08 16:23:42.167437: validation loss: -0.7426
2022-07-08 16:23:42.208722: Average global foreground Dice: [0.7859]
2022-07-08 16:23:42.216752: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:23:42.775790: Suus1 maybe_update_lr lr: 0.001282
2022-07-08 16:23:42.778040: This epoch took 72.270862 s

2022-07-08 16:23:42.780020: 
epoch:  449
2022-07-08 16:24:50.105432: train loss : -0.8858
2022-07-08 16:24:54.487253: validation loss: -0.7612
2022-07-08 16:24:54.501973: Average global foreground Dice: [0.805]
2022-07-08 16:24:54.505807: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:24:54.951557: Suus1 maybe_update_lr lr: 0.001259
2022-07-08 16:24:54.954136: saving scheduled checkpoint file...
2022-07-08 16:24:54.984709: saving checkpoint...
2022-07-08 16:24:56.014862: done, saving took 1.06 seconds
2022-07-08 16:24:56.031110: done
2022-07-08 16:24:56.033279: This epoch took 73.251350 s

2022-07-08 16:24:56.035510: 
epoch:  450
2022-07-08 16:26:03.467606: train loss : -0.8787
2022-07-08 16:26:07.799361: validation loss: -0.7518
2022-07-08 16:26:07.803560: Average global foreground Dice: [0.7992]
2022-07-08 16:26:07.805845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:26:08.268373: Suus1 maybe_update_lr lr: 0.001236
2022-07-08 16:26:08.271416: This epoch took 72.233693 s

2022-07-08 16:26:08.274437: 
epoch:  451
2022-07-08 16:27:15.686704: train loss : -0.8827
2022-07-08 16:27:20.133992: validation loss: -0.7753
2022-07-08 16:27:20.143233: Average global foreground Dice: [0.8087]
2022-07-08 16:27:20.145379: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:27:20.680344: Suus1 maybe_update_lr lr: 0.001214
2022-07-08 16:27:20.682622: This epoch took 72.405780 s

2022-07-08 16:27:20.684534: 
epoch:  452
2022-07-08 16:28:28.037836: train loss : -0.8868
2022-07-08 16:28:32.412441: validation loss: -0.7818
2022-07-08 16:28:32.433639: Average global foreground Dice: [0.8238]
2022-07-08 16:28:32.441749: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:28:32.901463: Suus1 maybe_update_lr lr: 0.001191
2022-07-08 16:28:32.903733: This epoch took 72.216953 s

2022-07-08 16:28:32.905667: 
epoch:  453
2022-07-08 16:29:40.190238: train loss : -0.8891
2022-07-08 16:29:44.527124: validation loss: -0.7178
2022-07-08 16:29:44.530161: Average global foreground Dice: [0.7672]
2022-07-08 16:29:44.532269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:29:44.968452: Suus1 maybe_update_lr lr: 0.001168
2022-07-08 16:29:44.970212: This epoch took 72.062565 s

2022-07-08 16:29:44.972721: 
epoch:  454
2022-07-08 16:30:52.235707: train loss : -0.8821
2022-07-08 16:30:56.679266: validation loss: -0.7675
2022-07-08 16:30:56.695675: Average global foreground Dice: [0.8107]
2022-07-08 16:30:56.706396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:30:57.324539: Suus1 maybe_update_lr lr: 0.001145
2022-07-08 16:30:57.326864: This epoch took 72.352044 s

2022-07-08 16:30:57.328960: 
epoch:  455
2022-07-08 16:32:04.659624: train loss : -0.8827
2022-07-08 16:32:09.040684: validation loss: -0.7777
2022-07-08 16:32:09.061186: Average global foreground Dice: [0.8128]
2022-07-08 16:32:09.082510: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:32:09.635660: Suus1 maybe_update_lr lr: 0.001122
2022-07-08 16:32:09.637874: This epoch took 72.307024 s

2022-07-08 16:32:09.639905: 
epoch:  456
2022-07-08 16:33:17.012816: train loss : -0.8825
2022-07-08 16:33:21.372490: validation loss: -0.7616
2022-07-08 16:33:21.377568: Average global foreground Dice: [0.8019]
2022-07-08 16:33:21.392243: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:33:21.886960: Suus1 maybe_update_lr lr: 0.001099
2022-07-08 16:33:21.889448: This epoch took 72.247376 s

2022-07-08 16:33:21.891679: 
epoch:  457
2022-07-08 16:34:29.271465: train loss : -0.8802
2022-07-08 16:34:33.659870: validation loss: -0.7777
2022-07-08 16:34:33.670822: Average global foreground Dice: [0.8136]
2022-07-08 16:34:33.680006: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:34:34.363785: Suus1 maybe_update_lr lr: 0.001076
2022-07-08 16:34:34.366167: This epoch took 72.472468 s

2022-07-08 16:34:34.368159: 
epoch:  458
2022-07-08 16:35:41.631381: train loss : -0.8866
2022-07-08 16:35:46.081926: validation loss: -0.7399
2022-07-08 16:35:46.086688: Average global foreground Dice: [0.7821]
2022-07-08 16:35:46.088870: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:35:46.528346: Suus1 maybe_update_lr lr: 0.001053
2022-07-08 16:35:46.531027: This epoch took 72.160823 s

2022-07-08 16:35:46.533363: 
epoch:  459
2022-07-08 16:36:53.951558: train loss : -0.8884
2022-07-08 16:36:58.550452: validation loss: -0.7517
2022-07-08 16:36:58.564631: Average global foreground Dice: [0.8016]
2022-07-08 16:36:58.586275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:36:59.164212: Suus1 maybe_update_lr lr: 0.00103
2022-07-08 16:36:59.166551: This epoch took 72.631035 s

2022-07-08 16:36:59.168691: 
epoch:  460
2022-07-08 16:38:06.518345: train loss : -0.8833
2022-07-08 16:38:10.863981: validation loss: -0.7708
2022-07-08 16:38:10.875666: Average global foreground Dice: [0.8144]
2022-07-08 16:38:10.881640: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:38:11.417148: Suus1 maybe_update_lr lr: 0.001007
2022-07-08 16:38:11.419809: This epoch took 72.248607 s

2022-07-08 16:38:11.421917: 
epoch:  461
2022-07-08 16:39:18.733668: train loss : -0.8763
2022-07-08 16:39:23.142294: validation loss: -0.7736
2022-07-08 16:39:23.145758: Average global foreground Dice: [0.8149]
2022-07-08 16:39:23.147748: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:39:23.635960: Suus1 maybe_update_lr lr: 0.000983
2022-07-08 16:39:23.638608: This epoch took 72.214688 s

2022-07-08 16:39:23.640723: 
epoch:  462
2022-07-08 16:40:30.848808: train loss : -0.8849
2022-07-08 16:40:35.225174: validation loss: -0.7694
2022-07-08 16:40:35.229033: Average global foreground Dice: [0.8074]
2022-07-08 16:40:35.231090: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:40:35.868085: Suus1 maybe_update_lr lr: 0.00096
2022-07-08 16:40:35.870759: This epoch took 72.227791 s

2022-07-08 16:40:35.872910: 
epoch:  463
2022-07-08 16:41:43.155684: train loss : -0.8853
2022-07-08 16:41:47.485703: validation loss: -0.7469
2022-07-08 16:41:47.497311: Average global foreground Dice: [0.7979]
2022-07-08 16:41:47.509072: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:41:48.004463: Suus1 maybe_update_lr lr: 0.000937
2022-07-08 16:41:48.006797: This epoch took 72.131976 s

2022-07-08 16:41:48.008796: 
epoch:  464
2022-07-08 16:42:55.403376: train loss : -0.8854
2022-07-08 16:42:59.727776: validation loss: -0.7611
2022-07-08 16:42:59.748489: Average global foreground Dice: [0.8044]
2022-07-08 16:42:59.765294: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:43:00.276904: Suus1 maybe_update_lr lr: 0.000913
2022-07-08 16:43:00.279050: This epoch took 72.268372 s

2022-07-08 16:43:00.281004: 
epoch:  465
2022-07-08 16:44:07.719901: train loss : -0.8858
2022-07-08 16:44:12.181511: validation loss: -0.7603
2022-07-08 16:44:12.216674: Average global foreground Dice: [0.8076]
2022-07-08 16:44:12.218933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:44:12.654919: Suus1 maybe_update_lr lr: 0.00089
2022-07-08 16:44:12.657104: This epoch took 72.374323 s

2022-07-08 16:44:12.658965: 
epoch:  466
2022-07-08 16:45:19.967669: train loss : -0.8867
2022-07-08 16:45:24.372329: validation loss: -0.7603
2022-07-08 16:45:24.380382: Average global foreground Dice: [0.8058]
2022-07-08 16:45:24.395242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:45:25.022150: Suus1 maybe_update_lr lr: 0.000866
2022-07-08 16:45:25.024443: This epoch took 72.363536 s

2022-07-08 16:45:25.026543: 
epoch:  467
2022-07-08 16:46:32.341508: train loss : -0.8841
2022-07-08 16:46:36.796808: validation loss: -0.7651
2022-07-08 16:46:36.831836: Average global foreground Dice: [0.8106]
2022-07-08 16:46:36.867451: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:46:37.343168: Suus1 maybe_update_lr lr: 0.000842
2022-07-08 16:46:37.345813: This epoch took 72.317244 s

2022-07-08 16:46:37.347899: 
epoch:  468
2022-07-08 16:47:44.786034: train loss : -0.8844
2022-07-08 16:47:49.256034: validation loss: -0.8034
2022-07-08 16:47:49.259372: Average global foreground Dice: [0.8345]
2022-07-08 16:47:49.272561: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:47:49.828688: Suus1 maybe_update_lr lr: 0.000819
2022-07-08 16:47:49.830848: saving best epoch checkpoint...
2022-07-08 16:47:49.863757: saving checkpoint...
2022-07-08 16:47:50.788918: done, saving took 0.96 seconds
2022-07-08 16:47:50.802376: This epoch took 73.452504 s

2022-07-08 16:47:50.804469: 
epoch:  469
2022-07-08 16:48:58.148400: train loss : -0.8799
2022-07-08 16:49:02.717374: validation loss: -0.7813
2022-07-08 16:49:02.736465: Average global foreground Dice: [0.8226]
2022-07-08 16:49:02.738633: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:49:03.227770: Suus1 maybe_update_lr lr: 0.000795
2022-07-08 16:49:03.230133: saving best epoch checkpoint...
2022-07-08 16:49:03.263441: saving checkpoint...
2022-07-08 16:49:04.231082: done, saving took 1.00 seconds
2022-07-08 16:49:04.244624: This epoch took 73.438278 s

2022-07-08 16:49:04.246576: 
epoch:  470
2022-07-08 16:50:11.541888: train loss : -0.8878
2022-07-08 16:50:16.000472: validation loss: -0.7811
2022-07-08 16:50:16.004697: Average global foreground Dice: [0.8261]
2022-07-08 16:50:16.007008: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:50:16.640885: Suus1 maybe_update_lr lr: 0.000771
2022-07-08 16:50:16.662258: saving best epoch checkpoint...
2022-07-08 16:50:16.733301: saving checkpoint...
2022-07-08 16:50:17.757043: done, saving took 1.07 seconds
2022-07-08 16:50:17.771258: This epoch took 73.522482 s

2022-07-08 16:50:17.773358: 
epoch:  471
2022-07-08 16:51:25.126436: train loss : -0.8864
2022-07-08 16:51:29.687225: validation loss: -0.7467
2022-07-08 16:51:29.710662: Average global foreground Dice: [0.7862]
2022-07-08 16:51:29.731612: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:51:30.306009: Suus1 maybe_update_lr lr: 0.000747
2022-07-08 16:51:30.308109: This epoch took 72.532865 s

2022-07-08 16:51:30.309970: 
epoch:  472
2022-07-08 16:52:37.655163: train loss : -0.8878
2022-07-08 16:52:42.138994: validation loss: -0.7539
2022-07-08 16:52:42.168495: Average global foreground Dice: [0.7953]
2022-07-08 16:52:42.192967: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:52:42.705992: Suus1 maybe_update_lr lr: 0.000723
2022-07-08 16:52:42.708258: This epoch took 72.396472 s

2022-07-08 16:52:42.719928: 
epoch:  473
2022-07-08 16:53:50.105304: train loss : -0.8886
2022-07-08 16:53:54.613373: validation loss: -0.7465
2022-07-08 16:53:54.626173: Average global foreground Dice: [0.7956]
2022-07-08 16:53:54.637661: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:53:55.204499: Suus1 maybe_update_lr lr: 0.000699
2022-07-08 16:53:55.206798: This epoch took 72.477978 s

2022-07-08 16:53:55.208808: 
epoch:  474
2022-07-08 16:55:02.521534: train loss : -0.8894
2022-07-08 16:55:07.058501: validation loss: -0.7725
2022-07-08 16:55:07.082317: Average global foreground Dice: [0.8076]
2022-07-08 16:55:07.085008: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:55:07.548594: Suus1 maybe_update_lr lr: 0.000675
2022-07-08 16:55:07.550794: This epoch took 72.339909 s

2022-07-08 16:55:07.552782: 
epoch:  475
2022-07-08 16:56:14.895870: train loss : -0.8863
2022-07-08 16:56:19.328819: validation loss: -0.7313
2022-07-08 16:56:19.354665: Average global foreground Dice: [0.7813]
2022-07-08 16:56:19.372818: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:56:19.950640: Suus1 maybe_update_lr lr: 0.00065
2022-07-08 16:56:19.960731: This epoch took 72.405957 s

2022-07-08 16:56:19.962861: 
epoch:  476
2022-07-08 16:57:27.296184: train loss : -0.8875
2022-07-08 16:57:31.727226: validation loss: -0.7620
2022-07-08 16:57:31.746002: Average global foreground Dice: [0.8101]
2022-07-08 16:57:31.755975: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:57:32.223191: Suus1 maybe_update_lr lr: 0.000626
2022-07-08 16:57:32.225394: This epoch took 72.260615 s

2022-07-08 16:57:32.227267: 
epoch:  477
2022-07-08 16:58:39.511873: train loss : -0.8886
2022-07-08 16:58:43.825653: validation loss: -0.7674
2022-07-08 16:58:43.828599: Average global foreground Dice: [0.812]
2022-07-08 16:58:43.830847: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:58:44.332067: Suus1 maybe_update_lr lr: 0.000601
2022-07-08 16:58:44.334661: This epoch took 72.105446 s

2022-07-08 16:58:44.336913: 
epoch:  478
2022-07-08 16:59:51.665234: train loss : -0.8889
2022-07-08 16:59:56.133164: validation loss: -0.7443
2022-07-08 16:59:56.150769: Average global foreground Dice: [0.7879]
2022-07-08 16:59:56.158196: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 16:59:56.870118: Suus1 maybe_update_lr lr: 0.000577
2022-07-08 16:59:56.889322: This epoch took 72.550358 s

2022-07-08 16:59:56.911275: 
epoch:  479
2022-07-08 17:01:04.249798: train loss : -0.8927
2022-07-08 17:01:08.645272: validation loss: -0.7551
2022-07-08 17:01:08.666678: Average global foreground Dice: [0.7922]
2022-07-08 17:01:08.680099: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:01:09.166449: Suus1 maybe_update_lr lr: 0.000552
2022-07-08 17:01:09.168698: This epoch took 72.241152 s

2022-07-08 17:01:09.170697: 
epoch:  480
2022-07-08 17:02:16.497923: train loss : -0.8888
2022-07-08 17:02:20.878800: validation loss: -0.7502
2022-07-08 17:02:20.901662: Average global foreground Dice: [0.7957]
2022-07-08 17:02:20.906092: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:02:21.390371: Suus1 maybe_update_lr lr: 0.000527
2022-07-08 17:02:21.392583: This epoch took 72.219971 s

2022-07-08 17:02:21.394560: 
epoch:  481
2022-07-08 17:03:28.822048: train loss : -0.8879
2022-07-08 17:03:33.346623: validation loss: -0.7496
2022-07-08 17:03:33.370444: Average global foreground Dice: [0.7966]
2022-07-08 17:03:33.394141: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:03:33.974835: Suus1 maybe_update_lr lr: 0.000502
2022-07-08 17:03:33.976896: This epoch took 72.580355 s

2022-07-08 17:03:33.978774: 
epoch:  482
2022-07-08 17:04:41.264155: train loss : -0.8912
2022-07-08 17:04:45.839077: validation loss: -0.7641
2022-07-08 17:04:45.849811: Average global foreground Dice: [0.805]
2022-07-08 17:04:45.873320: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:04:46.445558: Suus1 maybe_update_lr lr: 0.000477
2022-07-08 17:04:46.455328: This epoch took 72.474656 s

2022-07-08 17:04:46.459485: 
epoch:  483
2022-07-08 17:05:53.742159: train loss : -0.8922
2022-07-08 17:05:58.263092: validation loss: -0.7659
2022-07-08 17:05:58.290444: Average global foreground Dice: [0.8103]
2022-07-08 17:05:58.293658: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:05:58.875328: Suus1 maybe_update_lr lr: 0.000451
2022-07-08 17:05:58.894312: This epoch took 72.428832 s

2022-07-08 17:05:58.916261: 
epoch:  484
2022-07-08 17:07:06.313269: train loss : -0.8922
2022-07-08 17:07:10.739903: validation loss: -0.7543
2022-07-08 17:07:10.782289: Average global foreground Dice: [0.799]
2022-07-08 17:07:10.796354: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:07:11.283771: Suus1 maybe_update_lr lr: 0.000426
2022-07-08 17:07:11.286025: This epoch took 72.346760 s

2022-07-08 17:07:11.288018: 
epoch:  485
2022-07-08 17:08:18.665804: train loss : -0.8951
2022-07-08 17:08:23.127517: validation loss: -0.7724
2022-07-08 17:08:23.130987: Average global foreground Dice: [0.8089]
2022-07-08 17:08:23.133342: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:08:23.701195: Suus1 maybe_update_lr lr: 0.0004
2022-07-08 17:08:23.703759: This epoch took 72.413805 s

2022-07-08 17:08:23.706087: 
epoch:  486
2022-07-08 17:09:30.985144: train loss : -0.8904
2022-07-08 17:09:35.369739: validation loss: -0.7777
2022-07-08 17:09:35.408424: Average global foreground Dice: [0.8095]
2022-07-08 17:09:35.418640: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:09:35.906054: Suus1 maybe_update_lr lr: 0.000375
2022-07-08 17:09:35.908332: This epoch took 72.200008 s

2022-07-08 17:09:35.910331: 
epoch:  487
2022-07-08 17:10:43.255629: train loss : -0.8908
2022-07-08 17:10:47.800009: validation loss: -0.7533
2022-07-08 17:10:47.831754: Average global foreground Dice: [0.7939]
2022-07-08 17:10:47.845297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:10:48.552298: Suus1 maybe_update_lr lr: 0.000348
2022-07-08 17:10:48.554338: This epoch took 72.641994 s

2022-07-08 17:10:48.556303: 
epoch:  488
2022-07-08 17:11:55.891299: train loss : -0.8926
2022-07-08 17:12:00.282100: validation loss: -0.7809
2022-07-08 17:12:00.311602: Average global foreground Dice: [0.8168]
2022-07-08 17:12:00.333503: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:12:00.878240: Suus1 maybe_update_lr lr: 0.000322
2022-07-08 17:12:00.880436: This epoch took 72.322053 s

2022-07-08 17:12:00.882343: 
epoch:  489
2022-07-08 17:13:08.197831: train loss : -0.8946
2022-07-08 17:13:12.646593: validation loss: -0.7540
2022-07-08 17:13:12.671921: Average global foreground Dice: [0.8058]
2022-07-08 17:13:12.691600: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:13:13.284512: Suus1 maybe_update_lr lr: 0.000296
2022-07-08 17:13:13.286608: This epoch took 72.402327 s

2022-07-08 17:13:13.288497: 
epoch:  490
2022-07-08 17:14:20.680150: train loss : -0.8918
2022-07-08 17:14:25.311848: validation loss: -0.7612
2022-07-08 17:14:25.331625: Average global foreground Dice: [0.8032]
2022-07-08 17:14:25.333784: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:14:25.862619: Suus1 maybe_update_lr lr: 0.000269
2022-07-08 17:14:25.888342: This epoch took 72.597933 s

2022-07-08 17:14:25.921249: 
epoch:  491
2022-07-08 17:15:33.292958: train loss : -0.8888
2022-07-08 17:15:37.607865: validation loss: -0.7709
2022-07-08 17:15:37.632672: Average global foreground Dice: [0.8135]
2022-07-08 17:15:37.645578: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:15:38.205791: Suus1 maybe_update_lr lr: 0.000242
2022-07-08 17:15:38.208330: This epoch took 72.256070 s

2022-07-08 17:15:38.210180: 
epoch:  492
2022-07-08 17:16:45.614506: train loss : -0.8927
2022-07-08 17:16:50.062919: validation loss: -0.7707
2022-07-08 17:16:50.072789: Average global foreground Dice: [0.8049]
2022-07-08 17:16:50.089041: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:16:50.632205: Suus1 maybe_update_lr lr: 0.000215
2022-07-08 17:16:50.634372: This epoch took 72.422303 s

2022-07-08 17:16:50.636300: 
epoch:  493
2022-07-08 17:17:58.048910: train loss : -0.8905
2022-07-08 17:18:02.451869: validation loss: -0.7556
2022-07-08 17:18:02.507008: Average global foreground Dice: [0.7991]
2022-07-08 17:18:02.561262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:18:03.136779: Suus1 maybe_update_lr lr: 0.000187
2022-07-08 17:18:03.139019: This epoch took 72.500689 s

2022-07-08 17:18:03.141130: 
epoch:  494
2022-07-08 17:19:10.479039: train loss : -0.8937
2022-07-08 17:19:14.819336: validation loss: -0.7570
2022-07-08 17:19:14.827016: Average global foreground Dice: [0.8008]
2022-07-08 17:19:14.840150: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:19:15.337261: Suus1 maybe_update_lr lr: 0.000158
2022-07-08 17:19:15.339679: This epoch took 72.196651 s

2022-07-08 17:19:15.341899: 
epoch:  495
2022-07-08 17:20:22.701604: train loss : -0.8915
2022-07-08 17:20:27.260078: validation loss: -0.7414
2022-07-08 17:20:27.264233: Average global foreground Dice: [0.7892]
2022-07-08 17:20:27.266276: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:20:27.776275: Suus1 maybe_update_lr lr: 0.00013
2022-07-08 17:20:27.784222: This epoch took 72.440198 s

2022-07-08 17:20:27.786920: 
epoch:  496
2022-07-08 17:21:35.320494: train loss : -0.8962
2022-07-08 17:21:39.732796: validation loss: -0.7632
2022-07-08 17:21:39.744582: Average global foreground Dice: [0.8098]
2022-07-08 17:21:39.746556: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:21:40.211577: Suus1 maybe_update_lr lr: 0.0001
2022-07-08 17:21:40.213621: This epoch took 72.424556 s

2022-07-08 17:21:40.215445: 
epoch:  497
2022-07-08 17:22:47.553036: train loss : -0.8971
2022-07-08 17:22:52.002912: validation loss: -0.7640
2022-07-08 17:22:52.006263: Average global foreground Dice: [0.8107]
2022-07-08 17:22:52.016143: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:22:52.530679: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-08 17:22:52.541478: This epoch took 72.324179 s

2022-07-08 17:22:52.563266: 
epoch:  498
2022-07-08 17:23:59.981059: train loss : -0.8963
2022-07-08 17:24:04.629823: validation loss: -0.7631
2022-07-08 17:24:04.633490: Average global foreground Dice: [0.8054]
2022-07-08 17:24:04.648102: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:24:05.235751: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-08 17:24:05.238092: This epoch took 72.642866 s

2022-07-08 17:24:05.240087: 
epoch:  499
2022-07-08 17:25:12.542748: train loss : -0.8935
2022-07-08 17:25:16.973811: validation loss: -0.7512
2022-07-08 17:25:16.999630: Average global foreground Dice: [0.7882]
2022-07-08 17:25:17.030949: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:25:17.593976: Suus1 maybe_update_lr lr: 0.0
2022-07-08 17:25:17.596408: saving scheduled checkpoint file...
2022-07-08 17:25:17.629758: saving checkpoint...
2022-07-08 17:25:18.591810: done, saving took 0.99 seconds
2022-07-08 17:25:18.607763: done
2022-07-08 17:25:18.610035: This epoch took 73.367989 s

2022-07-08 17:25:18.638272: saving checkpoint...
2022-07-08 17:25:19.564943: done, saving took 0.95 seconds
panc_001 (2, 110, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 94, 187], [0, 94, 187]]
number of tiles: 45
computing Gaussian
done
prediction done
suus panc_001 transposed
suus panc_001 not saving softmax
suus panc_001 voeg toe aan pred_gt tuples voor later
panc_010 (2, 104, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_010 transposed
suus panc_010 not saving softmax
suus panc_010 voeg toe aan pred_gt tuples voor later
panc_016 (2, 85, 493, 493)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_016 transposed
suus panc_016 not saving softmax
suus panc_016 voeg toe aan pred_gt tuples voor later
panc_018 (2, 87, 430, 430)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_018 transposed
suus panc_018 not saving softmax
suus panc_018 voeg toe aan pred_gt tuples voor later
panc_029 (2, 99, 498, 498)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_029 transposed
suus panc_029 not saving softmax
suus panc_029 voeg toe aan pred_gt tuples voor later
panc_049 (2, 87, 514, 514)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_049 transposed
suus panc_049 not saving softmax
suus panc_049 voeg toe aan pred_gt tuples voor later
panc_050 (2, 85, 461, 461)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_050 transposed
suus panc_050 not saving softmax
suus panc_050 voeg toe aan pred_gt tuples voor later
panc_070 (2, 106, 556, 556)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_070 transposed
suus panc_070 not saving softmax
suus panc_070 voeg toe aan pred_gt tuples voor later
panc_081 (2, 94, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_081 transposed
suus panc_081 not saving softmax
suus panc_081 voeg toe aan pred_gt tuples voor later
panc_083 (2, 83, 491, 491)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_083 transposed
suus panc_083 not saving softmax
suus panc_083 voeg toe aan pred_gt tuples voor later
panc_087 (2, 154, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 154, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114], [0, 94, 187], [0, 94, 187]]
number of tiles: 63
using precomputed Gaussian
prediction done
suus panc_087 transposed
suus panc_087 not saving softmax
suus panc_087 voeg toe aan pred_gt tuples voor later
panc_098 (2, 147, 592, 592)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 147, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 71, 89, 107], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 175
using precomputed Gaussian
prediction done
suus panc_098 transposed
suus panc_098 not saving softmax
suus panc_098 voeg toe aan pred_gt tuples voor later
panc_110 (2, 98, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_110 transposed
suus panc_110 not saving softmax
suus panc_110 voeg toe aan pred_gt tuples voor later
panc_120 (2, 166, 436, 436)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 166, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126], [0, 106, 212], [0, 106, 212]]
number of tiles: 72
using precomputed Gaussian
prediction done
suus panc_120 transposed
suus panc_120 not saving softmax
suus panc_120 voeg toe aan pred_gt tuples voor later
panc_126 (2, 73, 468, 468)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_126 transposed
suus panc_126 not saving softmax
suus panc_126 voeg toe aan pred_gt tuples voor later
panc_127 (2, 126, 554, 554)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 554, 554)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 110, 220, 330], [0, 110, 220, 330]]
number of tiles: 96
using precomputed Gaussian
prediction done
suus panc_127 transposed
suus panc_127 not saving softmax
suus panc_127 voeg toe aan pred_gt tuples voor later
panc_130 (2, 156, 419, 419)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 156, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 77, 97, 116], [0, 98, 195], [0, 98, 195]]
number of tiles: 63
using precomputed Gaussian
prediction done
suus panc_130 transposed
suus panc_130 not saving softmax
suus panc_130 voeg toe aan pred_gt tuples voor later
panc_149 (2, 77, 488, 488)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_149 transposed
suus panc_149 not saving softmax
suus panc_149 voeg toe aan pred_gt tuples voor later
panc_158 (2, 132, 605, 605)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 132, 605, 605)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 74, 92], [0, 95, 190, 286, 381], [0, 95, 190, 286, 381]]
number of tiles: 150
using precomputed Gaussian
prediction done
suus panc_158 transposed
suus panc_158 not saving softmax
suus panc_158 voeg toe aan pred_gt tuples voor later
panc_160 (2, 75, 523, 523)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_160 transposed
suus panc_160 not saving softmax
suus panc_160 voeg toe aan pred_gt tuples voor later
panc_169 (2, 87, 473, 473)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_169 transposed
suus panc_169 not saving softmax
suus panc_169 voeg toe aan pred_gt tuples voor later
panc_172 (2, 95, 472, 472)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_172 transposed
suus panc_172 not saving softmax
suus panc_172 voeg toe aan pred_gt tuples voor later
panc_173 (2, 81, 442, 442)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 442, 442)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 109, 218], [0, 109, 218]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_173 transposed
suus panc_173 not saving softmax
suus panc_173 voeg toe aan pred_gt tuples voor later
panc_181 (2, 87, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_181 transposed
suus panc_181 not saving softmax
suus panc_181 voeg toe aan pred_gt tuples voor later
panc_212 (2, 97, 557, 557)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 557, 557)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222, 333], [0, 111, 222, 333]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_212 transposed
suus panc_212 not saving softmax
suus panc_212 voeg toe aan pred_gt tuples voor later
panc_214 (2, 109, 542, 542)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 542, 542)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 106, 212, 318], [0, 106, 212, 318]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_214 transposed
suus panc_214 not saving softmax
suus panc_214 voeg toe aan pred_gt tuples voor later
panc_229 (2, 87, 561, 561)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_229 transposed
suus panc_229 not saving softmax
suus panc_229 voeg toe aan pred_gt tuples voor later
panc_242 (2, 101, 556, 556)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_242 transposed
suus panc_242 not saving softmax
suus panc_242 voeg toe aan pred_gt tuples voor later
panc_279 (2, 80, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40], [0, 112, 224], [0, 112, 224]]
number of tiles: 27
using precomputed Gaussian
prediction done
suus panc_279 transposed
suus panc_279 not saving softmax
suus panc_279 voeg toe aan pred_gt tuples voor later
panc_284 (2, 85, 481, 481)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_284 transposed
suus panc_284 not saving softmax
suus panc_284 voeg toe aan pred_gt tuples voor later
panc_292 (2, 93, 533, 533)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 533, 533)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 103, 206, 309], [0, 103, 206, 309]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_292 transposed
suus panc_292 not saving softmax
suus panc_292 voeg toe aan pred_gt tuples voor later
panc_309 (2, 95, 497, 497)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_309 transposed
suus panc_309 not saving softmax
suus panc_309 voeg toe aan pred_gt tuples voor later
panc_316 (2, 89, 462, 462)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 462, 462)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 79, 159, 238], [0, 79, 159, 238]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_316 transposed
suus panc_316 not saving softmax
suus panc_316 voeg toe aan pred_gt tuples voor later
panc_326 (2, 89, 607, 607)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_326 transposed
suus panc_326 not saving softmax
suus panc_326 voeg toe aan pred_gt tuples voor later
panc_327 (2, 99, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_327 transposed
suus panc_327 not saving softmax
suus panc_327 voeg toe aan pred_gt tuples voor later
panc_330 (2, 89, 518, 518)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_330 transposed
suus panc_330 not saving softmax
suus panc_330 voeg toe aan pred_gt tuples voor later
panc_347 (2, 89, 471, 471)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_347 transposed
suus panc_347 not saving softmax
suus panc_347 voeg toe aan pred_gt tuples voor later
panc_348 (2, 89, 473, 473)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_348 transposed
suus panc_348 not saving softmax
suus panc_348 voeg toe aan pred_gt tuples voor later
panc_350 (2, 89, 463, 463)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_350 transposed
suus panc_350 not saving softmax
suus panc_350 voeg toe aan pred_gt tuples voor later
panc_356 (2, 168, 432, 432)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 168, 432, 432)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 73, 91, 110, 128], [0, 104, 208], [0, 104, 208]]
number of tiles: 72
using precomputed Gaussian
prediction done
suus panc_356 transposed
suus panc_356 not saving softmax
suus panc_356 voeg toe aan pred_gt tuples voor later
panc_357 (2, 88, 404, 404)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 404, 404)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 90, 180], [0, 90, 180]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_357 transposed
suus panc_357 not saving softmax
suus panc_357 voeg toe aan pred_gt tuples voor later
panc_372 (2, 93, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_372 transposed
suus panc_372 not saving softmax
suus panc_372 voeg toe aan pred_gt tuples voor later
panc_376 (2, 109, 548, 548)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_376 transposed
suus panc_376 not saving softmax
suus panc_376 voeg toe aan pred_gt tuples voor later
panc_379 (2, 192, 443, 443)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 443, 443)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 110, 219], [0, 110, 219]]
number of tiles: 81
using precomputed Gaussian
prediction done
suus panc_379 transposed
suus panc_379 not saving softmax
suus panc_379 voeg toe aan pred_gt tuples voor later
panc_382 (2, 111, 521, 521)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_382 transposed
suus panc_382 not saving softmax
suus panc_382 voeg toe aan pred_gt tuples voor later
panc_385 (2, 98, 536, 536)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_385 transposed
suus panc_385 not saving softmax
suus panc_385 voeg toe aan pred_gt tuples voor later
panc_401 (2, 180, 461, 461)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 180, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80, 100, 120, 140], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 128
using precomputed Gaussian
prediction done
suus panc_401 transposed
suus panc_401 not saving softmax
suus panc_401 voeg toe aan pred_gt tuples voor later
panc_409 (2, 210, 502, 502)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 210, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 94, 113, 132, 151, 170], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 160
using precomputed Gaussian
prediction done
suus panc_409 transposed
suus panc_409 not saving softmax
suus panc_409 voeg toe aan pred_gt tuples voor later
2022-07-08 17:47:39.639724: finished prediction
2022-07-08 17:47:39.643317: evaluation of raw predictions
2022-07-08 17:47:55.713390: determining postprocessing
Foreground vs background
before: 0.807115899194339
after:  0.8032010968074298
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_001.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_081.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_130.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_212.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_316.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_357.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_010.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_083.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_149.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_214.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_326.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_372.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_016.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_087.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_158.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_229.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_327.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_376.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_018.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_098.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_160.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_242.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_330.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_379.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_029.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_110.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_169.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_279.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_347.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_382.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_049.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_120.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_172.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_284.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_348.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_385.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_050.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_126.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_173.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_292.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_350.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_401.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_070.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_127.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_181.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_309.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_356.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/validation_raw/panc_409.nii.gz
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='4', validation_only=False, continue_training=False, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=True, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-08 17:48:39.733240: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-08 17:48:48.123782: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-08 17:48:48.143920: The split file contains 5 splits.
2022-07-08 17:48:48.146043: Desired fold for training: 4
2022-07-08 17:48:48.148104: This split has 192 training and 47 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusB run_training - zet learning rate als  
2022-07-08 17:48:49.708207: Suus1 maybe_update_lr lr: 0.01
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-08 17:49:04.770823: Unable to plot network architecture:
2022-07-08 17:49:04.774121: local variable 'g' referenced before assignment
2022-07-08 17:49:04.776246: 
printing the network instead:

2022-07-08 17:49:04.778239: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-08 17:49:04.781943: 

2022-07-08 17:49:04.784296: 
epoch:  0
2022-07-08 17:51:16.596090: train loss : 0.0181
2022-07-08 17:51:43.020336: validation loss: -0.0888
2022-07-08 17:51:43.023544: Average global foreground Dice: [0.1896]
2022-07-08 17:51:43.025443: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:51:43.423835: Suus1 maybe_update_lr lr: 0.009982
2022-07-08 17:51:43.426677: This epoch took 158.640021 s

2022-07-08 17:51:43.428942: 
epoch:  1
2022-07-08 17:52:58.375321: train loss : -0.1488
2022-07-08 17:53:14.348903: validation loss: -0.2170
2022-07-08 17:53:14.352173: Average global foreground Dice: [0.3311]
2022-07-08 17:53:14.354383: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:53:14.750610: Suus1 maybe_update_lr lr: 0.009964
2022-07-08 17:53:14.752752: saving best epoch checkpoint...
2022-07-08 17:53:14.803472: saving checkpoint...
2022-07-08 17:53:15.728661: done, saving took 0.97 seconds
2022-07-08 17:53:15.746315: This epoch took 92.315431 s

2022-07-08 17:53:15.751013: 
epoch:  2
2022-07-08 17:54:22.951471: train loss : -0.2124
2022-07-08 17:54:31.238462: validation loss: -0.2908
2022-07-08 17:54:31.241443: Average global foreground Dice: [0.3881]
2022-07-08 17:54:31.243400: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:54:31.643346: Suus1 maybe_update_lr lr: 0.009946
2022-07-08 17:54:31.645496: saving best epoch checkpoint...
2022-07-08 17:54:31.688829: saving checkpoint...
2022-07-08 17:54:32.578771: done, saving took 0.93 seconds
2022-07-08 17:54:32.594370: This epoch took 76.841157 s

2022-07-08 17:54:32.596491: 
epoch:  3
2022-07-08 17:55:40.129404: train loss : -0.2651
2022-07-08 17:55:48.553772: validation loss: -0.2566
2022-07-08 17:55:48.556457: Average global foreground Dice: [0.3719]
2022-07-08 17:55:48.558344: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:55:48.965319: Suus1 maybe_update_lr lr: 0.009928
2022-07-08 17:55:48.967321: saving best epoch checkpoint...
2022-07-08 17:55:49.009547: saving checkpoint...
2022-07-08 17:55:49.895945: done, saving took 0.93 seconds
2022-07-08 17:55:49.909330: This epoch took 77.310753 s

2022-07-08 17:55:49.911399: 
epoch:  4
2022-07-08 17:56:57.116992: train loss : -0.3173
2022-07-08 17:57:06.821952: validation loss: -0.3633
2022-07-08 17:57:06.825188: Average global foreground Dice: [0.4778]
2022-07-08 17:57:06.827215: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:57:07.301539: Suus1 maybe_update_lr lr: 0.00991
2022-07-08 17:57:07.303736: saving best epoch checkpoint...
2022-07-08 17:57:07.346595: saving checkpoint...
2022-07-08 17:57:08.289669: done, saving took 0.98 seconds
2022-07-08 17:57:08.304744: This epoch took 78.391556 s

2022-07-08 17:57:08.307522: 
epoch:  5
2022-07-08 17:58:15.377880: train loss : -0.3620
2022-07-08 17:58:22.890091: validation loss: -0.3339
2022-07-08 17:58:22.892830: Average global foreground Dice: [0.421]
2022-07-08 17:58:22.895037: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:58:23.309003: Suus1 maybe_update_lr lr: 0.009892
2022-07-08 17:58:23.311170: saving best epoch checkpoint...
2022-07-08 17:58:23.356770: saving checkpoint...
2022-07-08 17:58:24.257501: done, saving took 0.94 seconds
2022-07-08 17:58:24.271956: This epoch took 75.961443 s

2022-07-08 17:58:24.274141: 
epoch:  6
2022-07-08 17:59:31.517625: train loss : -0.3823
2022-07-08 17:59:39.001668: validation loss: -0.3928
2022-07-08 17:59:39.011239: Average global foreground Dice: [0.4783]
2022-07-08 17:59:39.015484: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 17:59:39.462831: Suus1 maybe_update_lr lr: 0.009874
2022-07-08 17:59:39.465005: saving best epoch checkpoint...
2022-07-08 17:59:39.504687: saving checkpoint...
2022-07-08 17:59:40.573355: done, saving took 1.11 seconds
2022-07-08 17:59:40.589142: This epoch took 76.313137 s

2022-07-08 17:59:40.591141: 
epoch:  7
2022-07-08 18:00:47.838130: train loss : -0.4369
2022-07-08 18:00:56.725363: validation loss: -0.4630
2022-07-08 18:00:56.728068: Average global foreground Dice: [0.5496]
2022-07-08 18:00:56.730022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:00:57.135034: Suus1 maybe_update_lr lr: 0.009856
2022-07-08 18:00:57.137298: saving best epoch checkpoint...
2022-07-08 18:00:57.180552: saving checkpoint...
2022-07-08 18:00:58.071528: done, saving took 0.93 seconds
2022-07-08 18:00:58.085343: This epoch took 77.492360 s

2022-07-08 18:00:58.087442: 
epoch:  8
2022-07-08 18:02:05.178271: train loss : -0.4312
2022-07-08 18:02:10.329896: validation loss: -0.4491
2022-07-08 18:02:10.333125: Average global foreground Dice: [0.5386]
2022-07-08 18:02:10.335124: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:02:10.773385: Suus1 maybe_update_lr lr: 0.009838
2022-07-08 18:02:10.776023: saving best epoch checkpoint...
2022-07-08 18:02:10.821500: saving checkpoint...
2022-07-08 18:02:11.786646: done, saving took 1.01 seconds
2022-07-08 18:02:11.800775: This epoch took 73.711413 s

2022-07-08 18:02:11.802642: 
epoch:  9
2022-07-08 18:03:19.195754: train loss : -0.4476
2022-07-08 18:03:24.114753: validation loss: -0.4557
2022-07-08 18:03:24.118420: Average global foreground Dice: [0.5392]
2022-07-08 18:03:24.120489: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:03:24.515806: Suus1 maybe_update_lr lr: 0.00982
2022-07-08 18:03:24.518393: saving best epoch checkpoint...
2022-07-08 18:03:24.558163: saving checkpoint...
2022-07-08 18:03:25.460768: done, saving took 0.94 seconds
2022-07-08 18:03:25.475540: This epoch took 73.671037 s

2022-07-08 18:03:25.477736: 
epoch:  10
2022-07-08 18:04:32.677810: train loss : -0.4698
2022-07-08 18:04:37.000674: validation loss: -0.5172
2022-07-08 18:04:37.003623: Average global foreground Dice: [0.5976]
2022-07-08 18:04:37.005693: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:04:37.419121: Suus1 maybe_update_lr lr: 0.009802
2022-07-08 18:04:37.421296: saving best epoch checkpoint...
2022-07-08 18:04:37.458975: saving checkpoint...
2022-07-08 18:04:38.368682: done, saving took 0.95 seconds
2022-07-08 18:04:38.382201: This epoch took 72.902457 s

2022-07-08 18:04:38.384154: 
epoch:  11
2022-07-08 18:05:45.564539: train loss : -0.4893
2022-07-08 18:05:49.850809: validation loss: -0.5291
2022-07-08 18:05:49.856591: Average global foreground Dice: [0.6044]
2022-07-08 18:05:49.864379: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:05:50.281814: Suus1 maybe_update_lr lr: 0.009784
2022-07-08 18:05:50.283978: saving best epoch checkpoint...
2022-07-08 18:05:50.329229: saving checkpoint...
2022-07-08 18:05:51.301413: done, saving took 1.02 seconds
2022-07-08 18:05:51.316166: This epoch took 72.930105 s

2022-07-08 18:05:51.318261: 
epoch:  12
2022-07-08 18:06:58.406985: train loss : -0.5102
2022-07-08 18:07:04.878722: validation loss: -0.5369
2022-07-08 18:07:04.882183: Average global foreground Dice: [0.6134]
2022-07-08 18:07:04.884097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:07:05.295983: Suus1 maybe_update_lr lr: 0.009766
2022-07-08 18:07:05.298095: saving best epoch checkpoint...
2022-07-08 18:07:05.338215: saving checkpoint...
2022-07-08 18:07:06.347018: done, saving took 1.05 seconds
2022-07-08 18:07:06.360175: This epoch took 75.039827 s

2022-07-08 18:07:06.362133: 
epoch:  13
2022-07-08 18:08:13.469865: train loss : -0.5131
2022-07-08 18:08:18.232244: validation loss: -0.5546
2022-07-08 18:08:18.235166: Average global foreground Dice: [0.6331]
2022-07-08 18:08:18.240128: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:08:18.689033: Suus1 maybe_update_lr lr: 0.009748
2022-07-08 18:08:18.691404: saving best epoch checkpoint...
2022-07-08 18:08:18.730327: saving checkpoint...
2022-07-08 18:08:19.840476: done, saving took 1.15 seconds
2022-07-08 18:08:19.855372: This epoch took 73.491322 s

2022-07-08 18:08:19.857551: 
epoch:  14
2022-07-08 18:09:27.050994: train loss : -0.5140
2022-07-08 18:09:31.799854: validation loss: -0.5585
2022-07-08 18:09:31.804055: Average global foreground Dice: [0.6319]
2022-07-08 18:09:31.807228: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:09:32.263101: Suus1 maybe_update_lr lr: 0.00973
2022-07-08 18:09:32.267390: saving best epoch checkpoint...
2022-07-08 18:09:32.324802: saving checkpoint...
2022-07-08 18:09:33.274362: done, saving took 1.00 seconds
2022-07-08 18:09:33.290303: This epoch took 73.430753 s

2022-07-08 18:09:33.292372: 
epoch:  15
2022-07-08 18:10:40.445538: train loss : -0.5277
2022-07-08 18:10:45.849338: validation loss: -0.5467
2022-07-08 18:10:45.851936: Average global foreground Dice: [0.6281]
2022-07-08 18:10:45.853825: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:10:46.354241: Suus1 maybe_update_lr lr: 0.009712
2022-07-08 18:10:46.356321: saving best epoch checkpoint...
2022-07-08 18:10:46.397564: saving checkpoint...
2022-07-08 18:10:47.333456: done, saving took 0.98 seconds
2022-07-08 18:10:47.348083: This epoch took 74.053743 s

2022-07-08 18:10:47.350051: 
epoch:  16
2022-07-08 18:11:54.487555: train loss : -0.5579
2022-07-08 18:11:59.170785: validation loss: -0.5738
2022-07-08 18:11:59.173990: Average global foreground Dice: [0.6417]
2022-07-08 18:11:59.176160: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:11:59.607746: Suus1 maybe_update_lr lr: 0.009693
2022-07-08 18:11:59.610180: saving best epoch checkpoint...
2022-07-08 18:11:59.651887: saving checkpoint...
2022-07-08 18:12:00.576707: done, saving took 0.96 seconds
2022-07-08 18:12:00.590522: This epoch took 73.238428 s

2022-07-08 18:12:00.592571: 
epoch:  17
2022-07-08 18:13:07.931593: train loss : -0.5639
2022-07-08 18:13:12.682350: validation loss: -0.6075
2022-07-08 18:13:12.685462: Average global foreground Dice: [0.68]
2022-07-08 18:13:12.687519: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:13:13.094855: Suus1 maybe_update_lr lr: 0.009675
2022-07-08 18:13:13.097126: saving best epoch checkpoint...
2022-07-08 18:13:13.142561: saving checkpoint...
2022-07-08 18:13:14.254659: done, saving took 1.16 seconds
2022-07-08 18:13:14.288886: This epoch took 73.694513 s

2022-07-08 18:13:14.290964: 
epoch:  18
2022-07-08 18:14:21.419316: train loss : -0.5816
2022-07-08 18:14:26.059304: validation loss: -0.5629
2022-07-08 18:14:26.063316: Average global foreground Dice: [0.6274]
2022-07-08 18:14:26.066782: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:14:26.610150: Suus1 maybe_update_lr lr: 0.009657
2022-07-08 18:14:26.612271: saving best epoch checkpoint...
2022-07-08 18:14:26.658251: saving checkpoint...
2022-07-08 18:14:27.592061: done, saving took 0.98 seconds
2022-07-08 18:14:27.605821: This epoch took 73.313021 s

2022-07-08 18:14:27.607641: 
epoch:  19
2022-07-08 18:15:34.720449: train loss : -0.5645
2022-07-08 18:15:39.094972: validation loss: -0.5798
2022-07-08 18:15:39.098597: Average global foreground Dice: [0.6601]
2022-07-08 18:15:39.100800: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:15:39.609241: Suus1 maybe_update_lr lr: 0.009639
2022-07-08 18:15:39.611412: saving best epoch checkpoint...
2022-07-08 18:15:39.654360: saving checkpoint...
2022-07-08 18:15:40.493369: done, saving took 0.88 seconds
2022-07-08 18:15:40.506958: This epoch took 72.897499 s

2022-07-08 18:15:40.509093: 
epoch:  20
2022-07-08 18:16:47.705867: train loss : -0.5790
2022-07-08 18:16:52.047216: validation loss: -0.5490
2022-07-08 18:16:52.059898: Average global foreground Dice: [0.6036]
2022-07-08 18:16:52.061848: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:16:52.583633: Suus1 maybe_update_lr lr: 0.009621
2022-07-08 18:16:52.585842: saving best epoch checkpoint...
2022-07-08 18:16:52.625659: saving checkpoint...
2022-07-08 18:16:53.656814: done, saving took 1.07 seconds
2022-07-08 18:16:53.670260: This epoch took 73.159349 s

2022-07-08 18:16:53.672322: 
epoch:  21
2022-07-08 18:18:00.877404: train loss : -0.5664
2022-07-08 18:18:05.330789: validation loss: -0.5761
2022-07-08 18:18:05.334556: Average global foreground Dice: [0.6558]
2022-07-08 18:18:05.336867: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:18:05.765322: Suus1 maybe_update_lr lr: 0.009603
2022-07-08 18:18:05.767591: saving best epoch checkpoint...
2022-07-08 18:18:05.801456: saving checkpoint...
2022-07-08 18:18:06.699468: done, saving took 0.93 seconds
2022-07-08 18:18:06.711955: This epoch took 73.037632 s

2022-07-08 18:18:06.713837: 
epoch:  22
2022-07-08 18:19:13.979838: train loss : -0.5843
2022-07-08 18:19:18.345850: validation loss: -0.6326
2022-07-08 18:19:18.349082: Average global foreground Dice: [0.6976]
2022-07-08 18:19:18.351091: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:19:18.784680: Suus1 maybe_update_lr lr: 0.009585
2022-07-08 18:19:18.787012: saving best epoch checkpoint...
2022-07-08 18:19:18.822344: saving checkpoint...
2022-07-08 18:19:19.639594: done, saving took 0.85 seconds
2022-07-08 18:19:19.653073: This epoch took 72.937412 s

2022-07-08 18:19:19.655371: 
epoch:  23
2022-07-08 18:20:26.835926: train loss : -0.6132
2022-07-08 18:20:31.287586: validation loss: -0.6313
2022-07-08 18:20:31.290370: Average global foreground Dice: [0.6957]
2022-07-08 18:20:31.292443: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:20:31.716753: Suus1 maybe_update_lr lr: 0.009567
2022-07-08 18:20:31.718987: saving best epoch checkpoint...
2022-07-08 18:20:31.753379: saving checkpoint...
2022-07-08 18:20:32.689112: done, saving took 0.97 seconds
2022-07-08 18:20:32.703067: This epoch took 73.045462 s

2022-07-08 18:20:32.705059: 
epoch:  24
2022-07-08 18:21:39.787647: train loss : -0.6104
2022-07-08 18:21:44.558661: validation loss: -0.6052
2022-07-08 18:21:44.564774: Average global foreground Dice: [0.6614]
2022-07-08 18:21:44.567248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:21:45.019139: Suus1 maybe_update_lr lr: 0.009549
2022-07-08 18:21:45.021569: saving best epoch checkpoint...
2022-07-08 18:21:45.059414: saving checkpoint...
2022-07-08 18:21:46.014618: done, saving took 0.99 seconds
2022-07-08 18:21:46.027220: This epoch took 73.320283 s

2022-07-08 18:21:46.029059: 
epoch:  25
2022-07-08 18:22:53.155570: train loss : -0.6150
2022-07-08 18:22:57.431458: validation loss: -0.5873
2022-07-08 18:22:57.434609: Average global foreground Dice: [0.6544]
2022-07-08 18:22:57.436743: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:22:57.975741: Suus1 maybe_update_lr lr: 0.009531
2022-07-08 18:22:57.977873: saving best epoch checkpoint...
2022-07-08 18:22:58.012453: saving checkpoint...
2022-07-08 18:22:58.982917: done, saving took 1.00 seconds
2022-07-08 18:22:58.996743: This epoch took 72.965789 s

2022-07-08 18:22:58.998780: 
epoch:  26
2022-07-08 18:24:06.120824: train loss : -0.6302
2022-07-08 18:24:10.387470: validation loss: -0.6094
2022-07-08 18:24:10.391556: Average global foreground Dice: [0.6817]
2022-07-08 18:24:10.393506: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:24:10.819332: Suus1 maybe_update_lr lr: 0.009513
2022-07-08 18:24:10.821542: saving best epoch checkpoint...
2022-07-08 18:24:10.855851: saving checkpoint...
2022-07-08 18:24:11.831996: done, saving took 1.01 seconds
2022-07-08 18:24:11.846864: This epoch took 72.846169 s

2022-07-08 18:24:11.848907: 
epoch:  27
2022-07-08 18:25:18.973572: train loss : -0.6276
2022-07-08 18:25:23.288925: validation loss: -0.6566
2022-07-08 18:25:23.291774: Average global foreground Dice: [0.7183]
2022-07-08 18:25:23.293800: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:25:23.728833: Suus1 maybe_update_lr lr: 0.009495
2022-07-08 18:25:23.731911: saving best epoch checkpoint...
2022-07-08 18:25:23.763042: saving checkpoint...
2022-07-08 18:25:24.669036: done, saving took 0.94 seconds
2022-07-08 18:25:24.683423: This epoch took 72.832571 s

2022-07-08 18:25:24.685636: 
epoch:  28
2022-07-08 18:26:32.000463: train loss : -0.6314
2022-07-08 18:26:36.401898: validation loss: -0.6485
2022-07-08 18:26:36.405035: Average global foreground Dice: [0.7129]
2022-07-08 18:26:36.407688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:26:36.878370: Suus1 maybe_update_lr lr: 0.009476
2022-07-08 18:26:36.880631: saving best epoch checkpoint...
2022-07-08 18:26:36.927772: saving checkpoint...
2022-07-08 18:26:37.880280: done, saving took 1.00 seconds
2022-07-08 18:26:37.894613: This epoch took 73.206871 s

2022-07-08 18:26:37.896738: 
epoch:  29
2022-07-08 18:27:45.049649: train loss : -0.6455
2022-07-08 18:27:49.372161: validation loss: -0.6387
2022-07-08 18:27:49.376248: Average global foreground Dice: [0.6934]
2022-07-08 18:27:49.399846: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:27:49.937109: Suus1 maybe_update_lr lr: 0.009458
2022-07-08 18:27:49.939471: saving best epoch checkpoint...
2022-07-08 18:27:49.975738: saving checkpoint...
2022-07-08 18:27:50.903498: done, saving took 0.96 seconds
2022-07-08 18:27:50.917475: This epoch took 73.018691 s

2022-07-08 18:27:50.919575: 
epoch:  30
2022-07-08 18:28:58.202550: train loss : -0.6432
2022-07-08 18:29:02.528635: validation loss: -0.6380
2022-07-08 18:29:02.547652: Average global foreground Dice: [0.7001]
2022-07-08 18:29:02.559182: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:29:03.085602: Suus1 maybe_update_lr lr: 0.00944
2022-07-08 18:29:03.087735: saving best epoch checkpoint...
2022-07-08 18:29:03.120065: saving checkpoint...
2022-07-08 18:29:04.090403: done, saving took 1.00 seconds
2022-07-08 18:29:04.103817: This epoch took 73.182260 s

2022-07-08 18:29:04.106016: 
epoch:  31
2022-07-08 18:30:11.291659: train loss : -0.6438
2022-07-08 18:30:15.736595: validation loss: -0.6512
2022-07-08 18:30:15.761968: Average global foreground Dice: [0.7149]
2022-07-08 18:30:15.773981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:30:16.308053: Suus1 maybe_update_lr lr: 0.009422
2022-07-08 18:30:16.320828: saving best epoch checkpoint...
2022-07-08 18:30:16.380130: saving checkpoint...
2022-07-08 18:30:17.374160: done, saving took 1.03 seconds
2022-07-08 18:30:17.410722: This epoch took 73.302755 s

2022-07-08 18:30:17.412996: 
epoch:  32
2022-07-08 18:31:24.627570: train loss : -0.6447
2022-07-08 18:31:28.984106: validation loss: -0.6707
2022-07-08 18:31:28.989252: Average global foreground Dice: [0.736]
2022-07-08 18:31:29.007957: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:31:29.558733: Suus1 maybe_update_lr lr: 0.009404
2022-07-08 18:31:29.561090: saving best epoch checkpoint...
2022-07-08 18:31:29.595946: saving checkpoint...
2022-07-08 18:31:30.539707: done, saving took 0.98 seconds
2022-07-08 18:31:30.553108: This epoch took 73.138131 s

2022-07-08 18:31:30.555105: 
epoch:  33
2022-07-08 18:32:37.742973: train loss : -0.6440
2022-07-08 18:32:42.204052: validation loss: -0.6588
2022-07-08 18:32:42.207568: Average global foreground Dice: [0.7179]
2022-07-08 18:32:42.209708: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:32:42.667969: Suus1 maybe_update_lr lr: 0.009386
2022-07-08 18:32:42.703901: saving best epoch checkpoint...
2022-07-08 18:32:42.755488: saving checkpoint...
2022-07-08 18:32:43.717727: done, saving took 1.00 seconds
2022-07-08 18:32:43.731130: This epoch took 73.174175 s

2022-07-08 18:32:43.733147: 
epoch:  34
2022-07-08 18:33:50.982030: train loss : -0.6290
2022-07-08 18:33:55.559407: validation loss: -0.6708
2022-07-08 18:33:55.562853: Average global foreground Dice: [0.7305]
2022-07-08 18:33:55.565082: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:33:56.082339: Suus1 maybe_update_lr lr: 0.009368
2022-07-08 18:33:56.084151: saving best epoch checkpoint...
2022-07-08 18:33:56.120070: saving checkpoint...
2022-07-08 18:33:57.069486: done, saving took 0.98 seconds
2022-07-08 18:33:57.083022: This epoch took 73.347941 s

2022-07-08 18:33:57.085151: 
epoch:  35
2022-07-08 18:35:04.165026: train loss : -0.6439
2022-07-08 18:35:08.478106: validation loss: -0.6433
2022-07-08 18:35:08.481784: Average global foreground Dice: [0.7075]
2022-07-08 18:35:08.483862: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:35:08.934899: Suus1 maybe_update_lr lr: 0.00935
2022-07-08 18:35:08.957311: saving best epoch checkpoint...
2022-07-08 18:35:09.011595: saving checkpoint...
2022-07-08 18:35:09.912920: done, saving took 0.93 seconds
2022-07-08 18:35:09.926890: This epoch took 72.839743 s

2022-07-08 18:35:09.930186: 
epoch:  36
2022-07-08 18:36:17.191517: train loss : -0.6652
2022-07-08 18:36:21.527888: validation loss: -0.6892
2022-07-08 18:36:21.532557: Average global foreground Dice: [0.742]
2022-07-08 18:36:21.536122: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:36:21.967984: Suus1 maybe_update_lr lr: 0.009331
2022-07-08 18:36:21.975131: saving best epoch checkpoint...
2022-07-08 18:36:22.018034: saving checkpoint...
2022-07-08 18:36:23.071972: done, saving took 1.09 seconds
2022-07-08 18:36:23.085837: This epoch took 73.153808 s

2022-07-08 18:36:23.087806: 
epoch:  37
2022-07-08 18:37:30.267109: train loss : -0.6579
2022-07-08 18:37:34.669716: validation loss: -0.6659
2022-07-08 18:37:34.693675: Average global foreground Dice: [0.7222]
2022-07-08 18:37:34.717238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:37:35.178332: Suus1 maybe_update_lr lr: 0.009313
2022-07-08 18:37:35.183903: saving best epoch checkpoint...
2022-07-08 18:37:35.218109: saving checkpoint...
2022-07-08 18:37:36.177052: done, saving took 0.99 seconds
2022-07-08 18:37:36.189678: This epoch took 73.099998 s

2022-07-08 18:37:36.191658: 
epoch:  38
2022-07-08 18:38:43.506625: train loss : -0.6723
2022-07-08 18:38:47.855837: validation loss: -0.6685
2022-07-08 18:38:47.880989: Average global foreground Dice: [0.7335]
2022-07-08 18:38:47.896793: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:38:48.385434: Suus1 maybe_update_lr lr: 0.009295
2022-07-08 18:38:48.387688: saving best epoch checkpoint...
2022-07-08 18:38:48.422135: saving checkpoint...
2022-07-08 18:38:49.362191: done, saving took 0.97 seconds
2022-07-08 18:38:49.375884: This epoch took 73.182218 s

2022-07-08 18:38:49.378071: 
epoch:  39
2022-07-08 18:39:56.609432: train loss : -0.6670
2022-07-08 18:40:00.926109: validation loss: -0.7012
2022-07-08 18:40:00.935796: Average global foreground Dice: [0.7521]
2022-07-08 18:40:00.946829: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:40:01.478775: Suus1 maybe_update_lr lr: 0.009277
2022-07-08 18:40:01.481946: saving best epoch checkpoint...
2022-07-08 18:40:01.546487: saving checkpoint...
2022-07-08 18:40:02.567701: done, saving took 1.07 seconds
2022-07-08 18:40:02.580773: This epoch took 73.200644 s

2022-07-08 18:40:02.583708: 
epoch:  40
2022-07-08 18:41:09.746758: train loss : -0.6875
2022-07-08 18:41:14.099156: validation loss: -0.6946
2022-07-08 18:41:14.105443: Average global foreground Dice: [0.7495]
2022-07-08 18:41:14.127575: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:41:14.591552: Suus1 maybe_update_lr lr: 0.009259
2022-07-08 18:41:14.595524: saving best epoch checkpoint...
2022-07-08 18:41:14.651165: saving checkpoint...
2022-07-08 18:41:15.564170: done, saving took 0.95 seconds
2022-07-08 18:41:15.576994: This epoch took 72.991477 s

2022-07-08 18:41:15.578836: 
epoch:  41
2022-07-08 18:42:22.815994: train loss : -0.6907
2022-07-08 18:42:27.348011: validation loss: -0.6925
2022-07-08 18:42:27.351048: Average global foreground Dice: [0.7551]
2022-07-08 18:42:27.353618: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:42:27.787026: Suus1 maybe_update_lr lr: 0.009241
2022-07-08 18:42:27.789554: saving best epoch checkpoint...
2022-07-08 18:42:27.823626: saving checkpoint...
2022-07-08 18:42:28.758704: done, saving took 0.97 seconds
2022-07-08 18:42:28.772974: This epoch took 73.192346 s

2022-07-08 18:42:28.775022: 
epoch:  42
2022-07-08 18:43:35.970643: train loss : -0.7013
2022-07-08 18:43:40.255992: validation loss: -0.6662
2022-07-08 18:43:40.267440: Average global foreground Dice: [0.7221]
2022-07-08 18:43:40.290275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:43:40.829527: Suus1 maybe_update_lr lr: 0.009223
2022-07-08 18:43:40.831446: saving best epoch checkpoint...
2022-07-08 18:43:40.861593: saving checkpoint...
2022-07-08 18:43:41.796815: done, saving took 0.96 seconds
2022-07-08 18:43:41.810283: This epoch took 73.033172 s

2022-07-08 18:43:41.812399: 
epoch:  43
2022-07-08 18:44:49.076051: train loss : -0.6691
2022-07-08 18:44:53.507162: validation loss: -0.6894
2022-07-08 18:44:53.510372: Average global foreground Dice: [0.7464]
2022-07-08 18:44:53.519145: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:44:53.998932: Suus1 maybe_update_lr lr: 0.009204
2022-07-08 18:44:54.001107: saving best epoch checkpoint...
2022-07-08 18:44:54.032732: saving checkpoint...
2022-07-08 18:44:54.955881: done, saving took 0.95 seconds
2022-07-08 18:44:54.969469: This epoch took 73.155045 s

2022-07-08 18:44:54.971417: 
epoch:  44
2022-07-08 18:46:02.223287: train loss : -0.6769
2022-07-08 18:46:06.678106: validation loss: -0.6891
2022-07-08 18:46:06.685583: Average global foreground Dice: [0.7316]
2022-07-08 18:46:06.687787: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:46:07.127738: Suus1 maybe_update_lr lr: 0.009186
2022-07-08 18:46:07.130217: saving best epoch checkpoint...
2022-07-08 18:46:07.165974: saving checkpoint...
2022-07-08 18:46:08.281953: done, saving took 1.15 seconds
2022-07-08 18:46:08.297789: This epoch took 73.324290 s

2022-07-08 18:46:08.300015: 
epoch:  45
2022-07-08 18:47:15.486021: train loss : -0.6937
2022-07-08 18:47:19.936971: validation loss: -0.6982
2022-07-08 18:47:19.960732: Average global foreground Dice: [0.7549]
2022-07-08 18:47:19.972844: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:47:20.556175: Suus1 maybe_update_lr lr: 0.009168
2022-07-08 18:47:20.586720: saving best epoch checkpoint...
2022-07-08 18:47:20.644418: saving checkpoint...
2022-07-08 18:47:21.539444: done, saving took 0.93 seconds
2022-07-08 18:47:21.553297: This epoch took 73.251228 s

2022-07-08 18:47:21.555288: 
epoch:  46
2022-07-08 18:48:28.862295: train loss : -0.6713
2022-07-08 18:48:33.227148: validation loss: -0.6669
2022-07-08 18:48:33.231495: Average global foreground Dice: [0.7292]
2022-07-08 18:48:33.234601: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:48:33.722045: Suus1 maybe_update_lr lr: 0.00915
2022-07-08 18:48:33.724284: saving best epoch checkpoint...
2022-07-08 18:48:33.760758: saving checkpoint...
2022-07-08 18:48:34.706146: done, saving took 0.98 seconds
2022-07-08 18:48:34.721057: This epoch took 73.163835 s

2022-07-08 18:48:34.723363: 
epoch:  47
2022-07-08 18:49:41.970585: train loss : -0.7026
2022-07-08 18:49:46.450041: validation loss: -0.6956
2022-07-08 18:49:46.453070: Average global foreground Dice: [0.7539]
2022-07-08 18:49:46.466130: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:49:47.069954: Suus1 maybe_update_lr lr: 0.009132
2022-07-08 18:49:47.072127: saving best epoch checkpoint...
2022-07-08 18:49:47.120545: saving checkpoint...
2022-07-08 18:49:47.964648: done, saving took 0.89 seconds
2022-07-08 18:49:47.978626: This epoch took 73.253198 s

2022-07-08 18:49:47.980765: 
epoch:  48
2022-07-08 18:50:55.247661: train loss : -0.6826
2022-07-08 18:50:59.600501: validation loss: -0.6788
2022-07-08 18:50:59.603584: Average global foreground Dice: [0.7405]
2022-07-08 18:50:59.613531: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:51:00.045860: Suus1 maybe_update_lr lr: 0.009114
2022-07-08 18:51:00.048133: saving best epoch checkpoint...
2022-07-08 18:51:00.094621: saving checkpoint...
2022-07-08 18:51:01.054326: done, saving took 1.00 seconds
2022-07-08 18:51:01.069035: This epoch took 73.086289 s

2022-07-08 18:51:01.071019: 
epoch:  49
2022-07-08 18:52:08.334047: train loss : -0.6898
2022-07-08 18:52:12.790967: validation loss: -0.7207
2022-07-08 18:52:12.804773: Average global foreground Dice: [0.7687]
2022-07-08 18:52:12.834923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:52:13.356390: Suus1 maybe_update_lr lr: 0.009095
2022-07-08 18:52:13.358620: saving scheduled checkpoint file...
2022-07-08 18:52:13.406277: saving checkpoint...
2022-07-08 18:52:14.311918: done, saving took 0.95 seconds
2022-07-08 18:52:14.328307: done
2022-07-08 18:52:14.331368: saving best epoch checkpoint...
2022-07-08 18:52:14.370536: saving checkpoint...
2022-07-08 18:52:15.266763: done, saving took 0.93 seconds
2022-07-08 18:52:15.281833: This epoch took 74.208799 s

2022-07-08 18:52:15.283706: 
epoch:  50
2022-07-08 18:53:22.486330: train loss : -0.7010
2022-07-08 18:53:26.934742: validation loss: -0.7138
2022-07-08 18:53:26.940362: Average global foreground Dice: [0.757]
2022-07-08 18:53:26.957059: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:53:27.402848: Suus1 maybe_update_lr lr: 0.009077
2022-07-08 18:53:27.405811: saving best epoch checkpoint...
2022-07-08 18:53:27.450739: saving checkpoint...
2022-07-08 18:53:28.436344: done, saving took 1.03 seconds
2022-07-08 18:53:28.450335: This epoch took 73.164751 s

2022-07-08 18:53:28.452296: 
epoch:  51
2022-07-08 18:54:35.682795: train loss : -0.7014
2022-07-08 18:54:40.473365: validation loss: -0.7219
2022-07-08 18:54:40.506755: Average global foreground Dice: [0.7687]
2022-07-08 18:54:40.531252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:54:41.094008: Suus1 maybe_update_lr lr: 0.009059
2022-07-08 18:54:41.096342: saving best epoch checkpoint...
2022-07-08 18:54:41.145687: saving checkpoint...
2022-07-08 18:54:42.103963: done, saving took 1.01 seconds
2022-07-08 18:54:42.118131: This epoch took 73.663994 s

2022-07-08 18:54:42.120068: 
epoch:  52
2022-07-08 18:55:49.410557: train loss : -0.7023
2022-07-08 18:55:53.757288: validation loss: -0.7201
2022-07-08 18:55:53.760194: Average global foreground Dice: [0.7656]
2022-07-08 18:55:53.762300: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:55:54.296566: Suus1 maybe_update_lr lr: 0.009041
2022-07-08 18:55:54.300278: saving best epoch checkpoint...
2022-07-08 18:55:54.376293: saving checkpoint...
2022-07-08 18:55:55.536929: done, saving took 1.22 seconds
2022-07-08 18:55:55.551651: This epoch took 73.429700 s

2022-07-08 18:55:55.553720: 
epoch:  53
2022-07-08 18:57:02.833941: train loss : -0.7148
2022-07-08 18:57:07.254750: validation loss: -0.6925
2022-07-08 18:57:07.275298: Average global foreground Dice: [0.7441]
2022-07-08 18:57:07.278033: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:57:07.916275: Suus1 maybe_update_lr lr: 0.009023
2022-07-08 18:57:07.930830: saving best epoch checkpoint...
2022-07-08 18:57:07.970933: saving checkpoint...
2022-07-08 18:57:08.783976: done, saving took 0.85 seconds
2022-07-08 18:57:08.797422: This epoch took 73.241765 s

2022-07-08 18:57:08.799506: 
epoch:  54
2022-07-08 18:58:16.065928: train loss : -0.7158
2022-07-08 18:58:20.531081: validation loss: -0.7050
2022-07-08 18:58:20.534289: Average global foreground Dice: [0.7506]
2022-07-08 18:58:20.551958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:58:21.022140: Suus1 maybe_update_lr lr: 0.009004
2022-07-08 18:58:21.051621: saving best epoch checkpoint...
2022-07-08 18:58:21.120423: saving checkpoint...
2022-07-08 18:58:22.026711: done, saving took 0.96 seconds
2022-07-08 18:58:22.040215: This epoch took 73.238608 s

2022-07-08 18:58:22.042286: 
epoch:  55
2022-07-08 18:59:29.222190: train loss : -0.7095
2022-07-08 18:59:33.773061: validation loss: -0.6901
2022-07-08 18:59:33.784971: Average global foreground Dice: [0.7426]
2022-07-08 18:59:33.805269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 18:59:34.293893: Suus1 maybe_update_lr lr: 0.008986
2022-07-08 18:59:34.338360: saving best epoch checkpoint...
2022-07-08 18:59:34.396389: saving checkpoint...
2022-07-08 18:59:35.269545: done, saving took 0.91 seconds
2022-07-08 18:59:35.282642: This epoch took 73.238472 s

2022-07-08 18:59:35.284564: 
epoch:  56
2022-07-08 19:00:42.565929: train loss : -0.7084
2022-07-08 19:00:46.986859: validation loss: -0.7021
2022-07-08 19:00:46.989584: Average global foreground Dice: [0.7504]
2022-07-08 19:00:46.991770: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:00:47.434971: Suus1 maybe_update_lr lr: 0.008968
2022-07-08 19:00:47.437292: saving best epoch checkpoint...
2022-07-08 19:00:47.469918: saving checkpoint...
2022-07-08 19:00:48.387023: done, saving took 0.95 seconds
2022-07-08 19:00:48.400274: This epoch took 73.113882 s

2022-07-08 19:00:48.402309: 
epoch:  57
2022-07-08 19:01:55.702754: train loss : -0.7061
2022-07-08 19:02:00.260747: validation loss: -0.7210
2022-07-08 19:02:00.266520: Average global foreground Dice: [0.7662]
2022-07-08 19:02:00.269118: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:02:00.903334: Suus1 maybe_update_lr lr: 0.00895
2022-07-08 19:02:00.905507: saving best epoch checkpoint...
2022-07-08 19:02:00.938688: saving checkpoint...
2022-07-08 19:02:01.905577: done, saving took 1.00 seconds
2022-07-08 19:02:01.919302: This epoch took 73.514993 s

2022-07-08 19:02:01.921365: 
epoch:  58
2022-07-08 19:03:09.178901: train loss : -0.7142
2022-07-08 19:03:13.575421: validation loss: -0.6867
2022-07-08 19:03:13.590919: Average global foreground Dice: [0.7344]
2022-07-08 19:03:13.596597: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:03:14.186145: Suus1 maybe_update_lr lr: 0.008931
2022-07-08 19:03:14.197626: This epoch took 72.274293 s

2022-07-08 19:03:14.200216: 
epoch:  59
2022-07-08 19:04:21.521124: train loss : -0.6969
2022-07-08 19:04:25.998826: validation loss: -0.7108
2022-07-08 19:04:26.009390: Average global foreground Dice: [0.7611]
2022-07-08 19:04:26.017334: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:04:26.551104: Suus1 maybe_update_lr lr: 0.008913
2022-07-08 19:04:26.581300: saving best epoch checkpoint...
2022-07-08 19:04:26.663322: saving checkpoint...
2022-07-08 19:04:27.820210: done, saving took 1.21 seconds
2022-07-08 19:04:27.834226: This epoch took 73.631783 s

2022-07-08 19:04:27.835972: 
epoch:  60
2022-07-08 19:05:35.059186: train loss : -0.7066
2022-07-08 19:05:39.391093: validation loss: -0.7088
2022-07-08 19:05:39.409901: Average global foreground Dice: [0.7604]
2022-07-08 19:05:39.415218: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:05:39.897727: Suus1 maybe_update_lr lr: 0.008895
2022-07-08 19:05:39.900079: saving best epoch checkpoint...
2022-07-08 19:05:39.942149: saving checkpoint...
2022-07-08 19:05:40.920008: done, saving took 1.02 seconds
2022-07-08 19:05:40.934382: This epoch took 73.096586 s

2022-07-08 19:05:40.936269: 
epoch:  61
2022-07-08 19:06:48.287141: train loss : -0.7085
2022-07-08 19:06:52.884228: validation loss: -0.7002
2022-07-08 19:06:52.887750: Average global foreground Dice: [0.7487]
2022-07-08 19:06:52.889992: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:06:53.372293: Suus1 maybe_update_lr lr: 0.008877
2022-07-08 19:06:53.390563: saving best epoch checkpoint...
2022-07-08 19:06:53.451416: saving checkpoint...
2022-07-08 19:06:54.538663: done, saving took 1.14 seconds
2022-07-08 19:06:54.552915: This epoch took 73.614735 s

2022-07-08 19:06:54.555274: 
epoch:  62
2022-07-08 19:08:01.771183: train loss : -0.7161
2022-07-08 19:08:06.163082: validation loss: -0.6974
2022-07-08 19:08:06.166383: Average global foreground Dice: [0.7422]
2022-07-08 19:08:06.168419: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:08:06.622094: Suus1 maybe_update_lr lr: 0.008859
2022-07-08 19:08:06.624351: This epoch took 72.066972 s

2022-07-08 19:08:06.626519: 
epoch:  63
2022-07-08 19:09:13.910553: train loss : -0.7237
2022-07-08 19:09:18.484660: validation loss: -0.7211
2022-07-08 19:09:18.487545: Average global foreground Dice: [0.7617]
2022-07-08 19:09:18.513924: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:09:19.010475: Suus1 maybe_update_lr lr: 0.00884
2022-07-08 19:09:19.028387: saving best epoch checkpoint...
2022-07-08 19:09:19.068480: saving checkpoint...
2022-07-08 19:09:20.030862: done, saving took 1.00 seconds
2022-07-08 19:09:20.044987: This epoch took 73.416525 s

2022-07-08 19:09:20.046839: 
epoch:  64
2022-07-08 19:10:27.306917: train loss : -0.7292
2022-07-08 19:10:31.915710: validation loss: -0.7015
2022-07-08 19:10:31.935189: Average global foreground Dice: [0.7511]
2022-07-08 19:10:31.945622: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:10:32.462929: Suus1 maybe_update_lr lr: 0.008822
2022-07-08 19:10:32.465055: saving best epoch checkpoint...
2022-07-08 19:10:32.510983: saving checkpoint...
2022-07-08 19:10:33.469133: done, saving took 1.00 seconds
2022-07-08 19:10:33.483484: This epoch took 73.434805 s

2022-07-08 19:10:33.485483: 
epoch:  65
2022-07-08 19:11:40.785937: train loss : -0.7191
2022-07-08 19:11:45.295627: validation loss: -0.7354
2022-07-08 19:11:45.324009: Average global foreground Dice: [0.7816]
2022-07-08 19:11:45.342283: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:11:45.828428: Suus1 maybe_update_lr lr: 0.008804
2022-07-08 19:11:45.832261: saving best epoch checkpoint...
2022-07-08 19:11:45.877977: saving checkpoint...
2022-07-08 19:11:46.826448: done, saving took 0.99 seconds
2022-07-08 19:11:46.841476: This epoch took 73.354114 s

2022-07-08 19:11:46.843576: 
epoch:  66
2022-07-08 19:12:54.254277: train loss : -0.7273
2022-07-08 19:12:58.652103: validation loss: -0.7552
2022-07-08 19:12:58.666846: Average global foreground Dice: [0.8017]
2022-07-08 19:12:58.670845: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:12:59.144744: Suus1 maybe_update_lr lr: 0.008785
2022-07-08 19:12:59.153910: saving best epoch checkpoint...
2022-07-08 19:12:59.213342: saving checkpoint...
2022-07-08 19:13:00.579328: done, saving took 1.41 seconds
2022-07-08 19:13:00.594752: This epoch took 73.749241 s

2022-07-08 19:13:00.596803: 
epoch:  67
2022-07-08 19:14:07.878838: train loss : -0.7370
2022-07-08 19:14:12.228370: validation loss: -0.7268
2022-07-08 19:14:12.239948: Average global foreground Dice: [0.7749]
2022-07-08 19:14:12.242806: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:14:12.759961: Suus1 maybe_update_lr lr: 0.008767
2022-07-08 19:14:12.762444: saving best epoch checkpoint...
2022-07-08 19:14:12.814390: saving checkpoint...
2022-07-08 19:14:13.759095: done, saving took 0.99 seconds
2022-07-08 19:14:13.774988: This epoch took 73.176256 s

2022-07-08 19:14:13.777463: 
epoch:  68
2022-07-08 19:15:21.118578: train loss : -0.7282
2022-07-08 19:15:25.556624: validation loss: -0.6955
2022-07-08 19:15:25.561883: Average global foreground Dice: [0.7482]
2022-07-08 19:15:25.570571: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:15:26.274725: Suus1 maybe_update_lr lr: 0.008749
2022-07-08 19:15:26.276933: This epoch took 72.497307 s

2022-07-08 19:15:26.278958: 
epoch:  69
2022-07-08 19:16:33.546181: train loss : -0.6994
2022-07-08 19:16:38.095192: validation loss: -0.7148
2022-07-08 19:16:38.116150: Average global foreground Dice: [0.7597]
2022-07-08 19:16:38.139530: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:16:38.742301: Suus1 maybe_update_lr lr: 0.008731
2022-07-08 19:16:38.772332: This epoch took 72.491489 s

2022-07-08 19:16:38.785977: 
epoch:  70
2022-07-08 19:17:46.061071: train loss : -0.7128
2022-07-08 19:17:50.688603: validation loss: -0.7346
2022-07-08 19:17:50.692985: Average global foreground Dice: [0.7813]
2022-07-08 19:17:50.701355: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:17:51.254383: Suus1 maybe_update_lr lr: 0.008712
2022-07-08 19:17:51.267039: saving best epoch checkpoint...
2022-07-08 19:17:51.327270: saving checkpoint...
2022-07-08 19:17:52.362686: done, saving took 1.09 seconds
2022-07-08 19:17:52.377317: This epoch took 73.583762 s

2022-07-08 19:17:52.379329: 
epoch:  71
2022-07-08 19:18:59.554147: train loss : -0.7200
2022-07-08 19:19:04.203011: validation loss: -0.6969
2022-07-08 19:19:04.211793: Average global foreground Dice: [0.746]
2022-07-08 19:19:04.213933: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:19:04.731620: Suus1 maybe_update_lr lr: 0.008694
2022-07-08 19:19:04.734173: This epoch took 72.352850 s

2022-07-08 19:19:04.736475: 
epoch:  72
2022-07-08 19:20:11.918689: train loss : -0.7239
2022-07-08 19:20:16.452310: validation loss: -0.7003
2022-07-08 19:20:16.466318: Average global foreground Dice: [0.7633]
2022-07-08 19:20:16.468473: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:20:16.933685: Suus1 maybe_update_lr lr: 0.008676
2022-07-08 19:20:16.935946: This epoch took 72.196670 s

2022-07-08 19:20:16.937833: 
epoch:  73
2022-07-08 19:21:24.237205: train loss : -0.7412
2022-07-08 19:21:28.793153: validation loss: -0.7299
2022-07-08 19:21:28.798740: Average global foreground Dice: [0.7763]
2022-07-08 19:21:28.802246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:21:29.291059: Suus1 maybe_update_lr lr: 0.008658
2022-07-08 19:21:29.307783: saving best epoch checkpoint...
2022-07-08 19:21:29.342442: saving checkpoint...
2022-07-08 19:21:30.268231: done, saving took 0.96 seconds
2022-07-08 19:21:30.282746: This epoch took 73.343020 s

2022-07-08 19:21:30.285061: 
epoch:  74
2022-07-08 19:22:37.615290: train loss : -0.7401
2022-07-08 19:22:41.977725: validation loss: -0.7452
2022-07-08 19:22:41.984956: Average global foreground Dice: [0.788]
2022-07-08 19:22:41.990983: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:22:42.475908: Suus1 maybe_update_lr lr: 0.008639
2022-07-08 19:22:42.502533: saving best epoch checkpoint...
2022-07-08 19:22:42.587723: saving checkpoint...
2022-07-08 19:22:43.542002: done, saving took 1.01 seconds
2022-07-08 19:22:43.555249: This epoch took 73.268110 s

2022-07-08 19:22:43.557110: 
epoch:  75
2022-07-08 19:23:50.998494: train loss : -0.7384
2022-07-08 19:23:55.457599: validation loss: -0.7384
2022-07-08 19:23:55.493396: Average global foreground Dice: [0.7789]
2022-07-08 19:23:55.516574: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:23:56.011301: Suus1 maybe_update_lr lr: 0.008621
2022-07-08 19:23:56.013378: saving best epoch checkpoint...
2022-07-08 19:23:56.045216: saving checkpoint...
2022-07-08 19:23:56.970769: done, saving took 0.96 seconds
2022-07-08 19:23:56.984548: This epoch took 73.425613 s

2022-07-08 19:23:56.986685: 
epoch:  76
2022-07-08 19:25:04.248621: train loss : -0.7441
2022-07-08 19:25:08.729709: validation loss: -0.7373
2022-07-08 19:25:08.757846: Average global foreground Dice: [0.7803]
2022-07-08 19:25:08.785846: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:25:09.452658: Suus1 maybe_update_lr lr: 0.008603
2022-07-08 19:25:09.455007: saving best epoch checkpoint...
2022-07-08 19:25:09.489762: saving checkpoint...
2022-07-08 19:25:10.332942: done, saving took 0.88 seconds
2022-07-08 19:25:10.346562: This epoch took 73.357817 s

2022-07-08 19:25:10.348829: 
epoch:  77
2022-07-08 19:26:17.519733: train loss : -0.7395
2022-07-08 19:26:21.889522: validation loss: -0.7322
2022-07-08 19:26:21.897146: Average global foreground Dice: [0.7815]
2022-07-08 19:26:21.917482: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:26:22.500465: Suus1 maybe_update_lr lr: 0.008584
2022-07-08 19:26:22.502559: saving best epoch checkpoint...
2022-07-08 19:26:22.533203: saving checkpoint...
2022-07-08 19:26:23.433652: done, saving took 0.93 seconds
2022-07-08 19:26:23.447285: This epoch took 73.096365 s

2022-07-08 19:26:23.449378: 
epoch:  78
2022-07-08 19:27:30.752953: train loss : -0.7413
2022-07-08 19:27:35.379824: validation loss: -0.7267
2022-07-08 19:27:35.382911: Average global foreground Dice: [0.776]
2022-07-08 19:27:35.384983: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:27:35.811872: Suus1 maybe_update_lr lr: 0.008566
2022-07-08 19:27:35.815758: saving best epoch checkpoint...
2022-07-08 19:27:35.851834: saving checkpoint...
2022-07-08 19:27:36.743020: done, saving took 0.92 seconds
2022-07-08 19:27:36.757935: This epoch took 73.306660 s

2022-07-08 19:27:36.760482: 
epoch:  79
2022-07-08 19:28:43.955624: train loss : -0.7328
2022-07-08 19:28:48.466867: validation loss: -0.7279
2022-07-08 19:28:48.481283: Average global foreground Dice: [0.771]
2022-07-08 19:28:48.495428: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:28:49.152085: Suus1 maybe_update_lr lr: 0.008548
2022-07-08 19:28:49.154621: saving best epoch checkpoint...
2022-07-08 19:28:49.190220: saving checkpoint...
2022-07-08 19:28:50.191108: done, saving took 1.03 seconds
2022-07-08 19:28:50.204784: This epoch took 73.442045 s

2022-07-08 19:28:50.206825: 
epoch:  80
2022-07-08 19:29:57.400387: train loss : -0.7258
2022-07-08 19:30:01.822679: validation loss: -0.7290
2022-07-08 19:30:01.844853: Average global foreground Dice: [0.772]
2022-07-08 19:30:01.855619: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:30:02.345395: Suus1 maybe_update_lr lr: 0.008529
2022-07-08 19:30:02.350084: saving best epoch checkpoint...
2022-07-08 19:30:02.388044: saving checkpoint...
2022-07-08 19:30:03.397039: done, saving took 1.04 seconds
2022-07-08 19:30:03.411354: This epoch took 73.202544 s

2022-07-08 19:30:03.413603: 
epoch:  81
2022-07-08 19:31:10.630845: train loss : -0.7425
2022-07-08 19:31:15.112503: validation loss: -0.7162
2022-07-08 19:31:15.124069: Average global foreground Dice: [0.7599]
2022-07-08 19:31:15.132565: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:31:15.671500: Suus1 maybe_update_lr lr: 0.008511
2022-07-08 19:31:15.673719: This epoch took 72.257658 s

2022-07-08 19:31:15.675646: 
epoch:  82
2022-07-08 19:32:22.908404: train loss : -0.7384
2022-07-08 19:32:27.419668: validation loss: -0.7315
2022-07-08 19:32:27.422905: Average global foreground Dice: [0.7763]
2022-07-08 19:32:27.451608: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:32:28.060647: Suus1 maybe_update_lr lr: 0.008493
2022-07-08 19:32:28.085358: This epoch took 72.407862 s

2022-07-08 19:32:28.095279: 
epoch:  83
2022-07-08 19:33:35.245761: train loss : -0.7385
2022-07-08 19:33:39.751021: validation loss: -0.7351
2022-07-08 19:33:39.758361: Average global foreground Dice: [0.7765]
2022-07-08 19:33:39.762998: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:33:40.242639: Suus1 maybe_update_lr lr: 0.008474
2022-07-08 19:33:40.244915: saving best epoch checkpoint...
2022-07-08 19:33:40.286814: saving checkpoint...
2022-07-08 19:33:41.211659: done, saving took 0.96 seconds
2022-07-08 19:33:41.226372: This epoch took 73.120642 s

2022-07-08 19:33:41.228471: 
epoch:  84
2022-07-08 19:34:48.511869: train loss : -0.7303
2022-07-08 19:34:53.023788: validation loss: -0.7269
2022-07-08 19:34:53.059634: Average global foreground Dice: [0.7715]
2022-07-08 19:34:53.065767: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:34:53.701318: Suus1 maybe_update_lr lr: 0.008456
2022-07-08 19:34:53.703626: saving best epoch checkpoint...
2022-07-08 19:34:53.735782: saving checkpoint...
2022-07-08 19:34:54.762336: done, saving took 1.06 seconds
2022-07-08 19:34:54.776171: This epoch took 73.545524 s

2022-07-08 19:34:54.778367: 
epoch:  85
2022-07-08 19:36:02.145673: train loss : -0.7285
2022-07-08 19:36:06.470040: validation loss: -0.7207
2022-07-08 19:36:06.501782: Average global foreground Dice: [0.7719]
2022-07-08 19:36:06.514249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:36:06.986156: Suus1 maybe_update_lr lr: 0.008438
2022-07-08 19:36:06.988455: saving best epoch checkpoint...
2022-07-08 19:36:07.022610: saving checkpoint...
2022-07-08 19:36:07.958760: done, saving took 0.97 seconds
2022-07-08 19:36:07.972628: This epoch took 73.192184 s

2022-07-08 19:36:07.974728: 
epoch:  86
2022-07-08 19:37:15.155992: train loss : -0.7312
2022-07-08 19:37:19.641022: validation loss: -0.7119
2022-07-08 19:37:19.644141: Average global foreground Dice: [0.7587]
2022-07-08 19:37:19.646609: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:37:20.089404: Suus1 maybe_update_lr lr: 0.008419
2022-07-08 19:37:20.091892: This epoch took 72.115168 s

2022-07-08 19:37:20.094108: 
epoch:  87
2022-07-08 19:38:27.285555: train loss : -0.7411
2022-07-08 19:38:31.687462: validation loss: -0.7329
2022-07-08 19:38:31.690950: Average global foreground Dice: [0.7843]
2022-07-08 19:38:31.693022: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:38:32.200713: Suus1 maybe_update_lr lr: 0.008401
2022-07-08 19:38:32.203238: saving best epoch checkpoint...
2022-07-08 19:38:32.236836: saving checkpoint...
2022-07-08 19:38:33.086741: done, saving took 0.88 seconds
2022-07-08 19:38:33.100320: This epoch took 73.003940 s

2022-07-08 19:38:33.102445: 
epoch:  88
2022-07-08 19:39:40.376348: train loss : -0.7438
2022-07-08 19:39:44.851453: validation loss: -0.7258
2022-07-08 19:39:44.859383: Average global foreground Dice: [0.7716]
2022-07-08 19:39:44.870251: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:39:45.342013: Suus1 maybe_update_lr lr: 0.008383
2022-07-08 19:39:45.344256: saving best epoch checkpoint...
2022-07-08 19:39:45.382634: saving checkpoint...
2022-07-08 19:39:46.233464: done, saving took 0.89 seconds
2022-07-08 19:39:46.247988: This epoch took 73.143601 s

2022-07-08 19:39:46.250141: 
epoch:  89
2022-07-08 19:40:53.491255: train loss : -0.7547
2022-07-08 19:40:57.971919: validation loss: -0.7226
2022-07-08 19:40:57.982661: Average global foreground Dice: [0.7776]
2022-07-08 19:40:57.987188: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:40:58.551685: Suus1 maybe_update_lr lr: 0.008364
2022-07-08 19:40:58.554017: saving best epoch checkpoint...
2022-07-08 19:40:58.588765: saving checkpoint...
2022-07-08 19:40:59.476031: done, saving took 0.92 seconds
2022-07-08 19:40:59.489894: This epoch took 73.237633 s

2022-07-08 19:40:59.491881: 
epoch:  90
2022-07-08 19:42:06.704774: train loss : -0.7473
2022-07-08 19:42:11.177185: validation loss: -0.7367
2022-07-08 19:42:11.192422: Average global foreground Dice: [0.7745]
2022-07-08 19:42:11.207238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:42:11.737776: Suus1 maybe_update_lr lr: 0.008346
2022-07-08 19:42:11.740241: saving best epoch checkpoint...
2022-07-08 19:42:11.775173: saving checkpoint...
2022-07-08 19:42:12.667335: done, saving took 0.92 seconds
2022-07-08 19:42:12.680853: This epoch took 73.186769 s

2022-07-08 19:42:12.683065: 
epoch:  91
2022-07-08 19:43:19.913311: train loss : -0.7515
2022-07-08 19:43:24.435635: validation loss: -0.7136
2022-07-08 19:43:24.441057: Average global foreground Dice: [0.7643]
2022-07-08 19:43:24.443290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:43:25.069952: Suus1 maybe_update_lr lr: 0.008328
2022-07-08 19:43:25.082416: This epoch took 72.397400 s

2022-07-08 19:43:25.098423: 
epoch:  92
2022-07-08 19:44:32.413421: train loss : -0.7531
2022-07-08 19:44:36.812982: validation loss: -0.7347
2022-07-08 19:44:36.819338: Average global foreground Dice: [0.7783]
2022-07-08 19:44:36.821559: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:44:37.296367: Suus1 maybe_update_lr lr: 0.008309
2022-07-08 19:44:37.336404: This epoch took 72.234748 s

2022-07-08 19:44:37.380265: 
epoch:  93
2022-07-08 19:45:44.649035: train loss : -0.7593
2022-07-08 19:45:48.989764: validation loss: -0.7286
2022-07-08 19:45:48.994788: Average global foreground Dice: [0.7676]
2022-07-08 19:45:48.998235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:45:49.662020: Suus1 maybe_update_lr lr: 0.008291
2022-07-08 19:45:49.664462: This epoch took 72.263164 s

2022-07-08 19:45:49.666505: 
epoch:  94
2022-07-08 19:46:57.057891: train loss : -0.7523
2022-07-08 19:47:01.455608: validation loss: -0.7466
2022-07-08 19:47:01.467709: Average global foreground Dice: [0.7839]
2022-07-08 19:47:01.499926: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:47:02.066270: Suus1 maybe_update_lr lr: 0.008272
2022-07-08 19:47:02.085280: saving best epoch checkpoint...
2022-07-08 19:47:02.151245: saving checkpoint...
2022-07-08 19:47:03.110223: done, saving took 1.01 seconds
2022-07-08 19:47:03.126707: This epoch took 73.458152 s

2022-07-08 19:47:03.129169: 
epoch:  95
2022-07-08 19:48:10.402355: train loss : -0.7527
2022-07-08 19:48:14.787598: validation loss: -0.7224
2022-07-08 19:48:14.804779: Average global foreground Dice: [0.7643]
2022-07-08 19:48:14.807095: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:48:15.325893: Suus1 maybe_update_lr lr: 0.008254
2022-07-08 19:48:15.328072: This epoch took 72.196642 s

2022-07-08 19:48:15.329936: 
epoch:  96
2022-07-08 19:49:22.588226: train loss : -0.7419
2022-07-08 19:49:26.984579: validation loss: -0.7268
2022-07-08 19:49:27.030924: Average global foreground Dice: [0.7704]
2022-07-08 19:49:27.045514: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:49:27.585204: Suus1 maybe_update_lr lr: 0.008236
2022-07-08 19:49:27.600123: This epoch took 72.268219 s

2022-07-08 19:49:27.608951: 
epoch:  97
2022-07-08 19:50:34.926535: train loss : -0.7576
2022-07-08 19:50:39.494435: validation loss: -0.7357
2022-07-08 19:50:39.509416: Average global foreground Dice: [0.7724]
2022-07-08 19:50:39.520389: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:50:40.044095: Suus1 maybe_update_lr lr: 0.008217
2022-07-08 19:50:40.064009: This epoch took 72.451070 s

2022-07-08 19:50:40.066120: 
epoch:  98
2022-07-08 19:51:47.411309: train loss : -0.7506
2022-07-08 19:51:51.960690: validation loss: -0.7667
2022-07-08 19:51:51.984775: Average global foreground Dice: [0.806]
2022-07-08 19:51:52.015270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:51:52.546643: Suus1 maybe_update_lr lr: 0.008199
2022-07-08 19:51:52.564273: saving best epoch checkpoint...
2022-07-08 19:51:52.614304: saving checkpoint...
2022-07-08 19:51:53.687818: done, saving took 1.12 seconds
2022-07-08 19:51:53.703243: This epoch took 73.621526 s

2022-07-08 19:51:53.705218: 
epoch:  99
2022-07-08 19:53:01.055632: train loss : -0.7615
2022-07-08 19:53:05.385445: validation loss: -0.7558
2022-07-08 19:53:05.407850: Average global foreground Dice: [0.801]
2022-07-08 19:53:05.436367: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:53:06.009773: Suus1 maybe_update_lr lr: 0.008181
2022-07-08 19:53:06.012121: saving scheduled checkpoint file...
2022-07-08 19:53:06.058468: saving checkpoint...
2022-07-08 19:53:06.975191: done, saving took 0.96 seconds
2022-07-08 19:53:06.991386: done
2022-07-08 19:53:06.993512: saving best epoch checkpoint...
2022-07-08 19:53:07.031900: saving checkpoint...
2022-07-08 19:53:07.952311: done, saving took 0.96 seconds
2022-07-08 19:53:07.967179: This epoch took 74.260046 s

2022-07-08 19:53:07.969174: 
epoch:  100
2022-07-08 19:54:15.346000: train loss : -0.7623
2022-07-08 19:54:19.819248: validation loss: -0.7537
2022-07-08 19:54:19.845959: Average global foreground Dice: [0.7926]
2022-07-08 19:54:19.885560: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:54:20.491246: Suus1 maybe_update_lr lr: 0.008162
2022-07-08 19:54:20.492944: saving best epoch checkpoint...
2022-07-08 19:54:20.576187: saving checkpoint...
2022-07-08 19:54:21.881405: done, saving took 1.38 seconds
2022-07-08 19:54:21.894738: This epoch took 73.923668 s

2022-07-08 19:54:21.896631: 
epoch:  101
2022-07-08 19:55:29.113865: train loss : -0.7532
2022-07-08 19:55:33.554591: validation loss: -0.7175
2022-07-08 19:55:33.557817: Average global foreground Dice: [0.7626]
2022-07-08 19:55:33.594285: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:55:34.115904: Suus1 maybe_update_lr lr: 0.008144
2022-07-08 19:55:34.123293: This epoch took 72.224669 s

2022-07-08 19:55:34.126283: 
epoch:  102
2022-07-08 19:56:41.362928: train loss : -0.7489
2022-07-08 19:56:45.747303: validation loss: -0.7487
2022-07-08 19:56:45.776194: Average global foreground Dice: [0.7914]
2022-07-08 19:56:45.781235: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:56:46.246758: Suus1 maybe_update_lr lr: 0.008125
2022-07-08 19:56:46.249631: This epoch took 72.121257 s

2022-07-08 19:56:46.251734: 
epoch:  103
2022-07-08 19:57:53.554705: train loss : -0.7547
2022-07-08 19:57:58.118697: validation loss: -0.7070
2022-07-08 19:57:58.132206: Average global foreground Dice: [0.7555]
2022-07-08 19:57:58.134846: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:57:58.609149: Suus1 maybe_update_lr lr: 0.008107
2022-07-08 19:57:58.611428: This epoch took 72.357678 s

2022-07-08 19:57:58.613338: 
epoch:  104
2022-07-08 19:59:05.960500: train loss : -0.7407
2022-07-08 19:59:10.354315: validation loss: -0.7170
2022-07-08 19:59:10.393112: Average global foreground Dice: [0.7619]
2022-07-08 19:59:10.408264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 19:59:10.948886: Suus1 maybe_update_lr lr: 0.008088
2022-07-08 19:59:10.951369: This epoch took 72.336162 s

2022-07-08 19:59:10.953353: 
epoch:  105
2022-07-08 20:00:18.403092: train loss : -0.7378
2022-07-08 20:00:23.034619: validation loss: -0.7359
2022-07-08 20:00:23.058295: Average global foreground Dice: [0.7796]
2022-07-08 20:00:23.072468: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:00:23.658803: Suus1 maybe_update_lr lr: 0.00807
2022-07-08 20:00:23.662918: This epoch took 72.707669 s

2022-07-08 20:00:23.665247: 
epoch:  106
2022-07-08 20:01:30.941550: train loss : -0.7579
2022-07-08 20:01:35.377728: validation loss: -0.7432
2022-07-08 20:01:35.391474: Average global foreground Dice: [0.7792]
2022-07-08 20:01:35.400802: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:01:35.952659: Suus1 maybe_update_lr lr: 0.008052
2022-07-08 20:01:35.981335: This epoch took 72.314156 s

2022-07-08 20:01:36.014260: 
epoch:  107
2022-07-08 20:02:43.316297: train loss : -0.7598
2022-07-08 20:02:47.750612: validation loss: -0.7439
2022-07-08 20:02:47.753121: Average global foreground Dice: [0.7891]
2022-07-08 20:02:47.755158: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:02:48.269327: Suus1 maybe_update_lr lr: 0.008033
2022-07-08 20:02:48.272078: This epoch took 72.235827 s

2022-07-08 20:02:48.290504: 
epoch:  108
2022-07-08 20:03:55.674281: train loss : -0.7596
2022-07-08 20:04:00.168826: validation loss: -0.7608
2022-07-08 20:04:00.187151: Average global foreground Dice: [0.8047]
2022-07-08 20:04:00.193485: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:04:00.756723: Suus1 maybe_update_lr lr: 0.008015
2022-07-08 20:04:00.771269: saving best epoch checkpoint...
2022-07-08 20:04:00.817869: saving checkpoint...
2022-07-08 20:04:02.023721: done, saving took 1.25 seconds
2022-07-08 20:04:02.038779: This epoch took 73.728270 s

2022-07-08 20:04:02.040788: 
epoch:  109
2022-07-08 20:05:09.310766: train loss : -0.7691
2022-07-08 20:05:13.764856: validation loss: -0.7312
2022-07-08 20:05:13.775962: Average global foreground Dice: [0.7809]
2022-07-08 20:05:13.784357: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:05:14.266124: Suus1 maybe_update_lr lr: 0.007996
2022-07-08 20:05:14.268633: saving best epoch checkpoint...
2022-07-08 20:05:14.313653: saving checkpoint...
2022-07-08 20:05:15.403564: done, saving took 1.13 seconds
2022-07-08 20:05:15.419111: This epoch took 73.376349 s

2022-07-08 20:05:15.421233: 
epoch:  110
2022-07-08 20:06:22.712940: train loss : -0.7652
2022-07-08 20:06:27.149825: validation loss: -0.7407
2022-07-08 20:06:27.159567: Average global foreground Dice: [0.7858]
2022-07-08 20:06:27.161732: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:06:27.656464: Suus1 maybe_update_lr lr: 0.007978
2022-07-08 20:06:27.658760: saving best epoch checkpoint...
2022-07-08 20:06:27.704845: saving checkpoint...
2022-07-08 20:06:28.815131: done, saving took 1.15 seconds
2022-07-08 20:06:28.831564: This epoch took 73.408297 s

2022-07-08 20:06:28.833760: 
epoch:  111
2022-07-08 20:07:36.127300: train loss : -0.7579
2022-07-08 20:07:40.584941: validation loss: -0.7472
2022-07-08 20:07:40.587752: Average global foreground Dice: [0.7841]
2022-07-08 20:07:40.589984: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:07:41.032874: Suus1 maybe_update_lr lr: 0.007959
2022-07-08 20:07:41.039871: saving best epoch checkpoint...
2022-07-08 20:07:41.090618: saving checkpoint...
2022-07-08 20:07:42.097354: done, saving took 1.06 seconds
2022-07-08 20:07:42.112700: This epoch took 73.276758 s

2022-07-08 20:07:42.114939: 
epoch:  112
2022-07-08 20:08:49.514774: train loss : -0.7597
2022-07-08 20:08:54.037251: validation loss: -0.7620
2022-07-08 20:08:54.046604: Average global foreground Dice: [0.7961]
2022-07-08 20:08:54.067994: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:08:54.656816: Suus1 maybe_update_lr lr: 0.007941
2022-07-08 20:08:54.659250: saving best epoch checkpoint...
2022-07-08 20:08:54.699911: saving checkpoint...
2022-07-08 20:08:55.672779: done, saving took 1.01 seconds
2022-07-08 20:08:55.687390: This epoch took 73.570234 s

2022-07-08 20:08:55.689482: 
epoch:  113
2022-07-08 20:10:02.993414: train loss : -0.7527
2022-07-08 20:10:07.659551: validation loss: -0.7251
2022-07-08 20:10:07.689648: Average global foreground Dice: [0.7817]
2022-07-08 20:10:07.700079: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:10:08.150434: Suus1 maybe_update_lr lr: 0.007922
2022-07-08 20:10:08.153805: This epoch took 72.462155 s

2022-07-08 20:10:08.155717: 
epoch:  114
2022-07-08 20:11:15.580531: train loss : -0.7418
2022-07-08 20:11:20.116132: validation loss: -0.7082
2022-07-08 20:11:20.133195: Average global foreground Dice: [0.7586]
2022-07-08 20:11:20.143708: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:11:20.632440: Suus1 maybe_update_lr lr: 0.007904
2022-07-08 20:11:20.651409: This epoch took 72.482131 s

2022-07-08 20:11:20.671524: 
epoch:  115
2022-07-08 20:12:27.966679: train loss : -0.7586
2022-07-08 20:12:32.447151: validation loss: -0.7460
2022-07-08 20:12:32.459048: Average global foreground Dice: [0.7851]
2022-07-08 20:12:32.461169: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:12:33.043050: Suus1 maybe_update_lr lr: 0.007885
2022-07-08 20:12:33.045472: This epoch took 72.371707 s

2022-07-08 20:12:33.047489: 
epoch:  116
2022-07-08 20:13:40.330561: train loss : -0.7621
2022-07-08 20:13:44.779907: validation loss: -0.7428
2022-07-08 20:13:44.801593: Average global foreground Dice: [0.7826]
2022-07-08 20:13:44.812010: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:13:45.346142: Suus1 maybe_update_lr lr: 0.007867
2022-07-08 20:13:45.359564: This epoch took 72.310130 s

2022-07-08 20:13:45.373261: 
epoch:  117
2022-07-08 20:14:52.589263: train loss : -0.7589
2022-07-08 20:14:57.147308: validation loss: -0.7409
2022-07-08 20:14:57.171227: Average global foreground Dice: [0.7877]
2022-07-08 20:14:57.198724: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:14:58.062095: Suus1 maybe_update_lr lr: 0.007848
2022-07-08 20:14:58.064379: This epoch took 72.682222 s

2022-07-08 20:14:58.066367: 
epoch:  118
2022-07-08 20:16:05.317395: train loss : -0.7721
2022-07-08 20:16:09.926353: validation loss: -0.7373
2022-07-08 20:16:09.936641: Average global foreground Dice: [0.7782]
2022-07-08 20:16:09.939046: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:16:10.494066: Suus1 maybe_update_lr lr: 0.00783
2022-07-08 20:16:10.496324: This epoch took 72.427961 s

2022-07-08 20:16:10.498377: 
epoch:  119
2022-07-08 20:17:17.719042: train loss : -0.7535
2022-07-08 20:17:22.089932: validation loss: -0.7401
2022-07-08 20:17:22.128620: Average global foreground Dice: [0.7811]
2022-07-08 20:17:22.144241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:17:22.694814: Suus1 maybe_update_lr lr: 0.007811
2022-07-08 20:17:22.697129: This epoch took 72.196829 s

2022-07-08 20:17:22.699137: 
epoch:  120
2022-07-08 20:18:29.977395: train loss : -0.7500
2022-07-08 20:18:34.421935: validation loss: -0.7184
2022-07-08 20:18:34.444626: Average global foreground Dice: [0.77]
2022-07-08 20:18:34.450781: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:18:34.929016: Suus1 maybe_update_lr lr: 0.007793
2022-07-08 20:18:34.931515: This epoch took 72.230299 s

2022-07-08 20:18:34.943356: 
epoch:  121
2022-07-08 20:19:42.367245: train loss : -0.7496
2022-07-08 20:19:46.921274: validation loss: -0.7575
2022-07-08 20:19:46.967093: Average global foreground Dice: [0.8006]
2022-07-08 20:19:46.986783: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:19:47.515284: Suus1 maybe_update_lr lr: 0.007774
2022-07-08 20:19:47.517838: This epoch took 72.572206 s

2022-07-08 20:19:47.520157: 
epoch:  122
2022-07-08 20:20:54.830005: train loss : -0.7703
2022-07-08 20:20:59.339829: validation loss: -0.7525
2022-07-08 20:20:59.349777: Average global foreground Dice: [0.7965]
2022-07-08 20:20:59.352808: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:20:59.920221: Suus1 maybe_update_lr lr: 0.007756
2022-07-08 20:20:59.922497: saving best epoch checkpoint...
2022-07-08 20:20:59.967697: saving checkpoint...
2022-07-08 20:21:00.942004: done, saving took 1.02 seconds
2022-07-08 20:21:00.957867: This epoch took 73.435502 s

2022-07-08 20:21:00.960001: 
epoch:  123
2022-07-08 20:22:08.309411: train loss : -0.7692
2022-07-08 20:22:12.692480: validation loss: -0.7526
2022-07-08 20:22:12.705388: Average global foreground Dice: [0.789]
2022-07-08 20:22:12.717805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:22:13.211342: Suus1 maybe_update_lr lr: 0.007737
2022-07-08 20:22:13.214058: saving best epoch checkpoint...
2022-07-08 20:22:13.265957: saving checkpoint...
2022-07-08 20:22:14.398816: done, saving took 1.18 seconds
2022-07-08 20:22:14.414614: This epoch took 73.452547 s

2022-07-08 20:22:14.416875: 
epoch:  124
2022-07-08 20:23:21.601570: train loss : -0.7749
2022-07-08 20:23:25.967520: validation loss: -0.7582
2022-07-08 20:23:25.985664: Average global foreground Dice: [0.8044]
2022-07-08 20:23:25.988636: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:23:26.747426: Suus1 maybe_update_lr lr: 0.007719
2022-07-08 20:23:26.749709: saving best epoch checkpoint...
2022-07-08 20:23:26.785334: saving checkpoint...
2022-07-08 20:23:27.739731: done, saving took 0.99 seconds
2022-07-08 20:23:27.753492: This epoch took 73.334366 s

2022-07-08 20:23:27.755568: 
epoch:  125
2022-07-08 20:24:35.051233: train loss : -0.7565
2022-07-08 20:24:39.593309: validation loss: -0.7495
2022-07-08 20:24:39.596882: Average global foreground Dice: [0.7907]
2022-07-08 20:24:39.599134: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:24:40.211609: Suus1 maybe_update_lr lr: 0.0077
2022-07-08 20:24:40.213657: saving best epoch checkpoint...
2022-07-08 20:24:40.245746: saving checkpoint...
2022-07-08 20:24:41.204726: done, saving took 0.99 seconds
2022-07-08 20:24:41.218024: This epoch took 73.460495 s

2022-07-08 20:24:41.220038: 
epoch:  126
2022-07-08 20:25:48.509575: train loss : -0.7600
2022-07-08 20:25:53.040031: validation loss: -0.7588
2022-07-08 20:25:53.067744: Average global foreground Dice: [0.7966]
2022-07-08 20:25:53.096419: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:25:53.772441: Suus1 maybe_update_lr lr: 0.007682
2022-07-08 20:25:53.775636: saving best epoch checkpoint...
2022-07-08 20:25:53.829077: saving checkpoint...
2022-07-08 20:25:54.800896: done, saving took 1.01 seconds
2022-07-08 20:25:54.815271: This epoch took 73.593310 s

2022-07-08 20:25:54.817652: 
epoch:  127
2022-07-08 20:27:02.059589: train loss : -0.7549
2022-07-08 20:27:06.534145: validation loss: -0.7273
2022-07-08 20:27:06.553095: Average global foreground Dice: [0.7804]
2022-07-08 20:27:06.569471: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:27:07.217214: Suus1 maybe_update_lr lr: 0.007663
2022-07-08 20:27:07.226475: This epoch took 72.406612 s

2022-07-08 20:27:07.237116: 
epoch:  128
2022-07-08 20:28:14.465643: train loss : -0.7619
2022-07-08 20:28:18.815238: validation loss: -0.7323
2022-07-08 20:28:18.818388: Average global foreground Dice: [0.7738]
2022-07-08 20:28:18.822164: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:28:19.339621: Suus1 maybe_update_lr lr: 0.007645
2022-07-08 20:28:19.341885: This epoch took 72.083365 s

2022-07-08 20:28:19.345434: 
epoch:  129
2022-07-08 20:29:26.594916: train loss : -0.7642
2022-07-08 20:29:31.171056: validation loss: -0.7298
2022-07-08 20:29:31.179163: Average global foreground Dice: [0.7759]
2022-07-08 20:29:31.256935: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:29:31.775549: Suus1 maybe_update_lr lr: 0.007626
2022-07-08 20:29:31.777198: This epoch took 72.422304 s

2022-07-08 20:29:31.779642: 
epoch:  130
2022-07-08 20:30:39.037601: train loss : -0.7708
2022-07-08 20:30:43.411410: validation loss: -0.7474
2022-07-08 20:30:43.451749: Average global foreground Dice: [0.7903]
2022-07-08 20:30:43.460759: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:30:44.003838: Suus1 maybe_update_lr lr: 0.007608
2022-07-08 20:30:44.011840: This epoch took 72.229837 s

2022-07-08 20:30:44.016814: 
epoch:  131
2022-07-08 20:31:51.332441: train loss : -0.7703
2022-07-08 20:31:55.661088: validation loss: -0.7120
2022-07-08 20:31:55.674941: Average global foreground Dice: [0.7555]
2022-07-08 20:31:55.677158: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:31:56.193166: Suus1 maybe_update_lr lr: 0.007589
2022-07-08 20:31:56.205504: This epoch took 72.186680 s

2022-07-08 20:31:56.233530: 
epoch:  132
2022-07-08 20:33:03.513475: train loss : -0.7695
2022-07-08 20:33:08.267670: validation loss: -0.7415
2022-07-08 20:33:08.272462: Average global foreground Dice: [0.7853]
2022-07-08 20:33:08.287241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:33:08.879335: Suus1 maybe_update_lr lr: 0.007571
2022-07-08 20:33:08.898113: This epoch took 72.642858 s

2022-07-08 20:33:08.901061: 
epoch:  133
2022-07-08 20:34:16.238924: train loss : -0.7543
2022-07-08 20:34:20.707573: validation loss: -0.7509
2022-07-08 20:34:20.753341: Average global foreground Dice: [0.7935]
2022-07-08 20:34:20.755439: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:34:21.388449: Suus1 maybe_update_lr lr: 0.007552
2022-07-08 20:34:21.390572: This epoch took 72.486609 s

2022-07-08 20:34:21.392429: 
epoch:  134
2022-07-08 20:35:28.681208: train loss : -0.7762
2022-07-08 20:35:33.061288: validation loss: -0.7496
2022-07-08 20:35:33.069532: Average global foreground Dice: [0.7943]
2022-07-08 20:35:33.086242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:35:33.715046: Suus1 maybe_update_lr lr: 0.007533
2022-07-08 20:35:33.719895: This epoch took 72.325644 s

2022-07-08 20:35:33.721972: 
epoch:  135
2022-07-08 20:36:41.074973: train loss : -0.7724
2022-07-08 20:36:45.423283: validation loss: -0.7428
2022-07-08 20:36:45.426413: Average global foreground Dice: [0.7872]
2022-07-08 20:36:45.428559: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:36:45.929762: Suus1 maybe_update_lr lr: 0.007515
2022-07-08 20:36:45.937842: This epoch took 72.213871 s

2022-07-08 20:36:45.960269: 
epoch:  136
2022-07-08 20:37:53.366356: train loss : -0.7684
2022-07-08 20:37:57.929599: validation loss: -0.7208
2022-07-08 20:37:57.940814: Average global foreground Dice: [0.7661]
2022-07-08 20:37:57.953295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:37:58.467126: Suus1 maybe_update_lr lr: 0.007496
2022-07-08 20:37:58.488324: This epoch took 72.501641 s

2022-07-08 20:37:58.508662: 
epoch:  137
2022-07-08 20:39:05.810677: train loss : -0.7710
2022-07-08 20:39:10.372078: validation loss: -0.7507
2022-07-08 20:39:10.420769: Average global foreground Dice: [0.7964]
2022-07-08 20:39:10.462316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:39:11.019004: Suus1 maybe_update_lr lr: 0.007478
2022-07-08 20:39:11.032463: This epoch took 72.496197 s

2022-07-08 20:39:11.055255: 
epoch:  138
2022-07-08 20:40:18.449259: train loss : -0.7780
2022-07-08 20:40:22.795569: validation loss: -0.7317
2022-07-08 20:40:22.806224: Average global foreground Dice: [0.7699]
2022-07-08 20:40:22.812658: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:40:23.458577: Suus1 maybe_update_lr lr: 0.007459
2022-07-08 20:40:23.460997: This epoch took 72.385161 s

2022-07-08 20:40:23.463228: 
epoch:  139
2022-07-08 20:41:30.640320: train loss : -0.7729
2022-07-08 20:41:35.145411: validation loss: -0.7367
2022-07-08 20:41:35.149014: Average global foreground Dice: [0.7724]
2022-07-08 20:41:35.151155: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:41:35.661926: Suus1 maybe_update_lr lr: 0.00744
2022-07-08 20:41:35.675330: This epoch took 72.209894 s

2022-07-08 20:41:35.701206: 
epoch:  140
2022-07-08 20:42:43.105393: train loss : -0.7762
2022-07-08 20:42:47.663849: validation loss: -0.7275
2022-07-08 20:42:47.714249: Average global foreground Dice: [0.7761]
2022-07-08 20:42:47.735262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:42:48.311761: Suus1 maybe_update_lr lr: 0.007422
2022-07-08 20:42:48.313851: This epoch took 72.593585 s

2022-07-08 20:42:48.315814: 
epoch:  141
2022-07-08 20:43:55.519426: train loss : -0.7742
2022-07-08 20:43:59.893307: validation loss: -0.7350
2022-07-08 20:43:59.897079: Average global foreground Dice: [0.7817]
2022-07-08 20:43:59.900705: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:44:00.494919: Suus1 maybe_update_lr lr: 0.007403
2022-07-08 20:44:00.497184: This epoch took 72.179904 s

2022-07-08 20:44:00.499054: 
epoch:  142
2022-07-08 20:45:07.701263: train loss : -0.7572
2022-07-08 20:45:12.134024: validation loss: -0.7380
2022-07-08 20:45:12.137453: Average global foreground Dice: [0.7735]
2022-07-08 20:45:12.139526: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:45:12.620310: Suus1 maybe_update_lr lr: 0.007385
2022-07-08 20:45:12.622507: This epoch took 72.121542 s

2022-07-08 20:45:12.624514: 
epoch:  143
2022-07-08 20:46:19.995473: train loss : -0.7679
2022-07-08 20:46:24.526944: validation loss: -0.7172
2022-07-08 20:46:24.533925: Average global foreground Dice: [0.7618]
2022-07-08 20:46:24.537603: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:46:24.998301: Suus1 maybe_update_lr lr: 0.007366
2022-07-08 20:46:25.020170: This epoch took 72.393773 s

2022-07-08 20:46:25.033457: 
epoch:  144
2022-07-08 20:47:32.346504: train loss : -0.7861
2022-07-08 20:47:36.910295: validation loss: -0.7723
2022-07-08 20:47:36.912809: Average global foreground Dice: [0.8105]
2022-07-08 20:47:36.919332: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:47:37.490865: Suus1 maybe_update_lr lr: 0.007347
2022-07-08 20:47:37.510988: This epoch took 72.456754 s

2022-07-08 20:47:37.513116: 
epoch:  145
2022-07-08 20:48:44.756214: train loss : -0.7766
2022-07-08 20:48:49.118114: validation loss: -0.7429
2022-07-08 20:48:49.145707: Average global foreground Dice: [0.7896]
2022-07-08 20:48:49.174539: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:48:49.732983: Suus1 maybe_update_lr lr: 0.007329
2022-07-08 20:48:49.735512: This epoch took 72.220359 s

2022-07-08 20:48:49.737326: 
epoch:  146
2022-07-08 20:49:57.108644: train loss : -0.7784
2022-07-08 20:50:01.460741: validation loss: -0.7713
2022-07-08 20:50:01.464147: Average global foreground Dice: [0.8092]
2022-07-08 20:50:01.466238: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:50:01.943135: Suus1 maybe_update_lr lr: 0.00731
2022-07-08 20:50:01.952577: This epoch took 72.213357 s

2022-07-08 20:50:01.965247: 
epoch:  147
2022-07-08 20:51:09.248074: train loss : -0.7877
2022-07-08 20:51:13.674838: validation loss: -0.7445
2022-07-08 20:51:13.726762: Average global foreground Dice: [0.7899]
2022-07-08 20:51:13.739108: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:51:14.218413: Suus1 maybe_update_lr lr: 0.007291
2022-07-08 20:51:14.222507: This epoch took 72.247264 s

2022-07-08 20:51:14.224510: 
epoch:  148
2022-07-08 20:52:21.628812: train loss : -0.7850
2022-07-08 20:52:26.098127: validation loss: -0.7381
2022-07-08 20:52:26.130778: Average global foreground Dice: [0.7903]
2022-07-08 20:52:26.163647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:52:27.059336: Suus1 maybe_update_lr lr: 0.007273
2022-07-08 20:52:27.061616: This epoch took 72.832193 s

2022-07-08 20:52:27.063655: 
epoch:  149
2022-07-08 20:53:34.515661: train loss : -0.7822
2022-07-08 20:53:39.161719: validation loss: -0.7561
2022-07-08 20:53:39.165107: Average global foreground Dice: [0.7957]
2022-07-08 20:53:39.168576: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:53:39.704775: Suus1 maybe_update_lr lr: 0.007254
2022-07-08 20:53:39.715196: saving scheduled checkpoint file...
2022-07-08 20:53:39.784861: saving checkpoint...
2022-07-08 20:53:40.750285: done, saving took 1.03 seconds
2022-07-08 20:53:40.765794: done
2022-07-08 20:53:40.767748: This epoch took 73.702110 s

2022-07-08 20:53:40.769917: 
epoch:  150
2022-07-08 20:54:48.154873: train loss : -0.7838
2022-07-08 20:54:52.516480: validation loss: -0.7626
2022-07-08 20:54:52.539808: Average global foreground Dice: [0.8012]
2022-07-08 20:54:52.556932: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:54:53.180929: Suus1 maybe_update_lr lr: 0.007236
2022-07-08 20:54:53.188259: saving best epoch checkpoint...
2022-07-08 20:54:53.229452: saving checkpoint...
2022-07-08 20:54:54.172405: done, saving took 0.98 seconds
2022-07-08 20:54:54.185814: This epoch took 73.413696 s

2022-07-08 20:54:54.187835: 
epoch:  151
2022-07-08 20:56:01.354084: train loss : -0.7740
2022-07-08 20:56:05.684928: validation loss: -0.7486
2022-07-08 20:56:05.688887: Average global foreground Dice: [0.7901]
2022-07-08 20:56:05.691151: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:56:06.164040: Suus1 maybe_update_lr lr: 0.007217
2022-07-08 20:56:06.166923: saving best epoch checkpoint...
2022-07-08 20:56:06.253368: saving checkpoint...
2022-07-08 20:56:07.296510: done, saving took 1.12 seconds
2022-07-08 20:56:07.311320: This epoch took 73.121530 s

2022-07-08 20:56:07.313657: 
epoch:  152
2022-07-08 20:57:14.600081: train loss : -0.7749
2022-07-08 20:57:19.089730: validation loss: -0.7431
2022-07-08 20:57:19.094640: Average global foreground Dice: [0.7891]
2022-07-08 20:57:19.096856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:57:19.566359: Suus1 maybe_update_lr lr: 0.007198
2022-07-08 20:57:19.568731: saving best epoch checkpoint...
2022-07-08 20:57:19.633980: saving checkpoint...
2022-07-08 20:57:20.611706: done, saving took 1.02 seconds
2022-07-08 20:57:20.624862: This epoch took 73.308623 s

2022-07-08 20:57:20.626852: 
epoch:  153
2022-07-08 20:58:28.012353: train loss : -0.7644
2022-07-08 20:58:32.430908: validation loss: -0.7454
2022-07-08 20:58:32.439389: Average global foreground Dice: [0.7829]
2022-07-08 20:58:32.442791: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:58:32.927517: Suus1 maybe_update_lr lr: 0.00718
2022-07-08 20:58:32.931618: This epoch took 72.302819 s

2022-07-08 20:58:32.933794: 
epoch:  154
2022-07-08 20:59:40.249444: train loss : -0.7668
2022-07-08 20:59:44.756263: validation loss: -0.7448
2022-07-08 20:59:44.771554: Average global foreground Dice: [0.7844]
2022-07-08 20:59:44.789054: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 20:59:45.465968: Suus1 maybe_update_lr lr: 0.007161
2022-07-08 20:59:45.474948: This epoch took 72.525792 s

2022-07-08 20:59:45.486799: 
epoch:  155
2022-07-08 21:00:52.760921: train loss : -0.7751
2022-07-08 21:00:57.309245: validation loss: -0.7041
2022-07-08 21:00:57.314814: Average global foreground Dice: [0.7514]
2022-07-08 21:00:57.316923: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:00:57.863444: Suus1 maybe_update_lr lr: 0.007142
2022-07-08 21:00:57.882313: This epoch took 72.391032 s

2022-07-08 21:00:57.900248: 
epoch:  156
2022-07-08 21:02:05.272395: train loss : -0.7810
2022-07-08 21:02:09.743227: validation loss: -0.7579
2022-07-08 21:02:09.776042: Average global foreground Dice: [0.7979]
2022-07-08 21:02:09.778534: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:02:10.308418: Suus1 maybe_update_lr lr: 0.007123
2022-07-08 21:02:10.321340: This epoch took 72.418839 s

2022-07-08 21:02:10.343425: 
epoch:  157
2022-07-08 21:03:17.689013: train loss : -0.7841
2022-07-08 21:03:22.218324: validation loss: -0.7551
2022-07-08 21:03:22.242162: Average global foreground Dice: [0.8017]
2022-07-08 21:03:22.247663: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:03:23.124591: Suus1 maybe_update_lr lr: 0.007105
2022-07-08 21:03:23.126892: This epoch took 72.761600 s

2022-07-08 21:03:23.128925: 
epoch:  158
2022-07-08 21:04:30.433657: train loss : -0.7838
2022-07-08 21:04:34.901709: validation loss: -0.7703
2022-07-08 21:04:34.905035: Average global foreground Dice: [0.8048]
2022-07-08 21:04:34.907036: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:04:35.506843: Suus1 maybe_update_lr lr: 0.007086
2022-07-08 21:04:35.509078: saving best epoch checkpoint...
2022-07-08 21:04:35.555639: saving checkpoint...
2022-07-08 21:04:36.487969: done, saving took 0.98 seconds
2022-07-08 21:04:36.502856: This epoch took 73.372006 s

2022-07-08 21:04:36.504923: 
epoch:  159
2022-07-08 21:05:43.904803: train loss : -0.7819
2022-07-08 21:05:48.538705: validation loss: -0.7614
2022-07-08 21:05:48.570621: Average global foreground Dice: [0.7954]
2022-07-08 21:05:48.584269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:05:49.116339: Suus1 maybe_update_lr lr: 0.007067
2022-07-08 21:05:49.118673: saving best epoch checkpoint...
2022-07-08 21:05:49.169257: saving checkpoint...
2022-07-08 21:05:50.146605: done, saving took 1.03 seconds
2022-07-08 21:05:50.161852: This epoch took 73.654819 s

2022-07-08 21:05:50.164112: 
epoch:  160
2022-07-08 21:06:57.440900: train loss : -0.7937
2022-07-08 21:07:02.346096: validation loss: -0.7657
2022-07-08 21:07:02.350151: Average global foreground Dice: [0.8049]
2022-07-08 21:07:02.352773: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:07:02.859822: Suus1 maybe_update_lr lr: 0.007049
2022-07-08 21:07:02.891370: saving best epoch checkpoint...
2022-07-08 21:07:02.984230: saving checkpoint...
2022-07-08 21:07:03.948752: done, saving took 1.02 seconds
2022-07-08 21:07:03.964461: This epoch took 73.798219 s

2022-07-08 21:07:03.966955: 
epoch:  161
2022-07-08 21:08:11.264400: train loss : -0.7863
2022-07-08 21:08:15.621092: validation loss: -0.7569
2022-07-08 21:08:15.649952: Average global foreground Dice: [0.7937]
2022-07-08 21:08:15.653949: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:08:16.118892: Suus1 maybe_update_lr lr: 0.00703
2022-07-08 21:08:16.126753: saving best epoch checkpoint...
2022-07-08 21:08:16.177018: saving checkpoint...
2022-07-08 21:08:17.114242: done, saving took 0.99 seconds
2022-07-08 21:08:17.129279: This epoch took 73.158065 s

2022-07-08 21:08:17.131244: 
epoch:  162
2022-07-08 21:09:24.371225: train loss : -0.7904
2022-07-08 21:09:28.778877: validation loss: -0.7722
2022-07-08 21:09:28.796760: Average global foreground Dice: [0.8074]
2022-07-08 21:09:28.799932: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:09:29.277857: Suus1 maybe_update_lr lr: 0.007011
2022-07-08 21:09:29.280206: saving best epoch checkpoint...
2022-07-08 21:09:29.326815: saving checkpoint...
2022-07-08 21:09:30.439389: done, saving took 1.16 seconds
2022-07-08 21:09:30.454929: This epoch took 73.321571 s

2022-07-08 21:09:30.457272: 
epoch:  163
2022-07-08 21:10:37.676057: train loss : -0.7794
2022-07-08 21:10:42.164493: validation loss: -0.7508
2022-07-08 21:10:42.171476: Average global foreground Dice: [0.7893]
2022-07-08 21:10:42.184808: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:10:42.800759: Suus1 maybe_update_lr lr: 0.006992
2022-07-08 21:10:42.802597: This epoch took 72.343157 s

2022-07-08 21:10:42.824245: 
epoch:  164
2022-07-08 21:11:50.186728: train loss : -0.7768
2022-07-08 21:11:54.693699: validation loss: -0.7489
2022-07-08 21:11:54.722610: Average global foreground Dice: [0.7852]
2022-07-08 21:11:54.730805: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:11:55.366687: Suus1 maybe_update_lr lr: 0.006974
2022-07-08 21:11:55.368937: This epoch took 72.532957 s

2022-07-08 21:11:55.370957: 
epoch:  165
2022-07-08 21:13:02.677543: train loss : -0.7926
2022-07-08 21:13:07.036684: validation loss: -0.7532
2022-07-08 21:13:07.058374: Average global foreground Dice: [0.788]
2022-07-08 21:13:07.078647: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:13:07.754250: Suus1 maybe_update_lr lr: 0.006955
2022-07-08 21:13:07.756470: This epoch took 72.383431 s

2022-07-08 21:13:07.758347: 
epoch:  166
2022-07-08 21:14:15.070409: train loss : -0.7843
2022-07-08 21:14:19.572349: validation loss: -0.7690
2022-07-08 21:14:19.582437: Average global foreground Dice: [0.8049]
2022-07-08 21:14:19.588615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:14:20.118686: Suus1 maybe_update_lr lr: 0.006936
2022-07-08 21:14:20.123748: This epoch took 72.363576 s

2022-07-08 21:14:20.125967: 
epoch:  167
2022-07-08 21:15:27.493783: train loss : -0.7935
2022-07-08 21:15:31.953960: validation loss: -0.7580
2022-07-08 21:15:31.975740: Average global foreground Dice: [0.8041]
2022-07-08 21:15:31.993303: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:15:32.579108: Suus1 maybe_update_lr lr: 0.006918
2022-07-08 21:15:32.602704: saving best epoch checkpoint...
2022-07-08 21:15:32.680087: saving checkpoint...
2022-07-08 21:15:33.638849: done, saving took 1.02 seconds
2022-07-08 21:15:33.654023: This epoch took 73.526047 s

2022-07-08 21:15:33.656076: 
epoch:  168
2022-07-08 21:16:40.833991: train loss : -0.7848
2022-07-08 21:16:45.402652: validation loss: -0.7590
2022-07-08 21:16:45.412778: Average global foreground Dice: [0.7979]
2022-07-08 21:16:45.419649: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:16:46.059997: Suus1 maybe_update_lr lr: 0.006899
2022-07-08 21:16:46.062206: saving best epoch checkpoint...
2022-07-08 21:16:46.107045: saving checkpoint...
2022-07-08 21:16:47.060391: done, saving took 1.00 seconds
2022-07-08 21:16:47.075009: This epoch took 73.417032 s

2022-07-08 21:16:47.077035: 
epoch:  169
2022-07-08 21:17:54.286689: train loss : -0.7908
2022-07-08 21:17:58.829738: validation loss: -0.7510
2022-07-08 21:17:58.843749: Average global foreground Dice: [0.7952]
2022-07-08 21:17:58.853853: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:17:59.422281: Suus1 maybe_update_lr lr: 0.00688
2022-07-08 21:17:59.425395: saving best epoch checkpoint...
2022-07-08 21:17:59.496149: saving checkpoint...
2022-07-08 21:18:00.460378: done, saving took 1.01 seconds
2022-07-08 21:18:00.474778: This epoch took 73.395769 s

2022-07-08 21:18:00.476809: 
epoch:  170
2022-07-08 21:19:07.770374: train loss : -0.7932
2022-07-08 21:19:12.203682: validation loss: -0.7395
2022-07-08 21:19:12.206857: Average global foreground Dice: [0.7852]
2022-07-08 21:19:12.208802: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:19:12.667871: Suus1 maybe_update_lr lr: 0.006861
2022-07-08 21:19:12.670267: This epoch took 72.191534 s

2022-07-08 21:19:12.672278: 
epoch:  171
2022-07-08 21:20:19.961722: train loss : -0.7834
2022-07-08 21:20:24.405856: validation loss: -0.7606
2022-07-08 21:20:24.427467: Average global foreground Dice: [0.8036]
2022-07-08 21:20:24.437744: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:20:24.963601: Suus1 maybe_update_lr lr: 0.006842
2022-07-08 21:20:24.966037: saving best epoch checkpoint...
2022-07-08 21:20:25.014692: saving checkpoint...
2022-07-08 21:20:25.878410: done, saving took 0.91 seconds
2022-07-08 21:20:25.892634: This epoch took 73.218368 s

2022-07-08 21:20:25.894675: 
epoch:  172
2022-07-08 21:21:33.138936: train loss : -0.7960
2022-07-08 21:21:37.528440: validation loss: -0.7587
2022-07-08 21:21:37.531855: Average global foreground Dice: [0.8035]
2022-07-08 21:21:37.533894: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:21:38.192281: Suus1 maybe_update_lr lr: 0.006824
2022-07-08 21:21:38.194627: saving best epoch checkpoint...
2022-07-08 21:21:38.226295: saving checkpoint...
2022-07-08 21:21:39.252974: done, saving took 1.06 seconds
2022-07-08 21:21:39.267306: This epoch took 73.370629 s

2022-07-08 21:21:39.269570: 
epoch:  173
2022-07-08 21:22:46.671731: train loss : -0.7812
2022-07-08 21:22:51.204271: validation loss: -0.7358
2022-07-08 21:22:51.225511: Average global foreground Dice: [0.7691]
2022-07-08 21:22:51.234602: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:22:51.742393: Suus1 maybe_update_lr lr: 0.006805
2022-07-08 21:22:51.744805: This epoch took 72.473131 s

2022-07-08 21:22:51.749365: 
epoch:  174
2022-07-08 21:23:59.069980: train loss : -0.7928
2022-07-08 21:24:03.429709: validation loss: -0.7738
2022-07-08 21:24:03.432908: Average global foreground Dice: [0.8139]
2022-07-08 21:24:03.435039: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:24:03.979299: Suus1 maybe_update_lr lr: 0.006786
2022-07-08 21:24:03.981540: This epoch took 72.224755 s

2022-07-08 21:24:03.983623: 
epoch:  175
2022-07-08 21:25:11.348952: train loss : -0.7884
2022-07-08 21:25:15.733573: validation loss: -0.7622
2022-07-08 21:25:15.766738: Average global foreground Dice: [0.8007]
2022-07-08 21:25:15.783472: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:25:16.310489: Suus1 maybe_update_lr lr: 0.006767
2022-07-08 21:25:16.335567: saving best epoch checkpoint...
2022-07-08 21:25:16.370483: saving checkpoint...
2022-07-08 21:25:17.208624: done, saving took 0.87 seconds
2022-07-08 21:25:17.222652: This epoch took 73.237090 s

2022-07-08 21:25:17.224724: 
epoch:  176
2022-07-08 21:26:24.607580: train loss : -0.7887
2022-07-08 21:26:28.988619: validation loss: -0.7416
2022-07-08 21:26:28.994408: Average global foreground Dice: [0.7872]
2022-07-08 21:26:28.996591: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:26:29.450210: Suus1 maybe_update_lr lr: 0.006749
2022-07-08 21:26:29.452475: This epoch took 72.225834 s

2022-07-08 21:26:29.454611: 
epoch:  177
2022-07-08 21:27:36.806610: train loss : -0.7953
2022-07-08 21:27:41.205466: validation loss: -0.7778
2022-07-08 21:27:41.277671: Average global foreground Dice: [0.8138]
2022-07-08 21:27:41.294000: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:27:41.818210: Suus1 maybe_update_lr lr: 0.00673
2022-07-08 21:27:41.830524: saving best epoch checkpoint...
2022-07-08 21:27:41.882357: saving checkpoint...
2022-07-08 21:27:42.864501: done, saving took 1.01 seconds
2022-07-08 21:27:42.879327: This epoch took 73.422673 s

2022-07-08 21:27:42.881614: 
epoch:  178
2022-07-08 21:28:50.270418: train loss : -0.7957
2022-07-08 21:28:54.931107: validation loss: -0.7391
2022-07-08 21:28:54.940252: Average global foreground Dice: [0.7805]
2022-07-08 21:28:54.953979: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:28:55.513852: Suus1 maybe_update_lr lr: 0.006711
2022-07-08 21:28:55.516247: This epoch took 72.632455 s

2022-07-08 21:28:55.518335: 
epoch:  179
2022-07-08 21:30:02.720692: train loss : -0.7915
2022-07-08 21:30:07.198489: validation loss: -0.7585
2022-07-08 21:30:07.212757: Average global foreground Dice: [0.799]
2022-07-08 21:30:07.234254: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:30:07.831569: Suus1 maybe_update_lr lr: 0.006692
2022-07-08 21:30:07.834096: This epoch took 72.313637 s

2022-07-08 21:30:07.836108: 
epoch:  180
2022-07-08 21:31:15.196966: train loss : -0.7822
2022-07-08 21:31:19.579831: validation loss: -0.7650
2022-07-08 21:31:19.587922: Average global foreground Dice: [0.8093]
2022-07-08 21:31:19.595310: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:31:20.230612: Suus1 maybe_update_lr lr: 0.006673
2022-07-08 21:31:20.232929: saving best epoch checkpoint...
2022-07-08 21:31:20.272585: saving checkpoint...
2022-07-08 21:31:21.259726: done, saving took 1.02 seconds
2022-07-08 21:31:21.275121: This epoch took 73.436953 s

2022-07-08 21:31:21.277246: 
epoch:  181
2022-07-08 21:32:28.464252: train loss : -0.7931
2022-07-08 21:32:32.987567: validation loss: -0.7593
2022-07-08 21:32:33.018786: Average global foreground Dice: [0.7973]
2022-07-08 21:32:33.034270: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:32:33.535504: Suus1 maybe_update_lr lr: 0.006654
2022-07-08 21:32:33.538026: saving best epoch checkpoint...
2022-07-08 21:32:33.579699: saving checkpoint...
2022-07-08 21:32:34.452444: done, saving took 0.91 seconds
2022-07-08 21:32:34.466295: This epoch took 73.187098 s

2022-07-08 21:32:34.468305: 
epoch:  182
2022-07-08 21:33:41.756883: train loss : -0.7878
2022-07-08 21:33:46.449257: validation loss: -0.7441
2022-07-08 21:33:46.477776: Average global foreground Dice: [0.7812]
2022-07-08 21:33:46.514262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:33:47.057190: Suus1 maybe_update_lr lr: 0.006636
2022-07-08 21:33:47.059428: This epoch took 72.589321 s

2022-07-08 21:33:47.061392: 
epoch:  183
2022-07-08 21:34:54.440091: train loss : -0.7976
2022-07-08 21:34:58.834114: validation loss: -0.7617
2022-07-08 21:34:58.837443: Average global foreground Dice: [0.7991]
2022-07-08 21:34:58.839532: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:34:59.344040: Suus1 maybe_update_lr lr: 0.006617
2022-07-08 21:34:59.346334: This epoch took 72.283074 s

2022-07-08 21:34:59.348194: 
epoch:  184
2022-07-08 21:36:06.671738: train loss : -0.7950
2022-07-08 21:36:11.191852: validation loss: -0.7631
2022-07-08 21:36:11.197737: Average global foreground Dice: [0.8036]
2022-07-08 21:36:11.200113: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:36:11.710042: Suus1 maybe_update_lr lr: 0.006598
2022-07-08 21:36:11.712461: This epoch took 72.362261 s

2022-07-08 21:36:11.714525: 
epoch:  185
2022-07-08 21:37:19.148292: train loss : -0.7969
2022-07-08 21:37:23.694157: validation loss: -0.7403
2022-07-08 21:37:23.697500: Average global foreground Dice: [0.7824]
2022-07-08 21:37:23.699701: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:37:24.206570: Suus1 maybe_update_lr lr: 0.006579
2022-07-08 21:37:24.208944: This epoch took 72.492515 s

2022-07-08 21:37:24.210982: 
epoch:  186
2022-07-08 21:38:31.603428: train loss : -0.7982
2022-07-08 21:38:36.000103: validation loss: -0.7820
2022-07-08 21:38:36.029628: Average global foreground Dice: [0.8179]
2022-07-08 21:38:36.040250: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:38:36.651077: Suus1 maybe_update_lr lr: 0.00656
2022-07-08 21:38:36.653431: saving best epoch checkpoint...
2022-07-08 21:38:36.700085: saving checkpoint...
2022-07-08 21:38:37.667072: done, saving took 1.01 seconds
2022-07-08 21:38:37.682347: This epoch took 73.469347 s

2022-07-08 21:38:37.684519: 
epoch:  187
2022-07-08 21:39:45.081150: train loss : -0.7725
2022-07-08 21:39:49.444780: validation loss: -0.6955
2022-07-08 21:39:49.457655: Average global foreground Dice: [0.7479]
2022-07-08 21:39:49.459991: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:39:49.978389: Suus1 maybe_update_lr lr: 0.006541
2022-07-08 21:39:49.980611: This epoch took 72.294093 s

2022-07-08 21:39:49.982693: 
epoch:  188
2022-07-08 21:40:57.322701: train loss : -0.7748
2022-07-08 21:41:01.934838: validation loss: -0.7383
2022-07-08 21:41:01.948802: Average global foreground Dice: [0.7758]
2022-07-08 21:41:01.961146: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:41:02.518656: Suus1 maybe_update_lr lr: 0.006522
2022-07-08 21:41:02.520764: This epoch took 72.536165 s

2022-07-08 21:41:02.522803: 
epoch:  189
2022-07-08 21:42:09.823721: train loss : -0.7847
2022-07-08 21:42:14.247609: validation loss: -0.7527
2022-07-08 21:42:14.257673: Average global foreground Dice: [0.7952]
2022-07-08 21:42:14.259675: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:42:15.076708: Suus1 maybe_update_lr lr: 0.006504
2022-07-08 21:42:15.080896: This epoch took 72.556261 s

2022-07-08 21:42:15.083035: 
epoch:  190
2022-07-08 21:43:22.432457: train loss : -0.8023
2022-07-08 21:43:26.985350: validation loss: -0.7545
2022-07-08 21:43:26.996833: Average global foreground Dice: [0.7935]
2022-07-08 21:43:26.999201: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:43:27.546867: Suus1 maybe_update_lr lr: 0.006485
2022-07-08 21:43:27.563313: This epoch took 72.478284 s

2022-07-08 21:43:27.580666: 
epoch:  191
2022-07-08 21:44:34.925224: train loss : -0.7972
2022-07-08 21:44:39.310790: validation loss: -0.7564
2022-07-08 21:44:39.354975: Average global foreground Dice: [0.7967]
2022-07-08 21:44:39.411314: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:44:39.936692: Suus1 maybe_update_lr lr: 0.006466
2022-07-08 21:44:39.961347: This epoch took 72.369408 s

2022-07-08 21:44:40.001344: 
epoch:  192
2022-07-08 21:45:47.303292: train loss : -0.8082
2022-07-08 21:45:51.867903: validation loss: -0.7780
2022-07-08 21:45:51.876205: Average global foreground Dice: [0.8141]
2022-07-08 21:45:51.901537: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:45:52.467421: Suus1 maybe_update_lr lr: 0.006447
2022-07-08 21:45:52.475195: This epoch took 72.418890 s

2022-07-08 21:45:52.491207: 
epoch:  193
2022-07-08 21:46:59.914084: train loss : -0.8013
2022-07-08 21:47:04.355262: validation loss: -0.7534
2022-07-08 21:47:04.362460: Average global foreground Dice: [0.7911]
2022-07-08 21:47:04.374747: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:47:04.829837: Suus1 maybe_update_lr lr: 0.006428
2022-07-08 21:47:04.832114: This epoch took 72.337329 s

2022-07-08 21:47:04.834388: 
epoch:  194
2022-07-08 21:48:12.170173: train loss : -0.7865
2022-07-08 21:48:16.808360: validation loss: -0.7579
2022-07-08 21:48:16.811429: Average global foreground Dice: [0.7991]
2022-07-08 21:48:16.831248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:48:17.458486: Suus1 maybe_update_lr lr: 0.006409
2022-07-08 21:48:17.460947: This epoch took 72.624690 s

2022-07-08 21:48:17.462999: 
epoch:  195
2022-07-08 21:49:24.734595: train loss : -0.7947
2022-07-08 21:49:29.137438: validation loss: -0.7589
2022-07-08 21:49:29.145613: Average global foreground Dice: [0.8016]
2022-07-08 21:49:29.164146: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:49:29.618070: Suus1 maybe_update_lr lr: 0.00639
2022-07-08 21:49:29.620262: This epoch took 72.155212 s

2022-07-08 21:49:29.623334: 
epoch:  196
2022-07-08 21:50:36.978619: train loss : -0.7867
2022-07-08 21:50:41.474418: validation loss: -0.7543
2022-07-08 21:50:41.498718: Average global foreground Dice: [0.7988]
2022-07-08 21:50:41.513398: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:50:42.151486: Suus1 maybe_update_lr lr: 0.006371
2022-07-08 21:50:42.153753: This epoch took 72.515875 s

2022-07-08 21:50:42.155748: 
epoch:  197
2022-07-08 21:51:49.529670: train loss : -0.7945
2022-07-08 21:51:53.911619: validation loss: -0.7449
2022-07-08 21:51:53.938765: Average global foreground Dice: [0.7824]
2022-07-08 21:51:53.958526: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:51:54.451434: Suus1 maybe_update_lr lr: 0.006352
2022-07-08 21:51:54.453839: This epoch took 72.296100 s

2022-07-08 21:51:54.474464: 
epoch:  198
2022-07-08 21:53:01.788514: train loss : -0.7910
2022-07-08 21:53:06.179965: validation loss: -0.7781
2022-07-08 21:53:06.193105: Average global foreground Dice: [0.8146]
2022-07-08 21:53:06.200247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:53:06.680389: Suus1 maybe_update_lr lr: 0.006333
2022-07-08 21:53:06.682671: This epoch took 72.188097 s

2022-07-08 21:53:06.692562: 
epoch:  199
2022-07-08 21:54:13.973182: train loss : -0.8056
2022-07-08 21:54:18.406851: validation loss: -0.7225
2022-07-08 21:54:18.428790: Average global foreground Dice: [0.7651]
2022-07-08 21:54:18.439664: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:54:19.040790: Suus1 maybe_update_lr lr: 0.006314
2022-07-08 21:54:19.047851: saving scheduled checkpoint file...
2022-07-08 21:54:19.098258: saving checkpoint...
2022-07-08 21:54:20.045294: done, saving took 1.00 seconds
2022-07-08 21:54:20.061513: done
2022-07-08 21:54:20.063578: This epoch took 73.367108 s

2022-07-08 21:54:20.065722: 
epoch:  200
2022-07-08 21:55:27.299954: train loss : -0.8013
2022-07-08 21:55:31.602687: validation loss: -0.7490
2022-07-08 21:55:31.625093: Average global foreground Dice: [0.7876]
2022-07-08 21:55:31.653262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:55:32.192870: Suus1 maybe_update_lr lr: 0.006296
2022-07-08 21:55:32.195070: This epoch took 72.127255 s

2022-07-08 21:55:32.197103: 
epoch:  201
2022-07-08 21:56:39.375824: train loss : -0.8044
2022-07-08 21:56:43.890610: validation loss: -0.7763
2022-07-08 21:56:43.900263: Average global foreground Dice: [0.8162]
2022-07-08 21:56:43.939286: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:56:44.573044: Suus1 maybe_update_lr lr: 0.006277
2022-07-08 21:56:44.576137: This epoch took 72.377236 s

2022-07-08 21:56:44.578672: 
epoch:  202
2022-07-08 21:57:51.831734: train loss : -0.8083
2022-07-08 21:57:56.330231: validation loss: -0.7343
2022-07-08 21:57:56.367633: Average global foreground Dice: [0.7799]
2022-07-08 21:57:56.390263: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:57:56.975071: Suus1 maybe_update_lr lr: 0.006258
2022-07-08 21:57:57.010320: This epoch took 72.429201 s

2022-07-08 21:57:57.025118: 
epoch:  203
2022-07-08 21:59:04.328336: train loss : -0.8021
2022-07-08 21:59:08.894627: validation loss: -0.7333
2022-07-08 21:59:08.917660: Average global foreground Dice: [0.7776]
2022-07-08 21:59:08.948252: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 21:59:09.442868: Suus1 maybe_update_lr lr: 0.006239
2022-07-08 21:59:09.453763: This epoch took 72.426449 s

2022-07-08 21:59:09.465173: 
epoch:  204
2022-07-08 22:00:16.824848: train loss : -0.8042
2022-07-08 22:00:21.746885: validation loss: -0.7834
2022-07-08 22:00:21.790317: Average global foreground Dice: [0.8185]
2022-07-08 22:00:21.820168: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:00:22.402882: Suus1 maybe_update_lr lr: 0.00622
2022-07-08 22:00:22.422328: This epoch took 72.941670 s

2022-07-08 22:00:22.444243: 
epoch:  205
2022-07-08 22:01:29.804254: train loss : -0.7771
2022-07-08 22:01:34.224678: validation loss: -0.7252
2022-07-08 22:01:34.241714: Average global foreground Dice: [0.7694]
2022-07-08 22:01:34.254288: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:01:34.754357: Suus1 maybe_update_lr lr: 0.006201
2022-07-08 22:01:34.756726: This epoch took 72.302824 s

2022-07-08 22:01:34.758602: 
epoch:  206
2022-07-08 22:02:42.111908: train loss : -0.7933
2022-07-08 22:02:46.588899: validation loss: -0.7400
2022-07-08 22:02:46.593528: Average global foreground Dice: [0.782]
2022-07-08 22:02:46.605428: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:02:47.382238: Suus1 maybe_update_lr lr: 0.006182
2022-07-08 22:02:47.384391: This epoch took 72.623920 s

2022-07-08 22:02:47.386406: 
epoch:  207
2022-07-08 22:03:54.723325: train loss : -0.7771
2022-07-08 22:03:59.081593: validation loss: -0.7252
2022-07-08 22:03:59.102735: Average global foreground Dice: [0.7638]
2022-07-08 22:03:59.122199: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:03:59.572695: Suus1 maybe_update_lr lr: 0.006163
2022-07-08 22:03:59.575119: This epoch took 72.186594 s

2022-07-08 22:03:59.577244: 
epoch:  208
2022-07-08 22:05:06.888663: train loss : -0.7829
2022-07-08 22:05:11.372528: validation loss: -0.7742
2022-07-08 22:05:11.426650: Average global foreground Dice: [0.8166]
2022-07-08 22:05:11.441453: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:05:12.116849: Suus1 maybe_update_lr lr: 0.006144
2022-07-08 22:05:12.140162: This epoch took 72.560710 s

2022-07-08 22:05:12.142998: 
epoch:  209
2022-07-08 22:06:19.520724: train loss : -0.7934
2022-07-08 22:06:24.095007: validation loss: -0.7648
2022-07-08 22:06:24.107667: Average global foreground Dice: [0.8027]
2022-07-08 22:06:24.118037: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:06:24.683927: Suus1 maybe_update_lr lr: 0.006125
2022-07-08 22:06:24.686283: This epoch took 72.530640 s

2022-07-08 22:06:24.688323: 
epoch:  210
2022-07-08 22:07:32.001394: train loss : -0.8075
2022-07-08 22:07:36.635643: validation loss: -0.7282
2022-07-08 22:07:36.667417: Average global foreground Dice: [0.779]
2022-07-08 22:07:36.692264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:07:37.198594: Suus1 maybe_update_lr lr: 0.006106
2022-07-08 22:07:37.227289: This epoch took 72.536842 s

2022-07-08 22:07:37.236431: 
epoch:  211
2022-07-08 22:08:44.543226: train loss : -0.8073
2022-07-08 22:08:49.008755: validation loss: -0.7440
2022-07-08 22:08:49.032697: Average global foreground Dice: [0.7915]
2022-07-08 22:08:49.044333: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:08:49.581963: Suus1 maybe_update_lr lr: 0.006087
2022-07-08 22:08:49.584546: This epoch took 72.333176 s

2022-07-08 22:08:49.586631: 
epoch:  212
2022-07-08 22:09:56.892894: train loss : -0.8036
2022-07-08 22:10:01.553115: validation loss: -0.7538
2022-07-08 22:10:01.569461: Average global foreground Dice: [0.7997]
2022-07-08 22:10:01.572172: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:10:02.068175: Suus1 maybe_update_lr lr: 0.006068
2022-07-08 22:10:02.072009: This epoch took 72.483223 s

2022-07-08 22:10:02.090171: 
epoch:  213
2022-07-08 22:11:09.433655: train loss : -0.8012
2022-07-08 22:11:13.878440: validation loss: -0.7454
2022-07-08 22:11:13.894819: Average global foreground Dice: [0.7847]
2022-07-08 22:11:13.898043: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:11:14.394141: Suus1 maybe_update_lr lr: 0.006049
2022-07-08 22:11:14.397023: This epoch took 72.301661 s

2022-07-08 22:11:14.399088: 
epoch:  214
2022-07-08 22:12:21.647527: train loss : -0.8036
2022-07-08 22:12:26.385332: validation loss: -0.7684
2022-07-08 22:12:26.404929: Average global foreground Dice: [0.8051]
2022-07-08 22:12:26.412591: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:12:26.984098: Suus1 maybe_update_lr lr: 0.00603
2022-07-08 22:12:27.014306: This epoch took 72.613168 s

2022-07-08 22:12:27.047246: 
epoch:  215
2022-07-08 22:13:34.416468: train loss : -0.8012
2022-07-08 22:13:38.771709: validation loss: -0.7662
2022-07-08 22:13:38.784349: Average global foreground Dice: [0.8004]
2022-07-08 22:13:38.790964: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:13:39.312479: Suus1 maybe_update_lr lr: 0.006011
2022-07-08 22:13:39.338575: This epoch took 72.268478 s

2022-07-08 22:13:39.341824: 
epoch:  216
2022-07-08 22:14:46.612048: train loss : -0.7984
2022-07-08 22:14:51.082299: validation loss: -0.7567
2022-07-08 22:14:51.111075: Average global foreground Dice: [0.7977]
2022-07-08 22:14:51.119391: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:14:51.616201: Suus1 maybe_update_lr lr: 0.005991
2022-07-08 22:14:51.619051: This epoch took 72.254581 s

2022-07-08 22:14:51.621297: 
epoch:  217
2022-07-08 22:15:58.909061: train loss : -0.8037
2022-07-08 22:16:03.274223: validation loss: -0.7580
2022-07-08 22:16:03.296447: Average global foreground Dice: [0.8028]
2022-07-08 22:16:03.318856: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:16:03.821825: Suus1 maybe_update_lr lr: 0.005972
2022-07-08 22:16:03.824257: This epoch took 72.200363 s

2022-07-08 22:16:03.826519: 
epoch:  218
2022-07-08 22:17:11.115107: train loss : -0.8015
2022-07-08 22:17:15.540288: validation loss: -0.7518
2022-07-08 22:17:15.575400: Average global foreground Dice: [0.7879]
2022-07-08 22:17:15.580927: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:17:16.062338: Suus1 maybe_update_lr lr: 0.005953
2022-07-08 22:17:16.064744: This epoch took 72.236027 s

2022-07-08 22:17:16.066979: 
epoch:  219
2022-07-08 22:18:23.342737: train loss : -0.8016
2022-07-08 22:18:28.119218: validation loss: -0.7455
2022-07-08 22:18:28.141809: Average global foreground Dice: [0.7817]
2022-07-08 22:18:28.158999: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:18:28.805418: Suus1 maybe_update_lr lr: 0.005934
2022-07-08 22:18:28.810885: This epoch took 72.741774 s

2022-07-08 22:18:28.813013: 
epoch:  220
2022-07-08 22:19:36.060742: train loss : -0.8091
2022-07-08 22:19:40.496774: validation loss: -0.7572
2022-07-08 22:19:40.515890: Average global foreground Dice: [0.7985]
2022-07-08 22:19:40.525050: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:19:41.185374: Suus1 maybe_update_lr lr: 0.005915
2022-07-08 22:19:41.187910: This epoch took 72.372683 s

2022-07-08 22:19:41.190189: 
epoch:  221
2022-07-08 22:20:48.443354: train loss : -0.7973
2022-07-08 22:20:52.853852: validation loss: -0.7385
2022-07-08 22:20:52.864064: Average global foreground Dice: [0.7814]
2022-07-08 22:20:52.883268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:20:53.454939: Suus1 maybe_update_lr lr: 0.005896
2022-07-08 22:20:53.457160: This epoch took 72.264806 s

2022-07-08 22:20:53.459202: 
epoch:  222
2022-07-08 22:22:00.697657: train loss : -0.7958
2022-07-08 22:22:05.129783: validation loss: -0.7615
2022-07-08 22:22:05.155518: Average global foreground Dice: [0.8007]
2022-07-08 22:22:05.168339: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:22:05.828918: Suus1 maybe_update_lr lr: 0.005877
2022-07-08 22:22:05.831528: This epoch took 72.370094 s

2022-07-08 22:22:05.833623: 
epoch:  223
2022-07-08 22:23:13.171809: train loss : -0.7910
2022-07-08 22:23:17.970756: validation loss: -0.7370
2022-07-08 22:23:17.974154: Average global foreground Dice: [0.7797]
2022-07-08 22:23:17.976549: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:23:18.509708: Suus1 maybe_update_lr lr: 0.005858
2022-07-08 22:23:18.523307: This epoch took 72.687637 s

2022-07-08 22:23:18.533423: 
epoch:  224
2022-07-08 22:24:25.837129: train loss : -0.7934
2022-07-08 22:24:30.463584: validation loss: -0.7423
2022-07-08 22:24:30.470877: Average global foreground Dice: [0.7888]
2022-07-08 22:24:30.482969: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:24:31.052101: Suus1 maybe_update_lr lr: 0.005839
2022-07-08 22:24:31.054516: This epoch took 72.511747 s

2022-07-08 22:24:31.056838: 
epoch:  225
2022-07-08 22:25:38.235983: train loss : -0.7984
2022-07-08 22:25:42.652767: validation loss: -0.7613
2022-07-08 22:25:42.664472: Average global foreground Dice: [0.7963]
2022-07-08 22:25:42.666546: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:25:43.245078: Suus1 maybe_update_lr lr: 0.00582
2022-07-08 22:25:43.270898: This epoch took 72.211838 s

2022-07-08 22:25:43.288291: 
epoch:  226
2022-07-08 22:26:50.596864: train loss : -0.8164
2022-07-08 22:26:55.145285: validation loss: -0.7591
2022-07-08 22:26:55.148906: Average global foreground Dice: [0.799]
2022-07-08 22:26:55.151317: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:26:55.593074: Suus1 maybe_update_lr lr: 0.005801
2022-07-08 22:26:55.605162: This epoch took 72.288901 s

2022-07-08 22:26:55.621366: 
epoch:  227
2022-07-08 22:28:03.028372: train loss : -0.8158
2022-07-08 22:28:07.469414: validation loss: -0.7546
2022-07-08 22:28:07.472860: Average global foreground Dice: [0.79]
2022-07-08 22:28:07.488925: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:28:07.970911: Suus1 maybe_update_lr lr: 0.005781
2022-07-08 22:28:07.975718: This epoch took 72.337863 s

2022-07-08 22:28:07.982453: 
epoch:  228
2022-07-08 22:29:15.398173: train loss : -0.8072
2022-07-08 22:29:19.740318: validation loss: -0.7434
2022-07-08 22:29:19.771880: Average global foreground Dice: [0.7854]
2022-07-08 22:29:19.792246: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:29:20.258123: Suus1 maybe_update_lr lr: 0.005762
2022-07-08 22:29:20.265173: This epoch took 72.280501 s

2022-07-08 22:29:20.267448: 
epoch:  229
2022-07-08 22:30:27.540248: train loss : -0.8089
2022-07-08 22:30:32.027015: validation loss: -0.7475
2022-07-08 22:30:32.051445: Average global foreground Dice: [0.7928]
2022-07-08 22:30:32.058395: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:30:32.530251: Suus1 maybe_update_lr lr: 0.005743
2022-07-08 22:30:32.535791: This epoch took 72.261276 s

2022-07-08 22:30:32.538923: 
epoch:  230
2022-07-08 22:31:39.840971: train loss : -0.8005
2022-07-08 22:31:44.343551: validation loss: -0.7381
2022-07-08 22:31:44.352877: Average global foreground Dice: [0.7817]
2022-07-08 22:31:44.376297: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:31:44.914323: Suus1 maybe_update_lr lr: 0.005724
2022-07-08 22:31:44.917174: This epoch took 72.375874 s

2022-07-08 22:31:44.919597: 
epoch:  231
2022-07-08 22:32:52.185327: train loss : -0.7993
2022-07-08 22:32:56.639323: validation loss: -0.7577
2022-07-08 22:32:56.642323: Average global foreground Dice: [0.7924]
2022-07-08 22:32:56.644354: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:32:57.201925: Suus1 maybe_update_lr lr: 0.005705
2022-07-08 22:32:57.204407: This epoch took 72.282637 s

2022-07-08 22:32:57.206757: 
epoch:  232
2022-07-08 22:34:04.406493: train loss : -0.8100
2022-07-08 22:34:08.979214: validation loss: -0.7683
2022-07-08 22:34:08.987957: Average global foreground Dice: [0.8082]
2022-07-08 22:34:08.993639: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:34:09.498416: Suus1 maybe_update_lr lr: 0.005686
2022-07-08 22:34:09.500792: This epoch took 72.291847 s

2022-07-08 22:34:09.502834: 
epoch:  233
2022-07-08 22:35:16.765838: train loss : -0.8109
2022-07-08 22:35:21.213095: validation loss: -0.7662
2022-07-08 22:35:21.216889: Average global foreground Dice: [0.8048]
2022-07-08 22:35:21.219322: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:35:21.653386: Suus1 maybe_update_lr lr: 0.005667
2022-07-08 22:35:21.655826: This epoch took 72.150798 s

2022-07-08 22:35:21.657922: 
epoch:  234
2022-07-08 22:36:28.952397: train loss : -0.8158
2022-07-08 22:36:33.378161: validation loss: -0.7509
2022-07-08 22:36:33.381393: Average global foreground Dice: [0.8019]
2022-07-08 22:36:33.383911: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:36:33.844280: Suus1 maybe_update_lr lr: 0.005647
2022-07-08 22:36:33.846838: This epoch took 72.186912 s

2022-07-08 22:36:33.848918: 
epoch:  235
2022-07-08 22:37:41.108507: train loss : -0.8175
2022-07-08 22:37:45.594136: validation loss: -0.7699
2022-07-08 22:37:45.604733: Average global foreground Dice: [0.8109]
2022-07-08 22:37:45.609244: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:37:46.138318: Suus1 maybe_update_lr lr: 0.005628
2022-07-08 22:37:46.151512: This epoch took 72.300540 s

2022-07-08 22:37:46.162480: 
epoch:  236
2022-07-08 22:38:53.705389: train loss : -0.8198
2022-07-08 22:38:58.114007: validation loss: -0.7677
2022-07-08 22:38:58.117729: Average global foreground Dice: [0.8146]
2022-07-08 22:38:58.121710: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:38:58.668522: Suus1 maybe_update_lr lr: 0.005609
2022-07-08 22:38:58.670991: saving best epoch checkpoint...
2022-07-08 22:38:58.715285: saving checkpoint...
2022-07-08 22:38:59.708560: done, saving took 1.04 seconds
2022-07-08 22:38:59.725596: This epoch took 73.550208 s

2022-07-08 22:38:59.728272: 
epoch:  237
2022-07-08 22:40:06.957726: train loss : -0.8204
2022-07-08 22:40:11.366746: validation loss: -0.7479
2022-07-08 22:40:11.395906: Average global foreground Dice: [0.7895]
2022-07-08 22:40:11.434260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:40:11.971633: Suus1 maybe_update_lr lr: 0.00559
2022-07-08 22:40:11.992308: This epoch took 72.261336 s

2022-07-08 22:40:12.014247: 
epoch:  238
2022-07-08 22:41:19.240000: train loss : -0.8165
2022-07-08 22:41:23.669983: validation loss: -0.7863
2022-07-08 22:41:23.696351: Average global foreground Dice: [0.8242]
2022-07-08 22:41:23.708967: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:41:24.552662: Suus1 maybe_update_lr lr: 0.005571
2022-07-08 22:41:24.555226: saving best epoch checkpoint...
2022-07-08 22:41:24.594794: saving checkpoint...
2022-07-08 22:41:25.561730: done, saving took 1.00 seconds
2022-07-08 22:41:25.576358: This epoch took 73.535072 s

2022-07-08 22:41:25.578625: 
epoch:  239
2022-07-08 22:42:32.762370: train loss : -0.8237
2022-07-08 22:42:37.152032: validation loss: -0.7701
2022-07-08 22:42:37.163607: Average global foreground Dice: [0.8083]
2022-07-08 22:42:37.168615: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:42:37.642419: Suus1 maybe_update_lr lr: 0.005551
2022-07-08 22:42:37.644744: saving best epoch checkpoint...
2022-07-08 22:42:37.695922: saving checkpoint...
2022-07-08 22:42:38.638717: done, saving took 0.99 seconds
2022-07-08 22:42:38.653454: This epoch took 73.072727 s

2022-07-08 22:42:38.655673: 
epoch:  240
2022-07-08 22:43:45.924027: train loss : -0.8108
2022-07-08 22:43:50.544939: validation loss: -0.7753
2022-07-08 22:43:50.567390: Average global foreground Dice: [0.814]
2022-07-08 22:43:50.573740: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:43:51.136771: Suus1 maybe_update_lr lr: 0.005532
2022-07-08 22:43:51.184324: saving best epoch checkpoint...
2022-07-08 22:43:51.257731: saving checkpoint...
2022-07-08 22:43:52.325057: done, saving took 1.12 seconds
2022-07-08 22:43:52.339949: This epoch took 73.682279 s

2022-07-08 22:43:52.342005: 
epoch:  241
2022-07-08 22:44:59.769785: train loss : -0.8189
2022-07-08 22:45:04.210616: validation loss: -0.7399
2022-07-08 22:45:04.214474: Average global foreground Dice: [0.7916]
2022-07-08 22:45:04.226408: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:45:04.840083: Suus1 maybe_update_lr lr: 0.005513
2022-07-08 22:45:04.850740: This epoch took 72.506667 s

2022-07-08 22:45:04.853644: 
epoch:  242
2022-07-08 22:46:12.160921: train loss : -0.8140
2022-07-08 22:46:16.579554: validation loss: -0.7655
2022-07-08 22:46:16.585453: Average global foreground Dice: [0.7995]
2022-07-08 22:46:16.589256: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:46:17.106569: Suus1 maybe_update_lr lr: 0.005494
2022-07-08 22:46:17.109282: This epoch took 72.252434 s

2022-07-08 22:46:17.111486: 
epoch:  243
2022-07-08 22:47:24.487738: train loss : -0.8051
2022-07-08 22:47:28.915199: validation loss: -0.7594
2022-07-08 22:47:28.920088: Average global foreground Dice: [0.7963]
2022-07-08 22:47:28.951385: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:47:29.495686: Suus1 maybe_update_lr lr: 0.005474
2022-07-08 22:47:29.519978: This epoch took 72.406419 s

2022-07-08 22:47:29.522314: 
epoch:  244
2022-07-08 22:48:36.739573: train loss : -0.8051
2022-07-08 22:48:41.160774: validation loss: -0.7445
2022-07-08 22:48:41.166647: Average global foreground Dice: [0.7877]
2022-07-08 22:48:41.169004: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:48:41.625620: Suus1 maybe_update_lr lr: 0.005455
2022-07-08 22:48:41.631728: This epoch took 72.106783 s

2022-07-08 22:48:41.633986: 
epoch:  245
2022-07-08 22:49:48.894880: train loss : -0.7848
2022-07-08 22:49:53.454350: validation loss: -0.7517
2022-07-08 22:49:53.468123: Average global foreground Dice: [0.79]
2022-07-08 22:49:53.471445: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:49:54.045968: Suus1 maybe_update_lr lr: 0.005436
2022-07-08 22:49:54.048440: This epoch took 72.412223 s

2022-07-08 22:49:54.050625: 
epoch:  246
2022-07-08 22:51:01.338140: train loss : -0.7939
2022-07-08 22:51:05.863657: validation loss: -0.7505
2022-07-08 22:51:05.884621: Average global foreground Dice: [0.7956]
2022-07-08 22:51:05.913358: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:51:06.730691: Suus1 maybe_update_lr lr: 0.005417
2022-07-08 22:51:06.762547: This epoch took 72.708705 s

2022-07-08 22:51:06.784367: 
epoch:  247
2022-07-08 22:52:14.147932: train loss : -0.8027
2022-07-08 22:52:18.530964: validation loss: -0.7586
2022-07-08 22:52:18.550159: Average global foreground Dice: [0.7969]
2022-07-08 22:52:18.552544: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:52:19.066980: Suus1 maybe_update_lr lr: 0.005397
2022-07-08 22:52:19.069432: This epoch took 72.260076 s

2022-07-08 22:52:19.071630: 
epoch:  248
2022-07-08 22:53:26.452696: train loss : -0.7996
2022-07-08 22:53:31.045065: validation loss: -0.7679
2022-07-08 22:53:31.072916: Average global foreground Dice: [0.808]
2022-07-08 22:53:31.088272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:53:31.634380: Suus1 maybe_update_lr lr: 0.005378
2022-07-08 22:53:31.653299: This epoch took 72.579526 s

2022-07-08 22:53:31.675249: 
epoch:  249
2022-07-08 22:54:38.976394: train loss : -0.8054
2022-07-08 22:54:43.695471: validation loss: -0.7796
2022-07-08 22:54:43.725823: Average global foreground Dice: [0.8116]
2022-07-08 22:54:43.739653: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:54:44.210840: Suus1 maybe_update_lr lr: 0.005359
2022-07-08 22:54:44.213315: saving scheduled checkpoint file...
2022-07-08 22:54:44.265331: saving checkpoint...
2022-07-08 22:54:45.271141: done, saving took 1.06 seconds
2022-07-08 22:54:45.287867: done
2022-07-08 22:54:45.290078: This epoch took 73.602039 s

2022-07-08 22:54:45.292209: 
epoch:  250
2022-07-08 22:55:52.512583: train loss : -0.8057
2022-07-08 22:55:57.114635: validation loss: -0.7606
2022-07-08 22:55:57.152688: Average global foreground Dice: [0.8088]
2022-07-08 22:55:57.170264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:55:57.796226: Suus1 maybe_update_lr lr: 0.00534
2022-07-08 22:55:57.798770: This epoch took 72.504490 s

2022-07-08 22:55:57.800993: 
epoch:  251
2022-07-08 22:57:05.121822: train loss : -0.8165
2022-07-08 22:57:09.639279: validation loss: -0.7627
2022-07-08 22:57:09.653188: Average global foreground Dice: [0.8034]
2022-07-08 22:57:09.657720: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:57:10.173201: Suus1 maybe_update_lr lr: 0.00532
2022-07-08 22:57:10.175627: This epoch took 72.372449 s

2022-07-08 22:57:10.177739: 
epoch:  252
2022-07-08 22:58:17.417487: train loss : -0.8163
2022-07-08 22:58:22.142740: validation loss: -0.7726
2022-07-08 22:58:22.148740: Average global foreground Dice: [0.8126]
2022-07-08 22:58:22.160951: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:58:22.646697: Suus1 maybe_update_lr lr: 0.005301
2022-07-08 22:58:22.688496: saving best epoch checkpoint...
2022-07-08 22:58:22.787136: saving checkpoint...
2022-07-08 22:58:23.717153: done, saving took 1.00 seconds
2022-07-08 22:58:23.731850: This epoch took 73.551825 s

2022-07-08 22:58:23.734212: 
epoch:  253
2022-07-08 22:59:30.966120: train loss : -0.8113
2022-07-08 22:59:35.536662: validation loss: -0.7360
2022-07-08 22:59:35.542481: Average global foreground Dice: [0.7834]
2022-07-08 22:59:35.560837: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 22:59:36.084599: Suus1 maybe_update_lr lr: 0.005282
2022-07-08 22:59:36.086919: This epoch took 72.350610 s

2022-07-08 22:59:36.088946: 
epoch:  254
2022-07-08 23:00:43.309512: train loss : -0.8110
2022-07-08 23:00:47.876882: validation loss: -0.7285
2022-07-08 23:00:47.892983: Average global foreground Dice: [0.7669]
2022-07-08 23:00:47.907488: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:00:48.461200: Suus1 maybe_update_lr lr: 0.005262
2022-07-08 23:00:48.463630: This epoch took 72.372594 s

2022-07-08 23:00:48.465595: 
epoch:  255
2022-07-08 23:01:55.806964: train loss : -0.8001
2022-07-08 23:02:00.507911: validation loss: -0.7734
2022-07-08 23:02:00.548479: Average global foreground Dice: [0.8106]
2022-07-08 23:02:00.564077: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:02:01.294279: Suus1 maybe_update_lr lr: 0.005243
2022-07-08 23:02:01.296697: This epoch took 72.828975 s

2022-07-08 23:02:01.299105: 
epoch:  256
2022-07-08 23:03:08.653241: train loss : -0.7986
2022-07-08 23:03:13.016583: validation loss: -0.7733
2022-07-08 23:03:13.055697: Average global foreground Dice: [0.8147]
2022-07-08 23:03:13.068413: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:03:13.654856: Suus1 maybe_update_lr lr: 0.005224
2022-07-08 23:03:13.682706: This epoch took 72.381438 s

2022-07-08 23:03:13.702826: 
epoch:  257
2022-07-08 23:04:21.075327: train loss : -0.7970
2022-07-08 23:04:25.745932: validation loss: -0.7498
2022-07-08 23:04:25.756554: Average global foreground Dice: [0.7968]
2022-07-08 23:04:25.765249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:04:26.390681: Suus1 maybe_update_lr lr: 0.005204
2022-07-08 23:04:26.393215: This epoch took 72.681456 s

2022-07-08 23:04:26.395320: 
epoch:  258
2022-07-08 23:05:33.703462: train loss : -0.7966
2022-07-08 23:05:38.295481: validation loss: -0.7349
2022-07-08 23:05:38.298347: Average global foreground Dice: [0.7811]
2022-07-08 23:05:38.330750: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:05:38.889657: Suus1 maybe_update_lr lr: 0.005185
2022-07-08 23:05:38.892352: This epoch took 72.495025 s

2022-07-08 23:05:38.894475: 
epoch:  259
2022-07-08 23:06:46.128327: train loss : -0.8141
2022-07-08 23:06:50.663440: validation loss: -0.7779
2022-07-08 23:06:50.697306: Average global foreground Dice: [0.8118]
2022-07-08 23:06:50.716448: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:06:51.281079: Suus1 maybe_update_lr lr: 0.005166
2022-07-08 23:06:51.304421: This epoch took 72.408053 s

2022-07-08 23:06:51.307751: 
epoch:  260
2022-07-08 23:07:58.777639: train loss : -0.8091
2022-07-08 23:08:03.441763: validation loss: -0.7915
2022-07-08 23:08:03.470729: Average global foreground Dice: [0.8251]
2022-07-08 23:08:03.503255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:08:04.035696: Suus1 maybe_update_lr lr: 0.005146
2022-07-08 23:08:04.038809: This epoch took 72.714677 s

2022-07-08 23:08:04.051736: 
epoch:  261
2022-07-08 23:09:11.474207: train loss : -0.8221
2022-07-08 23:09:16.006469: validation loss: -0.7475
2022-07-08 23:09:16.033356: Average global foreground Dice: [0.792]
2022-07-08 23:09:16.039327: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:09:16.512678: Suus1 maybe_update_lr lr: 0.005127
2022-07-08 23:09:16.515077: This epoch took 72.449803 s

2022-07-08 23:09:16.521676: 
epoch:  262
2022-07-08 23:10:23.828557: train loss : -0.8202
2022-07-08 23:10:28.302931: validation loss: -0.7766
2022-07-08 23:10:28.320185: Average global foreground Dice: [0.8104]
2022-07-08 23:10:28.327446: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:10:28.862786: Suus1 maybe_update_lr lr: 0.005107
2022-07-08 23:10:28.884511: This epoch took 72.359243 s

2022-07-08 23:10:28.902589: 
epoch:  263
2022-07-08 23:11:36.241328: train loss : -0.8113
2022-07-08 23:11:40.771502: validation loss: -0.7601
2022-07-08 23:11:40.809626: Average global foreground Dice: [0.792]
2022-07-08 23:11:40.819328: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:11:41.324569: Suus1 maybe_update_lr lr: 0.005088
2022-07-08 23:11:41.326886: This epoch took 72.403631 s

2022-07-08 23:11:41.329166: 
epoch:  264
2022-07-08 23:12:48.627410: train loss : -0.8237
2022-07-08 23:12:53.023438: validation loss: -0.7662
2022-07-08 23:12:53.026750: Average global foreground Dice: [0.8037]
2022-07-08 23:12:53.028808: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:12:53.514210: Suus1 maybe_update_lr lr: 0.005069
2022-07-08 23:12:53.516692: This epoch took 72.185413 s

2022-07-08 23:12:53.518923: 
epoch:  265
2022-07-08 23:14:00.842902: train loss : -0.8227
2022-07-08 23:14:05.514066: validation loss: -0.7751
2022-07-08 23:14:05.544909: Average global foreground Dice: [0.8125]
2022-07-08 23:14:05.573265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:14:06.148052: Suus1 maybe_update_lr lr: 0.005049
2022-07-08 23:14:06.150586: This epoch took 72.629552 s

2022-07-08 23:14:06.152961: 
epoch:  266
2022-07-08 23:15:13.508328: train loss : -0.8209
2022-07-08 23:15:18.002259: validation loss: -0.7792
2022-07-08 23:15:18.016779: Average global foreground Dice: [0.8093]
2022-07-08 23:15:18.020005: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:15:18.601691: Suus1 maybe_update_lr lr: 0.00503
2022-07-08 23:15:18.604833: saving best epoch checkpoint...
2022-07-08 23:15:18.652999: saving checkpoint...
2022-07-08 23:15:19.557806: done, saving took 0.95 seconds
2022-07-08 23:15:19.574081: This epoch took 73.419048 s

2022-07-08 23:15:19.576640: 
epoch:  267
2022-07-08 23:16:26.859943: train loss : -0.8313
2022-07-08 23:16:31.765500: validation loss: -0.7483
2022-07-08 23:16:31.770513: Average global foreground Dice: [0.7915]
2022-07-08 23:16:31.772904: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:16:32.237201: Suus1 maybe_update_lr lr: 0.00501
2022-07-08 23:16:32.258336: This epoch took 72.679634 s

2022-07-08 23:16:32.280374: 
epoch:  268
2022-07-08 23:17:39.712758: train loss : -0.8203
2022-07-08 23:17:44.210048: validation loss: -0.7607
2022-07-08 23:17:44.214029: Average global foreground Dice: [0.7968]
2022-07-08 23:17:44.216373: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:17:44.679259: Suus1 maybe_update_lr lr: 0.004991
2022-07-08 23:17:44.681836: This epoch took 72.373572 s

2022-07-08 23:17:44.684289: 
epoch:  269
2022-07-08 23:18:52.052478: train loss : -0.8213
2022-07-08 23:18:56.450856: validation loss: -0.7648
2022-07-08 23:18:56.465597: Average global foreground Dice: [0.8048]
2022-07-08 23:18:56.499253: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:18:57.181261: Suus1 maybe_update_lr lr: 0.004971
2022-07-08 23:18:57.183707: This epoch took 72.497193 s

2022-07-08 23:18:57.185834: 
epoch:  270
2022-07-08 23:20:04.458006: train loss : -0.8215
2022-07-08 23:20:08.907175: validation loss: -0.7644
2022-07-08 23:20:08.911489: Average global foreground Dice: [0.7987]
2022-07-08 23:20:08.941243: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:20:09.425126: Suus1 maybe_update_lr lr: 0.004952
2022-07-08 23:20:09.437136: This epoch took 72.249264 s

2022-07-08 23:20:09.441309: 
epoch:  271
2022-07-08 23:21:16.758416: train loss : -0.8205
2022-07-08 23:21:21.629426: validation loss: -0.7657
2022-07-08 23:21:21.633678: Average global foreground Dice: [0.8055]
2022-07-08 23:21:21.647210: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:21:22.140565: Suus1 maybe_update_lr lr: 0.004933
2022-07-08 23:21:22.159328: This epoch took 72.712155 s

2022-07-08 23:21:22.174101: 
epoch:  272
2022-07-08 23:22:29.598897: train loss : -0.8244
2022-07-08 23:22:33.939444: validation loss: -0.7615
2022-07-08 23:22:33.947862: Average global foreground Dice: [0.8025]
2022-07-08 23:22:33.970111: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:22:34.436241: Suus1 maybe_update_lr lr: 0.004913
2022-07-08 23:22:34.438910: This epoch took 72.250364 s

2022-07-08 23:22:34.441011: 
epoch:  273
2022-07-08 23:23:41.769186: train loss : -0.8274
2022-07-08 23:23:46.305933: validation loss: -0.7680
2022-07-08 23:23:46.331892: Average global foreground Dice: [0.809]
2022-07-08 23:23:46.335034: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:23:46.988440: Suus1 maybe_update_lr lr: 0.004894
2022-07-08 23:23:47.029339: This epoch took 72.586231 s

2022-07-08 23:23:47.072016: 
epoch:  274
2022-07-08 23:24:54.380605: train loss : -0.8205
2022-07-08 23:24:59.044635: validation loss: -0.7776
2022-07-08 23:24:59.062055: Average global foreground Dice: [0.8115]
2022-07-08 23:24:59.079561: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:24:59.629889: Suus1 maybe_update_lr lr: 0.004874
2022-07-08 23:24:59.632238: saving best epoch checkpoint...
2022-07-08 23:24:59.684732: saving checkpoint...
2022-07-08 23:25:00.842763: done, saving took 1.21 seconds
2022-07-08 23:25:00.859020: This epoch took 73.713000 s

2022-07-08 23:25:00.861134: 
epoch:  275
2022-07-08 23:26:08.145678: train loss : -0.8272
2022-07-08 23:26:12.946563: validation loss: -0.7648
2022-07-08 23:26:12.950409: Average global foreground Dice: [0.8052]
2022-07-08 23:26:12.952864: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:26:13.431960: Suus1 maybe_update_lr lr: 0.004855
2022-07-08 23:26:13.435107: saving best epoch checkpoint...
2022-07-08 23:26:13.495640: saving checkpoint...
2022-07-08 23:26:14.510473: done, saving took 1.06 seconds
2022-07-08 23:26:14.524617: This epoch took 73.661326 s

2022-07-08 23:26:14.526545: 
epoch:  276
2022-07-08 23:27:21.823872: train loss : -0.8224
2022-07-08 23:27:26.246146: validation loss: -0.7739
2022-07-08 23:27:26.272649: Average global foreground Dice: [0.8088]
2022-07-08 23:27:26.295677: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:27:26.738978: Suus1 maybe_update_lr lr: 0.004835
2022-07-08 23:27:26.741320: saving best epoch checkpoint...
2022-07-08 23:27:26.790962: saving checkpoint...
2022-07-08 23:27:27.805986: done, saving took 1.06 seconds
2022-07-08 23:27:27.821268: This epoch took 73.292570 s

2022-07-08 23:27:27.823477: 
epoch:  277
2022-07-08 23:28:35.000928: train loss : -0.8198
2022-07-08 23:28:39.461786: validation loss: -0.7597
2022-07-08 23:28:39.473602: Average global foreground Dice: [0.7984]
2022-07-08 23:28:39.475849: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:28:39.963340: Suus1 maybe_update_lr lr: 0.004816
2022-07-08 23:28:39.976904: This epoch took 72.151369 s

2022-07-08 23:28:39.979062: 
epoch:  278
2022-07-08 23:29:47.226155: train loss : -0.8160
2022-07-08 23:29:51.762107: validation loss: -0.7552
2022-07-08 23:29:51.765622: Average global foreground Dice: [0.7921]
2022-07-08 23:29:51.770327: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:29:52.408229: Suus1 maybe_update_lr lr: 0.004796
2022-07-08 23:29:52.410672: This epoch took 72.429538 s

2022-07-08 23:29:52.412841: 
epoch:  279
2022-07-08 23:30:59.630716: train loss : -0.8137
2022-07-08 23:31:04.143632: validation loss: -0.7656
2022-07-08 23:31:04.165481: Average global foreground Dice: [0.8001]
2022-07-08 23:31:04.167704: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:31:04.668917: Suus1 maybe_update_lr lr: 0.004776
2022-07-08 23:31:04.671260: This epoch took 72.255760 s

2022-07-08 23:31:04.673446: 
epoch:  280
2022-07-08 23:32:11.989609: train loss : -0.8226
2022-07-08 23:32:16.320470: validation loss: -0.7394
2022-07-08 23:32:16.358173: Average global foreground Dice: [0.7749]
2022-07-08 23:32:16.360786: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:32:16.865208: Suus1 maybe_update_lr lr: 0.004757
2022-07-08 23:32:16.883265: This epoch took 72.207655 s

2022-07-08 23:32:16.885559: 
epoch:  281
2022-07-08 23:33:24.148857: train loss : -0.8249
2022-07-08 23:33:28.813870: validation loss: -0.7584
2022-07-08 23:33:28.858782: Average global foreground Dice: [0.7943]
2022-07-08 23:33:28.879267: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:33:29.391680: Suus1 maybe_update_lr lr: 0.004737
2022-07-08 23:33:29.402452: This epoch took 72.514634 s

2022-07-08 23:33:29.404603: 
epoch:  282
2022-07-08 23:34:36.746525: train loss : -0.8292
2022-07-08 23:34:41.212665: validation loss: -0.7555
2022-07-08 23:34:41.228703: Average global foreground Dice: [0.7969]
2022-07-08 23:34:41.233133: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:34:41.714963: Suus1 maybe_update_lr lr: 0.004718
2022-07-08 23:34:41.725730: This epoch took 72.318813 s

2022-07-08 23:34:41.737944: 
epoch:  283
2022-07-08 23:35:49.046730: train loss : -0.8257
2022-07-08 23:35:53.418065: validation loss: -0.7695
2022-07-08 23:35:53.430235: Average global foreground Dice: [0.8111]
2022-07-08 23:35:53.458656: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:35:53.972172: Suus1 maybe_update_lr lr: 0.004698
2022-07-08 23:35:53.974658: This epoch took 72.216413 s

2022-07-08 23:35:53.976932: 
epoch:  284
2022-07-08 23:37:01.287173: train loss : -0.8157
2022-07-08 23:37:05.649047: validation loss: -0.7600
2022-07-08 23:37:05.674480: Average global foreground Dice: [0.7978]
2022-07-08 23:37:05.676836: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:37:06.298974: Suus1 maybe_update_lr lr: 0.004679
2022-07-08 23:37:06.301302: This epoch took 72.322160 s

2022-07-08 23:37:06.303239: 
epoch:  285
2022-07-08 23:38:13.700428: train loss : -0.8140
2022-07-08 23:38:18.025771: validation loss: -0.7466
2022-07-08 23:38:18.040318: Average global foreground Dice: [0.7875]
2022-07-08 23:38:18.043267: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:38:18.647695: Suus1 maybe_update_lr lr: 0.004659
2022-07-08 23:38:18.650670: This epoch took 72.345510 s

2022-07-08 23:38:18.652747: 
epoch:  286
2022-07-08 23:39:25.951833: train loss : -0.8154
2022-07-08 23:39:30.490580: validation loss: -0.7513
2022-07-08 23:39:30.525833: Average global foreground Dice: [0.7906]
2022-07-08 23:39:30.546973: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:39:31.068628: Suus1 maybe_update_lr lr: 0.004639
2022-07-08 23:39:31.097317: This epoch took 72.441794 s

2022-07-08 23:39:31.119244: 
epoch:  287
2022-07-08 23:40:38.444463: train loss : -0.8185
2022-07-08 23:40:42.795368: validation loss: -0.7499
2022-07-08 23:40:42.809467: Average global foreground Dice: [0.7893]
2022-07-08 23:40:42.815119: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:40:43.310709: Suus1 maybe_update_lr lr: 0.00462
2022-07-08 23:40:43.322649: This epoch took 72.183089 s

2022-07-08 23:40:43.326103: 
epoch:  288
2022-07-08 23:41:50.635228: train loss : -0.8227
2022-07-08 23:41:55.287133: validation loss: -0.7428
2022-07-08 23:41:55.294449: Average global foreground Dice: [0.7867]
2022-07-08 23:41:55.323393: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:41:55.927751: Suus1 maybe_update_lr lr: 0.0046
2022-07-08 23:41:55.937009: This epoch took 72.607783 s

2022-07-08 23:41:55.939290: 
epoch:  289
2022-07-08 23:43:03.323364: train loss : -0.8167
2022-07-08 23:43:07.737828: validation loss: -0.7544
2022-07-08 23:43:07.747986: Average global foreground Dice: [0.796]
2022-07-08 23:43:07.750357: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:43:08.374901: Suus1 maybe_update_lr lr: 0.004581
2022-07-08 23:43:08.391563: This epoch took 72.449659 s

2022-07-08 23:43:08.403652: 
epoch:  290
2022-07-08 23:44:15.823551: train loss : -0.8106
2022-07-08 23:44:20.144810: validation loss: -0.7570
2022-07-08 23:44:20.153394: Average global foreground Dice: [0.8029]
2022-07-08 23:44:20.177258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:44:20.736148: Suus1 maybe_update_lr lr: 0.004561
2022-07-08 23:44:20.738536: This epoch took 72.308268 s

2022-07-08 23:44:20.740698: 
epoch:  291
2022-07-08 23:45:28.068612: train loss : -0.8121
2022-07-08 23:45:32.642614: validation loss: -0.7427
2022-07-08 23:45:32.667710: Average global foreground Dice: [0.7969]
2022-07-08 23:45:32.707277: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:45:33.290409: Suus1 maybe_update_lr lr: 0.004541
2022-07-08 23:45:33.320326: This epoch took 72.577470 s

2022-07-08 23:45:33.342259: 
epoch:  292
2022-07-08 23:46:40.704897: train loss : -0.8245
2022-07-08 23:46:45.248697: validation loss: -0.7594
2022-07-08 23:46:45.281812: Average global foreground Dice: [0.8055]
2022-07-08 23:46:45.314259: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:46:45.890642: Suus1 maybe_update_lr lr: 0.004522
2022-07-08 23:46:45.903374: This epoch took 72.540097 s

2022-07-08 23:46:45.916255: 
epoch:  293
2022-07-08 23:47:53.171018: train loss : -0.8277
2022-07-08 23:47:57.601838: validation loss: -0.7718
2022-07-08 23:47:57.612107: Average global foreground Dice: [0.8057]
2022-07-08 23:47:57.634307: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:47:58.301845: Suus1 maybe_update_lr lr: 0.004502
2022-07-08 23:47:58.304606: This epoch took 72.384806 s

2022-07-08 23:47:58.306974: 
epoch:  294
2022-07-08 23:49:05.453860: train loss : -0.8328
2022-07-08 23:49:09.998423: validation loss: -0.7577
2022-07-08 23:49:10.005040: Average global foreground Dice: [0.7962]
2022-07-08 23:49:10.023260: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:49:10.603356: Suus1 maybe_update_lr lr: 0.004482
2022-07-08 23:49:10.606183: This epoch took 72.296978 s

2022-07-08 23:49:10.608465: 
epoch:  295
2022-07-08 23:50:17.832833: train loss : -0.8299
2022-07-08 23:50:22.332740: validation loss: -0.7777
2022-07-08 23:50:22.365752: Average global foreground Dice: [0.8156]
2022-07-08 23:50:22.386198: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:50:22.862261: Suus1 maybe_update_lr lr: 0.004463
2022-07-08 23:50:22.864706: This epoch took 72.254048 s

2022-07-08 23:50:22.866861: 
epoch:  296
2022-07-08 23:51:30.191222: train loss : -0.8297
2022-07-08 23:51:34.657315: validation loss: -0.7649
2022-07-08 23:51:34.675402: Average global foreground Dice: [0.8038]
2022-07-08 23:51:34.692210: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:51:35.190293: Suus1 maybe_update_lr lr: 0.004443
2022-07-08 23:51:35.192697: This epoch took 72.323623 s

2022-07-08 23:51:35.194722: 
epoch:  297
2022-07-08 23:52:42.473653: train loss : -0.8309
2022-07-08 23:52:46.833282: validation loss: -0.7722
2022-07-08 23:52:46.845046: Average global foreground Dice: [0.7996]
2022-07-08 23:52:46.862295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:52:47.503230: Suus1 maybe_update_lr lr: 0.004423
2022-07-08 23:52:47.505539: This epoch took 72.308771 s

2022-07-08 23:52:47.507690: 
epoch:  298
2022-07-08 23:53:54.789425: train loss : -0.8383
2022-07-08 23:53:59.257654: validation loss: -0.7456
2022-07-08 23:53:59.263904: Average global foreground Dice: [0.791]
2022-07-08 23:53:59.266811: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:53:59.746603: Suus1 maybe_update_lr lr: 0.004404
2022-07-08 23:53:59.765319: This epoch took 72.255431 s

2022-07-08 23:53:59.787249: 
epoch:  299
2022-07-08 23:55:07.139487: train loss : -0.8304
2022-07-08 23:55:11.620349: validation loss: -0.7583
2022-07-08 23:55:11.649975: Average global foreground Dice: [0.7994]
2022-07-08 23:55:11.671275: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:55:12.294727: Suus1 maybe_update_lr lr: 0.004384
2022-07-08 23:55:12.297201: saving scheduled checkpoint file...
2022-07-08 23:55:12.343169: saving checkpoint...
2022-07-08 23:55:13.478455: done, saving took 1.18 seconds
2022-07-08 23:55:13.496133: done
2022-07-08 23:55:13.498642: This epoch took 73.695708 s

2022-07-08 23:55:13.500767: 
epoch:  300
2022-07-08 23:56:20.830030: train loss : -0.8301
2022-07-08 23:56:25.297403: validation loss: -0.7600
2022-07-08 23:56:25.314604: Average global foreground Dice: [0.8056]
2022-07-08 23:56:25.317351: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:56:25.786382: Suus1 maybe_update_lr lr: 0.004364
2022-07-08 23:56:25.793281: This epoch took 72.290137 s

2022-07-08 23:56:25.795770: 
epoch:  301
2022-07-08 23:57:33.148068: train loss : -0.8284
2022-07-08 23:57:37.758672: validation loss: -0.7525
2022-07-08 23:57:37.761820: Average global foreground Dice: [0.7934]
2022-07-08 23:57:37.771821: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:57:38.438383: Suus1 maybe_update_lr lr: 0.004344
2022-07-08 23:57:38.440230: This epoch took 72.642466 s

2022-07-08 23:57:38.442854: 
epoch:  302
2022-07-08 23:58:45.695609: train loss : -0.8242
2022-07-08 23:58:50.257297: validation loss: -0.7589
2022-07-08 23:58:50.271488: Average global foreground Dice: [0.8021]
2022-07-08 23:58:50.302047: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-08 23:58:50.941491: Suus1 maybe_update_lr lr: 0.004325
2022-07-08 23:58:50.977330: This epoch took 72.532474 s

2022-07-08 23:58:51.000254: 
epoch:  303
2022-07-08 23:59:58.369829: train loss : -0.8368
2022-07-09 00:00:02.888386: validation loss: -0.7716
2022-07-09 00:00:02.906160: Average global foreground Dice: [0.8118]
2022-07-09 00:00:02.914633: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:00:03.429943: Suus1 maybe_update_lr lr: 0.004305
2022-07-09 00:00:03.432569: This epoch took 72.405941 s

2022-07-09 00:00:03.434904: 
epoch:  304
2022-07-09 00:01:10.724164: train loss : -0.8348
2022-07-09 00:01:15.192435: validation loss: -0.7834
2022-07-09 00:01:15.203660: Average global foreground Dice: [0.8165]
2022-07-09 00:01:15.218334: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:01:15.727988: Suus1 maybe_update_lr lr: 0.004285
2022-07-09 00:01:15.758300: This epoch took 72.321039 s

2022-07-09 00:01:15.791271: 
epoch:  305
2022-07-09 00:02:23.014476: train loss : -0.8367
2022-07-09 00:02:27.765552: validation loss: -0.7674
2022-07-09 00:02:27.784774: Average global foreground Dice: [0.8071]
2022-07-09 00:02:27.804247: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:02:28.354232: Suus1 maybe_update_lr lr: 0.004265
2022-07-09 00:02:28.375310: This epoch took 72.551030 s

2022-07-09 00:02:28.391608: 
epoch:  306
2022-07-09 00:03:35.613807: train loss : -0.8380
2022-07-09 00:03:40.215028: validation loss: -0.7659
2022-07-09 00:03:40.219687: Average global foreground Dice: [0.8039]
2022-07-09 00:03:40.224156: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:03:40.783745: Suus1 maybe_update_lr lr: 0.004245
2022-07-09 00:03:40.803390: This epoch took 72.391684 s

2022-07-09 00:03:40.809362: 
epoch:  307
2022-07-09 00:04:48.161071: train loss : -0.8234
2022-07-09 00:04:52.642627: validation loss: -0.7793
2022-07-09 00:04:52.660554: Average global foreground Dice: [0.8192]
2022-07-09 00:04:52.676253: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:04:53.304635: Suus1 maybe_update_lr lr: 0.004226
2022-07-09 00:04:53.306923: saving best epoch checkpoint...
2022-07-09 00:04:53.352858: saving checkpoint...
2022-07-09 00:04:54.259141: done, saving took 0.95 seconds
2022-07-09 00:04:54.274479: This epoch took 73.449950 s

2022-07-09 00:04:54.276551: 
epoch:  308
2022-07-09 00:06:01.538947: train loss : -0.8219
2022-07-09 00:06:05.947691: validation loss: -0.7484
2022-07-09 00:06:05.955438: Average global foreground Dice: [0.7973]
2022-07-09 00:06:05.967241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:06:06.502779: Suus1 maybe_update_lr lr: 0.004206
2022-07-09 00:06:06.505231: This epoch took 72.226697 s

2022-07-09 00:06:06.507398: 
epoch:  309
2022-07-09 00:07:14.078519: train loss : -0.8290
2022-07-09 00:07:18.526905: validation loss: -0.7772
2022-07-09 00:07:18.538718: Average global foreground Dice: [0.813]
2022-07-09 00:07:18.557842: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:07:19.087185: Suus1 maybe_update_lr lr: 0.004186
2022-07-09 00:07:19.115335: saving best epoch checkpoint...
2022-07-09 00:07:19.162243: saving checkpoint...
2022-07-09 00:07:20.319329: done, saving took 1.20 seconds
2022-07-09 00:07:20.336059: This epoch took 73.826610 s

2022-07-09 00:07:20.338285: 
epoch:  310
2022-07-09 00:08:27.638799: train loss : -0.8267
2022-07-09 00:08:32.309442: validation loss: -0.7606
2022-07-09 00:08:32.329552: Average global foreground Dice: [0.8007]
2022-07-09 00:08:32.343663: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:08:32.993422: Suus1 maybe_update_lr lr: 0.004166
2022-07-09 00:08:32.996236: This epoch took 72.655733 s

2022-07-09 00:08:32.998564: 
epoch:  311
2022-07-09 00:09:40.501400: train loss : -0.8278
2022-07-09 00:09:45.230718: validation loss: -0.7461
2022-07-09 00:09:45.243969: Average global foreground Dice: [0.7879]
2022-07-09 00:09:45.269513: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:09:45.797373: Suus1 maybe_update_lr lr: 0.004146
2022-07-09 00:09:45.799979: This epoch took 72.799267 s

2022-07-09 00:09:45.809908: 
epoch:  312
2022-07-09 00:10:53.006671: train loss : -0.8306
2022-07-09 00:10:57.483960: validation loss: -0.7721
2022-07-09 00:10:57.493284: Average global foreground Dice: [0.8058]
2022-07-09 00:10:57.521248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:10:58.066408: Suus1 maybe_update_lr lr: 0.004127
2022-07-09 00:10:58.068964: This epoch took 72.256992 s

2022-07-09 00:10:58.071058: 
epoch:  313
2022-07-09 00:12:05.351650: train loss : -0.8347
2022-07-09 00:12:09.769415: validation loss: -0.7726
2022-07-09 00:12:09.799650: Average global foreground Dice: [0.8081]
2022-07-09 00:12:09.804323: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:12:10.401302: Suus1 maybe_update_lr lr: 0.004107
2022-07-09 00:12:10.403741: This epoch took 72.330609 s

2022-07-09 00:12:10.406400: 
epoch:  314
2022-07-09 00:13:17.684160: train loss : -0.8395
2022-07-09 00:13:22.124415: validation loss: -0.7423
2022-07-09 00:13:22.132663: Average global foreground Dice: [0.7814]
2022-07-09 00:13:22.144119: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:13:22.752891: Suus1 maybe_update_lr lr: 0.004087
2022-07-09 00:13:22.755392: This epoch took 72.346972 s

2022-07-09 00:13:22.757387: 
epoch:  315
2022-07-09 00:14:30.195564: train loss : -0.8432
2022-07-09 00:14:34.598784: validation loss: -0.7404
2022-07-09 00:14:34.613920: Average global foreground Dice: [0.7935]
2022-07-09 00:14:34.626697: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:14:35.104591: Suus1 maybe_update_lr lr: 0.004067
2022-07-09 00:14:35.111264: This epoch took 72.351828 s

2022-07-09 00:14:35.113593: 
epoch:  316
2022-07-09 00:15:42.349149: train loss : -0.8393
2022-07-09 00:15:46.896360: validation loss: -0.7771
2022-07-09 00:15:46.914716: Average global foreground Dice: [0.8091]
2022-07-09 00:15:46.924888: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:15:47.481956: Suus1 maybe_update_lr lr: 0.004047
2022-07-09 00:15:47.493892: This epoch took 72.378035 s

2022-07-09 00:15:47.512277: 
epoch:  317
2022-07-09 00:16:54.779400: train loss : -0.8482
2022-07-09 00:16:59.229172: validation loss: -0.7642
2022-07-09 00:16:59.233249: Average global foreground Dice: [0.8026]
2022-07-09 00:16:59.258607: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:16:59.720199: Suus1 maybe_update_lr lr: 0.004027
2022-07-09 00:16:59.732677: This epoch took 72.206809 s

2022-07-09 00:16:59.740031: 
epoch:  318
2022-07-09 00:18:07.051850: train loss : -0.8294
2022-07-09 00:18:11.679102: validation loss: -0.7904
2022-07-09 00:18:11.691956: Average global foreground Dice: [0.8238]
2022-07-09 00:18:11.715742: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:18:12.366117: Suus1 maybe_update_lr lr: 0.004007
2022-07-09 00:18:12.368738: This epoch took 72.598462 s

2022-07-09 00:18:12.371110: 
epoch:  319
2022-07-09 00:19:19.623456: train loss : -0.8425
2022-07-09 00:19:23.970635: validation loss: -0.7776
2022-07-09 00:19:23.987694: Average global foreground Dice: [0.8102]
2022-07-09 00:19:23.990368: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:19:24.463712: Suus1 maybe_update_lr lr: 0.003987
2022-07-09 00:19:24.468016: This epoch took 72.094762 s

2022-07-09 00:19:24.470373: 
epoch:  320
2022-07-09 00:20:31.729573: train loss : -0.8440
2022-07-09 00:20:36.311369: validation loss: -0.7731
2022-07-09 00:20:36.315012: Average global foreground Dice: [0.8122]
2022-07-09 00:20:36.324206: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:20:36.994048: Suus1 maybe_update_lr lr: 0.003967
2022-07-09 00:20:37.004784: saving best epoch checkpoint...
2022-07-09 00:20:37.096925: saving checkpoint...
2022-07-09 00:20:38.093961: done, saving took 1.06 seconds
2022-07-09 00:20:38.110960: This epoch took 73.638329 s

2022-07-09 00:20:38.113426: 
epoch:  321
2022-07-09 00:21:45.482521: train loss : -0.8422
2022-07-09 00:21:49.970912: validation loss: -0.7635
2022-07-09 00:21:49.989773: Average global foreground Dice: [0.8032]
2022-07-09 00:21:50.007257: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:21:50.548551: Suus1 maybe_update_lr lr: 0.003947
2022-07-09 00:21:50.551228: This epoch took 72.435583 s

2022-07-09 00:21:50.553432: 
epoch:  322
2022-07-09 00:22:57.821102: train loss : -0.8460
2022-07-09 00:23:02.235264: validation loss: -0.7438
2022-07-09 00:23:02.263115: Average global foreground Dice: [0.794]
2022-07-09 00:23:02.284274: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:23:02.779184: Suus1 maybe_update_lr lr: 0.003927
2022-07-09 00:23:02.781646: This epoch took 72.226321 s

2022-07-09 00:23:02.783689: 
epoch:  323
2022-07-09 00:24:10.136820: train loss : -0.8324
2022-07-09 00:24:14.616628: validation loss: -0.7566
2022-07-09 00:24:14.631788: Average global foreground Dice: [0.7905]
2022-07-09 00:24:14.633791: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:24:15.183099: Suus1 maybe_update_lr lr: 0.003907
2022-07-09 00:24:15.185418: This epoch took 72.399658 s

2022-07-09 00:24:15.187606: 
epoch:  324
2022-07-09 00:25:22.553232: train loss : -0.8368
2022-07-09 00:25:27.012028: validation loss: -0.7761
2022-07-09 00:25:27.017576: Average global foreground Dice: [0.8102]
2022-07-09 00:25:27.019937: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:25:27.531441: Suus1 maybe_update_lr lr: 0.003887
2022-07-09 00:25:27.563474: This epoch took 72.372903 s

2022-07-09 00:25:27.585255: 
epoch:  325
2022-07-09 00:26:34.806631: train loss : -0.8418
2022-07-09 00:26:39.500268: validation loss: -0.7773
2022-07-09 00:26:39.524756: Average global foreground Dice: [0.8148]
2022-07-09 00:26:39.533830: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:26:40.157802: Suus1 maybe_update_lr lr: 0.003867
2022-07-09 00:26:40.161412: This epoch took 72.554026 s

2022-07-09 00:26:40.175773: 
epoch:  326
2022-07-09 00:27:47.557611: train loss : -0.8396
2022-07-09 00:27:51.921350: validation loss: -0.7575
2022-07-09 00:27:51.952771: Average global foreground Dice: [0.8009]
2022-07-09 00:27:51.971264: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:27:52.508283: Suus1 maybe_update_lr lr: 0.003847
2022-07-09 00:27:52.510872: This epoch took 72.315805 s

2022-07-09 00:27:52.513195: 
epoch:  327
2022-07-09 00:28:59.783811: train loss : -0.8424
2022-07-09 00:29:04.259980: validation loss: -0.7658
2022-07-09 00:29:04.276185: Average global foreground Dice: [0.8069]
2022-07-09 00:29:04.280819: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:29:04.765830: Suus1 maybe_update_lr lr: 0.003827
2022-07-09 00:29:04.770592: This epoch took 72.255080 s

2022-07-09 00:29:04.772743: 
epoch:  328
2022-07-09 00:30:12.134954: train loss : -0.8429
2022-07-09 00:30:16.689263: validation loss: -0.7551
2022-07-09 00:30:16.692765: Average global foreground Dice: [0.7907]
2022-07-09 00:30:16.697562: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:30:17.144945: Suus1 maybe_update_lr lr: 0.003807
2022-07-09 00:30:17.154948: This epoch took 72.368592 s

2022-07-09 00:30:17.165271: 
epoch:  329
2022-07-09 00:31:24.541331: train loss : -0.8402
2022-07-09 00:31:29.128612: validation loss: -0.7372
2022-07-09 00:31:29.131576: Average global foreground Dice: [0.779]
2022-07-09 00:31:29.134213: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:31:29.632962: Suus1 maybe_update_lr lr: 0.003787
2022-07-09 00:31:29.635504: This epoch took 72.467297 s

2022-07-09 00:31:29.637901: 
epoch:  330
2022-07-09 00:32:36.839571: train loss : -0.8357
2022-07-09 00:32:41.318884: validation loss: -0.7874
2022-07-09 00:32:41.356860: Average global foreground Dice: [0.8203]
2022-07-09 00:32:41.389282: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:32:41.988524: Suus1 maybe_update_lr lr: 0.003767
2022-07-09 00:32:42.012430: This epoch took 72.372308 s

2022-07-09 00:32:42.016633: 
epoch:  331
2022-07-09 00:33:49.305313: train loss : -0.8355
2022-07-09 00:33:53.717059: validation loss: -0.7773
2022-07-09 00:33:53.738716: Average global foreground Dice: [0.8108]
2022-07-09 00:33:53.744236: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:33:54.277277: Suus1 maybe_update_lr lr: 0.003747
2022-07-09 00:33:54.300469: This epoch took 72.275677 s

2022-07-09 00:33:54.341900: 
epoch:  332
2022-07-09 00:35:01.635211: train loss : -0.8273
2022-07-09 00:35:06.027717: validation loss: -0.7284
2022-07-09 00:35:06.038391: Average global foreground Dice: [0.7675]
2022-07-09 00:35:06.041688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:35:06.560419: Suus1 maybe_update_lr lr: 0.003727
2022-07-09 00:35:06.562833: This epoch took 72.207043 s

2022-07-09 00:35:06.565107: 
epoch:  333
2022-07-09 00:36:13.746290: train loss : -0.8350
2022-07-09 00:36:18.236032: validation loss: -0.7471
2022-07-09 00:36:18.260736: Average global foreground Dice: [0.7985]
2022-07-09 00:36:18.265984: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:36:18.762283: Suus1 maybe_update_lr lr: 0.003707
2022-07-09 00:36:18.764788: This epoch took 72.197470 s

2022-07-09 00:36:18.766838: 
epoch:  334
2022-07-09 00:37:26.040157: train loss : -0.8335
2022-07-09 00:37:30.503775: validation loss: -0.7679
2022-07-09 00:37:30.527541: Average global foreground Dice: [0.8047]
2022-07-09 00:37:30.562170: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:37:31.122213: Suus1 maybe_update_lr lr: 0.003687
2022-07-09 00:37:31.125206: This epoch took 72.356257 s

2022-07-09 00:37:31.129709: 
epoch:  335
2022-07-09 00:38:38.610293: train loss : -0.8322
2022-07-09 00:38:43.094932: validation loss: -0.7720
2022-07-09 00:38:43.100289: Average global foreground Dice: [0.8089]
2022-07-09 00:38:43.102834: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:38:43.690311: Suus1 maybe_update_lr lr: 0.003667
2022-07-09 00:38:43.692623: This epoch took 72.560648 s

2022-07-09 00:38:43.694799: 
epoch:  336
2022-07-09 00:39:50.902566: train loss : -0.8379
2022-07-09 00:39:55.333606: validation loss: -0.7600
2022-07-09 00:39:55.347868: Average global foreground Dice: [0.7976]
2022-07-09 00:39:55.350630: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:39:55.818600: Suus1 maybe_update_lr lr: 0.003647
2022-07-09 00:39:55.827096: This epoch took 72.130328 s

2022-07-09 00:39:55.831302: 
epoch:  337
2022-07-09 00:41:03.087605: train loss : -0.8422
2022-07-09 00:41:07.651865: validation loss: -0.7544
2022-07-09 00:41:07.656895: Average global foreground Dice: [0.7992]
2022-07-09 00:41:07.659209: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:41:08.139710: Suus1 maybe_update_lr lr: 0.003627
2022-07-09 00:41:08.172338: This epoch took 72.335070 s

2022-07-09 00:41:08.191245: 
epoch:  338
2022-07-09 00:42:15.395316: train loss : -0.8467
2022-07-09 00:42:19.853714: validation loss: -0.7748
2022-07-09 00:42:19.886771: Average global foreground Dice: [0.8125]
2022-07-09 00:42:19.890655: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:42:20.413128: Suus1 maybe_update_lr lr: 0.003606
2022-07-09 00:42:20.415551: This epoch took 72.217776 s

2022-07-09 00:42:20.417922: 
epoch:  339
2022-07-09 00:43:27.741286: train loss : -0.8387
2022-07-09 00:43:32.139645: validation loss: -0.7637
2022-07-09 00:43:32.148930: Average global foreground Dice: [0.799]
2022-07-09 00:43:32.160592: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:43:32.620131: Suus1 maybe_update_lr lr: 0.003586
2022-07-09 00:43:32.622606: This epoch took 72.202550 s

2022-07-09 00:43:32.625238: 
epoch:  340
2022-07-09 00:44:39.876454: train loss : -0.8376
2022-07-09 00:44:44.341574: validation loss: -0.7271
2022-07-09 00:44:44.354697: Average global foreground Dice: [0.7717]
2022-07-09 00:44:44.384687: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:44:44.972997: Suus1 maybe_update_lr lr: 0.003566
2022-07-09 00:44:44.975613: This epoch took 72.348193 s

2022-07-09 00:44:45.002266: 
epoch:  341
2022-07-09 00:45:52.395062: train loss : -0.8363
2022-07-09 00:45:56.775569: validation loss: -0.7432
2022-07-09 00:45:56.780433: Average global foreground Dice: [0.788]
2022-07-09 00:45:56.783783: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:45:57.366244: Suus1 maybe_update_lr lr: 0.003546
2022-07-09 00:45:57.369725: This epoch took 72.364189 s

2022-07-09 00:45:57.372727: 
epoch:  342
2022-07-09 00:47:04.767984: train loss : -0.8261
2022-07-09 00:47:09.265524: validation loss: -0.7514
2022-07-09 00:47:09.284756: Average global foreground Dice: [0.791]
2022-07-09 00:47:09.305921: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:47:09.824984: Suus1 maybe_update_lr lr: 0.003526
2022-07-09 00:47:09.827603: This epoch took 72.447126 s

2022-07-09 00:47:09.830105: 
epoch:  343
2022-07-09 00:48:17.103100: train loss : -0.8264
2022-07-09 00:48:21.639849: validation loss: -0.7848
2022-07-09 00:48:21.646351: Average global foreground Dice: [0.8181]
2022-07-09 00:48:21.683290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:48:22.188707: Suus1 maybe_update_lr lr: 0.003505
2022-07-09 00:48:22.196191: This epoch took 72.352001 s

2022-07-09 00:48:22.198583: 
epoch:  344
2022-07-09 00:49:29.490561: train loss : -0.8396
2022-07-09 00:49:34.064401: validation loss: -0.7646
2022-07-09 00:49:34.088420: Average global foreground Dice: [0.8068]
2022-07-09 00:49:34.108958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:49:34.714817: Suus1 maybe_update_lr lr: 0.003485
2022-07-09 00:49:34.717444: This epoch took 72.516675 s

2022-07-09 00:49:34.729506: 
epoch:  345
2022-07-09 00:50:42.045123: train loss : -0.8439
2022-07-09 00:50:46.623574: validation loss: -0.7370
2022-07-09 00:50:46.626779: Average global foreground Dice: [0.7734]
2022-07-09 00:50:46.629038: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:50:47.130407: Suus1 maybe_update_lr lr: 0.003465
2022-07-09 00:50:47.133001: This epoch took 72.383391 s

2022-07-09 00:50:47.135312: 
epoch:  346
2022-07-09 00:51:54.460737: train loss : -0.8501
2022-07-09 00:51:58.958747: validation loss: -0.7826
2022-07-09 00:51:58.993638: Average global foreground Dice: [0.8112]
2022-07-09 00:51:59.023836: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:51:59.563365: Suus1 maybe_update_lr lr: 0.003445
2022-07-09 00:51:59.565461: This epoch took 72.427866 s

2022-07-09 00:51:59.567349: 
epoch:  347
2022-07-09 00:53:06.748933: train loss : -0.8456
2022-07-09 00:53:11.275791: validation loss: -0.7539
2022-07-09 00:53:11.279716: Average global foreground Dice: [0.7941]
2022-07-09 00:53:11.282065: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:53:11.771614: Suus1 maybe_update_lr lr: 0.003424
2022-07-09 00:53:11.788391: This epoch took 72.219064 s

2022-07-09 00:53:11.790791: 
epoch:  348
2022-07-09 00:54:19.022440: train loss : -0.8362
2022-07-09 00:54:24.035927: validation loss: -0.7626
2022-07-09 00:54:24.049270: Average global foreground Dice: [0.7979]
2022-07-09 00:54:24.070414: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:54:24.843786: Suus1 maybe_update_lr lr: 0.003404
2022-07-09 00:54:24.848653: This epoch took 73.038336 s

2022-07-09 00:54:24.851275: 
epoch:  349
2022-07-09 00:55:32.215564: train loss : -0.8355
2022-07-09 00:55:36.703553: validation loss: -0.7707
2022-07-09 00:55:36.738569: Average global foreground Dice: [0.8079]
2022-07-09 00:55:36.770316: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:55:37.284146: Suus1 maybe_update_lr lr: 0.003384
2022-07-09 00:55:37.314031: saving scheduled checkpoint file...
2022-07-09 00:55:37.384998: saving checkpoint...
2022-07-09 00:55:38.450619: done, saving took 1.12 seconds
2022-07-09 00:55:38.467506: done
2022-07-09 00:55:38.469878: This epoch took 73.616425 s

2022-07-09 00:55:38.472186: 
epoch:  350
2022-07-09 00:56:45.774699: train loss : -0.8486
2022-07-09 00:56:50.256299: validation loss: -0.7485
2022-07-09 00:56:50.291047: Average global foreground Dice: [0.7865]
2022-07-09 00:56:50.323268: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:56:50.898574: Suus1 maybe_update_lr lr: 0.003364
2022-07-09 00:56:50.919307: This epoch took 72.444711 s

2022-07-09 00:56:50.952260: 
epoch:  351
2022-07-09 00:57:58.435632: train loss : -0.8479
2022-07-09 00:58:02.928571: validation loss: -0.7604
2022-07-09 00:58:02.946265: Average global foreground Dice: [0.8019]
2022-07-09 00:58:02.948357: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:58:03.424600: Suus1 maybe_update_lr lr: 0.003343
2022-07-09 00:58:03.427156: This epoch took 72.464113 s

2022-07-09 00:58:03.429316: 
epoch:  352
2022-07-09 00:59:10.652548: train loss : -0.8488
2022-07-09 00:59:15.036432: validation loss: -0.7615
2022-07-09 00:59:15.054675: Average global foreground Dice: [0.8016]
2022-07-09 00:59:15.068407: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 00:59:15.618232: Suus1 maybe_update_lr lr: 0.003323
2022-07-09 00:59:15.636263: This epoch took 72.204953 s

2022-07-09 00:59:15.638763: 
epoch:  353
2022-07-09 01:00:22.889756: train loss : -0.8428
2022-07-09 01:00:27.434371: validation loss: -0.7825
2022-07-09 01:00:27.455485: Average global foreground Dice: [0.8187]
2022-07-09 01:00:27.487255: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:00:28.018792: Suus1 maybe_update_lr lr: 0.003303
2022-07-09 01:00:28.020991: This epoch took 72.380118 s

2022-07-09 01:00:28.023003: 
epoch:  354
2022-07-09 01:01:35.293725: train loss : -0.8391
2022-07-09 01:01:39.761756: validation loss: -0.7534
2022-07-09 01:01:39.767109: Average global foreground Dice: [0.7933]
2022-07-09 01:01:39.775569: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:01:40.321780: Suus1 maybe_update_lr lr: 0.003282
2022-07-09 01:01:40.324164: This epoch took 72.299248 s

2022-07-09 01:01:40.326182: 
epoch:  355
2022-07-09 01:02:47.569158: train loss : -0.8415
2022-07-09 01:02:52.196939: validation loss: -0.7645
2022-07-09 01:02:52.245701: Average global foreground Dice: [0.8027]
2022-07-09 01:02:52.277295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:02:52.856453: Suus1 maybe_update_lr lr: 0.003262
2022-07-09 01:02:52.886328: This epoch took 72.554821 s

2022-07-09 01:02:52.896001: 
epoch:  356
2022-07-09 01:04:00.182752: train loss : -0.8434
2022-07-09 01:04:04.698104: validation loss: -0.7675
2022-07-09 01:04:04.700937: Average global foreground Dice: [0.8042]
2022-07-09 01:04:04.703242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:04:05.315665: Suus1 maybe_update_lr lr: 0.003241
2022-07-09 01:04:05.318111: This epoch took 72.419830 s

2022-07-09 01:04:05.320304: 
epoch:  357
2022-07-09 01:05:12.617475: train loss : -0.8499
2022-07-09 01:05:17.160031: validation loss: -0.7688
2022-07-09 01:05:17.164062: Average global foreground Dice: [0.8092]
2022-07-09 01:05:17.183458: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:05:17.847772: Suus1 maybe_update_lr lr: 0.003221
2022-07-09 01:05:17.850232: This epoch took 72.526318 s

2022-07-09 01:05:17.852386: 
epoch:  358
2022-07-09 01:06:25.093458: train loss : -0.8456
2022-07-09 01:06:29.482188: validation loss: -0.7869
2022-07-09 01:06:29.492723: Average global foreground Dice: [0.8144]
2022-07-09 01:06:29.508784: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:06:30.079366: Suus1 maybe_update_lr lr: 0.003201
2022-07-09 01:06:30.081877: This epoch took 72.227432 s

2022-07-09 01:06:30.084480: 
epoch:  359
2022-07-09 01:07:37.307922: train loss : -0.8499
2022-07-09 01:07:41.683738: validation loss: -0.7792
2022-07-09 01:07:41.709132: Average global foreground Dice: [0.8119]
2022-07-09 01:07:41.738281: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:07:42.272416: Suus1 maybe_update_lr lr: 0.00318
2022-07-09 01:07:42.274947: This epoch took 72.188321 s

2022-07-09 01:07:42.277231: 
epoch:  360
2022-07-09 01:08:49.559383: train loss : -0.8519
2022-07-09 01:08:53.893780: validation loss: -0.7680
2022-07-09 01:08:53.916870: Average global foreground Dice: [0.8052]
2022-07-09 01:08:53.921650: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:08:54.449121: Suus1 maybe_update_lr lr: 0.00316
2022-07-09 01:08:54.451780: This epoch took 72.172527 s

2022-07-09 01:08:54.453884: 
epoch:  361
2022-07-09 01:10:01.797100: train loss : -0.8402
2022-07-09 01:10:06.206834: validation loss: -0.7488
2022-07-09 01:10:06.217779: Average global foreground Dice: [0.7896]
2022-07-09 01:10:06.220560: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:10:06.703609: Suus1 maybe_update_lr lr: 0.003139
2022-07-09 01:10:06.706051: This epoch took 72.249936 s

2022-07-09 01:10:06.708275: 
epoch:  362
2022-07-09 01:11:13.975103: train loss : -0.8496
2022-07-09 01:11:18.338757: validation loss: -0.7690
2022-07-09 01:11:18.355074: Average global foreground Dice: [0.8066]
2022-07-09 01:11:18.377819: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:11:18.855750: Suus1 maybe_update_lr lr: 0.003119
2022-07-09 01:11:18.858189: This epoch took 72.147754 s

2022-07-09 01:11:18.860422: 
epoch:  363
2022-07-09 01:12:26.078884: train loss : -0.8493
2022-07-09 01:12:30.565136: validation loss: -0.7679
2022-07-09 01:12:30.573901: Average global foreground Dice: [0.8041]
2022-07-09 01:12:30.577713: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:12:31.178905: Suus1 maybe_update_lr lr: 0.003098
2022-07-09 01:12:31.181478: This epoch took 72.318857 s

2022-07-09 01:12:31.183579: 
epoch:  364
2022-07-09 01:13:38.460923: train loss : -0.8543
2022-07-09 01:13:42.988110: validation loss: -0.7546
2022-07-09 01:13:42.998335: Average global foreground Dice: [0.7965]
2022-07-09 01:13:43.000618: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:13:43.474456: Suus1 maybe_update_lr lr: 0.003078
2022-07-09 01:13:43.482983: This epoch took 72.297199 s

2022-07-09 01:13:43.486865: 
epoch:  365
2022-07-09 01:14:50.907079: train loss : -0.8565
2022-07-09 01:14:55.464813: validation loss: -0.7505
2022-07-09 01:14:55.495215: Average global foreground Dice: [0.7928]
2022-07-09 01:14:55.517981: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:14:56.075032: Suus1 maybe_update_lr lr: 0.003057
2022-07-09 01:14:56.077510: This epoch took 72.584336 s

2022-07-09 01:14:56.079778: 
epoch:  366
2022-07-09 01:16:03.415037: train loss : -0.8607
2022-07-09 01:16:07.700077: validation loss: -0.7782
2022-07-09 01:16:07.709664: Average global foreground Dice: [0.8123]
2022-07-09 01:16:07.712838: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:16:08.231900: Suus1 maybe_update_lr lr: 0.003037
2022-07-09 01:16:08.256978: This epoch took 72.174961 s

2022-07-09 01:16:08.259507: 
epoch:  367
2022-07-09 01:17:15.563550: train loss : -0.8596
2022-07-09 01:17:20.133883: validation loss: -0.7745
2022-07-09 01:17:20.164709: Average global foreground Dice: [0.8072]
2022-07-09 01:17:20.197280: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:17:20.705237: Suus1 maybe_update_lr lr: 0.003016
2022-07-09 01:17:20.707682: This epoch took 72.445973 s

2022-07-09 01:17:20.709880: 
epoch:  368
2022-07-09 01:18:28.049484: train loss : -0.8593
2022-07-09 01:18:32.562744: validation loss: -0.7601
2022-07-09 01:18:32.573797: Average global foreground Dice: [0.8017]
2022-07-09 01:18:32.595240: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:18:33.151101: Suus1 maybe_update_lr lr: 0.002996
2022-07-09 01:18:33.153580: This epoch took 72.441513 s

2022-07-09 01:18:33.155899: 
epoch:  369
2022-07-09 01:19:40.404755: train loss : -0.8498
2022-07-09 01:19:44.965114: validation loss: -0.7479
2022-07-09 01:19:44.991097: Average global foreground Dice: [0.7946]
2022-07-09 01:19:45.010747: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:19:45.518107: Suus1 maybe_update_lr lr: 0.002975
2022-07-09 01:19:45.520464: This epoch took 72.362185 s

2022-07-09 01:19:45.522680: 
epoch:  370
2022-07-09 01:20:52.719311: train loss : -0.8562
2022-07-09 01:20:57.157339: validation loss: -0.7685
2022-07-09 01:20:57.196761: Average global foreground Dice: [0.8032]
2022-07-09 01:20:57.209265: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:20:57.761719: Suus1 maybe_update_lr lr: 0.002954
2022-07-09 01:20:57.764269: This epoch took 72.239276 s

2022-07-09 01:20:57.766626: 
epoch:  371
2022-07-09 01:22:05.184406: train loss : -0.8541
2022-07-09 01:22:09.774228: validation loss: -0.7823
2022-07-09 01:22:09.777173: Average global foreground Dice: [0.817]
2022-07-09 01:22:09.784405: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:22:10.282601: Suus1 maybe_update_lr lr: 0.002934
2022-07-09 01:22:10.285793: This epoch took 72.517023 s

2022-07-09 01:22:10.290761: 
epoch:  372
2022-07-09 01:23:17.574328: train loss : -0.8604
2022-07-09 01:23:21.995291: validation loss: -0.7714
2022-07-09 01:23:22.003119: Average global foreground Dice: [0.8103]
2022-07-09 01:23:22.006077: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:23:22.583605: Suus1 maybe_update_lr lr: 0.002913
2022-07-09 01:23:22.585964: This epoch took 72.285709 s

2022-07-09 01:23:22.588490: 
epoch:  373
2022-07-09 01:24:29.964529: train loss : -0.8562
2022-07-09 01:24:34.305902: validation loss: -0.7657
2022-07-09 01:24:34.309276: Average global foreground Dice: [0.8046]
2022-07-09 01:24:34.311484: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:24:34.766799: Suus1 maybe_update_lr lr: 0.002892
2022-07-09 01:24:34.768750: This epoch took 72.178252 s

2022-07-09 01:24:34.771525: 
epoch:  374
2022-07-09 01:25:42.051259: train loss : -0.8576
2022-07-09 01:25:46.458982: validation loss: -0.7757
2022-07-09 01:25:46.466661: Average global foreground Dice: [0.8092]
2022-07-09 01:25:46.468995: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:25:46.968146: Suus1 maybe_update_lr lr: 0.002872
2022-07-09 01:25:46.971520: This epoch took 72.197954 s

2022-07-09 01:25:46.973614: 
epoch:  375
2022-07-09 01:26:54.194475: train loss : -0.8637
2022-07-09 01:26:58.607938: validation loss: -0.7807
2022-07-09 01:26:58.619480: Average global foreground Dice: [0.8164]
2022-07-09 01:26:58.625242: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:26:59.208824: Suus1 maybe_update_lr lr: 0.002851
2022-07-09 01:26:59.212321: saving best epoch checkpoint...
2022-07-09 01:26:59.260240: saving checkpoint...
2022-07-09 01:27:00.204150: done, saving took 0.99 seconds
2022-07-09 01:27:00.224175: This epoch took 73.248287 s

2022-07-09 01:27:00.226656: 
epoch:  376
2022-07-09 01:28:07.370855: train loss : -0.8665
2022-07-09 01:28:12.140276: validation loss: -0.7730
2022-07-09 01:28:12.145790: Average global foreground Dice: [0.8196]
2022-07-09 01:28:12.149295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:28:12.692524: Suus1 maybe_update_lr lr: 0.00283
2022-07-09 01:28:12.695112: saving best epoch checkpoint...
2022-07-09 01:28:12.746995: saving checkpoint...
2022-07-09 01:28:13.867664: done, saving took 1.17 seconds
2022-07-09 01:28:13.884201: This epoch took 73.655247 s

2022-07-09 01:28:13.886585: 
epoch:  377
2022-07-09 01:29:21.131830: train loss : -0.8606
2022-07-09 01:29:25.600877: validation loss: -0.7571
2022-07-09 01:29:25.626598: Average global foreground Dice: [0.7964]
2022-07-09 01:29:25.647236: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:29:26.178466: Suus1 maybe_update_lr lr: 0.00281
2022-07-09 01:29:26.180935: This epoch took 72.291611 s

2022-07-09 01:29:26.183115: 
epoch:  378
2022-07-09 01:30:33.586383: train loss : -0.8619
2022-07-09 01:30:38.120966: validation loss: -0.7723
2022-07-09 01:30:38.124361: Average global foreground Dice: [0.8083]
2022-07-09 01:30:38.126901: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:30:38.601291: Suus1 maybe_update_lr lr: 0.002789
2022-07-09 01:30:38.616684: This epoch took 72.431489 s

2022-07-09 01:30:38.626152: 
epoch:  379
2022-07-09 01:31:45.967151: train loss : -0.8605
2022-07-09 01:31:50.390611: validation loss: -0.7504
2022-07-09 01:31:50.413642: Average global foreground Dice: [0.7946]
2022-07-09 01:31:50.421140: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:31:50.983737: Suus1 maybe_update_lr lr: 0.002768
2022-07-09 01:31:50.986252: This epoch took 72.344433 s

2022-07-09 01:31:50.988482: 
epoch:  380
2022-07-09 01:32:58.286826: train loss : -0.8534
2022-07-09 01:33:02.667618: validation loss: -0.7654
2022-07-09 01:33:02.671079: Average global foreground Dice: [0.8047]
2022-07-09 01:33:02.673548: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:33:03.218146: Suus1 maybe_update_lr lr: 0.002747
2022-07-09 01:33:03.220915: This epoch took 72.230417 s

2022-07-09 01:33:03.222950: 
epoch:  381
2022-07-09 01:34:10.434437: train loss : -0.8590
2022-07-09 01:34:14.949236: validation loss: -0.7491
2022-07-09 01:34:14.954266: Average global foreground Dice: [0.7885]
2022-07-09 01:34:14.958709: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:34:15.417007: Suus1 maybe_update_lr lr: 0.002727
2022-07-09 01:34:15.421332: This epoch took 72.196188 s

2022-07-09 01:34:15.423614: 
epoch:  382
2022-07-09 01:35:22.834499: train loss : -0.8629
2022-07-09 01:35:27.319944: validation loss: -0.7608
2022-07-09 01:35:27.336998: Average global foreground Dice: [0.7976]
2022-07-09 01:35:27.357367: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:35:27.884120: Suus1 maybe_update_lr lr: 0.002706
2022-07-09 01:35:27.889201: This epoch took 72.461862 s

2022-07-09 01:35:27.892478: 
epoch:  383
2022-07-09 01:36:35.303269: train loss : -0.8597
2022-07-09 01:36:39.967662: validation loss: -0.7694
2022-07-09 01:36:39.995723: Average global foreground Dice: [0.8064]
2022-07-09 01:36:40.020262: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:36:40.737295: Suus1 maybe_update_lr lr: 0.002685
2022-07-09 01:36:40.740223: This epoch took 72.837573 s

2022-07-09 01:36:40.742475: 
epoch:  384
2022-07-09 01:37:48.027239: train loss : -0.8572
2022-07-09 01:37:52.721004: validation loss: -0.7736
2022-07-09 01:37:52.736687: Average global foreground Dice: [0.8172]
2022-07-09 01:37:52.740324: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:37:53.309208: Suus1 maybe_update_lr lr: 0.002664
2022-07-09 01:37:53.323386: This epoch took 72.578880 s

2022-07-09 01:37:53.327659: 
epoch:  385
2022-07-09 01:39:00.662489: train loss : -0.8617
2022-07-09 01:39:05.072569: validation loss: -0.7719
2022-07-09 01:39:05.101794: Average global foreground Dice: [0.8158]
2022-07-09 01:39:05.132698: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:39:05.708294: Suus1 maybe_update_lr lr: 0.002643
2022-07-09 01:39:05.711062: This epoch took 72.367465 s

2022-07-09 01:39:05.723333: 
epoch:  386
2022-07-09 01:40:13.022703: train loss : -0.8634
2022-07-09 01:40:17.545466: validation loss: -0.7587
2022-07-09 01:40:17.578054: Average global foreground Dice: [0.793]
2022-07-09 01:40:17.599412: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:40:18.168406: Suus1 maybe_update_lr lr: 0.002622
2022-07-09 01:40:18.170875: This epoch took 72.410550 s

2022-07-09 01:40:18.173098: 
epoch:  387
2022-07-09 01:41:25.493870: train loss : -0.8612
2022-07-09 01:41:30.043558: validation loss: -0.7801
2022-07-09 01:41:30.049945: Average global foreground Dice: [0.8192]
2022-07-09 01:41:30.052194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:41:30.551421: Suus1 maybe_update_lr lr: 0.002601
2022-07-09 01:41:30.608207: This epoch took 72.433061 s

2022-07-09 01:41:30.614252: 
epoch:  388
2022-07-09 01:42:37.867844: train loss : -0.8653
2022-07-09 01:42:42.268572: validation loss: -0.7679
2022-07-09 01:42:42.301111: Average global foreground Dice: [0.8086]
2022-07-09 01:42:42.315996: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:42:42.843072: Suus1 maybe_update_lr lr: 0.002581
2022-07-09 01:42:42.845610: This epoch took 72.213259 s

2022-07-09 01:42:42.848424: 
epoch:  389
2022-07-09 01:43:50.130817: train loss : -0.8658
2022-07-09 01:43:54.670923: validation loss: -0.7692
2022-07-09 01:43:54.674656: Average global foreground Dice: [0.8136]
2022-07-09 01:43:54.687488: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:43:55.303873: Suus1 maybe_update_lr lr: 0.00256
2022-07-09 01:43:55.307455: This epoch took 72.455896 s

2022-07-09 01:43:55.309898: 
epoch:  390
2022-07-09 01:45:02.648272: train loss : -0.8617
2022-07-09 01:45:07.031622: validation loss: -0.7560
2022-07-09 01:45:07.061934: Average global foreground Dice: [0.7958]
2022-07-09 01:45:07.069714: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:45:07.540022: Suus1 maybe_update_lr lr: 0.002539
2022-07-09 01:45:07.542735: This epoch took 72.230350 s

2022-07-09 01:45:07.545097: 
epoch:  391
2022-07-09 01:46:14.801687: train loss : -0.8613
2022-07-09 01:46:19.707089: validation loss: -0.7620
2022-07-09 01:46:19.731682: Average global foreground Dice: [0.8007]
2022-07-09 01:46:19.737384: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:46:20.233604: Suus1 maybe_update_lr lr: 0.002518
2022-07-09 01:46:20.236102: This epoch took 72.688721 s

2022-07-09 01:46:20.238188: 
epoch:  392
2022-07-09 01:47:27.541102: train loss : -0.8640
2022-07-09 01:47:32.187416: validation loss: -0.7771
2022-07-09 01:47:32.196133: Average global foreground Dice: [0.8181]
2022-07-09 01:47:32.210124: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:47:32.683618: Suus1 maybe_update_lr lr: 0.002497
2022-07-09 01:47:32.699300: This epoch took 72.458967 s

2022-07-09 01:47:32.724249: 
epoch:  393
2022-07-09 01:48:39.968958: train loss : -0.8623
2022-07-09 01:48:44.509687: validation loss: -0.7789
2022-07-09 01:48:44.531155: Average global foreground Dice: [0.8166]
2022-07-09 01:48:44.545214: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:48:45.098284: Suus1 maybe_update_lr lr: 0.002476
2022-07-09 01:48:45.168282: saving best epoch checkpoint...
2022-07-09 01:48:45.235978: saving checkpoint...
2022-07-09 01:48:46.370388: done, saving took 1.19 seconds
2022-07-09 01:48:46.386981: This epoch took 73.656189 s

2022-07-09 01:48:46.391250: 
epoch:  394
2022-07-09 01:49:53.708584: train loss : -0.8551
2022-07-09 01:49:58.409960: validation loss: -0.7501
2022-07-09 01:49:58.417717: Average global foreground Dice: [0.7974]
2022-07-09 01:49:58.425979: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:49:58.951715: Suus1 maybe_update_lr lr: 0.002455
2022-07-09 01:49:58.954285: This epoch took 72.544399 s

2022-07-09 01:49:58.956519: 
epoch:  395
2022-07-09 01:51:06.252556: train loss : -0.8628
2022-07-09 01:51:10.698577: validation loss: -0.7770
2022-07-09 01:51:10.707515: Average global foreground Dice: [0.822]
2022-07-09 01:51:10.719366: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:51:11.261436: Suus1 maybe_update_lr lr: 0.002434
2022-07-09 01:51:11.264201: saving best epoch checkpoint...
2022-07-09 01:51:11.306363: saving checkpoint...
2022-07-09 01:51:12.361516: done, saving took 1.10 seconds
2022-07-09 01:51:12.376033: This epoch took 73.417278 s

2022-07-09 01:51:12.378278: 
epoch:  396
2022-07-09 01:52:19.694755: train loss : -0.8680
2022-07-09 01:52:24.351368: validation loss: -0.7910
2022-07-09 01:52:24.355541: Average global foreground Dice: [0.8299]
2022-07-09 01:52:24.377428: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:52:24.896264: Suus1 maybe_update_lr lr: 0.002413
2022-07-09 01:52:24.917286: saving best epoch checkpoint...
2022-07-09 01:52:25.007344: saving checkpoint...
2022-07-09 01:52:26.039006: done, saving took 1.10 seconds
2022-07-09 01:52:26.054496: This epoch took 73.674078 s

2022-07-09 01:52:26.056790: 
epoch:  397
2022-07-09 01:53:33.271542: train loss : -0.8655
2022-07-09 01:53:37.824692: validation loss: -0.7476
2022-07-09 01:53:37.865776: Average global foreground Dice: [0.7913]
2022-07-09 01:53:37.881276: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:53:38.500269: Suus1 maybe_update_lr lr: 0.002391
2022-07-09 01:53:38.502550: This epoch took 72.443336 s

2022-07-09 01:53:38.504736: 
epoch:  398
2022-07-09 01:54:45.739503: train loss : -0.8629
2022-07-09 01:54:50.330866: validation loss: -0.7532
2022-07-09 01:54:50.367942: Average global foreground Dice: [0.8009]
2022-07-09 01:54:50.379704: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:54:50.875460: Suus1 maybe_update_lr lr: 0.00237
2022-07-09 01:54:50.878133: This epoch took 72.371291 s

2022-07-09 01:54:50.880566: 
epoch:  399
2022-07-09 01:55:58.091659: train loss : -0.8666
2022-07-09 01:56:02.621125: validation loss: -0.7876
2022-07-09 01:56:02.682151: Average global foreground Dice: [0.8206]
2022-07-09 01:56:02.695721: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:56:03.384893: Suus1 maybe_update_lr lr: 0.002349
2022-07-09 01:56:03.387582: saving scheduled checkpoint file...
2022-07-09 01:56:03.446890: saving checkpoint...
2022-07-09 01:56:04.528606: done, saving took 1.13 seconds
2022-07-09 01:56:04.544436: done
2022-07-09 01:56:04.546696: This epoch took 73.663802 s

2022-07-09 01:56:04.548659: 
epoch:  400
2022-07-09 01:57:11.846203: train loss : -0.8702
2022-07-09 01:57:16.217497: validation loss: -0.7748
2022-07-09 01:57:16.222029: Average global foreground Dice: [0.8126]
2022-07-09 01:57:16.224358: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:57:16.786931: Suus1 maybe_update_lr lr: 0.002328
2022-07-09 01:57:16.789446: This epoch took 72.238777 s

2022-07-09 01:57:16.791644: 
epoch:  401
2022-07-09 01:58:24.166937: train loss : -0.8697
2022-07-09 01:58:28.641206: validation loss: -0.7753
2022-07-09 01:58:28.672695: Average global foreground Dice: [0.8108]
2022-07-09 01:58:28.709768: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:58:29.323612: Suus1 maybe_update_lr lr: 0.002307
2022-07-09 01:58:29.326038: This epoch took 72.532325 s

2022-07-09 01:58:29.328167: 
epoch:  402
2022-07-09 01:59:36.786927: train loss : -0.8555
2022-07-09 01:59:41.335919: validation loss: -0.7472
2022-07-09 01:59:41.353787: Average global foreground Dice: [0.7922]
2022-07-09 01:59:41.367746: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 01:59:41.846722: Suus1 maybe_update_lr lr: 0.002286
2022-07-09 01:59:41.849647: This epoch took 72.519182 s

2022-07-09 01:59:41.851872: 
epoch:  403
2022-07-09 02:00:49.156813: train loss : -0.8573
2022-07-09 02:00:53.560393: validation loss: -0.7703
2022-07-09 02:00:53.583908: Average global foreground Dice: [0.8113]
2022-07-09 02:00:53.589122: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:00:54.113423: Suus1 maybe_update_lr lr: 0.002264
2022-07-09 02:00:54.124282: This epoch took 72.270261 s

2022-07-09 02:00:54.135735: 
epoch:  404
2022-07-09 02:02:01.393362: train loss : -0.8610
2022-07-09 02:02:05.901029: validation loss: -0.7718
2022-07-09 02:02:05.934819: Average global foreground Dice: [0.8116]
2022-07-09 02:02:05.943917: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:02:06.438972: Suus1 maybe_update_lr lr: 0.002243
2022-07-09 02:02:06.441345: This epoch took 72.303399 s

2022-07-09 02:02:06.443454: 
epoch:  405
2022-07-09 02:03:13.653155: train loss : -0.8635
2022-07-09 02:03:18.094291: validation loss: -0.7555
2022-07-09 02:03:18.108754: Average global foreground Dice: [0.7933]
2022-07-09 02:03:18.115377: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:03:18.659791: Suus1 maybe_update_lr lr: 0.002222
2022-07-09 02:03:18.679334: This epoch took 72.233819 s

2022-07-09 02:03:18.692064: 
epoch:  406
2022-07-09 02:04:26.086242: train loss : -0.8669
2022-07-09 02:04:30.526598: validation loss: -0.7719
2022-07-09 02:04:30.535571: Average global foreground Dice: [0.8094]
2022-07-09 02:04:30.537907: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:04:30.996439: Suus1 maybe_update_lr lr: 0.002201
2022-07-09 02:04:30.999261: This epoch took 72.304981 s

2022-07-09 02:04:31.001526: 
epoch:  407
2022-07-09 02:05:38.249238: train loss : -0.8695
2022-07-09 02:05:42.852062: validation loss: -0.7763
2022-07-09 02:05:42.892916: Average global foreground Dice: [0.8159]
2022-07-09 02:05:42.912603: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:05:43.458040: Suus1 maybe_update_lr lr: 0.002179
2022-07-09 02:05:43.460890: This epoch took 72.457089 s

2022-07-09 02:05:43.463248: 
epoch:  408
2022-07-09 02:06:50.819429: train loss : -0.8682
2022-07-09 02:06:55.256614: validation loss: -0.7746
2022-07-09 02:06:55.272455: Average global foreground Dice: [0.8089]
2022-07-09 02:06:55.275464: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:06:55.788657: Suus1 maybe_update_lr lr: 0.002158
2022-07-09 02:06:55.791416: This epoch took 72.326022 s

2022-07-09 02:06:55.793687: 
epoch:  409
2022-07-09 02:08:03.104572: train loss : -0.8655
2022-07-09 02:08:07.610676: validation loss: -0.7627
2022-07-09 02:08:07.614292: Average global foreground Dice: [0.8088]
2022-07-09 02:08:07.616851: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:08:08.157713: Suus1 maybe_update_lr lr: 0.002137
2022-07-09 02:08:08.164960: This epoch took 72.369260 s

2022-07-09 02:08:08.167076: 
epoch:  410
2022-07-09 02:09:15.489290: train loss : -0.8654
2022-07-09 02:09:20.073826: validation loss: -0.7659
2022-07-09 02:09:20.109296: Average global foreground Dice: [0.8008]
2022-07-09 02:09:20.137791: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:09:20.832820: Suus1 maybe_update_lr lr: 0.002115
2022-07-09 02:09:20.845406: This epoch took 72.676167 s

2022-07-09 02:09:20.853184: 
epoch:  411
2022-07-09 02:10:28.058533: train loss : -0.8628
2022-07-09 02:10:32.525805: validation loss: -0.7726
2022-07-09 02:10:32.538506: Average global foreground Dice: [0.8098]
2022-07-09 02:10:32.551272: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:10:33.028957: Suus1 maybe_update_lr lr: 0.002094
2022-07-09 02:10:33.031461: This epoch took 72.167023 s

2022-07-09 02:10:33.033702: 
epoch:  412
2022-07-09 02:11:40.340580: train loss : -0.8628
2022-07-09 02:11:44.913851: validation loss: -0.7700
2022-07-09 02:11:44.937635: Average global foreground Dice: [0.8071]
2022-07-09 02:11:44.961852: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:11:45.460500: Suus1 maybe_update_lr lr: 0.002072
2022-07-09 02:11:45.462810: This epoch took 72.426584 s

2022-07-09 02:11:45.465187: 
epoch:  413
2022-07-09 02:12:52.710891: train loss : -0.8663
2022-07-09 02:12:57.085679: validation loss: -0.7854
2022-07-09 02:12:57.092678: Average global foreground Dice: [0.8175]
2022-07-09 02:12:57.095584: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:12:57.642062: Suus1 maybe_update_lr lr: 0.002051
2022-07-09 02:12:57.654467: This epoch took 72.187025 s

2022-07-09 02:12:57.677892: 
epoch:  414
2022-07-09 02:14:04.945195: train loss : -0.8730
2022-07-09 02:14:09.691271: validation loss: -0.7718
2022-07-09 02:14:09.719029: Average global foreground Dice: [0.8091]
2022-07-09 02:14:09.728408: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:14:10.345989: Suus1 maybe_update_lr lr: 0.00203
2022-07-09 02:14:10.348381: This epoch took 72.649120 s

2022-07-09 02:14:10.350904: 
epoch:  415
2022-07-09 02:15:17.729068: train loss : -0.8679
2022-07-09 02:15:22.170682: validation loss: -0.7605
2022-07-09 02:15:22.173935: Average global foreground Dice: [0.8022]
2022-07-09 02:15:22.176343: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:15:22.673234: Suus1 maybe_update_lr lr: 0.002008
2022-07-09 02:15:22.676016: This epoch took 72.321238 s

2022-07-09 02:15:22.678199: 
epoch:  416
2022-07-09 02:16:29.996238: train loss : -0.8654
2022-07-09 02:16:34.481717: validation loss: -0.7578
2022-07-09 02:16:34.494800: Average global foreground Dice: [0.7921]
2022-07-09 02:16:34.497071: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:16:34.992770: Suus1 maybe_update_lr lr: 0.001987
2022-07-09 02:16:34.998118: This epoch took 72.317834 s

2022-07-09 02:16:35.002280: 
epoch:  417
2022-07-09 02:17:42.220067: train loss : -0.8752
2022-07-09 02:17:46.783891: validation loss: -0.7569
2022-07-09 02:17:46.794636: Average global foreground Dice: [0.7942]
2022-07-09 02:17:46.809558: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:17:47.364915: Suus1 maybe_update_lr lr: 0.001965
2022-07-09 02:17:47.367162: This epoch took 72.362695 s

2022-07-09 02:17:47.369253: 
epoch:  418
2022-07-09 02:18:54.613132: train loss : -0.8760
2022-07-09 02:18:59.089605: validation loss: -0.7592
2022-07-09 02:18:59.094112: Average global foreground Dice: [0.7979]
2022-07-09 02:18:59.107404: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:18:59.607915: Suus1 maybe_update_lr lr: 0.001943
2022-07-09 02:18:59.610307: This epoch took 72.238949 s

2022-07-09 02:18:59.612450: 
epoch:  419
2022-07-09 02:20:06.971946: train loss : -0.8775
2022-07-09 02:20:11.682662: validation loss: -0.7675
2022-07-09 02:20:11.685857: Average global foreground Dice: [0.8103]
2022-07-09 02:20:11.688050: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:20:12.219593: Suus1 maybe_update_lr lr: 0.001922
2022-07-09 02:20:12.221581: This epoch took 72.607007 s

2022-07-09 02:20:12.224263: 
epoch:  420
2022-07-09 02:21:19.435924: train loss : -0.8705
2022-07-09 02:21:23.839805: validation loss: -0.7757
2022-07-09 02:21:23.856656: Average global foreground Dice: [0.8093]
2022-07-09 02:21:23.874194: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:21:24.389422: Suus1 maybe_update_lr lr: 0.0019
2022-07-09 02:21:24.432329: This epoch took 72.205267 s

2022-07-09 02:21:24.462255: 
epoch:  421
2022-07-09 02:22:31.853767: train loss : -0.8670
2022-07-09 02:22:36.268959: validation loss: -0.7888
2022-07-09 02:22:36.276001: Average global foreground Dice: [0.825]
2022-07-09 02:22:36.280695: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:22:36.739051: Suus1 maybe_update_lr lr: 0.001879
2022-07-09 02:22:36.741538: This epoch took 72.246275 s

2022-07-09 02:22:36.743775: 
epoch:  422
2022-07-09 02:23:43.986445: train loss : -0.8726
2022-07-09 02:23:48.545913: validation loss: -0.7742
2022-07-09 02:23:48.577793: Average global foreground Dice: [0.807]
2022-07-09 02:23:48.593269: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:23:49.104877: Suus1 maybe_update_lr lr: 0.001857
2022-07-09 02:23:49.125319: This epoch took 72.379470 s

2022-07-09 02:23:49.147246: 
epoch:  423
2022-07-09 02:24:56.454100: train loss : -0.8724
2022-07-09 02:25:00.927784: validation loss: -0.7784
2022-07-09 02:25:00.965164: Average global foreground Dice: [0.8168]
2022-07-09 02:25:00.980745: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:25:01.527332: Suus1 maybe_update_lr lr: 0.001835
2022-07-09 02:25:01.537891: This epoch took 72.368614 s

2022-07-09 02:25:01.549019: 
epoch:  424
2022-07-09 02:26:08.856081: train loss : -0.8700
2022-07-09 02:26:13.374879: validation loss: -0.7628
2022-07-09 02:26:13.396657: Average global foreground Dice: [0.8018]
2022-07-09 02:26:13.404891: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:26:14.033587: Suus1 maybe_update_lr lr: 0.001813
2022-07-09 02:26:14.036500: This epoch took 72.483970 s

2022-07-09 02:26:14.038863: 
epoch:  425
2022-07-09 02:27:21.286989: train loss : -0.8699
2022-07-09 02:27:25.715531: validation loss: -0.7780
2022-07-09 02:27:25.719043: Average global foreground Dice: [0.8168]
2022-07-09 02:27:25.721577: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:27:26.188797: Suus1 maybe_update_lr lr: 0.001792
2022-07-09 02:27:26.191179: This epoch took 72.150064 s

2022-07-09 02:27:26.193166: 
epoch:  426
2022-07-09 02:28:33.612232: train loss : -0.8744
2022-07-09 02:28:38.122634: validation loss: -0.7731
2022-07-09 02:28:38.143464: Average global foreground Dice: [0.8098]
2022-07-09 02:28:38.166295: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:28:38.782500: Suus1 maybe_update_lr lr: 0.00177
2022-07-09 02:28:38.784899: This epoch took 72.589662 s

2022-07-09 02:28:38.786931: 
epoch:  427
2022-07-09 02:29:46.158349: train loss : -0.8706
2022-07-09 02:29:50.507591: validation loss: -0.7783
2022-07-09 02:29:50.515812: Average global foreground Dice: [0.8121]
2022-07-09 02:29:50.538603: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:29:51.023954: Suus1 maybe_update_lr lr: 0.001748
2022-07-09 02:29:51.026259: This epoch took 72.237104 s

2022-07-09 02:29:51.028209: 
epoch:  428
2022-07-09 02:30:58.366319: train loss : -0.8759
2022-07-09 02:31:02.775738: validation loss: -0.7732
2022-07-09 02:31:02.790787: Average global foreground Dice: [0.8129]
2022-07-09 02:31:02.793097: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:31:03.313278: Suus1 maybe_update_lr lr: 0.001726
2022-07-09 02:31:03.316042: This epoch took 72.285776 s

2022-07-09 02:31:03.318567: 
epoch:  429
2022-07-09 02:32:10.664605: train loss : -0.8659
2022-07-09 02:32:15.084821: validation loss: -0.7452
2022-07-09 02:32:15.125139: Average global foreground Dice: [0.7928]
2022-07-09 02:32:15.187029: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:32:15.853664: Suus1 maybe_update_lr lr: 0.001704
2022-07-09 02:32:15.856085: This epoch took 72.535230 s

2022-07-09 02:32:15.858054: 
epoch:  430
2022-07-09 02:33:23.249982: train loss : -0.8718
2022-07-09 02:33:27.727871: validation loss: -0.7488
2022-07-09 02:33:27.736639: Average global foreground Dice: [0.7963]
2022-07-09 02:33:27.739813: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:33:28.245063: Suus1 maybe_update_lr lr: 0.001682
2022-07-09 02:33:28.247641: This epoch took 72.387528 s

2022-07-09 02:33:28.249735: 
epoch:  431
2022-07-09 02:34:35.522524: train loss : -0.8734
2022-07-09 02:34:40.152681: validation loss: -0.7639
2022-07-09 02:34:40.160354: Average global foreground Dice: [0.8]
2022-07-09 02:34:40.163223: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:34:40.655878: Suus1 maybe_update_lr lr: 0.00166
2022-07-09 02:34:40.658558: This epoch took 72.406608 s

2022-07-09 02:34:40.660776: 
epoch:  432
2022-07-09 02:35:48.054570: train loss : -0.8755
2022-07-09 02:35:52.405638: validation loss: -0.7769
2022-07-09 02:35:52.439844: Average global foreground Dice: [0.8162]
2022-07-09 02:35:52.472261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:35:53.026572: Suus1 maybe_update_lr lr: 0.001638
2022-07-09 02:35:53.029205: This epoch took 72.366256 s

2022-07-09 02:35:53.031366: 
epoch:  433
2022-07-09 02:37:00.396429: train loss : -0.8746
2022-07-09 02:37:04.867341: validation loss: -0.7612
2022-07-09 02:37:04.870719: Average global foreground Dice: [0.7966]
2022-07-09 02:37:04.872988: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:37:05.354615: Suus1 maybe_update_lr lr: 0.001616
2022-07-09 02:37:05.373329: This epoch took 72.339804 s

2022-07-09 02:37:05.395243: 
epoch:  434
2022-07-09 02:38:12.731374: train loss : -0.8776
2022-07-09 02:38:17.269283: validation loss: -0.7689
2022-07-09 02:38:17.276338: Average global foreground Dice: [0.8115]
2022-07-09 02:38:17.278661: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:38:17.776008: Suus1 maybe_update_lr lr: 0.001594
2022-07-09 02:38:17.778883: This epoch took 72.365526 s

2022-07-09 02:38:17.781271: 
epoch:  435
2022-07-09 02:39:25.040741: train loss : -0.8792
2022-07-09 02:39:29.533918: validation loss: -0.7921
2022-07-09 02:39:29.558614: Average global foreground Dice: [0.829]
2022-07-09 02:39:29.568511: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:39:30.170245: Suus1 maybe_update_lr lr: 0.001572
2022-07-09 02:39:30.172822: This epoch took 72.389074 s

2022-07-09 02:39:30.175083: 
epoch:  436
2022-07-09 02:40:37.474208: train loss : -0.8798
2022-07-09 02:40:41.792168: validation loss: -0.7712
2022-07-09 02:40:41.809974: Average global foreground Dice: [0.8108]
2022-07-09 02:40:41.821304: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:40:42.374575: Suus1 maybe_update_lr lr: 0.00155
2022-07-09 02:40:42.377090: This epoch took 72.199861 s

2022-07-09 02:40:42.379132: 
epoch:  437
2022-07-09 02:41:49.641301: train loss : -0.8769
2022-07-09 02:41:54.026639: validation loss: -0.7828
2022-07-09 02:41:54.059163: Average global foreground Dice: [0.8244]
2022-07-09 02:41:54.065315: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:41:54.561664: Suus1 maybe_update_lr lr: 0.001528
2022-07-09 02:41:54.564143: saving best epoch checkpoint...
2022-07-09 02:41:54.608871: saving checkpoint...
2022-07-09 02:41:55.593915: done, saving took 1.03 seconds
2022-07-09 02:41:55.610758: This epoch took 73.229522 s

2022-07-09 02:41:55.612882: 
epoch:  438
2022-07-09 02:43:02.938693: train loss : -0.8785
2022-07-09 02:43:07.569396: validation loss: -0.7905
2022-07-09 02:43:07.573664: Average global foreground Dice: [0.828]
2022-07-09 02:43:07.576153: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:43:08.047466: Suus1 maybe_update_lr lr: 0.001506
2022-07-09 02:43:08.050042: saving best epoch checkpoint...
2022-07-09 02:43:08.102806: saving checkpoint...
2022-07-09 02:43:09.266243: done, saving took 1.21 seconds
2022-07-09 02:43:09.282971: This epoch took 73.668103 s

2022-07-09 02:43:09.285194: 
epoch:  439
2022-07-09 02:44:16.575825: train loss : -0.8770
2022-07-09 02:44:20.916459: validation loss: -0.7683
2022-07-09 02:44:20.928629: Average global foreground Dice: [0.8076]
2022-07-09 02:44:20.941072: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:44:21.524797: Suus1 maybe_update_lr lr: 0.001483
2022-07-09 02:44:21.527217: This epoch took 72.239863 s

2022-07-09 02:44:21.529493: 
epoch:  440
2022-07-09 02:45:28.790333: train loss : -0.8787
2022-07-09 02:45:33.225684: validation loss: -0.7464
2022-07-09 02:45:33.245030: Average global foreground Dice: [0.7875]
2022-07-09 02:45:33.253145: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:45:33.741171: Suus1 maybe_update_lr lr: 0.001461
2022-07-09 02:45:33.743546: This epoch took 72.212013 s

2022-07-09 02:45:33.745691: 
epoch:  441
2022-07-09 02:46:40.953020: train loss : -0.8808
2022-07-09 02:46:45.377788: validation loss: -0.7702
2022-07-09 02:46:45.386605: Average global foreground Dice: [0.8084]
2022-07-09 02:46:45.391677: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:46:45.870656: Suus1 maybe_update_lr lr: 0.001439
2022-07-09 02:46:45.873621: This epoch took 72.125741 s

2022-07-09 02:46:45.875583: 
epoch:  442
2022-07-09 02:47:53.188891: train loss : -0.8792
2022-07-09 02:47:57.718094: validation loss: -0.7590
2022-07-09 02:47:57.729716: Average global foreground Dice: [0.7972]
2022-07-09 02:47:57.752111: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:47:58.243639: Suus1 maybe_update_lr lr: 0.001416
2022-07-09 02:47:58.247163: This epoch took 72.369665 s

2022-07-09 02:47:58.264265: 
epoch:  443
2022-07-09 02:49:05.495257: train loss : -0.8782
2022-07-09 02:49:09.948481: validation loss: -0.7801
2022-07-09 02:49:09.985723: Average global foreground Dice: [0.8238]
2022-07-09 02:49:09.991617: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:49:10.539047: Suus1 maybe_update_lr lr: 0.001394
2022-07-09 02:49:10.569326: This epoch took 72.302487 s

2022-07-09 02:49:10.593982: 
epoch:  444
2022-07-09 02:50:17.815811: train loss : -0.8795
2022-07-09 02:50:22.312104: validation loss: -0.7632
2022-07-09 02:50:22.322288: Average global foreground Dice: [0.8089]
2022-07-09 02:50:22.325241: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:50:22.910601: Suus1 maybe_update_lr lr: 0.001372
2022-07-09 02:50:22.912944: This epoch took 72.316496 s

2022-07-09 02:50:22.914903: 
epoch:  445
2022-07-09 02:51:30.170964: train loss : -0.8842
2022-07-09 02:51:34.464364: validation loss: -0.7741
2022-07-09 02:51:34.517811: Average global foreground Dice: [0.8095]
2022-07-09 02:51:34.527665: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:51:35.118585: Suus1 maybe_update_lr lr: 0.001349
2022-07-09 02:51:35.121011: This epoch took 72.204141 s

2022-07-09 02:51:35.123181: 
epoch:  446
2022-07-09 02:52:42.452246: train loss : -0.8799
2022-07-09 02:52:46.915766: validation loss: -0.7584
2022-07-09 02:52:46.925761: Average global foreground Dice: [0.7999]
2022-07-09 02:52:46.928373: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:52:47.488173: Suus1 maybe_update_lr lr: 0.001327
2022-07-09 02:52:47.491714: This epoch took 72.366402 s

2022-07-09 02:52:47.494095: 
epoch:  447
2022-07-09 02:53:54.743292: train loss : -0.8814
2022-07-09 02:53:59.285791: validation loss: -0.7715
2022-07-09 02:53:59.291523: Average global foreground Dice: [0.8063]
2022-07-09 02:53:59.296537: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:53:59.848469: Suus1 maybe_update_lr lr: 0.001304
2022-07-09 02:53:59.850899: This epoch took 72.354631 s

2022-07-09 02:53:59.852993: 
epoch:  448
2022-07-09 02:55:07.100384: train loss : -0.8820
2022-07-09 02:55:11.759016: validation loss: -0.7531
2022-07-09 02:55:11.769979: Average global foreground Dice: [0.7931]
2022-07-09 02:55:11.777880: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:55:12.300813: Suus1 maybe_update_lr lr: 0.001282
2022-07-09 02:55:12.303464: This epoch took 72.448137 s

2022-07-09 02:55:12.308035: 
epoch:  449
2022-07-09 02:56:19.560214: train loss : -0.8840
2022-07-09 02:56:23.939511: validation loss: -0.7734
2022-07-09 02:56:23.985631: Average global foreground Dice: [0.8116]
2022-07-09 02:56:24.003601: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:56:24.525725: Suus1 maybe_update_lr lr: 0.001259
2022-07-09 02:56:24.528386: saving scheduled checkpoint file...
2022-07-09 02:56:24.571174: saving checkpoint...
2022-07-09 02:56:25.555648: done, saving took 1.02 seconds
2022-07-09 02:56:25.572432: done
2022-07-09 02:56:25.574573: This epoch took 73.263643 s

2022-07-09 02:56:25.576683: 
epoch:  450
2022-07-09 02:57:32.954266: train loss : -0.8839
2022-07-09 02:57:37.498863: validation loss: -0.7814
2022-07-09 02:57:37.530856: Average global foreground Dice: [0.8185]
2022-07-09 02:57:37.552479: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:57:38.111973: Suus1 maybe_update_lr lr: 0.001236
2022-07-09 02:57:38.114399: This epoch took 72.535316 s

2022-07-09 02:57:38.116509: 
epoch:  451
2022-07-09 02:58:45.448211: train loss : -0.8786
2022-07-09 02:58:50.072288: validation loss: -0.7615
2022-07-09 02:58:50.090314: Average global foreground Dice: [0.8097]
2022-07-09 02:58:50.109628: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 02:58:50.577451: Suus1 maybe_update_lr lr: 0.001214
2022-07-09 02:58:50.579874: This epoch took 72.461261 s

2022-07-09 02:58:50.582115: 
epoch:  452
2022-07-09 02:59:57.896751: train loss : -0.8837
2022-07-09 03:00:02.539581: validation loss: -0.7399
2022-07-09 03:00:02.553418: Average global foreground Dice: [0.7797]
2022-07-09 03:00:02.558396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:00:03.166922: Suus1 maybe_update_lr lr: 0.001191
2022-07-09 03:00:03.169947: This epoch took 72.585746 s

2022-07-09 03:00:03.171954: 
epoch:  453
2022-07-09 03:01:10.505890: train loss : -0.8795
2022-07-09 03:01:14.937935: validation loss: -0.7665
2022-07-09 03:01:14.971831: Average global foreground Dice: [0.8127]
2022-07-09 03:01:14.993290: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:01:15.550122: Suus1 maybe_update_lr lr: 0.001168
2022-07-09 03:01:15.552741: This epoch took 72.378933 s

2022-07-09 03:01:15.554979: 
epoch:  454
2022-07-09 03:02:22.826943: train loss : -0.8830
2022-07-09 03:02:27.388633: validation loss: -0.7799
2022-07-09 03:02:27.413257: Average global foreground Dice: [0.8188]
2022-07-09 03:02:27.432494: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:02:28.063237: Suus1 maybe_update_lr lr: 0.001145
2022-07-09 03:02:28.093383: This epoch took 72.536226 s

2022-07-09 03:02:28.126254: 
epoch:  455
2022-07-09 03:03:35.464027: train loss : -0.8792
2022-07-09 03:03:39.822415: validation loss: -0.7819
2022-07-09 03:03:39.843029: Average global foreground Dice: [0.8218]
2022-07-09 03:03:39.858281: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:03:40.314292: Suus1 maybe_update_lr lr: 0.001122
2022-07-09 03:03:40.316657: This epoch took 72.157394 s

2022-07-09 03:03:40.318708: 
epoch:  456
2022-07-09 03:04:47.746755: train loss : -0.8821
2022-07-09 03:04:52.329088: validation loss: -0.7616
2022-07-09 03:04:52.368202: Average global foreground Dice: [0.8036]
2022-07-09 03:04:52.378871: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:04:53.017612: Suus1 maybe_update_lr lr: 0.001099
2022-07-09 03:04:53.020153: This epoch took 72.699341 s

2022-07-09 03:04:53.033822: 
epoch:  457
2022-07-09 03:06:00.325574: train loss : -0.8796
2022-07-09 03:06:04.824211: validation loss: -0.7452
2022-07-09 03:06:04.845794: Average global foreground Dice: [0.7936]
2022-07-09 03:06:04.847931: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:06:05.321962: Suus1 maybe_update_lr lr: 0.001076
2022-07-09 03:06:05.341322: This epoch took 72.274052 s

2022-07-09 03:06:05.353106: 
epoch:  458
2022-07-09 03:07:12.680320: train loss : -0.8845
2022-07-09 03:07:17.096035: validation loss: -0.7720
2022-07-09 03:07:17.109791: Average global foreground Dice: [0.815]
2022-07-09 03:07:17.113741: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:07:17.728307: Suus1 maybe_update_lr lr: 0.001053
2022-07-09 03:07:17.730825: This epoch took 72.365012 s

2022-07-09 03:07:17.733115: 
epoch:  459
2022-07-09 03:08:24.968350: train loss : -0.8834
2022-07-09 03:08:29.443451: validation loss: -0.7743
2022-07-09 03:08:29.486706: Average global foreground Dice: [0.8134]
2022-07-09 03:08:29.519249: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:08:30.049733: Suus1 maybe_update_lr lr: 0.00103
2022-07-09 03:08:30.105494: This epoch took 72.370181 s

2022-07-09 03:08:30.160280: 
epoch:  460
2022-07-09 03:09:37.378806: train loss : -0.8863
2022-07-09 03:09:41.776485: validation loss: -0.7847
2022-07-09 03:09:41.796784: Average global foreground Dice: [0.8189]
2022-07-09 03:09:41.821216: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:09:42.311134: Suus1 maybe_update_lr lr: 0.001007
2022-07-09 03:09:42.313537: This epoch took 72.132610 s

2022-07-09 03:09:42.315508: 
epoch:  461
2022-07-09 03:10:49.486150: train loss : -0.8805
2022-07-09 03:10:53.863668: validation loss: -0.7664
2022-07-09 03:10:53.867018: Average global foreground Dice: [0.8027]
2022-07-09 03:10:53.870735: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:10:54.338970: Suus1 maybe_update_lr lr: 0.000983
2022-07-09 03:10:54.346839: This epoch took 72.028997 s

2022-07-09 03:10:54.353759: 
epoch:  462
2022-07-09 03:12:01.634722: train loss : -0.8825
2022-07-09 03:12:06.144380: validation loss: -0.7956
2022-07-09 03:12:06.154208: Average global foreground Dice: [0.8304]
2022-07-09 03:12:06.171350: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:12:06.720869: Suus1 maybe_update_lr lr: 0.00096
2022-07-09 03:12:06.723505: This epoch took 72.367397 s

2022-07-09 03:12:06.725739: 
epoch:  463
2022-07-09 03:13:14.014493: train loss : -0.8852
2022-07-09 03:13:18.574101: validation loss: -0.7711
2022-07-09 03:13:18.601681: Average global foreground Dice: [0.8063]
2022-07-09 03:13:18.619460: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:13:19.100586: Suus1 maybe_update_lr lr: 0.000937
2022-07-09 03:13:19.103297: This epoch took 72.375329 s

2022-07-09 03:13:19.105757: 
epoch:  464
2022-07-09 03:14:26.384753: train loss : -0.8864
2022-07-09 03:14:30.777636: validation loss: -0.7694
2022-07-09 03:14:30.802758: Average global foreground Dice: [0.8066]
2022-07-09 03:14:30.813626: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:14:31.291239: Suus1 maybe_update_lr lr: 0.000913
2022-07-09 03:14:31.293669: This epoch took 72.185662 s

2022-07-09 03:14:31.295869: 
epoch:  465
2022-07-09 03:15:38.528826: train loss : -0.8792
2022-07-09 03:15:42.900331: validation loss: -0.7812
2022-07-09 03:15:42.927910: Average global foreground Dice: [0.8167]
2022-07-09 03:15:42.930739: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:15:43.446159: Suus1 maybe_update_lr lr: 0.00089
2022-07-09 03:15:43.465323: This epoch took 72.167474 s

2022-07-09 03:15:43.490265: 
epoch:  466
2022-07-09 03:16:50.866008: train loss : -0.8856
2022-07-09 03:16:55.284840: validation loss: -0.7943
2022-07-09 03:16:55.288515: Average global foreground Dice: [0.8278]
2022-07-09 03:16:55.290899: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:16:55.741271: Suus1 maybe_update_lr lr: 0.000866
2022-07-09 03:16:55.747504: saving best epoch checkpoint...
2022-07-09 03:16:55.807750: saving checkpoint...
2022-07-09 03:16:56.768974: done, saving took 1.02 seconds
2022-07-09 03:16:56.784822: This epoch took 73.283247 s

2022-07-09 03:16:56.787121: 
epoch:  467
2022-07-09 03:18:03.974204: train loss : -0.8832
2022-07-09 03:18:08.323320: validation loss: -0.7747
2022-07-09 03:18:08.331493: Average global foreground Dice: [0.814]
2022-07-09 03:18:08.342912: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:18:08.830690: Suus1 maybe_update_lr lr: 0.000842
2022-07-09 03:18:08.832961: saving best epoch checkpoint...
2022-07-09 03:18:08.898268: saving checkpoint...
2022-07-09 03:18:09.881297: done, saving took 1.05 seconds
2022-07-09 03:18:09.898576: This epoch took 73.109264 s

2022-07-09 03:18:09.900808: 
epoch:  468
2022-07-09 03:19:17.171625: train loss : -0.8903
2022-07-09 03:19:21.533856: validation loss: -0.7890
2022-07-09 03:19:21.567653: Average global foreground Dice: [0.825]
2022-07-09 03:19:21.589261: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:19:22.426198: Suus1 maybe_update_lr lr: 0.000819
2022-07-09 03:19:22.428633: saving best epoch checkpoint...
2022-07-09 03:19:22.459105: saving checkpoint...
2022-07-09 03:19:23.481359: done, saving took 1.05 seconds
2022-07-09 03:19:23.495352: This epoch took 73.592363 s

2022-07-09 03:19:23.497453: 
epoch:  469
2022-07-09 03:20:30.762561: train loss : -0.8817
2022-07-09 03:20:35.128350: validation loss: -0.7591
2022-07-09 03:20:35.131655: Average global foreground Dice: [0.8039]
2022-07-09 03:20:35.133722: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:20:35.681400: Suus1 maybe_update_lr lr: 0.000795
2022-07-09 03:20:35.684366: This epoch took 72.184880 s

2022-07-09 03:20:35.686632: 
epoch:  470
2022-07-09 03:21:42.967068: train loss : -0.8842
2022-07-09 03:21:47.739536: validation loss: -0.7727
2022-07-09 03:21:47.745028: Average global foreground Dice: [0.8176]
2022-07-09 03:21:47.747413: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:21:48.266789: Suus1 maybe_update_lr lr: 0.000771
2022-07-09 03:21:48.269331: This epoch took 72.580482 s

2022-07-09 03:21:48.271417: 
epoch:  471
2022-07-09 03:22:55.567403: train loss : -0.8777
2022-07-09 03:22:59.896423: validation loss: -0.7776
2022-07-09 03:22:59.922750: Average global foreground Dice: [0.8116]
2022-07-09 03:22:59.933993: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:23:00.479754: Suus1 maybe_update_lr lr: 0.000747
2022-07-09 03:23:00.482540: This epoch took 72.208805 s

2022-07-09 03:23:00.485360: 
epoch:  472
2022-07-09 03:24:07.788226: train loss : -0.8843
2022-07-09 03:24:12.326507: validation loss: -0.7838
2022-07-09 03:24:12.357859: Average global foreground Dice: [0.8233]
2022-07-09 03:24:12.382307: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:24:13.056598: Suus1 maybe_update_lr lr: 0.000723
2022-07-09 03:24:13.059031: saving best epoch checkpoint...
2022-07-09 03:24:13.090104: saving checkpoint...
2022-07-09 03:24:14.116123: done, saving took 1.05 seconds
2022-07-09 03:24:14.130904: This epoch took 73.643323 s

2022-07-09 03:24:14.133253: 
epoch:  473
2022-07-09 03:25:21.401303: train loss : -0.8892
2022-07-09 03:25:25.784995: validation loss: -0.7773
2022-07-09 03:25:25.798055: Average global foreground Dice: [0.8141]
2022-07-09 03:25:25.801140: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:25:26.281878: Suus1 maybe_update_lr lr: 0.000699
2022-07-09 03:25:26.286349: This epoch took 72.150998 s

2022-07-09 03:25:26.290084: 
epoch:  474
2022-07-09 03:26:33.629681: train loss : -0.8899
2022-07-09 03:26:38.029013: validation loss: -0.7549
2022-07-09 03:26:38.048321: Average global foreground Dice: [0.8005]
2022-07-09 03:26:38.050630: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:26:38.573574: Suus1 maybe_update_lr lr: 0.000675
2022-07-09 03:26:38.583675: This epoch took 72.290967 s

2022-07-09 03:26:38.588695: 
epoch:  475
2022-07-09 03:27:46.003016: train loss : -0.8856
2022-07-09 03:27:50.699931: validation loss: -0.7701
2022-07-09 03:27:50.733813: Average global foreground Dice: [0.812]
2022-07-09 03:27:50.755799: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:27:51.302835: Suus1 maybe_update_lr lr: 0.00065
2022-07-09 03:27:51.305403: This epoch took 72.713777 s

2022-07-09 03:27:51.307459: 
epoch:  476
2022-07-09 03:28:58.548699: train loss : -0.8910
2022-07-09 03:29:02.985077: validation loss: -0.7714
2022-07-09 03:29:02.989208: Average global foreground Dice: [0.8167]
2022-07-09 03:29:03.015387: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:29:03.542976: Suus1 maybe_update_lr lr: 0.000626
2022-07-09 03:29:03.545421: This epoch took 72.235902 s

2022-07-09 03:29:03.547628: 
epoch:  477
2022-07-09 03:30:10.882007: train loss : -0.8896
2022-07-09 03:30:15.349513: validation loss: -0.7770
2022-07-09 03:30:15.376709: Average global foreground Dice: [0.8121]
2022-07-09 03:30:15.398423: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:30:16.125947: Suus1 maybe_update_lr lr: 0.000601
2022-07-09 03:30:16.129031: This epoch took 72.579328 s

2022-07-09 03:30:16.131182: 
epoch:  478
2022-07-09 03:31:23.452897: train loss : -0.8868
2022-07-09 03:31:27.883466: validation loss: -0.7777
2022-07-09 03:31:27.886923: Average global foreground Dice: [0.8161]
2022-07-09 03:31:27.889163: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:31:28.353113: Suus1 maybe_update_lr lr: 0.000577
2022-07-09 03:31:28.356277: This epoch took 72.223057 s

2022-07-09 03:31:28.377494: 
epoch:  479
2022-07-09 03:32:35.725109: train loss : -0.8869
2022-07-09 03:32:40.287890: validation loss: -0.7661
2022-07-09 03:32:40.302051: Average global foreground Dice: [0.7999]
2022-07-09 03:32:40.317276: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:32:40.971137: Suus1 maybe_update_lr lr: 0.000552
2022-07-09 03:32:40.973611: This epoch took 72.581261 s

2022-07-09 03:32:40.975631: 
epoch:  480
2022-07-09 03:33:48.375107: train loss : -0.8845
2022-07-09 03:33:52.717034: validation loss: -0.7713
2022-07-09 03:33:52.724934: Average global foreground Dice: [0.8121]
2022-07-09 03:33:52.742258: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:33:53.221937: Suus1 maybe_update_lr lr: 0.000527
2022-07-09 03:33:53.224841: This epoch took 72.247346 s

2022-07-09 03:33:53.227107: 
epoch:  481
2022-07-09 03:35:00.488442: train loss : -0.8894
2022-07-09 03:35:05.011869: validation loss: -0.7901
2022-07-09 03:35:05.026196: Average global foreground Dice: [0.8214]
2022-07-09 03:35:05.052667: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:35:05.641193: Suus1 maybe_update_lr lr: 0.000502
2022-07-09 03:35:05.648341: This epoch took 72.419071 s

2022-07-09 03:35:05.655703: 
epoch:  482
2022-07-09 03:36:12.996906: train loss : -0.8899
2022-07-09 03:36:17.740669: validation loss: -0.7686
2022-07-09 03:36:17.746314: Average global foreground Dice: [0.8128]
2022-07-09 03:36:17.748688: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:36:18.215069: Suus1 maybe_update_lr lr: 0.000477
2022-07-09 03:36:18.218508: This epoch took 72.544822 s

2022-07-09 03:36:18.221003: 
epoch:  483
2022-07-09 03:37:25.481665: train loss : -0.8899
2022-07-09 03:37:30.074324: validation loss: -0.7680
2022-07-09 03:37:30.090414: Average global foreground Dice: [0.8129]
2022-07-09 03:37:30.105372: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:37:30.831413: Suus1 maybe_update_lr lr: 0.000451
2022-07-09 03:37:30.850318: This epoch took 72.627108 s

2022-07-09 03:37:30.872267: 
epoch:  484
2022-07-09 03:38:38.130614: train loss : -0.8870
2022-07-09 03:38:42.835726: validation loss: -0.7656
2022-07-09 03:38:42.851418: Average global foreground Dice: [0.8007]
2022-07-09 03:38:42.853813: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:38:43.338989: Suus1 maybe_update_lr lr: 0.000426
2022-07-09 03:38:43.341553: This epoch took 72.452476 s

2022-07-09 03:38:43.343826: 
epoch:  485
2022-07-09 03:39:50.530698: train loss : -0.8879
2022-07-09 03:39:55.017606: validation loss: -0.7810
2022-07-09 03:39:55.052748: Average global foreground Dice: [0.8275]
2022-07-09 03:39:55.078248: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:39:55.572102: Suus1 maybe_update_lr lr: 0.0004
2022-07-09 03:39:55.574523: This epoch took 72.228629 s

2022-07-09 03:39:55.576795: 
epoch:  486
2022-07-09 03:41:02.876455: train loss : -0.8910
2022-07-09 03:41:07.311505: validation loss: -0.7616
2022-07-09 03:41:07.344366: Average global foreground Dice: [0.7985]
2022-07-09 03:41:07.363769: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:41:07.839633: Suus1 maybe_update_lr lr: 0.000375
2022-07-09 03:41:07.843249: This epoch took 72.264234 s

2022-07-09 03:41:07.845338: 
epoch:  487
2022-07-09 03:42:15.193943: train loss : -0.8933
2022-07-09 03:42:19.759799: validation loss: -0.7610
2022-07-09 03:42:19.785820: Average global foreground Dice: [0.7991]
2022-07-09 03:42:19.862396: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:42:20.378433: Suus1 maybe_update_lr lr: 0.000348
2022-07-09 03:42:20.380836: This epoch took 72.533358 s

2022-07-09 03:42:20.383019: 
epoch:  488
2022-07-09 03:43:27.611206: train loss : -0.8894
2022-07-09 03:43:31.979453: validation loss: -0.7842
2022-07-09 03:43:32.002351: Average global foreground Dice: [0.8208]
2022-07-09 03:43:32.015952: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:43:32.558486: Suus1 maybe_update_lr lr: 0.000322
2022-07-09 03:43:32.561072: This epoch took 72.175955 s

2022-07-09 03:43:32.563233: 
epoch:  489
2022-07-09 03:44:39.953725: train loss : -0.8908
2022-07-09 03:44:44.404188: validation loss: -0.7889
2022-07-09 03:44:44.430698: Average global foreground Dice: [0.8204]
2022-07-09 03:44:44.435779: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:44:44.913165: Suus1 maybe_update_lr lr: 0.000296
2022-07-09 03:44:44.915864: This epoch took 72.350569 s

2022-07-09 03:44:44.918109: 
epoch:  490
2022-07-09 03:45:52.265229: train loss : -0.8933
2022-07-09 03:45:56.675310: validation loss: -0.7718
2022-07-09 03:45:56.690329: Average global foreground Dice: [0.8138]
2022-07-09 03:45:56.692764: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:45:57.185221: Suus1 maybe_update_lr lr: 0.000269
2022-07-09 03:45:57.187649: This epoch took 72.267478 s

2022-07-09 03:45:57.189898: 
epoch:  491
2022-07-09 03:47:04.484997: train loss : -0.8860
2022-07-09 03:47:08.923369: validation loss: -0.7944
2022-07-09 03:47:08.936247: Average global foreground Dice: [0.8287]
2022-07-09 03:47:08.977198: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:47:09.473042: Suus1 maybe_update_lr lr: 0.000242
2022-07-09 03:47:09.475495: saving best epoch checkpoint...
2022-07-09 03:47:09.520972: saving checkpoint...
2022-07-09 03:47:10.511103: done, saving took 1.03 seconds
2022-07-09 03:47:10.526991: This epoch took 73.335018 s

2022-07-09 03:47:10.529389: 
epoch:  492
2022-07-09 03:48:17.843602: train loss : -0.8925
2022-07-09 03:48:22.319374: validation loss: -0.7734
2022-07-09 03:48:22.338705: Average global foreground Dice: [0.8138]
2022-07-09 03:48:22.344928: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:48:22.845349: Suus1 maybe_update_lr lr: 0.000215
2022-07-09 03:48:22.848057: This epoch took 72.316511 s

2022-07-09 03:48:22.850275: 
epoch:  493
2022-07-09 03:49:30.172524: train loss : -0.8882
2022-07-09 03:49:34.617469: validation loss: -0.7634
2022-07-09 03:49:34.684168: Average global foreground Dice: [0.816]
2022-07-09 03:49:34.703094: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:49:35.235555: Suus1 maybe_update_lr lr: 0.000187
2022-07-09 03:49:35.250086: saving best epoch checkpoint...
2022-07-09 03:49:35.330473: saving checkpoint...
2022-07-09 03:49:36.472816: done, saving took 1.21 seconds
2022-07-09 03:49:36.487986: This epoch took 73.635636 s

2022-07-09 03:49:36.489940: 
epoch:  494
2022-07-09 03:50:43.779548: train loss : -0.8896
2022-07-09 03:50:48.278698: validation loss: -0.7588
2022-07-09 03:50:48.295189: Average global foreground Dice: [0.8001]
2022-07-09 03:50:48.297652: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:50:48.762264: Suus1 maybe_update_lr lr: 0.000158
2022-07-09 03:50:48.775077: This epoch took 72.283102 s

2022-07-09 03:50:48.778035: 
epoch:  495
2022-07-09 03:51:56.107563: train loss : -0.8966
2022-07-09 03:52:00.487582: validation loss: -0.7934
2022-07-09 03:52:00.501257: Average global foreground Dice: [0.8277]
2022-07-09 03:52:00.503456: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:52:01.015767: Suus1 maybe_update_lr lr: 0.00013
2022-07-09 03:52:01.018915: saving best epoch checkpoint...
2022-07-09 03:52:01.067746: saving checkpoint...
2022-07-09 03:52:02.043066: done, saving took 1.02 seconds
2022-07-09 03:52:02.059334: This epoch took 73.278326 s

2022-07-09 03:52:02.061870: 
epoch:  496
2022-07-09 03:53:09.441796: train loss : -0.8937
2022-07-09 03:53:13.951231: validation loss: -0.7771
2022-07-09 03:53:13.973897: Average global foreground Dice: [0.8139]
2022-07-09 03:53:13.996332: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:53:14.768275: Suus1 maybe_update_lr lr: 0.0001
2022-07-09 03:53:14.770899: This epoch took 72.706588 s

2022-07-09 03:53:14.777720: 
epoch:  497
2022-07-09 03:54:22.079862: train loss : -0.8941
2022-07-09 03:54:26.683445: validation loss: -0.7793
2022-07-09 03:54:26.721371: Average global foreground Dice: [0.8163]
2022-07-09 03:54:26.727958: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:54:27.335655: Suus1 maybe_update_lr lr: 6.9e-05
2022-07-09 03:54:27.337996: saving best epoch checkpoint...
2022-07-09 03:54:27.372718: saving checkpoint...
2022-07-09 03:54:28.396960: done, saving took 1.06 seconds
2022-07-09 03:54:28.410821: This epoch took 73.620783 s

2022-07-09 03:54:28.412934: 
epoch:  498
2022-07-09 03:55:35.610347: train loss : -0.8929
2022-07-09 03:55:40.103329: validation loss: -0.7838
2022-07-09 03:55:40.117824: Average global foreground Dice: [0.8169]
2022-07-09 03:55:40.128837: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:55:40.651333: Suus1 maybe_update_lr lr: 3.7e-05
2022-07-09 03:55:40.668107: saving best epoch checkpoint...
2022-07-09 03:55:40.708156: saving checkpoint...
2022-07-09 03:55:41.739278: done, saving took 1.07 seconds
2022-07-09 03:55:41.752230: This epoch took 73.337024 s

2022-07-09 03:55:41.754302: 
epoch:  499
2022-07-09 03:56:49.052564: train loss : -0.8904
2022-07-09 03:56:53.448730: validation loss: -0.7547
2022-07-09 03:56:53.467517: Average global foreground Dice: [0.7981]
2022-07-09 03:56:53.480622: (interpret this as an estimate for the Dice of the different classes. This is not exact.)
2022-07-09 03:56:54.022712: Suus1 maybe_update_lr lr: 0.0
2022-07-09 03:56:54.025081: saving scheduled checkpoint file...
2022-07-09 03:56:54.059572: saving checkpoint...
2022-07-09 03:56:55.011883: done, saving took 0.98 seconds
2022-07-09 03:56:55.027241: done
2022-07-09 03:56:55.029608: This epoch took 73.273302 s

2022-07-09 03:56:55.058119: saving checkpoint...
2022-07-09 03:56:56.049401: done, saving took 1.02 seconds
panc_004 (2, 107, 473, 473)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 80
computing Gaussian
done
prediction done
suus panc_004 transposed
suus panc_004 not saving softmax
suus panc_004 voeg toe aan pred_gt tuples voor later
panc_019 (2, 85, 561, 561)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_019 transposed
suus panc_019 not saving softmax
suus panc_019 voeg toe aan pred_gt tuples voor later
panc_028 (2, 83, 508, 508)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_028 transposed
suus panc_028 not saving softmax
suus panc_028 voeg toe aan pred_gt tuples voor later
panc_051 (2, 99, 523, 523)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_051 transposed
suus panc_051 not saving softmax
suus panc_051 voeg toe aan pred_gt tuples voor later
panc_066 (2, 192, 519, 519)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 519, 519)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 98, 197, 295], [0, 98, 197, 295]]
number of tiles: 144
using precomputed Gaussian
prediction done
suus panc_066 transposed
suus panc_066 not saving softmax
suus panc_066 voeg toe aan pred_gt tuples voor later
panc_069 (2, 194, 503, 503)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 194, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96, 116, 135, 154], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 144
using precomputed Gaussian
prediction done
suus panc_069 transposed
suus panc_069 not saving softmax
suus panc_069 voeg toe aan pred_gt tuples voor later
panc_077 (2, 81, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_077 transposed
suus panc_077 not saving softmax
suus panc_077 voeg toe aan pred_gt tuples voor later
panc_080 (2, 98, 514, 514)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_080 transposed
suus panc_080 not saving softmax
suus panc_080 voeg toe aan pred_gt tuples voor later
panc_093 (2, 116, 594, 594)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_093 transposed
suus panc_093 not saving softmax
suus panc_093 voeg toe aan pred_gt tuples voor later
panc_122 (2, 97, 505, 505)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_122 transposed
suus panc_122 not saving softmax
suus panc_122 voeg toe aan pred_gt tuples voor later
panc_129 (2, 88, 466, 466)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_129 transposed
suus panc_129 not saving softmax
suus panc_129 voeg toe aan pred_gt tuples voor later
panc_159 (2, 90, 419, 419)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 98, 195], [0, 98, 195]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_159 transposed
suus panc_159 not saving softmax
suus panc_159 voeg toe aan pred_gt tuples voor later
panc_165 (2, 85, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_165 transposed
suus panc_165 not saving softmax
suus panc_165 voeg toe aan pred_gt tuples voor later
panc_170 (2, 103, 512, 512)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_170 transposed
suus panc_170 not saving softmax
suus panc_170 voeg toe aan pred_gt tuples voor later
panc_180 (2, 95, 473, 473)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_180 transposed
suus panc_180 not saving softmax
suus panc_180 voeg toe aan pred_gt tuples voor later
panc_186 (2, 102, 452, 452)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_186 transposed
suus panc_186 not saving softmax
suus panc_186 voeg toe aan pred_gt tuples voor later
panc_197 (2, 73, 543, 543)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_197 transposed
suus panc_197 not saving softmax
suus panc_197 voeg toe aan pred_gt tuples voor later
panc_201 (2, 76, 411, 411)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
suus panc_201 transposed
suus panc_201 not saving softmax
suus panc_201 voeg toe aan pred_gt tuples voor later
panc_209 (2, 104, 613, 613)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 613, 613)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 97, 194, 292, 389], [0, 97, 194, 292, 389]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_209 transposed
suus panc_209 not saving softmax
suus panc_209 voeg toe aan pred_gt tuples voor later
panc_226 (2, 104, 528, 528)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 528, 528)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 101, 203, 304], [0, 101, 203, 304]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_226 transposed
suus panc_226 not saving softmax
suus panc_226 voeg toe aan pred_gt tuples voor later
panc_228 (2, 113, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_228 transposed
suus panc_228 not saving softmax
suus panc_228 voeg toe aan pred_gt tuples voor later
panc_234 (2, 81, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_234 transposed
suus panc_234 not saving softmax
suus panc_234 voeg toe aan pred_gt tuples voor later
panc_235 (2, 84, 496, 496)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_235 transposed
suus panc_235 not saving softmax
suus panc_235 voeg toe aan pred_gt tuples voor later
panc_243 (2, 102, 486, 486)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_243 transposed
suus panc_243 not saving softmax
suus panc_243 voeg toe aan pred_gt tuples voor later
panc_246 (2, 107, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_246 transposed
suus panc_246 not saving softmax
suus panc_246 voeg toe aan pred_gt tuples voor later
panc_253 (2, 94, 491, 491)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_253 transposed
suus panc_253 not saving softmax
suus panc_253 voeg toe aan pred_gt tuples voor later
panc_255 (2, 99, 523, 523)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_255 transposed
suus panc_255 not saving softmax
suus panc_255 voeg toe aan pred_gt tuples voor later
panc_261 (2, 97, 446, 446)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 446, 446)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222], [0, 111, 222]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_261 transposed
suus panc_261 not saving softmax
suus panc_261 voeg toe aan pred_gt tuples voor later
panc_268 (2, 67, 470, 470)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 48
using precomputed Gaussian
prediction done
suus panc_268 transposed
suus panc_268 not saving softmax
suus panc_268 voeg toe aan pred_gt tuples voor later
panc_275 (2, 105, 478, 478)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 478, 478)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 85, 169, 254], [0, 85, 169, 254]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_275 transposed
suus panc_275 not saving softmax
suus panc_275 voeg toe aan pred_gt tuples voor later
panc_276 (2, 89, 546, 546)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_276 transposed
suus panc_276 not saving softmax
suus panc_276 voeg toe aan pred_gt tuples voor later
panc_304 (2, 93, 461, 461)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_304 transposed
suus panc_304 not saving softmax
suus panc_304 voeg toe aan pred_gt tuples voor later
panc_308 (2, 113, 614, 614)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 614, 614)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 98, 195, 292, 390], [0, 98, 195, 292, 390]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_308 transposed
suus panc_308 not saving softmax
suus panc_308 voeg toe aan pred_gt tuples voor later
panc_311 (2, 87, 488, 488)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_311 transposed
suus panc_311 not saving softmax
suus panc_311 voeg toe aan pred_gt tuples voor later
panc_333 (2, 97, 623, 623)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_333 transposed
suus panc_333 not saving softmax
suus panc_333 voeg toe aan pred_gt tuples voor later
panc_336 (2, 92, 548, 548)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_336 transposed
suus panc_336 not saving softmax
suus panc_336 voeg toe aan pred_gt tuples voor later
panc_345 (2, 84, 536, 536)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
suus panc_345 transposed
suus panc_345 not saving softmax
suus panc_345 voeg toe aan pred_gt tuples voor later
panc_365 (2, 188, 558, 558)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 188, 558, 558)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74, 92, 111, 130, 148], [0, 111, 223, 334], [0, 111, 223, 334]]
number of tiles: 144
using precomputed Gaussian
prediction done
suus panc_365 transposed
suus panc_365 not saving softmax
suus panc_365 voeg toe aan pred_gt tuples voor later
panc_375 (2, 117, 573, 573)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_375 transposed
suus panc_375 not saving softmax
suus panc_375 voeg toe aan pred_gt tuples voor later
panc_377 (2, 110, 551, 551)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
suus panc_377 transposed
suus panc_377 not saving softmax
suus panc_377 voeg toe aan pred_gt tuples voor later
panc_398 (2, 103, 593, 593)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 593, 593)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 92, 184, 277, 369], [0, 92, 184, 277, 369]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_398 transposed
suus panc_398 not saving softmax
suus panc_398 voeg toe aan pred_gt tuples voor later
panc_400 (2, 107, 617, 617)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 617, 617)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 98, 196, 295, 393], [0, 98, 196, 295, 393]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_400 transposed
suus panc_400 not saving softmax
suus panc_400 voeg toe aan pred_gt tuples voor later
panc_402 (2, 161, 463, 463)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 128
using precomputed Gaussian
prediction done
suus panc_402 transposed
suus panc_402 not saving softmax
suus panc_402 voeg toe aan pred_gt tuples voor later
panc_404 (2, 105, 561, 561)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 125
using precomputed Gaussian
prediction done
suus panc_404 transposed
suus panc_404 not saving softmax
suus panc_404 voeg toe aan pred_gt tuples voor later
panc_406 (2, 86, 569, 569)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_406 transposed
suus panc_406 not saving softmax
suus panc_406 voeg toe aan pred_gt tuples voor later
panc_418 (2, 88, 448, 448)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
suus panc_418 transposed
suus panc_418 not saving softmax
suus panc_418 voeg toe aan pred_gt tuples voor later
panc_419 (2, 88, 598, 598)
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
suus panc_419 transposed
suus panc_419 not saving softmax
suus panc_419 voeg toe aan pred_gt tuples voor later
2022-07-09 04:20:47.887875: finished prediction
2022-07-09 04:20:47.891923: evaluation of raw predictions
2022-07-09 04:20:57.600695: determining postprocessing
Foreground vs background
before: 0.8132097716802893
after:  0.813514524645536
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_080.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_186.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_243.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_304.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_377.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_004.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_093.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_197.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_246.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_308.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_398.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_019.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_122.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_201.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_253.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_311.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_400.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_028.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_129.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_209.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_255.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_333.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_402.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_051.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_159.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_226.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_261.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_336.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_404.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_066.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_165.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_228.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_268.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_345.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_406.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_069.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_170.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_234.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_275.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_365.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_418.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_077.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_180.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_235.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_276.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_375.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/validation_raw/panc_419.nii.gz
done
Done training all the folds! Now start the same command but with continue option, to generate log files


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='0', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 04:21:47.319482: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-09 04:21:52.021312: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-09 04:21:52.042828: The split file contains 5 splits.
2022-07-09 04:21:52.045053: Desired fold for training: 0
2022-07-09 04:21:52.047073: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-09 04:21:53.890598: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-09 04:22:03.784373: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-09 04:22:12.479275: Unable to plot network architecture:
2022-07-09 04:22:12.482318: local variable 'g' referenced before assignment
2022-07-09 04:22:12.484435: 
printing the network instead:

2022-07-09 04:22:12.486431: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-09 04:22:12.490952: 

2022-07-09 04:22:12.559307: saving checkpoint...
2022-07-09 04:22:13.617245: done, saving took 1.12 seconds
suus panc_024 voeg toe aan pred_gt tuples voor later
suus panc_040 voeg toe aan pred_gt tuples voor later
suus panc_048 voeg toe aan pred_gt tuples voor later
suus panc_058 voeg toe aan pred_gt tuples voor later
suus panc_067 voeg toe aan pred_gt tuples voor later
suus panc_075 voeg toe aan pred_gt tuples voor later
suus panc_086 voeg toe aan pred_gt tuples voor later
suus panc_101 voeg toe aan pred_gt tuples voor later
suus panc_105 voeg toe aan pred_gt tuples voor later
suus panc_107 voeg toe aan pred_gt tuples voor later
suus panc_113 voeg toe aan pred_gt tuples voor later
suus panc_119 voeg toe aan pred_gt tuples voor later
suus panc_131 voeg toe aan pred_gt tuples voor later
suus panc_137 voeg toe aan pred_gt tuples voor later
suus panc_148 voeg toe aan pred_gt tuples voor later
suus panc_157 voeg toe aan pred_gt tuples voor later
suus panc_182 voeg toe aan pred_gt tuples voor later
suus panc_191 voeg toe aan pred_gt tuples voor later
suus panc_193 voeg toe aan pred_gt tuples voor later
suus panc_194 voeg toe aan pred_gt tuples voor later
suus panc_204 voeg toe aan pred_gt tuples voor later
suus panc_207 voeg toe aan pred_gt tuples voor later
suus panc_211 voeg toe aan pred_gt tuples voor later
suus panc_215 voeg toe aan pred_gt tuples voor later
suus panc_219 voeg toe aan pred_gt tuples voor later
suus panc_224 voeg toe aan pred_gt tuples voor later
suus panc_236 voeg toe aan pred_gt tuples voor later
suus panc_241 voeg toe aan pred_gt tuples voor later
suus panc_256 voeg toe aan pred_gt tuples voor later
suus panc_285 voeg toe aan pred_gt tuples voor later
suus panc_286 voeg toe aan pred_gt tuples voor later
suus panc_294 voeg toe aan pred_gt tuples voor later
suus panc_296 voeg toe aan pred_gt tuples voor later
suus panc_302 voeg toe aan pred_gt tuples voor later
suus panc_305 voeg toe aan pred_gt tuples voor later
suus panc_321 voeg toe aan pred_gt tuples voor later
suus panc_325 voeg toe aan pred_gt tuples voor later
suus panc_364 voeg toe aan pred_gt tuples voor later
suus panc_367 voeg toe aan pred_gt tuples voor later
suus panc_369 voeg toe aan pred_gt tuples voor later
suus panc_374 voeg toe aan pred_gt tuples voor later
suus panc_386 voeg toe aan pred_gt tuples voor later
suus panc_393 voeg toe aan pred_gt tuples voor later
suus panc_399 voeg toe aan pred_gt tuples voor later
suus panc_410 voeg toe aan pred_gt tuples voor later
suus panc_412 voeg toe aan pred_gt tuples voor later
suus panc_413 voeg toe aan pred_gt tuples voor later
suus panc_415 voeg toe aan pred_gt tuples voor later
2022-07-09 04:22:14.592693: finished prediction
2022-07-09 04:22:14.615239: evaluation of raw predictions
2022-07-09 04:22:25.598735: determining postprocessing
Foreground vs background
before: 0.8308091468286505
after:  0.830795961313159
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='1', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 04:22:50.634686: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-09 04:22:51.053451: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-09 04:22:51.057660: The split file contains 5 splits.
2022-07-09 04:22:51.059843: Desired fold for training: 1
2022-07-09 04:22:51.061911: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-09 04:22:52.616495: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-09 04:23:01.021939: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-09 04:23:07.649575: Unable to plot network architecture:
2022-07-09 04:23:07.654756: local variable 'g' referenced before assignment
2022-07-09 04:23:07.659709: 
printing the network instead:

2022-07-09 04:23:07.663071: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-09 04:23:07.667544: 

2022-07-09 04:23:07.767846: saving checkpoint...
2022-07-09 04:23:08.853237: done, saving took 1.18 seconds
suus panc_025 voeg toe aan pred_gt tuples voor later
suus panc_035 voeg toe aan pred_gt tuples voor later
suus panc_041 voeg toe aan pred_gt tuples voor later
suus panc_045 voeg toe aan pred_gt tuples voor later
suus panc_052 voeg toe aan pred_gt tuples voor later
suus panc_056 voeg toe aan pred_gt tuples voor later
suus panc_078 voeg toe aan pred_gt tuples voor later
suus panc_091 voeg toe aan pred_gt tuples voor later
suus panc_103 voeg toe aan pred_gt tuples voor later
suus panc_106 voeg toe aan pred_gt tuples voor later
suus panc_114 voeg toe aan pred_gt tuples voor later
suus panc_117 voeg toe aan pred_gt tuples voor later
suus panc_125 voeg toe aan pred_gt tuples voor later
suus panc_135 voeg toe aan pred_gt tuples voor later
suus panc_140 voeg toe aan pred_gt tuples voor later
suus panc_166 voeg toe aan pred_gt tuples voor later
suus panc_178 voeg toe aan pred_gt tuples voor later
suus panc_187 voeg toe aan pred_gt tuples voor later
suus panc_199 voeg toe aan pred_gt tuples voor later
suus panc_200 voeg toe aan pred_gt tuples voor later
suus panc_249 voeg toe aan pred_gt tuples voor later
suus panc_262 voeg toe aan pred_gt tuples voor later
suus panc_264 voeg toe aan pred_gt tuples voor later
suus panc_266 voeg toe aan pred_gt tuples voor later
suus panc_269 voeg toe aan pred_gt tuples voor later
suus panc_280 voeg toe aan pred_gt tuples voor later
suus panc_283 voeg toe aan pred_gt tuples voor later
suus panc_293 voeg toe aan pred_gt tuples voor later
suus panc_301 voeg toe aan pred_gt tuples voor later
suus panc_310 voeg toe aan pred_gt tuples voor later
suus panc_312 voeg toe aan pred_gt tuples voor later
suus panc_313 voeg toe aan pred_gt tuples voor later
suus panc_323 voeg toe aan pred_gt tuples voor later
suus panc_329 voeg toe aan pred_gt tuples voor later
suus panc_342 voeg toe aan pred_gt tuples voor later
suus panc_343 voeg toe aan pred_gt tuples voor later
suus panc_351 voeg toe aan pred_gt tuples voor later
suus panc_354 voeg toe aan pred_gt tuples voor later
suus panc_358 voeg toe aan pred_gt tuples voor later
suus panc_361 voeg toe aan pred_gt tuples voor later
suus panc_366 voeg toe aan pred_gt tuples voor later
suus panc_370 voeg toe aan pred_gt tuples voor later
suus panc_380 voeg toe aan pred_gt tuples voor later
suus panc_388 voeg toe aan pred_gt tuples voor later
suus panc_389 voeg toe aan pred_gt tuples voor later
suus panc_405 voeg toe aan pred_gt tuples voor later
suus panc_414 voeg toe aan pred_gt tuples voor later
suus panc_421 voeg toe aan pred_gt tuples voor later
2022-07-09 04:23:09.696969: finished prediction
2022-07-09 04:23:09.699439: evaluation of raw predictions
2022-07-09 04:23:21.392698: determining postprocessing
Foreground vs background
before: 0.8156157988880741
after:  0.8156541780041374
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='2', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 04:23:49.886330: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-09 04:23:50.357374: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-09 04:23:50.361830: The split file contains 5 splits.
2022-07-09 04:23:50.364038: Desired fold for training: 2
2022-07-09 04:23:50.366316: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-09 04:23:52.032798: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-09 04:24:01.404041: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-09 04:24:10.020239: Unable to plot network architecture:
2022-07-09 04:24:10.051245: local variable 'g' referenced before assignment
2022-07-09 04:24:10.073254: 
printing the network instead:

2022-07-09 04:24:10.095242: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-09 04:24:10.117221: 

2022-07-09 04:24:10.210471: saving checkpoint...
2022-07-09 04:24:11.524298: done, saving took 1.40 seconds
suus panc_005 voeg toe aan pred_gt tuples voor later
suus panc_015 voeg toe aan pred_gt tuples voor later
suus panc_021 voeg toe aan pred_gt tuples voor later
suus panc_032 voeg toe aan pred_gt tuples voor later
suus panc_037 voeg toe aan pred_gt tuples voor later
suus panc_043 voeg toe aan pred_gt tuples voor later
suus panc_055 voeg toe aan pred_gt tuples voor later
suus panc_061 voeg toe aan pred_gt tuples voor later
suus panc_084 voeg toe aan pred_gt tuples voor later
suus panc_094 voeg toe aan pred_gt tuples voor later
suus panc_096 voeg toe aan pred_gt tuples voor later
suus panc_102 voeg toe aan pred_gt tuples voor later
suus panc_124 voeg toe aan pred_gt tuples voor later
suus panc_138 voeg toe aan pred_gt tuples voor later
suus panc_167 voeg toe aan pred_gt tuples voor later
suus panc_175 voeg toe aan pred_gt tuples voor later
suus panc_179 voeg toe aan pred_gt tuples voor later
suus panc_183 voeg toe aan pred_gt tuples voor later
suus panc_196 voeg toe aan pred_gt tuples voor later
suus panc_198 voeg toe aan pred_gt tuples voor later
suus panc_203 voeg toe aan pred_gt tuples voor later
suus panc_222 voeg toe aan pred_gt tuples voor later
suus panc_230 voeg toe aan pred_gt tuples voor later
suus panc_231 voeg toe aan pred_gt tuples voor later
suus panc_239 voeg toe aan pred_gt tuples voor later
suus panc_244 voeg toe aan pred_gt tuples voor later
suus panc_247 voeg toe aan pred_gt tuples voor later
suus panc_254 voeg toe aan pred_gt tuples voor later
suus panc_267 voeg toe aan pred_gt tuples voor later
suus panc_270 voeg toe aan pred_gt tuples voor later
suus panc_274 voeg toe aan pred_gt tuples voor later
suus panc_277 voeg toe aan pred_gt tuples voor later
suus panc_278 voeg toe aan pred_gt tuples voor later
suus panc_289 voeg toe aan pred_gt tuples voor later
suus panc_290 voeg toe aan pred_gt tuples voor later
suus panc_291 voeg toe aan pred_gt tuples voor later
suus panc_297 voeg toe aan pred_gt tuples voor later
suus panc_299 voeg toe aan pred_gt tuples voor later
suus panc_303 voeg toe aan pred_gt tuples voor later
suus panc_320 voeg toe aan pred_gt tuples voor later
suus panc_328 voeg toe aan pred_gt tuples voor later
suus panc_331 voeg toe aan pred_gt tuples voor later
suus panc_339 voeg toe aan pred_gt tuples voor later
suus panc_344 voeg toe aan pred_gt tuples voor later
suus panc_355 voeg toe aan pred_gt tuples voor later
suus panc_387 voeg toe aan pred_gt tuples voor later
suus panc_392 voeg toe aan pred_gt tuples voor later
suus panc_395 voeg toe aan pred_gt tuples voor later
2022-07-09 04:24:12.393195: finished prediction
2022-07-09 04:24:12.395548: evaluation of raw predictions
2022-07-09 04:24:21.669844: determining postprocessing
Foreground vs background
before: 0.8296315632359018
after:  0.8296548276156323
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='3', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 04:24:49.827620: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-09 04:24:50.311787: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-09 04:24:50.316297: The split file contains 5 splits.
2022-07-09 04:24:50.318419: Desired fold for training: 3
2022-07-09 04:24:50.320401: This split has 191 training and 48 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-09 04:24:51.884698: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-09 04:25:00.274295: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-09 04:25:07.988097: Unable to plot network architecture:
2022-07-09 04:25:08.006879: local variable 'g' referenced before assignment
2022-07-09 04:25:08.038125: 
printing the network instead:

2022-07-09 04:25:08.065231: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-09 04:25:08.099085: 

2022-07-09 04:25:08.247113: saving checkpoint...
2022-07-09 04:25:09.494322: done, saving took 1.38 seconds
suus panc_001 voeg toe aan pred_gt tuples voor later
suus panc_010 voeg toe aan pred_gt tuples voor later
suus panc_016 voeg toe aan pred_gt tuples voor later
suus panc_018 voeg toe aan pred_gt tuples voor later
suus panc_029 voeg toe aan pred_gt tuples voor later
suus panc_049 voeg toe aan pred_gt tuples voor later
suus panc_050 voeg toe aan pred_gt tuples voor later
suus panc_070 voeg toe aan pred_gt tuples voor later
suus panc_081 voeg toe aan pred_gt tuples voor later
suus panc_083 voeg toe aan pred_gt tuples voor later
suus panc_087 voeg toe aan pred_gt tuples voor later
suus panc_098 voeg toe aan pred_gt tuples voor later
suus panc_110 voeg toe aan pred_gt tuples voor later
suus panc_120 voeg toe aan pred_gt tuples voor later
suus panc_126 voeg toe aan pred_gt tuples voor later
suus panc_127 voeg toe aan pred_gt tuples voor later
suus panc_130 voeg toe aan pred_gt tuples voor later
suus panc_149 voeg toe aan pred_gt tuples voor later
suus panc_158 voeg toe aan pred_gt tuples voor later
suus panc_160 voeg toe aan pred_gt tuples voor later
suus panc_169 voeg toe aan pred_gt tuples voor later
suus panc_172 voeg toe aan pred_gt tuples voor later
suus panc_173 voeg toe aan pred_gt tuples voor later
suus panc_181 voeg toe aan pred_gt tuples voor later
suus panc_212 voeg toe aan pred_gt tuples voor later
suus panc_214 voeg toe aan pred_gt tuples voor later
suus panc_229 voeg toe aan pred_gt tuples voor later
suus panc_242 voeg toe aan pred_gt tuples voor later
suus panc_279 voeg toe aan pred_gt tuples voor later
suus panc_284 voeg toe aan pred_gt tuples voor later
suus panc_292 voeg toe aan pred_gt tuples voor later
suus panc_309 voeg toe aan pred_gt tuples voor later
suus panc_316 voeg toe aan pred_gt tuples voor later
suus panc_326 voeg toe aan pred_gt tuples voor later
suus panc_327 voeg toe aan pred_gt tuples voor later
suus panc_330 voeg toe aan pred_gt tuples voor later
suus panc_347 voeg toe aan pred_gt tuples voor later
suus panc_348 voeg toe aan pred_gt tuples voor later
suus panc_350 voeg toe aan pred_gt tuples voor later
suus panc_356 voeg toe aan pred_gt tuples voor later
suus panc_357 voeg toe aan pred_gt tuples voor later
suus panc_372 voeg toe aan pred_gt tuples voor later
suus panc_376 voeg toe aan pred_gt tuples voor later
suus panc_379 voeg toe aan pred_gt tuples voor later
suus panc_382 voeg toe aan pred_gt tuples voor later
suus panc_385 voeg toe aan pred_gt tuples voor later
suus panc_401 voeg toe aan pred_gt tuples voor later
suus panc_409 voeg toe aan pred_gt tuples voor later
2022-07-09 04:25:11.001323: finished prediction
2022-07-09 04:25:11.034236: evaluation of raw predictions
2022-07-09 04:25:23.603145: determining postprocessing
Foreground vs background
before: 0.807115899194339
after:  0.8032010968074298
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
done


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Suus0 - run_training. Args:
Namespace(network='3d_fullres', network_trainer='nnUNetTrainerV2', task='510', fold='4', validation_only=False, continue_training=True, p='nnUNetPlansv2.1', use_compressed_data=False, deterministic=False, npz=False, find_lr=False, valbest=False, fp32=False, val_folder='validation_raw', disable_saving=False, disable_postprocessing_on_folds=False, val_disable_overwrite=False, disable_next_stage_pred=False, pretrained_weights=None)
###############################################
I am running the following nnUNet: 3d_fullres
My trainer class is:  <class 'nnunet.training.network_training.nnUNetTrainerV2.nnUNetTrainerV2'>
For that I will be using the following configuration:
num_classes:  1
modalities:  {0: 'CT'}
use_mask_for_norm OrderedDict([(0, False)])
keep_only_largest_region None
min_region_size_per_class None
min_size_per_class None
normalization_schemes OrderedDict([(0, 'CT')])
stages...

stage:  0
{'batch_size': 2, 'num_pool_per_axis': [4, 5, 5], 'patch_size': array([ 64, 192, 192]), 'median_patient_size_in_voxels': array([ 93, 318, 318]), 'current_spacing': array([2.5757525 , 1.29418872, 1.29418872]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': False, 'pool_op_kernel_sizes': [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

stage:  1
{'batch_size': 2, 'num_pool_per_axis': [3, 5, 5], 'patch_size': array([ 40, 224, 224]), 'median_patient_size_in_voxels': array([ 96, 512, 512]), 'current_spacing': array([2.5       , 0.80273402, 0.80273402]), 'original_spacing': array([2.5       , 0.80273402, 0.80273402]), 'do_dummy_2D_data_aug': True, 'pool_op_kernel_sizes': [[1, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 2, 2]], 'conv_kernel_sizes': [[1, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3], [3, 3, 3]]}

I am using stage 1 from these plans
I am using batch dice + CE loss

I am using data from this folder:  /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/nnUNetData_plans_v2.1
###############################################
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 04:25:58.300719: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
loading dataset
loading all case properties
2022-07-09 04:25:58.712825: Using splits from existing split file: /exports/lkeb-hpc/smaijer/data/nnUNet_preprocessed/Task510/splits_final.pkl
2022-07-09 04:25:58.765141: The split file contains 5 splits.
2022-07-09 04:25:58.784027: Desired fold for training: 4
2022-07-09 04:25:58.790273: This split has 192 training and 47 validation cases.
unpacking dataset
done
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
SuusA - Load checkpoint (final, latest, best)
2022-07-09 04:26:00.494185: loading checkpoint /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model train= True
SuusB run_training - zet learning rate als  
2022-07-09 04:26:03.468628: Suus1 maybe_update_lr lr: 0.0
SuusC - run_training!
using pin_memory on device 0
using pin_memory on device 0
Suus for now disable cause it breaks the logs
2022-07-09 04:26:13.682991: Unable to plot network architecture:
2022-07-09 04:26:13.704244: local variable 'g' referenced before assignment
2022-07-09 04:26:13.724228: 
printing the network instead:

2022-07-09 04:26:13.737248: Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
2022-07-09 04:26:13.759123: 

2022-07-09 04:26:13.876207: saving checkpoint...
2022-07-09 04:26:14.972398: done, saving took 1.19 seconds
suus panc_004 voeg toe aan pred_gt tuples voor later
suus panc_019 voeg toe aan pred_gt tuples voor later
suus panc_028 voeg toe aan pred_gt tuples voor later
suus panc_051 voeg toe aan pred_gt tuples voor later
suus panc_066 voeg toe aan pred_gt tuples voor later
suus panc_069 voeg toe aan pred_gt tuples voor later
suus panc_077 voeg toe aan pred_gt tuples voor later
suus panc_080 voeg toe aan pred_gt tuples voor later
suus panc_093 voeg toe aan pred_gt tuples voor later
suus panc_122 voeg toe aan pred_gt tuples voor later
suus panc_129 voeg toe aan pred_gt tuples voor later
suus panc_159 voeg toe aan pred_gt tuples voor later
suus panc_165 voeg toe aan pred_gt tuples voor later
suus panc_170 voeg toe aan pred_gt tuples voor later
suus panc_180 voeg toe aan pred_gt tuples voor later
suus panc_186 voeg toe aan pred_gt tuples voor later
suus panc_197 voeg toe aan pred_gt tuples voor later
suus panc_201 voeg toe aan pred_gt tuples voor later
suus panc_209 voeg toe aan pred_gt tuples voor later
suus panc_226 voeg toe aan pred_gt tuples voor later
suus panc_228 voeg toe aan pred_gt tuples voor later
suus panc_234 voeg toe aan pred_gt tuples voor later
suus panc_235 voeg toe aan pred_gt tuples voor later
suus panc_243 voeg toe aan pred_gt tuples voor later
suus panc_246 voeg toe aan pred_gt tuples voor later
suus panc_253 voeg toe aan pred_gt tuples voor later
suus panc_255 voeg toe aan pred_gt tuples voor later
suus panc_261 voeg toe aan pred_gt tuples voor later
suus panc_268 voeg toe aan pred_gt tuples voor later
suus panc_275 voeg toe aan pred_gt tuples voor later
suus panc_276 voeg toe aan pred_gt tuples voor later
suus panc_304 voeg toe aan pred_gt tuples voor later
suus panc_308 voeg toe aan pred_gt tuples voor later
suus panc_311 voeg toe aan pred_gt tuples voor later
suus panc_333 voeg toe aan pred_gt tuples voor later
suus panc_336 voeg toe aan pred_gt tuples voor later
suus panc_345 voeg toe aan pred_gt tuples voor later
suus panc_365 voeg toe aan pred_gt tuples voor later
suus panc_375 voeg toe aan pred_gt tuples voor later
suus panc_377 voeg toe aan pred_gt tuples voor later
suus panc_398 voeg toe aan pred_gt tuples voor later
suus panc_400 voeg toe aan pred_gt tuples voor later
suus panc_402 voeg toe aan pred_gt tuples voor later
suus panc_404 voeg toe aan pred_gt tuples voor later
suus panc_406 voeg toe aan pred_gt tuples voor later
suus panc_418 voeg toe aan pred_gt tuples voor later
suus panc_419 voeg toe aan pred_gt tuples voor later
2022-07-09 04:26:15.279008: finished prediction
2022-07-09 04:26:15.281257: evaluation of raw predictions
2022-07-09 04:26:23.014350: determining postprocessing
Foreground vs background
before: 0.8132097716802893
after:  0.813514524645536
Removing all but the largest foreground region improved results!
for_which_classes [1]
min_valid_object_sizes None
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[[1]]
min_object_sizes
None
done
Start postprocessing..


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Foreground vs background
before: 0.8193018194980247
after:  0.8185852456814954
Only one class present, no need to do each class separately as this is covered in fg vs bg
done
for which classes:
[]
min_object_sizes
None
done
Done postprocessing! Now start inferencing its own train and test files.


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 239 unique case ids, here are some examples: ['panc_284' 'panc_309' 'panc_214' 'panc_345' 'panc_055' 'panc_032'
 'panc_001' 'panc_310' 'panc_117' 'panc_312']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 239
number of cases that still need to be predicted: 239
emptying cuda cache
loading parameters for folds, None
folds is None so we will automatically look for output folders (not using 'all'!)
found the following folds:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4']
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 04:28:43.645965: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
starting prediction...
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_015.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
computing Gaussian
done
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_016.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_001.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 94, 187], [0, 94, 187]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 94, 187], [0, 94, 187]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 94, 187], [0, 94, 187]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 94, 187], [0, 94, 187]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 94, 187], [0, 94, 187]]
number of tiles: 45
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_004.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_005.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 585, 585)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 90, 180, 271, 361], [0, 90, 180, 271, 361]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 585, 585)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 90, 180, 271, 361], [0, 90, 180, 271, 361]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 585, 585)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 90, 180, 271, 361], [0, 90, 180, 271, 361]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 585, 585)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 90, 180, 271, 361], [0, 90, 180, 271, 361]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 585, 585)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 90, 180, 271, 361], [0, 90, 180, 271, 361]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_025.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 447, 447)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 112, 223], [0, 112, 223]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 447, 447)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 112, 223], [0, 112, 223]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 447, 447)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 112, 223], [0, 112, 223]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 447, 447)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 112, 223], [0, 112, 223]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 447, 447)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 112, 223], [0, 112, 223]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_028.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_010.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_018.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_019.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_021.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_040.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 526, 526)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 101, 201, 302], [0, 101, 201, 302]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 526, 526)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 101, 201, 302], [0, 101, 201, 302]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 526, 526)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 101, 201, 302], [0, 101, 201, 302]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 526, 526)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 101, 201, 302], [0, 101, 201, 302]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 526, 526)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 101, 201, 302], [0, 101, 201, 302]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_041.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_024.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 507, 507)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 507, 507)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 507, 507)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 507, 507)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 507, 507)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 94, 189, 283], [0, 94, 189, 283]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_029.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_032.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 589, 589)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 91, 182, 274, 365], [0, 91, 182, 274, 365]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 589, 589)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 91, 182, 274, 365], [0, 91, 182, 274, 365]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 589, 589)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 91, 182, 274, 365], [0, 91, 182, 274, 365]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 589, 589)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 91, 182, 274, 365], [0, 91, 182, 274, 365]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 589, 589)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 91, 182, 274, 365], [0, 91, 182, 274, 365]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_035.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 391, 391)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 84, 167], [0, 84, 167]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 391, 391)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 84, 167], [0, 84, 167]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 391, 391)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 84, 167], [0, 84, 167]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 391, 391)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 84, 167], [0, 84, 167]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 391, 391)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 84, 167], [0, 84, 167]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_050.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_051.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_037.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_043.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 476, 476)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38], [0, 84, 168, 252], [0, 84, 168, 252]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 476, 476)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38], [0, 84, 168, 252], [0, 84, 168, 252]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 476, 476)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38], [0, 84, 168, 252], [0, 84, 168, 252]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 476, 476)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38], [0, 84, 168, 252], [0, 84, 168, 252]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 78, 476, 476)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38], [0, 84, 168, 252], [0, 84, 168, 252]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_045.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_048.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 619, 619)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 99, 198, 296, 395], [0, 99, 198, 296, 395]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 619, 619)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 99, 198, 296, 395], [0, 99, 198, 296, 395]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 619, 619)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 99, 198, 296, 395], [0, 99, 198, 296, 395]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 619, 619)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 99, 198, 296, 395], [0, 99, 198, 296, 395]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 619, 619)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 99, 198, 296, 395], [0, 99, 198, 296, 395]]
number of tiles: 150
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_061.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_066.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 519, 519)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 98, 197, 295], [0, 98, 197, 295]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 519, 519)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 98, 197, 295], [0, 98, 197, 295]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 519, 519)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 98, 197, 295], [0, 98, 197, 295]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 519, 519)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 98, 197, 295], [0, 98, 197, 295]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 519, 519)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 98, 197, 295], [0, 98, 197, 295]]
number of tiles: 144
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_049.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_052.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_055.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_056.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_077.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_078.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_058.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 225
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_067.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_069.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 194, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96, 116, 135, 154], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 194, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96, 116, 135, 154], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 194, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96, 116, 135, 154], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 194, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96, 116, 135, 154], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 194, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96, 116, 135, 154], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 144
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_070.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_086.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 11], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 50
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 11], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 50
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 11], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 50
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 11], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 50
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 51, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 11], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 50
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_087.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 154, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114], [0, 94, 187], [0, 94, 187]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 154, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114], [0, 94, 187], [0, 94, 187]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 154, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114], [0, 94, 187], [0, 94, 187]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 154, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114], [0, 94, 187], [0, 94, 187]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 154, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114], [0, 94, 187], [0, 94, 187]]
number of tiles: 63
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_075.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 60, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 32
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_080.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 514, 514)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 97, 193, 290], [0, 97, 193, 290]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_081.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_083.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_098.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 147, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 71, 89, 107], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 175
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 147, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 71, 89, 107], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 175
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 147, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 71, 89, 107], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 175
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 147, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 71, 89, 107], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 175
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 147, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 71, 89, 107], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 175
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_101.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 144
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_084.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_091.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 71, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_093.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_094.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_107.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_110.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_096.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51, 68], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51, 68], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51, 68], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51, 68], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 108, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51, 68], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_102.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 506, 506)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 188, 282], [0, 94, 188, 282]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 506, 506)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 188, 282], [0, 94, 188, 282]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 506, 506)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 188, 282], [0, 94, 188, 282]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 506, 506)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 188, 282], [0, 94, 188, 282]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 506, 506)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 188, 282], [0, 94, 188, 282]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_103.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 422, 422)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 99, 198], [0, 99, 198]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 422, 422)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 99, 198], [0, 99, 198]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 422, 422)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 99, 198], [0, 99, 198]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 422, 422)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 99, 198], [0, 99, 198]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 422, 422)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 99, 198], [0, 99, 198]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_105.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 196, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78, 98, 117, 136, 156], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 144
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_120.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 166, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126], [0, 106, 212], [0, 106, 212]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 166, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126], [0, 106, 212], [0, 106, 212]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 166, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126], [0, 106, 212], [0, 106, 212]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 166, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126], [0, 106, 212], [0, 106, 212]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 166, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126], [0, 106, 212], [0, 106, 212]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_122.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_106.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_113.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 440, 440)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 108, 216], [0, 108, 216]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 440, 440)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 108, 216], [0, 108, 216]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 440, 440)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 108, 216], [0, 108, 216]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 440, 440)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 108, 216], [0, 108, 216]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 440, 440)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 108, 216], [0, 108, 216]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_114.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 451, 451)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 76, 151, 227], [0, 76, 151, 227]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 451, 451)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 76, 151, 227], [0, 76, 151, 227]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 451, 451)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 76, 151, 227], [0, 76, 151, 227]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 451, 451)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 76, 151, 227], [0, 76, 151, 227]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 451, 451)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 76, 151, 227], [0, 76, 151, 227]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_117.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 421, 421)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 98, 197], [0, 98, 197]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 421, 421)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 98, 197], [0, 98, 197]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 421, 421)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 98, 197], [0, 98, 197]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 421, 421)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 98, 197], [0, 98, 197]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 421, 421)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 98, 197], [0, 98, 197]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_129.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_130.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 156, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 77, 97, 116], [0, 98, 195], [0, 98, 195]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 156, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 77, 97, 116], [0, 98, 195], [0, 98, 195]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 156, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 77, 97, 116], [0, 98, 195], [0, 98, 195]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 156, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 77, 97, 116], [0, 98, 195], [0, 98, 195]]
number of tiles: 63
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 156, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 77, 97, 116], [0, 98, 195], [0, 98, 195]]
number of tiles: 63
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_119.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_124.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 82, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 28, 42], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_125.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 594, 594)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 92, 185, 278, 370], [0, 92, 185, 278, 370]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_126.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_140.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_148.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_127.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 554, 554)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 110, 220, 330], [0, 110, 220, 330]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 554, 554)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 110, 220, 330], [0, 110, 220, 330]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 554, 554)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 110, 220, 330], [0, 110, 220, 330]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 554, 554)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 110, 220, 330], [0, 110, 220, 330]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 554, 554)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 110, 220, 330], [0, 110, 220, 330]]
number of tiles: 96
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_131.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 59, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 32
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_135.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_137.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_160.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_165.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_138.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_149.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_157.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_158.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 132, 605, 605)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 74, 92], [0, 95, 190, 286, 381], [0, 95, 190, 286, 381]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 132, 605, 605)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 74, 92], [0, 95, 190, 286, 381], [0, 95, 190, 286, 381]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 132, 605, 605)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 74, 92], [0, 95, 190, 286, 381], [0, 95, 190, 286, 381]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 132, 605, 605)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 74, 92], [0, 95, 190, 286, 381], [0, 95, 190, 286, 381]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 132, 605, 605)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 74, 92], [0, 95, 190, 286, 381], [0, 95, 190, 286, 381]]
number of tiles: 150
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_172.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_173.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 442, 442)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 109, 218], [0, 109, 218]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 442, 442)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 109, 218], [0, 109, 218]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 442, 442)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 109, 218], [0, 109, 218]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 442, 442)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 109, 218], [0, 109, 218]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 442, 442)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 109, 218], [0, 109, 218]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_159.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 98, 195], [0, 98, 195]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 98, 195], [0, 98, 195]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 98, 195], [0, 98, 195]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 98, 195], [0, 98, 195]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 90, 419, 419)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50], [0, 98, 195], [0, 98, 195]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_166.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 590, 590)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 92, 183, 274, 366], [0, 92, 183, 274, 366]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_167.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 485, 485)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 87, 174, 261], [0, 87, 174, 261]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 485, 485)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 87, 174, 261], [0, 87, 174, 261]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 485, 485)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 87, 174, 261], [0, 87, 174, 261]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 485, 485)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 87, 174, 261], [0, 87, 174, 261]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 485, 485)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 87, 174, 261], [0, 87, 174, 261]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_169.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_181.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_182.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 103, 206], [0, 103, 206]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 103, 206], [0, 103, 206]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 103, 206], [0, 103, 206]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 103, 206], [0, 103, 206]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 103, 206], [0, 103, 206]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_170.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_175.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_178.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_179.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 501, 501)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 92, 185, 277], [0, 92, 185, 277]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 501, 501)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 92, 185, 277], [0, 92, 185, 277]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 501, 501)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 92, 185, 277], [0, 92, 185, 277]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 501, 501)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 92, 185, 277], [0, 92, 185, 277]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 501, 501)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 92, 185, 277], [0, 92, 185, 277]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_193.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_194.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_180.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_183.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 524, 524)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 100, 200, 300], [0, 100, 200, 300]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_186.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_187.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_200.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 599, 599)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 188, 281, 375], [0, 94, 188, 281, 375]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 599, 599)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 188, 281, 375], [0, 94, 188, 281, 375]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 599, 599)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 188, 281, 375], [0, 94, 188, 281, 375]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 599, 599)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 188, 281, 375], [0, 94, 188, 281, 375]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 599, 599)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 188, 281, 375], [0, 94, 188, 281, 375]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_201.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_191.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 32
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 57, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 32
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_196.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_197.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_198.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_211.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 583, 583)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 90, 180, 269, 359], [0, 90, 180, 269, 359]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 583, 583)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 90, 180, 269, 359], [0, 90, 180, 269, 359]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 583, 583)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 90, 180, 269, 359], [0, 90, 180, 269, 359]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 583, 583)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 90, 180, 269, 359], [0, 90, 180, 269, 359]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 583, 583)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 90, 180, 269, 359], [0, 90, 180, 269, 359]]
number of tiles: 150
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_212.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 557, 557)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222, 333], [0, 111, 222, 333]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 557, 557)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222, 333], [0, 111, 222, 333]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 557, 557)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222, 333], [0, 111, 222, 333]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 557, 557)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222, 333], [0, 111, 222, 333]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 557, 557)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222, 333], [0, 111, 222, 333]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_199.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 512, 512)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 96, 192, 288], [0, 96, 192, 288]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_203.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 106, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 50, 66], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_204.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 94, 187], [0, 94, 187]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_207.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 468, 468)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 81, 163, 244], [0, 81, 163, 244]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_224.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_226.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 528, 528)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 101, 203, 304], [0, 101, 203, 304]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 528, 528)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 101, 203, 304], [0, 101, 203, 304]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 528, 528)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 101, 203, 304], [0, 101, 203, 304]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 528, 528)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 101, 203, 304], [0, 101, 203, 304]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 528, 528)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 101, 203, 304], [0, 101, 203, 304]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_209.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 613, 613)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 97, 194, 292, 389], [0, 97, 194, 292, 389]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 613, 613)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 97, 194, 292, 389], [0, 97, 194, 292, 389]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 613, 613)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 97, 194, 292, 389], [0, 97, 194, 292, 389]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 613, 613)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 97, 194, 292, 389], [0, 97, 194, 292, 389]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 613, 613)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 97, 194, 292, 389], [0, 97, 194, 292, 389]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_214.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 542, 542)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 106, 212, 318], [0, 106, 212, 318]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 542, 542)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 106, 212, 318], [0, 106, 212, 318]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 542, 542)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 106, 212, 318], [0, 106, 212, 318]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 542, 542)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 106, 212, 318], [0, 106, 212, 318]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 542, 542)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 106, 212, 318], [0, 106, 212, 318]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_215.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 483, 483)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 173, 259], [0, 86, 173, 259]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 483, 483)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 173, 259], [0, 86, 173, 259]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 483, 483)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 173, 259], [0, 86, 173, 259]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 483, 483)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 173, 259], [0, 86, 173, 259]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 483, 483)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 173, 259], [0, 86, 173, 259]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_219.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 225
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_234.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_235.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_222.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 386, 386)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 81, 162], [0, 81, 162]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 386, 386)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 81, 162], [0, 81, 162]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 386, 386)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 81, 162], [0, 81, 162]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 386, 386)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 81, 162], [0, 81, 162]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 77, 386, 386)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37], [0, 81, 162], [0, 81, 162]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_228.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_229.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_230.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_243.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_244.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 579, 579)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 89, 178, 266, 355], [0, 89, 178, 266, 355]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 579, 579)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 89, 178, 266, 355], [0, 89, 178, 266, 355]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 579, 579)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 89, 178, 266, 355], [0, 89, 178, 266, 355]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 579, 579)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 89, 178, 266, 355], [0, 89, 178, 266, 355]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 579, 579)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 89, 178, 266, 355], [0, 89, 178, 266, 355]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_231.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 505, 505)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 281], [0, 94, 187, 281]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_236.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_239.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_241.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_254.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_255.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_242.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 556, 556)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 111, 221, 332], [0, 111, 221, 332]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_246.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_247.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 411, 411)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 94, 187], [0, 94, 187]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_249.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 123, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50, 66, 83], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 123, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50, 66, 83], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 123, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50, 66, 83], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 123, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50, 66, 83], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 123, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 33, 50, 66, 83], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 150
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_266.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_267.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 434, 434)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 105, 210], [0, 105, 210]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 434, 434)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 105, 210], [0, 105, 210]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 434, 434)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 105, 210], [0, 105, 210]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 434, 434)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 105, 210], [0, 105, 210]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 434, 434)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 105, 210], [0, 105, 210]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_253.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 94, 491, 491)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54], [0, 89, 178, 267], [0, 89, 178, 267]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_256.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 493, 493)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 90, 179, 269], [0, 90, 179, 269]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_261.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 446, 446)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222], [0, 111, 222]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 446, 446)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222], [0, 111, 222]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 446, 446)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222], [0, 111, 222]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 446, 446)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222], [0, 111, 222]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 446, 446)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 111, 222], [0, 111, 222]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_262.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 76, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_275.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 478, 478)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 85, 169, 254], [0, 85, 169, 254]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 478, 478)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 85, 169, 254], [0, 85, 169, 254]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 478, 478)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 85, 169, 254], [0, 85, 169, 254]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 478, 478)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 85, 169, 254], [0, 85, 169, 254]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 478, 478)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 85, 169, 254], [0, 85, 169, 254]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_276.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_264.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 534, 534)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 103, 207, 310], [0, 103, 207, 310]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 534, 534)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 103, 207, 310], [0, 103, 207, 310]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 534, 534)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 103, 207, 310], [0, 103, 207, 310]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 534, 534)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 103, 207, 310], [0, 103, 207, 310]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 534, 534)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 103, 207, 310], [0, 103, 207, 310]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_268.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 67, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_269.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_270.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 511, 511)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 96, 191, 287], [0, 96, 191, 287]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_283.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 452, 452)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 76, 152, 228], [0, 76, 152, 228]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_284.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_274.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 115, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 56, 75], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 115, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 56, 75], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 115, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 56, 75], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 115, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 56, 75], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 115, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 56, 75], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_277.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_278.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 562, 562)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 84, 169, 254, 338], [0, 84, 169, 254, 338]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 562, 562)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 84, 169, 254, 338], [0, 84, 169, 254, 338]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 562, 562)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 84, 169, 254, 338], [0, 84, 169, 254, 338]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 562, 562)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 84, 169, 254, 338], [0, 84, 169, 254, 338]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 562, 562)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 84, 169, 254, 338], [0, 84, 169, 254, 338]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_279.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40], [0, 112, 224], [0, 112, 224]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40], [0, 112, 224], [0, 112, 224]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40], [0, 112, 224], [0, 112, 224]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40], [0, 112, 224], [0, 112, 224]]
number of tiles: 27
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 80, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40], [0, 112, 224], [0, 112, 224]]
number of tiles: 27
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_291.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_292.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 533, 533)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 103, 206, 309], [0, 103, 206, 309]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 533, 533)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 103, 206, 309], [0, 103, 206, 309]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 533, 533)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 103, 206, 309], [0, 103, 206, 309]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 533, 533)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 103, 206, 309], [0, 103, 206, 309]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 533, 533)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 103, 206, 309], [0, 103, 206, 309]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_280.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_285.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_286.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_289.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 439, 439)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 108, 215], [0, 108, 215]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 439, 439)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 108, 215], [0, 108, 215]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 439, 439)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 108, 215], [0, 108, 215]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 439, 439)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 108, 215], [0, 108, 215]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 439, 439)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 108, 215], [0, 108, 215]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_299.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 106, 212], [0, 106, 212]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 106, 212], [0, 106, 212]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 106, 212], [0, 106, 212]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 106, 212], [0, 106, 212]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 436, 436)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 106, 212], [0, 106, 212]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_301.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_290.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_293.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_294.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_296.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_308.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 614, 614)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 98, 195, 292, 390], [0, 98, 195, 292, 390]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 614, 614)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 98, 195, 292, 390], [0, 98, 195, 292, 390]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 614, 614)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 98, 195, 292, 390], [0, 98, 195, 292, 390]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 614, 614)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 98, 195, 292, 390], [0, 98, 195, 292, 390]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 614, 614)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 98, 195, 292, 390], [0, 98, 195, 292, 390]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_309.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_297.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 576, 576)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 88, 176, 264, 352], [0, 88, 176, 264, 352]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 576, 576)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 88, 176, 264, 352], [0, 88, 176, 264, 352]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 576, 576)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 88, 176, 264, 352], [0, 88, 176, 264, 352]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 576, 576)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 88, 176, 264, 352], [0, 88, 176, 264, 352]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 576, 576)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 88, 176, 264, 352], [0, 88, 176, 264, 352]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_302.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 604, 604)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 190, 285, 380], [0, 95, 190, 285, 380]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 604, 604)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 190, 285, 380], [0, 95, 190, 285, 380]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 604, 604)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 190, 285, 380], [0, 95, 190, 285, 380]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 604, 604)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 190, 285, 380], [0, 95, 190, 285, 380]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 83, 604, 604)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 29, 43], [0, 95, 190, 285, 380], [0, 95, 190, 285, 380]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_303.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 113, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_304.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_316.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 462, 462)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 79, 159, 238], [0, 79, 159, 238]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 462, 462)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 79, 159, 238], [0, 79, 159, 238]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 462, 462)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 79, 159, 238], [0, 79, 159, 238]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 462, 462)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 79, 159, 238], [0, 79, 159, 238]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 462, 462)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 79, 159, 238], [0, 79, 159, 238]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_320.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_305.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 73, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_310.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_311.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 87, 488, 488)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 47], [0, 88, 176, 264], [0, 88, 176, 264]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_312.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 75, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 75
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_327.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_328.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_313.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_321.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_323.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 612, 612)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 97, 194, 291, 388], [0, 97, 194, 291, 388]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 612, 612)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 97, 194, 291, 388], [0, 97, 194, 291, 388]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 612, 612)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 97, 194, 291, 388], [0, 97, 194, 291, 388]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 612, 612)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 97, 194, 291, 388], [0, 97, 194, 291, 388]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 612, 612)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 97, 194, 291, 388], [0, 97, 194, 291, 388]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_325.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_336.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 92, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_339.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 592, 592)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 92, 184, 276, 368], [0, 92, 184, 276, 368]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_326.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 607, 607)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 192, 287, 383], [0, 96, 192, 287, 383]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_329.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 75
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 75
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_330.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_331.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 510, 510)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 95, 191, 286], [0, 95, 191, 286]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_347.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 471, 471)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 82, 165, 247], [0, 82, 165, 247]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_348.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_333.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_342.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_343.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_344.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 492, 492)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 89, 179, 268], [0, 89, 179, 268]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 492, 492)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 89, 179, 268], [0, 89, 179, 268]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 492, 492)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 89, 179, 268], [0, 89, 179, 268]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 492, 492)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 89, 179, 268], [0, 89, 179, 268]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 112, 492, 492)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72], [0, 89, 179, 268], [0, 89, 179, 268]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_356.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 168, 432, 432)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 73, 91, 110, 128], [0, 104, 208], [0, 104, 208]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 168, 432, 432)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 73, 91, 110, 128], [0, 104, 208], [0, 104, 208]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 168, 432, 432)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 73, 91, 110, 128], [0, 104, 208], [0, 104, 208]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 168, 432, 432)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 73, 91, 110, 128], [0, 104, 208], [0, 104, 208]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 168, 432, 432)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55, 73, 91, 110, 128], [0, 104, 208], [0, 104, 208]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_357.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 404, 404)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 90, 180], [0, 90, 180]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 404, 404)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 90, 180], [0, 90, 180]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 404, 404)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 90, 180], [0, 90, 180]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 404, 404)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 90, 180], [0, 90, 180]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 404, 404)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 90, 180], [0, 90, 180]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_345.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_350.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_351.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 430, 430)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 103, 206], [0, 103, 206]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_354.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 162, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 70, 87, 105, 122], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 162, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 70, 87, 105, 122], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 162, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 70, 87, 105, 122], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 162, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 70, 87, 105, 122], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 162, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 70, 87, 105, 122], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 128
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_366.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 563, 563)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 85, 170, 254, 339], [0, 85, 170, 254, 339]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 563, 563)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 85, 170, 254, 339], [0, 85, 170, 254, 339]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 563, 563)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 85, 170, 254, 339], [0, 85, 170, 254, 339]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 563, 563)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 85, 170, 254, 339], [0, 85, 170, 254, 339]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 121, 563, 563)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65, 81], [0, 85, 170, 254, 339], [0, 85, 170, 254, 339]]
number of tiles: 150
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_367.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 104, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48, 64], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_355.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 172, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 75, 94, 113, 132], [0, 112, 224], [0, 112, 224]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 172, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 75, 94, 113, 132], [0, 112, 224], [0, 112, 224]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 172, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 75, 94, 113, 132], [0, 112, 224], [0, 112, 224]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 172, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 75, 94, 113, 132], [0, 112, 224], [0, 112, 224]]
number of tiles: 72
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 172, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 75, 94, 113, 132], [0, 112, 224], [0, 112, 224]]
number of tiles: 72
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_358.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 178, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 79, 99, 118, 138], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 178, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 79, 99, 118, 138], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 178, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 79, 99, 118, 138], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 178, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 79, 99, 118, 138], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 178, 465, 465)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 79, 99, 118, 138], [0, 80, 161, 241], [0, 80, 161, 241]]
number of tiles: 128
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_361.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 136, 399, 399)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96], [0, 88, 175], [0, 88, 175]]
number of tiles: 54
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 136, 399, 399)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96], [0, 88, 175], [0, 88, 175]]
number of tiles: 54
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 136, 399, 399)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96], [0, 88, 175], [0, 88, 175]]
number of tiles: 54
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 136, 399, 399)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96], [0, 88, 175], [0, 88, 175]]
number of tiles: 54
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 136, 399, 399)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77, 96], [0, 88, 175], [0, 88, 175]]
number of tiles: 54
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_364.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_375.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 117, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 58, 77], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_376.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 109, 548, 548)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69], [0, 108, 216, 324], [0, 108, 216, 324]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_365.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 188, 558, 558)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74, 92, 111, 130, 148], [0, 111, 223, 334], [0, 111, 223, 334]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 188, 558, 558)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74, 92, 111, 130, 148], [0, 111, 223, 334], [0, 111, 223, 334]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 188, 558, 558)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74, 92, 111, 130, 148], [0, 111, 223, 334], [0, 111, 223, 334]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 188, 558, 558)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74, 92, 111, 130, 148], [0, 111, 223, 334], [0, 111, 223, 334]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 188, 558, 558)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74, 92, 111, 130, 148], [0, 111, 223, 334], [0, 111, 223, 334]]
number of tiles: 144
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_369.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_370.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 431, 431)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 104, 207], [0, 104, 207]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 431, 431)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 104, 207], [0, 104, 207]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 431, 431)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 104, 207], [0, 104, 207]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 431, 431)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 104, 207], [0, 104, 207]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 182, 431, 431)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71, 89, 106, 124, 142], [0, 104, 207], [0, 104, 207]]
number of tiles: 81
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_372.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_385.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 536, 536)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 104, 208, 312], [0, 104, 208, 312]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_386.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 486, 486)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 87, 175, 262], [0, 87, 175, 262]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_374.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 137, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 78, 97], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 137, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 78, 97], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 137, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 78, 97], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 137, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 78, 97], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 96
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 137, 473, 473)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58, 78, 97], [0, 83, 166, 249], [0, 83, 166, 249]]
number of tiles: 96
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_377.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 110, 551, 551)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 52, 70], [0, 109, 218, 327], [0, 109, 218, 327]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_379.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 443, 443)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 110, 219], [0, 110, 219]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 443, 443)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 110, 219], [0, 110, 219]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 443, 443)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 110, 219], [0, 110, 219]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 443, 443)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 110, 219], [0, 110, 219]]
number of tiles: 81
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 192, 443, 443)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 95, 114, 133, 152], [0, 110, 219], [0, 110, 219]]
number of tiles: 81
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_380.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 126, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 52, 69, 86], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 150
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_393.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 119, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 59, 79], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 119, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 59, 79], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 119, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 59, 79], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 119, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 59, 79], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 119, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 59, 79], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_395.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 170, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56, 74, 93, 111, 130], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 170, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56, 74, 93, 111, 130], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 170, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56, 74, 93, 111, 130], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 170, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56, 74, 93, 111, 130], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 170, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56, 74, 93, 111, 130], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 128
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_382.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 111, 521, 521)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 53, 71], [0, 99, 198, 297], [0, 99, 198, 297]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_387.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_388.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 567, 567)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 86, 172, 257, 343], [0, 86, 172, 257, 343]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 567, 567)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 86, 172, 257, 343], [0, 86, 172, 257, 343]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 567, 567)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 86, 172, 257, 343], [0, 86, 172, 257, 343]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 567, 567)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 86, 172, 257, 343], [0, 86, 172, 257, 343]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 567, 567)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 86, 172, 257, 343], [0, 86, 172, 257, 343]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_389.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 118, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 118, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 118, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_016.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.77343798 0.77343798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77343798, 0.77343798]), 'spacing_transposed': array([2.5       , 0.77343798, 0.77343798]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 493, 493)} 

(1, 85, 493, 493)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_028.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 83, 512, 512) after crop: (1, 83, 512, 512) spacing: [2.5      0.796875 0.796875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.796875, 0.796875]), 'spacing_transposed': array([2.5     , 0.796875, 0.796875]), 'data.shape (data is transposed)': (1, 83, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 83, 508, 508)} 

(1, 83, 508, 508)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_041.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 137, 512, 512) after crop: (1, 137, 512, 512) spacing: [1.5        0.79882801 0.79882801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.5       , 0.79882801, 0.79882801]), 'spacing_transposed': array([1.5       , 0.79882801, 0.79882801]), 'data.shape (data is transposed)': (1, 137, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 510, 510)} 

(1, 82, 510, 510)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_051.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 523, 523)} 

(1, 99, 523, 523)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_066.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 96, 512, 512) after crop: (1, 96, 512, 512) spacing: [5.         0.81445301 0.81445301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.81445301, 0.81445301]), 'spacing_transposed': array([5.        , 0.81445301, 0.81445301]), 'data.shape (data is transposed)': (1, 96, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 192, 519, 519)} 

(1, 192, 519, 519)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_078.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 76, 512, 512) after crop: (1, 76, 512, 512) spacing: [2.5        0.70898402 0.70898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70898402, 0.70898402]), 'spacing_transposed': array([2.5       , 0.70898402, 0.70898402]), 'data.shape (data is transposed)': (1, 76, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 452, 452)} 

(1, 76, 452, 452)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_087.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 77, 512, 512) after crop: (1, 77, 512, 512) spacing: [5.         0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.64453101, 0.64453101]), 'spacing_transposed': array([5.        , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 77, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 154, 411, 411)} 

(1, 154, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_101.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [5.         0.75390601 0.75390601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.75390601, 0.75390601]), 'spacing_transposed': array([5.        , 0.75390601, 0.75390601]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 196, 481, 481)} 

(1, 196, 481, 481)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_110.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 98, 623, 623)} 

(1, 98, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_122.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.79101598 0.79101598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79101598, 0.79101598]), 'spacing_transposed': array([2.5       , 0.79101598, 0.79101598]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 505, 505)} 

(1, 97, 505, 505)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_130.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 130, 512, 512) after crop: (1, 130, 512, 512) spacing: [3.      0.65625 0.65625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.     , 0.65625, 0.65625]), 'spacing_transposed': array([3.     , 0.65625, 0.65625]), 'data.shape (data is transposed)': (1, 130, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 156, 419, 419)} 

(1, 156, 419, 419)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_148.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 42, 512, 512) after crop: (1, 42, 512, 512) spacing: [5.         0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.76171899, 0.76171899]), 'spacing_transposed': array([5.        , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 42, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 486, 486)} 

(1, 84, 486, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_165.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 623, 623)} 

(1, 85, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_173.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5        0.69335902 0.69335902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.69335902, 0.69335902]), 'spacing_transposed': array([2.5       , 0.69335902, 0.69335902]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 442, 442)} 

(1, 81, 442, 442)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_182.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 79, 512, 512) after crop: (1, 79, 512, 512) spacing: [2.5        0.67382801 0.67382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67382801, 0.67382801]), 'spacing_transposed': array([2.5       , 0.67382801, 0.67382801]), 'data.shape (data is transposed)': (1, 79, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 79, 430, 430)} 

(1, 79, 430, 430)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_194.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [2.5        0.73046899 0.73046899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73046899, 0.73046899]), 'spacing_transposed': array([2.5       , 0.73046899, 0.73046899]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 98, 466, 466)} 

(1, 98, 466, 466)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_201.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 76, 512, 512) after crop: (1, 76, 512, 512) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 76, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 411, 411)} 

(1, 76, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_212.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.87304699 0.87304699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87304699, 0.87304699]), 'spacing_transposed': array([2.5       , 0.87304699, 0.87304699]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 557, 557)} 

(1, 97, 557, 557)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_226.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 104, 512, 512) after crop: (1, 104, 512, 512) spacing: [2.5      0.828125 0.828125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.828125, 0.828125]), 'spacing_transposed': array([2.5     , 0.828125, 0.828125]), 'data.shape (data is transposed)': (1, 104, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 104, 528, 528)} 

(1, 104, 528, 528)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_235.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 84, 512, 512) after crop: (1, 84, 512, 512) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 84, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 496, 496)} 

(1, 84, 496, 496)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_244.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5        0.90820301 0.90820301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.90820301, 0.90820301]), 'spacing_transposed': array([2.5       , 0.90820301, 0.90820301]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 579, 579)} 

(1, 103, 579, 579)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_255.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 523, 523)} 

(1, 99, 523, 523)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_267.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.67968798 0.67968798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67968798, 0.67968798]), 'spacing_transposed': array([2.5       , 0.67968798, 0.67968798]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 434, 434)} 

(1, 89, 434, 434)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_276.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.85546899 0.85546899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85546899, 0.85546899]), 'spacing_transposed': array([2.5       , 0.85546899, 0.85546899]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 546, 546)} 

(1, 89, 546, 546)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_284.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.75390601 0.75390601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75390601, 0.75390601]), 'spacing_transposed': array([2.5       , 0.75390601, 0.75390601]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 481, 481)} 

(1, 85, 481, 481)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_292.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.83593798 0.83593798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83593798, 0.83593798]), 'spacing_transposed': array([2.5       , 0.83593798, 0.83593798]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 533, 533)} 

(1, 93, 533, 533)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_301.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 83, 512, 512) after crop: (1, 83, 512, 512) spacing: [2.5        0.83398402 0.83398402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83398402, 0.83398402]), 'spacing_transposed': array([2.5       , 0.83398402, 0.83398402]), 'data.shape (data is transposed)': (1, 83, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 83, 532, 532)} 

(1, 83, 532, 532)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_309.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 497, 497)} 

(1, 95, 497, 497)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_320.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 91, 512, 512) after crop: (1, 91, 512, 512) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 91, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 91, 473, 473)} 

(1, 91, 473, 473)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_328.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 623, 623)} 

(1, 95, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_339.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 105, 512, 512) after crop: (1, 105, 512, 512) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 105, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 105, 592, 592)} 

(1, 105, 592, 592)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_348.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 473, 473)} 

(1, 89, 473, 473)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_357.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 44, 512, 512) after crop: (1, 44, 512, 512) spacing: [5.         0.63281202 0.63281202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.63281202, 0.63281202]), 'spacing_transposed': array([5.        , 0.63281202, 0.63281202]), 'data.shape (data is transposed)': (1, 44, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 88, 404, 404)} 

(1, 88, 404, 404)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_367.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 104, 512, 512) after crop: (1, 104, 512, 512) spacing: [2.5        0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86328101, 0.86328101]), 'spacing_transposed': array([2.5       , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 104, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 104, 551, 551)} 

(1, 104, 551, 551)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_376.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 109, 512, 512) after crop: (1, 109, 512, 512) spacing: [2.5      0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.859375, 0.859375]), 'spacing_transposed': array([2.5     , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 109, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 109, 548, 548)} 

(1, 109, 548, 548)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_386.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5        0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76171899, 0.76171899]), 'spacing_transposed': array([2.5       , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 486, 486)} 

(1, 81, 486, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_395.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 142, 512, 512) after crop: (1, 142, 512, 512) spacing: [3.         0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.77734399, 0.77734399]), 'spacing_transposed': array([3.        , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 142, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 170, 496, 496)} 

(1, 170, 496, 496)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_404.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 105, 512, 512) after crop: (1, 105, 512, 512) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 105, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 105, 561, 561)} 

(1, 105, 561, 561)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_413.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 498, 498)} 

(1, 85, 498, 498)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_015.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5        0.73242199 0.73242199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73242199, 0.73242199]), 'spacing_transposed': array([2.5       , 0.73242199, 0.73242199]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 467, 467)} 

(1, 87, 467, 467)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_025.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 75, 512, 512) after crop: (1, 75, 512, 512) spacing: [2.5        0.70117199 0.70117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70117199, 0.70117199]), 'spacing_transposed': array([2.5       , 0.70117199, 0.70117199]), 'data.shape (data is transposed)': (1, 75, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 75, 447, 447)} 

(1, 75, 447, 447)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_040.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 45, 512, 512) after crop: (1, 45, 512, 512) spacing: [5.         0.82421899 0.82421899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.82421899, 0.82421899]), 'spacing_transposed': array([5.        , 0.82421899, 0.82421899]), 'data.shape (data is transposed)': (1, 45, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 526, 526)} 

(1, 90, 526, 526)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_050.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72265601, 0.72265601]), 'spacing_transposed': array([2.5       , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 461, 461)} 

(1, 85, 461, 461)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_061.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 561, 561)} 

(1, 93, 561, 561)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_077.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 573, 573)} 

(1, 81, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_086.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 512, 512) after crop: (1, 51, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 51, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 51, 573, 573)} 

(1, 51, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_098.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 147, 512, 512) after crop: (1, 147, 512, 512) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 147, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 147, 592, 592)} 

(1, 147, 592, 592)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_107.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 102, 512, 512) after crop: (1, 102, 512, 512) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 102, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 102, 498, 498)} 

(1, 102, 498, 498)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_120.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 104, 512, 512) after crop: (1, 104, 512, 512) spacing: [4.         0.68359399 0.68359399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.        , 0.68359399, 0.68359399]), 'spacing_transposed': array([4.        , 0.68359399, 0.68359399]), 'data.shape (data is transposed)': (1, 104, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 166, 436, 436)} 

(1, 166, 436, 436)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_129.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 44, 512, 512) after crop: (1, 44, 512, 512) spacing: [5.         0.73046899 0.73046899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.73046899, 0.73046899]), 'spacing_transposed': array([5.        , 0.73046899, 0.73046899]), 'data.shape (data is transposed)': (1, 44, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 88, 466, 466)} 

(1, 88, 466, 466)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_140.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 56, 512, 512) after crop: (1, 56, 512, 512) spacing: [5.         0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.82031202, 0.82031202]), 'spacing_transposed': array([5.        , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 56, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 112, 523, 523)} 

(1, 112, 523, 523)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_160.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 75, 512, 512) after crop: (1, 75, 512, 512) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 75, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 75, 523, 523)} 

(1, 75, 523, 523)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_172.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 472, 472)} 

(1, 95, 472, 472)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_181.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 623, 623)} 

(1, 87, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_193.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 113, 512, 512) after crop: (1, 113, 512, 512) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 113, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 113, 496, 496)} 

(1, 113, 496, 496)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_200.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.93945301 0.93945301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.93945301, 0.93945301]), 'spacing_transposed': array([2.5       , 0.93945301, 0.93945301]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 599, 599)} 

(1, 89, 599, 599)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_211.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 121, 512, 512) after crop: (1, 121, 512, 512) spacing: [2.5        0.91406202 0.91406202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91406202, 0.91406202]), 'spacing_transposed': array([2.5       , 0.91406202, 0.91406202]), 'data.shape (data is transposed)': (1, 121, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 121, 583, 583)} 

(1, 121, 583, 583)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_224.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86328101, 0.86328101]), 'spacing_transposed': array([2.5       , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 551, 551)} 

(1, 93, 551, 551)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_234.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 573, 573)} 

(1, 81, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_243.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 512, 512) after crop: (1, 51, 512, 512) spacing: [5.         0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.76171899, 0.76171899]), 'spacing_transposed': array([5.        , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 51, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 102, 486, 486)} 

(1, 102, 486, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_254.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 101, 512, 512) after crop: (1, 101, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 101, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 101, 623, 623)} 

(1, 101, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_266.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 573, 573)} 

(1, 97, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_275.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 105, 512, 512) after crop: (1, 105, 512, 512) spacing: [2.5  0.75 0.75] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5 , 0.75, 0.75]), 'spacing_transposed': array([2.5 , 0.75, 0.75]), 'data.shape (data is transposed)': (1, 105, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 105, 478, 478)} 

(1, 105, 478, 478)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_283.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 107, 512, 512) after crop: (1, 107, 512, 512) spacing: [2.5        0.70898402 0.70898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70898402, 0.70898402]), 'spacing_transposed': array([2.5       , 0.70898402, 0.70898402]), 'data.shape (data is transposed)': (1, 107, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 107, 452, 452)} 

(1, 107, 452, 452)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_291.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.91601598 0.91601598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91601598, 0.91601598]), 'spacing_transposed': array([2.5       , 0.91601598, 0.91601598]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 584, 584)} 

(1, 97, 584, 584)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_299.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 83, 512, 512) after crop: (1, 83, 512, 512) spacing: [2.5        0.68359399 0.68359399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.68359399, 0.68359399]), 'spacing_transposed': array([2.5       , 0.68359399, 0.68359399]), 'data.shape (data is transposed)': (1, 83, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 83, 436, 436)} 

(1, 83, 436, 436)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_308.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 113, 512, 512) after crop: (1, 113, 512, 512) spacing: [2.5        0.96289098 0.96289098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.96289098, 0.96289098]), 'spacing_transposed': array([2.5       , 0.96289098, 0.96289098]), 'data.shape (data is transposed)': (1, 113, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 113, 614, 614)} 

(1, 113, 614, 614)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_316.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.72460902 0.72460902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72460902, 0.72460902]), 'spacing_transposed': array([2.5       , 0.72460902, 0.72460902]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 462, 462)} 

(1, 89, 462, 462)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_327.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 623, 623)} 

(1, 99, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_336.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 92, 512, 512) after crop: (1, 92, 512, 512) spacing: [2.5      0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.859375, 0.859375]), 'spacing_transposed': array([2.5     , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 92, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 548, 548)} 

(1, 92, 548, 548)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_347.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.73828101 0.73828101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73828101, 0.73828101]), 'spacing_transposed': array([2.5       , 0.73828101, 0.73828101]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 471, 471)} 

(1, 89, 471, 471)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_356.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 84, 512, 512) after crop: (1, 84, 512, 512) spacing: [5.         0.67773402 0.67773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.67773402, 0.67773402]), 'spacing_transposed': array([5.        , 0.67773402, 0.67773402]), 'data.shape (data is transposed)': (1, 84, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 168, 432, 432)} 

(1, 168, 432, 432)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_366.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 121, 512, 512) after crop: (1, 121, 512, 512) spacing: [2.5        0.88281202 0.88281202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.88281202, 0.88281202]), 'spacing_transposed': array([2.5       , 0.88281202, 0.88281202]), 'data.shape (data is transposed)': (1, 121, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 121, 563, 563)} 

(1, 121, 563, 563)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_375.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 117, 512, 512) after crop: (1, 117, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 117, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 117, 573, 573)} 

(1, 117, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_385.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 49, 512, 512) after crop: (1, 49, 512, 512) spacing: [5.         0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.83984399, 0.83984399]), 'spacing_transposed': array([5.        , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 49, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 98, 536, 536)} 

(1, 98, 536, 536)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_393.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 119, 512, 512) after crop: (1, 119, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 119, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 119, 623, 623)} 

(1, 119, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_402.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 134, 512, 512) after crop: (1, 134, 512, 512) spacing: [3.         0.72600001 0.72600001] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.72600001, 0.72600001]), 'spacing_transposed': array([3.        , 0.72600001, 0.72600001]), 'data.shape (data is transposed)': (1, 134, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 161, 463, 463)} 

(1, 161, 463, 463)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_412.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 164, 512, 512) after crop: (1, 164, 512, 512) spacing: [3.         0.91601598 0.91601598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.91601598, 0.91601598]), 'spacing_transposed': array([3.        , 0.91601598, 0.91601598]), 'data.shape (data is transposed)': (1, 164, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 197, 584, 584)} 

(1, 197, 584, 584)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_421.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 131, 512, 512) after crop: (1, 131, 512, 512) spacing: [2.         0.97265601 0.97265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.        , 0.97265601, 0.97265601]), 'spacing_transposed': array([2.        , 0.97265601, 0.97265601]), 'data.shape (data is transposed)': (1, 131, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 105, 620, 620)} 

(1, 105, 620, 620)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_001.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 110, 512, 512) after crop: (1, 110, 512, 512) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 110, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 110, 411, 411)} 

(1, 110, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_018.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5        0.67382801 0.67382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67382801, 0.67382801]), 'spacing_transposed': array([2.5       , 0.67382801, 0.67382801]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 430, 430)} 

(1, 87, 430, 430)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_029.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 498, 498)} 

(1, 99, 498, 498)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_043.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 39, 512, 512) after crop: (1, 39, 512, 512) spacing: [5.         0.74609399 0.74609399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.74609399, 0.74609399]), 'spacing_transposed': array([5.        , 0.74609399, 0.74609399]), 'data.shape (data is transposed)': (1, 39, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 78, 476, 476)} 

(1, 78, 476, 476)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_052.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 411, 411)} 

(1, 89, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_067.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5        0.82226598 0.82226598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82226598, 0.82226598]), 'spacing_transposed': array([2.5       , 0.82226598, 0.82226598]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 524, 524)} 

(1, 103, 524, 524)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_080.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [2.5        0.80664098 0.80664098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80664098, 0.80664098]), 'spacing_transposed': array([2.5       , 0.80664098, 0.80664098]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 98, 514, 514)} 

(1, 98, 514, 514)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_091.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 71, 512, 512) after crop: (1, 71, 512, 512) spacing: [2.5        0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81640601, 0.81640601]), 'spacing_transposed': array([2.5       , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 71, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 71, 521, 521)} 

(1, 71, 521, 521)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_102.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 92, 512, 512) after crop: (1, 92, 512, 512) spacing: [2.5        0.79296899 0.79296899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79296899, 0.79296899]), 'spacing_transposed': array([2.5       , 0.79296899, 0.79296899]), 'data.shape (data is transposed)': (1, 92, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 506, 506)} 

(1, 92, 506, 506)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_113.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 100, 512, 512) after crop: (1, 100, 512, 512) spacing: [2.5        0.68945301 0.68945301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.68945301, 0.68945301]), 'spacing_transposed': array([2.5       , 0.68945301, 0.68945301]), 'data.shape (data is transposed)': (1, 100, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 100, 440, 440)} 

(1, 100, 440, 440)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_124.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 82, 512, 512) after crop: (1, 82, 512, 512) spacing: [2.5        0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95117199, 0.95117199]), 'spacing_transposed': array([2.5       , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 82, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 607, 607)} 

(1, 82, 607, 607)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_131.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 59, 512, 512) after crop: (1, 59, 512, 512) spacing: [2.5        0.80273402 0.80273402] 

no resampling necessary
no resampling necessary
before: {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'spacing_transposed': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is transposed)': (1, 59, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 59, 512, 512)} 

(1, 59, 512, 512)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_149.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 77, 512, 512) after crop: (1, 77, 512, 512) spacing: [2.5      0.765625 0.765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.765625, 0.765625]), 'spacing_transposed': array([2.5     , 0.765625, 0.765625]), 'data.shape (data is transposed)': (1, 77, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 77, 488, 488)} 

(1, 77, 488, 488)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_166.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.92578101 0.92578101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92578101, 0.92578101]), 'spacing_transposed': array([2.5       , 0.92578101, 0.92578101]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 590, 590)} 

(1, 95, 590, 590)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_175.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 91, 512, 512) after crop: (1, 91, 512, 512) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 91, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 91, 496, 496)} 

(1, 91, 496, 496)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_183.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 76, 512, 512) after crop: (1, 76, 512, 512) spacing: [2.5        0.82226598 0.82226598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82226598, 0.82226598]), 'spacing_transposed': array([2.5       , 0.82226598, 0.82226598]), 'data.shape (data is transposed)': (1, 76, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 524, 524)} 

(1, 76, 524, 524)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_196.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 92, 512, 512) after crop: (1, 92, 512, 512) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 92, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 411, 411)} 

(1, 92, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_203.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 106, 512, 512) after crop: (1, 106, 512, 512) spacing: [2.5        0.76171899 0.76171899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76171899, 0.76171899]), 'spacing_transposed': array([2.5       , 0.76171899, 0.76171899]), 'data.shape (data is transposed)': (1, 106, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 106, 486, 486)} 

(1, 106, 486, 486)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_214.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 109, 512, 512) after crop: (1, 109, 512, 512) spacing: [2.5        0.84960902 0.84960902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.84960902, 0.84960902]), 'spacing_transposed': array([2.5       , 0.84960902, 0.84960902]), 'data.shape (data is transposed)': (1, 109, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 109, 542, 542)} 

(1, 109, 542, 542)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_228.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 113, 512, 512) after crop: (1, 113, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 113, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 113, 573, 573)} 

(1, 113, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_236.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5      0.859375 0.859375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.859375, 0.859375]), 'spacing_transposed': array([2.5     , 0.859375, 0.859375]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 548, 548)} 

(1, 81, 548, 548)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_246.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 107, 512, 512) after crop: (1, 107, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 107, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 107, 573, 573)} 

(1, 107, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_256.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.77343798 0.77343798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77343798, 0.77343798]), 'spacing_transposed': array([2.5       , 0.77343798, 0.77343798]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 493, 493)} 

(1, 89, 493, 493)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_268.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 67, 512, 512) after crop: (1, 67, 512, 512) spacing: [2.5        0.73632801 0.73632801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73632801, 0.73632801]), 'spacing_transposed': array([2.5       , 0.73632801, 0.73632801]), 'data.shape (data is transposed)': (1, 67, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 67, 470, 470)} 

(1, 67, 470, 470)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_277.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 109, 512, 512) after crop: (1, 109, 512, 512) spacing: [2.5        0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95117199, 0.95117199]), 'spacing_transposed': array([2.5       , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 109, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 109, 607, 607)} 

(1, 109, 607, 607)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_285.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 113, 512, 512) after crop: (1, 113, 512, 512) spacing: [2.5        0.83203101 0.83203101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83203101, 0.83203101]), 'spacing_transposed': array([2.5       , 0.83203101, 0.83203101]), 'data.shape (data is transposed)': (1, 113, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 113, 531, 531)} 

(1, 113, 531, 531)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_293.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 107, 512, 512) after crop: (1, 107, 512, 512) spacing: [2.5        0.89453101 0.89453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89453101, 0.89453101]), 'spacing_transposed': array([2.5       , 0.89453101, 0.89453101]), 'data.shape (data is transposed)': (1, 107, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 107, 571, 571)} 

(1, 107, 571, 571)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_302.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 83, 512, 512) after crop: (1, 83, 512, 512) spacing: [2.5        0.94726598 0.94726598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.94726598, 0.94726598]), 'spacing_transposed': array([2.5       , 0.94726598, 0.94726598]), 'data.shape (data is transposed)': (1, 83, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 83, 604, 604)} 

(1, 83, 604, 604)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_310.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5      0.921875 0.921875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.921875, 0.921875]), 'spacing_transposed': array([2.5     , 0.921875, 0.921875]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 588, 588)} 

(1, 81, 588, 588)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_321.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 117, 512, 512) after crop: (1, 117, 512, 512) spacing: [2.5        0.89453101 0.89453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89453101, 0.89453101]), 'spacing_transposed': array([2.5       , 0.89453101, 0.89453101]), 'data.shape (data is transposed)': (1, 117, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 117, 571, 571)} 

(1, 117, 571, 571)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_329.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 79, 512, 512) after crop: (1, 79, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 79, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 79, 623, 623)} 

(1, 79, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_342.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 117, 512, 512) after crop: (1, 117, 512, 512) spacing: [2.5        0.81835902 0.81835902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81835902, 0.81835902]), 'spacing_transposed': array([2.5       , 0.81835902, 0.81835902]), 'data.shape (data is transposed)': (1, 117, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 117, 522, 522)} 

(1, 117, 522, 522)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_350.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.72656202 0.72656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72656202, 0.72656202]), 'spacing_transposed': array([2.5       , 0.72656202, 0.72656202]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 463, 463)} 

(1, 89, 463, 463)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_358.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [5.         0.72851598 0.72851598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.72851598, 0.72851598]), 'spacing_transposed': array([5.        , 0.72851598, 0.72851598]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 178, 465, 465)} 

(1, 178, 465, 465)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_369.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 623, 623)} 

(1, 97, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_377.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 512, 512) after crop: (1, 55, 512, 512) spacing: [5.         0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.86328101, 0.86328101]), 'spacing_transposed': array([5.        , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 55, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 110, 551, 551)} 

(1, 110, 551, 551)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_387.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 50, 512, 512) after crop: (1, 50, 512, 512) spacing: [5.      0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.78125, 0.78125]), 'spacing_transposed': array([5.     , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 50, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 100, 498, 498)} 

(1, 100, 498, 498)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_398.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5        0.92968798 0.92968798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92968798, 0.92968798]), 'spacing_transposed': array([2.5       , 0.92968798, 0.92968798]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 593, 593)} 

(1, 103, 593, 593)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_405.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.81054699 0.81054699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81054699, 0.81054699]), 'spacing_transposed': array([2.5       , 0.81054699, 0.81054699]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 517, 517)} 

(1, 89, 517, 517)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_414.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 169, 512, 512) after crop: (1, 169, 512, 512) spacing: [1.25       0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.25      , 0.97656202, 0.97656202]), 'spacing_transposed': array([1.25      , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 169, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 623, 623)} 

(1, 84, 623, 623)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_004.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 107, 512, 512) after crop: (1, 107, 512, 512) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 107, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 107, 473, 473)} 

(1, 107, 473, 473)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_019.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 561, 561)} 

(1, 85, 561, 561)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_032.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.92382801 0.92382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92382801, 0.92382801]), 'spacing_transposed': array([2.5       , 0.92382801, 0.92382801]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 589, 589)} 

(1, 89, 589, 589)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_045.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 41, 512, 512) after crop: (1, 41, 512, 512) spacing: [5.         0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.81640601, 0.81640601]), 'spacing_transposed': array([5.        , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 41, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 521, 521)} 

(1, 82, 521, 521)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_055.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 96, 512, 512) after crop: (1, 96, 512, 512) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 96, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 96, 523, 523)} 

(1, 96, 523, 523)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_069.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [5.         0.78906202 0.78906202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.78906202, 0.78906202]), 'spacing_transposed': array([5.        , 0.78906202, 0.78906202]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 194, 503, 503)} 

(1, 194, 503, 503)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_081.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 47, 512, 512) after crop: (1, 47, 512, 512) spacing: [5.         0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.64453101, 0.64453101]), 'spacing_transposed': array([5.        , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 47, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 94, 411, 411)} 

(1, 94, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_093.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [3.         0.93164098 0.93164098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.93164098, 0.93164098]), 'spacing_transposed': array([3.        , 0.93164098, 0.93164098]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 116, 594, 594)} 

(1, 116, 594, 594)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_103.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 90, 512, 512) after crop: (1, 90, 512, 512) spacing: [2.5        0.66210902 0.66210902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.66210902, 0.66210902]), 'spacing_transposed': array([2.5       , 0.66210902, 0.66210902]), 'data.shape (data is transposed)': (1, 90, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 422, 422)} 

(1, 90, 422, 422)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_114.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [2.5        0.70703101 0.70703101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.70703101, 0.70703101]), 'spacing_transposed': array([2.5       , 0.70703101, 0.70703101]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 98, 451, 451)} 

(1, 98, 451, 451)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_125.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 102, 512, 512) after crop: (1, 102, 512, 512) spacing: [2.5        0.93164098 0.93164098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.93164098, 0.93164098]), 'spacing_transposed': array([2.5       , 0.93164098, 0.93164098]), 'data.shape (data is transposed)': (1, 102, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 102, 594, 594)} 

(1, 102, 594, 594)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_135.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 60, 512, 512) after crop: (1, 60, 512, 512) spacing: [5.         0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.72265601, 0.72265601]), 'spacing_transposed': array([5.        , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 60, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 120, 461, 461)} 

(1, 120, 461, 461)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_157.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 77, 512, 512) after crop: (1, 77, 512, 512) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 77, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 77, 498, 498)} 

(1, 77, 498, 498)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_167.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 101, 512, 512) after crop: (1, 101, 512, 512) spacing: [2.5        0.75976598 0.75976598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75976598, 0.75976598]), 'spacing_transposed': array([2.5       , 0.75976598, 0.75976598]), 'data.shape (data is transposed)': (1, 101, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 101, 485, 485)} 

(1, 101, 485, 485)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_178.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 110, 512, 512) after crop: (1, 110, 512, 512) spacing: [2.5        0.80078101 0.80078101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80078101, 0.80078101]), 'spacing_transposed': array([2.5       , 0.80078101, 0.80078101]), 'data.shape (data is transposed)': (1, 110, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 110, 511, 511)} 

(1, 110, 511, 511)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_186.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 512, 512) after crop: (1, 51, 512, 512) spacing: [5.         0.70898402 0.70898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.70898402, 0.70898402]), 'spacing_transposed': array([5.        , 0.70898402, 0.70898402]), 'data.shape (data is transposed)': (1, 51, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 102, 452, 452)} 

(1, 102, 452, 452)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_197.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 73, 512, 512) after crop: (1, 73, 512, 512) spacing: [2.5        0.85156202 0.85156202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85156202, 0.85156202]), 'spacing_transposed': array([2.5       , 0.85156202, 0.85156202]), 'data.shape (data is transposed)': (1, 73, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 73, 543, 543)} 

(1, 73, 543, 543)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_204.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 73, 512, 512) after crop: (1, 73, 512, 512) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 73, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 73, 411, 411)} 

(1, 73, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_215.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5        0.75781202 0.75781202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75781202, 0.75781202]), 'spacing_transposed': array([2.5       , 0.75781202, 0.75781202]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 483, 483)} 

(1, 99, 483, 483)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_229.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5        0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87890601, 0.87890601]), 'spacing_transposed': array([2.5       , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 561, 561)} 

(1, 87, 561, 561)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_239.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 92, 512, 512) after crop: (1, 92, 512, 512) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 92, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 92, 448, 448)} 

(1, 92, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_247.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 411, 411)} 

(1, 89, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_261.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 161, 512, 512) after crop: (1, 161, 512, 512) spacing: [1.5        0.69921899 0.69921899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.5       , 0.69921899, 0.69921899]), 'spacing_transposed': array([1.5       , 0.69921899, 0.69921899]), 'data.shape (data is transposed)': (1, 161, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 446, 446)} 

(1, 97, 446, 446)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_269.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 113, 512, 512) after crop: (1, 113, 512, 512) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 113, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 113, 496, 496)} 

(1, 113, 496, 496)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_278.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 100, 512, 512) after crop: (1, 100, 512, 512) spacing: [2.5        0.88085902 0.88085902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.88085902, 0.88085902]), 'spacing_transposed': array([2.5       , 0.88085902, 0.88085902]), 'data.shape (data is transposed)': (1, 100, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 100, 562, 562)} 

(1, 100, 562, 562)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_286.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.76757801 0.76757801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76757801, 0.76757801]), 'spacing_transposed': array([2.5       , 0.76757801, 0.76757801]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 490, 490)} 

(1, 93, 490, 490)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_294.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.81054699 0.81054699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81054699, 0.81054699]), 'spacing_transposed': array([2.5       , 0.81054699, 0.81054699]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 517, 517)} 

(1, 97, 517, 517)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_303.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 113, 512, 512) after crop: (1, 113, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 113, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 113, 623, 623)} 

(1, 113, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_311.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5      0.765625 0.765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.765625, 0.765625]), 'spacing_transposed': array([2.5     , 0.765625, 0.765625]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 488, 488)} 

(1, 87, 488, 488)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_323.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.95898402 0.95898402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95898402, 0.95898402]), 'spacing_transposed': array([2.5       , 0.95898402, 0.95898402]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 612, 612)} 

(1, 95, 612, 612)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_330.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5    0.8125 0.8125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.8125, 0.8125]), 'spacing_transposed': array([2.5   , 0.8125, 0.8125]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 518, 518)} 

(1, 89, 518, 518)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_343.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 86, 512, 512) after crop: (1, 86, 512, 512) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 86, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 497, 497)} 

(1, 86, 497, 497)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_351.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 88, 512, 512) after crop: (1, 88, 512, 512) spacing: [2.5        0.67382801 0.67382801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.67382801, 0.67382801]), 'spacing_transposed': array([2.5       , 0.67382801, 0.67382801]), 'data.shape (data is transposed)': (1, 88, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 88, 430, 430)} 

(1, 88, 430, 430)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_361.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 68, 512, 512) after crop: (1, 68, 512, 512) spacing: [5.    0.625 0.625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.   , 0.625, 0.625]), 'spacing_transposed': array([5.   , 0.625, 0.625]), 'data.shape (data is transposed)': (1, 68, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 136, 399, 399)} 

(1, 136, 399, 399)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_370.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 91, 512, 512) after crop: (1, 91, 512, 512) spacing: [5.         0.67578101 0.67578101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.67578101, 0.67578101]), 'spacing_transposed': array([5.        , 0.67578101, 0.67578101]), 'data.shape (data is transposed)': (1, 91, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 182, 431, 431)} 

(1, 182, 431, 431)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_379.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 384, 512, 512) after crop: (1, 384, 512, 512) spacing: [1.25       0.69531202 0.69531202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.25      , 0.69531202, 0.69531202]), 'spacing_transposed': array([1.25      , 0.69531202, 0.69531202]), 'data.shape (data is transposed)': (1, 384, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 192, 443, 443)} 

(1, 192, 443, 443)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_388.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 512, 512) after crop: (1, 57, 512, 512) spacing: [5.         0.88867199 0.88867199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.88867199, 0.88867199]), 'spacing_transposed': array([5.        , 0.88867199, 0.88867199]), 'data.shape (data is transposed)': (1, 57, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 114, 567, 567)} 

(1, 114, 567, 567)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_399.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 58, 512, 512) after crop: (1, 58, 512, 512) spacing: [5.     0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.    , 0.9375, 0.9375]), 'spacing_transposed': array([5.    , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 58, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 116, 598, 598)} 

(1, 116, 598, 598)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_406.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 72, 512, 512) after crop: (1, 72, 512, 512) spacing: [3.         0.89257801 0.89257801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.89257801, 0.89257801]), 'spacing_transposed': array([3.        , 0.89257801, 0.89257801]), 'data.shape (data is transposed)': (1, 72, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 569, 569)} 

(1, 86, 569, 569)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_415.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 61, 512, 512) after crop: (1, 61, 512, 512) spacing: [5.         0.87890601 0.87890601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.87890601, 0.87890601]), 'spacing_transposed': array([5.        , 0.87890601, 0.87890601]), 'data.shape (data is transposed)': (1, 61, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 122, 561, 561)} 

(1, 122, 561, 561)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_005.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 104, 512, 512) after crop: (1, 104, 512, 512) spacing: [2.5        0.91796899 0.91796899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91796899, 0.91796899]), 'spacing_transposed': array([2.5       , 0.91796899, 0.91796899]), 'data.shape (data is transposed)': (1, 104, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 104, 585, 585)} 

(1, 104, 585, 585)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_021.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.86328101 0.86328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86328101, 0.86328101]), 'spacing_transposed': array([2.5       , 0.86328101, 0.86328101]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 551, 551)} 

(1, 93, 551, 551)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_035.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 73, 512, 512) after crop: (1, 73, 512, 512) spacing: [2.5        0.61328101 0.61328101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.61328101, 0.61328101]), 'spacing_transposed': array([2.5       , 0.61328101, 0.61328101]), 'data.shape (data is transposed)': (1, 73, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 73, 391, 391)} 

(1, 73, 391, 391)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_048.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 121, 512, 512) after crop: (1, 121, 512, 512) spacing: [2.5        0.97070301 0.97070301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97070301, 0.97070301]), 'spacing_transposed': array([2.5       , 0.97070301, 0.97070301]), 'data.shape (data is transposed)': (1, 121, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 121, 619, 619)} 

(1, 121, 619, 619)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_056.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 84, 512, 512) after crop: (1, 84, 512, 512) spacing: [2.5      0.765625 0.765625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.765625, 0.765625]), 'spacing_transposed': array([2.5     , 0.765625, 0.765625]), 'data.shape (data is transposed)': (1, 84, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 488, 488)} 

(1, 84, 488, 488)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_070.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 106, 512, 512) after crop: (1, 106, 512, 512) spacing: [2.5        0.87109399 0.87109399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87109399, 0.87109399]), 'spacing_transposed': array([2.5       , 0.87109399, 0.87109399]), 'data.shape (data is transposed)': (1, 106, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 106, 556, 556)} 

(1, 106, 556, 556)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_083.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 83, 512, 512) after crop: (1, 83, 512, 512) spacing: [2.5        0.76953101 0.76953101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76953101, 0.76953101]), 'spacing_transposed': array([2.5       , 0.76953101, 0.76953101]), 'data.shape (data is transposed)': (1, 83, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 83, 491, 491)} 

(1, 83, 491, 491)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_094.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 84, 512, 512) after crop: (1, 84, 512, 512) spacing: [2.5        0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72265601, 0.72265601]), 'spacing_transposed': array([2.5       , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 84, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 461, 461)} 

(1, 84, 461, 461)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_105.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [5.         0.76953101 0.76953101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.76953101, 0.76953101]), 'spacing_transposed': array([5.        , 0.76953101, 0.76953101]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 196, 491, 491)} 

(1, 196, 491, 491)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_117.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 134, 512, 512) after crop: (1, 134, 512, 512) spacing: [3.         0.66015601 0.66015601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.        , 0.66015601, 0.66015601]), 'spacing_transposed': array([3.        , 0.66015601, 0.66015601]), 'data.shape (data is transposed)': (1, 134, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 161, 421, 421)} 

(1, 161, 421, 421)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_126.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 73, 512, 512) after crop: (1, 73, 512, 512) spacing: [2.5      0.734375 0.734375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.734375, 0.734375]), 'spacing_transposed': array([2.5     , 0.734375, 0.734375]), 'data.shape (data is transposed)': (1, 73, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 73, 468, 468)} 

(1, 73, 468, 468)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_137.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83984399, 0.83984399]), 'spacing_transposed': array([2.5       , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 536, 536)} 

(1, 85, 536, 536)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_158.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 66, 512, 512) after crop: (1, 66, 512, 512) spacing: [5.         0.94921899 0.94921899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.94921899, 0.94921899]), 'spacing_transposed': array([5.        , 0.94921899, 0.94921899]), 'data.shape (data is transposed)': (1, 66, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 132, 605, 605)} 

(1, 132, 605, 605)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_169.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 473, 473)} 

(1, 87, 473, 473)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_179.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.78515601 0.78515601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.78515601, 0.78515601]), 'spacing_transposed': array([2.5       , 0.78515601, 0.78515601]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 501, 501)} 

(1, 89, 501, 501)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_187.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83984399, 0.83984399]), 'spacing_transposed': array([2.5       , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 536, 536)} 

(1, 95, 536, 536)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_198.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 111, 512, 512) after crop: (1, 111, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 111, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 111, 573, 573)} 

(1, 111, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_207.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5      0.734375 0.734375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.734375, 0.734375]), 'spacing_transposed': array([2.5     , 0.734375, 0.734375]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 468, 468)} 

(1, 81, 468, 468)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_219.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 192, 512, 512) after crop: (1, 192, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 192, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 192, 623, 623)} 

(1, 192, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_230.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 96, 512, 512) after crop: (1, 96, 512, 512) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 96, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 96, 497, 497)} 

(1, 96, 497, 497)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_241.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5        0.79882801 0.79882801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79882801, 0.79882801]), 'spacing_transposed': array([2.5       , 0.79882801, 0.79882801]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 510, 510)} 

(1, 99, 510, 510)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_249.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 123, 512, 512) after crop: (1, 123, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 123, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 123, 623, 623)} 

(1, 123, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_262.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 76, 512, 512) after crop: (1, 76, 512, 512) spacing: [2.5        0.75195301 0.75195301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75195301, 0.75195301]), 'spacing_transposed': array([2.5       , 0.75195301, 0.75195301]), 'data.shape (data is transposed)': (1, 76, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 76, 480, 480)} 

(1, 76, 480, 480)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_270.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5        0.80078101 0.80078101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80078101, 0.80078101]), 'spacing_transposed': array([2.5       , 0.80078101, 0.80078101]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 511, 511)} 

(1, 87, 511, 511)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_279.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 80, 512, 512) after crop: (1, 80, 512, 512) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 80, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 80, 448, 448)} 

(1, 80, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_289.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 96, 512, 512) after crop: (1, 96, 512, 512) spacing: [2.5    0.6875 0.6875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.6875, 0.6875]), 'spacing_transposed': array([2.5   , 0.6875, 0.6875]), 'data.shape (data is transposed)': (1, 96, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 96, 439, 439)} 

(1, 96, 439, 439)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_296.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 43, 512, 512) after crop: (1, 43, 512, 512) spacing: [5.         0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.97656202, 0.97656202]), 'spacing_transposed': array([5.        , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 43, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 86, 623, 623)} 

(1, 86, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_304.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72265601, 0.72265601]), 'spacing_transposed': array([2.5       , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 461, 461)} 

(1, 93, 461, 461)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_312.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 75, 512, 512) after crop: (1, 75, 512, 512) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 75, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 75, 592, 592)} 

(1, 75, 592, 592)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_325.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 473, 473)} 

(1, 93, 473, 473)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_331.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 101, 512, 512) after crop: (1, 101, 512, 512) spacing: [2.5        0.79882801 0.79882801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79882801, 0.79882801]), 'spacing_transposed': array([2.5       , 0.79882801, 0.79882801]), 'data.shape (data is transposed)': (1, 101, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 101, 510, 510)} 

(1, 101, 510, 510)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_344.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 112, 512, 512) after crop: (1, 112, 512, 512) spacing: [2.5        0.77148402 0.77148402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77148402, 0.77148402]), 'spacing_transposed': array([2.5       , 0.77148402, 0.77148402]), 'data.shape (data is transposed)': (1, 112, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 112, 492, 492)} 

(1, 112, 492, 492)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_354.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [5.         0.83007801 0.83007801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.83007801, 0.83007801]), 'spacing_transposed': array([5.        , 0.83007801, 0.83007801]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 162, 529, 529)} 

(1, 162, 529, 529)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_364.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 448, 448)} 

(1, 89, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_372.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 623, 623)} 

(1, 93, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_380.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 63, 512, 512) after crop: (1, 63, 512, 512) spacing: [5.         0.89257801 0.89257801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.89257801, 0.89257801]), 'spacing_transposed': array([5.        , 0.89257801, 0.89257801]), 'data.shape (data is transposed)': (1, 63, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 126, 569, 569)} 

(1, 126, 569, 569)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_389.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 118, 512, 512) after crop: (1, 118, 512, 512) spacing: [2.5        0.85156202 0.85156202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85156202, 0.85156202]), 'spacing_transposed': array([2.5       , 0.85156202, 0.85156202]), 'data.shape (data is transposed)': (1, 118, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 118, 543, 543)} 

(1, 118, 543, 543)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_400.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 107, 512, 512) after crop: (1, 107, 512, 512) spacing: [2.5        0.96679699 0.96679699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.96679699, 0.96679699]), 'spacing_transposed': array([2.5       , 0.96679699, 0.96679699]), 'data.shape (data is transposed)': (1, 107, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 107, 617, 617)} 

(1, 107, 617, 617)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_409.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 751, 512, 512) after crop: (1, 751, 512, 512) spacing: [0.70001203 0.78710902 0.78710902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([0.70001203, 0.78710902, 0.78710902]), 'spacing_transposed': array([0.70001203, 0.78710902, 0.78710902]), 'data.shape (data is transposed)': (1, 751, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 210, 502, 502)} 

(1, 210, 502, 502)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_418.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 44, 512, 512) after crop: (1, 44, 512, 512) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 44, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 88, 448, 448)} 

(1, 88, 448, 448)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_010.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 174, 512, 512) after crop: (1, 174, 512, 512) spacing: [1.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([1.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 174, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 104, 623, 623)} 

(1, 104, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_024.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 105, 512, 512) after crop: (1, 105, 512, 512) spacing: [2.5        0.79492199 0.79492199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79492199, 0.79492199]), 'spacing_transposed': array([2.5       , 0.79492199, 0.79492199]), 'data.shape (data is transposed)': (1, 105, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 105, 507, 507)} 

(1, 105, 507, 507)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_037.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 71, 512, 512) after crop: (1, 71, 512, 512) spacing: [2.5        0.64453101 0.64453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.64453101, 0.64453101]), 'spacing_transposed': array([2.5       , 0.64453101, 0.64453101]), 'data.shape (data is transposed)': (1, 71, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 71, 411, 411)} 

(1, 71, 411, 411)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_049.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [2.5        0.80664098 0.80664098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.80664098, 0.80664098]), 'spacing_transposed': array([2.5       , 0.80664098, 0.80664098]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 87, 514, 514)} 

(1, 87, 514, 514)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_058.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 91, 512, 512) after crop: (1, 91, 512, 512) spacing: [5.         0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.95117199, 0.95117199]), 'spacing_transposed': array([5.        , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 91, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 182, 607, 607)} 

(1, 182, 607, 607)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_075.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 121, 512, 512) after crop: (1, 121, 512, 512) spacing: [1.25       0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([1.25      , 0.81640601, 0.81640601]), 'spacing_transposed': array([1.25      , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 121, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 60, 521, 521)} 

(1, 60, 521, 521)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_084.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 82, 512, 512) after crop: (1, 82, 512, 512) spacing: [2.5        0.72851598 0.72851598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.72851598, 0.72851598]), 'spacing_transposed': array([2.5       , 0.72851598, 0.72851598]), 'data.shape (data is transposed)': (1, 82, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 465, 465)} 

(1, 82, 465, 465)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_096.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 108, 512, 512) after crop: (1, 108, 512, 512) spacing: [2.5        0.92578101 0.92578101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92578101, 0.92578101]), 'spacing_transposed': array([2.5       , 0.92578101, 0.92578101]), 'data.shape (data is transposed)': (1, 108, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 108, 590, 590)} 

(1, 108, 590, 590)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_106.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 55, 512, 512) after crop: (1, 55, 512, 512) spacing: [3.75     0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.75    , 0.703125, 0.703125]), 'spacing_transposed': array([3.75    , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 55, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 82, 448, 448)} 

(1, 82, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_119.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 573, 573)} 

(1, 85, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_127.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 126, 512, 512) after crop: (1, 126, 512, 512) spacing: [2.5        0.86914098 0.86914098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86914098, 0.86914098]), 'spacing_transposed': array([2.5       , 0.86914098, 0.86914098]), 'data.shape (data is transposed)': (1, 126, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 126, 554, 554)} 

(1, 126, 554, 554)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_138.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5    0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.9375, 0.9375]), 'spacing_transposed': array([2.5   , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 598, 598)} 

(1, 95, 598, 598)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_159.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 90, 512, 512) after crop: (1, 90, 512, 512) spacing: [2.5     0.65625 0.65625] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.65625, 0.65625]), 'spacing_transposed': array([2.5    , 0.65625, 0.65625]), 'data.shape (data is transposed)': (1, 90, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 90, 419, 419)} 

(1, 90, 419, 419)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_170.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5        0.80273402 0.80273402] 

no resampling necessary
no resampling necessary
before: {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'spacing_transposed': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 512, 512)} 

(1, 103, 512, 512)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_180.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 473, 473)} 

(1, 95, 473, 473)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_191.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 512, 512) after crop: (1, 57, 512, 512) spacing: [2.5        0.73828101 0.73828101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73828101, 0.73828101]), 'spacing_transposed': array([2.5       , 0.73828101, 0.73828101]), 'data.shape (data is transposed)': (1, 57, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 57, 471, 471)} 

(1, 57, 471, 471)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_199.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.80273402 0.80273402] 

no resampling necessary
no resampling necessary
before: {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'spacing_transposed': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 512, 512)} 

(1, 95, 512, 512)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_209.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 104, 512, 512) after crop: (1, 104, 512, 512) spacing: [2.5        0.96093798 0.96093798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.96093798, 0.96093798]), 'spacing_transposed': array([2.5       , 0.96093798, 0.96093798]), 'data.shape (data is transposed)': (1, 104, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 104, 613, 613)} 

(1, 104, 613, 613)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_222.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 77, 512, 512) after crop: (1, 77, 512, 512) spacing: [2.5        0.60546899 0.60546899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.60546899, 0.60546899]), 'spacing_transposed': array([2.5       , 0.60546899, 0.60546899]), 'data.shape (data is transposed)': (1, 77, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 77, 386, 386)} 

(1, 77, 386, 386)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_231.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.79101598 0.79101598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.79101598, 0.79101598]), 'spacing_transposed': array([2.5       , 0.79101598, 0.79101598]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 505, 505)} 

(1, 93, 505, 505)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_242.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 101, 512, 512) after crop: (1, 101, 512, 512) spacing: [2.5        0.87109399 0.87109399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.87109399, 0.87109399]), 'spacing_transposed': array([2.5       , 0.87109399, 0.87109399]), 'data.shape (data is transposed)': (1, 101, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 101, 556, 556)} 

(1, 101, 556, 556)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_253.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 94, 512, 512) after crop: (1, 94, 512, 512) spacing: [2.5        0.76953101 0.76953101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76953101, 0.76953101]), 'spacing_transposed': array([2.5       , 0.76953101, 0.76953101]), 'data.shape (data is transposed)': (1, 94, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 94, 491, 491)} 

(1, 94, 491, 491)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_264.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 109, 512, 512) after crop: (1, 109, 512, 512) spacing: [2.5        0.83789098 0.83789098] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83789098, 0.83789098]), 'spacing_transposed': array([2.5       , 0.83789098, 0.83789098]), 'data.shape (data is transposed)': (1, 109, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 109, 534, 534)} 

(1, 109, 534, 534)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_274.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 115, 512, 512) after crop: (1, 115, 512, 512) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 115, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 115, 448, 448)} 

(1, 115, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_280.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.92773402 0.92773402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.92773402, 0.92773402]), 'spacing_transposed': array([2.5       , 0.92773402, 0.92773402]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 592, 592)} 

(1, 97, 592, 592)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_290.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.91601598 0.91601598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.91601598, 0.91601598]), 'spacing_transposed': array([2.5       , 0.91601598, 0.91601598]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 584, 584)} 

(1, 97, 584, 584)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_297.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 101, 512, 512) after crop: (1, 101, 512, 512) spacing: [2.5        0.90234399 0.90234399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.90234399, 0.90234399]), 'spacing_transposed': array([2.5       , 0.90234399, 0.90234399]), 'data.shape (data is transposed)': (1, 101, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 101, 576, 576)} 

(1, 101, 576, 576)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_305.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 73, 512, 512) after crop: (1, 73, 512, 512) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 73, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 73, 472, 472)} 

(1, 73, 472, 472)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_313.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 523, 523)} 

(1, 95, 523, 523)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_326.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.95117199 0.95117199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95117199, 0.95117199]), 'spacing_transposed': array([2.5       , 0.95117199, 0.95117199]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 607, 607)} 

(1, 89, 607, 607)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_333.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 623, 623)} 

(1, 97, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_345.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 84, 512, 512) after crop: (1, 84, 512, 512) spacing: [2.5        0.83984399 0.83984399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83984399, 0.83984399]), 'spacing_transposed': array([2.5       , 0.83984399, 0.83984399]), 'data.shape (data is transposed)': (1, 84, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 84, 536, 536)} 

(1, 84, 536, 536)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_355.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 86, 512, 512) after crop: (1, 86, 512, 512) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 86, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 172, 448, 448)} 

(1, 172, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_365.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 94, 512, 512) after crop: (1, 94, 512, 512) spacing: [5.    0.875 0.875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.   , 0.875, 0.875]), 'spacing_transposed': array([5.   , 0.875, 0.875]), 'data.shape (data is transposed)': (1, 94, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 188, 558, 558)} 

(1, 188, 558, 558)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_374.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 137, 512, 512) after crop: (1, 137, 512, 512) spacing: [2.5        0.74218798 0.74218798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74218798, 0.74218798]), 'spacing_transposed': array([2.5       , 0.74218798, 0.74218798]), 'data.shape (data is transposed)': (1, 137, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 137, 473, 473)} 

(1, 137, 473, 473)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_382.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 111, 512, 512) after crop: (1, 111, 512, 512) spacing: [2.5        0.81640601 0.81640601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.81640601, 0.81640601]), 'spacing_transposed': array([2.5       , 0.81640601, 0.81640601]), 'data.shape (data is transposed)': (1, 111, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 111, 521, 521)} 

(1, 111, 521, 521)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_392.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 512, 512) after crop: (1, 57, 512, 512) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 57, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 114, 448, 448)} 

(1, 114, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_401.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 120, 512, 512) after crop: (1, 120, 512, 512) spacing: [3.75       0.72265601 0.72265601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([3.75      , 0.72265601, 0.72265601]), 'spacing_transposed': array([3.75      , 0.72265601, 0.72265601]), 'data.shape (data is transposed)': (1, 120, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 180, 461, 461)} 

(1, 180, 461, 461)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_410.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 101, 512, 512) after crop: (1, 101, 512, 512) spacing: [2.5      0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.703125, 0.703125]), 'spacing_transposed': array([2.5     , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 101, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 101, 448, 448)} 

(1, 101, 448, 448)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_419.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 44, 512, 512) after crop: (1, 44, 512, 512) spacing: [5.     0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.    , 0.9375, 0.9375]), 'spacing_transposed': array([5.    , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 44, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 88, 598, 598)} 

(1, 88, 598, 598)
This worker has ended successfully, no errors to report
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_015.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_001.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_005.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_028.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_018.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_021.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_041.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_029.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_035.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_051.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_043.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_048.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_066.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_052.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_056.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_078.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_067.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_070.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_087.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_080.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_083.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_101.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_091.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_094.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_110.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_102.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_105.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_122.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_113.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_117.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_130.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_124.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_126.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_148.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_131.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_137.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_165.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_149.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_158.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_173.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_166.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_169.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_182.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_175.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_179.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_194.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_183.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_187.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_201.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_196.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_198.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_212.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_203.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_207.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_226.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_214.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_219.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_235.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_228.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_230.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_244.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_236.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_241.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_255.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_246.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_249.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_267.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_256.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_262.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_276.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_268.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_270.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_284.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_277.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_279.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_292.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_285.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_289.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_301.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_293.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_296.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_309.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_302.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_304.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_320.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_310.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_312.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_328.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_321.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_325.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_339.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_329.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_331.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_348.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_342.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_344.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_357.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_350.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_354.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_367.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_358.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_364.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_376.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_369.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_372.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_386.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_377.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_380.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_395.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_387.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_389.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_404.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_398.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_400.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_413.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_405.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_409.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_410.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_415.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_419.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_016.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_004.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_025.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_010.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_019.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_040.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_024.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_032.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_050.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_037.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_045.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_061.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_049.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_055.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_077.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_058.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_069.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_086.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_075.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_081.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_098.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_084.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_093.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_107.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_096.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_103.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_120.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_106.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_114.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_129.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_119.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_125.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_140.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_127.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_135.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_160.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_138.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_157.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_172.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_159.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_167.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_181.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_170.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_178.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_193.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_180.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_186.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_200.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_191.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_197.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_211.nii.gz
force_separate_z: None interpolation order: 1
no resampling necessary
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_199.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_204.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_224.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_209.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_215.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_234.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_222.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_229.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_243.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_231.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_239.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_254.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_242.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_247.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_266.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_253.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_261.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_275.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_264.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_269.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_283.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_274.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_278.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_291.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_280.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_286.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_299.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_290.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_294.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_308.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_297.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_303.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_316.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_305.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_311.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_327.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_313.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_323.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_336.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_326.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_330.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_347.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_333.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_343.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_356.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_345.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_351.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_366.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_355.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_361.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_375.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_365.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_370.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_385.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_374.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_379.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_393.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_382.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_388.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_402.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_392.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_399.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_412.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_401.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_406.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_421.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_414.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_418.nii.gz
step_size: 0.5
do mirror: True
data shape: (1, 118, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 118, 543, 543)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 58, 78], [0, 106, 213, 319], [0, 106, 213, 319]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_402.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 161, 463, 463)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 35, 52, 69, 86, 104, 121], [0, 80, 159, 239], [0, 80, 159, 239]]
number of tiles: 128
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_404.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_392.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_398.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 593, 593)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 92, 184, 277, 369], [0, 92, 184, 277, 369]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 593, 593)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 92, 184, 277, 369], [0, 92, 184, 277, 369]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 593, 593)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 92, 184, 277, 369], [0, 92, 184, 277, 369]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 593, 593)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 92, 184, 277, 369], [0, 92, 184, 277, 369]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 593, 593)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 92, 184, 277, 369], [0, 92, 184, 277, 369]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_399.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 116, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_400.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 617, 617)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 98, 196, 295, 393], [0, 98, 196, 295, 393]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 617, 617)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 98, 196, 295, 393], [0, 98, 196, 295, 393]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 617, 617)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 98, 196, 295, 393], [0, 98, 196, 295, 393]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 617, 617)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 98, 196, 295, 393], [0, 98, 196, 295, 393]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 617, 617)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 98, 196, 295, 393], [0, 98, 196, 295, 393]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_412.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 197, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 78, 98, 118, 137, 157], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 197, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 78, 98, 118, 137, 157], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 197, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 78, 98, 118, 137, 157], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 197, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 78, 98, 118, 137, 157], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 197, 584, 584)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59, 78, 98, 118, 137, 157], [0, 90, 180, 270, 360], [0, 90, 180, 270, 360]]
number of tiles: 225
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_413.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_401.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 180, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80, 100, 120, 140], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 180, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80, 100, 120, 140], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 180, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80, 100, 120, 140], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 180, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80, 100, 120, 140], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 180, 461, 461)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80, 100, 120, 140], [0, 79, 158, 237], [0, 79, 158, 237]]
number of tiles: 128
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_405.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 517, 517)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 98, 195, 293], [0, 98, 195, 293]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_406.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 86, 569, 569)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 31, 46], [0, 86, 172, 259, 345], [0, 86, 172, 259, 345]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_409.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 210, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 94, 113, 132, 151, 170], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 160
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 210, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 94, 113, 132, 151, 170], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 160
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 210, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 94, 113, 132, 151, 170], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 160
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 210, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 94, 113, 132, 151, 170], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 160
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 210, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 76, 94, 113, 132, 151, 170], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 160
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_421.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 620, 620)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 99, 198, 297, 396], [0, 99, 198, 297, 396]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 620, 620)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 99, 198, 297, 396], [0, 99, 198, 297, 396]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 620, 620)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 99, 198, 297, 396], [0, 99, 198, 297, 396]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 620, 620)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 99, 198, 297, 396], [0, 99, 198, 297, 396]]
number of tiles: 125
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 620, 620)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 99, 198, 297, 396], [0, 99, 198, 297, 396]]
number of tiles: 125
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_410.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 112, 224], [0, 112, 224]]
number of tiles: 45
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_414.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 84, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 29, 44], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_415.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 122, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49, 66, 82], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 122, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49, 66, 82], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 122, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49, 66, 82], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 122, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49, 66, 82], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 150
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 122, 561, 561)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49, 66, 82], [0, 84, 168, 253, 337], [0, 84, 168, 253, 337]]
number of tiles: 150
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_418.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTr/panc_419.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
inference done. Now waiting for the segmentation export to finish...
postprocessing...


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

using model stored in  /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1
This model expects 1 input modalities for each image
Found 42 unique case ids, here are some examples: ['panc_318' 'panc_109' 'panc_227' 'panc_360' 'panc_155' 'panc_145'
 'panc_095' 'panc_092' 'panc_416' 'panc_391']
If they don't look right, make sure to double check your filenames. They must end with _0000.nii.gz etc
number of cases: 42
number of cases that still need to be predicted: 42
emptying cuda cache
loading parameters for folds, None
folds is None so we will automatically look for output folders (not using 'all'!)
found the following folds:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4']
Suus1 - Initialise de NetworkTrainer
Suus2 - Initialise de nnUNetTrainer
Suus3 - Initialise de nnUNetTrainerV2
Suus5 - zet de plans properties
Suus4 - Initialise de trainer echt
Suus5 - zet de plans properties
Suus6 - Zet de data augmentation params
2022-07-09 13:16:54.504498: Using dummy2d data augmentation
Suus7 - zet deep supervision weights die de meerdere outputs prioriteit geven
Suus8 - Maak network aan (BELANGRIJK!)
SuusB - first stride 
Suus10 - StackedConvLayers, input: 1 en output: 32, first_stride: None, num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [1, 3, 3], 'padding': [0, 1, 1]}
SuusA - first_stride [1, 2, 2]
Suus10 - StackedConvLayers, input: 32 en output: 64, first_stride: [1, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 64 en output: 128, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 128 en output: 256, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
SuusA - first_stride [2, 2, 2]
Suus10 - StackedConvLayers, input: 256 en output: 320, first_stride: [2, 2, 2], num_convs: 2, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: [1, 2, 2], num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 640 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 320 en output: 320, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 512 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 256, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 256 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 128, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 128 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 64, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 64 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Suus10 - StackedConvLayers, input: 32 en output: 32, first_stride: None, num_convs: 1, conv_kwargs: {'stride': 1, 'dilation': 1, 'bias': True, 'kernel_size': [3, 3, 3], 'padding': [1, 1, 1]}
Generic_UNet(
  (encoder): Generic_UNETEncoder()
  (decoder): Generic_UNETDecoder()
  (conv_blocks_localization): ModuleList(
    (0): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(640, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (1): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(512, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (2): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(256, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (3): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(128, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
    (4): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(64, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(32, 32, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (conv_blocks_context): ModuleList(
    (0): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(1, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 32, kernel_size=(1, 3, 3), stride=(1, 1, 1), padding=(0, 1, 1))
          (instnorm): InstanceNorm3d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (1): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(32, 64, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (2): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (3): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (4): StackedConvLayers(
      (blocks): Sequential(
        (0): ConvDropoutNormNonlin(
          (conv): Conv3d(256, 320, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
        (1): ConvDropoutNormNonlin(
          (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
          (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
          (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
        )
      )
    )
    (5): Sequential(
      (0): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 2, 2), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
      (1): StackedConvLayers(
        (blocks): Sequential(
          (0): ConvDropoutNormNonlin(
            (conv): Conv3d(320, 320, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1))
            (instnorm): InstanceNorm3d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=False)
            (lrelu): LeakyReLU(negative_slope=0.01, inplace=True)
          )
        )
      )
    )
  )
  (td): ModuleList()
  (tu): ModuleList(
    (0): ConvTranspose3d(320, 320, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
    (1): ConvTranspose3d(320, 256, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (2): ConvTranspose3d(256, 128, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (3): ConvTranspose3d(128, 64, kernel_size=(2, 2, 2), stride=(2, 2, 2), bias=False)
    (4): ConvTranspose3d(64, 32, kernel_size=(1, 2, 2), stride=(1, 2, 2), bias=False)
  )
  (seg_outputs): ModuleList(
    (0): Conv3d(320, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (1): Conv3d(256, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (2): Conv3d(128, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (3): Conv3d(64, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
    (4): Conv3d(32, 2, kernel_size=(1, 1, 1), stride=(1, 1, 1), bias=False)
  )
)
using the following model files:  ['/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_0/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_1/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_2/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_3/model_final_checkpoint.model', '/exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task510/nnUNetTrainerV2__nnUNetPlansv2.1/fold_4/model_final_checkpoint.model']
starting preprocessing generator
starting prediction...
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_012.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 64
computing Gaussian
done
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 97, 502, 502)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57], [0, 93, 185, 278], [0, 93, 185, 278]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_006.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 101, 490, 490)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 46, 61], [0, 89, 177, 266], [0, 89, 177, 266]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_046.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_064.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 571, 571)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 87, 174, 260, 347], [0, 87, 174, 260, 347]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_042.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 102, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 31, 46, 62], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_071.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 174, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 77, 96, 115, 134], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 174, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 77, 96, 115, 134], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 174, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 77, 96, 115, 134], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 174, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 77, 96, 115, 134], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 128
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 174, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 38, 57, 77, 96, 115, 134], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 128
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_074.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 74, 498, 498)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34], [0, 91, 183, 274], [0, 91, 183, 274]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_088.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 487, 487)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 88, 175, 263], [0, 88, 175, 263]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 487, 487)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 88, 175, 263], [0, 88, 175, 263]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 487, 487)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 88, 175, 263], [0, 88, 175, 263]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 487, 487)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 88, 175, 263], [0, 88, 175, 263]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 487, 487)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 88, 175, 263], [0, 88, 175, 263]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_092.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 184, 513, 513)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126, 144], [0, 96, 193, 289], [0, 96, 193, 289]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 184, 513, 513)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126, 144], [0, 96, 193, 289], [0, 96, 193, 289]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 184, 513, 513)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126, 144], [0, 96, 193, 289], [0, 96, 193, 289]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 184, 513, 513)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126, 144], [0, 96, 193, 289], [0, 96, 193, 289]]
number of tiles: 144
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 184, 513, 513)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 54, 72, 90, 108, 126, 144], [0, 96, 193, 289], [0, 96, 193, 289]]
number of tiles: 144
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_095.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_089.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 496, 496)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 91, 181, 272], [0, 91, 181, 272]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_099.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 458, 458)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 78, 156, 234], [0, 78, 156, 234]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 458, 458)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 78, 156, 234], [0, 78, 156, 234]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 458, 458)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 78, 156, 234], [0, 78, 156, 234]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 458, 458)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 78, 156, 234], [0, 78, 156, 234]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 458, 458)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 78, 156, 234], [0, 78, 156, 234]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_100.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 523, 523)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 100, 199, 299], [0, 100, 199, 299]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_104.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 100, 573, 573)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60], [0, 87, 174, 262, 349], [0, 87, 174, 262, 349]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_111.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 114, 537, 537)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 56, 74], [0, 104, 209, 313], [0, 104, 209, 313]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_145.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_109.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 508, 508)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 95, 189, 284], [0, 95, 189, 284]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_147.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 467, 467)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 81, 162, 243], [0, 81, 162, 243]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_155.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 531, 531)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 102, 205, 307], [0, 102, 205, 307]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_210.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 564, 564)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 170, 255, 340], [0, 85, 170, 255, 340]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 564, 564)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 170, 255, 340], [0, 85, 170, 255, 340]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 564, 564)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 170, 255, 340], [0, 85, 170, 255, 340]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 564, 564)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 170, 255, 340], [0, 85, 170, 255, 340]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 564, 564)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 85, 170, 255, 340], [0, 85, 170, 255, 340]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_217.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 107, 529, 529)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 50, 67], [0, 102, 203, 305], [0, 102, 203, 305]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_218.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 99, 481, 481)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39, 59], [0, 86, 171, 257], [0, 86, 171, 257]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_006.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 101, 512, 512) after crop: (1, 101, 512, 512) spacing: [2.5        0.76757801 0.76757801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76757801, 0.76757801]), 'spacing_transposed': array([2.5       , 0.76757801, 0.76757801]), 'data.shape (data is transposed)': (1, 101, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 101, 490, 490)} 

(1, 101, 490, 490)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_074.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 37, 512, 512) after crop: (1, 37, 512, 512) spacing: [5.      0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.78125, 0.78125]), 'spacing_transposed': array([5.     , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 37, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 74, 498, 498)} 

(1, 74, 498, 498)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_100.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [2.5        0.82031202 0.82031202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.82031202, 0.82031202]), 'spacing_transposed': array([2.5       , 0.82031202, 0.82031202]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 98, 523, 523)} 

(1, 98, 523, 523)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_155.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5        0.83203101 0.83203101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83203101, 0.83203101]), 'spacing_transposed': array([2.5       , 0.83203101, 0.83203101]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 531, 531)} 

(1, 95, 531, 531)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_227.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.97656202 0.97656202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.97656202, 0.97656202]), 'spacing_transposed': array([2.5       , 0.97656202, 0.97656202]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 623, 623)} 

(1, 89, 623, 623)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_298.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.86523402 0.86523402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86523402, 0.86523402]), 'spacing_transposed': array([2.5       , 0.86523402, 0.86523402]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 552, 552)} 

(1, 93, 552, 552)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_360.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 40, 512, 512) after crop: (1, 40, 512, 512) spacing: [7.5        0.81835902 0.81835902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([7.5       , 0.81835902, 0.81835902]), 'spacing_transposed': array([7.5       , 0.81835902, 0.81835902]), 'data.shape (data is transposed)': (1, 40, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 120, 522, 522)} 

(1, 120, 522, 522)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_012.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 97, 512, 512) after crop: (1, 97, 512, 512) spacing: [2.5        0.78710902 0.78710902] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.78710902, 0.78710902]), 'spacing_transposed': array([2.5       , 0.78710902, 0.78710902]), 'data.shape (data is transposed)': (1, 97, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 97, 502, 502)} 

(1, 97, 502, 502)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_088.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5        0.76367199 0.76367199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.76367199, 0.76367199]), 'spacing_transposed': array([2.5       , 0.76367199, 0.76367199]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 487, 487)} 

(1, 103, 487, 487)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_104.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 100, 512, 512) after crop: (1, 100, 512, 512) spacing: [2.5        0.89843798 0.89843798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89843798, 0.89843798]), 'spacing_transposed': array([2.5       , 0.89843798, 0.89843798]), 'data.shape (data is transposed)': (1, 100, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 100, 573, 573)} 

(1, 100, 573, 573)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_210.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.88476598 0.88476598] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.88476598, 0.88476598]), 'spacing_transposed': array([2.5       , 0.88476598, 0.88476598]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 564, 564)} 

(1, 93, 564, 564)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_258.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 79, 512, 512) after crop: (1, 79, 512, 512) spacing: [2.5        0.73046899 0.73046899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73046899, 0.73046899]), 'spacing_transposed': array([2.5       , 0.73046899, 0.73046899]), 'data.shape (data is transposed)': (1, 79, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 79, 466, 466)} 

(1, 79, 466, 466)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_300.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.86718798 0.86718798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86718798, 0.86718798]), 'spacing_transposed': array([2.5       , 0.86718798, 0.86718798]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 553, 553)} 

(1, 85, 553, 553)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_362.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 48, 512, 512) after crop: (1, 48, 512, 512) spacing: [5.       0.703125 0.703125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.      , 0.703125, 0.703125]), 'spacing_transposed': array([5.      , 0.703125, 0.703125]), 'data.shape (data is transposed)': (1, 48, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 96, 448, 448)} 

(1, 96, 448, 448)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_046.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5     0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.78125, 0.78125]), 'spacing_transposed': array([2.5    , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 498, 498)} 

(1, 103, 498, 498)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_092.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 92, 512, 512) after crop: (1, 92, 512, 512) spacing: [5.         0.80468798 0.80468798] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.80468798, 0.80468798]), 'spacing_transposed': array([5.        , 0.80468798, 0.80468798]), 'data.shape (data is transposed)': (1, 92, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 184, 513, 513)} 

(1, 184, 513, 513)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_111.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 57, 512, 512) after crop: (1, 57, 512, 512) spacing: [5.         0.84179699 0.84179699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.84179699, 0.84179699]), 'spacing_transposed': array([5.        , 0.84179699, 0.84179699]), 'data.shape (data is transposed)': (1, 57, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 114, 537, 537)} 

(1, 114, 537, 537)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_217.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 107, 512, 512) after crop: (1, 107, 512, 512) spacing: [2.5        0.83007801 0.83007801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83007801, 0.83007801]), 'spacing_transposed': array([2.5       , 0.83007801, 0.83007801]), 'data.shape (data is transposed)': (1, 107, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 107, 529, 529)} 

(1, 107, 529, 529)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_265.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5        0.83398402 0.83398402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.83398402, 0.83398402]), 'spacing_transposed': array([2.5       , 0.83398402, 0.83398402]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 532, 532)} 

(1, 81, 532, 532)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_318.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 105, 512, 512) after crop: (1, 105, 512, 512) spacing: [2.5        0.78906202 0.78906202] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.78906202, 0.78906202]), 'spacing_transposed': array([2.5       , 0.78906202, 0.78906202]), 'data.shape (data is transposed)': (1, 105, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 105, 503, 503)} 

(1, 105, 503, 503)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_391.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 89, 512, 512) after crop: (1, 89, 512, 512) spacing: [2.5        0.95703101 0.95703101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.95703101, 0.95703101]), 'spacing_transposed': array([2.5       , 0.95703101, 0.95703101]), 'data.shape (data is transposed)': (1, 89, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 89, 610, 610)} 

(1, 89, 610, 610)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_064.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.89453101 0.89453101] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.89453101, 0.89453101]), 'spacing_transposed': array([2.5       , 0.89453101, 0.89453101]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 571, 571)} 

(1, 93, 571, 571)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_095.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.75195301 0.75195301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75195301, 0.75195301]), 'spacing_transposed': array([2.5       , 0.75195301, 0.75195301]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 480, 480)} 

(1, 93, 480, 480)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_145.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5    0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.9375, 0.9375]), 'spacing_transposed': array([2.5   , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 598, 598)} 

(1, 93, 598, 598)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_218.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5        0.75390601 0.75390601] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75390601, 0.75390601]), 'spacing_transposed': array([2.5       , 0.75390601, 0.75390601]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 481, 481)} 

(1, 99, 481, 481)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_287.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 98, 512, 512) after crop: (1, 98, 512, 512) spacing: [2.5        0.77929699 0.77929699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77929699, 0.77929699]), 'spacing_transposed': array([2.5       , 0.77929699, 0.77929699]), 'data.shape (data is transposed)': (1, 98, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 98, 497, 497)} 

(1, 98, 497, 497)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_334.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 91, 512, 512) after crop: (1, 91, 512, 512) spacing: [2.5        0.75195301 0.75195301] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.75195301, 0.75195301]), 'spacing_transposed': array([2.5       , 0.75195301, 0.75195301]), 'data.shape (data is transposed)': (1, 91, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 91, 480, 480)} 

(1, 91, 480, 480)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_411.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5        0.73632801 0.73632801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73632801, 0.73632801]), 'spacing_transposed': array([2.5       , 0.73632801, 0.73632801]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 470, 470)} 

(1, 103, 470, 470)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_042.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 51, 512, 512) after crop: (1, 51, 512, 512) spacing: [5.         0.84179699 0.84179699] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.        , 0.84179699, 0.84179699]), 'spacing_transposed': array([5.        , 0.84179699, 0.84179699]), 'data.shape (data is transposed)': (1, 51, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 102, 537, 537)} 

(1, 102, 537, 537)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_089.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 91, 512, 512) after crop: (1, 91, 512, 512) spacing: [2.5        0.77734399 0.77734399] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.77734399, 0.77734399]), 'spacing_transposed': array([2.5       , 0.77734399, 0.77734399]), 'data.shape (data is transposed)': (1, 91, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 91, 496, 496)} 

(1, 91, 496, 496)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_109.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 99, 512, 512) after crop: (1, 99, 512, 512) spacing: [2.5      0.796875 0.796875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5     , 0.796875, 0.796875]), 'spacing_transposed': array([2.5     , 0.796875, 0.796875]), 'data.shape (data is transposed)': (1, 99, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 99, 508, 508)} 

(1, 99, 508, 508)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_213.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 95, 512, 512) after crop: (1, 95, 512, 512) spacing: [2.5    0.9375 0.9375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.9375, 0.9375]), 'spacing_transposed': array([2.5   , 0.9375, 0.9375]), 'data.shape (data is transposed)': (1, 95, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 95, 598, 598)} 

(1, 95, 598, 598)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_259.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 88, 512, 512) after crop: (1, 88, 512, 512) spacing: [2.5     0.84375 0.84375] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5    , 0.84375, 0.84375]), 'spacing_transposed': array([2.5    , 0.84375, 0.84375]), 'data.shape (data is transposed)': (1, 88, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 88, 538, 538)} 

(1, 88, 538, 538)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_315.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.85546899 0.85546899] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.85546899, 0.85546899]), 'spacing_transposed': array([2.5       , 0.85546899, 0.85546899]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 546, 546)} 

(1, 93, 546, 546)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_378.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 93, 512, 512) after crop: (1, 93, 512, 512) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 93, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 93, 472, 472)} 

(1, 93, 472, 472)
This worker has ended successfully, no errors to report
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_071.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 87, 512, 512) after crop: (1, 87, 512, 512) spacing: [5.      0.78125 0.78125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.78125, 0.78125]), 'spacing_transposed': array([5.     , 0.78125, 0.78125]), 'data.shape (data is transposed)': (1, 87, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 174, 498, 498)} 

(1, 174, 498, 498)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_099.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 48, 512, 512) after crop: (1, 48, 512, 512) spacing: [5.      0.71875 0.71875] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([5.     , 0.71875, 0.71875]), 'spacing_transposed': array([5.     , 0.71875, 0.71875]), 'data.shape (data is transposed)': (1, 48, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 96, 458, 458)} 

(1, 96, 458, 458)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_147.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 85, 512, 512) after crop: (1, 85, 512, 512) spacing: [2.5        0.73242199 0.73242199] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.73242199, 0.73242199]), 'spacing_transposed': array([2.5       , 0.73242199, 0.73242199]), 'data.shape (data is transposed)': (1, 85, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 85, 467, 467)} 

(1, 85, 467, 467)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_225.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 81, 512, 512) after crop: (1, 81, 512, 512) spacing: [2.5        0.74023402 0.74023402] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.74023402, 0.74023402]), 'spacing_transposed': array([2.5       , 0.74023402, 0.74023402]), 'data.shape (data is transposed)': (1, 81, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 81, 472, 472)} 

(1, 81, 472, 472)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_295.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 105, 512, 512) after crop: (1, 105, 512, 512) spacing: [2.5    0.8125 0.8125] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5   , 0.8125, 0.8125]), 'spacing_transposed': array([2.5   , 0.8125, 0.8125]), 'data.shape (data is transposed)': (1, 105, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 105, 518, 518)} 

(1, 105, 518, 518)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_346.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 103, 512, 512) after crop: (1, 103, 512, 512) spacing: [2.5        0.86132801 0.86132801] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([2.5       , 0.86132801, 0.86132801]), 'spacing_transposed': array([2.5       , 0.86132801, 0.86132801]), 'data.shape (data is transposed)': (1, 103, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 103, 549, 549)} 

(1, 103, 549, 549)
preprocessing /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_416.nii.gz
using preprocessor GenericPreprocessor
before crop: (1, 116, 512, 512) after crop: (1, 116, 512, 512) spacing: [4.00003004 0.921875   0.921875  ] 

separate z, order in z is 0 order inplane is 3
separate z, order in z is 0 order inplane is 1
before: {'spacing': array([4.00003004, 0.921875  , 0.921875  ]), 'spacing_transposed': array([4.00003004, 0.921875  , 0.921875  ]), 'data.shape (data is transposed)': (1, 116, 512, 512)} 
after:  {'spacing': array([2.5       , 0.80273402, 0.80273402]), 'data.shape (data is resampled)': (1, 186, 588, 588)} 

(1, 186, 588, 588)
This worker has ended successfully, no errors to report
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_012.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_046.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_042.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_074.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_092.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_089.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_100.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_111.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_109.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_155.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_217.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_213.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_227.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_265.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_259.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_298.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_318.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_315.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_360.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_391.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_378.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_006.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_064.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_071.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_088.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_095.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_099.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_104.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_145.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_147.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_210.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_218.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_225.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_258.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_287.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_295.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_300.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_334.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_346.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_362.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_411.nii.gz
force_separate_z: None interpolation order: 1
separate z: True lowres axis [0]
separate z, order in z is 0 order inplane is 1
suus we gaan schrijven naar /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_416.nii.gz
/exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_213.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 95, 598, 598)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 37, 55], [0, 94, 187, 280, 374], [0, 94, 187, 280, 374]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_225.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_227.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 623, 623)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 100, 200, 299, 399], [0, 100, 200, 299, 399]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_258.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 48
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 79, 466, 466)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 39], [0, 81, 161, 242], [0, 81, 161, 242]]
number of tiles: 48
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_265.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 81, 532, 532)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 14, 27, 41], [0, 103, 205, 308], [0, 103, 205, 308]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_287.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 98, 497, 497)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 39, 58], [0, 91, 182, 273], [0, 91, 182, 273]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_259.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 538, 538)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 105, 209, 314], [0, 105, 209, 314]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 538, 538)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 105, 209, 314], [0, 105, 209, 314]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 538, 538)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 105, 209, 314], [0, 105, 209, 314]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 538, 538)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 105, 209, 314], [0, 105, 209, 314]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 88, 538, 538)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 48], [0, 105, 209, 314], [0, 105, 209, 314]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_295.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 518, 518)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 98, 196, 294], [0, 98, 196, 294]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_298.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 552, 552)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 219, 328], [0, 109, 219, 328]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 552, 552)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 219, 328], [0, 109, 219, 328]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 552, 552)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 219, 328], [0, 109, 219, 328]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 552, 552)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 219, 328], [0, 109, 219, 328]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 552, 552)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 109, 219, 328], [0, 109, 219, 328]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_300.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 553, 553)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 110, 219, 329], [0, 110, 219, 329]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 553, 553)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 110, 219, 329], [0, 110, 219, 329]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 553, 553)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 110, 219, 329], [0, 110, 219, 329]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 553, 553)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 110, 219, 329], [0, 110, 219, 329]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 85, 553, 553)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 15, 30, 45], [0, 110, 219, 329], [0, 110, 219, 329]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_318.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 105, 503, 503)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 49, 65], [0, 93, 186, 279], [0, 93, 186, 279]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_334.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 91, 480, 480)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 17, 34, 51], [0, 85, 171, 256], [0, 85, 171, 256]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_315.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 546, 546)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 107, 215, 322], [0, 107, 215, 322]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_346.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 549, 549)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 108, 217, 325], [0, 108, 217, 325]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 549, 549)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 108, 217, 325], [0, 108, 217, 325]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 549, 549)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 108, 217, 325], [0, 108, 217, 325]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 549, 549)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 108, 217, 325], [0, 108, 217, 325]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 549, 549)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 108, 217, 325], [0, 108, 217, 325]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_360.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 120, 522, 522)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 20, 40, 60, 80], [0, 99, 199, 298], [0, 99, 199, 298]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_362.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 96, 448, 448)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 19, 37, 56], [0, 112, 224], [0, 112, 224]]
number of tiles: 36
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_391.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 610, 610)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 193, 290, 386], [0, 96, 193, 290, 386]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 610, 610)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 193, 290, 386], [0, 96, 193, 290, 386]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 610, 610)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 193, 290, 386], [0, 96, 193, 290, 386]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 610, 610)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 193, 290, 386], [0, 96, 193, 290, 386]]
number of tiles: 100
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 89, 610, 610)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 33, 49], [0, 96, 193, 290, 386], [0, 96, 193, 290, 386]]
number of tiles: 100
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_411.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 80
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 103, 470, 470)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 16, 32, 47, 63], [0, 82, 164, 246], [0, 82, 164, 246]]
number of tiles: 80
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_378.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 93, 472, 472)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 35, 53], [0, 83, 165, 248], [0, 83, 165, 248]]
number of tiles: 64
using precomputed Gaussian
prediction done
predicting /exports/lkeb-hpc/smaijer/output/510/3d_fullres/nnUNetTrainerV2/510/imagesTs/panc_416.nii.gz
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 186, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73, 91, 110, 128, 146], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 186, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73, 91, 110, 128, 146], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 186, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73, 91, 110, 128, 146], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 186, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73, 91, 110, 128, 146], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 225
using precomputed Gaussian
prediction done
debug: mirroring True mirror_axes (0, 1, 2)
step_size: 0.5
do mirror: True
data shape: (1, 186, 588, 588)
patch size: [ 40 224 224]
steps (x, y, and z): [[0, 18, 36, 55, 73, 91, 110, 128, 146], [0, 91, 182, 273, 364], [0, 91, 182, 273, 364]]
number of tiles: 225
using precomputed Gaussian
prediction done
inference done. Now waiting for the segmentation export to finish...
postprocessing...
Done inferencing! Now start the evaluation.


Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet



Please cite the following paper when using nnUNet:

Isensee, F., Jaeger, P.F., Kohl, S.A.A. et al. "nnU-Net: a self-configuring method for deep learning-based biomedical image segmentation." Nat Methods (2020). https://doi.org/10.1038/s41592-020-01008-z


If you have questions or suggestions, feel free to open an issue at https://github.com/MIC-DKFZ/nnUNet

Program finished with exit code 0 at: Wed Jul  6 23:30:59 CEST 2022
