#!/bin/bash
#SBATCH -J PancreasAll
#SBATCH -p LKEBgpu
#SBATCH -N 1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=64GB
#SBATCH --gres=gpu:RTX6000:1
#SBATCH --error=/home/smaijer/logs/all/601/job.%J.err
#SBATCH --output=/home/smaijer/logs/all/601/job.%J.out
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=susy.maijer@lumc.nl

# Prepare nnUnet
echo "Starting at Thu Oct  6 21:35:50 CEST 2022"

echo "Running on hosts: $SLURM_JOB_NODELIST"
echo "Running on $SLURM_JOB_NUM_NODES nodes."
echo "Running $SLURM_NTASKS tasks."
echo "CPUs on node: $SLURM_CPUS_ON_NODE."
echo "Account: $SLURM_JOB_ACCOUNT"
echo "Job ID: $SLURM_JOB_ID"
echo "Job name: $SLURM_JOB_NAME"
echo "Node running script: $SLURMD_NODENAME"
echo "Submit host: $SLURM_SUBMIT_HOST"
echo "GPUS: $CUDA_VISIBLE_DEVICES or $SLURM_STEP_GPUS"
nvidia-smi
echo "Current working directory is /home/smaijer"

echo Load all modules..
module purge
module add system/python/3.10.2
echo Done with loading all modules. Modules:
module li
echo Activate conda env nnunet..
source /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/bin/activate
echo Verifying environment variables:
conda env config vars list
echo Installing hidden layer and nnUnet..
python -m pip install --upgrade git+https://github.com/FabianIsensee/hiddenlayer.git@more_plotted_details#egg=hiddenlayer
python -m pip install -editable /home/smaijer/code/nnUNet


echo Start preprocessing..
if [  == y ];
then
   nnUNet_plan_and_preprocess -t 601 --verify_dataset_integrity -tl 4 -tf 4
fi

echo Done preprocessing! Start training all the folds..
if [ -z /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS ];
then

    if [ ! -z AMOS ];
    then
         echo Run with specific identifier AMOS
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 0 -p AMOS
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 1 -p AMOS
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 2 -p AMOS
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 3 -p AMOS
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 4 -p AMOS
    else
        nnUNet_train 3d_fullres nnUNetTrainerV2 601 0
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 1
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 2
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 3
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 4 
    fi

    echo Done training all the folds! Now start the same command but with continue option, to generate log files
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 0 -c --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 1 -c --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 2 -c --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 3 -c --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 4 -c --val_disable_overwrite
    
    if [ ! -z AMOS ];
    then
	 nnUNet_train 3d_fullres nnUNetTrainerV2 601 0 -p AMOS -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 1 -p AMOS -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 2 -p AMOS -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 3 -p AMOS -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 4 -p AMOS -c --val_disable_overwrite
    else
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 0 -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 1 -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 2 -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 3 -c --val_disable_overwrite
         nnUNet_train 3d_fullres nnUNetTrainerV2 601 4 -c --val_disable_overwrite
    fi

else
    echo Use pretrained!
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 0 -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_0/model_best.model
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 1 -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_1/model_best.model
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 2 -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_2/model_best.model
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 3 -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_3/model_best.model
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 4 -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_4/model_best.model

    echo Done training all the folds! Now start the same command but with continue option, to generate log files
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 0 -c -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_0/model_best.model --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 1 -c -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_1/model_best.model --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 2 -c -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_2/model_best.model --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 3 -c -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_3/model_best.model --val_disable_overwrite
    nnUNet_train 3d_fullres nnUNetTrainerV2 601 4 -c -pretrained_weights /exports/lkeb-hpc/smaijer/results/nnUNet/3d_fullres/Task511/nnUNetTrainerV2__AMOS/fold_4/model_best.model --val_disable_overwrite
fi

echo Start postprocessing..
nnUNet_determine_postprocessing -t 601 -m 3d_fullres -tr nnUNetTrainerV2

echo Done postprocessing! Now start inferencing its own train and test files.
mkdir -p /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/601/imagesTr
mkdir -p /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/601/imagesTs
nnUNet_predict -i /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task601/imagesTr -o /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/601/imagesTr -t 601 -m 3d_fullres -tr nnUNetTrainerV2 -ctr lala
nnUNet_predict -i /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task601/imagesTs -o /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/601/imagesTs -t 601 -m 3d_fullres -tr nnUNetTrainerV2 -ctr lala

echo Done inferencing! Now start the evaluation.
nnUNet_evaluate_folder -ref /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task601/labelsTr -pred /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/601/imagesTr -l 1
nnUNet_evaluate_folder -ref /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task601/labelsTs -pred /exports/lkeb-hpc/smaijer/output/601/3d_fullres/nnUNetTrainerV2/601/imagesTs -l 1

echo "Program finished with exit code 0 at: Thu Oct  6 21:35:50 CEST 2022"
