#!/bin/bash
#SBATCH -J PancreasAll
#SBATCH -p LKEBgpu
#SBATCH -N 1
#SBATCH --ntasks=1
#SBATCH --cpus-per-task=8
#SBATCH --mem=64GB
#SBATCH --gres=gpu:RTX6000:1
#SBATCH --error=/home/smaijer/logs/all/523/job.%J.err
#SBATCH --output=/home/smaijer/logs/all/523/job.%J.out
#SBATCH --mail-type=BEGIN,END,FAIL
#SBATCH --mail-user=susy.maijer@lumc.nl

# Prepare nnUnet
echo "Starting at Sat Jul 30 11:02:30 CEST 2022"

echo "Running on hosts: $SLURM_JOB_NODELIST"
echo "Running on $SLURM_JOB_NUM_NODES nodes."
echo "Running $SLURM_NTASKS tasks."
echo "CPUs on node: $SLURM_CPUS_ON_NODE."
echo "Account: $SLURM_JOB_ACCOUNT"
echo "Job ID: $SLURM_JOB_ID"
echo "Job name: $SLURM_JOB_NAME"
echo "Node running script: $SLURMD_NODENAME"
echo "Submit host: $SLURM_SUBMIT_HOST"
echo "GPUS: $CUDA_VISIBLE_DEVICES or $SLURM_STEP_GPUS"
nvidia-smi
echo "Current working directory is /home/smaijer"

echo Load all modules..
module purge
module add system/python/3.10.2
echo Done with loading all modules. Modules:
module li
echo Activate conda env nnunet..
source /exports/lkeb-hpc/smaijer/venv_environments/pancreasThesis/bin/activate
echo Verifying environment variables:
conda env config vars list
echo Installing hidden layer and nnUnet..
python -m pip install --upgrade git+https://github.com/FabianIsensee/hiddenlayer.git@more_plotted_details#egg=hiddenlayer
python -m pip install -editable /home/smaijer/code/nnUNet


echo Start preprocessing..
if [ y == y ];
then
   nnUNet_plan_and_preprocess -t 523 --verify_dataset_integrity -tl 4 -tf 4
fi

echo Done preprocessing! Start training all the folds..
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 0
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 1
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 2
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 3
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 4

echo Done training all the folds! Now start the same command but with continue option, to generate log files
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 0 -c --val_disable_overwrite
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 1 -c --val_disable_overwrite
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 2 -c --val_disable_overwrite
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 3 -c --val_disable_overwrite
#nnUNet_train 3d_fullres nnUNetTrainerV2 523 4 -c --val_disable_overwrite

echo Start postprocessing..
#nnUNet_determine_postprocessing -t 523 -m 3d_fullres -tr nnUNetTrainerV2

echo Done postprocessing! Now start inferencing its own train and test files.
#mkdir -p /exports/lkeb-hpc/smaijer/output/523/3d_fullres/nnUNetTrainerV2/523/imagesTr
#mkdir -p /exports/lkeb-hpc/smaijer/output/523/3d_fullres/nnUNetTrainerV2/523/imagesTs
nnUNet_predict -i /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task523/imagesTr -o /exports/lkeb-hpc/smaijer/output/523/3d_fullres/nnUNetTrainerV2/523/imagesTr -t 523 -m 3d_fullres -tr nnUNetTrainerV2 
nnUNet_predict -i /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task523/imagesTs -o /exports/lkeb-hpc/smaijer/output/523/3d_fullres/nnUNetTrainerV2/523/imagesTs -t 523 -m 3d_fullres -tr nnUNetTrainerV2

echo Done inferencing! Now start the evaluation.
nnUNet_evaluate_folder -ref /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task523/labelsTr -pred /exports/lkeb-hpc/smaijer/output/523/3d_fullres/nnUNetTrainerV2/523/imagesTr -l 1 2 3
nnUNet_evaluate_folder -ref /exports/lkeb-hpc/smaijer/data/nnUNet_raw_data_base/nnUNet_raw_data/Task523/labelsTs -pred /exports/lkeb-hpc/smaijer/output/523/3d_fullres/nnUNetTrainerV2/523/imagesTs -l 1 2 3

echo "Program finished with exit code 0 at: Sat Jul 30 11:02:30 CEST 2022"
